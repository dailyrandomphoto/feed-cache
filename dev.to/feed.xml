<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Connecting to Multiple Channels with Agora on React-Native</title>
      <author>Ekaansh Arora</author>
      <pubDate>Mon, 18 Oct 2021 11:33:57 +0000</pubDate>
      <link>https://dev.to/ekaansharora/connecting-to-multiple-channels-with-agora-on-react-native-3hg8</link>
      <guid>https://dev.to/ekaansharora/connecting-to-multiple-channels-with-agora-on-react-native-3hg8</guid>
      <description>&lt;p&gt;Since the release of v3.0.0 of Agora’s SDK for React-Native users can now join an unlimited number of channels at the same time. But you can publish your own camera feed to only one channel at a time.&lt;/p&gt;

&lt;p&gt;This ability can be really handy in the case of multiple breakout rooms, where you can both send and receive video from a primary room while also receiving videos from secondary rooms.&lt;/p&gt;

&lt;p&gt;We’ll be using the &lt;a href="https://www.npmjs.com/package/@zhigang1992/react-native-agora"&gt;Agora RTC SDK for React Native&lt;/a&gt; for our example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-diving-into-how-it-works-lets-look-at-a-few-key-points"&gt;
  &lt;/a&gt;
  Before diving into how it works, let’s look at a few key points
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  We’ll use the SDK to connect to the first channel and join a video call normally. We’ll be streaming our video as well as receiving video from other users on the channel.&lt;/li&gt;
&lt;li&gt;  Next, we’ll join a second channel to receive video streams from all the users on that channel. Note that users on channel 2 will not be able to receive our video.&lt;/li&gt;
&lt;li&gt;  The two channels are separate: users on channel 1 and channel 2 don’t see each other. We can extend this functionality to join as many channels as required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#structure-of-our-example"&gt;
  &lt;/a&gt;
  Structure of our example
&lt;/h1&gt;

&lt;p&gt;This is the structure of the application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── android  
├── components  
│ └── Permission.ts
│ └── Style.ts  
├── ios  
├── App.tsx  
.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#download-the-source"&gt;
  &lt;/a&gt;
  Download the source
&lt;/h1&gt;

&lt;p&gt;If you want to jump to the code and try it out for yourself, you can look at the readme for steps on how to run the app. The code is open source and available on &lt;a href="https://github.com/EkaanshArora/Agora-RN-Multi-Channel"&gt;GitHub&lt;/a&gt;. The app uses channel-1 and channel-2 as the channel names.&lt;/p&gt;

&lt;p&gt;When you run the app, you’ll see two buttons: one to join and one to end the call. When you click start call, you should see your video in the top row, which contains videos from channel 1. The bottom row contains videos from channel 2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This guide does not implement token authentication which is recommended for all RTE apps running in production environments. For more information about token based authentication within the Agora platform please refer to this guide: &lt;a href="https://docs.agora.io/en/Video/token?platform=All%20Platforms"&gt;https://docs.agora.io/en/Video/token?platform=All%20Platforms&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#how-the-app-works"&gt;
  &lt;/a&gt;
  How the App Works
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#apptsx"&gt;
  &lt;/a&gt;
  App.tsx
&lt;/h2&gt;

&lt;p&gt;App.tsx will be the entry point into the app. We’ll have all our code in this file:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;We start by writing the import statements. Next, we define an interface for our application state containing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;appId&lt;/code&gt;: Our Agora App ID&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;token&lt;/code&gt;: Token generated to join the channel&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;channelNameOne&lt;/code&gt;: Name for channel 1&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;channelNameTwo&lt;/code&gt;: Name for channel 2&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;joinSucceed&lt;/code&gt;: Boolean value to store if we’ve connected successfully&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;peerIdsOne&lt;/code&gt;: Array to store the UIDs of other users in channel 1&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;peerIdsTwo&lt;/code&gt;: Array to store the UIDs of other users in channel 2&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
We define a class-based component: the &lt;code&gt;_rtcEngine&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtcEngine&lt;/code&gt; class, and the &lt;code&gt;_channel&lt;/code&gt; variable will store the instance of the &lt;code&gt;RtcChannel&lt;/code&gt; class, which we can use to access the SDK functions.

&lt;p&gt;In the constructor, we set our state variables and request permission for recording audio on Android. (We use a helper function from &lt;code&gt;permission.ts&lt;/code&gt;, as described below.) When the component is mounted, we call the init  function, which initializes the RTC engine and RTC channel. When the component unmounts, we destroy our engine and channel instances.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rtc-initialization"&gt;
  &lt;/a&gt;
  RTC initialization
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We use the App ID to create our engine instance. The engine instance will be used to connect to channel 1, where we both send and receive the video. We also create our channel instance using the name of our second channel. The channel instance will be used only to receive videos from channel 2.&lt;/p&gt;

&lt;p&gt;The RTC triggers a userJoined event for each user present when we join the channel and for each new user who joins after. The userOffline event is triggered when a user leaves the channel. We use event listeners on _engine and _channel to store and maintain our peerIdsOne and peerIdsTwo arrays containing the UIDs for users on both the channels.&lt;/p&gt;

&lt;p&gt;We also attach a listener for joinChannelSuccess to update our state variable which is used to render our UI while we’re in the call.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#functions-for-our-buttons"&gt;
  &lt;/a&gt;
  Functions for our buttons
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;startCall&lt;/code&gt; function joins both the channels using the joinChannel method.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;endCall&lt;/code&gt; function leaves both the channels using the leaveChannel method and updates the state.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;destroy&lt;/code&gt; function destroys the instances of our engine and channel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rendering-our-ui"&gt;
  &lt;/a&gt;
  Rendering our UI
&lt;/h2&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We define the render function for displaying buttons to start and end the call and to display user videos from both channels.&lt;/p&gt;

&lt;p&gt;We define a &lt;code&gt;_renderVideos&lt;/code&gt; function to render the videos from both our channels using the &lt;code&gt;_renderRemoteVideosOne&lt;/code&gt; and &lt;code&gt;_renderRemoteVideosTwo&lt;/code&gt; functions for channel 1 and channel 2. Each function contains scrollViews to hold videos from the channel. We use the UIDs stored in peerId arrays to render remote users’ videos by passing them to the &lt;code&gt;RtcRemoteView.SurfaceView&lt;/code&gt; component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#permissionts"&gt;
  &lt;/a&gt;
  Permission.ts
&lt;/h2&gt;

&lt;p&gt;We’re exporting a helper function to request microphone permissions from the Android OS.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#stylets"&gt;
  &lt;/a&gt;
  Style.ts
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Style.ts&lt;/code&gt; file contains the styling for the components.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;That’s how we can build a video call app that can connect to two channels simultaneously. You can refer to the &lt;a href="https://docs.agora.io/en/Video/API%20Reference/react_native/index.html"&gt;Agora React Native API Reference&lt;/a&gt; to see methods that can help you quickly add many features like muting the mic, setting audio profiles and audio mixing.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>tutorial</category>
      <category>mobile</category>
    </item>
    <item>
      <title>How to compile different languages source code files?</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Mon, 18 Oct 2021 11:02:02 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/how-to-compile-different-languages-source-code-files-a7g</link>
      <guid>https://dev.to/rakeshpotnuru/how-to-compile-different-languages-source-code-files-a7g</guid>
      <description>&lt;p&gt;The biggest mistake beginners do while started learning to program is using fancy IDE's (Integrated Development Environment). You should use the terminal at least to know how a specific language code is being executed and what's going on behind the scenes. So in this blog, I am going to tell you how to execute source code for a few languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Using notepad create the source code file for all the languages mentioned in this blog.&lt;/li&gt;
&lt;li&gt;Make sure you have respected compilers installed on your computer and add to path in environment variables in order use that compiler from anywhere.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started...
&lt;/h2&gt;

&lt;p&gt;Open your terminal or command prompt, change the current directory to the location where you created the source code file.&lt;/p&gt;

&lt;p&gt;For example: If all of my source code files are in the Programming folder in Desktop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\&amp;gt; cd Desktop\Programming
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;c:\Desktop\Programming&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-c"&gt;
  &lt;/a&gt;
  1. C
&lt;/h2&gt;

&lt;p&gt;Type this command in the prompt. Replace hello with your file name. (Hoping you have gcc compiler installed)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; gcc -o hello hello.c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will create an executable file with the extension ".exe". Now type the file name to execute the program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello world&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-c"&gt;
  &lt;/a&gt;
  2. C++
&lt;/h2&gt;

&lt;p&gt;C++ has also same procedure. Type this command in the prompt. Replace hello with your file name. (Hoping you have gcc compiler)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; gcc -o hello hello.cpp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will create an executable file with the extension ".exe". Now type the file name to execute the program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello world&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-java"&gt;
  &lt;/a&gt;
  3. Java
&lt;/h2&gt;

&lt;p&gt;To compile, run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; javac hello.java
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that &lt;code&gt;hello.class&lt;/code&gt; file will be generated, to run the code type &lt;code&gt;java &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; java hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-c"&gt;
  &lt;/a&gt;
  4. C#
&lt;/h2&gt;

&lt;p&gt;Compile with this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; csc hello.cs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate a executable file &lt;code&gt;hello.exe&lt;/code&gt;. You can simple double click it to open or type file name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; hello
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-javascript"&gt;
  &lt;/a&gt;
  5. JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript is browser side language, you can console in developer tools of your browser or use &lt;a href="https://nodejs.org"&gt;NodeJs&lt;/a&gt;.&lt;br&gt;
NodeJs is JavaScript run time, so you can execute JavaScript files using NodeJs. Here's how-&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure you have &lt;a href="https://nodejs.org/en/download/"&gt;NodeJs&lt;/a&gt; installed on your computer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Open terminal and simply type this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; node hello.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-go"&gt;
  &lt;/a&gt;
  6. Go
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go run hello.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-r"&gt;
  &lt;/a&gt;
  7. R
&lt;/h2&gt;

&lt;p&gt;You can use &lt;code&gt;Rscript&lt;/code&gt; to run &lt;code&gt;R&lt;/code&gt; programs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; Rscript hello.R
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-swift"&gt;
  &lt;/a&gt;
  8. Swift
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; swift hello.swift
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-ruby"&gt;
  &lt;/a&gt;
  9. Ruby
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; ruby hello.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-php"&gt;
  &lt;/a&gt;
  10. PHP
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;c:\Desktop\Programming&amp;gt; php hello.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output: &lt;code&gt;Hello World&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Hope this helps you! &lt;br&gt;
Save for reference.&lt;br&gt;
Connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/RakeshPotnuru"&gt;GitHub&lt;/a&gt;. Follow me for more 😃.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>👨🏽‍💻 How to Add GIF to your README.md</title>
      <author>YAQOAH</author>
      <pubDate>Mon, 18 Oct 2021 10:26:22 +0000</pubDate>
      <link>https://dev.to/yaqoah/how-to-add-gif-to-your-readmemd-2gep</link>
      <guid>https://dev.to/yaqoah/how-to-add-gif-to-your-readmemd-2gep</guid>
      <description>&lt;p&gt;In this post I will share with you two programs that I recommend for a &lt;em&gt;quick&lt;/em&gt; and &lt;em&gt;easy&lt;/em&gt; way to capture your screen and successfully add it to your project’s README.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-sharex"&gt;
  &lt;/a&gt;
  1)  &lt;a href="https://getsharex.com/"&gt;ShareX&lt;/a&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;At the time of writing this post ShareX is only supported in Windows (versions: 10, 8.1 and 7).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Features:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;~ Intuitive and Lightweight: I used it for my &lt;a href="https://github.com/yaqoah/Kogoro"&gt;personal project&lt;/a&gt;, the IU is incredibly straightforward, with an inkling of a modern look. &lt;/p&gt;

&lt;p&gt;~ Fast and responsive: with a number shortcuts which allows you to capture a specific window or any part of the screen, with an option to delay the screen for up to 5 seconds until you can launch your application. ShareX also does NOT show any ads!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ExXq8Nxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldejwr2yez4bb7bsbgr8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ExXq8Nxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ldejwr2yez4bb7bsbgr8.gif" alt="My Use Case: "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-lightshot"&gt;
  &lt;/a&gt;
  2)  &lt;a href="https://app.prntscr.com/en/"&gt;LightShot&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;LightShot is an alternative for ShareX, possibly just as good if not better. A cool feature found in LightShot is the reverse image google search, which allows you to look for similar images in Google, I can’t find a use for it myself but it is something someone may want to try. It is available for free in Windows and Mac - there is also a chrome plugin!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Finally to post it in GitHub, copy this to your README:&lt;/em&gt;&lt;br&gt;
&lt;code&gt;![Image Description](Image path or URL)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I hope you found this post helpful :) &lt;br&gt;
GitHub: &lt;a href="https://github.com/yaqoah"&gt;https://github.com/yaqoah&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>100daysofcode</category>
      <category>productivity</category>
      <category>python</category>
    </item>
    <item>
      <title>Backend Developer Learning Path 2021</title>
      <author>Coder</author>
      <pubDate>Mon, 18 Oct 2021 10:25:38 +0000</pubDate>
      <link>https://dev.to/codehacker/backend-developer-learning-path-2021-37c</link>
      <guid>https://dev.to/codehacker/backend-developer-learning-path-2021-37c</guid>
      <description>&lt;p&gt;&lt;span&gt;Want to become a Backend Web Developer in 2021? Being a fresher and not knowing what career to choose is something we all went through. But, if you have concluded to become a backend developer, we will help you to know the programming languages, tools and technologies that are often used for backend development. Please remember this roadmap is the extension of our previous blog on the&lt;/span&gt;&lt;span&gt; &lt;/span&gt;backend developer roadmap&lt;span&gt; &lt;/span&gt;&lt;span&gt;and is here to help you identify more areas to learn.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So let’s get started!&lt;/p&gt;
&lt;h2&gt;Who is a Backend Developer?&lt;/h2&gt;
&lt;p&gt;Backend developers deal with the logical side of the application. Backend development refers to server-side development that centers on scripting, databases, and web application architecture. In simple terms, the backend developer handles behind-the-scenes activities that take place while performing a function on the website or application. It’s the backend developer’s responsibility to write code that communicates with databases or APIs, creating libraries, working on data architecture and business processes, and so on.&lt;/p&gt;
&lt;p&gt;Backend development gives the foundation code to enable web apps to perform the actions users ask using the frontend and deliver the right outcome. But what are the technologies, tools, languages that you need to know about to become a backend developer? Let’s check that out!&lt;/p&gt;
&lt;h2&gt;Backend Web Developer RoadMap For 2021&lt;/h2&gt;
&lt;p&gt;Here’s the 2021 roadmap for the backend Web developer journey you have been waiting for. It consists of recommendations, alternate options, and learning as you go technologies and tools. &lt;/p&gt;

&lt;h2&gt;Skills A Backend Web Developer Need in 2021&lt;/h2&gt;
&lt;p&gt;With the 2021 roadmap mentioned above, you can clearly understand that backend development is a logical and technical side of the web app. So we are going to discuss technologies and tools that are essential to becoming a good backend developer.&lt;/p&gt;
&lt;h3&gt;1.&lt;span&gt; Basic Internet, Operating System and Frontend Knowledge&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Similar to frontend development, being a backend developer also requires learning the basics of the internet (like how it works, what is HTTP/HTTPS, working on browsers, DNS working, and what’s domain name and hosting).&lt;/p&gt;
&lt;p&gt;Once done learning about the internet, you need to learn general information about operating systems, i.e., memory management, terminal usage, OS working, process management, threads and concurrency, basic terminal commands, I/O management, and basic concepts of networking.&lt;/p&gt;

&lt;h3&gt;2. &lt;span&gt;Programming language&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Needless to say, a backend developer must learn a programming language to improve their coding skills. While Java is the recommended language to learn in backend development, you can also go for other languages like Javascript, C#, Python, Ruby and PHP.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.javascript.com/"&gt;JavaScript&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.java.com/"&gt;Java&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/"&gt;C#&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.ruby-lang.org/en/"&gt;Ruby&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.php.net/"&gt;PHP&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.&lt;span&gt; Version Control System&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;A version Control system is a tool that assists both frontend and backend developers to interact and handle changes done over time. It also gives information like what kind of changes are done and by whom. In short, a version control system amplifies the speed of the project by allowing collaboration between developers, removing errors possibilities, and even recovering the code in case of an accident.&lt;/p&gt;
&lt;p&gt;For backend development, you can use the following version control systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/github"&gt;GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://about.gitlab.com/"&gt;GitLab&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bitbucket.org/product/guides/getting-started/overview"&gt;BitBucket&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. &lt;span&gt;Database&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;In the context of a web application, a database is a brain that helps to make a web app dynamic. Whenever you search for a product or request logins, the database is responsible for storing data, accepting queries, fetching information and returning to the web app with the required outcome.&lt;/p&gt;
&lt;p&gt;Backend developers either use relational or NoSQL databases. Some of them are as follows:&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Relational Databases&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.microsoft.com/en-in/sql-server/sql-server-downloads"&gt;MS SQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.oracle.com/in/database/"&gt;Oracle&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://mariadb.com/"&gt;MariaDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;NoSQL Databases&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.mongodb.com/"&gt;MongoDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://rethinkdb.com/"&gt;RethinkDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Besides learning about a few of the databases mentioned above, you also need to understand some basic concepts of databases like ORMs, ACID, N+1 Problem, Transactions, Data Normalization and Indexes.&lt;/p&gt;
&lt;h3&gt;5. &lt;span&gt;APIs&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Application Programming Interfaces or APIs is an intermediary between services that allows them to interact with each other. Backend developers use APIs to make connections among different applications or services to provide an enhanced user experience through the frontend. Some of the APIs you should know about are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://restfulapi.net/"&gt;REST&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.json.org/"&gt;JSON&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.soapui.org/"&gt;SOAP&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/google/gson"&gt;GSON&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML-RPC&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"&gt;AES&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;6. &lt;span&gt;Caching&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Caching is the method to store a copy of a given resource in a cache (temporary storage location) and provide the data quickly whenever requested. The core aim of caching is to enhance the performance of data retrieval while reducing the requirement of accessing the underlying storage layer that is slow to process.&lt;/p&gt;
&lt;p&gt;Here is a list of caching techniques and tools you should be aware of.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/caching/cdn/"&gt;CDN&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Web_cache"&gt;Server Side&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.ibm.com/docs/SS6SGM_5.1.0/com.ibm.cobol51.aix.doc/PGandLR/tasks/tpfio52a.html"&gt;Client-Side&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;7. &lt;span&gt;Testing&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Backend testing is the process to check the database or server-side of the web app. The purpose of backend testing is to determine the efficiency of the database layer while ensuring it is free from data corruption, deadlocks or data loss. Testing methods that are used by backend developers include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Integration_testing"&gt;Integration Testing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.guru99.com/unit-testing-guide.html"&gt;Unit Testing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.javatpoint.com/functional-testing"&gt;Functional Testing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;8. &lt;span&gt;Code Analysis Tools&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Code analysis is a method for debugging and analyzing code to ensure it runs smoothly. You can refer to our previous blogs to learn about different methods and tools for analysis - Code Analysis Tools: Code’s Journey From Developers to Testers and Static Code Analysis Tools For Java To Provide Quality Measurements.&lt;/p&gt;
&lt;p&gt;Some of the tools used for code analysis are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.sonarlint.org/"&gt;SonarLint&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://junit.org/junit5/"&gt;JUnit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.jacoco.org/jacoco/trunk/doc/"&gt;JaCoCo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://pmd.github.io/pmd/"&gt;PMD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.qualys.com/"&gt;Qualys&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;9. &lt;span&gt;Architectural Patterns&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;An architectural pattern is a reusable solution to the recurring problems while developing the software. A few most commonly used architectural patterns consist of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Monolithic&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SOA&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Microservices&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CQRS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Event Sourcing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Serverless&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;10. &lt;span&gt;Message Broker&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;A message broker is a software that allows systems, apps and services to interact with one another to exchange information. A message broker is a module that translates the formal messaging protocol of the server into the formal messaging protocol of the client (receiver). You can learn one of the given message brokers to use in your future project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;RabbitMQ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kafka&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kinesis&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JBOSS messaging&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;11. &lt;span&gt;Containerization&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Containerization is the packaging of software code with all the necessary elements like frameworks, libraries and other dependencies, to make services isolated from each other in a container. Containerization is done by the backend developer to easily move or run a container, independent of its infrastructure or environment. One of the most used containers that you should learn is Docker.&lt;/p&gt;
&lt;h3&gt;12. &lt;span&gt;Design Patterns&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Design Patterns are elaborated solutions for a common set of problems that can occur during web app development. It offers a standardized approach for such recurring issues. Below is the list of different design patterns you should know about.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/singleton-design-pattern-java"&gt;Singleton&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/factory-design-patterns-in-java"&gt;Factory&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Observer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/decorator-design-pattern-java-example"&gt;Decorator&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/what-is-adapter-design-pattern"&gt;Adapter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/template-method-design-pattern"&gt;Template Method&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/mediator-design-pattern"&gt;Mediator&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/when-use-composite-design-pattern-java"&gt;Composite&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/facade-design-pattern"&gt;Facade&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/iterator-design-pattern"&gt;Iterator&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.decipherzone.com/blog-detail/proxy-design-pattern-in-java"&gt;Proxy&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;13. &lt;span&gt;Authentication Method&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;Authentication methods are used to verify the identity of a user or device who wants to access resources, data or applications. The authentication phase provides a user identity to the security system. Some of the methods used by backend developers are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.md5.cz/"&gt;MD5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Secure_Hash_Algorithms"&gt;SHA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/package/scrypt"&gt;Scrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Bcrypt"&gt;Bcrypt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.rsa.com/"&gt;RSA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;14.&lt;span&gt; WebHook&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;WebHook or reverse API is a way where an app provides real-time information to other applications. Unlike APIs, webhooks don’t require a request that follows a response. Instead, webhooks just sends data when it is available without a request with custom callbacks. This main feature of the webhook makes it efficient for both users and providers.&lt;/p&gt;
&lt;h3&gt;15. &lt;span&gt;WebSocket&lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;The WebSocket API is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply. WebSocket is a continuous connection between a client and the server. It provides a full-duplex, bi-directional channel for communication that works over HTTP via TCP/IP socket connection. Simply put, it is a thin and lightweight layer over TCP that makes it suitable for utilizing subprotocols to lodge messages.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Never Give Up On Learning&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Free Best 5 Coding Software For Windows 
And their Website💯</title>
      <author>Deepak Gupta</author>
      <pubDate>Mon, 18 Oct 2021 10:06:36 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/free-best-5-coding-application-for-windows-and-their-website-3o7m</link>
      <guid>https://dev.to/deepakguptacoder/free-best-5-coding-application-for-windows-and-their-website-3o7m</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone 🖤
&lt;/h3&gt;

&lt;p&gt;In this article, we look into 5 best Coding Software and Their Website. All the step in this article it's help you to grow and build your knowledge.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1visual-studio-code"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9ft4H6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79w07b0w5o5qnoz78839.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9ft4H6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79w07b0w5o5qnoz78839.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Visual Studio Code is a best for coding and editor with support for development operation all types of code here and it is easy to the tools a developer needs for a quick code-build-debug cycle.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2netbeans"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://netbeans.apache.org/"&gt;NetBeans&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yG8TDw9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfhk230ljf63jy63awkg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yG8TDw9f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfhk230ljf63jy63awkg.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Netbeans is a coding software where you are code are running easily and fast .NetBeans allows applications to be developed from a set of modular software components called modules. It is available for Windows,Mac, Android, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3vim"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://www.vim.org/download.php"&gt;Vim&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRT29AZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2h3wtby4qsahz7r98mp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRT29AZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2h3wtby4qsahz7r98mp.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Vim is a free and open-source, screen-based text editor program for Unix.and it's easy to use and working easily.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4bluefish"&gt;
  &lt;/a&gt;
  4.&lt;a href="http://bluefish.openoffice.nl/index.html"&gt;Bluefish&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmuCqjrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reyl9up9vnbbroiaqic9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmuCqjrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/reyl9up9vnbbroiaqic9.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Bluefish is a free software advanced text editor with a variety of tools for programming and website development. It supports coding languages including HTML, XHTML, CSS, XML, PHP, C, C++, JavaScript, Java, Go, Vala, Ada, D, SQL, Perl, ColdFusion, JSP, Python, Ruby, and shell.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5brackets"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://brackets.io/"&gt;Brackets&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ynApXnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl3k8zvo9lh07phghvt9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ynApXnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl3k8zvo9lh07phghvt9.jpeg" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Brackets is a discontinued source code editor with a primary focus on web development.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h5&gt;

</description>
      <category>codenewbie</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>webpack</category>
    </item>
    <item>
      <title>Deploying an Elixir Release using Docker on DigitalOcean </title>
      <author>Miguel Cobá</author>
      <pubDate>Mon, 18 Oct 2021 10:02:30 +0000</pubDate>
      <link>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-digitalocean-17pg</link>
      <guid>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-digitalocean-17pg</guid>
      <description>&lt;p&gt;Last time &lt;a href="https://dev.to/miguelcoba/deploying-a-phoenix-1-6-app-with-docker-and-elixir-releases-2la4"&gt;we created a Docker image&lt;/a&gt; and ran a container based on it. Now we'll deploy our Elixir Release Docker image in DigitalOcean.&lt;/p&gt;

&lt;p&gt;There are several approaches to this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let DigitalOcean access directly your GitHub or GitLab repository&lt;/li&gt;
&lt;li&gt;Put the image in Docker public registry where DigitalOcean can fetch it&lt;/li&gt;
&lt;li&gt;Put the image in DigitalOcean own Container Registry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article we'll use the first approach &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-repository"&gt;
  &lt;/a&gt;
  Create a repository
&lt;/h2&gt;

&lt;p&gt;I'll show how to do it in GitHub but should be similarly easy in GitLab&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h3&gt;

&lt;p&gt;Create a new repository&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LFxtTHju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uy0l67q6ngg1g0mor6s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LFxtTHju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uy0l67q6ngg1g0mor6s.png" alt="Create new repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;push the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin git@github.com:miguelcoba/saturn.git
git branch &lt;span class="nt"&gt;-M&lt;/span&gt; main
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#prepare-to-deploy-to-digitalocean"&gt;
  &lt;/a&gt;
  Prepare to deploy to DigitalOcean
&lt;/h3&gt;

&lt;p&gt;DigitalOcean requires some changes to our code in order to correctly connect to the DB from our Docker application.&lt;/p&gt;

&lt;p&gt;So far we have been establishing a plain, unencrypted connections between the application and the database. This won't work for DigitalOcean as they strictly enforce SSL when connecting to the database.&lt;/p&gt;

&lt;p&gt;In our case, that means that we need to enable SSL on the application side every time we open a connection to the database.&lt;/p&gt;

&lt;p&gt;First thing is to configure the Repo to use ssl. Open &lt;code&gt;runtime.ex&lt;/code&gt; and uncomment the &lt;code&gt;ssl: true&lt;/code&gt; line on the &lt;code&gt;Repo&lt;/code&gt; section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;  &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="ss"&gt;:saturn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Saturn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;ssl:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# socket_options: [:inet6],&lt;/span&gt;
    &lt;span class="ss"&gt;url:&lt;/span&gt; &lt;span class="n"&gt;database_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;pool_size:&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"POOL_SIZE"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"10"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will enable SSL for all the connections in the pool that the repository uses to connect to the database.&lt;/p&gt;

&lt;p&gt;We need to change the &lt;code&gt;Saturn.Release&lt;/code&gt; module that we use to run the migrations, because that also opens a connection to the database and we need it to start the &lt;code&gt;ssl&lt;/code&gt; application at the beginning.&lt;/p&gt;

&lt;p&gt;Change the &lt;code&gt;load_app&lt;/code&gt; function in the &lt;code&gt;Saturn.Release&lt;/code&gt; module to be like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;  &lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;load_app&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ensure_all_started&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:ssl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will ensure the ssl application is started before trying to connect to the database to run the migrations.&lt;/p&gt;

&lt;p&gt;We need to commit this changes to the repository. DigitalOcean works by deploying a specific branch from our repository and building the Docker image with what it finds in that branch. If you plan to use Docker as your production environment then is fine to commit this to the main branch and setup DigitalOcean to use the main branch for deployment.&lt;br&gt;
For this example, I will use a different branch to commit these changes and configure DigitalOcean to use that branch. I'll use a branch named &lt;code&gt;digital-ocean-deployment&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; digital-ocean-deployment
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Setup for deploying to DigitalOcean"&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin digital-ocean-deployment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-an-app-in-digitalocean"&gt;
  &lt;/a&gt;
  Creating an App in DigitalOcean
&lt;/h2&gt;

&lt;p&gt;Let's do the deployment to DigitalOcean.&lt;/p&gt;

&lt;p&gt;Go to your DigitalOcean dashboard and create a new App:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9nOqzXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow946bi2d3gm1tjuvy0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9nOqzXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow946bi2d3gm1tjuvy0a.png" alt="Create New App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select GitHub on the "Choose Source" screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHlHiW2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk43vltqe2a1ficafyji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHlHiW2C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mk43vltqe2a1ficafyji.png" alt="Choose GitHub as a source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first time you do this, GitHub will require you to authorize DigitalOcean to access your repositories. Follow the instructions and give access to the repository you just created&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rPvz1_6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mv9pf3up7gsf15fl48c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rPvz1_6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mv9pf3up7gsf15fl48c.png" alt="Authorize DigitalOcean"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3pl-g_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7photri7tku8fw4cfliq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3pl-g_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7photri7tku8fw4cfliq.png" alt="Authorization granted"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll get back to the "Choose source" and you'll see the list of authorized repositories there&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nk_tM4vM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hol6wb4q5048aj6qcgw4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nk_tM4vM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hol6wb4q5048aj6qcgw4.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select your repository and you'll see that the &lt;code&gt;main&lt;/code&gt; branch is selected automatically&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5y9mbm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh5ucjauljbc93ndpl0s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5y9mbm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh5ucjauljbc93ndpl0s.png" alt="Repository selected"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're using &lt;code&gt;main&lt;/code&gt; that's fine. For this article, I'll change it to the &lt;code&gt;digital-ocean-deployment&lt;/code&gt; branch:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0f9z3MD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kptcvj3e1guhz05bw1xd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0f9z3MD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kptcvj3e1guhz05bw1xd.png" alt="Branch selected"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Next to move to the "Configure your app" page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VeWbv3RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0mb007cbxrldeyca8sc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VeWbv3RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0mb007cbxrldeyca8sc.png" alt="Configure app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to configure the environment variables that DigitalOcean will provide to our Docker container in runtime. We can omit the &lt;code&gt;PORT&lt;/code&gt; environment variable as DigitalOcean automatically provides it. We have to create the &lt;code&gt;POOL_SIZE&lt;/code&gt;, &lt;code&gt;DATABASE_URL&lt;/code&gt;, and &lt;code&gt;SECRET_KEY_BASE&lt;/code&gt;. Let's start with the last one. &lt;/p&gt;

&lt;p&gt;Click on the Edit link in the "Environment Variables" section. Then, in a terminal execute this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mix phx.gen.secret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a variable named SECRET_KEY_BASE and put the value you got from the command in it. Check the "Encrypt" option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6KHu0LWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3c3vycrt7ao2eg8w0o60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6KHu0LWc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3c3vycrt7ao2eg8w0o60.png" alt="SECRET_KEY_BASE environment variable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now create a &lt;code&gt;POOL_SIZE&lt;/code&gt; with value 2 and a DATABASE_URL with value &lt;code&gt;${db.DATABASE_URL}&lt;/code&gt;. These two don't need to be encrypted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CGyIJOdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no3edzhlly56ak0aasib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CGyIJOdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no3edzhlly56ak0aasib.png" alt="Environment variables"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need to create a database. Click on the "Add a Database" button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elWWadeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckx09yn10sk51bpuwlii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elWWadeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckx09yn10sk51bpuwlii.png" alt="Add a Database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Accept the default values for the database and now you're ready to create the App in DigitalOcean.&lt;/p&gt;

&lt;p&gt;One thing to note: the DATABASE_URL environment variable is referring to this database we just created. It will be replaced with the correct value to connect to this database when the application starts. &lt;/p&gt;

&lt;p&gt;Click next to proceed to the "Name your web service" page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JB0tiUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mo1x24oygrynzmz9rjyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JB0tiUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mo1x24oygrynzmz9rjyd.png" alt="Name your web service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Accept the defaults and click Next. You're now in the "Finalize and launch" page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--odO3Q2_J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41zk6rgpq48rzsni80t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--odO3Q2_J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41zk6rgpq48rzsni80t.png" alt="Finalize and launch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click the "Launch Basic App" and you'll see your app being created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cXvDjtvT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6mbmcz5ptcxoiirvg86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cXvDjtvT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6mbmcz5ptcxoiirvg86.png" alt="App creation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DigitalOcean will now:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Access your repository&lt;/li&gt;
&lt;li&gt;Clone it,&lt;/li&gt;
&lt;li&gt;Detect the &lt;code&gt;Dockerfile&lt;/code&gt; in it&lt;/li&gt;
&lt;li&gt;Build a Docker image from it&lt;/li&gt;
&lt;li&gt;Push it to their own Container Registry&lt;/li&gt;
&lt;li&gt;Provision the database&lt;/li&gt;
&lt;li&gt;Set up environment variables&lt;/li&gt;
&lt;li&gt;Provision a server to run the Docker container&lt;/li&gt;
&lt;li&gt;Run the application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can check the progress by inspecting the logs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4sm0xE21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjhkgnn9okgi093afqmx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4sm0xE21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjhkgnn9okgi093afqmx.png" alt="Realtime logs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the end you'll have your app deployed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHjf_nMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a181y8luyj8zy7q8065r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHjf_nMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a181y8luyj8zy7q8065r.png" alt="Deployment successful"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-migrations"&gt;
  &lt;/a&gt;
  Run the migrations
&lt;/h2&gt;

&lt;p&gt;You can access the elixir container console and run the migrations. Go to the "Console" tab and there evaluate the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/saturn &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;"Saturn.Release.migrate"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qeYtVrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d26yrhf05vwqjj767qbm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qeYtVrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d26yrhf05vwqjj767qbm.png" alt="Run DB migrations"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, visit the application by clicking the "Live App" button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDHmc2He--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o334rl97jo1slhu26zvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDHmc2He--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o334rl97jo1slhu26zvx.png" alt="Live App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll see your app running in DigitalOcean's infrastructure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3wD1ETi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbn2gc4egauhv6ebh4ml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3wD1ETi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbn2gc4egauhv6ebh4ml.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are done!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;I am Miguel Cobá. Follow me to get more info about Elixir, Elm, or writing eBooks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/MiguelCoba_"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/miguelcoba"&gt;dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashnode.com/@miguelcoba"&gt;hashnode.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>digitalocean</category>
      <category>elixir</category>
      <category>deployment</category>
    </item>
    <item>
      <title>Why React js is the Best Framework for Front-End Development</title>
      <author>shivanimude</author>
      <pubDate>Mon, 18 Oct 2021 09:55:07 +0000</pubDate>
      <link>https://dev.to/shivanimude/why-react-js-is-the-best-framework-for-front-end-development-coo</link>
      <guid>https://dev.to/shivanimude/why-react-js-is-the-best-framework-for-front-end-development-coo</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;React JS is a JavaScript library that is used for building front-end user interfaces. Some of the reasons to use React JS are its fast rendering, lightweight, modularity, and scalability. This makes React JS an ideal choice for UI developers. It has made its way into many popular websites like Facebook, Instagram, Netflix, etc.&lt;/p&gt;

&lt;p&gt;React JS is designed for building user interfaces. It can perform on small screens as well as large screens, which makes it an ideal solution for mobile apps. React JS uses a virtual DOM to keep the views of the app up-to-date with data changes without touching the DOM directly.&lt;/p&gt;

&lt;p&gt;To ensure cost-effective and fast-paced &lt;a href="https://www.cronj.com/react/react-frontend-development"&gt;react frontend development&lt;/a&gt; you must make sure that you have all the information in-store. That includes all the relevant information about the concept of your product and the market along with the credentials of the React js frontend development company you are going to work with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Top 5 Reasons to Use React JS for Your Front-End Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The reasons for using React JS are given below:&lt;/p&gt;

&lt;p&gt;1) React JS boosts performance by rendering at 60 Frames Per Second.&lt;/p&gt;

&lt;p&gt;2) It has a smooth scrolling experience because of its virtual DOM.&lt;/p&gt;

&lt;p&gt;3) Its one-way data flow makes it easier to debug and less error-prone.&lt;/p&gt;

&lt;p&gt;4) As it uses less memory than native apps, you can create high-quality apps quickly. &lt;/p&gt;

&lt;p&gt;5) Its declarative programming paradigm makes it easier to work with data structures in real-time applications like gaming and live editing of content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools To Get You Started With React JS Development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are many new front-end frameworks popping up in the developer world. One of the more popular one is React JS. &lt;/p&gt;

&lt;p&gt;React is a JavaScript library created by Facebook and Instagram engineers because they felt there were some shortcomings with traditional MVC (Model View Controller) architectures in web development, especially around updating data on the web page without refreshing the entire browser. React Js is quickly becoming one of the most popular front-end frameworks for developing single-page applications and websites. &lt;/p&gt;

&lt;p&gt;There are many different tools that can get you started on your React JS development process, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Yeoman&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Webpack&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create React App&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CodePen&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why React is the best solution for front-end development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are three widely used frameworks available in the market: Angular, React, and Ember for a front-end web application. React is a better choice than both of them, mainly because React is entirely different from other frameworks.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://www.cronj.com/react/react-frontend-development"&gt;react js front end development&lt;/a&gt; is an open-source library built by Facebook. React, while being similar to traditional MVC frameworks in every aspect, does provide more features to create front-end web applications compared to other frameworks.&lt;/p&gt;

&lt;p&gt;Reactjs has been created to bring simplicity to front-end development. It’s designed to be easy to pick up, even for beginners. ReactJS works on both modern browsers (IE 9+) and older browsers. This makes it a great fit for developers working with AngularJS, Ember.js, Backbone.js, or any other framework with backward compatibility issues.&lt;/p&gt;

&lt;p&gt;React, with its unified and abstract views and functions, and fast architecture is widely used and adopted. It is a modular and scalable framework with clear architecture that enables developers to focus on the task of building innovative, beautiful, and powerful web apps. These apps have great interactivity and pixel-perfect performances.&lt;/p&gt;

&lt;p&gt;Single Page Application (SPA) is created and developed by Web Developers using Reactjs. In SPA, the application is split into multiple web pages that can be rendered on a web browser in a single application page. Basically, when you look at a SPA from a Javascript or Java Language perspective, all that it means is that the same application is defined from different Javascript and Java code-base and compiled into a single HTML page.&lt;/p&gt;

&lt;p&gt;Below are some examples of Single Page Applications&lt;/p&gt;

&lt;p&gt;PayPal, Pinterest, Gmail, Facebook&lt;/p&gt;

&lt;p&gt;Online banking&lt;/p&gt;

&lt;p&gt;CRM Application&lt;/p&gt;

&lt;p&gt;VR App&lt;/p&gt;

&lt;p&gt;VR Facebook App&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>How fast is your code?</title>
      <author>Shuvo</author>
      <pubDate>Mon, 18 Oct 2021 09:55:03 +0000</pubDate>
      <link>https://dev.to/0shuvo0/how-fast-is-your-code-31ji</link>
      <guid>https://dev.to/0shuvo0/how-fast-is-your-code-31ji</guid>
      <description>&lt;p&gt;You ever wanted to know how long does a block of your code takes to execute? Well you have come to the right place.&lt;br&gt;
You can simply wrap your block of code with &lt;strong&gt;console.time&lt;/strong&gt; function to measure how long your code took to execute.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Label A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;999999&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;99999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Label A&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ms1QCnH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/121l0i3vvbt5uw04wl06.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ms1QCnH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/121l0i3vvbt5uw04wl06.png" alt="Console.time demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure to check out my other articles also &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How To Choose The Right DRM Solution For Your Business? </title>
      <author>Rahul Rana</author>
      <pubDate>Mon, 18 Oct 2021 09:54:09 +0000</pubDate>
      <link>https://dev.to/ableish/how-to-choose-the-right-drm-solution-for-your-business-403k</link>
      <guid>https://dev.to/ableish/how-to-choose-the-right-drm-solution-for-your-business-403k</guid>
      <description>&lt;p&gt;In the past few years, there has been an exponential increase in video consumption. According to Statista, in 2019 alone, the number of digital video viewers was 2.6 billion, which is reported to increase up to 3.1 billion in 2023. With the increase in the number of viewers, the number of platforms catering to them also increased. A few years back Netflix was the only major player in the video streaming market. But now there are many more platforms, including Amazon Prime, Disney Plus, Hulu, and many more.&lt;/p&gt;

&lt;p&gt;With so many streaming platforms available, users often prefer to pirate content rather than pay for a particular platform. In this current scenario, if you don’t focus much on video protection, chances are that your videos will be downloaded and freely available for users. This in turn hurts your revenue by a lot, as users would rather prefer to watch your content for free.&lt;/p&gt;

&lt;p&gt;The movie industry alone suffers an annual loss of revenue of about 40 and $97.1 billion. If your account for eLearning, personal wellness, and other online platforms, this number can rise up even more.&lt;/p&gt;

&lt;p&gt;You don’t necessarily have to lose your revenue due to piracy. DRM solutions or Digital Rights Management, solely exist for this purpose- to save your videos from any illegal access.&lt;/p&gt;

&lt;p&gt;But then, you might be wondering, what exactly is a DRM Solution? How can it help you? And many more questions. But you don’t have to worry about it, as you’ll get an answer to these questions and more. So, fasten your seat belts and bring out your notepads. Cause this is going to be a ride and not that one filled with just joy and excitement. Which only riddles you with guilt afterward. You’re only going to come out of this journey wiser (hopefully!?)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-a-drm-solution"&gt;
  &lt;/a&gt;
  What Is a DRM Solution?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.vdocipher.com/blog/in/drm-solution"&gt;DRM Solution&lt;/a&gt; is essentially a Digital Rights Management Software, which ensures that your content is only accessible by anyone you authorize. You can use &lt;a href="https://www.vdocipher.com/blog/2020/12/video-drm/"&gt;Video DRM&lt;/a&gt; Software to make sure that your content is only accessible by the user you authorize and you can even manage the browser or devices they consume your content on.&lt;/p&gt;

&lt;p&gt;In a lot of cases even though the videos are encrypted, the key used to decrypt the video is often easily accessible. Any hacker with some knowledge can then easily get access to the encryption key and then access your content. Once he’s downloaded the video it’s then easy to spread it to other pirates&lt;/p&gt;

&lt;p&gt;With a DRM solution, your encryption keys are hidden and aren’t accessible to anyone unless authorized by you. This way you protect your videos from any potential hacker or download tools. This makes sure that your content is not pirated and you don’t lose any revenue due to piracy.&lt;/p&gt;

&lt;p&gt;In fact, with a DRM solution, video platforms tend to see a rise in their revenue. Read this case study by Vdocipher on how users end up raising their revenues up to 990% with the help of a DRM Solution.&lt;/p&gt;

&lt;p&gt;A DRM solution caters to different forms of content, they can be -video, audio, video games, comics, ebooks, etc. In this blog, I’ll focus on DRM solutions for video and audio streaming.&lt;br&gt;
But before that, let’s have a look at what DRM protected content exactly means.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-does-drmprotected-mean"&gt;
  &lt;/a&gt;
  What Does “DRM-Protected” Mean?
&lt;/h1&gt;

&lt;p&gt;The phrase “DRM protected” means that the digital content it is being applied to is restricted in how it can be used. “Digital rights management” is the term that describes a systematic authorization for the use of copyrighted material.&lt;/p&gt;

&lt;p&gt;A DRM protected content is nothing but the digital content on which DRM protection is applied. Basically, any piece of digital content you protect with a DRM solution would be considered as DRM protected content.&lt;/p&gt;

&lt;p&gt;As mentioned in the above section, content becomes DRM protected when you apply a certain set of rules on your copyrighted content to restrict any unauthorized access.&lt;/p&gt;

&lt;p&gt;These DRM restrictions are usually against downloading or making a copy of your video. Also, the number of times your videos are being accessed and even the devices on which the video is being viewed. These DRM restrictions can be as simple or complex according to your requirements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-does-drm-software-ensure-protection-for-your-videos"&gt;
  &lt;/a&gt;
  How does DRM Software ensure protection for your Videos?
&lt;/h1&gt;

&lt;p&gt;Before I take a deep dive into how DRM solutions work, you’ll first need to understand what video encryption is. Then later I’ll show you how a Video DRM solution makes encryption even better to ensure that your videos are protected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-encryption"&gt;
  &lt;/a&gt;
  Video Encryption
&lt;/h2&gt;

&lt;p&gt;Video encryption is basically the process of encoding your videos to a non-video secure format. This ensures that no one can’t access your raw video files. When anyone wants to access the file, they’ll only get access to an encrypted file which is just random gibberish.&lt;/p&gt;

&lt;p&gt;Encryption can not be broken and the encrypted files can only be accessed with the help of an encryption key. But then the encryption key exchange is where the weakness lies for any standard video encryption technology such as HLS, RTMP or AES-128. Due to the weak key exchange, encryption keys can be accessed by hackers to decrypt and then access the video.&lt;/p&gt;

&lt;p&gt;This ultimately defeats the initial purpose of video encryption. Although it would hinder anyone with no technical knowledge, anyone with some understanding of how to access the keys can easily work it out and share the video file with others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#drm-based-encryption-to-protect-your-videos"&gt;
  &lt;/a&gt;
  DRM based encryption to protect your videos
&lt;/h2&gt;

&lt;p&gt;DRM takes care of this exact weakness in video encryption and makes sure that the encryption key is not accessible by anyone unless authorized. A video DRM software encrypts the video and even protects the encryption key behind a BlackBox or CDM, which cannot be accessed by anyone. Before going into what a CDM is, you’ll need to know that there are different DRM solutions, which are used together to protect your content.&lt;/p&gt;

&lt;p&gt;A typical video DRM solution consists of multi DRM, these different DRMS caters to different devices and browsers. These different DRM solutions are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.vdocipher.com/blog/widevine-drm-hollywood-video/"&gt;Google Widevine DRM&lt;/a&gt; solution: It supports Desktop/Laptop (Windows, Mac, Linux) Chrome, Firefox, Edge. Android Chrome, Edge, Android TV, Android TV, Chromecast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.vdocipher.com/blog/fairplay-drm-ios-safari-html5/"&gt;Apple Fairplay DRM&lt;/a&gt; Solution: It supports Mac Safari, IOS Safari, IOS App&lt;/p&gt;

&lt;p&gt;Microsoft Playready DRM solution: It supports Edge in Windows. Windows Edge is also supported by Google Widevine, so Playready is not an absolute necessity.&lt;/p&gt;

&lt;p&gt;DRM solution BlackBox the encryption keys in CDM or Content Decryption Module. This CDM, even though on your device, can not be accessed by you. This protects the key as it is kept in the CDM and it can’t be accessed by you or anyone. The only way to access the videos is through Encrypted Media Extensions (EMEs), which are sent via the respective Video DRM.&lt;/p&gt;

&lt;p&gt;As Google and Apple have some control over your browser, OS, hardware or all of these. They can exercise more control and security for &lt;a href="https://www.vdocipher.com/page/drm"&gt;DRM encrypted streaming&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#choosing-a-drm-service-provider-what-features-to-look-for"&gt;
  &lt;/a&gt;
  Choosing a DRM service provider: what features to look for?
&lt;/h1&gt;

&lt;p&gt;When choosing a DRM software, there are certain features that can make your content even more protected. One of these can be dynamic watermarking, which inhibits users from screen grab video. These are the features that you need to look out for in a DRM Solution:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encrypted-drm-streaming-to-prevent-download"&gt;
  &lt;/a&gt;
  Encrypted DRM Streaming to Prevent Download
&lt;/h2&gt;

&lt;p&gt;First and foremost is obviously the Video DRM protection. You need to make sure that the DRM service provider supports both Widevine DRM as well as Fairplay DRM. Having the two DRM is an absolute necessity as they pretty much guarantee DRM support on all the major devices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screen-capture-blocking"&gt;
  &lt;/a&gt;
  Screen Capture Blocking
&lt;/h2&gt;

&lt;p&gt;Another major feature you would require is a screen capture block. Even though the video downloads are blocked, users still can record your screen to capture videos. You need to make sure that the DRM Solution you go for stops any type of screen capture.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-watermarking-with-moving-user-details"&gt;
  &lt;/a&gt;
  Dynamic Watermarking with moving user details
&lt;/h2&gt;

&lt;p&gt;Dynamic watermarking helps to discourage any screen capture. You can add the IP address, User-Id, and Email-Id to the screen. Using these, you can identify the point of origin of video piracy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ip-geo-amp-time-based-restriction"&gt;
  &lt;/a&gt;
  IP, Geo &amp;amp; Time Based Restriction
&lt;/h2&gt;

&lt;p&gt;Sometimes you need to restrict video playback in certain locations or devices. A Video DRM solution can help you restrict access to a particular Geo/IP. Also, you can put restrictions on total user video playtime&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How Does a Video Production Company Work From the Inside?</title>
      <author>Explain Ninja</author>
      <pubDate>Mon, 18 Oct 2021 09:33:51 +0000</pubDate>
      <link>https://dev.to/explain_ninja/how-does-a-video-production-company-work-from-the-inside-3f39</link>
      <guid>https://dev.to/explain_ninja/how-does-a-video-production-company-work-from-the-inside-3f39</guid>
      <description>&lt;p&gt;Video production is one of the most creative ways to produce videos for various needs. This process includes a large amount of work that a professional team must perform. Video production plays a unique role in marketing. After all, the final result of the video depends on your product marketing strategy. What does a video production company do to create the ideal material? Let’s check it out now.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;What is a Video Production Company?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;A &lt;/em&gt;&lt;a href="https://explain.ninja/about/"&gt;&lt;em&gt;production studio&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is a company of professionals specializing in producing video products of any complexity. A good production studio with a full range of services, from creative development, concept and ending with ready-made video solutions, is what you need to produce high-quality material for any business.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today, there are a large number of areas in which companies that are engaged in video production may work. Among these areas, the main difference is between those that are videographers and video producers. To make the right decision for your business marketing, make sure you understand what the primary difference in model is.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;What’s the Difference Between a Videographer and a Video Production Company?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Both business owners and marketers who need videos for their company often face the same dilemma: whom to choose as a performer. The choice is usually small. This is either a freelance videographer or a &lt;a href="https://explain.ninja/contact-us/"&gt;video production studio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What is a production company? -  It is an officially registered company; each of the employees is highly specialized. The studio creative director forms a team of scriptwriters, directors, cameramen, editors, motion designers, and other specialists. The main customers of the company may be legal entities, government agencies, and other corporate clients.&lt;/p&gt;

&lt;p&gt;Such companies are often called video production studios, which are the agencies that professionally create video advertisements, films, promotions and TV shows, etc.&lt;/p&gt;

&lt;p&gt;A videographer is primarily an independent specialist who works on freelance principles. It’s more likely an individual entrepreneur, a highly-skilled producer who shoots and edits videos for various niches. The main customers are individuals mostly. However, there may be exceptions, too.&lt;/p&gt;

&lt;p&gt;If you’re a business owner, or a marketer, then the studio will be a better choice.&lt;/p&gt;

&lt;h2&gt; &lt;/h2&gt;

&lt;h2&gt;What Does a Video Production Company Do?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;What does a production company do? Depending on their focus, it may be engaged in commercials, explainer videos, and filming documentaries, non-standard social or other projects.  Its work stands on three major stages: pre-production, production, and post-production. There’s much work to do on each of them.&lt;/p&gt;

&lt;h3&gt;1.Conduct product and market research&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Pre-production is a planning stage. Every project starts with research and looking for deeper insights into the business and its audience. Based on the goal, audience, and context, the producer, as part of the creative team, forms the project's concept, timeline, and budget. &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;2. Meet and collaborate with clients&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;At this stage, you get to know the client, the task you’re going to work on and discuss the ideas. First, it is important to understand the goal, audience and the context of the video you want to create.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There’s an idea that one video may solve only one goal at once. It is very difficult to convey two messages in a 10-30 second video explainer. So, the client needs to make a choice: either to inform the audience only, or create a brand image, etc.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That would be clever to squeeze multiple goals into the series of videos, then.&lt;/p&gt;

&lt;h3&gt; &lt;/h3&gt;

&lt;h3&gt;3. Audition actors, source props, and create wardrobe pieces&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Casting may be the most exciting stage of the work. You may organize a pre-production meeting (PPM). It is a meeting with a client, where the shooting day is discussed in as much detail as possible. Clothes, decorations, props, models are finally approved on it. PPM with the client must go before filming – you make sure all are on the same page to avoid miscommunication.&lt;/p&gt;

&lt;h3&gt;4. Film videos and record audio clips&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Here, the team may already pass over to the next stage of video production, where they film material and record voices based on the script, etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Something always goes wrong. A producer here is a person who has several ready-made solutions/alternatives as a backup.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Everyone has an idea of what an ideal process should look like and what’s right or wrong. Taking apart the shooting day into fragments together, you may understand what to fix in the future.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;6. Mix audio and music tracks&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The text must be thought over from scratch. Voiceovers are to be ready before you decide on the final cut. The essential selection of tracks for a video will make life easier for everyone. If you write music yourself, tell the client what the composer's track is, choose a reference by style and mood, etc.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;7. Create animations, motion graphics, and SFX&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Some video production involves special effects, graphics or other. Even storyboards are great way to start, support your video production, &lt;a href="https://explain.ninja/process/"&gt;improve the process&lt;/a&gt; and produce better quality material. For this part of work, you will need great experienced motion designers.&lt;/p&gt;

&lt;p&gt;Paradoxically, but the post-production stage should be planned at pre-production, so that to keep the top specialists on board till the end.&lt;/p&gt;

&lt;h3&gt;8. Post videos online and contact TV stations for broadcasting&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Sometimes video production companies also organize video distribution over the media or share the ready video content on other platforms as per the client’s agreement. Moreover, they may further promote it and gather analytics, etc.&lt;/p&gt;

&lt;p&gt;That depends on how many tasks the client wants the company to perform within the contract.  A more common scenario is when clients distribute the material on their side, but still. It also may depend on the production company description, the way it positions its services, etc.&lt;/p&gt;

&lt;p&gt;Do not show raw material to the client. But even worse than that is to delay the delivery of the video. A product delayed for a week means the client's expectations increased twice. And who knows if you're going to meet them.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Video Production Company vs Studio: What is Better for You?&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You should also realize that there are various types of production companies or studios. A &lt;strong&gt;studio may produce films for the general public, while companies specializing in&lt;/strong&gt; video production work for many other companies to help them create their desired content.&lt;/p&gt;

&lt;p&gt;Generally, studios may be much larger and often acquire a corporate business configuration. They are trusted in terms of how does a production company work, what create, how cater at their clients and so on.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Many modern companies are often recommended to use the services of video production companies when they need to come up with the video content ideas for. What is a video production company and what is video production are the first things to understand before you pick an ideal video maker for your business needs.&lt;/p&gt;

&lt;p&gt;After all, with the help of a video, you may reveal your business services and goods in a new way. Since modern users prefer only high-quality advertising campaigns, what do production companies do is meeting those high expectations and connecting their end-users with your products in an incredible way.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Asp Net Core - Rest API Authorization with JWT (Roles Vs Claims Vs Policy) - Step by Step</title>
      <author>Mohamad Lawand</author>
      <pubDate>Mon, 18 Oct 2021 09:33:33 +0000</pubDate>
      <link>https://dev.to/moe23/asp-net-core-rest-api-authorization-with-jwt-roles-vs-claims-vs-policy-step-by-step-5bgn</link>
      <guid>https://dev.to/moe23/asp-net-core-rest-api-authorization-with-jwt-roles-vs-claims-vs-policy-step-by-step-5bgn</guid>
      <description>&lt;p&gt;In this article we will go through AspNet Core Authorisation (Roles, Claims and Policies). When do you want to use each and give you a better understanding on they fit together.&lt;/p&gt;

&lt;p&gt;So what we will cover today:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication vs Authorisation

&lt;ul&gt;
&lt;li&gt;What is Authentication&lt;/li&gt;
&lt;li&gt;What is Authorisation&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Authorisation type

&lt;ul&gt;
&lt;li&gt;What is a Role&lt;/li&gt;
&lt;li&gt;What is a Claim&lt;/li&gt;
&lt;li&gt;What is a Policy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Ingredients&lt;/li&gt;
&lt;li&gt;Code and Implementations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can watch the full video on YouTube &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eVxzuOxWEiY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can find the source code on GitHub &lt;br&gt;
&lt;a href="https://github.com/mohamadlawand087/v48-AspNetCore-Authorisation"&gt;https://github.com/mohamadlawand087/v48-AspNetCore-Authorisation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is Part 4 of API dev series you can check the different parts by following the links:&lt;br&gt;
Part 1:&lt;a href="https://dev.to/moe23/asp-net-core-5-rest-api-step-by-step-2mb6"&gt;https://dev.to/moe23/asp-net-core-5-rest-api-step-by-step-2mb6&lt;/a&gt;&lt;br&gt;
Part 2: &lt;a href="https://dev.to/moe23/asp-net-core-5-rest-api-authentication-with-jwt-step-by-step-140d"&gt;https://dev.to/moe23/asp-net-core-5-rest-api-authentication-with-jwt-step-by-step-140d&lt;/a&gt;&lt;br&gt;
Part 3: &lt;a href="https://dev.to/moe23/refresh-jwt-with-refresh-tokens-in-asp-net-core-5-rest-api-step-by-step-3en5"&gt;https://dev.to/moe23/refresh-jwt-with-refresh-tokens-in-asp-net-core-5-rest-api-step-by-step-3en5&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#authentication-vs-authorisation"&gt;
  &lt;/a&gt;
  Authentication vs Authorisation
&lt;/h2&gt;

&lt;p&gt;Before we dive into this topic too deep, despite the similar-sounding terms, authentication and authorisation are separate steps in the login process.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h3&gt;

&lt;p&gt;Authentication is the act of validating that users are whom they claim to be. This is the first step in any security process.&lt;/p&gt;

&lt;p&gt;Logging into your email or unlocking your phone is a form of authenticaiton, where you are required to give some sort of credentials so the system will let you in and you can view your information.&lt;/p&gt;

&lt;p&gt;Authentication can take many forms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Passwords.&lt;/strong&gt; Usernames and passwords ****are the most common authentication factors. If a user enters the correct data, the system assumes the identity is valid and grants access.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;One-time pins.&lt;/strong&gt; Grant access for only one session or transaction.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Authentication apps.&lt;/strong&gt; Generate security codes via an outside party that grants access.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Biometrics.&lt;/strong&gt; A user presents a fingerprint or eye scan to gain access to the system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In some instances, systems require the successful verification of more than one factor before granting access. This multi-factor authentication (MFA) requirement is often deployed to increase security beyond what passwords alone can provide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NPdeqOHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct21mg6hq6cylxwaujw3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NPdeqOHT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct21mg6hq6cylxwaujw3.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#authorisation"&gt;
  &lt;/a&gt;
  Authorisation:
&lt;/h3&gt;

&lt;p&gt;we first need to define what authentication actually is, and more importantly, what it’s not. Refers to the process that determines what a user is able to do. &lt;/p&gt;

&lt;p&gt;In other words, Authorization proves you have the right to make a request. When you try to go backstage at a concert or an event, you don’t necessarily have to prove that you are who you say you are – you show the ticket, which is the proof that you have the right to be where you’re trying to get into.&lt;/p&gt;

&lt;p&gt;Authorization is independent from authentication. However, authorization requires an authentication mechanism.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#roles"&gt;
  &lt;/a&gt;
  Roles:
&lt;/h3&gt;

&lt;p&gt;They are a set of permissions to do certain activities in the application. We can think of a role as if its a boolean wether we have this role or not, true or false. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K8rT3Uz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rt6qw2s2hz59qokpy2db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K8rT3Uz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rt6qw2s2hz59qokpy2db.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what we do with roles is we attach functionality to a role and once we assign a user to a role those set of functionalities are set to the user. Once we remove the role these functionalities are removed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ex44PVWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9ujioarnp6v3mrhwkvh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ex44PVWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9ujioarnp6v3mrhwkvh.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A role will protect access to the funciton, without the user having that correct role the user will not be able to execute that function&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#claims"&gt;
  &lt;/a&gt;
  Claims:
&lt;/h3&gt;

&lt;p&gt;They are completely different from Roles, Claim based is more flexible then roles they are key value pair. The claim belong to a user or an entity and claim is used to describe the user or the entity. Claims are essentially user properties and they inform the authorisation about the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--abe0UCZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5dj2jiomykf214dkqd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abe0UCZh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5dj2jiomykf214dkqd.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To illustrate it more let us check the driver license example again&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jws6TeQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4qinm25uegsa7cgpeuz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jws6TeQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4qinm25uegsa7cgpeuz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see here that there is 11 claims on this licesne which basically mean there is 11 pieces of information about the user. So if we want to translate this into a code based structure it will be something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"123456789"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"exp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"07/11/2025"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ln"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"DOE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"fn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dob"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"09/05/1993"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"sex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"M"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hair"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"brn"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eyes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"blue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hgt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"6.0"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"wgt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"183lb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"class"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"C"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So these claims will be given to the user once they log in. &lt;/p&gt;

&lt;p&gt;Claims can work with roles or with out roles, based on how we want to implement the authorisation process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#policy"&gt;
  &lt;/a&gt;
  Policy:
&lt;/h3&gt;

&lt;p&gt;They are functions or rules which are used to check the user information and check if permission is granted or denied.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rMyTHupE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jj2zbtjgcw5gm0yum4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMyTHupE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6jj2zbtjgcw5gm0yum4c.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Policies which basically starts with the context which checks the user against a policy list and based on the list it will either grant or deny permision to the requested resource.&lt;/p&gt;

&lt;p&gt;Role based authrisation and Claims based authorisation use requirements, a requirements handler and a pre-configured policy. Policy consist of one or more requirements&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gUrIvmRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa2rc2pnmcz3yc6jhmgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gUrIvmRw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa2rc2pnmcz3yc6jhmgm.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#roles-vs-claims-vs-policy"&gt;
  &lt;/a&gt;
  Roles vs Claims vs Policy
&lt;/h3&gt;

&lt;p&gt;A role is a symbolic category that collects together users who share the same levels of security privileges. Role-based authorization requires first identifying the user, then ascertaining the roles to which the user is assigned, and finally comparing those roles to the roles that are authorized to access a resource.&lt;/p&gt;

&lt;p&gt;In contrast, a claim is not group based, rather it is identity based.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;We will continue building on the last project that we used authorisation with JWT token you can find the source code on github &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mohamadlawand087/v8-refreshtokenswithJWT"&gt;https://github.com/mohamadlawand087/v8-refreshtokenswithJWT&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we clone this repo we can start building our authorisation&lt;/p&gt;

&lt;p&gt;The first thing we need to do is to update the startup class to include Roles in our identity providers. Inside the ConfigureServices in the Startup class we need to update the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddIdentity&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SignIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequireConfirmedAccount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddEntityFrameworkStores&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ApiDbContext&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to do is to create a new controller called SetupController inside the controller folder and add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="c1"&gt;// api/setup&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SetupController&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;UserManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SetupController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;SetupController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;UserManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SetupController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;   
            &lt;span class="n"&gt;_logger&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_roleManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_userManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IActionResult&lt;/span&gt; &lt;span class="nf"&gt;GetAllRoles&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;CreateRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;roleExist&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;RoleExistsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;roleExist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;//create the roles and seed them to the database: Question 1&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;roleResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateAsync&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;IdentityRole&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roleResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Succeeded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Roles Added"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"Role &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; added successfully"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Error"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"Issue adding the new &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Role already exist"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Get all users&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GetAllUsers"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAllUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Add User to role&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AddUserToRole"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddUserToRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByEmailAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddToRoleAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Succeeded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; added to the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; added to the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to add user &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; to the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to add user &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; to the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// User doesn't exist&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unable to find user"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Get specific user role&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GetUserRoles"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetUserRoles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Resolve the user via their email&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByEmailAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// Get the roles for the user&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;roles&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetRolesAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Remove User to role&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RemoveUserFromRole"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;RemoveUserFromRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByEmailAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;RemoveFromRoleAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Succeeded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; removed from the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; removed from the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to removed user &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; from the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to removed user &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; from the &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;roleName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; role"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// User doesn't exist&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unable to find user"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we finished with the SetupController let us move to the AuthManagement Controller and update the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// We need to add the following before the constructor&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AuthManagementController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// We need to update the constructor to the following&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;AuthManagementController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;UserManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;IOptionsMonitor&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;JwtConfig&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;optionsMonitor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;TokenValidationParameters&lt;/span&gt; &lt;span class="n"&gt;tokenValidationParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;AuthManagementController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;apiDbContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_logger&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_userManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_roleManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_jwtConfig&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;optionsMonitor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CurrentValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_tokenValidationParams&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tokenValidationParams&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_apiDbContext&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apiDbContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// We need to create a GetValidClaims method&lt;/span&gt;
&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetValidClaims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;IdentityOptions&lt;/span&gt; &lt;span class="n"&gt;_options&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;IdentityOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JwtRegisteredClaimNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JwtRegisteredClaimNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JwtRegisteredClaimNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Jti&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;NewGuid&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClaimsIdentity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserIdClaimType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToString&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClaimsIdentity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserNameClaimType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UserName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;userClaims&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetClaimsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;userRoles&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetRolesAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddRange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userClaims&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;userRole&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;userRoles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ClaimTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Role&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;userRole&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;role&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByNameAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;userRole&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;roleClaims&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetClaimsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;role&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Claim&lt;/span&gt; &lt;span class="n"&gt;roleClaim&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;roleClaims&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roleClaim&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// We need to update the GenerateJwtToken method&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;GetValidClaims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tokenDescriptor&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SecurityTokenDescriptor&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Subject&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ClaimsIdentity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;Expires&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UtcNow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddMinutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// 5-10 &lt;/span&gt;
    &lt;span class="n"&gt;SigningCredentials&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SigningCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;SymmetricSecurityKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;SecurityAlgorithms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HmacSha256Signature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to update the TodoController attribute to add the roles to it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AuthenticationSchemes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JwtBearerDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AuthenticationScheme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roles&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"AppUser"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us give this a try &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Will create a new user&lt;/li&gt;
&lt;li&gt;Will create a role called AppUser&lt;/li&gt;
&lt;li&gt;Will assign the role to the user&lt;/li&gt;
&lt;li&gt;Will login and get a JWT token&lt;/li&gt;
&lt;li&gt;Will try to access GetItems endpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we start by adding our ClaimSetup Controller, inside the controller folder will add a new class called ClaimSetupController and will add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="c1"&gt;// api/ClaimSetup&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ClaimSetupController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;UserManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ClaimSetupController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ClaimSetupController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;ApiDbContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;RoleManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityRole&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;UserManager&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IdentityUser&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ILogger&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ClaimSetupController&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="n"&gt;_logger&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_roleManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roleManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_userManager&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetAllClaims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByEmailAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetClaimsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;claims&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Add Claim to user&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AddClaimToUser"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddClaimToUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;FindByEmailAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;userClaim&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Claim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_userManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddClaimAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;userClaim&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Succeeded&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"the claim &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; add to the  User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"the claim &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; add to the  User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;_logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;LogInformation&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to add the claim &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; to the  User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"Error: Unable to add the claim &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;claimName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; to the  User &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// User doesn't exist&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unable to find user"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to update the Startup class to create a Claims Policy, inside the Startup.cs in the root directoty we need to add the following in the ConfigureServices method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddAuthorization&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddPolicy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ViewItemsPolicy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;policy&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;RequireClaim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ViewItems"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to update the TodoController with the following on any action we want&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Policy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"ViewItemsPolicy"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetItems&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us test this&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the same account that we created earlier we need to add the claim to it&lt;/li&gt;
&lt;li&gt;We utilise the new endpoint we created &lt;a href="http://localhost:8090/api/ClaimSetup/AddClaimToUser"&gt;http://localhost:8090/api/ClaimSetup/AddClaimToUser&lt;/a&gt; and we add the claim to the user account&lt;/li&gt;
&lt;li&gt;We try to access the &lt;a href="http://localhost:8090/api/todo"&gt;http://localhost:8090/api/todo&lt;/a&gt; any other user who doesnt have the claim should not be able to access this.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>jet</category>
      <category>authorization</category>
    </item>
    <item>
      <title>
Why Developers Should Care About Knowledge Sharing</title>
      <author>Adriano Martins</author>
      <pubDate>Mon, 18 Oct 2021 09:18:44 +0000</pubDate>
      <link>https://dev.to/reviewpad/why-developers-should-care-about-knowledge-sharing-3ilg</link>
      <guid>https://dev.to/reviewpad/why-developers-should-care-about-knowledge-sharing-3ilg</guid>
      <description>&lt;p&gt;&lt;em&gt;Sharing knowledge usually comes as the last step of a process, or even worse, as something optional, that can be passed on if need be. This makes it easy to skip on this step if you feel you’re tired, or your team is busy. Developers are almost always creating new technologies and figuring out new solutions. Odds are, whatever knowledge you acquire won’t be available anywhere else. The time has come to remind everyone of the fundamental benefits of making whatever knowledge you’ve acquired available to your colleagues.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-it-helps-you"&gt;
  &lt;/a&gt;
  Why it helps you
&lt;/h2&gt;

&lt;p&gt;Knowledge sharing is &lt;a href="https://codingsans.com/state-of-software-development-2020"&gt;the second biggest problem software companies face&lt;/a&gt;. It affects everyone, so it also affects anyone. With the advent of remote work, this issue may become even more important. First of all, let’s appeal to our own self-interest. Sharing knowledge doesn’t only help our team, it actually helps those who are imparting the knowledge in more ways than one.&lt;/p&gt;

&lt;p&gt;Let’s see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  You are &lt;strong&gt;advancing your own knowledge&lt;/strong&gt;. By explaining what you’ve learnt to someone else, you are consolidating what you’ve learnt. You will retain it better, systematise it better, and, frankly, you’ll probably advance it by seeing it through others’ eyes. You will have to consider what you’re sharing and think twice about it. That reflection will bring with it valuable learning.&lt;/li&gt;
&lt;li&gt;  You will be &lt;strong&gt;receiving feedback&lt;/strong&gt;. No developer is an island. We learn from others. By sharing what you’ve learnt, you will be receiving other people’s thoughts on the subject, which will surely advance your own understanding. Maybe they will even correct some aspect of it that you misunderstood.&lt;/li&gt;
&lt;li&gt;  You will &lt;strong&gt;help future you&lt;/strong&gt;. If you learn something and just file it away in the caverns of a closed pull request, odds are you may not remember it fully whenever you bump into the same problem again. If you write it down, though, and teach it to others, it will be right there for you when you need it. It’s the easiest way to &lt;strong&gt;only solve problems once&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  You will be &lt;strong&gt;advancing your career&lt;/strong&gt;. Sharing knowledge and contributing to the team’s success does not go unnoticed. If when people are in trouble and seek solutions your name pops up all the time, everyone will take notice. This is how promotions happen.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-it-helps-your-team"&gt;
  &lt;/a&gt;
  Why it helps your team
&lt;/h2&gt;

&lt;p&gt;But sharing isn’t just about oneself, now is it? There must be advantages for the whole team. Let’s see what they are.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It helps &lt;strong&gt;build team spirit&lt;/strong&gt;. This may sound like a meaningless phrase, but it isn’t. What goes around comes around, and a team that is accustomed to helping each other will resort to helping each other naturally. Giving everyone a hand shouldn’t be contingent on someone being in trouble.&lt;/li&gt;
&lt;li&gt;  You will be &lt;strong&gt;saving everyone A LOT of time&lt;/strong&gt;. How long did it take you to solve the problem? An hour? Two? A whole day? Whenever someone on your team runs into the exact same issue, they will (depending on skill level or just sheer instinct) take roughly the same amount of time. If there’s an explanation available, though, that everyone has knowledge of… Not so much.&lt;/li&gt;
&lt;li&gt;  You will be &lt;strong&gt;building a knowledge base&lt;/strong&gt;. It may seem like just a small addition, but small additions build up. If your team develops a culture of sharing knowledge, they will inevitably create a repository that will become a cornerstone of success.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-do-it"&gt;
  &lt;/a&gt;
  How to do it
&lt;/h2&gt;

&lt;p&gt;So, are there any best practices, aside from simply gathering the team and telling them, or writing stuff down somewhere public, such as an internal Wiki?&lt;/p&gt;

&lt;p&gt;We do have some ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If you’re using &lt;strong&gt;Reviewpad&lt;/strong&gt;, which you should, the &lt;em&gt;Comments from the Past&lt;/em&gt; feature makes it so whenever someone touches code with comments, they’ll be able to see what was shared when that code was made. Forget about re-working the same problems, or going down avenues that somebody else already found out that don’t work.&lt;/li&gt;
&lt;li&gt;  Whenever a team member explains something to you, &lt;strong&gt;encourage them to document it&lt;/strong&gt;. If it was useful to you, it will likely be useful to others.&lt;/li&gt;
&lt;li&gt;  Much in the same way, whenever someone asks you for help, &lt;strong&gt;document it&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  Whenever you are the one who needs an explanation, avoid asking in private. &lt;strong&gt;Ask on a public forum&lt;/strong&gt;, so everyone can read the discussion and take advantage of it.&lt;/li&gt;
&lt;li&gt;  Make it &lt;strong&gt;easily accessible&lt;/strong&gt;. Your knowledge base needs to be freely and easily accessible to everyone, at all times. Developers don’t particularly like over complicated wikis, so it’s up to you to create this space.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the reasons why we are building Reviewpad is making knowledge sharing easier and more convenient to everyone involved.&lt;/p&gt;

&lt;p&gt;Reviewpad is about communication as much as it is about reviews.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.reviewpad.com/get-started"&gt;Are you ready to give it a go?&lt;/a&gt;&lt;/p&gt;

</description>
      <category>knowledgesharing</category>
      <category>teamwork</category>
      <category>culture</category>
    </item>
  </channel>
</rss>
