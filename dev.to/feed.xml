<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Frontend Development </title>
      <author>BeautyJames</author>
      <pubDate>Thu, 14 Oct 2021 12:39:40 +0000</pubDate>
      <link>https://dev.to/beautyjames/frontend-development-fh6</link>
      <guid>https://dev.to/beautyjames/frontend-development-fh6</guid>
      <description>&lt;p&gt;Hello everyone, I’m Beauty James, A Frontend Engineer. I thought it would be important to share my knowledge about frontend web development with everyone on this platform especially the upcoming web developers. From my experience, I would say these are the most Frequently Asked Questions(FAQ) about frontend&lt;br&gt;
• What is frontend development?&lt;br&gt;
• What is backend development?&lt;br&gt;
• Differences between frontend and backend development&lt;br&gt;
• Tasks of frontend developers&lt;br&gt;
• Why you should learn frontend development?&lt;br&gt;
• What pays more frontend or backend?&lt;br&gt;
•  Frontend languages&lt;br&gt;
• Career path of frontend developers&lt;br&gt;
What is Frontend development?&lt;br&gt;
Frontend development also known as (client side) development is the practice of  producing CSS, html and JavaScript for a website or web application so the user can see and interact with them directly. As a frontend developer, your job is to code and bring to life the visual elements of a website.&lt;br&gt;
They build elements like;&lt;br&gt;
 Buttons&lt;br&gt;
 Layouts&lt;br&gt;
 Navigations&lt;br&gt;
 Images&lt;br&gt;
 Graphics&lt;br&gt;
 Content organization&lt;br&gt;
The Tools used to create the front end of a website changes Constantly. This is a major challenge to developers so they need to constantly be aware of how the field is developed. The objective of which is to ensure that when viewers open sites, they see information in a format that is relevant and easy to read, irrespective of different screen sizes and resolutions.&lt;br&gt;
What is back end development?&lt;br&gt;
Backend development also known as server side of a network helps in storing and arranging data while also ensuring the front end is functioning well. A backend developer helps manage the database of a network and site content stored on it. They help to ensure that frontend elements on social media websites can continue to function properly as users browse.&lt;br&gt;
Backend developers build elements like;&lt;br&gt;
 Building codes&lt;br&gt;
 Troubleshooting and debugging web applications&lt;br&gt;
 Database management&lt;br&gt;
 Framework utilization&lt;br&gt;
Differences between frontend and backend&lt;br&gt;
Frontend development focuses on the visual elements of a website or app that users will interact with (the client side), while backend development focuses on the side of website users can’t see (the server side).However, they work together to enable users make purchases, use contact forms and any other interactive activity you might participate in while browsing a site in a dynamic website.&lt;br&gt;
Tasks of frontend developers&lt;br&gt;
Although there are certain degrees of variation across companies, you can generally expect a frontend developer role to include all or some of the following;&lt;br&gt;
• They optimize user experience by analyzing the client side performance of a web page so as to improve consumer understanding&lt;br&gt;
• Detect problems and design engaging solutions.&lt;br&gt;
• Developing and maintaining user interface&lt;br&gt;
• Creating tools that improve site interaction regardless of the browser the user is on&lt;br&gt;
• Managing software workflow&lt;br&gt;
• Bring concept to life by imagining, creating and deploying interactive and mobile friendly applications for the web using the latest web technologies including HTML5, CSS3, JavaScript (ES6+) and React&lt;br&gt;
Why should you learn Frontend development?&lt;br&gt;
Listed below are the reasons you need to study or partake in a career of frontend development;&lt;br&gt;
 Frontend developers are in demand&lt;br&gt;
 Creativity&lt;br&gt;
 Flexibility&lt;br&gt;
 Ever evolving field&lt;br&gt;
 Many career options&lt;br&gt;
 Lucrative career&lt;br&gt;
 Easy to learn, use and scale technologies&lt;br&gt;
 Involves real time programming&lt;br&gt;
 Speedy development and user drive outcomes.&lt;br&gt;
What pays more frontend or backend?&lt;br&gt;
Since there is an obvious difference between the two, you may be wondering, which to take on in your new career path and the pay may have a great influence in your choice. Mid career, Front end developers take in an average annual salary of $76,929 in the U.S., according to Glassdoor. While U.S based mid career Back end developers may bring in an average of $101,619 annually. According to this research, backend developers earn more than frontend developers. But before choosing  a career path, money should not be the only factor that determines which to partake in. Careful study and analysis should be made on both frontend and backend development to determine which career path you enroll in.&lt;br&gt;
Frontend Languages:&lt;br&gt;
 JavaScript: JavaScript is a text based programming language used both on the client side and server side that allows you to make web pages interactive. It gives web pages interactive elements that engages a user. It converts web pages from static to interactive ones, thereby improving user experience. JavaScript is the world’s most popular programming language.&lt;br&gt;
 HTML: HTML (hypertext markup language) is a language that defines the structure of your content. It consists of a series of elements which allows you to enclose or wrap various parts of the content to make it appear in a certain way or act in a certain manner. There are several web editors used to write html codes, but for Windows, visual studio code is mostly advised and atom for both apple and Linux users.&lt;br&gt;
 CSS: CSS (Cascading Style Sheet) is a style sheet language used to describe the presentation of &lt;br&gt;
a document written in HTML.&lt;br&gt;
Other frontend languages include;&lt;br&gt;
 React&lt;br&gt;
 jQuery&lt;br&gt;
Career path of a frontend developer&lt;br&gt;
Not only is the career path of a frontend web developer high potential, but it is also fun and challenging. Frontend developers are often excited about what they do because they’re able to leverage their creativity. According to Stack Overflow’s 2020 Developer Study, a full 37.1% of surveyed programmers world wide identified as frontend developers. If you’re thinking about taking up frontend developing as a career path but hesitant due to job opportunities and pay rolls, well don’t be, because according to research, jobs for web developers are expected to increase by 13% between 2018-2028. A frontend developer with up to 3 years of experience can earn up to $80,000-$119,500 and need I mention, there are 6000+ job openings for frontend developers with a steady and consistent search interest in the last 5 years.&lt;br&gt;
Bear in mind that it is possible to have a career in frontend development without formal education but you will need to:&lt;br&gt;
 Educate yourself about the fundamentals which means you will have to enroll your self in boot camps, colleges or you could be self taught.&lt;br&gt;
 Build up your portfolio; After you’ve achieved your education, you need to convince managers that you have the necessary skills in performing whatever role you’re applying for. That’s where your portfolio comes in. These are tools that professionals use to demonstrate their competencies. The portfolio you compile should demonstrate technical prowess, design capabilities, communication skills and good coding practices. You could make a great portfolio by making your content accessible, improving load times and opening a personal blog.&lt;br&gt;
 Land an entry level position; After you have successfully built up your portfolio, landing an entry level position should be your next step. You should begin your job hunt by tailoring your resume to the position you hope to achieve. Make sure to highlight personal projects and any relevant experience and be sure to list off all of the specific tools and programming languages you know&lt;br&gt;
 Progress to a senior role; After you get a few years of experience under your belt, you will be able to progress to a more senior role on your web development team in which you will be responsible for overseeing a team of junior web developers, cooperating closely with developers at the backend team and providing high level input on coding projects. Here, your job as a professional is to make sure sites are fully responsive and compatible across browsers, operating systems and devices.&lt;br&gt;
 Branch out; If you’re not satisfied with your job as a frontend web developer working in the senior role, branching out into other fields such as full stack development, User Experience design or digital marketing could be an option.&lt;br&gt;
Frontend developers will always be in demand. As long as you know the way the web works and how the users want it to work, you could be a great fit, nailing a stable and a high paying job.&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>You should stop using `parseInt()`</title>
      <author>Alessio Michelini</author>
      <pubDate>Thu, 14 Oct 2021 12:39:05 +0000</pubDate>
      <link>https://dev.to/darkmavis1980/you-should-stop-using-parseint-nbf</link>
      <guid>https://dev.to/darkmavis1980/you-should-stop-using-parseint-nbf</guid>
      <description>&lt;p&gt;This is something I see all the times, you have some code where at some point you have a variable that contains a number, maybe it comes from a form, or from the results of some API calls, or whatever, and you want convert it into an integer.&lt;/p&gt;

&lt;p&gt;Something like this for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While the code above works, it’s an extremely inefficient way to parse it.&lt;br&gt;
What you should use instead is the  &lt;code&gt;Number()&lt;/code&gt; function, and convert the code above to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the changes above you gain two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a more readable code&lt;/li&gt;
&lt;li&gt;a much more performing way to transform a string to an integer&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#but-whats-the-difference-between-raw-number-endraw-and-raw-parseint-endraw-"&gt;
  &lt;/a&gt;
  But what’s the difference between &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Number(string)&lt;/code&gt; function evaluate the full string and converts it to a string, and if the string is not a number it will just return &lt;code&gt;NaN&lt;/code&gt;.&lt;br&gt;
While &lt;code&gt;parseInt(string, [radix])&lt;/code&gt; will try to find the first number in the string passed, and convert it to the radix passed, which is &lt;code&gt;10&lt;/code&gt; by default, and it will return &lt;code&gt;NaN&lt;/code&gt; only if it doesn’t find any number.&lt;/p&gt;

&lt;p&gt;This means that if you pass a string like &lt;code&gt;5e2&lt;/code&gt; , it &lt;code&gt;parseInt&lt;/code&gt; will stop when it sees the &lt;code&gt;e&lt;/code&gt; and it will just return &lt;code&gt;5&lt;/code&gt;, while &lt;code&gt;Number&lt;/code&gt; will evaluate the whole string and return the correct value &lt;code&gt;500&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here you can see some cases compared between the two functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5e2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 500&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;16px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 3.2&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5e2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;16px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 16&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#its-also-a-matter-of-execution-time"&gt;
  &lt;/a&gt;
  It’s also a matter of execution time
&lt;/h2&gt;

&lt;p&gt;Maybe you are still undecided, and you think that “I just need to convert a simple number to an integer, why I should use Number instead?”.&lt;br&gt;
Well, because of performances.&lt;/p&gt;

&lt;p&gt;For example, let’s do a simple function, that loops  for 100m times, and that accepts a callback, and we call it twice using &lt;code&gt;Number&lt;/code&gt; in the first case and &lt;code&gt;parseInt&lt;/code&gt; in the second.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runBench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;100000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`It took &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ms`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;process1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;process2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3.2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;runBench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// It took 140 ms&lt;/span&gt;
&lt;span class="nx"&gt;runBench&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// It took 4546 ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sure, you are not going to run a loop of 100 millions, but it’s to make evident the performance difference between the two functions, and also when you use &lt;code&gt;parseInt&lt;/code&gt; in multiple places on the same function, things might just sum up at the end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-should-i-just-avoid-raw-parseint-endraw-all-the-times"&gt;
  &lt;/a&gt;
  So should I just avoid &lt;code&gt;parseInt&lt;/code&gt; all the times?
&lt;/h2&gt;

&lt;p&gt;No, not always, there are of course use cases where it’s beneficial to use it, for example if you want to extrapolate an integer out of a floating number, which is a good 50% faster than &lt;code&gt;Math.round()&lt;/code&gt;.&lt;br&gt;
For example  ifyou want to convert a string with pixels on it to just a number, like &lt;code&gt;32px&lt;/code&gt; to &lt;code&gt;32&lt;/code&gt;, then you should use &lt;code&gt;parseInt&lt;/code&gt;, but most of the times you better stick with &lt;code&gt;Number&lt;/code&gt; instead.&lt;br&gt;
Or even if you want to convert a number from a decimal system to something else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Unless some specific cases, where &lt;code&gt;parseInt&lt;/code&gt; returns what you need and &lt;code&gt;Number&lt;/code&gt; doesn’t, for 99% of the cases you should better start to use the latter one.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Webpack Academy #BONUS: Use webpack with Typescript, Vuejs &amp; Sass</title>
      <author>CodeOz</author>
      <pubDate>Thu, 14 Oct 2021 12:32:08 +0000</pubDate>
      <link>https://dev.to/codeoz/webpack-academy-bonus-use-webpack-with-typescript-vuejs-sass-38ff</link>
      <guid>https://dev.to/codeoz/webpack-academy-bonus-use-webpack-with-typescript-vuejs-sass-38ff</guid>
      <description>&lt;p&gt;A little bonus for people that follows my webpack academy course!&lt;/p&gt;

&lt;p&gt;I will show you how to add &lt;strong&gt;typescript&lt;/strong&gt; with &lt;strong&gt;vuejs2&lt;/strong&gt; and &lt;strong&gt;Sass&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;I will divide this article into 3 parts! You can only follow the first if you need to add only typescript into your project!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-typescript"&gt;
  &lt;/a&gt;
  Add typescript
&lt;/h2&gt;

&lt;p&gt;For adding typescript we will need to add a loader and install some dependencies!&lt;/p&gt;

&lt;p&gt;We will install &lt;code&gt;ts-loader&lt;/code&gt; that will handling &lt;strong&gt;.ts&lt;/strong&gt; file!&lt;/p&gt;

&lt;p&gt;We need to add &lt;code&gt;tsconfig.json&lt;/code&gt; (&lt;em&gt;ts-loader will use it for transpiling ts file into js file&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;After this we will remove all file in our &lt;code&gt;src/&lt;/code&gt; in order to add &lt;strong&gt;index.ts&lt;/strong&gt; (expect html file).&lt;/p&gt;

&lt;p&gt;We need to use &lt;strong&gt;ts-loader&lt;/strong&gt; in our webpack config!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
            &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;tsx&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}]&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#alias-typescript-amp-webpack"&gt;
  &lt;/a&gt;
  Alias typescript &amp;amp; webpack
&lt;/h3&gt;

&lt;p&gt;If you use alias in webpack, you need to do the same alias for tsconfig file!&lt;/p&gt;

&lt;p&gt;webpack.config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;tsconfig.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"paths"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"@/*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"./src/*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check all changes from &lt;a href="https://github.com/Code-Oz/webpack-academy/tree/560cd88f50c4e25cbd698cb9d61848926c543f15"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-vuejs-2"&gt;
  &lt;/a&gt;
  Add vuejs 2
&lt;/h2&gt;

&lt;p&gt;So now we will install vue2! We will add the &lt;code&gt;vue-loader&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will need to install another loader, if you remember during the first academy, I explain the goal of &lt;code&gt;style-loader&lt;/code&gt; (it inject css into the DOM). We will need to replace it (we use it only in dev mode) with &lt;code&gt;vue-style-loader&lt;/code&gt;! (it will do the same thing but for css in vue file!)&lt;/p&gt;

&lt;p&gt;Ok so now we need to make &lt;strong&gt;4 things!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the first is to indicate the alias of vue for webpack&lt;/li&gt;
&lt;li&gt;the second is linked to typescript&lt;/li&gt;
&lt;li&gt;the third is to add vue library as cdn&lt;/li&gt;
&lt;li&gt;the last is to configure vue &amp;amp; test!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#alias-vue-vueesmjs"&gt;
  &lt;/a&gt;
  Alias vue (vue.esm.js)
&lt;/h3&gt;

&lt;p&gt;In the webpack config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue$&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue/dist/vue.esm.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adapt-typescript-with-vue-file"&gt;
  &lt;/a&gt;
  Adapt typescript with vue file
&lt;/h3&gt;

&lt;p&gt;When typescript will handle vue file, it will have some trouble! Since it's not a ts file! But we need to transpile vue file into js file!&lt;/p&gt;

&lt;p&gt;So when we declare our &lt;code&gt;ts-loader&lt;/code&gt; we need to add this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Tell to ts-loader: if you check .vue file extension, handle it like a ts file&lt;/span&gt;
   &lt;span class="nl"&gt;appendTsSuffixTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;vue$/&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to create a file called &lt;code&gt;vue-shims.d.ts&lt;/code&gt;, it will tell the TypeScript compiler that importing .vue files is OK. So you can import &lt;code&gt;vue&lt;/code&gt; file without issue in &lt;code&gt;.ts&lt;/code&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;declare&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, we need to put this file in the &lt;code&gt;ts-config&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nl"&gt;"files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"./vue-shims.d.ts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;😅 We almost finish! Be brave 💪&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#import-vue-with-cdn"&gt;
  &lt;/a&gt;
  Import vue with cdn
&lt;/h3&gt;

&lt;p&gt;Go to the part dedicated to cdn in my academy if you need to know how it's working but you need to add &lt;code&gt;vue cdn link&lt;/code&gt; for dev mode and the same but &lt;code&gt;vue.min&lt;/code&gt; in prod mode.&lt;/p&gt;

&lt;p&gt;Don't forget to add &lt;code&gt;external property into the webpack.config&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#config-vuejs"&gt;
  &lt;/a&gt;
  Config vuejs
&lt;/h3&gt;

&lt;p&gt;We just need to configure vuejs config and we are done!&lt;/p&gt;

&lt;p&gt;So first of all we need to create &lt;code&gt;index.ts&lt;/code&gt; that will be the entry file of vue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./app/App.vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productionTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I prefer to split &lt;code&gt;.vue&lt;/code&gt; to &lt;code&gt;.ts&lt;/code&gt;, my vue file will include my style and template, the typescript file will include all component logic.&lt;/p&gt;

&lt;p&gt;app.vue&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"toto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello there
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./App.ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.toto&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;app.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last thing to do is to go to &lt;code&gt;html file&lt;/code&gt; and create the &lt;code&gt;div&lt;/code&gt; that will be used by vuejs (vue will use this div to inject its components).&lt;/p&gt;

&lt;p&gt;As mentioned by the entry file, the &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;app&lt;/code&gt;. So we just need to inject it into our &lt;code&gt;html&lt;/code&gt;!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check all changes from &lt;a href="https://github.com/Code-Oz/webpack-academy/tree/5ca91b0dbf7d9613aa861ec180cb69a98263911e"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sass"&gt;
  &lt;/a&gt;
  SASS
&lt;/h2&gt;

&lt;p&gt;You can skip vuejs part if you are only interested by SASS with webpack!&lt;/p&gt;

&lt;p&gt;Let's add &lt;code&gt;sass-loader&lt;/code&gt; to our project, we need to use it before handling css! Since Sass transpilers file &lt;code&gt;.scss&lt;/code&gt; into &lt;code&gt;.css&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;We also need to change our regex for handling &lt;code&gt;.scss&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;test: /\.(sa|sc|c)ss$/,&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alias-for-style"&gt;
  &lt;/a&gt;
  Alias for style
&lt;/h3&gt;

&lt;p&gt;I like to use alias for style files!&lt;/p&gt;

&lt;p&gt;So we can go to it, but we need to add it to webpack config and typescript config!&lt;/p&gt;

&lt;p&gt;After this, we can create our first &lt;code&gt;.sass&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sass"&gt;&lt;code&gt;&lt;span class="nv"&gt;$main-colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#6096BA&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$hover&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#45718D&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#385A71&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$grey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#677681&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#B7D0E1&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$black&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#233947&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And use it to &lt;code&gt;.vue&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"scss"&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;"~style/import.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$grey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: We also need to install &lt;code&gt;sass&lt;/code&gt; packages!&lt;/p&gt;

&lt;p&gt;I hope you like this &lt;strong&gt;BIG&lt;/strong&gt; bonus!&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webpack</category>
      <category>typescript</category>
      <category>vue</category>
    </item>
    <item>
      <title>Intro to Data Analysis - Data Reading </title>
      <author>Ondiek Elijah</author>
      <pubDate>Thu, 14 Oct 2021 12:12:23 +0000</pubDate>
      <link>https://dev.to/luxacademy/intro-to-data-analysis-data-reading-2ncp</link>
      <guid>https://dev.to/luxacademy/intro-to-data-analysis-data-reading-2ncp</guid>
      <description>&lt;p&gt;With today's technology advances, data is without a doubt the most important component for institutions, organizations, and all other entities. As a result, there is an urgent need to leverage the available data to make a difference.&lt;/p&gt;

&lt;p&gt;Data analytics focuses on processing and performing statistical analysis on existing datasets, with a focus on developing techniques to capture and organize data to uncover actionable insights for ongoing problems, as well as determining the best manner to communicate this data.&lt;/p&gt;

&lt;p&gt;Data analysis is a type of data analytics that is used in businesses to examine data and draw conclusions. Data gathering, data cleaning, data analysis, and data intercept are the steps taken in data analysis to ensure that you comprehend what your data is trying to communicate.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Source — &lt;a href="https://stackoverflow.com/a/57657369/12943692"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As an introduction to data analysis, this post will teach you how to read data that is offered in various formats such as csv, json, or even as a database file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#reading-data-from-a-csv-file"&gt;Data from a CSV file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-data-in-sql-flavour"&gt;Data in SQL flavour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading-data-from-json-files"&gt;JSON files&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#reading-data-from-a-csv-file"&gt;
  &lt;/a&gt;
  Reading data from a CSV file
&lt;/h2&gt;

&lt;p&gt;To read data from a comma-separated values (csv) file into DataFrame we use the &lt;code&gt;pandas.read_csv&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html"&gt;read_csv&lt;/a&gt; function accepts numerous parameters, the type of which depends on the nature of your dataset or your aim.&lt;br&gt;
Among the most frequently used parameters, excluding the mandatory &lt;code&gt;filepath_or_buffer&lt;/code&gt; include &lt;code&gt;sep,delimiter,header, index_col&lt;/code&gt; e.t.c&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#read-comma-separated-file"&gt;
  &lt;/a&gt;
  Read comma separated file
&lt;/h3&gt;

&lt;p&gt;The sep parameter, which is short for separator, essentially tells the interpreter how to separate the data items in our CSV file.The interpreter assumes that the delimiter used is a comma by default if the sep parameter is not given.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cereal.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#read-tab-separated-file"&gt;
  &lt;/a&gt;
  Read tab separated file
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cereal_tab.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#read-semicolon-separated-file"&gt;
  &lt;/a&gt;
  Read semicolon separated file
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cereal_semicolon.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;';'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reading-data-in-sql-flavour"&gt;
  &lt;/a&gt;
  Reading Data in SQL flavour
&lt;/h2&gt;

&lt;p&gt;This section involves reading data from various SQL relational databases using pandas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mysql-database"&gt;
  &lt;/a&gt;
  MySQL database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;

&lt;span class="c1"&gt;# provide a connection string/URL
&lt;/span&gt;&lt;span class="n"&gt;db_connection_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"mysql+mysqlconnector://mysql_username:mysql_user_password@localhost/mysql_db_name"&lt;/span&gt;
&lt;span class="c1"&gt;# produce an Engine object based on a URL
&lt;/span&gt;&lt;span class="n"&gt;db_connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db_connection_str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# read SQL query or database table into a DataFrame.
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_sql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SELECT * FROM table_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;db_connection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# return the first 5 rows of the dataframe
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Source — &lt;a href="https://stackoverflow.com/a/37730334/12943692"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#postgresql"&gt;
  &lt;/a&gt;
  PostgreSQL
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;
&lt;span class="c1"&gt;# produce an Engine object based on a postgresql database URL
&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"postgresql:///psql_dbname"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# read SQL query or database table into a DataFrame.
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_sql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'select * from "user"'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;con&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# return the first 5 rows of the dataframe
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sqlite-database"&gt;
  &lt;/a&gt;
  SQlite database
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;

&lt;span class="c1"&gt;# connect to a database
&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sqlite:///database.db"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# read database data into a pandas DataFrame
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_sql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'select * from user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# return the first 5 rows of the dataframe
&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reading-data-from-json-files"&gt;
  &lt;/a&gt;
  Reading data from JSON files.
&lt;/h2&gt;

&lt;p&gt;Reading data from a JSON file is as simple as reading data from a CSV file. The &lt;code&gt;pandas.read_json&lt;/code&gt; function transforms a JSON string to a pandas object with ease. The first parameter it accepts is &lt;code&gt;path_or_bufa&lt;/code&gt;, which must be a valid JSON str, path object, or file-like object. This &lt;a href="https://pandas.pydata.org/pandas-docs/version/1.1.3/reference/api/pandas.read_json.html"&gt;function&lt;/a&gt; also has a number of other parameters that it takes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyforest&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cereal_default.json'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you enjoyed this article, please leave a comment, like it, share it, and follow me on Twitter &lt;a href="https://twitter.com/dev_elie"&gt;@dev_elie&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  Reference(s)
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/04/delimiters-in-pandas-read_csv-function/"&gt;analyticsvidhya&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/"&gt;pandas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>datascience</category>
      <category>python</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Divtober Day 14: Fancy</title>
      <author>Alvaro Montoro</author>
      <pubDate>Thu, 14 Oct 2021 11:59:44 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-14-fancy-al1</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-14-fancy-al1</guid>
      <description>&lt;p&gt;The word of the day is "fancy"... so here's a cartoon of a fancy-looking British gentleman with a hat, a monocle, and an umbrella:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/RwZPXRa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;There's a second element (not used in the drawing) with a link to a &lt;a href="https://youtu.be/Giq9h88lVnc"&gt;YouTube video of how it was coded&lt;/a&gt; (although it is a bit tough to follow with things "jumping around"):&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Giq9h88lVnc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>showdev</category>
    </item>
    <item>
      <title>JavaScript Absolute Value - Math.abs()</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 14 Oct 2021 11:58:21 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-absolute-value-mathabs-179k</link>
      <guid>https://dev.to/hrishikesh1990/javascript-absolute-value-mathabs-179k</guid>
      <description>&lt;p&gt;In this short tutorial, we look at the JavaScript absolute value (math.abs()) method. We explain the syntax with a real-world example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-absolute-value-python"&gt;
  &lt;/a&gt;
  Table of Contents - Absolute Value Python:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#javascript-absolute-value"&gt;JavaScript Absolute Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-use-the-mathabs-function"&gt;How to use the math.abs() function?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-absolute-method"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr-how-to-find-the-absolute-value-in-javascript"&gt;
  &lt;/a&gt;
  TL;DR - How to find the absolute value in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The math.abs() function is used to return the absolute value in JavaScript. It negates the native sign of a number and returns the relevant positive value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;//Output = 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript-absolute-value"&gt;
  &lt;/a&gt;
  JavaScript Absolute Value:
&lt;/h2&gt;

&lt;p&gt;JavaScript Absolute value is a method of the Math object in JavaScript. This method helps return the absolute values of a number. Absolute value or modules essentially means a non-negative value of x.&lt;/p&gt;

&lt;p&gt;To understand the math involved let’s first understand what absolute value actually means. Absolute value is the distance between any number and 0 on the number line. Since it is the distance, there are no negative values.&lt;/p&gt;

&lt;p&gt;Subsequently, when a 0 is passed, JavaScript returns 0 as the distance would also be 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-the-mathabs-function"&gt;
  &lt;/a&gt;
  How to use the Math.abs() function?
&lt;/h2&gt;

&lt;p&gt;Using the Math.abs() method is quite straightforward. The only thing that you have to keep in mind is that abs() is a static method of Math. Hence you would have to add the Math. prefix in case you want to use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-absolute-value-syntax"&gt;
  &lt;/a&gt;
  JavaScript Absolute Value - Syntax:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h3&gt;

&lt;p&gt;X - A number&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#return-values"&gt;
  &lt;/a&gt;
  Return Values:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“x” if x &amp;gt; 0&lt;/li&gt;
&lt;li&gt;“x” if x &amp;lt; 0&lt;/li&gt;
&lt;li&gt;“-x” if x = 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;The best way to familiarise yourself with the JavaScript Absolute method is to practice and try breaking it. In the below code we have used math.abs() methods on a list of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;       &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;      &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;    &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;       &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ten&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;         &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another important point to remember while using the math.abs() methods, is it converts strings containing a number and returns its absolute value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-absolute-method"&gt;
  &lt;/a&gt;
  Closing Thoughts - JavaScript Absolute method:
&lt;/h2&gt;

&lt;p&gt;This method is mostly used before displaying a particular value. A common example would be while displaying distance on a map. In cases where you cross your destination, you are not returned with a negative value but rather the absolute value from the destination.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The weird quirk of JavaScript arrays (that you should never use)</title>
      <author>Adam Davis</author>
      <pubDate>Thu, 14 Oct 2021 11:55:13 +0000</pubDate>
      <link>https://dev.to/brewinstallbuzzwords/the-weird-quirk-of-javascript-arrays-that-you-should-never-use-4l3b</link>
      <guid>https://dev.to/brewinstallbuzzwords/the-weird-quirk-of-javascript-arrays-that-you-should-never-use-4l3b</guid>
      <description>&lt;p&gt;If you've done any type validation in JavaScript, you've probably noticed that arrays don't have their own type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;array&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// false&lt;/span&gt;

&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="c1"&gt;// 'object'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check whether a variable is an array, you'd have to use &lt;code&gt;Array.isArray&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
&lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But why don't arrays have their own type? What are the implications of arrays actually being objects?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#arrays-are-just-objects"&gt;
  &lt;/a&gt;
  Arrays are just objects
&lt;/h2&gt;

&lt;p&gt;In JavaScript, arrays are just special objects that use numerical keys and have their own methods.&lt;/p&gt;

&lt;p&gt;Because of this, you can use methods from the &lt;code&gt;Object&lt;/code&gt; class on arrays.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [ '0', '1', '2' ]&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [ 1, 2, 3 ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As a result, there's also no limitations for the types of values you can store in an array. Other languages, like Java, might require you to only store values of the same type.&lt;/p&gt;

&lt;p&gt;But since objects can store values of any type and JavaScript arrays are objects, there is no such limitation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="p"&gt;[]];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to limit arrays to specific types, you can do so in TypeScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Creates a string array&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringArr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="c1"&gt;// Creates an array that can hold strings or numbers&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stringOrNumberArr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Keep in mind, however, that TypeScript only performs type safety a compile time, not runtime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-where-things-get-a-little-weird"&gt;
  &lt;/a&gt;
  Here's where things get a little weird
&lt;/h3&gt;

&lt;p&gt;From the above example, we know that passing an array into &lt;code&gt;Object.keys&lt;/code&gt; will give us the indices.&lt;/p&gt;

&lt;p&gt;However, the keys that can exist on an array are not limited to non-negative integers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// [ 1 ]&lt;/span&gt;

&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// [ 1, hello: 'world' ]&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [ '0', 'hello' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's right, JavaScript lets you add any valid object key to an array as well.&lt;/p&gt;

&lt;p&gt;Luckily this doesn't seem to break any other array functionality, such as the &lt;code&gt;length&lt;/code&gt; property, but it can feel strange to store data this way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#please-dont-actually-use-this"&gt;
  &lt;/a&gt;
  Please don't actually use this
&lt;/h3&gt;

&lt;p&gt;Just because you can do something, doesn't mean you should.&lt;/p&gt;

&lt;p&gt;JavaScript offers quite a bit of freedom compared to many other programming languages, but I would consider assigning additional properties to an array as an abuse of that freedom.&lt;/p&gt;

&lt;p&gt;If anyone (including yourself) has to work with your code in the future, having a variable that acts as both an array and an object will hurt the code's readability and maintainability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h3&gt;

&lt;p&gt;Should this feature be left untouched or is there a practical use case that I'm unaware of? Let me know in the comments or &lt;a href="https://twitter.com/brewbuzzwords"&gt;on twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-content"&gt;
  &lt;/a&gt;
  More Content
&lt;/h2&gt;

&lt;p&gt;If you liked this, you might also like some of my other posts. If you want to be notified of my new posts, &lt;a href="https://dev.to/brewinstallbuzzwords"&gt;follow me on Dev&lt;/a&gt; or subscribe to my &lt;a href="https://mailchi.mp/89dc077154c7/brewinstallbuzzwords"&gt;brief monthly newsletter&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/reflections-on-a-year-of-blogging/"&gt;Reflections on a year of blogging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/does-elixir-have-for-loops/"&gt;Does Elixir have for loops?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/learn-elixir-with-me/"&gt;Learn Elixir with me!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/bread-ratio-calculator/"&gt;Project Tours: Bread Ratio Calculator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/emoji-skin-tone/"&gt;Changing Emoji Skin Tones Programmatically&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/brewinstallbuzzwords/i-made-my-first-svg-animation-29j3"&gt;I made my first svg animation!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/tips-for-first-npm-package/"&gt;5 tips for publishing your first npm package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewinstallbuzzwords.com/posts/hugo-beginner-mistakes/"&gt;4 Hugo Beginner Mistakes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Top 10 articles of the week for beginners👋.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Thu, 14 Oct 2021 11:38:06 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-articles-of-the-week-for-beginners-29k7</link>
      <guid>https://dev.to/ksengine/top-10-articles-of-the-week-for-beginners-29k7</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"A journey of a thousand miles begins with a single step." - Chinese Proverb&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__tag ltag__tag__id__555"&gt;
  
    .ltag__tag__id__555 .follow-action-button{
      background-color: #008335 !important;
      color: #FFFFFF !important;
      border-color: #008335 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/beginners" class="ltag__tag__link"&gt;beginners&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        "A journey of a thousand miles begins with a single step." -Chinese Proverb
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the most popular articles published on this platform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/coderamrin/build-10-css-projects-in-10-days-project-5-301b"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qF_VSjRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lbGXpTCh--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bkbpfu0frtaafcsbvd1.jpg" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/coderamrin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR81b4tk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6UFIxl2j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/712382/4cbc42e8-71bc-46ab-906f-bdb3e4b7768f.jpeg" alt="coderamrin"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/coderamrin/build-10-css-projects-in-10-days-project-5-301b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build 10 CSS Projects in 10 days: Project 5&lt;/h2&gt;
      &lt;h3&gt;Amrin ・ Oct 9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#projects&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/stackbit/7-ways-to-escape-css-hell-2ck6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fTu3giUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yCkLdEJ5--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x541lcu7atud9e8ec80a.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/stackbit" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LT_BmGE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--oA4wtXAe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/826/846d3882-e4e6-4577-b6f9-a15abbc4f52a.png" alt="Stackbit"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LjDbStrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0Rfj94Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/460257/90c84e8e-b0e2-43d2-a7ef-5f753e6f4b81.jpg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/stackbit/7-ways-to-escape-css-hell-2ck6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 Ways to Escape CSS Hell&lt;/h2&gt;
      &lt;h3&gt;Ryland @ Stackbit for Stackbit ・ Oct 12 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/abh1navv/understanding-domain-driven-design-with-some-pizza-4gkn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8emQwO---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LHKcln72--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b09winy1kwyg6qsytw7g.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/abh1navv" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGrqn2zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DoVdWWG3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/440730/f0fc3149-bd2f-4450-99bb-39bdc8c95824.jpg" alt="abh1navv"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abh1navv/understanding-domain-driven-design-with-some-pizza-4gkn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Domain Driven Design with some Pizza &lt;/h2&gt;
      &lt;h3&gt;Abhinav Pandey ・ Oct 10 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#microservices&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/build-a-node-js-api-in-under-30-minutes-57"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--txdWXt5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zdpzMtAW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4htfc9tylt6bsk91lkfi.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/build-a-node-js-api-in-under-30-minutes-57" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a Node.js API in Under 30 Minutes&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 11 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/react-authentication-with-twitter-google-facebook-and-github-149n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pp_njF5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3YC2vohL--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_66%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zxqr7qwfikeqqf97e77.gif" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/react-authentication-with-twitter-google-facebook-and-github-149n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Authentication with Twitter, Google, Facebook and Github&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 12 ・ 12 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/collins87mbathi/blog-site-api-with-authentication-in-node-express-and-mongodb-59h4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---m-iCNue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--kxnTrpmD--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyox46e4lpjoryxftdi7.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/collins87mbathi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LsTjd2lg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--08eekAQP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/645126/d375cfdd-85cd-42c4-ad1a-575aa35566ae.jpeg" alt="collins87mbathi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/collins87mbathi/blog-site-api-with-authentication-in-node-express-and-mongodb-59h4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Blog site API with Authentication in Node, Express and MongoDB&lt;/h2&gt;
      &lt;h3&gt;Collins Mbathi ・ Oct 11 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/ericchapman/create-a-backend-in-javascript-part-4-create-your-first-http-server-5k1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m949rvRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YjETeAEU--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ph7yc1i1vqqgwpxegw5.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ericchapman" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mL1AYjEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Pv8vsbxD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/462537/34d1837f-a6d2-47ef-84e7-3090e74c3f16.png" alt="ericchapman"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ericchapman/create-a-backend-in-javascript-part-4-create-your-first-http-server-5k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Create a backend in Javascript (part 4): Create your first HTTP Server&lt;/h2&gt;
      &lt;h3&gt;Eric The Coder ・ Oct 7 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/javascriptacademy/matrix-raining-code-effect-using-javascript-4hep"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4O4qylz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wqxlbtDB--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0cr1ew0rv14nnqa8hco.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/javascriptacademy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkWxoaxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MUpyHc88--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/721655/7d35b014-cc4c-46cb-a9c6-11f944a4f604.png" alt="javascriptacademy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/javascriptacademy/matrix-raining-code-effect-using-javascript-4hep" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Matrix raining code effect using JavaScript&lt;/h2&gt;
      &lt;h3&gt;Adam Nagy ・ Oct 11 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/magarrent-org/how-to-send-a-web-form-without-code-or-any-backend-4lio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2okVoSyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7LVLh2-H--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp6wy1gd83f5uxzdv8qx.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/magarrent-org" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58z_5oxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--cb0SPXZI--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4633/473b8856-6779-401e-a83c-50cd4be38b8d.jpg" alt="Marc Garcia - Magarrent"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRDGrXsz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qGFS68KS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/684181/3f6f2f07-5f00-4c87-b7ab-19e4c165ddaf.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/magarrent-org/how-to-send-a-web-form-without-code-or-any-backend-4lio" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send a web form without code or any backend&lt;/h2&gt;
      &lt;h3&gt;Marc Garcia Torrent for Marc Garcia - Magarrent ・ Oct 8 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sonam_shukla_707cc1e27f23/i-got-my-first-freelance-job-to-build-a-site-and-i-don-t-know-how-to-write-up-a-proposal-contract-1m1j"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBGmTqle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/social_previews/article/857636.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sonam_shukla_707cc1e27f23" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRQcFEf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7DSfvKaM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/722384/dfed678f-e077-4ac8-b6c9-fa7087db7f70.png" alt="sonam_shukla_707cc1e27f23"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sonam_shukla_707cc1e27f23/i-got-my-first-freelance-job-to-build-a-site-and-i-don-t-know-how-to-write-up-a-proposal-contract-1m1j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I got my first freelance job to build a site and I don’t know how to write up a proposal/contract&lt;/h2&gt;
      &lt;h3&gt;Sonam Shukla ・ Oct 9 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/coderamrin"&gt;@coderamrin&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/rylandking"&gt;@rylandking&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/abh1navv"&gt;@abh1navv&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/collins87mbathi"&gt;@collins87mbathi&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ericchapman"&gt;@ericchapman&lt;/a&gt;
, javascriptacademy, magarrent, sonam_shukla_707cc1e27f23.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Day 6 of 100 Days of Code &amp; Scrum: How to GraphQL Completed</title>
      <author>Rammina</author>
      <pubDate>Thu, 14 Oct 2021 11:37:23 +0000</pubDate>
      <link>https://dev.to/rammina/day-6-of-100-days-of-code-scrum-how-to-graphql-completed-29ke</link>
      <guid>https://dev.to/rammina/day-6-of-100-days-of-code-scrum-how-to-graphql-completed-29ke</guid>
      <description>&lt;p&gt;Good morning, everyone!&lt;/p&gt;

&lt;p&gt;Today was a rather productive day!&lt;/p&gt;

&lt;p&gt;I got a lot of networking done for various services, I met both of my GraphQL coding and Scrum studying goals, and I managed to work on my company logo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXuhBJNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go9t0fxjxc1rqcili013.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXuhBJNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go9t0fxjxc1rqcili013.png" alt="Juggling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm starting to get a better hang of balancing coding, studying, and networking. I checked my emails less, and I don't feel as for us to check all notifications on social media. Focusing on one thing at a time is just crucial for productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned about &lt;code&gt;setContext&lt;/code&gt; and &lt;code&gt;ApolloClient&lt;/code&gt;'s caching methods such as &lt;code&gt;readQuery&lt;/code&gt; and &lt;code&gt;writeQuery&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are some of the things I've learned:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useLazyQuery&lt;/code&gt; is a version of &lt;code&gt;useQuery&lt;/code&gt; that needs to be manually executed for it to retrieve data from the server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useQuery&lt;/code&gt;, on the other hand, runs automatically when the component mounts&lt;/li&gt;
&lt;li&gt;GraphQL &lt;code&gt;subscriptions&lt;/code&gt; allows the server to automatically send data to the client side when triggered by a specific event&lt;/li&gt;
&lt;li&gt;with GraphQL &lt;code&gt;subscriptions&lt;/code&gt;, the client and server have a steady connection instead of following a typical request-and-response cycle&lt;/li&gt;
&lt;li&gt;GraphQL &lt;code&gt;subscriptions&lt;/code&gt; use &lt;code&gt;WebSocketLink&lt;/code&gt; which uses a WebSocket connection instead of HTTP (which queries and mutations use).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I managed to finish the React + Apollo client tutorial at &lt;a href="https://www.howtographql.com/"&gt;https://www.howtographql.com/&lt;/a&gt;. It was a pretty useful resource and tutorial.&lt;/p&gt;

&lt;p&gt;However, I still think I have a lot of gaps in my knowledge and I can't reliably use the hooks, functions and other concepts yet. I should probably build the project on my own that uses GraphQL, which is most likely going to help me cement my knowledge.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;The purpose of the Sprint Retrospective is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspect how the last Sprint went with regards to people, relationships, process, and tools.&lt;/li&gt;
&lt;li&gt;Identify and order the major items that went well and potential improvements&lt;/li&gt;
&lt;li&gt;Create a plan for implementing improvements to the way the Scrum Team does its work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYa8jKZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41a7n99bfnxd4vdhg5vz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYa8jKZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41a7n99bfnxd4vdhg5vz.jpg" alt="Double Thumbsup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Dark-Mode Toggle Hook in React</title>
      <author>coder4life</author>
      <pubDate>Thu, 14 Oct 2021 11:26:17 +0000</pubDate>
      <link>https://dev.to/coder4_life/dark-mode-toggle-hook-in-react-ddm</link>
      <guid>https://dev.to/coder4_life/dark-mode-toggle-hook-in-react-ddm</guid>
      <description>&lt;p&gt;With this reuseable darkmode hook it gets easy to toggle dark and light mode throughout the application. With the current state saved in localStorage the user will even get his preferred setting on next visit.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IQgn4qOC0c8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Animation Inspector: How DevTools can help when Creating Animations</title>
      <author>William Juan</author>
      <pubDate>Thu, 14 Oct 2021 11:25:36 +0000</pubDate>
      <link>https://dev.to/this-is-learning/animation-inspector-how-devtools-can-help-when-creating-animations-2g48</link>
      <guid>https://dev.to/this-is-learning/animation-inspector-how-devtools-can-help-when-creating-animations-2g48</guid>
      <description>&lt;p&gt;Different browsers come with a different set of dev tools to help developers. When it comes to animations, Chrome and Firefox have an animation inspector in their dev tools specifically for debugging animations. The animation inspector lets you modify the animation on the fly, allowing you to slow down, replay, and inspect and modify the source code of your animation.&lt;/p&gt;

&lt;p&gt;Before we dive deeper into what we can do with these tools, let me show you where you can find them. Chrome has the animation inspector option under the more tools submenu option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--viaLWv6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gird7yhwe7si60nojkb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--viaLWv6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gird7yhwe7si60nojkb9.png" alt="Chrome's Animation Inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firefox, on the other hand, has the animation inspector under the "Inspector" option, under a tab called "Animations"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5993Zjan--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tap1hd9fuigw6owdekmu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5993Zjan--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tap1hd9fuigw6owdekmu.png" alt="Firefox's Animation Inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At the time this post is written, Chrome only supports CSS animations, CSS transitions, and web animations. You wouldn’t be able to use this if you are using requestAnimationFrame for your animation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#inspecting-your-animation"&gt;
  &lt;/a&gt;
  Inspecting your Animation
&lt;/h2&gt;

&lt;p&gt;If you have the animations tab open on your dev tools, you should be seeing blocks of animation groups added to the top as your animation gets triggered on your application. Clicking on the block will open up a more detailed view of the actual animations that are being executed as shown in the images below (Chrome's followed by Firefox's).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfo8zr7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/di9j7a6fhc32r2bwqym0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfo8zr7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/di9j7a6fhc32r2bwqym0.png" alt="Chrome's Animation Inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZxKb-EA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kdnl8aab1wy840cwh4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZxKb-EA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kdnl8aab1wy840cwh4s.png" alt="Firefox's Animation Inspector"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s break down the animations tab view further and discuss some of the key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Controls - lets you play, pause and modify the speed of the animation&lt;/li&gt;
&lt;li&gt;Animation groups - shows the different groups of animations that were executed. The animation inspector groups the animations based on start time (excluding delays) predicting which animations are related to each other. From a code perspective, animations that are triggered in the same script block are grouped.&lt;/li&gt;
&lt;li&gt;Scrubber - you can drag the red vertical bar left and right to display the state of the animation at that time in the timeline&lt;/li&gt;
&lt;li&gt;Timeline - shows a breakdown of the elements in the DOM that are being animated in the animation group and the timeline for each element’s animation&lt;/li&gt;
&lt;li&gt;2 solid circles - these 2 circles mark the beginning and end of the animation. It’s possible to see multiple instances of these for cases where the animation runs for multiple iterations, where these solid circles will mark the start and end of each iteration&lt;/li&gt;
&lt;li&gt;Highlighted section - the animation duration&lt;/li&gt;
&lt;li&gt;Hollow circle - timing of keyframe rules if the animation defines any&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the components in the timeline for each element can be modified by dragging them horizontally. We can modify the duration by moving the start and end solid circles, add delays by moving the highlighted section and modify keyframe timings by moving the hollow circle. We can then view the updated animation changes by clicking on the replay button to rerun the animation group.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tweak-your-animations-timing-function-using-the-bezier-curve-editor"&gt;
  &lt;/a&gt;
  Tweak your Animation's Timing Function using the Bezier Curve Editor
&lt;/h2&gt;

&lt;p&gt;If you are using CSS keyframes in your animation, both Chrome and Firefox's dev tools also have a tool to edit the curves of your animation dynamically using Lea Verou’s &lt;a href="https://cubic-bezier.com/"&gt;cubic-bezier&lt;/a&gt; visualization.&lt;/p&gt;

&lt;p&gt;This ability to modify the curves dynamically straight in the browser is extremely helpful as you no longer have to go back and forth between your editor and your browser to tweak the bezier curves to get the right timing. After modifying the bezier curve, you can then use the replay button on the animations tab to replay the animation with the updated bezier curve. Access this feature by clicking on the squiggly line icon on the animation property of your element. Below is an image of how to access the bezier curve from your animation (Chrome's followed by Firefox's).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-Ilsayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn4cjcuifhfu53338w3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-Ilsayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nn4cjcuifhfu53338w3g.png" alt="Chrome's Bezier Curve Editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kd5_ZQ7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsetsgaehcncga0l8pdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kd5_ZQ7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsetsgaehcncga0l8pdt.png" alt="Firefox's Bezier Curve Editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The purple circles attached to the purple lines on the bezier curve editor are draggable vertically and horizontally to edit the curve of the line which in turn will update the cubic-bezier function. You can see a quick visualization of what the timing function looks like from the purple circle towards the top of the popup, showing how the animation will accelerate/decelerate over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;The animation inspector is a powerful tool that can help you when you are creating animations. I oftentimes find myself doing some fine-tuning of animations through the dev tools and copying the code over to my project.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this short post about using Chrome and Firefox's animation inspector. If you are interested in more content like this or have any questions let me know in the comments or tweet me at &lt;a href="https://twitter.com/williamjuan27"&gt;@williamjuan27&lt;/a&gt;&lt;/p&gt;

</description>
      <category>animations</category>
      <category>devtools</category>
    </item>
    <item>
      <title>I Made A Game In 72 Hours That Uses GitHub Issues To Crowd Source Maps</title>
      <author>Jesse Freeman</author>
      <pubDate>Thu, 14 Oct 2021 11:20:25 +0000</pubDate>
      <link>https://dev.to/jessefreeman/i-made-a-game-in-72-hours-that-using-github-issues-to-crowd-source-maps-13ba</link>
      <guid>https://dev.to/jessefreeman/i-made-a-game-in-72-hours-that-using-github-issues-to-crowd-source-maps-13ba</guid>
      <description>&lt;p&gt;&lt;strong&gt;Space Station 8&lt;/strong&gt; is a &lt;code&gt;Micro Platformer&lt;/code&gt; created &lt;a href="https://ldjam.com"&gt;in 72 hours for Ludum Dare 49&lt;/a&gt; based on a game I used to play on my original Macintosh called &lt;a href="https://en.wikipedia.org/wiki/Spacestation_Pheta"&gt;Spacestation Pheta&lt;/a&gt;. Space Station 8 is also heavily inspired by &lt;a href="http://make.bitsy.org"&gt;Bitsy&lt;/a&gt; and my Fantasy Console, &lt;a href="https://pixelvision8.com"&gt;Pixel Vision 8&lt;/a&gt;, which I used to create the game.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W3Bq-DU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi7riee5sxdkeicrzanj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3Bq-DU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi7riee5sxdkeicrzanj.png" alt="Space Station Pheta"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike some of the other games I've created for game jams like Ludum Dare, there are no pre-made maps at all! Instead, the entire game revolves around a simple map editor, and I invited people to submit their games via a  &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository"&gt;custom GitHub issue&lt;/a&gt;. In addition, I use  &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; to automatically build new versions of the game every time I check in new code and update the wiki, which has all the instructions. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Urqeuu5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywksrgdl8bmpagk5hlec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Urqeuu5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywksrgdl8bmpagk5hlec.png" alt="Game Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, I'll walk you through how the level editor works, how I designed the map files to be easy to share, and some of the tricks I used to leverage GitHub to help crowdsource my game's levels.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-maps"&gt;
  &lt;/a&gt;
  Making Maps
&lt;/h2&gt;

&lt;p&gt;The goal of Space Station 8 is to escape before you run out of oxygen. To do that, you will need to navigate the level, find the key, and make it to the exit in time. Each level is self-contained, and you are scored based on your ability to complete it within the amounted time and lives. There are also some prized gems you may want to collect on your way out while avoiding aliens and other deadly obstacles like spikes.&lt;/p&gt;

&lt;p&gt;When you first load Space Station 8 up, it loads up the default map. You can immediately begin editing it, or you can drag a &lt;code&gt;spacestation8.png&lt;/code&gt; map onto the game and load that up. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65hpn2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbxwspl5ikfnt2p6eb2l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65hpn2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbxwspl5ikfnt2p6eb2l.gif" alt="Drag Map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Space Station 8 map's should be at least &lt;code&gt;160&lt;/code&gt; x &lt;code&gt;132&lt;/code&gt; pixels:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mx5WWyx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0rcco7ic8p8z4ieo20z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mx5WWyx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0rcco7ic8p8z4ieo20z.png" alt="Empty Map 160x132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also provide a map that is &lt;code&gt;160&lt;/code&gt; x &lt;code&gt;152&lt;/code&gt;, where the last two rows are the sprites for the map:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TYtgHX1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phzac2lfrb1vqcba82b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TYtgHX1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phzac2lfrb1vqcba82b1.png" alt="Empty Map 160x152"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Whenever you go to the splash screen, Space Station 5 will automatically create a new &lt;code&gt;map.spacestation8.png&lt;/code&gt; for you in your &lt;code&gt;/Levels/&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Path&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;C:\Users\UserName\Documents\SpaceStation8\Levels\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MacOS&lt;/td&gt;
&lt;td&gt;/Users/UserName/SpaceStation8/Levels/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;/Users/UserName/SpaceStation8/Levels/&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Space Station 8 shows you the map editor before you can play a map. The editor has two main areas, the map and the tile picker on the bottom:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-KzBvXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/480vs8k6nuqzam5cmwnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-KzBvXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/480vs8k6nuqzam5cmwnr.png" alt="Map Editor Panels"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The white blinking box in the map area previews where the tile will be drawn. You can move the tile highlighter via a controller's d-pad, the keyboard arrows, or the mouse. By default, the mouse is hidden unless you move it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmw0aR7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vk3r73bj1xqh0g9pejst.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmw0aR7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vk3r73bj1xqh0g9pejst.gif" alt="Move Mouse In Editor.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can pick from any of the 20 tiles on the bottom of the screen to draw with. The tile with the white background is the currently selected tile. You'll also see it previewed on the map. Some tiles have a flip or alternative state. This can be used for changing the direction of an enemy or spikes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6xPRMdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2qax6smlbewj22gm064.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xPRMdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2qax6smlbewj22gm064.gif" alt="Map Editor Alt Tiles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, for a map to work, you need three things: a player, a key, and a door. When you start the game, if these things are not present, it will bring you back to the editor. There is no cap on how many players, keys, or doors you can draw on the map, but the game will only use the first of each when it processes all the tiles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#submitting-maps-with-github-issues"&gt;
  &lt;/a&gt;
  Submitting Maps With GitHub Issues
&lt;/h2&gt;

&lt;p&gt;Once you are happy with a map, you can share it with someone else by sending them the &lt;code&gt;map.spacestation8.png&lt;/code&gt; file. There are several ways to do this. You can attach it in a comment on the game's page, send it directly to them, or &lt;a href="https://github.com/PixelVision8/SpaceStation8/issues/new?assignees=jessefreeman&amp;amp;labels=map&amp;amp;template=new_map.md&amp;amp;title="&gt;file a ticket on GitHub&lt;/a&gt; and include it there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGny6UMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7zgbddmbz6rm2e6cxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGny6UMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7zgbddmbz6rm2e6cxk.png" alt="Github Map Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing to note is that some social networks like Twitter may compress the image. This will break the tilemap parser unless the image is pixel-perfect at 160 x 132 or 160 x 142. &lt;/p&gt;

&lt;p&gt;The default map template looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wq9HnMQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn81ojdfrpvshx8kt7ug.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wq9HnMQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn81ojdfrpvshx8kt7ug.png" alt="Map Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, a map is comprised of a &lt;code&gt;20&lt;/code&gt; x &lt;code&gt;17&lt;/code&gt; tile grid where each tile is &lt;code&gt;8&lt;/code&gt; x &lt;code&gt;8&lt;/code&gt; pixels. The top row is ignored, and for map images that are &lt;code&gt;142&lt;/code&gt; pixels high, the last two rows (&lt;code&gt;18&lt;/code&gt; and &lt;code&gt;19&lt;/code&gt;) are used for the game's sprites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AyyCBh6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ifoj4rbpw83lyerhrrc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyyCBh6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ifoj4rbpw83lyerhrrc.png" alt="Map Sprites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;code&gt;40&lt;/code&gt; sprites which you can also modify if you want to re-skin the game. Each sprite is fixed to a corresponding element in the game, so while you can re-skin the graphics, you will not make new ones or change the internal sprite mapping.&lt;/p&gt;

&lt;p&gt;The last thing to keep in mind when modifying the sprites, or even using drawing tools like &lt;a href="https://www.aseprite.org"&gt;Aseprite&lt;/a&gt; to modify map files, is that you will have to use the following four colors (&lt;code&gt;#2D1B2E&lt;/code&gt;, &lt;code&gt;#574B67&lt;/code&gt;, &lt;code&gt;#937AC5&lt;/code&gt;, #F9F4EA) .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE-1Xfv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z92e7jw8vgaqd7c8yzfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE-1Xfv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z92e7jw8vgaqd7c8yzfb.png" alt="Palette"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I use some custom GitHub issues to make filing bugs, requesting features. If you are unfamiliar with the GitHub issue templates, they live inside your project's &lt;code&gt;.github/ISSUE_TEMPLATE&lt;/code&gt; folder. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USLvkYpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1y72xn6voeaqu3ivcoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USLvkYpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1y72xn6voeaqu3ivcoi.png" alt="Github Issue Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing I needed to do was clean up my project's issue categories to match up with the templates I used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9D3M7yh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0gcl43bhyw1o78km25p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9D3M7yh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0gcl43bhyw1o78km25p.png" alt="GitHub Issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I created a &lt;code&gt;new_map.md&lt;/code&gt; file with the following markdown inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
name: Submit New Map
about: Did you create a level that you'd like to have included with the source code?
title: ''"
labels: map
assignees: jessefreeman
---

**Who Created the level**
Name: Jesse Freeman
Website: https://jessefreeman.com
Twitter: [@jessefreeman](https://twitter.com/jessefreeman)

**Screenshots**
Attach your map png, [add screenshots from PV8](https://docs.pixelvision8.com/pixelvisionos/screenshots) to be included in the game.

**Additional information**
Add any other context or screenshots about the map you'd like to share.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The markdown frontmatter directly maps to the issue form, and you can use it to automatically assign a label and whom the issues should go to on the project's team.&lt;/p&gt;

&lt;p&gt;Here is what the new issue looks like when someone wants to submit a new issue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oVv28lda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp7jj7w53omv8rf468zl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oVv28lda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp7jj7w53omv8rf468zl.png" alt="Submit Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, I can go through each map and decide if I want to include it in the project or not. While I could have done this with pull requests, the thinking behind using an issue is that others can see the map before adding to the game and leaving comments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_DQijgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc75cl29hgrlmhapjyoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_DQijgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc75cl29hgrlmhapjyoh.png" alt="Filter Map Issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automated-release-with-github-actions"&gt;
  &lt;/a&gt;
  Automated Release With GitHub Actions
&lt;/h2&gt;

&lt;p&gt;In addition to creating custom issues, I use GitHub actions to automatically create new builds of my game whenever I push new code to the repo. I set this up early on in the game jam and having a simple continuous integration build system removed all the stress at the end of the game jam because I point people to the latest build, and it's always up-to-date by directing them to &lt;a href="https://github.com/PixelVision8/SpaceStation8/releases/latest/"&gt;SpaceStation8/releases/latest/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I finished the game jam, I added a link to the last build,  &lt;a href="https://github.com/PixelVision8/SpaceStation8/releases/tag/v1.17.0"&gt;tag v1.17.0&lt;/a&gt;, for a snapshot of the state of the game so I could continue to make improvements after the jam.&lt;/p&gt;

&lt;p&gt;I'll write a more in-depth article on how I use GitHub Actions, but at a high level, you need to create a specific folder in your repo, &lt;code&gt;.github/workflows/&lt;/code&gt; and put your &lt;code&gt;yml&lt;/code&gt; file inside. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClUSpxEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjezqppkh9eqjdvlfllr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClUSpxEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjezqppkh9eqjdvlfllr.png" alt="GitHub Workflow Folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was already using Gulp to package up my game anyway, so I made an action that does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creates a new release and tag ( &lt;a href="https://github.com/actions/create-release"&gt;actions/create-release@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Checks out my code on Ubuntu ( &lt;a href="https://github.com/marketplace/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Create a changelog ( &lt;a href="https://github.com/marketplace/actions/beast-changelog"&gt;jimschubert/beast-changelog-action@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Install .net 5 ( &lt;a href="https://github.com/marketplace/actions/setup-net-core-sdk"&gt;actions/setup-dotnet@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Install NodeJS and call my Gulp build task ( &lt;a href="https://github.com/marketplace/actions/setup-node-js-environment"&gt;actions/setup-node@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Upload the zipped Win, Mac, and Linus build artifacts to the release ( &lt;a href="https://github.com/marketplace/actions/github-release-create-update-and-upload-assets"&gt;meeDamian/github-release@2.0&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Update the wiki ( &lt;a href="https://github.com/marketplace/actions/update-wiki"&gt;OrlovM/Wiki-Action@v1&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It sounds like a lot of steps, but once you get used to working with Gulp and GitHub Actions, the process to orchestrate all of this is relatively straightforward.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;I took a break from working on my game to recharge, and I have plans to build a more robust level editor, clean up all the bugs I'm seeing from the maps people are submitting, and add some new features to make this micro platformer engine a bit more modular.&lt;/p&gt;

&lt;p&gt;I encourage you to think outside of the box and leverage all of these fantastic free, open-source tools and services to speed up your development. I don't know many people that would take half a day out of a game jam to build a CI system, but I've had too many last-minute panic attacks where my game won't build, or I can't upload it because the jam site is slammed by everyone else trying to upload their game at the same time.  &lt;/p&gt;




&lt;p&gt;If you like this project, please leave a 👍  and  &lt;a href="https://github.com/PixelVision8/SpaceStation8"&gt;⭐️ on Github&lt;/a&gt;. Don't forget to create a level and submit it because I plan on adding a way to browse, load, and edit other people's maps in the next major update I release!&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>opensource</category>
      <category>github</category>
      <category>pixelvision8</category>
    </item>
  </channel>
</rss>
