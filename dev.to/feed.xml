<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Can Robots also do Teamwork with Humans ?</title>
      <author>Gunjan Giri</author>
      <pubDate>Sat, 23 Oct 2021 14:33:28 +0000</pubDate>
      <link>https://dev.to/gunjangiri/can-robots-also-do-teamwork-with-humans--44pl</link>
      <guid>https://dev.to/gunjangiri/can-robots-also-do-teamwork-with-humans--44pl</guid>
      <description>&lt;p&gt;As human interaction with robots and artificial intelligence increases exponentially in areas like healthcare, manufacturing, transportation, space exploration, defence technologies, information about how humans and autonomous systems i.e robots work within teams remains scarce.&lt;/p&gt;

&lt;p&gt;Recent findings from research demonstrate that human-autonomy teaming comes with interaction limitations that can leave these teams less efficient than all-human teams.&lt;/p&gt;

&lt;p&gt;Existing knowledge about teamwork primarily is based on human-to-human or human-to-automation interaction, which positions humans as supervisors of automated partners.&lt;/p&gt;

&lt;p&gt;But as autonomy has increasingly developed decision-making skills based on spontaneous situation assessments, it can become a teammate rather than a servant. These shared decision interactions are identified as human-autonomy teaming, or HAT.&lt;/p&gt;

&lt;p&gt;Nancy Cooke a cognitive psychologist and professor of human systems engineering at Arizona State University (ASU). She explored how an artificial intelligence agent can contribute to team communications failure, and how it can improve those interactions, in her discussion at the annual meeting of the American Association for the Advancement of Science (AAAS).&lt;/p&gt;

&lt;p&gt;"One of the key aspects of being on a team is interacting with team members, and a lot of that on human teams happens by communicating in natural language, which is a bit of a sticking point for AI and robots," Cooke said.&lt;/p&gt;

&lt;p&gt;Her discussion addressed a study in which teams of two humans and an AI, or "synthetic teammate," fly an unmanned aerial vehicle (UAV). The AI was the pilot, while the people served as a sensor operator and navigator.&lt;/p&gt;

&lt;p&gt;The AI, developed by the Air Force Research Laboratory, communicated with the people via text chat.&lt;/p&gt;

&lt;p&gt;"The team could function pretty well with the agent as long as nothing went wrong. As soon as things get tough or the team has to be a little adaptive, things start falling apart, because the agent isn't a very good team member."&lt;/p&gt;

&lt;p&gt;The AI was unable to anticipate its teammates' needs the way humans do. As a result, it didn't provide critical information until asked—it doesn't give a "heads up."&lt;/p&gt;

&lt;p&gt;"The whole team kind of fell apart," Cooke said. "The humans would say, 'OK, you aren't going to give me any information proactively, I'm not going to give you any either.' It's everybody for themselves."&lt;/p&gt;

&lt;p&gt;This was what Professor Cookie said and she made a bit clear that Robots can be a Ideal Teammate unless and until a long breaking mishaps occur.&lt;/p&gt;

&lt;p&gt;And even I do think Robots can be Good Team Partner supposingly we give instructions and calibrate them perfectly.&lt;/p&gt;

&lt;p&gt;What you people think ? Do let me know in the Comment Section.&lt;/p&gt;

&lt;p&gt;Till then,&lt;br&gt;
Happy Learning !!!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Javascript Notları #6 - Event'ler (Events)</title>
      <author>Turan Kılıç</author>
      <pubDate>Sat, 23 Oct 2021 13:59:38 +0000</pubDate>
      <link>https://dev.to/toour/javascript-notlari-6-eventler-events-371c</link>
      <guid>https://dev.to/toour/javascript-notlari-6-eventler-events-371c</guid>
      <description>&lt;p&gt;Merhabalar, bu yazımızda Javascript programlama dilinde "Event" adı verilen kavramı ele alacağız. Hadi başlayalım :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-nedir"&gt;
  &lt;/a&gt;
  Event Nedir?
&lt;/h2&gt;

&lt;p&gt;Event, Javascript kodlarının-komutlarının HTML ile etkileşime geçmesine olanak sağlamaktadır. HTML tagleri içerisinde yer alır.&lt;br&gt;
Event'ler çeşitli olaylar ile tetiklenebilir. Örnek olarak bir pencere açıldığında, bir butona basıldığında, pencere yeniden boyutlandırıldığında vs. gibi. Bu örnekler çoğaltılabilir.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#event-olu%C5%9Fturma"&gt;
  &lt;/a&gt;
  Event Oluşturma
&lt;/h2&gt;

&lt;p&gt;Bu yazıda buton örneği üzerinden gideceğim. Bu yüzden ilk olarak HTML tagi olan  tagini kullanarak bir buton oluşturuyorum ve CSS ile butonun boyutunu belirtiyorum:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button class="button"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt;
 &amp;lt;style&amp;gt; 
        .button { 
        height: 125px; 
        width: 250px;
        font-size: 35px;
        } 
&amp;lt;/style&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Butonumuz: :) &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2gtopWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psvnveh8wa186kjki4mg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2gtopWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psvnveh8wa186kjki4mg.png" alt="Button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Button tagi içerisinde butona tıklanıldığında gerçekleşecek bir event oluşturalım:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button class="button" onclick="tryme()"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Daha sonra, butona tıklanıldığında çağrılacak "tryme()"fonksiyonunu script tagleri içerisinde tanımlayalım:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;script&amp;gt; 
    function tryme() {
        alert("Butona Tıklandı !!");
    }

    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output aşağıdaki gibi olacaktır:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--im9FNPw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi96hnoditwkblkz4n1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--im9FNPw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi96hnoditwkblkz4n1y.png" alt="onClick Event in Javascript"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tag-i%CC%87%C3%A7erisinde-i%CC%87%C5%9Flem-ger%C3%A7ekle%C5%9Ftirme"&gt;
  &lt;/a&gt;
  Tag İçerisinde İşlem Gerçekleştirme
&lt;/h2&gt;

&lt;p&gt;Bu işlev sayesinde, eventlerde fonksiyon çağırmadan da farklı işlemler gerçekleştirilebilir. Buna bir örnek olarak butona tıklandığında üzerinde yazan yazının değiştirilmesi örneğini verelim.&lt;/p&gt;

&lt;p&gt;İşlemimizi ilk olarak fonksiyon çağırarak gerçekleştirelim:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;button class="button" onclick="tryme(this)"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt; // This keyword'ü ile butonun ID değerini gönderiyoruz.
    &amp;lt;script&amp;gt; 
    function tryme(e) {
        e.innerHTML = "Butona Tıklandı.";
    }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Butona tıklamadan önce ve sonra:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PAxdESIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la68gt5n3u0luc4gai89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PAxdESIS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la68gt5n3u0luc4gai89.png" alt="Before Click"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QlQFw3Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr039m4h9duuvzqxjk0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QlQFw3Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr039m4h9duuvzqxjk0w.png" alt="After Click"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu işlemi bir de tag içerisine yazacağımız komut ile deneyelim:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;button class="button" onclick="this.innerHTML = 'Butona Tıklandı..'"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Butona tıkladığımızda ise aşağıdaki sonucu alırız:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkH7JONz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7c9pmfjcxfofsze591h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkH7JONz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7c9pmfjcxfofsze591h.png" alt="After Click"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sayfan%C4%B1n-%C3%BCst%C3%BCndeki-bir-nesnenin-%C3%BCzerinde-de%C4%9Fi%C5%9Fiklik-yap%C4%B1lmas%C4%B1"&gt;
  &lt;/a&gt;
  Sayfanın Üstündeki Bir Nesnenin Üzerinde Değişiklik Yapılması
&lt;/h2&gt;

&lt;p&gt;İlk olarak nesneye bir ID tanımlamamız gerekiyor. Ben bir paragraf nesnesi oluşturup buna bir ID vereceğim:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;p id="P1"&amp;gt; Selamlar, bu bir paragraftır.&amp;lt;/p&amp;gt; // Bir paragraf oluşturdum ve ID değerini "P1" olarak ayarladım. 
    &amp;lt;button class="button" onclick="changeColor()"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt; // Butonun onClick Eventi içerisine bir fonksiyon tanımladım.
&amp;lt;script&amp;gt;
function changeColor() {
    var element = document.getElementById("P1"); // Sayfa üzerindeki bir elementi ID değerine göre çekip "element" değişkeni içerisinde tutuyorum.
    element.style.color = "magenta"; // "element" değişkeni artık paragrafın her özelliğine sahip, böylelikle rengini değiştirebiliyorum.
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Şimdi ise butona tıkladığımızda ne olduğuna bakalım:&lt;br&gt;
Önce:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CjVmrJhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o5nr5fsao0p6p4nxvoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CjVmrJhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o5nr5fsao0p6p4nxvoq.png" alt="Before Click"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sonra:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u8j_SkHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3artmoqd097rhpidb56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8j_SkHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3artmoqd097rhpidb56.png" alt="After Click"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#farkl%C4%B1-eventler-onmouseover-onmouseout"&gt;
  &lt;/a&gt;
  Farklı Eventler: OnMouseOver - OnMouseOut
&lt;/h2&gt;

&lt;p&gt;Bu sefer farklı event türleri deneyelim.&lt;br&gt;
OnMouseOver - Fare imleci üzerine geldiğinde çalışan eventtir.&lt;br&gt;
OnMouseOut - Fare imleci üzerine geldikten ve üstünden ayrıldıktan sonra çalışan eventtir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button class="button" onmouseover="mouseover()" onmouseout="mouseout()"&amp;gt;CLICK ME !!&amp;lt;/button&amp;gt; // Gerekli eventler koyuldu.
&amp;lt;script&amp;gt; // Ve fonksiyonlar yazıldı.
    function mouseover() {
        var element = document.getElementById("P1");
        element.innerHTML = "Mouse Butonun Üzerine Geldi.";
    }
    function mouseout() {
        var element = document.getElementById("P1");
        element.innerHTML = "Mouse Butonun Üzerinden Gitti.";
    }
    &amp;lt;/script&amp;gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
Sayfanın normal hali:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DHpqXi1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xrfo5diptmj9q4hh0xt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DHpqXi1e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xrfo5diptmj9q4hh0xt.png" alt="state1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mouse Gelince:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xh5TRVFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf00q70dhijb7tan9820.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xh5TRVFe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hf00q70dhijb7tan9820.png" alt="state2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mouse Ayrılınca:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RVmCSq_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxf5y5safafr3495c8sn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RVmCSq_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxf5y5safafr3495c8sn.png" alt="state3"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Halfmoon: The forgotten CSS Framework</title>
      <author>Darshan-Bajeja</author>
      <pubDate>Sat, 23 Oct 2021 13:51:15 +0000</pubDate>
      <link>https://dev.to/darshanbajeja/halfmoon-the-forgotten-css-framework-4g44</link>
      <guid>https://dev.to/darshanbajeja/halfmoon-the-forgotten-css-framework-4g44</guid>
      <description>&lt;p&gt;In this post you will learn about a very beautiful CSS framework, &lt;a href="https://www.gethalfmoon.com/"&gt;halfmoon css&lt;/a&gt; that you will rarely see someone using but is perfect for any person who wants to use a CSS framework.&lt;/p&gt;

&lt;p&gt;We often see people talking about &lt;a href="https://getbootstrap.com"&gt;bootstrap&lt;/a&gt;, &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; or &lt;a href="https://bulma.io"&gt;Bulma CSS&lt;/a&gt; when it comes to CSS frameworks. Once I wanted to use some css framework for one of my projects, and I tried to find some new ones, and in a blog post I saw the mention of halfmoon css, I just saw it and I was really surprised, like such a beautiful framework and no one talks about, no one uses it, or only few use it, but you rarely hear or read about it! &lt;/p&gt;

&lt;p&gt;What I like about it is that having dark mode, a very difficult task for people who are not very good at front end, but want to develop a full stack app with a good front end having both light and dark modes! It is very easy to learn as well because its look and css classes are highly inspired from bootstrap. Its documentation as well is very easy to understand, so let's now go ahead and try to create a simple tip counter app in pure html and javascript, with a dark mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-the-tip-calculator"&gt;
  &lt;/a&gt;
  Building the tip calculator
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#full-source-code-for-this-app-available-on-github"&gt;
  &lt;/a&gt;
  Full source code for this app available on Github:
&lt;/h4&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Darshan-Bajeja"&gt;
        Darshan-Bajeja
      &lt;/a&gt; / &lt;a href="https://github.com/Darshan-Bajeja/halfmoon-tip-calculator"&gt;
        halfmoon-tip-calculator
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tip calculator using the halfmoon css framework for the design
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Halfmoon CSS Tip Calculator&lt;/h1&gt;
&lt;p&gt;This is a tip caluclator made in pure html and javascript and uses the halfmoon css framework for the UI. This was built for a blog post on dev.to, demonstrating the halfmoon css framework.&lt;br&gt;
&lt;strong&gt;Link to the post:&lt;/strong&gt; &lt;a href="https://dev.to/darshanbajeja/halfmoon-the-forgotten-css-framework-4g44" rel="nofollow"&gt;https://dev.to/darshanbajeja/halfmoon-the-forgotten-css-framework-4g44&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Darshan-Bajeja/halfmoon-tip-calculator"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Firstly let's create an empty directory for the project, and create 2 files inside it- &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;script.js&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h79EWXw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs3udkjzvq59hn3hmz14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h79EWXw7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs3udkjzvq59hn3hmz14.png" alt="create directory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's open it up in any code editor, and as most of you would have guessed, I am going to open it up in VS Code.&lt;/p&gt;

&lt;p&gt;Using emmet, let's add the html boiler plate code, and then link the javascript file to the html file. Also replace the title to Tip Calculator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Tip Calculator&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's add an h1 tag just for testing purpose- which says our dear old &lt;code&gt;Hello, World!&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then open the html file in a browser. I am using Live Server extension to get hot reload.&lt;/p&gt;

&lt;p&gt;You would see and old school hello world there:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiO7-y9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3i5l5fs0ykcwfa25fh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiO7-y9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3i5l5fs0ykcwfa25fh5.png" alt="Hello World"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's visit half moon css website and move to the docs page. Click on 'Download' link on the sidebar, and scroll down to cdn section. Copy the link tag and paste in the head section and add script tag above the script tag which we added before. Now your code should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Tip Calculator&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Halfmoon CSS  --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;
      &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/halfmoon@1.1.1/css/halfmoon-variables.min.css"&lt;/span&gt;
      &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;
    &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Halfmoon JS  --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/halfmoon@1.1.1/js/halfmoon.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok so now in the browser you can see the difference in font in the html page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3rF97KV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qojl67nozi497oyl9yg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3rF97KV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qojl67nozi497oyl9yg.png" alt="hm hello world"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok so let's start making our tip calculator. Now I want everything to be in center, so let's create a div, which will be placed in the center of our web page, and give it the following classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;h-half (For giving a half height, that is 50%)&lt;/li&gt;
&lt;li&gt;w-half (For giving a half width, that is 50%)&lt;/li&gt;
&lt;li&gt;border (For giving it a border)&lt;/li&gt;
&lt;li&gt;rounded (For giving it border-radius)&lt;/li&gt;
&lt;li&gt;shadow-lg (For giving it a shadow of large size)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have experience with bootstrap, you can see that these classes are very similar to it.&lt;/p&gt;

&lt;p&gt;Now to center this div, wrap it inside another div, with classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;h-full (To give 100% height)&lt;/li&gt;
&lt;li&gt;w-full (To give 100% width)&lt;/li&gt;
&lt;li&gt;d-flex (To give a display: flex; property)&lt;/li&gt;
&lt;li&gt;flex-column (To give a flex direction of cloumn)&lt;/li&gt;
&lt;li&gt;justify-content-center (To justify the content center vertically (note that flex column makes the justify-content and align-items opposite))&lt;/li&gt;
&lt;li&gt;align-items-center (To align the items center horizontally)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now you will have this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"
        h-full
        w-full
        d-flex
        flex-column
        justify-content-center
        align-items-center
      "&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-half w-half border rounded shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 (Please ignore the formatting done by prettier)&lt;/p&gt;

&lt;p&gt;and the output would be like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_fs24eZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zh66fm6nmzx6qelor8l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_fs24eZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zh66fm6nmzx6qelor8l.png" alt="centered divs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's give a header to our centered div. So create another div element with an h1, and a button with the text- toggle dark mode.&lt;/p&gt;

&lt;p&gt;To make this beautiful let's add some halfmoon classes. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#div"&gt;
  &lt;/a&gt;
  DIV:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;d-flex&lt;/li&gt;
&lt;li&gt;justify-content-around&lt;/li&gt;
&lt;li&gt;align-items-center&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#h1"&gt;
  &lt;/a&gt;
  H1
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;font-weight-bolder&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#button"&gt;
  &lt;/a&gt;
  BUTTON
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;btn &lt;/li&gt;
&lt;li&gt;btn-primary&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will give us a beautiful header with a blue button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tfcFYZ1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv3vafh9unqlp162xaw2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tfcFYZ1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv3vafh9unqlp162xaw2.png" alt="header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's have another div below the header div, with classes d-flex, flex-column, h-three-quarter (for 75% height), align-items-center, justify-content-around, and add 2 input boxes, with type number, with placeholders total bill amount and tip percentage, and ids bill and percentage and a paragraph tag with the text: Tip amount is 0 and put the number '0' in a span with id of tip-amount.&lt;/p&gt;

&lt;p&gt;Next, to give it a good style let's add some classes. To the input boxes give the classes of form-control, form-control-lg and w-three-quarter. You pretty much now understand how the class names work in halfmoon. Also add the classes: &lt;code&gt;font-size-24&lt;/code&gt; and &lt;code&gt;font-weight-semi-bold&lt;/code&gt; to the paragraph tag to make it look good. Now finally your code inside the body tag should look like this (excluding the script tags):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"
        h-full
        w-full
        d-flex
        flex-column
        justify-content-center
        align-items-center
      "&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-half w-half border rounded shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"d-flex justify-content-around align-items-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-weight-bolder"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Tip Calculator&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Toggle Dark Mode&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"
            d-flex
            flex-column
            align-items-center
            h-three-quarter
            justify-content-around
          "&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;
            &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"bill"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Bill amount"&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-control form-control-lg w-three-quarter"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;
            &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"percentage"&lt;/span&gt;
            &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Tip percentage"&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-control form-control-lg w-three-quarter"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-size-24 font-weight-semi-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Tip amount is &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tip-amount"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the webpage should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R8JUUEF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwmrik8rzqju1ur19ch6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R8JUUEF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hwmrik8rzqju1ur19ch6.png" alt="static output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have a beautiful UI. We now have to more goals to accomplish here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make our calculator functional&lt;/li&gt;
&lt;li&gt;Make the Toggle Dark Mode button to work&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So let's do the first part, that is make our calculator functional,&lt;/p&gt;

&lt;p&gt;To do that, let's go to our javascript file and grab the html elements by their ids:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;billInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#bill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;percentageInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#percentage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tipSpan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#tip-amount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's create a function to calculate the tip and render it in the tip-amount span.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;calculateAndRenderTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;billValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;billInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;percentageValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;percentageInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;percentageValue&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;billValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;tipSpan&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And let's add the change event listener to billInput and percentangeInput, and run the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;billInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;calculateAndRenderTip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;percentageInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;calculateAndRenderTip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now our calculator is functional, but note that as we have mentioned input type as number, you need to use arrow keys for incrementing and decrementing the number to trigger the change event, or if you prefer to type in the number, then you need press enter key after typing in the number to trigger the change event, otherwise browser won't detect the change event just when you type.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iKaKvSSxXDA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now the final part is to adding the darkmode toggling functionality. And in fact it is the easiest to do!&lt;/p&gt;

&lt;p&gt;So first in the button we created for toggle darkmode, add an onclick listener for a function which you might call, suppose, toggleTheme.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"toggleTheme()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            Toggle Dark Mode
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in javascript file, let's create this function which just uses the halfmoon variable which we get from the javascript cdn of halfmoon to call the toggleDarkMode function from it, and that's all you need to do for toggling dark mode in your website, really!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggleTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;halfmoon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleDarkMode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/a8N1ZnLY-Ro"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To get the full source code of this app visit the github repository provided above the section where we started writing the code for this app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So did you see how easy and cool is Halfmoon CSS. I hope you enjoyed using halfmoon and will use it in your future projects.&lt;/p&gt;

&lt;p&gt;If you make a project using halfmoon css, be sure to link it down below in the comments of this post, I will have good time looking at them!&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Need Help</title>
      <author>AmrDarwesh</author>
      <pubDate>Sat, 23 Oct 2021 13:48:07 +0000</pubDate>
      <link>https://dev.to/amrdarwesh/need-help-21mj</link>
      <guid>https://dev.to/amrdarwesh/need-help-21mj</guid>
      <description>&lt;p&gt;I need a python program for the bike share project&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>linux</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a digital clock using Javascript</title>
      <author>Adam Nagy</author>
      <pubDate>Sat, 23 Oct 2021 13:47:26 +0000</pubDate>
      <link>https://dev.to/javascriptacademy/create-a-digital-clock-using-javascript-12d3</link>
      <guid>https://dev.to/javascriptacademy/create-a-digital-clock-using-javascript-12d3</guid>
      <description>&lt;p&gt;In today's tutorial we will create a digital clock that will show us the current time and it will also have a nice alarm feature. By the end of this tutorial you'll be familiar with working with the Javascript Date object, and also you'll have a minimal understanding of asynchronous code execution and the setTimeout API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video tutorial
&lt;/h2&gt;

&lt;p&gt;If you prefer a detailed video tutorial instead, feel free to check out the tutorial that I created on &lt;a href="https://www.youtube.com/channel/UCicOwFWkuMX0ddFaKCc_E5Q"&gt;my YouTube channel&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R-bSb7xrS5s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;The html markup for this project is pretty simple. But before we implement that, let's add the custom font from Google that we will use in the &lt;code&gt;head&lt;/code&gt; section of the HTML document. I'll also include the stylesheet that we will create later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Orbitron&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will have a section with a class of &lt;code&gt;container&lt;/code&gt; which will hold our clock. Below that we need to create an empty div, which will be used to display the current time. I give it an id of &lt;code&gt;clock&lt;/code&gt;, so it will be easier to target.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"clock"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will add the input field, so the user will be able to select a date and time to set the alarm. The important thing here is, that the input type should be &lt;code&gt;"datetime-local"&lt;/code&gt;. We'll also give it a name attribute and an onchange event handler. When the onchange event happens (so the value of the input field changes), we will fire this function &lt;code&gt;setAlarmTime(this.value)&lt;/code&gt; that we will implement in our js file just in a bit. We pass &lt;code&gt;this.value&lt;/code&gt; to the function which will give is the new, updated value of the input field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;onchange=&lt;/span&gt;&lt;span class="s"&gt;"setAlarmTime(this.value)"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"alarmTime"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"datetime-local"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we have to add the control buttons. We will wrap these two buttons into a wrapper div, and give it a css class of &lt;code&gt;controls&lt;/code&gt;. Inside that we'll add two buttons, "Set alarm" and "Clear alarm". Besides the css classes, we add click event hanler functions. We will create the functions: &lt;code&gt;setAlarm()&lt;/code&gt; and &lt;code&gt;clearAlarm()&lt;/code&gt; in javascript later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"controls"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"setAlarm()"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button set-alarm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Set alarm&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"clearAlarm()"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button clear-alarm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Clear alarm&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we have to include our javascript file at the bottom of our HTML document's body. We need to import it at the end of the document, so when our script will run, the DOM tree will be ready. (You could also include it in the head with the &lt;code&gt;defer&lt;/code&gt; keyword).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;In our &lt;code&gt;styles.css&lt;/code&gt; file I'll start with clearing every browser defined paddings and margins, and also set a dark background color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#12181B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using flexbox we'll make the container take the full viewport, and center its content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the clock we will set the font that we included earlier in the HTML, and set the desired font size. I'll also add a gradient color to the clock. To do that we will set a gradient as a background image, then we will color the font with the background gradient using the &lt;code&gt;background-clip: text&lt;/code&gt; CSS rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#clock&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Orbitron'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;253&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;136&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;197&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;142&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;116&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-moz-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-text-fill-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;-moz-text-fill-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we make some styling to the control buttons and the wrapper div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.controls&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.set-alarm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#498AFB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.clear-alarm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF3860&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h2&gt;

&lt;p&gt;This will be the hearth of our clock application. First, we will save a reference to our clock display (the div with the &lt;code&gt;clock&lt;/code&gt; id) into a display variable. We'll also set up the audio for the alarm. To do that I'll use a free alarm sound form Mixkit, feel free to use any music/sound of your choice.&lt;br&gt;
We will create a new Audio object and save it to the &lt;code&gt;audio&lt;/code&gt; variable. We'll also set the loop property of the audio object to true, as we want to play the sound, till the alarm is turned off manually. As you can see we have an &lt;code&gt;alarmTime&lt;/code&gt; and &lt;code&gt;alarmTimeout&lt;/code&gt; variables, that we initialise with null. We will use these variables to implement the alarm functionality.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;clock&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;alarmTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;alarmTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we'll implement the clock functionality. In the &lt;code&gt;updateTime&lt;/code&gt; function we create a new Date object. As we didn't provide any parameter to it it will create an object &lt;strong&gt;with the current time.&lt;/strong&gt; Then we create 3 variables to get the hour, minute and second values from the Date object. We can do it easily using the API of the javascript Date object.&lt;br&gt;
To have a nice digital display, we'll create a function which format's the time values. It places a leading zero if the number is only one digit, otherwise it uses the number. So for example if the time value provided is &lt;code&gt;9&lt;/code&gt;, it returns &lt;code&gt;09&lt;/code&gt; instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;formatTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly we have to override the &lt;code&gt;display&lt;/code&gt; DOM node's innerText to represent the current time. I used string template literals here, so anything between &lt;code&gt;${}&lt;/code&gt; will be replaced with the value of that variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;formatTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;formatTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;formatTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;



    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we just have to call this function every second to update the displayed time. We can do that by using the setInterval API, pass the updateTime function to it and pass 1000 (it is in ms) as it's second parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updateTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a working clock. It's time to implement the alarm feature. The first thing is that we have to collect and save the date and time selected by the user. We already attached an &lt;code&gt;onchange&lt;/code&gt; event listener in the HTMl, now we just have to implement that in javascript. We will simply get the value from the event handler and save it to the &lt;code&gt;alarmTime&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setAlarmTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alarmTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we should implement the &lt;code&gt;setAlarm&lt;/code&gt; function. This will be responsible for setting the alarm to the desired time and play the sound. If an &lt;code&gt;alarmTime&lt;/code&gt; is set we create two Date objects, one with the current time (empty parameters), and one using the user selected alarm time and date. If the time of the alarm is in the future, we will set the alarm. To calculate the time left till the alarm, we convert both dates to time in ms (this will give us pack time in ms since unix epoch, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime"&gt;more details here&lt;/a&gt;) and subtract the future value from the current. This ways we know, how much ms is left till the alarm shall play. We just have to set a timeout to call the play method of the audio object. We'll also save the return result of the setTimeout function into the global &lt;code&gt;alarmTimeout&lt;/code&gt; variable. We will use this reference to clear the timeout if needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setAlarm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;alarmTime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeToAlarm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;alarmTime&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeToAlarm&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timeToAlarm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nx"&gt;alarmTimeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alarm set&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last thing that we have to implement is the clear functionality of the alarm. We will stop the alarm sound if it already playing, and we will cancel the set alarm if it is in the future. So in our &lt;code&gt;clearAlarm&lt;/code&gt; function we will call the pause method of our audio object. Then if we have a scheduled alarm (so the alarmTimeout has a value), we will use the built in &lt;code&gt;clearTimeout&lt;/code&gt; function to cancel that future function call.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clearAlarm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;alarmTimeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;alarmTimeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alarm cleared&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The whole project is available &lt;a href="https://github.com/javascriptacademy-stash/clock-alarm/"&gt;on GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So this is how you can create a digital clock with alarm features in a beginner-friendly way using javascript. I think that this is an interesting project that you can build, and you also practice some fundamental javascript topics, like Dates, DOM modification and asynchronous API-s like setInterval and setTimeout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-you-can-learn-more-from-me"&gt;
  &lt;/a&gt;
  Where you can learn more from me?
&lt;/h2&gt;

&lt;p&gt;I create education content covering web-development on several platforms, feel free to 👀 check them out.&lt;/p&gt;

&lt;p&gt;I also create a newsletter where I share the week's or 2 week's educational content that I created. No bull💩 just educational content.&lt;/p&gt;

&lt;p&gt;🔗 Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;💬 Join our &lt;a href="https://discord.gg/GuxmcEgAjB"&gt;community on Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📧 Newsletter &lt;a href="https://www.getrevue.co/profile/dev_adamnagy"&gt;Subscribe here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🎥 YouTube &lt;a href="https://www.youtube.com/channel/UCicOwFWkuMX0ddFaKCc_E5Q"&gt;Javascript Academy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href="https://twitter.com/dev_adamnagy"&gt;@dev_adamnagy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📷 Instagram &lt;a href="https://www.instagram.com/javascriptacademy/"&gt;@javascriptacademy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Hitchhiker's Guide to Blockchain Development</title>
      <author>CyprianTinasheAarons</author>
      <pubDate>Sat, 23 Oct 2021 13:39:39 +0000</pubDate>
      <link>https://dev.to/cypriantinasheaarons/the-hitchhikers-guide-to-blockchain-development-5dj</link>
      <guid>https://dev.to/cypriantinasheaarons/the-hitchhikers-guide-to-blockchain-development-5dj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 😎
&lt;/h3&gt;

&lt;p&gt;Spoiler alert 🚨 I should probably have called this "How to get started with Ethereum Blockchain development" considering I will be biased towards Ethereum in this article. Ethereum is probably the easiest path you can take when trying to learn about blockchain and becoming a blockchain developer. This is mainly due to the large community, a bunch of books, and tutorials. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q58iI1aU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994897444/J_HvkTi_C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q58iI1aU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994897444/J_HvkTi_C.png" alt="Screenshot 2021-10-23 at 15.14.37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article will be a guide to all those developers that have come to my DMs on Twitter asking "How do  I get started with blockchain" and anyone else who is interested in the space and would like to take the first step. I will keep it short and simple. Firstly ...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#whats-blockchain"&gt;
  &lt;/a&gt;
  What's Blockchain? 🔗
&lt;/h4&gt;

&lt;p&gt;it is a peer-to-peer ledger system that allows end-users to transact with each other without any centralized authority. For more on this check out my &lt;a href="https://cyprianaarons.hashnode.dev/blockchain-for-dummies-ckpihiqql02x5crs18kas0566"&gt;previous article on the topic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L049G6Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994941308/OcTwPQCHw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L049G6Oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994941308/OcTwPQCHw.png" alt="e-or-gamechanger.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#whats-blockchain-development-%F0%9F%8F%8E"&gt;
  &lt;/a&gt;
  What's Blockchain Development? 🏎
&lt;/h4&gt;

&lt;p&gt;In simple terms, blockchain development is about building applications based on blockchain architecture and protocol. It can also involve a focus on developing the core of the blockchain technology which involves designing the consensus protocols and core architecture etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#types-of-blockchain-developers-%F0%9F%9B%A9"&gt;
  &lt;/a&gt;
  Types of Blockchain Developers 🛩
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt; Core Blockchain Developer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are developers responsible for architecture development, designing protocols for the blockchain solution. Designing security for the network and implementing various blockchain features.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Blockchain Software Developer &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are developers who develop and implement different use cases on top of blockchain technology developed by core blockchain developers.  This includes implementing smart contracts and developing full-stack dApps.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#roles-in-the-space"&gt;
  &lt;/a&gt;
  Roles in the space
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Blockchain Developer&lt;/li&gt;
&lt;li&gt;Blockchain Solutions Architect&lt;/li&gt;
&lt;li&gt;Blockchain Project Manager&lt;/li&gt;
&lt;li&gt;Blockchain UI/UX Developer &lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#why-become-a-blockchain-developer"&gt;
  &lt;/a&gt;
  Why become a Blockchain Developer? 🤓🧐
&lt;/h4&gt;

&lt;p&gt;Here is a quick list of the reasons &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; High paying jobs &lt;/li&gt;
&lt;li&gt;High Demand for Blockchain developers&lt;/li&gt;
&lt;li&gt;Working in cutting edge technology&lt;/li&gt;
&lt;li&gt;To beef up your resume  and portfolio&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hU6APkJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994970964/ZPUpg3YQt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hU6APkJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634994970964/ZPUpg3YQt.png" alt="pulse-survey-social-square-developed-blockchain.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#learning-roadmap-%F0%9F%9B%A3"&gt;
  &lt;/a&gt;
  Learning Roadmap 🛣
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#1-become-a-developer"&gt;
  &lt;/a&gt;
  1.  Become a Developer
&lt;/h4&gt;

&lt;p&gt;You need to have some foundational knowledge in web development, at least one cool programming language i.e Javascript/C++/Go/Python, and key computer science-related topics like Networks, Data structures and Algorithms, and Databases to name a few. This will allow you to become a well-rounded Blockchain developer and makes the learning curve to becoming a Blockchain Dev less steep.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#11-read-up-on-satoshi-nakamoto-white-paper-on-bitcoin"&gt;
  &lt;/a&gt;
  1.1 Read up on Satoshi Nakamoto White paper on Bitcoin
&lt;/h4&gt;

&lt;p&gt;White papers are documents that contain text about the purpose and technology behind a blockchain project. In 2008 Satoshi Nakamoto published a paper with the title Bitcoin: A Peer to peer Electronic Cash System, which helped start what is now the Blockchain revolution. Bitcoin is currently valued at 60,644 USD at the time of writing this article. That's insane!!&lt;/p&gt;

&lt;p&gt;Here is a link to the document &lt;a href="https://bitcoin.org/bitcoin.pdf"&gt;Bitcoin Whitepaper&lt;/a&gt;. Reading it will give you an appreciation of what Satoshi intended to do with Bitcoin and how bitcoin leverages blockchain technology.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-learn-blockchain-basics"&gt;
  &lt;/a&gt;
  2. Learn Blockchain Basics
&lt;/h4&gt;

&lt;p&gt;The goal here is to learn everything you can about Blockchain to get a good foundation of the technology before moving on to other things. Jumping this stage will result in you not having a full picture of the technology and will make learning technologies like Ethereum Blockchain difficult.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn a bunch of key definitions i.e what is a  blockchain? &lt;/li&gt;
&lt;li&gt;Cryptography &lt;/li&gt;
&lt;li&gt;Distributed Systems i.e Distributed ledge technology&lt;/li&gt;
&lt;li&gt;Develop a simple blockchain from scratch &lt;/li&gt;
&lt;li&gt;Understand the different use cases of Blockchain&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#3-learn-how-to-develop-smart-contracts"&gt;
  &lt;/a&gt;
  3. Learn how to develop Smart Contracts
&lt;/h4&gt;

&lt;p&gt;Smart contracts are a very significant component of blockchain technology. For Ethereum blockchain development you can make use of the Solidity programming language to write your smart contracts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get an understanding  of smart contracts&lt;/li&gt;
&lt;li&gt;Code smart contracts with the Solidity Language&lt;/li&gt;
&lt;li&gt;Run and transact with smart contracts using tools like Remix IDE&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#4-learn-how-to-use-web3js-or-ethersjs"&gt;
  &lt;/a&gt;
  4. Learn how to use web3.js or Ethers.js
&lt;/h4&gt;

&lt;p&gt;These tools will allow you to build frontend interfaces that can interact with your  Ethereum blockchain solution.&lt;/p&gt;

&lt;p&gt;Heres links to the documentation: &lt;a href="https://web3js.readthedocs.io/en/v1.5.2/"&gt;Web3&lt;/a&gt; and &lt;a href="https://docs.ethers.io/v5/"&gt;Ethers&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-build-projects"&gt;
  &lt;/a&gt;
  5. Build Projects
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;NFT Game&lt;/li&gt;
&lt;li&gt;Distributed Exchange (DEX)&lt;/li&gt;
&lt;li&gt;NFT Marketplace&lt;/li&gt;
&lt;li&gt;Defi payments application &lt;/li&gt;
&lt;li&gt;A crowdfunding platform&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#6-apply-for-parttime-or-fulltime-jobs"&gt;
  &lt;/a&gt;
  6. Apply for part-time or full-time jobs
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://crypto.jobs/"&gt;Crytojobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remoteok.io/"&gt;RemoteOk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freeflow.team/devform"&gt;Freeflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cryptocurrencyjobs.co/remote/"&gt;Crytocurrency Jobs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#7-share-your-knowledge-with-others"&gt;
  &lt;/a&gt;
  7. Share your knowledge with Others
&lt;/h4&gt;

&lt;p&gt;One of the best ways to learn and master a  skill is by teaching it to others. By blogging, teaching others, and posting threads on social media. Sharing your knowledge can also be a game-changer when it comes to getting opportunities. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#useful-links-and-resources-%F0%9F%96%87"&gt;
  &lt;/a&gt;
  Useful Links and Resources 🖇
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Blockchain

 https://cognitiveclass.ai/courses/blockchain-course
 https://github.com/yjjnls/awesome-blockchain
 https://cyprianaarons.hashnode.dev/blockchain-for-dummies-ckpihiqql02x5crs18kas0566

2. Solidity

 https://www.tutorialspoint.com/solidity/index.htm
 https://cryptozombies.io/
 https://github.com/bkrem/awesome-solidity

3. Web3.js

https://www.useweb3.xyz/
https://asiedu-dev.hashnode.dev/web30-a-down-to-earth-understanding-of-this-- new-raging-evolution

4. Ethereum

https://www.tutorialspoint.com/ethereum/index.htm
https://github.com/ttumiel/Awesome-Ethereum
https://ethereum.org/en/developers/
https://ethereum.org/en/whitepaper/

5. Dapps

https://www.dappuniversity.com/
https://medium.com/heptagon/step-by-step-guide-to-build-a-dapp-a-homo-sapiens-2-day-love-affair-with-ethereum-dapp-de2b0dea12f1

6. Nft

 https://nftschool.dev/
 https://github.com/gianni-dalerta/awesome-nft
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#books-on-blockchain"&gt;
  &lt;/a&gt;
  Books on Blockchain 📚
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Blockchain Technology Explained 2021: The Ultimate Beginner's Guide About Blockchain by Warren Larsen&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Beginning Ethereum and Solidity with React by Greg Lim &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Infinite Machine: How an Army of Crypto-hackers Is Building the Next Internet k by Camila Russo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn Ethereum: Build your own decentralized applications with Ethereum Book by Dongying Song, Xun Wu, and Zhihong Zou&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mastering Ethereum: Building Smart Contracts and DApps by Andreas A&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion   🚀🚀🚀
&lt;/h4&gt;

&lt;p&gt;I hope my article helps you get started with Blockchain development. And if so please react to it, share it, and let us make it go viral lol😂&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thank you for reading this -Follow me on &lt;a href="https://twitter.com/CyprianAarons"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Checkout my &lt;a href="//cyprianaarons.co.zw"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cover Photo by David Kopacz from Pexels&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/cyprianaarons"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ethereum</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Parsing and reading Excel binary data using Pandas</title>
      <author>Bruno Oliveira</author>
      <pubDate>Sat, 23 Oct 2021 12:55:57 +0000</pubDate>
      <link>https://dev.to/brunooliveira/parsing-and-reading-excel-binary-data-using-pandas-lkn</link>
      <guid>https://dev.to/brunooliveira/parsing-and-reading-excel-binary-data-using-pandas-lkn</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, it can be necessary to parse data in binary format from an external source in order to work with it. &lt;br&gt;
Usually, when encoding the data from its original source into a binary format, some information that retains the original structure of the data is kept, for example, &lt;code&gt;xlsb&lt;/code&gt; for binary Excel data.&lt;br&gt;
Ideally, when decoding the data back into its original format, we want some form of "typed conversion", where we can access the original data in the format it was originally stored.&lt;br&gt;
Let's see how to do that using the Python library &lt;code&gt;pandas&lt;/code&gt;, motivated by a short real-world example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An example to set the stage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's assume that we have real-world data containing information about the changes in acceleration on the crest of a dam over time, measured by accelerometers installed on the crest itself. This data is recorded in an Excel file containing two columns: &lt;code&gt;t&lt;/code&gt;, representing the time in seconds, and &lt;code&gt;a (mg)&lt;/code&gt; the corresponding acceleration value in micro-g.&lt;br&gt;
Now, let's suppose, for monitoring purposes and displaying chart data, this file is encoded into binary and stored in a MongoDB DB as a binary field, so, when looking inside the database documents, for example, via a managed &lt;a href="//cloud.mongodb.com"&gt;Atlas database&lt;/a&gt;, we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LqxilVDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp19we130d8glgf040op.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LqxilVDL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp19we130d8glgf040op.png" alt="binary format"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note how it is stored in a binary format in the DB. Document databases are well-suited for storing this style of unstructured data, which is why we show a NoSQL database here, but, a SQL database would work just as fine.&lt;/p&gt;

&lt;p&gt;So, now, we have a field in a database that is nothing more than a plain stream of binary data. Let's see how to get a typed decoding from it, so, we can effectively rebuild our original excel data to be used by any client app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using pandas+BytesIO to get a typed conversion into the original excel format&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now that we have our binary data, we need to consume it at the client side. In order to do it, we can leverage a combination of two distinct packages: &lt;code&gt;BytesIO&lt;/code&gt;, a standard Python package that can parse a stream of bytes using a specific encoding, and &lt;code&gt;pandas&lt;/code&gt;, which, quoting the official website, " is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language.". Note that the &lt;code&gt;read_excel&lt;/code&gt; built-in function from pandas requires installing an additional dependency: &lt;code&gt;openpyxl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The trick is to use composition of the function calls, by nesting them inside one another: first we process the binary stream with BytesIO and then, using that parsed stream, we can pass it into pandas, and, in particular, to the &lt;code&gt;read_excel&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;Let's assume that in our mongoDB database, we have the binary file stored in a list called &lt;code&gt;dataFiles&lt;/code&gt; and we want to parse the first file in the list. Assuming &lt;code&gt;mongoClient&lt;/code&gt; is a configured and ready-to-use client, the chaining code would look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd

(...)

excel_data = pd.read_excel(io.BytesIO(mongoClient['dataFiles'][0]))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, inside the variable &lt;code&gt;excel_data&lt;/code&gt; we have an array of Nx2 entries, where N is total number of rows in the excel file, which, in this example is 4000, so, when we print the variable to the console, here is the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;         t    a (mg)
0      0.00  0.000358
1      0.02 -0.000466
2      0.04 -0.000181
3      0.06  0.000697
4      0.08  0.000618
     ...       ...
3996  79.92 -0.001205
3997  79.94  0.000120
3998  79.96 -0.000061
3999  79.98 -0.000022
4000  80.00  0.000142
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;exactly as the original excel file format, decoded from the binary format correctly!&lt;/p&gt;

&lt;p&gt;Now, if we want to have access to a column, we can actually do it in a typed way, so, printing &lt;code&gt;excel_data['t'][0]&lt;/code&gt; will give us back the value 0.00 as a 64 bit float value, typed, as we wanted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using a combination of standard library and open-source libraries, we can see how simple it is to convert binary data to an Excel format and process and operate on it.&lt;/p&gt;

&lt;p&gt;The main trick is to use functional composition of different libraries in order to have the data flowing in between them in the required compatible formats, and, finally, being outputted in a typed format (can be either numeric or text, dependending on the data that was in the Excel). Then, the resulting 2D array operates like an hashmap where the keys are the headers from the various Excel columns.&lt;/p&gt;

</description>
      <category>python</category>
      <category>pandas</category>
      <category>excel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>7 GitHub projects to supercharge your Docker practices 🚀🧑‍💻</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Sat, 23 Oct 2021 12:46:10 +0000</pubDate>
      <link>https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80</link>
      <guid>https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80</guid>
      <description>&lt;p&gt;Docker is an open-source container management platform used to build, run and package applications for deployment. It is an essential tool in every developer's toolkit.&lt;/p&gt;

&lt;p&gt;Here's a list of 7 GitHub projects which can make your Docker workflow better.😎&lt;/p&gt;




&lt;p&gt;&lt;a href="https://bit.ly/3A6k4an"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application performance monitoring tool. SigNoz is built to give SaaS like user experience combined with the perks of open-source software.&lt;/p&gt;

&lt;p&gt;Check out our GitHub repo👇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-github-signozsignoz-"&gt;
  &lt;/a&gt;
  &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥.   👉  Open source Application Performance Monitoring (APM) &amp;amp; Observability tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;
&lt;h3&gt;

  &lt;a href="https://signoz.io/docs" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.zh-cn.md"&gt;&lt;b&gt;ReadMe in Chinese&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.de-de.md"&gt;&lt;b&gt;ReadMe in German&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.pt-br.md"&gt;&lt;b&gt;ReadMe in Portuguese&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://bit.ly/signoz-slack" rel="nofollow"&gt;&lt;b&gt;Slack Community&lt;/b&gt;&lt;/a&gt; •
  &lt;a href="https://twitter.com/SigNozHq" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;
&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;
&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;
&lt;p&gt;👉 Run aggregates on trace data to get business relevant metrics&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Join our Slack community&lt;/h2&gt;
&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; 👋&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-docker-labs"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/docker/labs"&gt;Docker Labs&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 10.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo contains Docker labs and tutorials authored both by Docker, and by members of the community. We welcome contributions and want to grow the repo. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker"&gt;
        docker
      &lt;/a&gt; / &lt;a href="https://github.com/docker/labs"&gt;
        labs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a collection of tutorials for learning how to use Docker with various tools. Contributions welcome.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Docker Tutorials and Labs&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;At this time we are not actively adding labs to this repository. Our focus is on &lt;a href="https://training.play-with-docker.com" rel="nofollow"&gt;training.play-with-docker.com&lt;/a&gt; where new lab and workshop oriented content is being added. We welcome fixes to existing content. For any new content you wish to contribute, please use this repository:&lt;a href="https://github.com/play-with-docker/play-with-docker.github.io"&gt;https://github.com/play-with-docker/play-with-docker.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This repo contains &lt;a href="https://docker.com" rel="nofollow"&gt;Docker&lt;/a&gt; labs and tutorials authored both by Docker, and by members of the community. We welcome contributions and want to grow the repo.&lt;/p&gt;
&lt;h4&gt;
Docker tutorials:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsbeginner/readme.md"&gt;Docker for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsswarm-mode/README.md"&gt;Docker Swarm Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/labsdeveloper-tools/README.md"&gt;Configuring developer tools and programming languages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Java
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/java-debugging"&gt;Live Debugging Java with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/java/"&gt;Docker for Java Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node.js
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/nodejs-debugging"&gt;Live Debugging a Node.js application in Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/nodejs/porting/"&gt;Dockerizing a Node.js application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labswindows/readme.md"&gt;Docker for ASP.NET and Windows containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labs12factor/README.md"&gt;Building a 12 Factor app with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labssecurity/README.md"&gt;Docker Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsnetworking/"&gt;Docker Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdockercon-us-2017/"&gt;Hands-on Labs from DockerCon US 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Community tutorials&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/community/blob/master/curated-content.md"&gt;Docker Tutorials from the Community&lt;/a&gt; - links to a different repository&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/labs/tree/master/Docker-Orchestration"&gt;Advanced&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/docker/labs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-minify-docker-container-image-by-30x"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/docker-slim/docker-slim"&gt;Minify Docker Container image by 30x&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 10.8k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo can be used to optimize and secure containers, and the author also claims that you can minify your Docker images by 30x.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker-slim"&gt;
        docker-slim
      &lt;/a&gt; / &lt;a href="https://github.com/docker-slim/docker-slim"&gt;
        docker-slim
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      DockerSlim (docker-slim): Don't change anything in your Docker container image and minify it by up to 30x (and for compiled languages even more) making it secure too! (free and open source)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/docker-slim/docker-slimassets/images/dslim/DockerSlimLogo1Big.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abQR-On0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/docker-slim/docker-slimassets/images/dslim/DockerSlimLogo1Big.png" alt="DSLIM1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/docker-slim/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b018f50edf4d2cd030f4ebcfac5f4cd28235d53385eeff7472f831516d1d4a88/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="Gitter chat"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/9tDyxYS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9726a22cdc1539c17bdbdf7d1920b75825499b03d8a28c7b4916bd8304d3ac/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d63686174266d6573736167653d6f6e253230646973636f726426636f6c6f723d373338394438267374796c653d666f722d7468652d6261646765" alt="Discord chat"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/DockerSlim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5959e8f03e7b7c9f15a9fa267a0ee46821e55837e6becc3515401e54fc70dab8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f6c6c6f772d6f6e253230747769747465722d2532333144413146322e7376673f7374796c653d666f722d7468652d6261646765266c6f676f436f6c6f723d7768697465" alt="Follow"&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCy7RHjJlaBhpCCbChrd8POA?sub_confirmation=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/598c78f4e374db546402736ffdfdd9b7607500135657107d43e38199e8fa3a37/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d596f75547562652d7265643f7374796c653d666f722d7468652d6261646765266c6f676f3d796f7574756265266c6f676f436f6c6f723d7768697465" alt="Youtube"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/docker-slim/docker-slim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74f2ef92071cb14abb7a28c9422d8c9b450ec7ec7aa63a899a43ac43f76577f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d3930386138353f6c6f676f3d676974706f64267374796c653d666f722d7468652d6261646765" alt="Gitpod ready-to-code"&gt;&lt;/a&gt;
&lt;a href="https://github.com/docker-slim/docker-slim#installation"&gt;&lt;img src="https://camo.githubusercontent.com/33c7c804d9841f9f00432f9054a1e3847c1ce575e8f2fe924d242d79ac0875c8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f696e7374616c6c2d646f636b65722d2d736c696d2d626c75653f7374796c653d666f722d7468652d6261646765" alt="Install DockerSlim"&gt;&lt;/a&gt;
&lt;a href="https://github.com/docker-slim/examples"&gt;&lt;img src="https://camo.githubusercontent.com/7cb22ecde6a9ceb596cdd87244dcaca23a84bb26f8c3c85097f43c06894b6328/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b65722d2d736c696d2d6170702532306578616d706c65732d677265656e3f7374796c653d666f722d7468652d6261646765" alt="Get Examples"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portal.slim.dev/login?invitecode=invite.1s85zlfnYX0p5TT1XKja49pAHbL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90f7f38a10a37042e4dc9b1cc1ee94e992a2d9494122f346ea022d9feee6b00a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d536c696d253230536161532d7265643f7374796c653d666f722d7468652d6261646765" alt="Try Slim SaaS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Optimize Your Experience with Containers. Make Your Containers Better, Smaller, More Secure and Do Less to Get There (free and open source!)&lt;/h1&gt;
&lt;p&gt;Don't change anything in your Docker container image and minify it by up to 30x making it secure too! Optimizing images isn't the only thing it can do though. It can also help you understand and author better container images.&lt;/p&gt;
&lt;p&gt;Keep doing what you are doing. No need to change anything. Use the base image you want. Use the package manager you want. Don't worry about hand optimizing your Dockerfile. You shouldn't have to throw away your tools and your workflow to have small container images.&lt;/p&gt;
&lt;p&gt;Don't worry about manually creating Seccomp and AppArmor security profiles. You shouldn't have to become an expert in Linux syscalls, Seccomp and AppArmor to have secure containers. Even if you do know enough about it wasting time reverse engineering your application behavior…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/docker-slim/docker-slim"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-dockerfiles-for-popular-apps"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/jessfraz/dockerfiles"&gt;Dockerfiles for popular Apps&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 11.3k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Author Jessie Frazelle has built Docker images of popular applications to run on desktop.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jessfraz"&gt;
        jessfraz
      &lt;/a&gt; / &lt;a href="https://github.com/jessfraz/dockerfiles"&gt;
        dockerfiles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Various Dockerfiles I use on the desktop and on servers.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
dockerfiles&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/jessfraz/dockerfiles/actions?query=workflow%3A%22make+test%22+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xE796cO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jessfraz/dockerfiles/workflows/make%2520test/badge.svg" alt="make test"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a repo to hold various Dockerfiles for images I create.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jessfraz/dockerfiles#resources"&gt;Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#my-dotfiles"&gt;My dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jessfraz/dockerfiles#contributing"&gt;Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#using-the-makefile"&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;Almost all of these live on dockerhub under &lt;a href="https://hub.docker.com/u/jess/" rel="nofollow"&gt;jess&lt;/a&gt;
Because you cannot use notary with autobuilds on dockerhub I also build these
continuously on a private registry at &lt;a href="https://r.j3ss.co/" rel="nofollow"&gt;r.j3ss.co&lt;/a&gt; for public download. (You're
welcome.)&lt;/p&gt;
&lt;h2&gt;
Resources&lt;/h2&gt;
&lt;h3&gt;
My dotfiles&lt;/h3&gt;
&lt;p&gt;You may also want to checkout my &lt;a href="https://github.com/jessfraz/dotfiles"&gt;dotfiles&lt;/a&gt;, specifically the aliases for all these files which are here: &lt;a href="https://github.com/jessfraz/dotfiles/blob/master/.dockerfunc"&gt;github.com/jessfraz/dotfiles/blob/master/.dockerfunc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;I try to make sure each Dockerfile has a command at the top to document running it,
if a file you are looking at does not have a command, please
pull request it!&lt;/p&gt;
&lt;h3&gt;
Using the &lt;code&gt;Makefile&lt;/code&gt;
&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;$ make help
build                          Builds all the dockerfiles in the repository
dockerfiles                    Tests the changes to the Dockerfiles build.
image                          Build a Dockerfile (ex. DIR=telnet).
latest-versions                Checks all the&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jessfraz/dockerfiles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-dockerfile-best-practices"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/hexops/dockerfile"&gt;Dockerfile best practices&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 3.3k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repository has best-practices for writing Dockerfiles.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hexops"&gt;
        hexops
      &lt;/a&gt; / &lt;a href="https://github.com/hexops/dockerfile"&gt;
        dockerfile
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Dockerfile best-practices for writing production-worthy Docker images.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dockerfile best practices &lt;a href="https://hexops.com" rel="nofollow"&gt;&lt;img alt="Hexops logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMxXJBzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/hexops/media/master/readme.svg"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Writing production-worthy Dockerfiles is, unfortunately, not as simple as you would imagine. Most Docker images in the wild fail here, and even professionals often&lt;a href="https://github.com/docker-library/postgres/issues/175"&gt;[1]&lt;/a&gt; get&lt;a href="https://github.com/prometheus/prometheus/issues/3441"&gt;[2]&lt;/a&gt; this&lt;a href="https://github.com/caddyserver/caddy-docker/issues/104"&gt;[3]&lt;/a&gt; wrong&lt;a href="https://github.com/docker-library/postgres/issues/796"&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This repository has best-practices for writing Dockerfiles that I (@slimsag) have quite painfully learned over the years both from my personal projects and from my work @sourcegraph. This is all guidance, not a mandate - there may sometimes be reasons to not do what is described here, but if you &lt;em&gt;don't know&lt;/em&gt; then this is probably what you should be doing.&lt;/p&gt;
&lt;h2&gt;
How to use this&lt;/h2&gt;
&lt;p&gt;Copy &lt;a href="https://github.com/hexops/dockerfile/blob/main/Dockerfile"&gt;the Dockerfile&lt;/a&gt; into your own project and follow the comments to create &lt;em&gt;your&lt;/em&gt; Dockerfile.&lt;/p&gt;
&lt;h2&gt;
Best practices included in the Dockerfile&lt;/h2&gt;
&lt;p&gt;The following are included in the Dockerfile in this repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#run-as-a-non-root-user"&gt;Run as a non-root user&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#do-not-use-a-uid-below-10000"&gt;Do not use a UID below 10,000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#use-a-static-uid-and-gid"&gt;Use a static UID and GID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hexops/dockerfile#do-not-use-latest-pin-your-image-tags"&gt;Do&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hexops/dockerfile"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-distroless-docker-images"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;Distroless Docker images&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 11k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo has language focused docker images that contains only the applications and its runtime dependencies.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GoogleContainerTools"&gt;
        GoogleContainerTools
      &lt;/a&gt; / &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;
        distroless
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🥑  Language focused docker images, minus the operating system.  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
"Distroless" Docker Images&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/distroless/actions/workflows/ci.yaml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bFr3r7VC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/GoogleContainerTools/distroless/actions/workflows/ci.yaml/badge.svg" alt="CI Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;"Distroless" images contain only your application and its runtime dependencies
They do not contain package managers, shells or any other programs you would expect to find in a standard Linux distribution.&lt;/p&gt;
&lt;p&gt;For more information, see this &lt;a href="https://swampup2017.sched.com/event/A6CW/distroless-docker-containerizing-apps-not-vms?iframe=no&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no" rel="nofollow"&gt;talk&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=lviLZFciDv4" rel="nofollow"&gt;video&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;
Why should I use distroless images?&lt;/h2&gt;
&lt;p&gt;Restricting what's in your runtime container to precisely what's necessary for your app is a best practice employed by Google
and other tech giants that have used containers in production for many years
It improves the signal to noise of scanners (e.g. CVE) and reduces the burden of establishing provenance to just what you need.&lt;/p&gt;
&lt;p&gt;Distroless images are &lt;em&gt;very small&lt;/em&gt;
The smallest distroless image, &lt;code&gt;gcr.io/distroless/static&lt;/code&gt;, is around 650 kB.
That's about 25% of the size of &lt;code&gt;alpine&lt;/code&gt; (~2.5 MB), and less than 1.5% of the size of &lt;code&gt;debian&lt;/code&gt; (50 MB).&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;gcr.io/distroless/static&lt;/code&gt; is a container image that's much…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GoogleContainerTools/distroless"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-watchtower"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/containrrr/watchtower"&gt;WatchTower&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 9.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This GitHub repo can be used to automate Docker container base image updates.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/containrrr"&gt;
        containrrr
      &lt;/a&gt; / &lt;a href="https://github.com/containrrr/watchtower"&gt;
        watchtower
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A process for automating Docker container base image updates. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/containrrr/watchtower./logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uov0L2YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/containrrr/watchtower./logo.png" width="450"&gt;&lt;/a&gt;
&lt;h1&gt;
Watchtower&lt;/h1&gt;
&lt;p&gt;A process for automating Docker container base image updates
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bb5f668dcb473565f74858a90fe268627f29042554033bcb35ea67d1d958d0d3/68747470733a2f2f636972636c6563692e636f6d2f67682f636f6e7461696e7272722f7761746368746f7765722e7376673f7374796c653d736869656c64" alt="Circle CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bce5bd5495058e1d66acda4134c017ba175645af281c7644435e5132bda6d02/68747470733a2f2f636f6465636f762e696f2f67682f636f6e7461696e7272722f7761746368746f7765722f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2ab639ff899a63a1fbf7fd2773dafd4891ff0cdbee02f3e0f311523e4acc07b/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f636f6e7461696e7272722f7761746368746f7765723f7374617475732e737667" alt="GoDoc"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a491791c338595d1faa34fa48f0da7e5ffd059c0ee19752d478de164d6fe4e09/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f636f6e7461696e7272722f7761746368746f776572" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://github.com/containrrr/watchtower/releases"&gt;&lt;img src="https://camo.githubusercontent.com/9a10ec6b9b5638f9f88491bdb3139aa5a2d45adfe8bb117426ccdcdc7b725051/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f636f6e7461696e7272722f7761746368746f7765722e737667" alt="latest version"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d6e5580e915a413fa60d140470c2de1dcf71716d8403d648b9aae8057ecf154/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f6e7461696e7272722f7761746368746f7765722e737667" alt="Apache-2.0 License"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/gh/containrrr/watchtower/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=containrrr/watchtower&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f13c220cbca0ffd4154803c02acebd3ce8b62541eb8250d44c3358970117953b/68747470733a2f2f6170702e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3163343863666237363436643430303961613863366637313238373637306238" alt="Codacy Badge"&gt;&lt;/a&gt;
&lt;a href="https://github.com/containrrr/watchtower#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/29746966a3830cba472d0fecc8ad0faadb3e3f7dd589bf2a95c32551e4c54065/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f636f6e7461696e7272722f7761746368746f776572" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11ad68978d447f234f699a8d7f0de989863bbb4640c35b3986a810ac70e5a430/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f636f6e7461696e7272722f7761746368746f7765722e737667" alt="Pulls from DockerHub"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry.&lt;/p&gt;
&lt;p&gt;Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially. Run the watchtower container with the following command:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;$ docker run -d \
    --name watchtower \
    -v /var/run/docker.sock:/var/run/docker.sock \
    containrrr/watchtower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;The full documentation is available at &lt;a href="https://containrrr.dev/watchtower" rel="nofollow"&gt;https://containrrr.dev/watchtower&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributors&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow"&gt;emoji key&lt;/a&gt;):&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
&lt;tr&gt;
    &lt;td&gt;
&lt;a href="http://codelica.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_f-lFe3R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/386101%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;James&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Codelica" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#ideas-Codelica" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://kopfkrieg.org" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PNJToIqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/5047813%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Florian&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3AKopfKrieg" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=KopfKrieg" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/bdehamer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wLCreECc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars1.githubusercontent.com/u/398027%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Brian DeHamer&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=bdehamer" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#maintenance-bdehamer" title="Maintenance"&gt;🚧&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/rosscado"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HYhSoIJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars1.githubusercontent.com/u/16578183%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Ross Cadogan&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rosscado" title="Code"&gt;💻&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/stffabi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MIYA3Gd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars0.githubusercontent.com/u/9464631%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;stffabi&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=stffabi" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#maintenance-stffabi" title="Maintenance"&gt;🚧&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/ATCUSA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YY1VSCb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/3581228%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Austin&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ATCUSA" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://labs.ctl.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Jyy6J4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/6181487%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;David Gardner&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Adavidgardner11" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=davidgardner11" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
&lt;a href="https://github.com/dolanor"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2DzR_eyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/928722%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Tanguy ⧓ Herrmann&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=dolanor" title="Code"&gt;💻&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/rdamazio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRa1i5hQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/997641%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Rodrigo Damazio Bovendorp&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://www.taisun.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLsvGk7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/1852688%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Ryan Kuba&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower#infra-thelamer" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/cnrmck"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dHhgQmkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/22061955%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;cnrmck&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=cnrmck" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://harrywalter.co.uk" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qC9FeZJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/338588%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Harry Walter&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=haswalt" title="Code"&gt;💻&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://projectsperanza.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vYroywfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/74515%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Robotex&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Robotex" title="Documentation"&gt;📖&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://geraldpape.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-JFAxmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars0.githubusercontent.com/u/1494211%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Gerald Pape&lt;/b&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/containrrr/watchtower"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7-docker-bench-for-security"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/docker/docker-bench-security"&gt;Docker bench for security&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐️ GitHub stars: 7.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Docker Bench for Security is a script that checks for dozens of common best-practices around deploying Docker containers in production.&lt;/p&gt;




&lt;p&gt;I hope you enjoyed this list!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>docker</category>
      <category>kubernetes</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Top 5 Visual Studio Code Extensions for Programmers (2021)</title>
      <author>Mohammed Abiola</author>
      <pubDate>Sat, 23 Oct 2021 12:30:58 +0000</pubDate>
      <link>https://dev.to/devmohy/top-5-visual-studio-code-extensions-for-programmers-2021-3nl3</link>
      <guid>https://dev.to/devmohy/top-5-visual-studio-code-extensions-for-programmers-2021-3nl3</guid>
      <description>&lt;p&gt;One of the best code editors in the developer community is Visual Studio Code. The numerous extensions that speed up the development process are one of the reasons behind VS Code's popularity.&lt;/p&gt;

&lt;p&gt;This post will cover Top 5 Vs Code extensions for developers in 2021 which will help improve productivity and speed up development processes.&lt;/p&gt;

&lt;p&gt;Let get Started;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Prettier&lt;br&gt;
Prettier is a code formatter popularly used by several developers. It supports so many languages like JavaScript, JSX, Angular, Vue and many more. When working with other developers, having uniform formatting and styling across your code can save a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Share&lt;br&gt;
Live Share enables you to quickly collaborate with a friend, classmate, or professor on the same code without the need to sync code or to configure the same development tools, settings, or environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Server&lt;br&gt;
Launch a development local Server with live reload feature for static &amp;amp; dynamic pages, this extension will help instantly reflect changes in browser each time you save your code which improve productivity and make it easier to do some quick experiment with your code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6 Snippets&lt;br&gt;
This extension contains code snippets for JavaScript in ES6 syntax for Vs Code editor (supports both JavaScript and TypeScript).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Debugger for chrome&lt;br&gt;
A VS Code extension to debug your JavaScript code in the Google Chrome browser, or other targets that support the Chrome DevTools Protocol.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>vscode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Javascript Notları #5 - Objeler, Obje Oluşturma ve Kullanma (Objects, Creating and Using)</title>
      <author>Turan Kılıç</author>
      <pubDate>Sat, 23 Oct 2021 12:24:18 +0000</pubDate>
      <link>https://dev.to/toour/javascript-notlari-5-objeler-obje-olusturma-ve-kullanma-objects-creating-and-using-4b1m</link>
      <guid>https://dev.to/toour/javascript-notlari-5-objeler-obje-olusturma-ve-kullanma-objects-creating-and-using-4b1m</guid>
      <description>&lt;p&gt;Merhabalar, bu yazımızda ise obje oluşturmaya ve örneklerine bakacağız. Hadi başlayalım :)&lt;/p&gt;

&lt;p&gt;Objeler, içerisinde birden farklı veri türünü içeren, yazılımcı tarafından oluşturulan daha komplike veri türleridir. &lt;br&gt;
İçerisinde farklı veri türleri tutabildiği gibi, farklı objeleri de tutabilmektedir.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#obje-olu%C5%9Fturma"&gt;
  &lt;/a&gt;
  Obje Oluşturma
&lt;/h2&gt;

&lt;p&gt;Basit bir obje oluşturalım:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var customer = {
        name: "Turan",
        number: 353535,
        prog_lang: ["C","C#","Python","Java","Javascript"]
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oluşturulmuş olan bu obje içerisinde 3 farklı veri tipi (string, int, array) bulundurmakta.&lt;br&gt;
Bu değişkenlere ise aşağıda gösterilen şekilde ulaşılmaktadır:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    console.log(customer.name);
    console.log(customer.number);
    console.log(customer.prog_lang);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu komutları çıktısı aşağıdaki gibidir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5KkEghIn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9rim9ezwugqvsrlq4d0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5KkEghIn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9rim9ezwugqvsrlq4d0.png" alt="Calling Object Variables"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#i%CC%87%C3%A7-i%CC%87%C3%A7e-obje-olu%C5%9Fturma-nested-objects"&gt;
  &lt;/a&gt;
  İç İçe Obje Oluşturma (Nested Objects)
&lt;/h2&gt;

&lt;p&gt;Obje içerisinde obje oluşturulabilir. Buna bir örnek verelim:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var customer = {
        name: "Turan",
        number: 353535,
        prog_lang: ["C","C#","Python","Java","Javascript"],
        personal : {
            age: 22,
            gender: "male",
            height: "180 cm",
            weight: "70 kg"
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu iç içe oluşturulmuş objenin nesnelerine aşağıdaki örnekte gösterildiği gibi ulaşılır:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    console.log(customer.personal.age);
    console.log(customer.personal.gender);
    console.log(customer.personal.height + " " + customer.personal.weight);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu komutların çıktısı aşağıda verilmiştir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzpNNnvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpt05dwxvz28ele2oqea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzpNNnvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpt05dwxvz28ele2oqea.png" alt="Nested Objects in Javascript"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#obje-i%CC%87%C3%A7erisinde-fonksiyon-olu%C5%9Fturma"&gt;
  &lt;/a&gt;
  Obje İçerisinde Fonksiyon Oluşturma
&lt;/h2&gt;

&lt;p&gt;Obje içerisinde fonksiyon oluşturma ve çağırmaya aşağıda örnek verilmiştir. Burada "This" anahtar sözcüğü devreye girmektedir. Bu keyword obje içerisindeki değişkenin kullanılması gerektiğini belirtir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var customer = {
        name: "Turan",
        surname: "Blade",
        number: 353535,
        customerInfo : function(){
            return "Name: " + this.name + " Surname: " + this.surname;
        }
    }

    console.log(customer.customerInfo());


&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ve output ise:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHQmZk_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uga4fwlp7l9xzeuokt5i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHQmZk_9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uga4fwlp7l9xzeuokt5i.png" alt="Functions in Objects Javascript"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#obje-olu%C5%9Fturman%C4%B1n-bir-farkl%C4%B1-y%C3%B6ntemi"&gt;
  &lt;/a&gt;
  Obje Oluşturmanın Bir Farklı Yöntemi
&lt;/h2&gt;

&lt;p&gt;Objeler, az önce gösterilen gibi oluşturulabildikleri gibi farklı bir şekilde de oluşturulmaktadır. Aşağıda bunun örneği bulunmaktadır:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var customer = new Object();

    customer.name = "Turan";
    customer.surname = "Blade";
    customer.customerInfo = function() {
        return "Name: " + this.name + " Surname: " + this.surname;
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obje oluşturma görüldüğü üzere 2 farklı şekilde yapılabiliyor. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yap%C4%B1c%C4%B1-metotlar"&gt;
  &lt;/a&gt;
  Yapıcı Metotlar
&lt;/h2&gt;

&lt;p&gt;Peki oluşturulan objelerin içerdikleri değişkenlere değer atama her zaman manuel mi yapılıyor ? Tabiki hayır. Bu işlemi bizler için gerçekleştiren "Constructor Method" (Yapıcı Metot) denilen bir kavram bulunmakta. Bu metot sayesinde birçok obje oluşturulabilir ve oluşturulan bu objelere değer ataması yapılabilir.&lt;/p&gt;

&lt;p&gt;Yani tek bir fonksiyon ile birçok obje oluşturulur ve otomatik değer ataması yapılır.&lt;/p&gt;

&lt;p&gt;Yapıcı metot oluşturulması:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
   function Employee(name,surname,number){ // yapıcı metot
       this.name = name;
       this.surname = surname;
       this.number = number;
       this.showInfo = function() { // metot içerisinde fonksiyon
           return "Name: " + this.name + "\nSurname: " + this.surname 
           + "\nNumber: " + this.number;
       }
   }

   var employee1 = new Employee("Turan","Blade",454535); // yeni obje oluşturulması
   var employee2 = new Employee("Hebele","Hübele",324353); // başka bir obje oluşturulması
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oluşturulan nesnelerin "showInfo()" adlı fonksiyonunu çağıralım:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
   console.log(employee1.showInfo());
   console.log(employee2.showInfo());
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output aşağıdaki gibidir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXC98wlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1gizw1q9j0ewm4kn9vj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXC98wlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1gizw1q9j0ewm4kn9vj.png" alt="Construtor Method in Javascript"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 15 of 100 Days of Code &amp; Scrum: Second Weekly Retrospective</title>
      <author>Rammina</author>
      <pubDate>Sat, 23 Oct 2021 12:11:22 +0000</pubDate>
      <link>https://dev.to/rammina/day-15-of-100-days-of-code-scrum-second-weekly-retrospective-29hf</link>
      <guid>https://dev.to/rammina/day-15-of-100-days-of-code-scrum-second-weekly-retrospective-29hf</guid>
      <description>&lt;p&gt;Happy weekend, everyone!&lt;/p&gt;

&lt;p&gt;Today marks the end of the second week, and so I will be doing a Sprint Review and Retrospective as I mentioned back then, &lt;a href="https://dev.to/rammina/100-days-of-code-and-scrum-a-new-challenge-24lp"&gt;at the beginning of this challenge&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-previous-weekly-sprint-goals"&gt;
  &lt;/a&gt;
  My Previous Weekly Sprint Goals
&lt;/h2&gt;

&lt;p&gt;For reference, here were the Sprint Goals for this week:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;focus on learning &lt;strong&gt;Scrum&lt;/strong&gt; principles&lt;/li&gt;
&lt;li&gt;study for Professional Scrum Master I (PSM I) certification&lt;/li&gt;
&lt;li&gt;write some guides about Scrum&lt;/li&gt;
&lt;li&gt;continue learning GraphQL&lt;/li&gt;
&lt;li&gt;continue networking&lt;/li&gt;
&lt;li&gt;no interviews for this week&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;gulp&lt;/strong&gt; How much of these have I accomplished?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;I think I finished around 80% of my Sprint Goals for this week, but I didn't really finish any guide that I planned to write...&lt;/p&gt;

&lt;p&gt;In any case, here were the things I've done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have reread &lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt; multiple times while trying to write guides for Scrum.&lt;/li&gt;
&lt;li&gt;write an incomplete draft for &lt;em&gt;Introduction to Scrum&lt;/em&gt;, which covers Scrum as a framework, the Scrum Team and its members, and Scrum Artifacts such as the Product Backlog, the Sprint Backlog, and the Increment.&lt;/li&gt;
&lt;li&gt;worked on completely revamping my &lt;em&gt;User Story Guide&lt;/em&gt;, because the first one really sucks and was just a short post.&lt;/li&gt;
&lt;li&gt;used &lt;a href="https://apps.ankiweb.net/"&gt;Anki flashcards&lt;/a&gt; to study for the PSM I certification exam.&lt;/li&gt;
&lt;li&gt;studied server-side GraphQL and reviewed some of the things I've learned last week.&lt;/li&gt;
&lt;li&gt;I definitely networked a lot on multiple platforms.&lt;/li&gt;
&lt;li&gt;I made a new &lt;a href="https://twitter.com/RamminaR"&gt;Twitter account&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYlLlSkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e290o7acmb0vgz58v96.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYlLlSkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e290o7acmb0vgz58v96.jpg" alt="Notebook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;cite&gt;Image by &lt;a href="https://pixabay.com/users/ichigo121212-11728/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=203465%22%3EIchigo121212&amp;lt;/a&amp;gt;%20from%20&amp;lt;a%20href="&gt;&lt;/a&gt;&lt;/cite&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;met my learning goals for &lt;strong&gt;Scrum&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;managed to continue learning about GraphQL, and not forgetting the things I've learned from last week.&lt;/li&gt;
&lt;li&gt;I was able to work towards writing the guide articles.&lt;/li&gt;
&lt;li&gt;reached out to multiple people on different platforms.&lt;/li&gt;
&lt;li&gt;not part of my weekly goals, but I learned a lot about SEO.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I'm just bad at managing my time, I check social media too much.&lt;/li&gt;
&lt;li&gt;forgot to install a website blocker to stop myself from checking off-topic content.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;most likely check emails, social media, and blog on a set schedule instead.&lt;/li&gt;
&lt;li&gt;I should definitely install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#got-through-the-second-week"&gt;
  &lt;/a&gt;
  Got Through the Second Week
&lt;/h2&gt;

&lt;p&gt;The second week was definitely a lot more stressful than the first one, mostly because of personal life issues happening.&lt;/p&gt;

&lt;p&gt;However, I managed to commit to my goals and make progress because of the rules of the challenge. I may not have achieved everything that I intended to on this week, but I'm at least partially done with them. I do recommend everyone to try doing the 100 Days of Code challenge, it's really fulfilling and helpful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdKyCAe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtzz1a5coj2bew27grvk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdKyCAe1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtzz1a5coj2bew27grvk.png" alt="Rammina Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you to everyone who supported me and interacted with me during the past weeks!&lt;/p&gt;

&lt;p&gt;Good luck on your developer journeys, and I wish you the best. Have a great weekend, everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 7 Gaining Characters Which Must Added to Uber For Laundry App</title>
      <author>Angelika Candie</author>
      <pubDate>Sat, 23 Oct 2021 12:06:35 +0000</pubDate>
      <link>https://dev.to/angelikacandie/top-7-gaining-characters-which-must-added-to-uber-for-laundry-app-2de8</link>
      <guid>https://dev.to/angelikacandie/top-7-gaining-characters-which-must-added-to-uber-for-laundry-app-2de8</guid>
      <description>&lt;p&gt;Remember those days when the washing, the drying, and the ironing were all done at home? At one point in time, it was considered to be standard household work. Today, people have realized that they can afford to spend their time on something more productive. This had led to the creation and proliferation of uber for laundry services.&lt;/p&gt;

&lt;h3&gt;The Erstwhile Limitations&lt;/h3&gt;

&lt;p&gt;Although the laundry industry was providing a much-needed service, it had its own set of dubious attributes. The least of them is the fact that you need to drop your laundry by yourself and pick it up yourself. Yes… There were some laundry services that would offer pick up and drop. However, that would cost a lot more confusion because the person who picks it up might not know your exact address.&lt;/p&gt;

&lt;h3&gt;The On-Demand Interjection&lt;/h3&gt;

&lt;p&gt;The problem of not knowing where the customer was had been plaguing every service segment for a long time. This was effectively solved by Uber in 2009, opening opportunities for every service business to capitalize on the on-demand business model.&lt;/p&gt;

&lt;p&gt;In the years ever since Uber was introduced, people have grown more accepting of the idea of giving their soiled clothes for laundry. Combining this shift in the mindset and how it reflects on the market and the availability of an on-demand solution for almost everything, an on-demand laundry app solution is a great business idea.&lt;/p&gt;

&lt;p&gt;The on-demand laundry space is expected to be valued at about half of a billion in 2025. Now it would be a perfect time for any entrepreneurs to invest in an Uber for laundry app development.&lt;/p&gt;

&lt;h3&gt;How Does It Work?&lt;/h3&gt;

&lt;p&gt;The way in which an &lt;a href="https://www.turnkeytown.com/uber-for-laundry"&gt;Uber for laundry services&lt;/a&gt; works is quite simple and straightforward. There are different business models that suit well to work out within this space. Some laundry services have their own fleet of delivery people. However, some of them try to use big delivery executives as they can concentrate on what their core offering is.&lt;/p&gt;

&lt;p&gt;As you may have guessed, that would be three distinct applications, one for the user, one for the laundry shop, and one for the delivery executive. The administrator will oversee all the three entities involved.&lt;/p&gt;

&lt;p&gt;The user can download the app and book their laundry requirements. They can give specifications like the exact service or the combination of services that they would like to avail of, the quantity of laundry, and if they would require it on an urgent basis. The request reaches both the laundry shops and also to the delivery assistants who will pick the laundry up from the location of the customer.&lt;/p&gt;

&lt;p&gt;The delivery executive starts to move towards the customer pick-up point upon the business accepting the request. Based on the workload, the business can either choose to accept or reject the request.&lt;/p&gt;

&lt;p&gt;Based on the parameters entered by the customer, the app algorithm calculates the cost involved. Upon completion of the laundry work, the delivery executor picks the laundry up from the business and delivers it back to the customer.&lt;/p&gt;

&lt;p&gt;As you can see, the process is simple and straightforward.&lt;/p&gt;

&lt;h2&gt;The Major Advantages Of Launching An Uber For Laundry App&lt;/h2&gt; 

&lt;p&gt;The app ecosystem brings considerable advantages to all the parties involved.&lt;/p&gt;

&lt;p&gt;The customer does not have to go through the hassle of finding the laundry shop by themselves and taking their basket of soil close to the location of the business. The customer also does not have to go through the haggle and tussle of price discrepancies. The process goes quite efficiently as everything is pre-determined clearly. The customer also gets a chance to review and rate the laundry experience, and it helps in making the entire ecosystem democratic. They can also rate the delivery experience. This ensures that there is a constant yet massive push for businesses to comply with the highest standards of quality and customer satisfaction.&lt;/p&gt;

&lt;p&gt;The delivery workers get an opportunity to earn an additional income. They can work in the comfort of their own time. They also do not have any responsibilities as an employee because they are just working as contract workers or delivery partners.&lt;/p&gt;

&lt;p&gt;The laundry business also does not have to worry about logistics support which is only an auxiliary skill that they need. The users can also focus on the improvement of the cold services too. &lt;/p&gt;

&lt;h3&gt;The Features&lt;/h3&gt;

&lt;p&gt;The apps should be brimming with features that make it easy for them to execute the intended action. For the user, they should be able to book their laundry pick up in less than three steps. The business should not have any hassle in accepting the request and equally, in rejecting them. The delivery executives should be able to keep a good track of their earnings. They should have their earnings credited to their bank accounts promptly.&lt;/p&gt;

&lt;h3&gt;The Garnish Of Seven&lt;/h3&gt;

&lt;p&gt;There cannot be any compromise on the basic features. However, if you would like to distinguish your offering from your competition, the seven features listed below will give you the much-needed edge to position yourself as a market leader.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your app should be, in addition to the email and phone number login, able to support social media login. Using legacy credentials makes the entire login process simple and easy.&lt;/li&gt;
  &lt;li&gt;The doubling of availability for the business and the delivery executive should be simple and straightforward.&lt;/li&gt;
  &lt;li&gt;Push notifications should be effectively used to ensure that the right communications are made to the parties. You should update the customers about the status of their laundry. Then also inform the delivery executives about the availability of a new gig.&lt;/li&gt;
  &lt;li&gt;The GPS is like the epicenter of the entire on-demand illusion. The GPS should help the delivery executives in accurately reaching the customer location. Parallel to this, he should also help in keeping the customer updated about the moment of their delivery executive during both pickup and drop.&lt;/li&gt;
  &lt;li&gt;The app should be able to take payments from multiple payment methods. For this purpose, the app should tie-up with a payment gateway that can accept payments from multiple payment instruments like credit cards, debit cards, Internet banking, and native wallets.&lt;/li&gt;
  &lt;li&gt;Subscription plans at a discounted rate allow people to make a payment in advance and available services. It helps increase brand stickiness, and also helps the business earn quick revenue.&lt;/li&gt;
  &lt;li&gt;Your app should also have space for promotions and discounts. The administrator should be able to create discount codes based on festivities, and even for individual customers based on their loyalty.&lt;/li&gt;
&lt;/ul&gt;  

&lt;h4&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Laundry is one service that people find difficult to do by themselves but you can never deny its inevitability. Now it would be a perfect time for any aspiring entrepreneur to launch their own condiment Laundry app solution. Therefore, the ready-made Uber for laundry app is cost-effective. &lt;/p&gt;

&lt;p&gt;All that is left for you to do is to get in touch with the company that specializes in the development and customization of a &lt;a href="https://www.turnkeytown.com/uber-for-laundry"&gt;white-label Uber for laundry app&lt;/a&gt;. They will understand your requirements and present you with perfect solutions. that will help you decrease wrinkled clothes while at the same time increasing your profit!&lt;/p&gt;

</description>
      <category>android</category>
      <category>mobile</category>
      <category>ios</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
