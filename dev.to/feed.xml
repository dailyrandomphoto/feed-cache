<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Final Blog for OSD600</title>
      <author>Ahmad</author>
      <pubDate>Fri, 10 Dec 2021 15:01:50 +0000</pubDate>
      <link>https://dev.to/ar/final-blog-for-osd600-265m</link>
      <guid>https://dev.to/ar/final-blog-for-osd600-265m</guid>
      <description>&lt;p&gt;Out of all the courses I've taken, OSD600 has had the biggest impact on me. For once, I'm coming out of a course feeling ready to tackle the subject in the real world. Having a great professor really helped.&lt;/p&gt;

&lt;p&gt;I've always known about git but didn't understand why, when, and how it's used. But man has this course opened my eyes. I now use git in every personal project, even if I don't intend on putting it on GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advice"&gt;
  &lt;/a&gt;
  Advice
&lt;/h2&gt;

&lt;p&gt;If I were to give any newcomers advice, it'd be to get to work on pull requests as soon as possible. Some reviewers take &lt;em&gt;days&lt;/em&gt; to respond which can bleed the little time you have. By the time you address their concerns, time's up.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 10th December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 10 Dec 2021 14:56:15 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-10th-december-2021-28l1</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-10th-december-2021-28l1</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-turborepo"&gt;
  &lt;/a&gt;
  1. Turborepo
&lt;/h3&gt;

&lt;p&gt;The high-performance build system for JavaScript &amp;amp; TypeScript codebases&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vercel"&gt;
        vercel
      &lt;/a&gt; / &lt;a href="https://github.com/vercel/turborepo"&gt;
        turborepo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The high-performance build system for JavaScript &amp;amp; TypeScript codebases
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
   &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4060187/106504110-82f58d00-6494-11eb-87b7-a16d4f68bc5a.png"&gt;&lt;img width="340" alt="Turborepo logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dbIuNMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4060187/106504110-82f58d00-6494-11eb-87b7-a16d4f68bc5a.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;  
  &lt;a href="https://www.npmjs.com/package/turbo" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/1c0a2fd499b8eb9349295bb110c0d288188405652bf7d50a01b2c6a56ce46e98/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f747572626f"&gt;
  &lt;/a&gt;
  &lt;a href="https://vercel.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c56f739dec6769355e1841389345ad5edfaeb990ce6d20226fe7dfff3040c523/68747470733a2f2f62616467656e2e6e65742f62616467652f69636f6e2f4d616465253230427925323056657263656c3f69636f6e3d76657263656c266c6162656c26636f6c6f723d626c61636b266c6162656c436f6c6f723d626c61636b"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Visit &lt;a href="https://turborepo.org" rel="nofollow"&gt;https://turborepo.org&lt;/a&gt; to view the full documentation.&lt;/p&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;p&gt;To chat with other community members, you can join the &lt;a href="https://turborepo.org/discord" rel="nofollow"&gt;Turborepo Discord&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our &lt;a href="https://github.com/vercel/turborepo/blob/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Turborepo community channels.&lt;/p&gt;
&lt;h2&gt;
Updates&lt;/h2&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/turborepo" rel="nofollow"&gt;@turborepo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jared Palmer (&lt;a href="https://twitter.com/jaredpalmer" rel="nofollow"&gt;@jaredpalmer&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vercel/turborepo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-statsigs-opensource-status-page"&gt;
  &lt;/a&gt;
  2. Statsig's Open-Source Status Page
&lt;/h3&gt;

&lt;p&gt;A simple, zero-dependency, pure js/html status page based on GitHub Pages and Actions.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/statsig-io"&gt;
        statsig-io
      &lt;/a&gt; / &lt;a href="https://github.com/statsig-io/statuspage"&gt;
        statuspage
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple, zero-dependency, pure js/html status page based on GitHub Pages and Actions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/statsig-io/statuspage../../actions/workflows/health-check.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OC2hI2Tw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/statsig-io/statuspage../../actions/workflows/health-check.yml/badge.svg" alt="Health Check"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Statsig's Open-Source Status Page&lt;/h1&gt;
&lt;p&gt;We tried various Status Pages out there, and built this as a fun little hobby project to make status pages as simple as possible.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://status.statsig.com" rel="nofollow"&gt;https://status.statsig.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Setup instructions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Fork the &lt;a href="https://github.com/statsig-io/statuspage/"&gt;template repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;urls.cfg&lt;/code&gt; to include your urls.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-haproxy-config position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;key1=https://example.com
key2=https://statsig.com&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Update &lt;code&gt;index.html&lt;/code&gt; and change the title.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;My Status Page&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;Services Status&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Set up GitHub Pages for your repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/74588208/121419015-5f4dc200-c920-11eb-9b14-a275ef5e2a19.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvXMxDBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/74588208/121419015-5f4dc200-c920-11eb-9b14-a275ef5e2a19.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How does it work?&lt;/h2&gt;
&lt;p&gt;This project uses Github actions to wake up every hour and run a shell script (&lt;code&gt;health-check.sh&lt;/code&gt;). This script runs &lt;code&gt;curl&lt;/code&gt; on every url in your config and appends the result of that run to a log file and commits it to the repository. This log is then pulled dynamically from &lt;code&gt;index.html&lt;/code&gt; and displayed in a easily consumable fashion. You can also run that script from your own infrastructure to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/statsig-io/statuspage"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-awesome-software-architecture"&gt;
  &lt;/a&gt;
  3. Awesome Software Architecture
&lt;/h3&gt;

&lt;p&gt;A curated list of awesome articles, videos, and other resources to learn and practice about software architecture, patterns, and principles.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mehdihadeli"&gt;
        mehdihadeli
      &lt;/a&gt; / &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture"&gt;
        awesome-software-architecture
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome articles, videos, and other resources to learn and practice about software architecture, patterns, and principles.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
🎨 Awesome Software Architecture &lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d0405ddcbeac98b5806832e6254a0a102e09b47637c2ddec9a8094cb2257b31/68747470733a2f2f617765736f6d652e72652f62616467652d666c6174322e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://twitter.com/mehdi_hadeli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/557cae32c31a2862ac12e368ad083ee1f50fa86f65f5e4395f3d7981936974f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d406d656864695f686164656c692d2532333144413146323f7374796c653d666c61742d737175617265266c6f676f3d74776974746572266c6f676f436f6c6f723d666666666666" alt="Twitter URL"&gt;&lt;/a&gt;
&lt;a href="https://www.linkedin.com/in/mehdihadeli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d56847f02efe03fbf9005522573eab8a188a165cff793cfcbf6f6ab435b3d3ff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6d65686469686164656c692d626c75653f7374796c653d666c61742d737175617265266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d666666666666" alt="Linkedin Url URL"&gt;&lt;/a&gt;
&lt;a href="https://dotnetuniversity.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba733c2a07f7d084686bb643c10c7b7e3b2fa9ce1b9aa331004953def581c427/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f626c6f672d646f746e6574756e69766572736974792e636f6d2d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="blog"&gt;&lt;/a&gt;
&lt;a href="http://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eeaee172024653635746ba1879011c130d5659d55a3e8e1369defe32941cc0bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d434330253230312e302d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="License: CC0-1.0"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?url=https://github.com/mehdihadeli/awesome-software-architecture&amp;amp;text=A%20curated%20list%20of%20awesome%20articles%20and%20resources%20to%20learn%20and%20practice%20about%20software%20architecture%2C%20patterns%2C%20and%20principles&amp;amp;hashtags=dotnetcore,dotnet,csharp,microservices,netcore,aspnetcore,ddd,cqrs,softwarearchitecture,designpatterns,modularmonolith" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/mehdihadeli/awesome-software-architecture./banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vc17k700--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mehdihadeli/awesome-software-architecture./banner.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Curated list of awesome articles and resources to learn and practice about software architecture, patterns and principles. this repository will be updated continuously, keep yourself up to date .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;🚀 This awesome list is available in this link:&lt;/strong&gt;
&lt;strong&gt;&lt;a href="https://mehdihadeli.github.io/awesome-software-architecture" rel="nofollow"&gt;https://mehdihadeli.github.io/awesome-software-architecture&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mehdihadeli.github.io/awesome-software-architecture" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCHC7qAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mehdihadeli/awesome-software-architectureassets/home.png" alt="home page"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stars.medv.io/mehdihadeli/awesome-software-architecture" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5699af46b229f376d2d7486f6aa94f34add33afdbb3996dd118b8809fc80326/68747470733a2f2f73746172732e6d6564762e696f2f6d65686469686164656c692f617765736f6d652d736f6674776172652d6172636869746563747572652e737667" alt="Sparkline"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support ⭐
&lt;/h2&gt;

&lt;p&gt;Star this repository, And we will be happy together :)&lt;/p&gt;

&lt;p&gt;Thanks a bunch for supporting me!&lt;/p&gt;

&lt;h2&gt;
Contribution&lt;/h2&gt;

&lt;p&gt;Contributions are always welcome! Please take a look at the &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture/blob/main/contributing.md"&gt;contribution guidelines&lt;/a&gt; pages first.&lt;/p&gt;

&lt;p&gt;Thanks to all &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture/graphs/contributors"&gt;contributors&lt;/a&gt;, you're awesome and wouldn't be possible without you! The goal is to build a categorized community-driven collection of very well-known resources.&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mehdihadeli/awesome-software-architecture"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#4-react-cool-img"&gt;
  &lt;/a&gt;
  4. React Cool Img
&lt;/h3&gt;

&lt;p&gt;A React &lt;a href="" class="article-body-image-wrapper"&gt;&lt;img&gt;&lt;/a&gt; component let you handle image UX and performance as a Pro!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wellyshen"&gt;
        wellyshen
      &lt;/a&gt; / &lt;a href="https://github.com/wellyshen/react-cool-img"&gt;
        react-cool-img
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      😎 🏞 A React &amp;lt;Img /&amp;gt; component let you handle image UX and performance as a Pro!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;em&gt;&lt;b&gt;REACT COOL IMG&lt;/b&gt;&lt;/em&gt;
&lt;/h1&gt;
&lt;p&gt;This is a lightweight React &lt;code&gt;&amp;lt;Img /&amp;gt;&lt;/code&gt; component, which helps you handle image UX (user experience) and performance optimization as a professional guy 🤓&lt;/p&gt;
&lt;p&gt;It empowers the standard &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img" rel="nofollow"&gt;&lt;code&gt;img&lt;/code&gt;&lt;/a&gt; tag by many cool &lt;a href="https://github.com/wellyshen/react-cool-img#features"&gt;features&lt;/a&gt; without breaking your original development experience. Ideally, it can be an &lt;code&gt;img&lt;/code&gt; tag replacement for &lt;a href="https://reactjs.org" rel="nofollow"&gt;React.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;⚡️ Live demo: &lt;a href="https://react-cool-img.netlify.app" rel="nofollow"&gt;https://react-cool-img.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;❤️ it? ⭐️ it on &lt;a href="https://github.com/wellyshen/react-cool-img/stargazers"&gt;GitHub&lt;/a&gt; or &lt;a href="https://twitter.com/intent/tweet?text=With%20@React-Cool-Img,%20my%20web%20app%20becomes%20more%20powerful.%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wellyshen/react-cool-img/actions?query=workflow%3ACI"&gt;&lt;img src="https://camo.githubusercontent.com/96457be04243496ef5656d8053f869e45906d91a78d5657e6fdabaa387169358/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f77656c6c797368656e2f72656163742d636f6f6c2d696d672f43493f7374796c653d666c61742d737175617265" alt="build status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/wellyshen/react-cool-img?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4e5ca5cacf1198b474c73df22cfcfce5b5ecd5bf09a42be92cebfa34c6bde32/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f77656c6c797368656e2f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="coverage status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cd76d30530d9df0912089097d2c967ec37c75140d14fbb06bce4f08935467cb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7d7414d61f38fc2ba63bacf3d2815974384ceb17f4c907db326d813db38464b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e490886723845b64f8f9d32e104ce8cf169a2ba648873b0ec29d46aa30971451/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d775eb44a40d7e5499a6f8320815005a1fb65cd689c32957afaf45aae179444f/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d636f6f6c2d696d673f6c6162656c3d677a697025323073697a65267374796c653d666c61742d737175617265" alt="gzip size"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wellyshen/react-cool-img#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/3652cf14752405199f980594bbcde1d3c6e6b07ade2a54a4f7f1e02b8f98a6a5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d312d6f72616e67653f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wellyshen/react-cool-imgCONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/71e397063e80d7be259be6cffe71736bdd5ae6ebe31531f20b873b6883663e1d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="PRs welcome"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?text=With%20@react-cool-img,%20my%20web%20app%20becomes%20more%20powerful.%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67808bf13ccf985a7e2311f016af23d6fc8111b94b56ac209fdb543b52de41e7/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324677656c6c797368656e25324672656163742d636f6f6c2d696d67" alt="Twitter URL"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🖼 Placeholders for satisfying various image loading states (e.g. loading image &amp;gt; actual image &amp;gt; error image).&lt;/li&gt;
&lt;li&gt;
🛋 &lt;a href="https://github.com/wellyshen/react-cool-img#the-smart-way-to-load-images"&gt;Smart lazy loading&lt;/a&gt; with performant and efficient way, using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" rel="nofollow"&gt;Intersection Observer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🤖 Built-in &lt;a href="https://github.com/wellyshen/react-cool-img#retry"&gt;auto-retry&lt;/a&gt; mechanism. User won't miss out your important information.&lt;/li&gt;
&lt;li&gt;
🚫 Aborts any current image downloads on component unmount potentially saving bandwidth and browser resources.&lt;/li&gt;
&lt;li&gt;
🔍 &lt;a href="https://github.com/wellyshen/react-cool-img#javascript-availability-and-seo"&gt;Supports server-side rendering / Javascript is disabled / SEO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
📜 Supports &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; type definition.&lt;/li&gt;
&lt;li&gt;
🦔 Tiny size (&lt;a href="https://bundlephobia.com/result?p=react-cool-img" rel="nofollow"&gt;~ 2kB gzipped&lt;/a&gt;). No…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wellyshen/react-cool-img"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-klipse"&gt;
  &lt;/a&gt;
  5. Klipse
&lt;/h3&gt;

&lt;p&gt;Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/viebel"&gt;
        viebel
      &lt;/a&gt; / &lt;a href="https://github.com/viebel/klipse"&gt;
        klipse
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Klipse&lt;/h1&gt;
&lt;p&gt;Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs. See examples at &lt;a href="https://blog.klipse.tech/" rel="nofollow"&gt;https://blog.klipse.tech/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Get paid support for Klipse on &lt;a href="https://xscode.com/viebel/klipse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c4450fba4e47a17d8040579113be57e2f1ed84903d0e58c90fd430e051a10f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417661696c61626c652532306f6e2d7873253341636f64652d626c75653f7374796c653d3f7374796c653d706c6173746963266c6f676f3d6170707665796f72266c6f676f3d646174613a696d6167652f706e673b6261736536342c6956424f5277304b47676f414141414e5355684555674141414541414141424143414d41414143647434487341414141475852465748525462325a30643246795a5142425a4739695a53424a6257466e5a564a6c5957523563636c6c5041414141415a51544652462f2f2f2f2f2f2f2f56587a316241414141414a30556b35542f77446c747a424b414141416c556c455156523432757a58537771414d417745304d6e394c2b33476774676b6b33355177636e534a6f39532b7947774d3944436f6f4362676e3459724a3443495055635146372f58534262783254457a3473415a3271315241454342416959426c437476774e2b4b6959416c47375544476a35394d56695439684f77457141685943744173555a764c36493657386332776362642b4c495753434853546553414145436e674e3478784944534b39663442397433373757643748354e74372f587a3865416777417665734c526a595950755541414141415355564f524b35435949493d" alt="xscode"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xscode.com/viebel/klipse" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLLq0nml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/viebel/klipse/raw/master/images/klipse-banner.png%3Fraw%3Dtrue" alt="xscode"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technically, Klipse is a small piece of JavaScript code that evaluates code snippets in the browser and it is pluggable on any web page.&lt;/p&gt;
&lt;p&gt;If you like this stuff, please consider a (small donation) on &lt;a href="https://www.patreon.com/bePatron?u=18227864" rel="nofollow"&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Plugin&lt;/h2&gt;
&lt;p&gt;The klipse plugin is a &lt;code&gt;JavaScript&lt;/code&gt; tag (see details &lt;a href="https://github.com/viebel/klipse#integration"&gt;below&lt;/a&gt;) that transforms static code snippets of an html page into live and interactive snippets:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Live&lt;/strong&gt;: The code is executed in your browser&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Interactive&lt;/strong&gt;: You can modify the code and it is evaluated as you type&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The code evaluation is done in the browser: no server is involved at all!&lt;/p&gt;
&lt;h1&gt;
Live demo&lt;/h1&gt;
&lt;p&gt;With the klipse plugin, the code is evaluated as you type...&lt;/p&gt;
&lt;p&gt;Here is a &lt;a href="https://book.klipse.tech/" rel="nofollow"&gt;live demo&lt;/a&gt; of the embedding of klipse in a web…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/viebel/klipse"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-simple-git"&gt;
  &lt;/a&gt;
  6. Simple Git
&lt;/h3&gt;

&lt;p&gt;A light weight interface for running git commands in any node.js application.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/steveukx"&gt;
        steveukx
      &lt;/a&gt; / &lt;a href="https://github.com/steveukx/git-js"&gt;
        git-js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A light weight interface for running git commands in any node.js application.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Simple Git&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/simple-git" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a5bcef2b82123a97f5b0954714767ecd17b6ae87e6bbd6ff68d8664143ce7c6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f73696d706c652d6769742e737667" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lightweight interface for running &lt;code&gt;git&lt;/code&gt; commands in any &lt;a href="https://nodejs.org" rel="nofollow"&gt;node.js&lt;/a&gt; application.&lt;/p&gt;
&lt;h1&gt;
Installation&lt;/h1&gt;
&lt;p&gt;Use your favourite package manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://npmjs.org" rel="nofollow"&gt;npm&lt;/a&gt;: &lt;code&gt;npm install simple-git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yarnpkg.com/" rel="nofollow"&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add simple-git&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
System Dependencies&lt;/h1&gt;
&lt;p&gt;Requires &lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;git&lt;/a&gt; to be installed and that it can be called using the command &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;Include into your JavaScript app using:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// require the library, main export is a function&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'simple-git'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Include in a TypeScript app using:&lt;/p&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// Import `SimpleGit` types and the default function exported from `simple-git`&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'simple-git'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt;: &lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// prior to v2.6.0 required importing from `simple-git/promise`&lt;/span&gt;
&lt;span class="pl-c"&gt;// this import is still available but is now deprecated&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;gitP&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'simple-git/promise'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt;: &lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;gitP&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Configuration&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/steveukx/git-js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-flatpickr"&gt;
  &lt;/a&gt;
  7. flatpickr
&lt;/h3&gt;

&lt;p&gt;lightweight, powerful javascript datetimepicker with no dependencies&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/flatpickr"&gt;
        flatpickr
      &lt;/a&gt; / &lt;a href="https://github.com/flatpickr/flatpickr"&gt;
        flatpickr
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      lightweight, powerful javascript datetimepicker with no dependencies
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
flatpickr - javascript datetime picker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/flatpickr/flatpickr/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6aa03ca6095e54b16a051024bc1826a0ef0dc44c5d5bcc2c4202fb77f1fc0863/68747470733a2f2f636972636c6563692e636f6d2f67682f666c61747069636b722f666c61747069636b722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/chmln/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6db7fea1d9b7e359069d7475a3ae7d09c85e63974b5db6985bab0515bee757b9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f63686d6c6e2f666c61747069636b722f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/483293432feea6ef113b33f7e37c7dc7d8998a753c64cf16cad65d2f085584b1/68747470733a2f2f62616467652e667572792e696f2f6a732f666c61747069636b722e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f20685348a3824773b885c9e099cdf3d7d15401dbe6bb89580a762f8f4c92b0b/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f666c61747069636b722e737667" alt="CDNJS"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/flatpickr/flatpickr/master/LICENSE.md" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9323d494d852db83ccb95324646a70c1102b73ccfcef4a3bc025fbf485bfad8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d706c6173746963" alt="License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549371/3cbb65da-028d-11e6-976d-a6f63f32061f.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ca7US1sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549371/3cbb65da-028d-11e6-976d-a6f63f32061f.PNG" alt="blue"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549373/3cbe975a-028d-11e6-9192-43975f0146da.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiZ8mbpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549373/3cbe975a-028d-11e6-9192-43975f0146da.PNG" alt="green"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549440/de9bf55e-028d-11e6-9271-46782a99efea.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3zUe1d---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549440/de9bf55e-028d-11e6-9271-46782a99efea.PNG" alt="confetti"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549374/3cc01102-028d-11e6-9ff4-0cf208a310c4.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7x6UPi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549374/3cc01102-028d-11e6-9ff4-0cf208a310c4.PNG" alt="red"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549370/3cadb750-028d-11e6-818d-c6a1bc6349fc.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rI2wpaiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549370/3cadb750-028d-11e6-818d-c6a1bc6349fc.PNG" alt="default"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549372/3cbc8514-028d-11e6-8daf-ec1ba01c9d7e.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YQhzXF8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549372/3cbc8514-028d-11e6-8daf-ec1ba01c9d7e.PNG" alt="dark"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;p&gt;Almost every large SPA or project involves date and time input. Browser's native implementations of those are inconsistent and limited in functionality. Most other libraries require you to pull in heavy dependencies like jQuery, Bootstrap, and moment.js. I wanted something that was good-looking out of the box, dependency-free, powerful, and extensible.&lt;/p&gt;
&lt;p&gt;Feature overview:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dependency-free (no bloated bundles)&lt;/li&gt;
&lt;li&gt;Simple, polished UX&lt;/li&gt;
&lt;li&gt;Date + time input&lt;/li&gt;
&lt;li&gt;Range selections&lt;/li&gt;
&lt;li&gt;Ability to select multiple dates&lt;/li&gt;
&lt;li&gt;Can be used as just a time picker&lt;/li&gt;
&lt;li&gt;Display dates in a human-friendly format&lt;/li&gt;
&lt;li&gt;Easily disable specific dates, date ranges, or any date using arbitrary logic&lt;/li&gt;
&lt;li&gt;Week numbers&lt;/li&gt;
&lt;li&gt;51 locales&lt;/li&gt;
&lt;li&gt;8 colorful themes (incl. dark and material)&lt;/li&gt;
&lt;li&gt;Numerous plugins&lt;/li&gt;
&lt;li&gt;Libraries available for React, Angular, Vue, Ember, and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/11352152/36033089-f37dc1d0-0d7d-11e8-8ec4-c7a56d1ff92e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anC_KThZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11352152/36033089-f37dc1d0-0d7d-11e8-8ec4-c7a56d1ff92e.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;flatpickr provides more functionality at a fraction of the size of other libraries.&lt;/p&gt;
&lt;h2&gt;
Compatibility&lt;/h2&gt;
&lt;p&gt;IE9 and up, Edge, iOS Safari 6+, Chrome 8+, Firefox 6+&lt;/p&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/flatpickr/flatpickr"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-ringclientapi"&gt;
  &lt;/a&gt;
  8. ring-client-api
&lt;/h3&gt;

&lt;p&gt;Unofficial API for Ring Doorbells, Cameras, Alarm System, and Smart Lighting&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dgreif"&gt;
        dgreif
      &lt;/a&gt; / &lt;a href="https://github.com/dgreif/ring"&gt;
        ring
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Unofficial API for Ring Doorbells, Cameras, Alarm System, and Smart Lighting
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ring-client-api&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ring-client-api" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7a1b4f367b364f6a29cae6fa6385549501a1e20e0d6bcf9124b1bfcd0b96018/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72696e672d636c69656e742d617069" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/ring-client-api" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15055ea5a02d5750e716517505446b767358eba895945523d99aa280c0651bef/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f72696e672d636c69656e742d617069" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/dustingreif" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/479b93888f411b07b06a6fb07719f40bf10d750d6f7dc5c11150bc5e1595fd59/68747470733a2f2f62616467656e2e6e65742f62616467652f446f6e6174652f50617950616c2f393142453039" alt="Donate"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an unofficial TypeScript api for &lt;a href="https://shop.ring.com/pages/doorbell-cameras" rel="nofollow"&gt;Ring Doorbells&lt;/a&gt;
&lt;a href="https://shop.ring.com/pages/security-cameras" rel="nofollow"&gt;Ring Cameras&lt;/a&gt;
the &lt;a href="https://shop.ring.com/pages/security-system" rel="nofollow"&gt;Ring Alarm System&lt;/a&gt;
&lt;a href="https://shop.ring.com/pages/smart-lighting" rel="nofollow"&gt;Ring Smart Lighting&lt;/a&gt;,
and third party devices that connect to the Ring Alarm System.
Built to support the &lt;a href="https://github.com/dgreif/ring./homebridge"&gt;homebridge-ring Plugin&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm i ring-client-api&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Setup and Config&lt;/h2&gt;
&lt;p&gt;First, generate a &lt;code&gt;refreshToken&lt;/code&gt; using the instructions in the &lt;a href="https://github.com/dgreif/ring/wiki/Refresh-Tokens"&gt;Refresh Tokens Wiki&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;RingApi&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'ring-client-api'&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;ringApi&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;RingApi&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;refreshToken&lt;/span&gt;: &lt;span class="pl-s"&gt;'token generated with ring-auth-cli.  See https://github.com/dgreif/ring/wiki/Refresh-Tokens'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;

  &lt;span class="pl-c"&gt;// The following are all optional. See below for details&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cameraStatusPollingSeconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cameraDingsPollingSeconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;locationIds&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;'488e4800-fcde-4493-969b-d1a06f683102'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'4bbed7a7-06df-4f18-b3af-291c89854d60'&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Optional Parameters&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cameraStatusPollingSeconds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;undefined&lt;/code&gt; (No Polling)&lt;/td&gt;
&lt;td&gt;How frequently to poll for updates to your cameras and chimes (in seconds).  Information like light/siren/volume/snooze status do not update in real time and need to be requested periodically.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cameraDingsPollingSeconds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;undefined&lt;/code&gt; (No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dgreif/ring"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-the-geek-cookbook"&gt;
  &lt;/a&gt;
  9. The Geek Cookbook
&lt;/h3&gt;

&lt;p&gt;The "Geek's Cookbook" is a collection of guides for establishing your own highly-available "private cloud" and using it to run self-hosted services such as GitLab, Plex, NextCloud, etc.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/geek-cookbook"&gt;
        geek-cookbook
      &lt;/a&gt; / &lt;a href="https://github.com/geek-cookbook/geek-cookbook"&gt;
        geek-cookbook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The "Geek's Cookbook" is a collection of guides for establishing your own highly-available "private cloud" and using it to run self-hosted services such as GitLab, Plex, NextCloud, etc.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6R9H8JGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/geek-cookbook/autopenguin/master/images/readme_header.png" alt="geek-cookbook"&gt;&lt;/a&gt;
&lt;a href="http://chat.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07f1c618dde27f059af8bd5411f644c2dac846d8b35ed9022e55426ef95e09fc/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3339363035353530363037323130393036373f636f6c6f723d626c61636b266c6162656c3d486f742532305377656174792532304765656b73266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465267374796c653d666f722d7468652d6261646765" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discourse.geek-kitchen.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f418a9d3179e907f793ac0f8e3794ec6eeba3ad1941f0acee3e3c0584932e13e/68747470733a2f2f696d672e736869656c64732e696f2f646973636f757273652f746f706963733f636f6c6f723d626c61636b266c6162656c3d466f72756d73266c6f676f3d646973636f75727365266c6f676f436f6c6f723d7768697465267365727665723d6874747073253341253246253246646973636f757273652e6765656b2d6b69746368656e2e66756e6b7970656e6775696e2e636f2e6e7a267374796c653d666f722d7468652d6261646765" alt="Forums"&gt;&lt;/a&gt;
&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a60238ae641587fe158ef21f26195fc27a08781474aa1d4eb1778488b76a2f2b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f526563697065732d34342d626c61636b3f7374796c653d666f722d7468652d626164676526636f6c6f723d626c61636b" alt="Cookbook"&gt;&lt;/a&gt;
&lt;a href="https://www.twitch.tv/funkypenguinz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b262cdcccd28e78e04aff558dee88d698576ee045512752a5766dee05c511964/68747470733a2f2f696d672e736869656c64732e696f2f7477697463682f7374617475732f66756e6b7970656e6775696e6e7a3f7374796c653d666f722d7468652d6261646765266c6162656c3d4c6976654765656b696e67266c6f676f436f6c6f723d7768697465266c6f676f3d747769746368" alt="Twitch Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;👋 Welcome, traveller!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;Geek Cookbook&lt;/a&gt; is a collection of geek-friendly "recipes" to run popular applications on &lt;a href="https://geek-cookbook.funkypenguin.co.nz/ha-docker-swarm/design" rel="nofollow"&gt;Docker Swarm&lt;/a&gt; or &lt;a href="https://geek-cookbook.funkypenguin.co.nz/kubernetes/" rel="nofollow"&gt;Kubernetes&lt;/a&gt;, in a progressive, easy-to-follow format.  &lt;em&gt;&lt;strong&gt;Come and &lt;a href="http://chat.funkypenguin.co.nz" rel="nofollow"&gt;join us&lt;/a&gt;, fellow geeks!&lt;/strong&gt;&lt;/em&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKhqSoCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/icons/emoji/neckbeard.png" class="article-body-image-wrapper"&gt;&lt;img class="emoji" title=":neckbeard:" alt=":neckbeard:" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKhqSoCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/icons/emoji/neckbeard.png" height="20" width="20"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-is-this"&gt;What is this?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#who-is-this-for"&gt;Who is this for?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#why-should-i-read-this"&gt;Why should I read this?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-have-you-done-for-me-lately-changelog"&gt;What have you done for me lately? (CHANGELOG)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-do-you-want-from-me"&gt;What do you want from me?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#get-in-touch-"&gt;Get in touch 👋&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#buy-my-book-"&gt;Buy my book 📖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#sponsor--patronizepatreon-me-%EF%B8%8F"&gt;Sponsor me ❤️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#work-with-me-"&gt;Work with me 🤝&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
What is this?&lt;/h1&gt;
&lt;p&gt;Funky Penguin's "&lt;strong&gt;&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;Geek Cookbook&lt;/a&gt;&lt;/strong&gt;" is a collection of how-to guides for establishing your own container-based self-hosting platform, using either &lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/design/"&gt;Docker Swarm&lt;/a&gt; or &lt;a href="https://github.com/geek-cookbook/geek-cookbook/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Running such a platform enables you to run self-hosted tools such as &lt;a href="https://github.com/geek-cookbook/geek-cookbook/recipes/autopirate/"&gt;AutoPirate&lt;/a&gt; (&lt;em&gt;Radarr, Sonarr, NZBGet and friends&lt;/em&gt;), &lt;a href="https://www.plex.tv/" rel="nofollow"&gt;Plex&lt;/a&gt;, &lt;a href="https://nextcloud.com/" rel="nofollow"&gt;NextCloud&lt;/a&gt;, and includes elements such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/traefik/"&gt;Automatic SSL-secured access&lt;/a&gt; to all services (&lt;em&gt;with LetsEncrypt&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/traefik-forward-auth/"&gt;SSO / authentication layer&lt;/a&gt; to protect unsecured…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/geek-cookbook/geek-cookbook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-floating-ui"&gt;
  &lt;/a&gt;
  10. Floating UI
&lt;/h3&gt;

&lt;p&gt;JavaScript positioning library for tooltips, popovers, dropdowns, and more&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/floating-ui"&gt;
        floating-ui
      &lt;/a&gt; / &lt;a href="https://github.com/floating-ui/floating-ui"&gt;
        floating-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🍿 JavaScript positioning library for tooltips, popovers, dropdowns, and more
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/atomiks/floating-ui/blob/main/website/assets/logo.png"&gt;&lt;img height="300" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjE8RYWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/atomiks/floating-ui/raw/main/website/assets/logo.png" alt="Floating UI"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Popper is now Floating UI! For Popper v2, visit &lt;a href="https://github.com/floating-ui/popper-core/tree/v2.x"&gt;its dedicated branch.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://floating-ui.com" rel="nofollow"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Floating UI is a low-level library for positioning "floating" elements like
tooltips, popovers, dropdowns, menus and more. Since these types of elements
float on top of the UI without disrupting the flow of content, challenges arise
when positioning them.&lt;/p&gt;
&lt;p&gt;Floating UI exposes primitives which enable a floating element to be positioned
next to a given reference element while appearing in view for the user as best
as possible. Features include overflow prevention (or collision awareness)
placement flipping, and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tiny&lt;/strong&gt;: 600-byte core with highly modular architecture for tree-shaking&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Low-level&lt;/strong&gt;: Hyper-granular control over positioning behavior&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pure&lt;/strong&gt;: Predictable, side-effect free behavior&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Extensible&lt;/strong&gt;: Powerful middleware system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Platform-agnostic&lt;/strong&gt;: Runs on any JavaScript environment which provides
measurement APIs, including the web and React Native&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;To use it on the web:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install @floating-ui/dom&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add @floating-ui/dom&lt;/pre&gt;

&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/floating-ui/floating-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,739 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +1,558 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +1,504 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;Every programmer should know&lt;/a&gt; +1,307 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appsmithorg/appsmith"&gt;Appsmith&lt;/a&gt; +1,229 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/argyleink/open-props"&gt;Open Props&lt;/a&gt; +108%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +73%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code"&gt;Awesome Advent of Code&lt;/a&gt; +31%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BuilderIO/mitosis"&gt;JSX Lite&lt;/a&gt; +23%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sergiodxa/remix-auth"&gt;Remix Auth&lt;/a&gt; +19%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,424 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,391 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,788 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,637 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +3,554 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +205%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/teafuljs/teaful"&gt;Fragstore&lt;/a&gt; +108%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Shopify/hydrogen"&gt;Hydrogen&lt;/a&gt; +102%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +82%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +80%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>typescript</category>
    </item>
    <item>
      <title>A load balanced restaurant </title>
      <author>Abhinav Pandey</author>
      <pubDate>Fri, 10 Dec 2021 14:43:40 +0000</pubDate>
      <link>https://dev.to/abh1navv/a-load-balanced-restaurant-5560</link>
      <guid>https://dev.to/abh1navv/a-load-balanced-restaurant-5560</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-load-balancer"&gt;
  &lt;/a&gt;
  What is a load balancer?
&lt;/h2&gt;

&lt;p&gt;Load balancers are typically used to distribute traffic across multiple servers to improve performance.&lt;/p&gt;

&lt;p&gt;The servers in the pool are called nodes.&lt;br&gt;
A load balancer is a server that is used to distribute traffic to the nodes in the pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - This article is written with the perspective of server-side load balancing. The details may be slightly different for client-side load balancing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-typical-load-balancer-work"&gt;
  &lt;/a&gt;
  How does a typical load balancer work?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The load balancer receives a request from the client.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the request to a server capable of handling the request.&lt;/li&gt;
&lt;li&gt;The server processes the request and sends the response back to the load balancer.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the response back to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: "Capable of handling the request" - There could be multiple servers capable of handling the request. There could also be unhealthy servers which are down. The load balancer needs to know which servers are not working fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithms-used-by-load-balancers"&gt;
  &lt;/a&gt;
  Algorithms used by load balancers
&lt;/h2&gt;

&lt;p&gt;There are multiple algorithms that can be used to distribute traffic across multiple servers. We will use the analogy of a restaurant to analyze this.&lt;/p&gt;

&lt;p&gt;Imagine a restaurant:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The manager is the load balancer.&lt;/li&gt;
&lt;li&gt;Each customer is a request.&lt;/li&gt;
&lt;li&gt;Each waiter is a server. (Pun intended)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#static-algorithms"&gt;
  &lt;/a&gt;
  Static algorithms
&lt;/h2&gt;

&lt;p&gt;These algorithms do not take into account the real time details of the servers. They have a set of predefined rules and act accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#round-robin"&gt;
  &lt;/a&gt;
  Round Robin
&lt;/h3&gt;

&lt;p&gt;In round-robin algorithm, the servers are maintained in a list. The load balancer iterates through the list and forwards the request to the next server in the list.&lt;/p&gt;

&lt;p&gt;This means that each server is equally likely to receive a request and the load balancer will distribute the traffic equally across all servers. This is the simplest algorithm and is used by most load balancers as the default algorithm.&lt;/p&gt;

&lt;p&gt;If the manager were to use round-robin, they only need to maintain a list of waiters and as customers come, the next waiter is chosen from the list. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concerns&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It assumes that all waiters are equally efficient which is not always true. &lt;/li&gt;
&lt;li&gt;It assumes that each customer generates equal amount of work which is definitely not true.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Similarly, servers can have different performance and some requests may be heavier than others. This means that it is possible to have a skewed distribution of load. It also means that an unhealthy server will keep receiving requests and will fail slowly.&lt;/p&gt;

&lt;p&gt;Let's see another variation of round-robin algorithm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weighted-round-robin"&gt;
  &lt;/a&gt;
  Weighted Round Robin
&lt;/h3&gt;

&lt;p&gt;The only difference here is that the servers are weighted.&lt;/p&gt;

&lt;p&gt;The manager is told that some waiters are more efficient than others. Now the list also contains the efficiency of each waiter.&lt;br&gt;
For e.g. there are three waiters and their efficiency is in the ratio of 3:4:5 so the manager distributes the traffic to the waiters in the ratio of 3:4:5.&lt;/p&gt;

&lt;p&gt;This solves one concern of the round-robin algorithm - the efficiency of the waiters.&lt;/p&gt;

&lt;p&gt;When is weighted round-robin used?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Usually when the hardware is different for each server. This isn't very common.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#iphashing"&gt;
  &lt;/a&gt;
  IP-Hashing
&lt;/h3&gt;

&lt;p&gt;The rules of IP-Hashing are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The load balancer receives the IP address of the client.&lt;/li&gt;
&lt;li&gt;The load balancer uses the IP address to hash the IP address and then modulo the hash value with the number of servers in the pool.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the request to the server with the modulo value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be seen as a partitioning algorithm. &lt;br&gt;
This is particularly useful when you want one client to be sent to the same server always - because the hash will always choose the same server. &lt;/p&gt;

&lt;p&gt;If servers maintain some state about the client they have seen before, this can be useful. For e.g., the server can maintain a cache based on request parameters and serve them faster next time.&lt;/p&gt;

&lt;p&gt;However, this again has a skewing problem and could be worse than round-robin because some clients may send more requests that others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The hash function doesn't need to be only about IP address. It can use more parameters if needed.&lt;/p&gt;

&lt;p&gt;Let's see how this translates to the restaurant analogy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The manager decides that all customers with names starting with "A-I" should be sent to the first waiter. "J-R" should be sent to the second waiter and "S-Z" should be sent to the third waiter.&lt;/li&gt;
&lt;li&gt;This means that if I visit the restaurant, I will always be sent to the first waiter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This could be beneficial for me because it is now possible for the waiter to maintain some information about me like what I like, what I dislike, etc.&lt;br&gt;
Based on this information, the waiter may serve me better the next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about skewing?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What if there are too many customers with names starting with "A-I" and too few with names starting with "J-R" and "S-Z"?&lt;/li&gt;
&lt;li&gt;The first waiter may get exhausted and may not be able to serve with full efficiency.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;When is IP-hashing good?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low application load so that even after skewing, a single server works fine.&lt;/li&gt;
&lt;li&gt;When maintaining state about the client is beneficial.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-algorithms"&gt;
  &lt;/a&gt;
  Dynamic algorithms
&lt;/h2&gt;

&lt;p&gt;In dynamic algorithms, the load balancer is aware of the load on the servers when it decides which server to send the request to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#least-connection"&gt;
  &lt;/a&gt;
  Least Connection
&lt;/h3&gt;

&lt;p&gt;In this algorithm, the load balancer selects the server with the least number of connections.&lt;br&gt;
The load balancer needs to maintain a map of the servers and their number of connections.&lt;/p&gt;

&lt;p&gt;In our restaurant analogy, the manager needs to maintain a map of the waiters and the number of customers they are currently serving.&lt;br&gt;
This is harder for the manager now but less painful for the waiters. &lt;/p&gt;

&lt;p&gt;This helps in the below way:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The waiters could have different efficiency and it won't skew the load on them.&lt;/li&gt;
&lt;li&gt;The customers may require more time and it won't skew the load on the waiters.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#improvements-over-least-connection"&gt;
  &lt;/a&gt;
  Improvements over least connection
&lt;/h3&gt;

&lt;p&gt;Further, if we want to make this even better in terms of waiter efficiency, we can use weights. This will be equivalent to having servers of different hardware capacities. This is called &lt;strong&gt;weighted least connection&lt;/strong&gt;.&lt;br&gt;
Now the busy-ness of the server will be measured using the formula - (number of connections of the server) / (weight of the server).&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Can there still be a problem? *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only in extreme scenarios. If a server is faulty or failing slowly, it will hold connections longer than it should.&lt;/li&gt;
&lt;li&gt;In such a case, the load balancer will not be able to make a decision to not send more requests to the faulty server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the load balancer somehow had a way to measure real time efficiency of the server, this could be used to improve the algorithm.&lt;/p&gt;

&lt;p&gt;There could be many metrics. One of them is the number of requests served by the server in a given time period - also known as the &lt;strong&gt;average response time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is often used in conjunction with weighted least connection where the server with the lowest average response time is selected.&lt;/p&gt;

&lt;p&gt;In our restaurant analogy, the manager simply keeps track of how many customers each waiter has served in a given time period. &lt;/p&gt;

&lt;p&gt;I'm not sure if managers would do that on paper but a good manager always knows which of the waiters needs a break. And as for load balancers, it is possible for load balancers to give servers a break if they perform below a certain threshold.&lt;/p&gt;




&lt;p&gt;This is probably getting a little out of hand now. If we go beyond this, we are going to need a manager with a Mathematics degree. So that's it for now.&lt;/p&gt;

&lt;p&gt;Stay tuned for more on system design. I also write about Java Design patterns, a beginner's series on Golang and occasional articles on other topics. Follow me for more.&lt;br&gt;
If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>devops</category>
      <category>programming</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>0.4 Final Week</title>
      <author>Ahmad</author>
      <pubDate>Fri, 10 Dec 2021 14:43:05 +0000</pubDate>
      <link>https://dev.to/ar/release-04-236b</link>
      <guid>https://dev.to/ar/release-04-236b</guid>
      <description>&lt;p&gt;My goal for the third week of 0.4 was to put the finishing touches on the function I've been writing, then write some tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-tests"&gt;
  &lt;/a&gt;
  Writing tests
&lt;/h2&gt;

&lt;p&gt;The testing suite of the project takes advantage of a photo viewer called &lt;code&gt;feh&lt;/code&gt;, which is only available on Linux systems. I created a Ubuntu VM and attempted to run my tests. I ran into a host of issues, detailed &lt;a href="https://github.com/takelley1/OCVBot/issues/14"&gt;here&lt;/a&gt;. Apparently Ubuntu couldn't display the images fast enough for the tester. Taking the project owner's advice, I installed Lubuntu which &lt;em&gt;finally&lt;/em&gt; ended up working.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  Pull request
&lt;/h2&gt;

&lt;p&gt;After all of that troubleshooting with the testing suite, I was finally able to create my &lt;a href="https://github.com/takelley1/OCVBot/pull/15"&gt;PR&lt;/a&gt;. The project owner requested some minor changes, which I quickly addressed and pushed the fixes for. At the time of writing this though (December 10, 2021), he hasn't gotten back to approve those changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-down"&gt;
  &lt;/a&gt;
  Run down
&lt;/h3&gt;

&lt;p&gt;The passed world's position is calculated using the &lt;code&gt;row&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; values from &lt;code&gt;worlds.json&lt;/code&gt;. Using the position, the scroll bar is clicked to attempt to get as close to the world as possible. If the world is not visible, the list will repeatedly scroll down a "tick" and the world will be searched for again. Once the world is found, it is clicked and we wait until the "Current world" text at the top of the world switcher changes. If it doesn't change before reaching the timeout time, false is returned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_worlds_logged_in&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"382"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBU0SOvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/86167097/144728379-b523f78f-1068-4418-96d5-1e7a217a0597.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBU0SOvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/86167097/144728379-b523f78f-1068-4418-96d5-1e7a217a0597.gif" alt="Example" width="248" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h2&gt;

&lt;p&gt;Working on this issue was a rollercoaster for me. I had a &lt;a href="https://github.com/takelley1/OCVBot/issues/12#issuecomment-984198060"&gt;bunch of issues&lt;/a&gt; implementing my original idea. The scroll bar just did not want to cooperate, which I could not foresee. I ended up adding CV to click on the world and the &lt;code&gt;scroll&lt;/code&gt; function from &lt;code&gt;pyautogui&lt;/code&gt; to find it, if it was off the screen from the scroll bar's inconsistent behaviour.&lt;/p&gt;

&lt;p&gt;The main takeaway I have from release 0.4, is that there will always be unforeseen issues. I never would have thought the scroll bar would be so inconsistent. Luckily, I was able to solve the problem with the help of the project owner and some friends.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>DevTips Daily Update 10/12/21</title>
      <author>James Bubb</author>
      <pubDate>Fri, 10 Dec 2021 14:42:50 +0000</pubDate>
      <link>https://dev.to/codebubb/devtips-daily-update-101221-3am1</link>
      <guid>https://dev.to/codebubb/devtips-daily-update-101221-3am1</guid>
      <description>&lt;p&gt;So in this week's videos on DevTips Daily, we've still being carrying on with our end-to-end project and there's been lots of configuration and setup of our server to get it ready to deploy our code. For example, we setup a web server, pointed our domain to it and enable HTTPS with an SSL certificate!&lt;/p&gt;

&lt;p&gt;Here's a link to each individual tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/3K-pCTW6oR4"&gt;Installing nginx&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3K-pCTW6oR4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/A0pb8Aa9L7M"&gt;nginx Configuration&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/A0pb8Aa9L7M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/HVfo_bacbo8"&gt;Pointing the domain to the server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HVfo_bacbo8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/8i3OjPqPHmc"&gt;SSL with LetsEncrypt&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8i3OjPqPHmc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/jE8pv_ULHKA"&gt;Directories for Node App&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jE8pv_ULHKA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/DJHdeqxTL-w"&gt;Setup Node.js on the server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DJHdeqxTL-w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/JUfhhrGZ8eQ"&gt;Setup Docker on Ubuntu Server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JUfhhrGZ8eQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Next week we're going to be carrying on with the project again, we've got a touch more configuration to do and then we'll be revisiting our GitHub action to finally push our code to our server!&lt;/p&gt;

&lt;p&gt;Thanks for watching 👍&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devtipsdaily</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Underrated Next.js feature 🤯</title>
      <author>Tuomo Kankaanpää</author>
      <pubDate>Fri, 10 Dec 2021 14:42:16 +0000</pubDate>
      <link>https://dev.to/tumee/underrated-nextjs-feature-56ii</link>
      <guid>https://dev.to/tumee/underrated-nextjs-feature-56ii</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;my newsletter&lt;/a&gt;. If you want to stay up to date and read these as soon as they are published, &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;sign up&lt;/a&gt; for the newsletter!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ahoy,&lt;/p&gt;

&lt;p&gt;Winter has come to Finland. It has been snowing a lot and the temperature has been around -15C for the past week or two. Although I love that there is snow (helps with the darkness) and cold weather in December, I have been mostly staying inside and doing a lot of coding lately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_B1yCT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gu2qjewl47lu5y52s0l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_B1yCT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gu2qjewl47lu5y52s0l.jpg" alt="Winter is here!" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On top of coding, I have been planning to do one or two Next.js videos before the end of the year. As always, if you have any wishes or suggestions on what kind of videos you would like me to do, let me know (reply this email or &lt;a href="https://www.twitter.com/tuomokankaanpaa"&gt;hit me up on Twitter&lt;/a&gt;)!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#latest-youtube-videos"&gt;
  &lt;/a&gt;
  Latest Youtube videos
&lt;/h2&gt;

&lt;p&gt;As always, I have been uploading one video per week on my &lt;a href="https://www.youtube.com/tuomokankaanpaa"&gt;Youtube channel&lt;/a&gt;. Here are the latest videos from the channel since my last email.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#need-to-show-draft-content-in-production-this-is-how"&gt;
  &lt;/a&gt;
  Need to show DRAFT content in PRODUCTION? THIS IS HOW!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bQRhCTlXJQw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is part 3 of the unofficial "Building a blog with Next.js" series.&lt;/p&gt;

&lt;p&gt;In this part we add possibility to view draft blog posts from the headless CMS in production environment. So there is no need for a preview or staging environment and it enables you (or who ever writes the blog posts) to preview the posts in the environment they will be shown for end users.&lt;/p&gt;

&lt;p&gt;This is possible with the Next.js Preview feature. Preview feature is one of the less talked about features in Next.js. I also think it is kind of underrated, even though it makes it possible to easily implement the draft content viewing feature, which is in my opinion crucial for every blog application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-vs-code-theme-my-honest-opinion"&gt;
  &lt;/a&gt;
  Best VS Code Theme! My HONEST opinion.
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6C26mVeDjxo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I have been looking for a nice new theme for my VS Code and I think I've finally found one that I really like. You might have seen me using it already in some of the previous videos since I've been testing it out for some time now.&lt;/p&gt;

&lt;p&gt;So in this video I want to share with you this theme I currently use in my VS Code. Even though I really love this theme, I reserve the right to change my opinion in the future if I come across an even more awesome theme 😂&lt;/p&gt;

&lt;p&gt;That's all for this week!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Tuomo&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>vscode</category>
      <category>watercooler</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How accessible are links and buttons?</title>
      <author>Frank van Eldijk-Smeding</author>
      <pubDate>Fri, 10 Dec 2021 14:36:59 +0000</pubDate>
      <link>https://dev.to/beingfrankly/how-accessible-are-links-and-buttons-3560</link>
      <guid>https://dev.to/beingfrankly/how-accessible-are-links-and-buttons-3560</guid>
      <description>&lt;p&gt;Links and buttons are one of the main basic elements that you’ll find on any website. Yet, a lot of them are not as accessible as we would like. And we’re bound to make mistakes as developers, if we don't know how they're understood by assistive technologies.&lt;/p&gt;

&lt;p&gt;In this short article I'll focus on screen readers and voice recognition and how they deal with links and buttons. I'll not cover every possible problem that could happen. I'm going to reserve that for a different article which I'll publish soon.&lt;/p&gt;

&lt;p&gt;Before we continue, I want to avoid any confusion upfront. When we’re talking about links or buttons, I assume that they're using the proper semantic element, a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using a different HTML element — like a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; which looks like a link or a button — might not be set up right. And this could cause other problems for assistive technologies. If you want to know more on this, I've written an article on why we should [[The rules on using ARIA#1 Prefer semantic HTML over ARIA|prefer semantic HTML]].&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-assistive-technologies-understand-a-web-page"&gt;
  &lt;/a&gt;
  How assistive technologies understand a web page
&lt;/h2&gt;

&lt;p&gt;This is possible through the use of many accessibility API’s. The platform that the browser runs on uses one of those API’s to read the content of a web page.&lt;/p&gt;

&lt;p&gt;How this process actually works in the background would be too much for this article. If you want to learn the details I recommend you to read &lt;a href="https://www.smashingmagazine.com/2015/03/web-accessibility-with-accessibility-api/"&gt;Web Accessibility with Accessibility API&lt;/a&gt;. It’s a great article written by &lt;a href="https://twitter.com/leoniewatson"&gt;Léonie Watson&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The part that’s important for us to know is that those API's expose certain information. This happens for every object in the DOM. This information is crucial for assistive technologies to understand what each object means.&lt;/p&gt;

&lt;p&gt;There are two pieces of information I want to focus on, and those are the &lt;code&gt;role&lt;/code&gt; and the &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;role&lt;/code&gt; of the DOM object exposes its purpose. It could be a link, a button or something else like an image. The &lt;code&gt;name&lt;/code&gt; of the DOM object gives its identity. It’s also referred as the &lt;a href="https://www.w3.org/TR/accname-1.1/#dfn-accessible-name"&gt;Accessible Name&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href="https://codepen.io/beingfrankly/pen/KKXMxMQ"&gt;&lt;br&gt;
  Cards with "read more" links&lt;/a&gt; by Frank van Eldijk-Smeding (&lt;a href="https://codepen.io/beingfrankly"&gt;@beingfrankly&lt;/a&gt;)&lt;br&gt;
  on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, let’s use the example above to quickly recap what we’ve learned.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “main”. The &lt;code&gt;name&lt;/code&gt; is empty because we didn’t supply one.&lt;/li&gt;
&lt;li&gt;Each &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “paragraph”. Again the &lt;code&gt;name&lt;/code&gt; is empty since we didn’t supply one.&lt;/li&gt;
&lt;li&gt;Every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “link”. The &lt;code&gt;name&lt;/code&gt; will be “Read more”. This happens because the &lt;code&gt;name&lt;/code&gt; — or Accessible Name — is determined from a list of possible options. And in this case it was the value inside the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that’s used for the Accessible Name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve picked this example on purpose because it’s quite common to see a list of cards. Each card having a title, some text and at the bottom a “Read more” link.&lt;/p&gt;

&lt;p&gt;So, let’s see which problems could happen for screen readers &amp;amp; voice recognition if we leave the example above untouched.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#potential-problems-for-screen-readers-amp-voice-recognition"&gt;
  &lt;/a&gt;
  Potential problems for screen readers &amp;amp; voice recognition
&lt;/h2&gt;

&lt;p&gt;When a sighted user sees a “Read more” link that’s near other elements, they’re able to group them together. The context behind the “Read more” link is then related to the text and the title. It becomes clear what to expect when they press the link. This happens because of the &lt;a href="https://lawsofux.com/law-of-proximity/"&gt;Law of Proximity&lt;/a&gt; and/or the &lt;a href="https://lawsofux.com/law-of-common-region/"&gt;Law of Common Region&lt;/a&gt;, depending on how the elements are visually styled.&lt;/p&gt;

&lt;p&gt;Yet, people who rely on screen readers are usually not able to scan the page, and group elements based on visual proximity. So, in this case the “Read more” link doesn’t have any meaning to them.&lt;/p&gt;

&lt;p&gt;For people who depend on voice recognition, might be able to group elements together. But, they’ll have a different problem. To interact with elements they say “Click” — I’m using Voice Control on MacOS — followed by the Accessible Name of the link. This will then press the element that matches the Accessible Name.&lt;/p&gt;

&lt;p&gt;So, in our first example it would be “Click, Read more”. But, this will number each “Read more” link. Because the voice recognition software doesn’t understand which link they meant.&lt;/p&gt;

&lt;p&gt;Both cases lead up to a poor user experience and could end up in frustration. How could we solve this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution-well-one-of-many"&gt;
  &lt;/a&gt;
  The solution (well, one of many)
&lt;/h2&gt;

&lt;p&gt;Well, there are a couple options available to us. But, let’s focus on one solution for now to keep this article brief. I’ll write an in-depth article on a lot more problems/situations and solutions soon.&lt;/p&gt;

&lt;p&gt;If we remove the “Read more” link, we could solve both problems. But, what becomes our link then? Well, the entire card could turn into our link. Then give the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; either an &lt;code&gt;aria-label&lt;/code&gt;, matching the value of our title. Or use an &lt;code&gt;aria-labelledby&lt;/code&gt;, which then refers to our &lt;code&gt;&amp;lt;div class="title"&amp;gt;&lt;/code&gt;. Let’s check it out!&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;See the Pen &amp;lt;a href="https://codepen.io/beingfrankly/pen/PoJGGyj"&amp;gt;
Cards with "read more" links&amp;lt;/a&amp;gt; by Frank van Eldijk-Smeding (&amp;lt;a href="https://codepen.io/beingfrankly"&amp;gt;@beingfrankly&amp;lt;/a&amp;gt;)
on &amp;lt;a href="https://codepen.io"&amp;gt;CodePen&amp;lt;/a&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;When a screen reader user tabs through the links, or use a shortcut to get a list of links. They’ll hear each link announced with the name of the title instead of “Read more”.&lt;/p&gt;

&lt;p&gt;The problem with voice recognition is also solved. Because it’s now possible to use the command “Click” followed by the name of the title.&lt;/p&gt;

&lt;p&gt;If you’ve liked this piece of content and you want to get regular updates on other things I write about then follow me on &lt;a href="https://twitter.com/frank_vaneldijk"&gt;Twitter&lt;/a&gt;. And if you have any comments or questions then don’t hesitate to DM me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Assistive technologies understand the content of a web page through the platform’s accessibility API.&lt;/li&gt;
&lt;li&gt;Links and buttons should be clear on their own, and not depend on their surrounding context to make sense.&lt;/li&gt;
&lt;li&gt;Voice recognition software have shortcuts to interact with elements&lt;/li&gt;
&lt;li&gt;Command “Click” with the name of the label. The label name needs to match the Accessible Name&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Sign up newsletter </title>
      <author>ProTec Games</author>
      <pubDate>Fri, 10 Dec 2021 14:20:50 +0000</pubDate>
      <link>https://dev.to/prakhardoneria/sign-up-newsletter-5bpg</link>
      <guid>https://dev.to/prakhardoneria/sign-up-newsletter-5bpg</guid>
      <description>&lt;p&gt;Do you love games?&lt;br&gt;
Want to play some exiting online HTML games for Free?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://protecgames.godaddysites.com/sign-up"&gt;Sign Up ProTec Games for updates&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Mistakes To Avoid as Front-end Developers</title>
      <author>Joseph Mania</author>
      <pubDate>Fri, 10 Dec 2021 14:17:50 +0000</pubDate>
      <link>https://dev.to/techmaniacc/mistakes-to-avoid-as-front-end-developers-5784</link>
      <guid>https://dev.to/techmaniacc/mistakes-to-avoid-as-front-end-developers-5784</guid>
      <description>&lt;p&gt;I can’t call myself a frontend developer, but I was there before migrating to the backend. The knowledge has helped me build full-stack sites. Am not perfect, neither are you, we are just trying to come up with the best rules to achieve certain goals. Companies nowadays operate differently. There is always a frontend group/person and the backend team. Each one plays a vital role.&lt;/p&gt;

&lt;p&gt;Frontend developer deals with the client’s side, the human interaction computer. They are required to create a good platform that can make customers come back to the site. One must be familiar with HTML, CSS, basic JS, graphics, and photoshop knowledge. Here we discuss some simple mistakes to avoid while learning or working on your site.&lt;/p&gt;

&lt;p&gt;Don’t jump to bootstrap before mastering CSS&lt;/p&gt;

&lt;p&gt;The main function of bootstrap is to save time creative responsive website for all the screen devices. It makes your work easier. But you must be an expert in using CSS before shifting to bootstrap. If you are a beginner, try building your site without bootstrap to test your knowledge. Uptake online CSS challenges and tricks from experienced people. Then you can shift to bootstrap, material UI, or tailwind CSS.&lt;/p&gt;

&lt;p&gt;Avoiding Image optimization&lt;/p&gt;

&lt;p&gt;Am not sure, but according to my knowledge, JPEG images load faster than PNG. So try to convert your images into a form that could take a small space. Don’t just add an image to a page without considering its weight. Put in mind the bandwidth and download time that the site takes, it might annoy the client. Even if the image is added to the backend, just find a way to optimize it. Using tools like SVGO and ImageOptim might help you.&lt;/p&gt;

&lt;p&gt;Developing site for computers&lt;/p&gt;

&lt;p&gt;Be aware that backend developers do have this heck. But for fronted, it has always gotten me annoyed when certain CSS doesn’t perform a certain role. You must be aware that 62% of traffic comes from mobile phones. Since they are of different types, you must test almost 10 versions while designing your site. The designer must consider as many screen sizes as possible, not neglect any. Only a few people will use a computer unless it’s a desktop application. 😂For newbies, kindly press F12 to view different mobile screen sizes.&lt;/p&gt;

&lt;p&gt;Leaving behind redundant style&lt;/p&gt;

&lt;p&gt;Any repetitive and unimportant styles will increase the loading time. Whether it’s JS or CSS, they will slow down the site. As you grow your skills, experienced techies will teach you how to write shortcodes. Let’s say you want all the headings to be at the center. Just make sure you use an id=” center”, then in your external CSS, write the properties which will cater to all the headings. If you realize a JS code is doing nothing, or you commented earlier, then do away with it.&lt;/p&gt;

&lt;p&gt;Not learning flex and Grid box&lt;/p&gt;

&lt;p&gt;This goes back to responsiveness. We all struggle with floats and inline CSS. In fact, I almost broke my computer because of float: left. Up to now, I don’t use it(have another trick). If you learn the flex and grid boxes, they are cleaner and easier to implement. Some tutors might discourage you because they make it look harder. Looking out for FlexBox Froggy might be of help.&lt;/p&gt;

&lt;p&gt;Giving too much attention to details&lt;/p&gt;

&lt;p&gt;Yes, the manager or CEO might want the site to look the way he/she thinks, but when it comes to reality, it can’t be the same on all the devices. That’s now the question of “Is it achievable technically” while following the software engineering process. Don’t get over-pressured, something that might take many months yet unimplemented. Talk to the person I need of that design and let them know how messy it is. Remember, you are a technical person, and you need to communicate what can be achieved.&lt;/p&gt;

&lt;p&gt;Create a website for a single browser&lt;/p&gt;

&lt;p&gt;When we come here, every experienced developer has had a hard time with this. You can create complex designs with CSS and bootstrap, but when you observe on the firefox browser, it looks bad. The reason is that some features are not compatible with other browsers. Ensure you observe your site after every added feature. Confirm on four popular browsers, i.e. Chrome, Firefox, edge, and opera.&lt;/p&gt;

&lt;p&gt;Not observing the SEO&lt;/p&gt;

&lt;p&gt;This is what differentiates a good designer from a coder. You have to think about business, how will the site be of impact to clients. If your organization is working on eCommerce, SEO is one of the essential things. Don’t skip minor things like using alt attributes in images. Remember that Google uses SEO to rank various sites. Crawlers have the knowledge of reading the attributes and predicting the importance of images on the site.&lt;/p&gt;

&lt;p&gt;Again. Using inappropriate tags might make the browser wonder what is the meaning of the line written. This means an increase in delay time. Before releasing the site, ensure all the links are not broken.&lt;/p&gt;

&lt;p&gt;Adding autoplay to videos&lt;/p&gt;

&lt;p&gt;It’s okay because a video catches the attention of the user, but how many people get annoyed when loud music starts playing on their ears?. It’s a nuisance. Try to explain this to the managers or whoever told you to autoplay. Even if you add autoplay false, it is wrong. Just to avoid the attribute, browsers have already enhanced the false character.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>But what is useCallback? And when should I use it?</title>
      <author>Tony Khaov</author>
      <pubDate>Fri, 10 Dec 2021 14:14:26 +0000</pubDate>
      <link>https://dev.to/tonykhaov/but-what-is-usecallback-fb9</link>
      <guid>https://dev.to/tonykhaov/but-what-is-usecallback-fb9</guid>
      <description>&lt;p&gt;useCallback is a native hook in React used for memoizing functions. But you'll never use it unless you run into performance issues (usually when your function is inside a dependency array).&lt;/p&gt;

&lt;p&gt;When you create a component, every declaration above the return will be redeclared on rerenders. Which means that they will have a whole new different "id". Unless they are &lt;code&gt;useMemo&lt;/code&gt;ed or &lt;code&gt;useCallback&lt;/code&gt;ed.&lt;br&gt;
useMemo is for primitive types and objects.&lt;br&gt;
useCallback is for functions.&lt;/p&gt;

&lt;p&gt;The example is contrived but you'll get the idea. Let's say the following component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;count has been updated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every time we click on the button, the state &lt;code&gt;count: number&lt;/code&gt; updates and triggers a rerender of &lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and useEffect callback is executed because &lt;code&gt;count: number&lt;/code&gt; from the dependencies array will be different.&lt;/p&gt;

&lt;p&gt;Now let's modify the useEffect to call some API to get users. The function is declared inside &lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt; and so every time &lt;code&gt;&amp;lt;App/&amp;gt;&lt;/code&gt; rerenders, getUsers is redeclared, it will have a whole new "id" and thus the callback inside useEffect will be called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someEndpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getUsers function has been changed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can have a look at the consequences: getUsers is called on every rerenders.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=yAqezVTJcoo"&gt;https://www.youtube.com/watch?v=yAqezVTJcoo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and here comes useCallback. useCallback is useful in this kind of situation because it allows us to memoize &lt;code&gt;getUsers()&lt;/code&gt; : meaning that getUsers will be redeclared only if a variable inside the dependencies array of the useCallback changes. He nothing is specified, getUsers will never be redeclared (only on new mounts though).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someEndpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getUsers function has been changed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the component rerenders but getUsers won't be called!&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=xSgKRzl1pqM"&gt;https://www.youtube.com/watch?v=xSgKRzl1pqM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However using useCallback comes with a cost. The function will be stored in memory so prefer using native JS strategies.&lt;/p&gt;

&lt;p&gt;One way is to declare &lt;code&gt;getUsers()&lt;/code&gt; outside of the component and so it will only be declared once.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someEndpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getUsers function has been changed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or simply not declare a function and call fetch directly because fetch is a native function, it will never be changed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;call endpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someEndpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Increment &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another reason for using useCallback is closure. Sometimes you want to access a variable from a certain lexical scope, so you can't declare your function somewhere else and pass 10 arguments... (in progress)&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Four tricky JavaScript concepts in one line of code</title>
      <author>Per Enström</author>
      <pubDate>Fri, 10 Dec 2021 14:09:35 +0000</pubDate>
      <link>https://dev.to/perenstrom/four-tricky-javascript-concepts-in-one-line-of-code-3i3p</link>
      <guid>https://dev.to/perenstrom/four-tricky-javascript-concepts-in-one-line-of-code-3i3p</guid>
      <description>&lt;p&gt;My colleague approached me the other day with a line of JavaScript code he had found on &lt;a href="https://stackoverflow.com/a/39333479/563926"&gt;Stack Overflow&lt;/a&gt;, and asked how it worked. And I thought it was such a good example of four mid to advanced concepts in JavaScript so I decided to write down my explanation here as well.&lt;/p&gt;

&lt;p&gt;The line in question is this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;}))({&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before reading on, give it a think and see if you can work it out by yourself.&lt;/p&gt;

&lt;p&gt;Ready to go on? Let’s go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#object-destructuring"&gt;
  &lt;/a&gt;
  Object destructuring
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"&gt;Documentation at MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Object destructuring is the concept of picking properties from an object in batch instead of manually accessing each property and assigning them to a variable. Say you have an object coming in as a parameter in some function, and you want to do stuff with only a few of the properties of that object. Object destructuring makes that possible.&lt;/p&gt;

&lt;p&gt;Instead of doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;doStuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we can shorten it to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;doStuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which does the same thing. This makes the code much smaller, especially when we do stuff to multiple properties of an object. This saves us writing the full property path every time.&lt;/p&gt;

&lt;p&gt;The fancy stuff here is that this sort of destructuring works anywhere we have an object. Even when assigning input parameters for a function. So&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;can be written as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#object-shorthand-form"&gt;
  &lt;/a&gt;
  Object shorthand form
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#new_notations_in_ecmascript_2015"&gt;Documentation at MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When composing objects, we often have incoming parameters from somewhere, and transform them and then return a new object. This can often look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someDescriptiveName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doStuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someOtherDescriptiveName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doOtherStufF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;someDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;someDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;someOtherDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;someOtherDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this feels very repetitive. We're assigning the property with the key of a certain name with the contents of a variable with the &lt;em&gt;same name&lt;/em&gt;. Luckily there is a shorter way of writing this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someDescriptiveName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doStuff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someOtherDescriptiveName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doOtherStufF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;someDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;someOtherDescriptiveName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can just put the variable name once, and JavaScript will understand that we want a property of the same name as the variable whose value we're using.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implicit-return-in-arrow-functions"&gt;
  &lt;/a&gt;
  Implicit return in arrow functions
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;Documentation at MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When an arrow method only has a return statement, it can be shortened to an implicit form. Quite often we write methods that only return a ternary, or a promise, or the result of a simple calculation. In this case, we don't need a full code block around the function content.&lt;/p&gt;

&lt;p&gt;Instead of doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multiplyByTwo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inputNumber&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we can remove the &lt;code&gt;return&lt;/code&gt; keyword and remove the curly braces (or replace them with parentheses if returning an object literal).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multiplyByTwo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;inputNumber&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Tip: In Visual Studio Code, you can put the text cursor in the middle of the arrow part of the arrow function and press &lt;code&gt;cmd + .&lt;/code&gt; to bring up the Quick fix menu, where you can quickly add or remove the braces from the function.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calling-an-anonymous-function-directly"&gt;
  &lt;/a&gt;
  Calling an anonymous function directly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#basic_usage"&gt;Documentation at MDN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the least used of these four concepts. And possibly also the most confusing. It lets us invoke an arrow function immediately, without assigning it to a variable.&lt;/p&gt;

&lt;p&gt;Instead of doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myLog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;myLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we can call it directly without assigning it first&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is very rarely useful, but can be nice in some situations where you need to call an asynchronous method in a context that isn't marked as &lt;code&gt;async&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#back-to-our-confusing-line"&gt;
  &lt;/a&gt;
  Back to our confusing line
&lt;/h2&gt;

&lt;p&gt;With these four parts, we can now start deconstructing the confusing line into something that makes sense. If you've already forgotten, that's alright, here it is again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;}))({&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We start from the back, and see that this is an array function that's being called immediately. Let's assign the function to a variable and call that instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myfunction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's also move the input object to a variable to make it a bit cleaner&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is already much more readable. But let's keep going. We now direct our focus to the array function, where we see that we can start by adding back the curly braces and return keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to remove the destructuring in the function input parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the final step is to remove the shorthand form of the object returned from our function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myfunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So there we have it. We have now removed the four magic JavaScript concepts and have something that requires only basic knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-is-complex-too-complex"&gt;
  &lt;/a&gt;
  When is complex too complex?
&lt;/h2&gt;

&lt;p&gt;As with most of these kinds of questions, it will vary greatly between different developers and teams. But as a developer your code should always be readable without too much work. But at the same time, we cannot &lt;em&gt;not&lt;/em&gt; use the concepts available to us in the language, we just have to know when to use them.&lt;/p&gt;

&lt;p&gt;I would write this line as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pickAC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pickAC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This makes it much more readable than the one-liner, while at the same time keeping it short and concise. Calling an anonymous function immediately is a concept so rarely used that – in my opinion – it should only be used when absolutely necessary. But, to each their own, just make sure you agree amongst the team.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Creating a new Laravel application with Sail and Docker (no PHP setup required)</title>
      <author>Erika Heidi</author>
      <pubDate>Fri, 10 Dec 2021 13:58:03 +0000</pubDate>
      <link>https://dev.to/sourcegraph/creating-a-new-laravel-application-with-sail-and-docker-no-php-required-4c2n</link>
      <guid>https://dev.to/sourcegraph/creating-a-new-laravel-application-with-sail-and-docker-no-php-required-4c2n</guid>
      <description>&lt;p&gt;In the first episode of our livestreaming series &lt;em&gt;Getting Started with Laravel&lt;/em&gt; on &lt;a href="https://twitch.tv/sourcegraph"&gt;Sourcegraph's Twitch channel&lt;/a&gt;, we've seen how to bootstrap a new Laravel application with &lt;a href="https://laravel.com/docs/8.x/sail"&gt;Sail&lt;/a&gt; and Docker. This allows you to develop your Laravel application using Docker containers instead of having to set up a fully functional PHP development environment on a local machine or development server.&lt;/p&gt;

&lt;p&gt;In this recap post, we'll share all steps that were executed during the live session, so that you're able to reproduce them at your own pace.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h2&gt;

&lt;p&gt;Before moving along, make sure you have the following software installed and configured on your local machine or development server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Curl&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows and MacOS users will need Docker Desktop installed. Linux users need only the Docker engine installed. Make sure you add your user to the &lt;code&gt;docker&lt;/code&gt; group so that you are able to execute Docker with your regular user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-new-laravel-application-with-the-official-builder-script"&gt;
  &lt;/a&gt;
  1. Create a new Laravel application with the official builder script
&lt;/h2&gt;

&lt;p&gt;The demo application is a blog-like application that pulls content from a user's profile at &lt;a href="https://dev.to"&gt;DEV&lt;/a&gt;. We'll call it &lt;strong&gt;laravel-dev-blog&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The next command will download the builder script from an official Laravel site and run it using &lt;code&gt;bash&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-s&lt;/span&gt; https://laravel.build/laravel-dev-blog | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This operation may take a few minutes the first time you run the installer, since it will download a suitable PHP image to execute Composer and install the application dependencies using Docker.&lt;/p&gt;

&lt;p&gt;Before finishing, the installation script will ask you to confirm your &lt;code&gt;sudo&lt;/code&gt; password in order to set the correct permissions on the application directories:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Application ready! Build something amazing.
Sail scaffolding installed successfully.

Please provide your password so we can make some final adjustments to your application's permissions.

[sudo] password for erika: 

Thank you! We hope you build something incredible. Dive in with: cd laravel-dev-blog &amp;amp;&amp;amp; ./vendor/bin/sail up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now explore the files in your freshly installed Laravel application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;laravel-dev-blog/
&lt;span class="nb"&gt;ls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;artisan&lt;/code&gt; script, located at the root of the application folder, is an important tool that you can use to generate boilerplate code, manipulate the database, run jobs and queues, among other things.&lt;/p&gt;

&lt;p&gt;Following, a list with the relevant directories within a freshly installed Laravel application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── app/ # models, controllers, and app-specific logic
├── bootstrap/
├── config/ # configuration files
├── database/ # database-related classes and scripts
├── public/ # the document root for the application
├── resources/ # front end resources that aren't public: views, base CSS and JS 
├── routes/ # where the application routes are defined
├── storage/ # file uploads, cache, and logs are stored here
├── tests/ #application tests

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-running-raw-sail-up-endraw-"&gt;
  &lt;/a&gt;
  2.  Running &lt;code&gt;sail up&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;With the files in place, you can now bring your development environment up with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sail up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run your development environment in foreground mode, which allows you to see container logs in real time, but it will block your terminal. To stop the execution and save the state of containers, you can hit &lt;code&gt;CTRL+C&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To run the environment in background mode (detached), include &lt;code&gt;-d&lt;/code&gt; as an argument to the previous command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sail up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whether you choose to run your environment in foreground or background mode, your new Laravel application should now be available at &lt;code&gt;http://localhost&lt;/code&gt;. Open this URL on your browser and you'll see a page like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umxqQ4rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoci8k1kpbpbcr12rur7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umxqQ4rk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uoci8k1kpbpbcr12rur7.png" alt="Laravel welcome page" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sail-quick-reference"&gt;
  &lt;/a&gt;
  Sail quick reference
&lt;/h3&gt;

&lt;p&gt;The following list contains a short reference on the main Sail commands:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail up&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Brings the Docker environment up.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail down&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Brings the Docker environment down and remove associated containers, storage, and network.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Starts an environment that was previously stopped with &lt;code&gt;sail stop&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail stop&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Stops an environment that is currently running, saving the state of containers and services.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail artisan&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Runs the &lt;code&gt;artisan&lt;/code&gt; tool on the application container.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sail php&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Runs a PHP script on the application container.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;For more information on all available Sail commands, please visit the &lt;a href="https://laravel.com/docs/8.x/sail#executing-sail-commands"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h2&gt;

&lt;p&gt;Here are a few tips for troubleshooting common problems that may happen while you run this tutorial.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#docker-is-not-running"&gt;
  &lt;/a&gt;
  'Docker' is not running
&lt;/h4&gt;

&lt;p&gt;This error can appear if the Docker service is not enabled on your system, or if your current system user doesn't have permission to execute Docker. On new installations of the Docker engine on Linux, only the &lt;strong&gt;root&lt;/strong&gt; user is able to manage containers. You need to make sure your system user is added to the &lt;strong&gt;docker&lt;/strong&gt; group on your system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-added-my-user-to-the-docker-group-but-it-still-doesnt-work"&gt;
  &lt;/a&gt;
  I added my user to the docker group, but it still doesn't work
&lt;/h4&gt;

&lt;p&gt;After adding the user to the group, you need to restart your session so that the changes are valid. You can log out and log on again on your system. Another option is to run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;u - &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;USER&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Although this is a temporary solution and you'll still need to restart your session so that the change is permanent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With the Laravel builder script and Sail, it is possible to install and run a Laravel application without the need to have PHP installed on your local machine or development server. This can be very useful to explore the Laravel framework and the PHP language in general, with the additional advantage of using a standardized development environment that is compatible and optimized for running Laravel.&lt;/p&gt;

&lt;p&gt;In the next part of this series, we'll start building the front end of our project using TailwindCSS.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitch.tv/sourcegraph%5D"&gt;Sourcegraph on Twitch&lt;/a&gt; to be notified when we go live with new episodes on this series.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
