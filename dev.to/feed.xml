<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Webpack Academy #7: More options on config file</title>
      <author>CodeOz</author>
      <pubDate>Sun, 12 Sep 2021 11:41:12 +0000</pubDate>
      <link>https://dev.to/codeoz/webpack-academy-7-more-options-on-config-file-405b</link>
      <guid>https://dev.to/codeoz/webpack-academy-7-more-options-on-config-file-405b</guid>
      <description>&lt;p&gt;We almost do it !&lt;/p&gt;

&lt;p&gt;This is the last webpack academy!&lt;/p&gt;

&lt;p&gt;I hope you like and learn it!&lt;/p&gt;

&lt;p&gt;Today will be easier than the last.&lt;/p&gt;

&lt;p&gt;I will show you some other interesting things to do in the config file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name-options"&gt;
  &lt;/a&gt;
  Name options
&lt;/h3&gt;

&lt;p&gt;When we use &lt;code&gt;hash&lt;/code&gt; to name our bundle, we made something like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[contenthash:8].js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But you can use another thing to &lt;strong&gt;properly&lt;/strong&gt; name your bundle !&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;name&lt;/code&gt; option!&lt;/p&gt;

&lt;p&gt;So you can use this 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[name].[contenthash:8].js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we get something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;myApp.ce59c821.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why do we get this name?&lt;/p&gt;

&lt;p&gt;To understand this, we should go back into the &lt;code&gt;entry&lt;/code&gt; property in our config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/style.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/main.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, webpack will use the name given by your entry point (here &lt;code&gt;myApp&lt;/code&gt;) and put it into &lt;code&gt;[name]&lt;/code&gt; property!&lt;/p&gt;

&lt;p&gt;It works for css bundle also!&lt;/p&gt;

&lt;p&gt;But what happens with chunk file, since there are not defined in our config file?&lt;/p&gt;

&lt;p&gt;Do you understand that you can give a name to your chunk?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jsonObjectImport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="cm"&gt;/* webpackChunkName: "myChunkName" */&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./big-object.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack will replace &lt;code&gt;[name]&lt;/code&gt; by the chunk name! (here &lt;code&gt;myChunkName&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;It's an important property to me since we can see the name of our bundle in our dist folder!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-alias"&gt;
  &lt;/a&gt;
  Create alias
&lt;/h3&gt;

&lt;p&gt;In order to avoid something like this &lt;code&gt;import toto from ../../../toto/toto&lt;/code&gt;, we can use alias to make something more readable like &lt;code&gt;import toto from @/toto/toto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To achieve this, we need to use &lt;code&gt;resolve.alias&lt;/code&gt; in our config file !&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So if we need to import a file from &lt;code&gt;src/&lt;/code&gt; we can make this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/first&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;For more information about this &lt;a href="https://webpack.js.org/configuration/resolve/#resolvealias"&gt;https://webpack.js.org/configuration/resolve/#resolvealias&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#copy-webpack-plugin"&gt;
  &lt;/a&gt;
  Copy webpack plugin
&lt;/h3&gt;

&lt;p&gt;If you have any static files, you will see that theses static files will be not added into your &lt;code&gt;dist/&lt;/code&gt; folder!&lt;/p&gt;

&lt;p&gt;Since it will not be compiled by Webpack.&lt;/p&gt;

&lt;p&gt;If you need to add some static files into our &lt;code&gt;dist/&lt;/code&gt; folder like images or others things, you will need to use &lt;strong&gt;Copy Webpack plugin&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CopyPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
      &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/static&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;static&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="p"&gt;}],&lt;/span&gt;
&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You put the source path of your statics files, and the name of the folder that will contain these files in our &lt;code&gt;dist/&lt;/code&gt; folder!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#environment-files"&gt;
  &lt;/a&gt;
  Environment files
&lt;/h3&gt;

&lt;p&gt;If you need to inject an environment file into your project, you will need to use this plugin &lt;strong&gt;DotenvPlugin&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; with your value. (Here I push the env file for the example, but you should not push env file in your git project !)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DotenvPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./.env&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use sample with default env value also!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For more information: &lt;a href="https://github.com/nwinch/webpack-dotenv-plugin"&gt;https://github.com/nwinch/webpack-dotenv-plugin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's finished! I hope you like this series about Webpack!&lt;/p&gt;

&lt;p&gt;I like to write this, and I hope you learn a few things!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Code-Oz/webpack-academy/tree/6d960e309b390f07205f8d500e6a2163348b304d"&gt;You can check the source code at this commit&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;If you want to have a nice article to read about web dev, you can subscribe to my FREE newsletter &amp;amp; get a &lt;strong&gt;cheatlist about Javascript&lt;/strong&gt; at this URL 👇&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>webpack</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Ternary Operator and Short Circuit Conditionals in Python like JavaScript</title>
      <author>Karan-Munjani</author>
      <pubDate>Sun, 12 Sep 2021 11:31:36 +0000</pubDate>
      <link>https://dev.to/karanmunjani/ternary-operator-and-short-circuit-conditionals-in-python-like-javascript-24h7</link>
      <guid>https://dev.to/karanmunjani/ternary-operator-and-short-circuit-conditionals-in-python-like-javascript-24h7</guid>
      <description>&lt;p&gt;If you ever coded in JavaScript then you probably would be aware about content of cover image.&lt;/p&gt;

&lt;p&gt;Assuming you are aware that how much ternary operators are useful in programming languages such as C, C++, Go, Perl, Ruby, Java, JavaScript, etc. And Yes Python also Supports Ternary operator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-introduced-ternary-operator-in-python-25"&gt;
  &lt;/a&gt;
  Python Introduced Ternary operator in Python 2.5.
&lt;/h3&gt;

&lt;p&gt;It's Called inline-if, Which has syntax something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a if condition else b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That Simply means if condition is true then result is a else b.&lt;/p&gt;

&lt;p&gt;But if you come from JavaScript Background then it seems odd at first, Cause we are used to code something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;variable = condition ? a : b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;But what if we can familiarize that odd ternary operator to feel like JavaScript one?&lt;/strong&gt;&lt;br&gt;
Yes We can do that, and that's not a rocket science. We can simply replace the ? with python logical &lt;code&gt;and&lt;/code&gt; operator and : with logical &lt;code&gt;or&lt;/code&gt; operator. &lt;/p&gt;

&lt;p&gt;Let's See how:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;variable = condition and a or b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After reading this you might be feel like, "hmmm! that was not much important and useful". But the aim of this article to explain that how logical conditional operators are helpful and just requires a different approach to it.&lt;/p&gt;

&lt;p&gt;Also We can use conditional short-circuiting in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let data = online &amp;amp;&amp;amp; getData();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What it does is if online is true then and then it calls the getData() method.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Short circuiting means that when we are evaluating an AND expression (&amp;amp;&amp;amp;), if the first operand is false it will short-circuit and not even look at the second operand.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So instead code in python like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(online):
  data = getData()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can simply use logical &lt;code&gt;and&lt;/code&gt; again to avoid writing if statement using one liner code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data = online and getData()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Yes I accept that this was not much smart article compare to others but Hope Some Novice programmer will get help form this🤞.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hope you gained some information from this article✨.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading-it-out"&gt;
  &lt;/a&gt;
  Thank You For reading it out😀
&lt;/h2&gt;

&lt;p&gt;Comment Your Thoughts Below.&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Ethereum Mining in simple language; How to extract the second most important cryptocurrencies in the world?</title>
      <author>banjamin</author>
      <pubDate>Sun, 12 Sep 2021 11:05:02 +0000</pubDate>
      <link>https://dev.to/banjamindev/atrium-extraction-in-simple-language-how-to-extract-the-second-most-important-cryptocurrencies-in-the-world-24fk</link>
      <guid>https://dev.to/banjamindev/atrium-extraction-in-simple-language-how-to-extract-the-second-most-important-cryptocurrencies-in-the-world-24fk</guid>
      <description>&lt;p&gt;ethereum is the second largest currency in the world and one of the most important extractable currencies in the cryptocurrency market. Many digital currency market players consider ethereum mining to be an important and reliable source of income. If you are also interested in ethereum extraction, this article is a comprehensive but simple guide to ethereum extraction. Please stay with us until the end of the article.&lt;/p&gt;

&lt;p&gt;In this article, we will assume that you know what an ethereum is and how it works by default. So we will only give a brief explanation about this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-ethereum"&gt;
  &lt;/a&gt;
  What is an ethereum?
&lt;/h2&gt;

&lt;p&gt;ethereum extraction&lt;br&gt;
ethereum creator Vitalik Butrin became acquainted with Bitcoin at the age of 17 and has since started writing for Bitcoin magazine and offering suggestions for improving it. But since these proposals did not materialize, he decided to build his own digital currency. In 2015, ethereum was introduced to the market.&lt;/p&gt;

&lt;p&gt;ethereum is actually a blockchain and its native cryptocurrency is called ETH. ethereum has its own browser and language and payment system. This blockchain also has no single and central controller and thousands of users voluntarily control it with their computer systems around the world. These users are called nodes or node networks. Nodes perform ethereum transaction verification and smart contracts on the network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-extraction"&gt;
  &lt;/a&gt;
  What is extraction?
&lt;/h2&gt;

&lt;p&gt;In simple terms, extraction is the process of solving complex mathematical equations. Miners are network nodes that use their computer's processing time and power to solve these equations. ethereum extraction algorithm is proof of work that confirms ether or ethereum transactions. In addition, miners are responsible for creating new tokens and blocks in the process. In the end, every miner will be rewarded for their successful activity.&lt;/p&gt;

&lt;p&gt;Poof of work algorithm is the most popular consensus algorithm in blockchain cryptocurrencies. The consensus algorithm allows the user to use the same source of information as other users and ensures that all users on the network use the same source. The purpose of this algorithm is to prevent the entire system from being harmed when one or more users leave the network. The proof of work algorithm was first used in Bitcoin, but its concept and application is not limited to Bitcoin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-it-necessary-to-extract-ethereum"&gt;
  &lt;/a&gt;
  Why is it necessary to extract ethereum?
&lt;/h2&gt;

&lt;p&gt;ethereum extraction&lt;br&gt;
The ethereum network, as we said, has its own blockchain. Any transaction in this blockchain must be approved by the miners. That's why transactions take time. This time is spent approving ethereum miners.&lt;/p&gt;

&lt;p&gt;ethereum transactions enter the ethereum blockchain after confirmation. So the blockchain needs to have enough space to store transactions. In addition to confirming transactions, miners add new blocks to the blockchain. In general, the task of a miner is to make sure that no transactions are made twice by mistake and that no errors occur in the network.&lt;/p&gt;

&lt;p&gt;When a miner can solve one of the equations, he adds the corresponding block to the blockchain and receives his reward. By doing this, the three goals of the extraction work are:&lt;/p&gt;

&lt;p&gt;Confirm correct transactions&lt;br&gt;
Add new blocks and create new storage space&lt;br&gt;
Receive rewards by miners and add new coins to the network&lt;br&gt;
will be done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-miner-what-is-a-miner"&gt;
  &lt;/a&gt;
  Who is Miner? What is a Miner?
&lt;/h2&gt;

&lt;p&gt;ethereum extraction&lt;br&gt;
Miner is a person who provides his / her computer processing power to the network to approve transactions and record new transactions. Miner actually does this in the hope of receiving a reward from the network (new block extraction bonus, transaction registration fee).&lt;/p&gt;

&lt;p&gt;But it is not possible to extract ethereum with GPUs from home computers. ethereum extraction is actually done with the help of extraction pebbles, which is a collection of powerful graphics cards. These pebbles are also called miners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gpu-mining"&gt;
  &lt;/a&gt;
  What is GPU Mining?
&lt;/h2&gt;

&lt;p&gt;GPU mining or mining with graphics cards is a popular way to extract cryptocurrencies, especially ethereum. This method was formed because bitcoin mining with CPUs (CPUs) was increasing day by day and on the other hand, it had created a kind of monopoly among ISIC manufacturers.&lt;/p&gt;

&lt;p&gt;GPU (GPU) extraction tools were much cheaper, and this method was able to find its place among important cryptocurrencies such as ethereum and Monroe. These cryptographers have written their algorithms based on the presence of small extractors and their persistence in the network and want to take care of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-ethereum-extraction-algorithm"&gt;
  &lt;/a&gt;
  What is the ethereum Extraction Algorithm?
&lt;/h2&gt;

&lt;p&gt;Digital currencies use different consensus algorithms for their operations. Consensus algorithms help the network to tolerate error. The two most important consensus algorithms are the Proof of Work algorithm and the Proof of Stake algorithm. Bitcoin and ethereum both use proof-of-work algorithms as market leaders in digital currencies. In the proof-of-work algorithm, the user must provide the network with the processing power of his computer to participate in the network and make a profit.&lt;/p&gt;

&lt;p&gt;In this algorithm, validation nodes (hereinafter referred to as miners or miners) perform the hashing of information. Hashing means creating a unique solution (function) to add information to the blockchain. A hash is a seemingly random string of letters and numbers that is created when solving a hash function. This string of letters and numbers is actually encrypted transaction information that is to be stored in the blockchain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-important-points-before-choosing-an-extraction-pool"&gt;
  &lt;/a&gt;
  1-2. Important points before choosing an extraction pool
&lt;/h2&gt;

&lt;p&gt;Currently, several small and large extraction ponds are active in the ethereum extraction process and have very different characteristics. But each miner can only join one pool. So before you make your final decision, you can experience membership in different pools and read about them well. Important points to consider when choosing a pool:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The size of the pool&lt;br&gt;
The more people who are members of the pool and the more devices that share their processing power with others, the better the chances of solving a block for all members. However, if the number of pool members is too large, the reward received by each member will decrease. For this reason, the size of the pool can be very effective in the profitability of its membership.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Currency payment method in the pool&lt;br&gt;
Another point to keep in mind when choosing a pool is the minimum withdrawal of currency from the account. If the minimum withdrawal is very high, for example 1 ethereum, you have to wait a long time for the currency you mined to reach this amount. So you will need a lot of time to make a profit or change the pool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pool fee&lt;br&gt;
Extraction pools, like any other service center, receive a fee for managing and organizing extraction and distribution of rewards among users. When you join the pool and use its services, you also have to pay some of your income to the pool as a fee. This fee is usually between 1% and 3%. It is better not to look for pools with 0% fee, because it is not right to trust them.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Method 3: Subscribe to cloud mining services&lt;br&gt;
Cloud extraction services are services in which a person does not need to share the processing power of a computer or extraction rig with others to subscribe, but can only extract ethereum for a fee or, in fact, rent an extraction machine.&lt;/p&gt;

&lt;p&gt;These services are actually a very large mining farm where people actually pay to participate in the mining farm costs and receive ethereum in return. This method is much easier than the other two methods and does not require much time or technical knowledge. But before joining a cloud mining service, ask yourself the following questions:&lt;/p&gt;

&lt;p&gt;Why should one lease one's mining machine to others when one can make a profit with it?&lt;br&gt;
Why not buy ethereum with the same membership fee to save in your account?&lt;br&gt;
Try to answer these questions carefully and thoroughly. Membership in these services is usually not cost-effective. In fact, cloud mining services are guaranteed to be more profitable for its operators than for its users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-problems-of-ethereum-extraction"&gt;
  &lt;/a&gt;
  What are the problems of ethereum extraction?
&lt;/h2&gt;

&lt;p&gt;ethereum mining, like most digital currency mining, has many challenges and opportunities. Although mining is still a lucrative business given ethereum price growth, you should be aware of its problems before starting any business. ethereum and bitcoin mining is no exception. The high cost of electricity and mining equipment, exposure to hacker attacks, and decentralization are some of the problems that we will address below.&lt;/p&gt;

&lt;p&gt;1- High costs of electricity and extraction equipment&lt;br&gt;
Mining cryptocurrencies is generally costly. If you want to extract ethereum legally and at the electricity rate, you have to pay approximately 900 tomans per kilowatt hour. This cost is usually calculated during the month and of course it varies depending on the model of your device. But keep in mind that the more powerful and profitable the device you buy, the higher its electricity costs will be.&lt;/p&gt;

&lt;p&gt;ethereum extraction devices are another part of your costs. Graphic ethereum extraction graphs are not cheap and are out of competition, especially with the constant advancement of technology. So if you want to upgrade your device by increasing the network hash rate, the extraction costs will also increase.&lt;/p&gt;

&lt;p&gt;2- The risk of hackers attacking your property&lt;br&gt;
Avoid ransomware&lt;br&gt;
Hackers are always one step ahead of security technologies. If you do not take good care of your assets and computer system, you may be exposed to cryptocurrencies and your passwords may be stolen. In 2017 alone, attacks on computer browsers increased by 31%. So if you set up only one mining node and do not secure it, you are actually doing an important service to hackers.&lt;/p&gt;

&lt;p&gt;3- Centralization&lt;br&gt;
The initial idea of ​​cryptocurrencies was to decentralize and take the power of money management out of the hands of a specific source such as a bank. But as time went on and many people turned to mining, it became necessary to design more powerful and better mining machines. Of course, the technology of making these devices and pebbles was given to certain companies. This is practically the opposite of the concept of decentralization of digital currencies. Although ethereum has entered the process using fewer graphic pebbles, it is still at risk.&lt;/p&gt;

&lt;p&gt;So before entering the ethereum extraction process, please know all the challenges you and the network face. Start buying and selling with full awareness to help both yourself and the network and ultimately have a healthy and secure income (source).&lt;br&gt;
Is ethereum extraction cost effective?&lt;br&gt;
For now, yes, as long as you follow the tips in the previous section of this article. ethereum reached $ 4,000 in 2021 and reached its highest ceiling. This shows that the approach of the people to the ethereum market is very positive and the extraction will be very profitable if the details are observed. For example, mining with the Pandaminer B5 Plus device will currently generate about 6 million Tomans per month for Miner.&lt;/p&gt;

&lt;p&gt;In the future, the conditions for making money from the ethereum network will probably change. ethereum is planning to move to the ethereum 2 network. This blockchain network will continue to operate with a stock proof algorithm. If this happens, the ethereum extraction process will be obsolete. But at the time of writing, ethereum extraction is still cost-effective.&lt;/p&gt;

&lt;p&gt;Know more:&lt;br&gt;
How long does ethereum extraction last? What percentage of ethereum has been extracted so far?&lt;br&gt;
ethereum, like Bitcoin, has no limit on the number of tokens it can offer. At the time of writing, 116,870,559 ethereums have been extracted, and will continue to be extracted until ethereum migrates to the blockchain network with the stock proof algorithm. Of course, to protect the network from inflation, only 18 million ethereums are extracted annually. This means two ethereums approximately every 14 seconds.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-extract-ethereum-20"&gt;
  &lt;/a&gt;
  How to extract ethereum 2.0?
&lt;/h2&gt;

&lt;p&gt;ethereum 2.0&lt;br&gt;
ethereum 2.0 is not actually extracted. ethereum 2 uses a stock proof algorithm. In this algorithm, instead of the need for processing power, it is necessary to register participation in the network with your assets. Having 32 ethereums, for example, will qualify you to participate in the network and decide whether to make changes or approve transactions. By providing these 32 ethereums to the network for approval, you will receive a reward (source).&lt;/p&gt;

&lt;p&gt;Is ethereum extraction legal in Iran?&lt;br&gt;
According to a government decree, the extraction of bitcoins, ethereum and other cryptocurrencies is possible only with the permission of the Ministry of Industry, Mines and Trade; Of course, in free trade zones, the ministry has delegated the responsibility of issuing licenses to the Free Zones Organization. Also, in some cities, there are restrictions on the establishment of Ramzarz mining units: it includes a limit of 120 km in Tehran, 50 km in Isfahan and 30 km in the centers of other provinces.&lt;/p&gt;

&lt;p&gt;Electricity supply is also possible by receiving a branch from the national grid or the construction of a power plant outside the national grid. . But according to the same law, the extraction of ciphers during peak hours is prohibited. Another important point of this decree is that the production centers of cryptocurrencies are considered as an industrial production unit and will be subject to the tax law, but if they issue their cryptocurrencies and return the resulting currency to Iran, their tax will be zero ( Source).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-free-ethereum-extraction-possible"&gt;
  &lt;/a&gt;
  Is free ethereum extraction possible?
&lt;/h2&gt;

&lt;p&gt;We keep emphasizing on the Wallx blog that "nothing is completely free", and so does ethereum Free! The least you can ask for when extracting ethereum for free is the internet, computer or mobile processing, and of course your time. However, there are tools that you can use to get ethereum without paying directly.&lt;/p&gt;

&lt;p&gt;Of course, these tools have little profitability, and in many cases the profit is so low that even its harvest is not economical. But the choice is yours anyway. The Idle-Empire website is one of the sites where you can get ethereum by subscribing and choosing from a variety of activities. For example, filling out questionnaires, watching promotional videos, and playing games are some of these methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-the-best-ethereum-extraction-software"&gt;
  &lt;/a&gt;
  Introducing the best ethereum extraction software
&lt;/h2&gt;

&lt;p&gt;ethereum extraction software, like other cryptocurrencies, covers a very wide range. In fact, there is a long list of ethereum extraction software that you can not excel at until you have used them. This makes it difficult to choose better software. But relying on the experience gained in this area and analyzing hundreds of user feedback and critiques can provide a limited but strong list of ethereum extraction software.&lt;/p&gt;

&lt;p&gt;1- ETHminer software&lt;br&gt;
The first recommended software is ETHminer software. As the name implies, this software is designed solely for ethereum Extraction and now supports Linux, Mac and Windows operating systems. When downloading this software, pay attention to select the version related to your operating system. With this software, in addition to ethereum, you can extract other cryptocurrencies that use the Ethash algorithm; Including Expansion, Elysmus, Metavars, Myosquin, Pearl, Classical ethereum, etc.&lt;/p&gt;

&lt;p&gt;2- CGMiner software&lt;br&gt;
The next software is CGMiner, which was released in 2011 and is still one of the most popular mining software. The main reason for the popularity and ubiquity of CGMiner is its excellent compatibility with three different hardware ASIC, FPGA, GPU. CG software is an open source software written in C language. The advantages of this software include measuring the desired hash rate with zero delay as well as advanced detection of new blocks. This software is also available for Linux, Mac and Windows operating systems.&lt;br&gt;
3- BitMinter software&lt;br&gt;
The third application is BitMinter, which offers great features to its users; These include a clear graphical interface as well as a very high connection speed to the Bitminter mining pool. This software entered the market in 2011 and it can be said that it has the most experienced mining pools in the field of cryptocurrency mining, so that it now has 450,000 registered user accounts. Another advantage of this software is that unlike CGMiner, it does not need to be installed, because it is based on the Java Network Launch Protocol (JNLP). You can easily run it on ASIC, FPGA, GPU hardware. The software is also compatible with Linux, Mac and Windows operating systems (source).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;ethereum mining, like bitcoin mining, is an opportunity for digital currency market enthusiasts to both contribute to and benefit from network stability and security. In this Walx article, we tried to explain what is needed for ethereum mining. From now on, start the extraction rig with you to start extracting this amazing cryptocurrency.&lt;/p&gt;

&lt;p&gt;If you have questions about Bitcoin or ethereum mining, ask us in the comments section.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>This week in Flutter #20</title>
      <author>Michele Volpato</author>
      <pubDate>Sun, 12 Sep 2021 10:50:40 +0000</pubDate>
      <link>https://dev.to/mvolpato/this-week-in-flutter-20-225j</link>
      <guid>https://dev.to/mvolpato/this-week-in-flutter-20-225j</guid>
      <description>&lt;p&gt;Big news this week! Google &lt;strong&gt;announced&lt;/strong&gt; &lt;a href="https://medium.com/dartlang/announcing-dart-2-14-b48b9bb2fb67"&gt;Dart 2.14&lt;/a&gt; and &lt;a href="https://medium.com/flutter/whats-new-in-flutter-2-5-6f080c3f3dc"&gt;Flutter 2.5&lt;/a&gt;: Apple Silicon support and standard lints are the prominent updates for Dart.&lt;/p&gt;

&lt;p&gt;For Flutter there are &lt;strong&gt;performance&lt;/strong&gt; improvements, &lt;a href="https://material.io/blog/announcing-material-you"&gt;Material You&lt;/a&gt; support, camera and image picker updates, Widget Inspector improvements, and a &lt;strong&gt;new starter project&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Read these recap by &lt;a href="https://dev.to/iizmotabar/flutter-2-5-what-changes-does-it-bring-c94"&gt;Motabar Javaid&lt;/a&gt;, &lt;a href="https://medium.com/@ozantaskiran?source=user_profile-------------------------------------"&gt;&lt;/a&gt;&lt;a href="https://medium.com/@ozantaskiran/flutter-2-5-update-overview-908927045568"&gt;Ozan Taskiran&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Michele Volpato&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development 🧑‍💻
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#flutter-performance-tips"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://itnext.io/flutter-performance-tips-4580b2491da8"&gt;Flutter Performance Tips&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Here is a short list of tips to &lt;strong&gt;improve&lt;/strong&gt; the &lt;strong&gt;performance&lt;/strong&gt; of your Flutter app. Each tip has a link to a longer explanation if you want more information about it. A nice list by &lt;a href="https://www.linkedin.com/in/hasan-basri-bayat-01403118a/"&gt;Hasan Basri Bayat&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clean-network-layer-in-flutter-dio-freezed-jsonannotation"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://ercangp.medium.com/clean-network-layer-in-flutter-dio-freezed-json-annotation-f5f2c41ac240"&gt;Clean Network Layer in Flutter [Dio + Freezed + Json_Annotation]&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Create your network layer once and use it in &lt;strong&gt;all your projects&lt;/strong&gt;, with this easy-to-follow tutorial by &lt;a href="https://github.com/i-Senku"&gt;Ercan Garip&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-bloc-a-complete-guide"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://dhruvnakum.xyz/flutter-bloc-a-complete-guide"&gt;Flutter Bloc: A Complete Guide&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I stopped using the original &lt;strong&gt;BLoC&lt;/strong&gt; some time ago, I find it too complicated to understand for new developers when they join the team. But if you want to learn more about it, &lt;a href="https://hashnode.com/@Dhruv-Nakum"&gt;&lt;/a&gt;&lt;a href="https://github.com/red-star25"&gt;Dhruv Nakum&lt;/a&gt; published a nice article where he creates a simple weather app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-graphql-with-flutter-a-tutorial-with-examples"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://blog.logrocket.com/using-graphql-with-flutter-a-tutorial-with-examples/"&gt;Using GraphQL with Flutter: A tutorial with examples&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://graphql.org"&gt;GraphQL&lt;/a&gt; is getting used more and more by API providers. There are some packages in Flutter/Dart that help you with using it in your app. I believe that &lt;em&gt;&lt;a href="https://pub.dev/packages/graphql_flutter"&gt;graphql_flutter&lt;/a&gt;&lt;/em&gt; is one of the &lt;strong&gt;best&lt;/strong&gt; and in this article, &lt;a href="https://blog.logrocket.com/author/chidumennamdi/"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/ngArchangel"&gt;Chidume Nnamdi&lt;/a&gt; shows you how to use it with a tutorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cubit-101-what-is-it-how-to-use-it-and-more"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://medium.com/createthrive/cubit-101-what-is-it-how-to-use-it-and-more-6c16ea66ba88"&gt;Cubit 101: What is It, How to Use it and More&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;And after the article about BLoC above, here is an article about &lt;strong&gt;Cubit&lt;/strong&gt;, an &lt;strong&gt;evolution of BLoC&lt;/strong&gt;. I always say that I stopped using BLoC, but I can see myself starting to use Cubit in the future. This is a well-written article, I suggest you read it even if you already know Cubit. Via &lt;a href="https://www.linkedin.com/in/gianfranco-pigatto-038581b5/"&gt;Gianfranco Pigatto&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exploring-the-stripe-flutter-sdk"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://blog.logrocket.com/exploring-stripe-flutter-sdk/"&gt;Exploring the Stripe Flutter SDK&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Stripe&lt;/strong&gt; is a payment service system with good APIs. &lt;a href="https://blog.logrocket.com/author/emmanueletukudo/"&gt;Emmanuel Etukudo&lt;/a&gt; shows you how you can &lt;strong&gt;integrate&lt;/strong&gt; it into a &lt;strong&gt;Flutter&lt;/strong&gt; app, with support with Apple Pay and Google Pay.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-to-know-flutter-pull-to-refresh-with-online-data"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://dev.to/theotherdevs/getting-to-know-flutter-pull-to-refresh-with-online-data-592i"&gt;Getting to know Flutter: Pull to refresh with online data&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;pull to refresh&lt;/strong&gt; is a common UX feature of apps with lists. Learn how to implement it with this article by &lt;a href="https://twitter.com/TheotherdevS"&gt;TheOtherDev/s&lt;/a&gt;. This article uses an external package: &lt;a href="https://pub.dev/packages/pull_to_refresh"&gt;&lt;em&gt;pull_to_refresh&lt;/em&gt;&lt;/a&gt;, but...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refreshindicator-flutter-widget-of-the-week"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://www.youtube.com/watch?v=ORApMlzwMdM"&gt;RefreshIndicator (Flutter Widget of the Week)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;...you can also use the standard &lt;em&gt;&lt;a href="https://api.flutter.dev/flutter/material/RefreshIndicator-class.html"&gt;RefreshIndicator&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementing-svg-in-flutter-with-fluttersvg"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://blog.logrocket.com/implement-svg-flutter-apps/"&gt;Implementing SVG in Flutter with flutter_svg&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Did you know you can easily use &lt;strong&gt;SVG&lt;/strong&gt; in your &lt;strong&gt;Flutter&lt;/strong&gt; app? &lt;a href="https://github.com/mhadaily"&gt;Majid Hajian&lt;/a&gt; knows that, and he wrote an article about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advance-scrolling-in-flutter-part-1"&gt;
  &lt;/a&gt;
  🔗 &lt;a href="https://dhruvnakum.xyz/advance-scrolling-in-flutter-part-1"&gt;Advance Scrolling in Flutter - Part (1)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;An extensive article about &lt;strong&gt;scrolling&lt;/strong&gt; in Flutter, with &lt;strong&gt;examples&lt;/strong&gt; and &lt;strong&gt;GIFs&lt;/strong&gt;, so that you do not have to implement everything yourself to test it. By &lt;a href="https://hashnode.com/@Dhruv-Nakum"&gt;&lt;/a&gt;&lt;a href="https://github.com/red-star25"&gt;Dhruv Nakum&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architecture-%F0%9F%8F%9B"&gt;
  &lt;/a&gt;
  Architecture 🏛
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#flutter-mvvm-architecture-best-practice-using-provide-amp-http"&gt;
  &lt;/a&gt;
  🔗 &lt;strong&gt;&lt;a href="https://medium.com/@ermarajhussain/flutter-mvvm-architecture-best-practice-using-provide-http-4939bdaae171"&gt;Flutter: MVVM architecture best practice using Provide &amp;amp; HTTP&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;[...]&lt;/p&gt;

&lt;p&gt;Read the rest on &lt;a href="https://ishouldgotosleep.com/this-week-in-flutter-20/"&gt;my website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ishouldgotosleep.com/subscribe-to-the-newsletter-devto/"&gt;Join the Flutter and Dart newsletter&lt;/a&gt; and receive it weekly in your inbox.&lt;/p&gt;




</description>
      <category>flutter</category>
      <category>dart</category>
      <category>news</category>
    </item>
    <item>
      <title>Introduction to java.util Package</title>
      <author>Ritvik Dubey</author>
      <pubDate>Sun, 12 Sep 2021 10:45:39 +0000</pubDate>
      <link>https://dev.to/ritvikdubey27/introduction-to-java-util-package-7d5</link>
      <guid>https://dev.to/ritvikdubey27/introduction-to-java-util-package-7d5</guid>
      <description>&lt;p&gt;Hello all👋 I hope you are doing well. This is going to be a short introductory article about the most useful package in Java i.e., &lt;strong&gt;java.util package&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-begin"&gt;
  &lt;/a&gt;
  Let's begin...
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#lets-first-understand-package"&gt;
  &lt;/a&gt;
  Let's first understand package
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;What is a package?&lt;/strong&gt; &lt;br&gt;
&lt;br&gt;&lt;em&gt;In short a Java package is collection of similar type of classes.&lt;/em&gt; &lt;br&gt;
&lt;br&gt;A Package can be defined as a collection of similar types of classes, interfaces and sub-packages in the form of directory structure. You can read more about packages in one of my article &lt;strong&gt;&lt;em&gt;&lt;a href="https://dev.to/ritvikdubey27/you-must-know-this-about-java-ii-1k21"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javautil"&gt;
  &lt;/a&gt;
  java.util
&lt;/h3&gt;

&lt;p&gt;The basic utility classes required to a programmer are present in this package. &lt;em&gt;It contains the collections framework, legacy collection classes, event model, date and time facilities, internationalization, and miscellaneous utility classes (a string tokenizer, a random-number generator, and a bit array).&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To use any class you have to import java.util package at top of the program:-&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Class_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;To make it easy let's take an example, let's suppose you want to print date and time in your program you will need to import &lt;strong&gt;java.util&lt;/strong&gt; package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//or&lt;/span&gt;
&lt;span class="c1"&gt;//import java.util.*;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Demo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The date is : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;You can run your code online &lt;a href="https://www.tutorialspoint.com/compile_java_online.php"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpGvZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631432248405/oWB1aHLjb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpGvZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631432248405/oWB1aHLjb.png" alt="java.util.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-use-of-javautil-package"&gt;
  &lt;/a&gt;
  What is use of java.util package?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Java collections.&lt;/li&gt;
&lt;li&gt;For random number generation.&lt;/li&gt;
&lt;li&gt;For Calendar.&lt;/li&gt;
&lt;li&gt;For string parsing.&lt;/li&gt;
&lt;li&gt;For internationalization support by using the internationalization supported classes from java.util package &lt;strong&gt;(Locale)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-important-and-generally-used-classes"&gt;
  &lt;/a&gt;
  Some important and generally used classes
&lt;/h3&gt;

&lt;p&gt;Some important and generally used classes and interfaces which are present inside the java.util package are:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Arrays :-&lt;/strong&gt; This class contains various methods for manipulating arrays.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ArrayList :-&lt;/strong&gt; This class is resizable-array implementation of the List interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Collections :-&lt;/strong&gt; This class consists exclusively of static methods that operate on or return collections.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Date :-&lt;/strong&gt; This class represents a specific instant in time, with millisecond precision.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EventObject :-&lt;/strong&gt; This class is the root class from which all event state objects shall be derived.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formatter :-&lt;/strong&gt; An interpreter for printf-style format strings.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashMap :-&lt;/strong&gt; The HashMap class Hash table based implementation of the Map interface.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashSet :-&lt;/strong&gt; The HashSet class implements the Set interface, backed by a hash table (actually a HashMap instance).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HashTable :-&lt;/strong&gt; The HashTable class implements a hash table, which maps keys to values.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LinkedList :-&lt;/strong&gt; The LinkedList class Doubly-linked list implementation of the List and Deque interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Locale :-&lt;/strong&gt; A Locale object represents a specific geographical, political, or cultural region.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Objects :-&lt;/strong&gt; This class consists of static utility methods for operating on objects.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Random :-&lt;/strong&gt; An instance of this class is used to generate a stream of pseudorandom numbers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scanner :-&lt;/strong&gt; A simple text scanner which can parse primitive types and strings using regular expressions. &lt;em&gt;(&lt;a href="https://dev.to/ritvikdubey27/scanner-class-6ba"&gt;Read more&lt;/a&gt;)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;StringTokenizer :-&lt;/strong&gt; The string tokenizer class allows an application to break a string into tokens.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Timer :-&lt;/strong&gt; A facility for threads to schedule tasks for future execution in a background thread.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TimerTask :-&lt;/strong&gt; A task that can be scheduled for one-time or repeated execution by a Timer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TreeMap :-&lt;/strong&gt; The TreeMap class A Red-Black tree based NavigableMap implementation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TreeSet :-&lt;/strong&gt; The TreeSet class A NavigableSet implementation based on a TreeMap.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources-
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/package-summary.html"&gt;Documentation&lt;/a&gt;&lt;/em&gt; ||&lt;br&gt;
&lt;em&gt;&lt;a href="https://www.hudatutorials.com/java/util/"&gt;Tutorial&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#okay-so-thats-enough-for-now"&gt;
  &lt;/a&gt;
  Okay so that's enough for now.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  &lt;em&gt;Thank you for reading.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#please-share-your-thoughts-about-it-and-correct-me-if-im-wrong"&gt;
  &lt;/a&gt;
  &lt;em&gt;Please share your thoughts about it and correct me if I'm wrong.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#i-hope-you-liked-it-and-found-it-helpful"&gt;
  &lt;/a&gt;
  &lt;em&gt;I hope you liked it and found it helpful.&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#cover-rajat-gour"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Cover:- &lt;a href="https://twitter.com/rajatgour20"&gt;Rajat Gour&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#connect-with-me-on-twitter-or-linkedin"&gt;
  &lt;/a&gt;
  &lt;em&gt;Connect with me on &lt;a href="https://twitter.com/ritvikdubey27?s=09"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/ritvik-dubey-3bbb22169"&gt;LinkedIn&lt;/a&gt;&lt;/em&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#my-personal-blog-blogritvikdubeycom"&gt;
  &lt;/a&gt;
  &lt;em&gt;My personal blog &lt;a href="https://blog.ritvikdubey.com/"&gt;blog.ritvikdubey.com&lt;/a&gt;&lt;/em&gt;
&lt;/h4&gt;

</description>
      <category>java</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Join us On telegram || Formal</title>
      <author>SHUBHAM </author>
      <pubDate>Sun, 12 Sep 2021 10:25:44 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/join-us-on-telegram-formal-2inh</link>
      <guid>https://dev.to/shubham_ingale/join-us-on-telegram-formal-2inh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QBaq7IX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fjqak3e9uy166vzjl80.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QBaq7IX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8fjqak3e9uy166vzjl80.jpg" alt="logo of channel"&gt;&lt;/a&gt;&lt;br&gt;
Hey there we have created a channel where we will building the app with javascript.&lt;br&gt;
If you're interested you should join us and get the alert of every new project created by us.&lt;br&gt;
Join link : &lt;a href="https://telegram.me/FORMALapps"&gt;https://telegram.me/FORMALapps&lt;/a&gt;&lt;br&gt;
Thanks,&lt;br&gt;
Shubham&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What is BEP2 Network? + Introducing the best Bainance chain Tokens</title>
      <author>leon</author>
      <pubDate>Sun, 12 Sep 2021 10:23:22 +0000</pubDate>
      <link>https://dev.to/leondev/what-is-bep2-network-introducing-the-best-bainance-chain-tokens-gel</link>
      <guid>https://dev.to/leondev/what-is-bep2-network-introducing-the-best-bainance-chain-tokens-gel</guid>
      <description>&lt;p&gt;What is the BEP2 network in Baineschin and what is its use? What is the difference between BEP2 and BEP20 networks?&lt;/p&gt;

&lt;p&gt;One of the main features of cryptocurrencies is various blockchain network updates that lead to more users and popularity. Developers are always trying to improve the blockchain situation by making changes to the cryptocurrency transmission network, in which Bainance Exchange has the largest share.&lt;/p&gt;

&lt;p&gt;In this article, we will get acquainted with one of the new and popular networks in the field of blockchain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-bep2-network"&gt;
  &lt;/a&gt;
  Definition of BEP-2 network
&lt;/h2&gt;

&lt;p&gt;It is safe to say that Bainance Exchange is one of the best in terms of providing services in the field of blockchain. The innovations made in this exchange every day create different conditions in the field of cryptocurrency. In the latest efforts of this exchange to provide better services, the new BEP2 network has been introduced.&lt;/p&gt;

&lt;p&gt;BEP2 stands for Binance Chain Evolution Proposal2, a technical standard for creating and using new tokens in Binance Chain. The purpose of BEP2 is to establish a set of specific rules for the operation of tokens in the Binance Chain platform.&lt;/p&gt;

&lt;p&gt;The performance of BEP2 is very similar to the famous Atrium network, ERC20.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bep2-network-features"&gt;
  &lt;/a&gt;
  BEP2 Network Features
&lt;/h2&gt;

&lt;p&gt;There are a number of unique features in this network that set it apart from other blockchain networks. In this section, we mention some of these features:&lt;/p&gt;

&lt;p&gt;. Source address where the source address of the token owner is issued.&lt;/p&gt;

&lt;p&gt;. Token name&lt;/p&gt;

&lt;p&gt;. Token symbol recently introduced on the network.&lt;/p&gt;

&lt;p&gt;. The sum of all the tokens provided in the network&lt;/p&gt;

&lt;p&gt;Coins supported in the BEP2 network&lt;br&gt;
Due to the high transfer speed and reasonable fee of BEP2 network, many popular coins in this network can be traded. Almost all world famous cryptocurrencies including Bitcoin, Atrium and even Stable Coin Tetra can be transferred in this network. This is a proof that the network is trustworthy in conducting transactions in the field of cryptocurrency. One of the most popular of these is Ramzarz Cardano. In addition to its independent ADA blockchain network, Cardano can also be ported through the BEP2 network.&lt;/p&gt;

&lt;p&gt;BNB ciphers are also one of the main transfer hubs in this network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bep2-network-supported-wallets"&gt;
  &lt;/a&gt;
  BEP2 network supported wallets
&lt;/h2&gt;

&lt;p&gt;In the field of hardware wallets, two versions of Ledger Nano X and Ledger Nano S currently support this network.&lt;/p&gt;

&lt;p&gt;Almost all popular software wallets on the market also support this network, such as the Walt Trust Wallet and the Atomic Wallet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deposit-and-withdrawal-in-bep2-network"&gt;
  &lt;/a&gt;
  Deposit and withdrawal in BEP2 network
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, there are many similarities between the BEP-2 and ERC-20 networks. One of these similarities is how to deposit and withdraw through this network. As with ERC20, you must have some BNB ciphers in your wallet to deposit and withdraw on BEP2.&lt;/p&gt;

&lt;p&gt;The network's native asset is the BNB (Binance Chain) cryptocurrency, which is used to pay fees on the network. You can easily transfer tokens supported by the BNB network via BEP2.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-erc20-and-bep2"&gt;
  &lt;/a&gt;
  Difference between ERC20 and BEP2
&lt;/h2&gt;

&lt;p&gt;The main difference between the two networks is in the type of addresses.&lt;/p&gt;

&lt;p&gt;Addresses used in the ERC20 network start with the prefix 0x but in the BEP2 network, as mentioned above, will start with the prefix bnb.&lt;/p&gt;

&lt;p&gt;Another difference is that you often need a tag or MEMO in your wallet to deposit and withdraw on the BEP2 network, while for ERC20 tokens just having a wallet address is enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-bep2-and-bep20-networks"&gt;
  &lt;/a&gt;
  Difference between BEP2 and BEP20 networks
&lt;/h2&gt;

&lt;p&gt;Another innovation in Binance Exchange was the introduction of Binance Smart Chain (BSC). The purpose of this network was to implement smart contracts in the blockchain network and decentralize activities.&lt;/p&gt;

&lt;p&gt;The BSC network is a complement to the BNB network, both of which are used in the Bainance ecosystem, with the difference that their functions are different from each other.&lt;/p&gt;

&lt;p&gt;So you can't use the BEP2 network to transfer passwords for smart contracts, but under the same conditions, ie transfer to wallets, you can use both networks to your advantage.&lt;/p&gt;

&lt;p&gt;Another difference similar to ERC20 is that there is no need for a tag or MEMO in BEP20 addresses.&lt;/p&gt;

&lt;p&gt;The summary of the difference between deposit and withdrawal of tokens in all three networks ERC20, BEP20 and BEP2 is as follows:&lt;/p&gt;

&lt;p&gt;. ERC20 is an atrium blockchain whose addresses start with 0x.&lt;/p&gt;

&lt;p&gt;. BEP2 is a BNB blockchain whose addresses start with bnb and often requires a tag or MEMO in the wallet.&lt;/p&gt;

&lt;p&gt;. BEP20 is a BSC blockchain whose addresses start with 0x like Atrium, but its network is different from the ERC20 standard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;There are many networks for transferring digital assets with different fees and conditions. But which network is more suitable for you depends on factors such as your wallet and even the exchange in which you trade.&lt;/p&gt;

&lt;p&gt;The BEP2 network has convenient features among several transmission networks to facilitate this.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Time Functionality In Python</title>
      <author>Dennis O'Keeffe</author>
      <pubDate>Sun, 12 Sep 2021 10:15:10 +0000</pubDate>
      <link>https://dev.to/okeeffed/time-functionality-in-python-e55</link>
      <guid>https://dev.to/okeeffed/time-functionality-in-python-e55</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;I write content for AWS, Kubernetes, Python, JavaScript and more. To view all the latest content, be sure to &lt;a href="https://blog.dennisokeeffe.com"&gt;visit my blog&lt;/a&gt; and subscribe to my newsletter. &lt;a href="https://twitter.com/dennisokeeffe92"&gt;Follow me on Twitter&lt;/a&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is Day 18 of the #100DaysOfPython challenge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post will use the &lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module from Python's standard library to explore how we can work with different time capabilities such as getting the local time and sleeping within a program.&lt;/p&gt;

&lt;p&gt;All of the code used in this post can be found in my &lt;a href="https://github.com/okeeffed/hello-python-time-module"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Familiarity with &lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;. See &lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;here&lt;/a&gt; for my post on Pipenv.&lt;/li&gt;
&lt;li&gt;Familiarity with &lt;a href="https://ipython.org/"&gt;iPython&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Let's create the &lt;code&gt;hello-python-time-module&lt;/code&gt; directory and install Pillow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight r"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Make the `hello-python-time-module` directory&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="c1"&gt;# Init the virtual environment&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this stage, we are ready to explore using the &lt;code&gt;time&lt;/code&gt; module using &lt;code&gt;iPython&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To do so, run &lt;code&gt;pipenv run ipython&lt;/code&gt; from the command line to open up the REPL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#importing-the-module"&gt;
  &lt;/a&gt;
  Importing the module
&lt;/h2&gt;

&lt;p&gt;First off, we will want to import the &lt;code&gt;time&lt;/code&gt; module. We can do so from within the REPL with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once imported, we can check that we have access to the &lt;code&gt;time&lt;/code&gt; module by checking the &lt;code&gt;__name__&lt;/code&gt; attribute and playing around with a few methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="c1"&gt;# 'time'
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# 1628200068.664737
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The method &lt;code&gt;time&lt;/code&gt; that we called on the module returns the time in seconds since the epoch as a floating point number.&lt;/p&gt;

&lt;p&gt;On most systems, the epoch is January 1st, 1970 at midnight. This is currently referred to as Unix time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-local-time"&gt;
  &lt;/a&gt;
  Getting the local time
&lt;/h2&gt;

&lt;p&gt;We can also use the time module to get the local or GM time, as well as format the time to a more readable format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2021, tm_mon=8, tm_mday=6, tm_hour=7, tm_min=46, tm_sec=20, tm_wday=4, tm_yday=218, tm_isdst=0)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gmtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2021, tm_mon=8, tm_mday=5, tm_hour=21, tm_min=46, tm_sec=32, tm_wday=3, tm_yday=217, tm_isdst=0)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;# 'Fri Aug  6 07:51:53 2021'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#formatting-and-parsing"&gt;
  &lt;/a&gt;
  Formatting and parsing
&lt;/h2&gt;

&lt;p&gt;We have control over how we format and parse time with the &lt;a href="https://docs.python.org/3/library/time.html#time.strftime"&gt;&lt;code&gt;strftime&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://docs.python.org/3/library/time.html#time.strptime"&gt;&lt;code&gt;strptime&lt;/code&gt;&lt;/a&gt; functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"30 Nov 00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# time.struct_time(tm_year=2000, tm_mon=11, tm_mday=30, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=335, tm_isdst=-1)
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%m/%d/%Y, %H:%M:%S"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# '08/06/2021, 07:56:44'
&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"30 Nov 00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%d %b %y"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# '30 Nov 00'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sleep"&gt;
  &lt;/a&gt;
  Sleep
&lt;/h2&gt;

&lt;p&gt;We can use the time module to set a timer and sleep for a certain amount of time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# notice that the REPL does not return until 5 seconds have passed
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This can be useful when looping through intervals based on conditional logic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-times"&gt;
  &lt;/a&gt;
  Comparing times
&lt;/h2&gt;

&lt;p&gt;We can use the &lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module to compare times by converting &lt;code&gt;time&lt;/code&gt; objects to &lt;code&gt;datetime&lt;/code&gt; objects.&lt;/p&gt;

&lt;p&gt;We need to do so with the &lt;code&gt;datetime.datetime.fromtimestamp&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="c1"&gt;# Check time now is less than 1 second later
&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# True
# Check time now is after 1 second before
&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# False
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more examples of &lt;code&gt;datetime&lt;/code&gt; comparisons, see my post on &lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-04-datetime-in-python"&gt;Datetime In Python&lt;/a&gt; and more from my series &lt;a href="https://blog.dennisokeeffe.com/blog/series/working-with-dates-and-times-in-python"&gt;Working with dates and times in Python&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Today's post demonstrates some usages of the &lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module from Python's standard library.&lt;/p&gt;

&lt;p&gt;We covered a number of the standard methods and finished with an example on how to compare using the &lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-and-further-reading"&gt;
  &lt;/a&gt;
  Resources and further reading
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2020-07-04-abcs-of-pipenv"&gt;The ABCs of Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/datetime.html"&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/time.html"&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-04-datetime-in-python"&gt;Datetime In Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.dennisokeeffe.com/blog/series/working-with-dates-and-times-in-python"&gt;Series: Working with dates and times in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ipython.org/"&gt;iPython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okeeffed/hello-python-time-module"&gt;GitHub repository with final code&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Photo credit: &lt;a href="https://unsplash.com/@pawel_czerwinski"&gt;&lt;code&gt;pawel_czerwinski&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on my &lt;a href="https://blog.dennisokeeffe.com/blog/2021-08-06-time-functionality-in-python"&gt;blog&lt;/a&gt;. To see new posts without delay, read the posts there and subscribe to my newsletter.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>100daysofpython</category>
    </item>
    <item>
      <title>Binance Clone Script- a guide to provide a platform like binance for entrepreneurs</title>
      <author>giovani</author>
      <pubDate>Sun, 12 Sep 2021 10:06:33 +0000</pubDate>
      <link>https://dev.to/giovanidev/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-2d0a</link>
      <guid>https://dev.to/giovanidev/binance-clone-script-a-guide-to-provide-a-platform-like-binance-for-entrepreneurs-2d0a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#clone-script"&gt;
  &lt;/a&gt;
  Clone script
&lt;/h2&gt;

&lt;p&gt;Clone script is a tested architecture of the existing app that we can use to develop your customized software. With the help of &lt;strong&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance clone script&lt;/a&gt;&lt;/strong&gt; you will be able to launch your exchange platform with all the binance features, but you can add the extra features that you want to the platform and build your customized website. Binance clone script, enables the customers to trade directly in a p2p method. With binance clone script you can develop a hassle-free, user-friendly and secure website like Binance in a short time. Stay with us to read about the Binance clone script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" alt="binance clone  script"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-binance-clone-script"&gt;
  &lt;/a&gt;
  What is Binance clone script?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency is being more and more accepted by people day by day. A large value of assets are being traded every day and a significant amount of the trading traffic belongs to the Binance exchange. It shows that Binance is popular among traders because of its high security, low transaction fees, and some other advanced features that it has. Binance is a successful, reliable, and secure cryptocurrency exchange platform. This company was founded in 2017 and climbed up the stairs of success so fast as its revenue in 2020 was about $800 M. Based on the reports its &lt;br&gt;
Website Visits was about 251.3 m on May 2021.        This company was established in China in Sep 2017. Binance is a marketplace that supports the exchange of coins like bitcoin, litecoin, ethereum, and more. Traders use Binance to do different tasks on the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-premium-features-of-binance-that-cause-people-to-choose-binance-exchange"&gt;
  &lt;/a&gt;
  The premium features of binance that cause people to choose binance exchange:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Low fees&lt;/strong&gt;: Binance is one of the exchange websites that costs lower transaction fees than its competitors. Binance charges a fee of 0.1% for transactions.&lt;br&gt;
&lt;strong&gt;Accepts new cryptocurrencies:&lt;/strong&gt; new cryptocurrencies can be added to the list on binance after the completion of the initial coin offerings.&lt;br&gt;
&lt;strong&gt;Bonuses and rewards:&lt;/strong&gt; traders will gain rewards such as free crypto coins. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-exchange"&gt;
  &lt;/a&gt;
  Features of binance exchange
&lt;/h2&gt;

&lt;p&gt;Multilingual support &lt;br&gt;
Live trade chart &lt;br&gt;
Referral program&lt;br&gt;
Powerful trade match engine &lt;br&gt;
Multicurrency support &lt;br&gt;
Perfect UI/UX design &lt;br&gt;
Different trading orders: market, limit , stop, and stop-limit order &lt;br&gt;
P2p trading&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app   &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ypmFeqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-app-1.svg" alt="binance clone app script"&gt;
&lt;/h2&gt;

&lt;p&gt;Binance clone app development is the process of creating a fast performing, trading mobile app compatible with ios or android, with similar features to Binance app. Nowadays that each person has a personal smartphone, you can see that they do almost every task via their smartphones. So developing a binance clone app will enable clients to trade anywhere and easily through their smartphones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-app"&gt;
  &lt;/a&gt;
  Features of binance clone app
&lt;/h3&gt;

&lt;p&gt;• Compatible with IOS and android &lt;br&gt;
• Pin lock features &lt;br&gt;
• Multilingual support &lt;br&gt;
• Real time updates of the assets’ value&lt;br&gt;
• Transaction history &lt;br&gt;
• Live chat&lt;br&gt;
• Faster chat&lt;br&gt;
• Trading orders&lt;br&gt;
• Referral bonuses&lt;br&gt;
• Instant buying and selling &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Features of binance clone script
&lt;/h3&gt;

&lt;p&gt;• Liquid swap &lt;br&gt;
• Smartchain&lt;br&gt;
• Trust wallet integration&lt;br&gt;
• DEX development &lt;br&gt;
• Launchpad&lt;br&gt;
• Launchpool staking &lt;br&gt;
• Bonous and rewards &lt;br&gt;
• Token listing &lt;br&gt;
• Low transaction fee&lt;br&gt;
• Matching trade &lt;br&gt;
• Multi payment method&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" alt="white label binance clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-a-white-label-binance-clone-script"&gt;
  &lt;/a&gt;
  Benefits of using a white label binance clone script
&lt;/h2&gt;

&lt;p&gt;1.White label crypto exchange platform&lt;br&gt;
reduces the development time and energy needed to develop a website or write script from scratch&lt;br&gt;
2.The white label binance clone script is a pre-made script which doesn’t need that much money to develop a software from zero.&lt;br&gt;
3.The clone scripts have the high success rate because these scripts are powerful. The fact that some other successful websites are using this script and they are working properly are a testament to the good performance of these scripts.&lt;br&gt;
4.Various altcoins are available in this exchange platform. The exchange supports hundreds of cryptocurrency coins and tokens.&lt;br&gt;
5.It is completely customizable, if you want to add some additional features to white label binance clone script it’s possible. &lt;br&gt;
6.It is a bug-free and hassle-free platform and you will not face new problems during the process of deployment. And you can be sure that the platform will work properly because the script is working on other websites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-binance-clone-script-feature-for-users-and-admin"&gt;
  &lt;/a&gt;
  White label binance clone script feature for users and admin
&lt;/h2&gt;

&lt;p&gt;White label binance clone script is a ready-made cryptocurrency exchange clone script of a successful exchange platform named binance. Like other clones, it holds all the features of binance platform. Binance white label clone is completely tested. By using a white label clone script you can start your branding faster. And catch the attention of traders to your exchange platform.&lt;/p&gt;

&lt;p&gt;Also, it will help you to enter the market sooner than developing a website from scratch.&lt;br&gt;
Here is the list of the features the white label Binance clone script offers to its users:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin:&lt;/strong&gt;&lt;br&gt;
List tokens and crypto pairs as available trading pairs.&lt;br&gt;
Enable number of liquidity APIs based on the market changes.&lt;br&gt;
Trading fee and withdrawal fee on exchange can be updated any time.&lt;br&gt;
Admin URL  login is available with the http access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt;&lt;br&gt;
The trading order only will be placed after the 2fa and sms  verification.&lt;br&gt;
IP address verification to disable multiple logins&lt;br&gt;
Transaction history &lt;br&gt;
User friendly User dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-start-a-website-like-binance"&gt;
  &lt;/a&gt;
  Why should you start a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Brand reputation &lt;br&gt;
Potential customer &lt;br&gt;
High amount of transactions&lt;br&gt;
High market cap for users &lt;br&gt;
Users can learn and earn&lt;br&gt;
 the clone script is a replica of a famous website that exist before , which is an assurance that there is already a “demand” for that website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Security features of Binance clone script
&lt;/h2&gt;

&lt;p&gt;• Email verification &lt;br&gt;
• Users authentication &lt;br&gt;
• Two factor authentication &lt;br&gt;
• Multi sig wallet integration&lt;br&gt;
• Secure cold wallet storage &lt;br&gt;
• Registry lock&lt;br&gt;
• SMS verifications&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-buy-bitcoin-on-the-binance-platform"&gt;
  &lt;/a&gt;
  How to buy Bitcoin on the Binance platform?
&lt;/h3&gt;

&lt;p&gt;The user  must log in to the Binance account &lt;br&gt;
The user must choose the exchange interface either basic or advanced.&lt;br&gt;
Different types of cryptocurrencies such as BNB, USDT, BTC, and ETH are available that user has to select among them. &lt;br&gt;
After choosing the desired bitcoins user must choose the coin that wants to exchange with&lt;br&gt;
As a result, a trading graph will appear for the user that shows how coins are being exchanged with each other. &lt;br&gt;
The user can set conditions for the order types such as limit order, stop-limit order, and more.&lt;br&gt;
The number of coins to be traded can be specified by the user.&lt;br&gt;
 Binance DEX clone script &lt;br&gt;
In the DEX Binance clone script, there is no need for a central authority to control the trade.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-dex-clone-script"&gt;
  &lt;/a&gt;
  Features of Binance DEX Clone Script
&lt;/h2&gt;

&lt;p&gt;Decentralized Order Book&lt;/p&gt;

&lt;p&gt;150+ Cryptocurrencies Support&lt;/p&gt;

&lt;p&gt;Instant Buy &amp;amp; Sell Bitcoins&lt;/p&gt;

&lt;p&gt;Two Factor authentication&lt;/p&gt;

&lt;p&gt;Crypto Wallet Support&lt;/p&gt;

&lt;p&gt;Fiat-Crypto Exchange&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" alt="clone a website like binance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-for-creating-a-successful-exchange-platform"&gt;
  &lt;/a&gt;
  Steps for creating a successful exchange platform
&lt;/h3&gt;

&lt;p&gt;You know that you can add extra features and customize your exchange website.so use this possibility in the best way you can for developing a user friendly and popular exchange website. &lt;/p&gt;

&lt;p&gt;Read and test all the Binance features&lt;br&gt;
Understand the weakness and strengths of the platform to improve the weakness.&lt;br&gt;
Try to add some extra features to the platform that are useful for users ( you can find these features by asking users opinions )&lt;br&gt;
Search the social Media and users’ feedback to understand the users’ opinions. The features that they like and some extra features that they prefer to be added to the platform understand are the things users don’t like about the platform and solve it in your exchange.&lt;br&gt;
Check your competitors’ websites. Provide new features and updates for your exchange platform users. &lt;br&gt;
Keep updating your security features of the website and the speed of the transaction because these two factors are so important in exchange platforms.&lt;br&gt;
Find a trustworthy company to clone a website like OKEx for you.&lt;br&gt;
Check out the other popular websites and figure out what features do they have that attract the traders.&lt;br&gt;
Think of some rewarding system to attract more users to the platform, like setting some prizes for the first transaction, welcoming prizes for registration, and some other ways.&lt;br&gt;
Add an educational part to the platform. And make it possible for traders to learn and gain. This factor may attract new traders because they are interested in learning about the crypto exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-best-company-to-develop-a-website-like-binance"&gt;
  &lt;/a&gt;
  How to choose the best company to develop a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Support Period.&lt;br&gt;
Customization Option.&lt;br&gt;
Data Backup.&lt;br&gt;
100% Source Code.&lt;br&gt;
Maintenance Cost.&lt;br&gt;
Free Addons&lt;br&gt;
Their customers feed backs&lt;br&gt;
We recommend you request binance clone script from your chosen company before purchasing the script.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>startup</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>How to Reduce Javascript Libraries Loading Time: Best Practice</title>
      <author>Syed Saadullah Shah</author>
      <pubDate>Sun, 12 Sep 2021 09:33:48 +0000</pubDate>
      <link>https://dev.to/wpsyed/how-to-reduce-javascript-libraries-loading-time-best-practice-52f0</link>
      <guid>https://dev.to/wpsyed/how-to-reduce-javascript-libraries-loading-time-best-practice-52f0</guid>
      <description>&lt;p&gt;In this article I’ll explain how to reduce the loading time of Javascript libraries using Auto-Loading, a public but almost unknown new feature of the Google’s AJAX APIs. It may looks a bit tricky, but with some patience won’t be so hard. Anyway, even Google in its official documentation says “This advanced feature can be difficult to implement, depending on the exact situation. Therefore, we recommend that auto-loading only be considered in specific cases when a reduction in latency is crucial.”&lt;/p&gt;

&lt;p&gt;Well, crucial or not I think any kind of websites, from an home-made blog to a critical company’s website, will enjoy shorter loading time.&lt;/p&gt;

&lt;h2&gt;Let’s start&lt;/h2&gt;

&lt;p&gt;Let’s say in our website we use &lt;em&gt;jQuery&lt;/em&gt; and &lt;em&gt;Google Map API&lt;/em&gt;. Normally our code looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
&amp;lt;!-- jQuery 1.3.2 --&amp;gt;
&amp;lt;script type="text/javascript" 
      src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;!-- Google Map API V3 --&amp;gt;
&amp;lt;script type="text/javascript" 
     src="http://maps.google.com/maps/api/js?sensor=false"&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could also write the same like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
  &amp;lt;!-- Google's AJAX APIs --&amp;gt;
  &amp;lt;script type="text/javascript" src="http://www.google.com/jsapi"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script type="text/javascript"&amp;gt;
    google.load("maps", "3",  {other_params:"sensor=false"});
    google.load("jquery", "1.3.2");
  &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok. These are both good ways, but our aim is to reduce loading time as best as possible. This means that &lt;strong&gt;everything&lt;/strong&gt; has to be loaded with a single call. Just one call for ALL our needed libraries.&lt;/p&gt;

&lt;h2&gt;Using the Auto-Loading feature&lt;/h2&gt;

&lt;p&gt;First of all we have to write a small configuration script to let Google know what libraries we need. Depending on your need it could be a bit tricky. &lt;strong&gt;Fortunately&lt;/strong&gt; Google gives a free configuration wizard, but &lt;strong&gt;unfortunately&lt;/strong&gt; it currently supports only some main Google libraries, and no external one. For example there’s no jQuery. Too bad. This means we have to write our configuration script by hand. At least it helps us to understand better how thing works.&lt;/p&gt;

&lt;p&gt;Ok, as wrote above in this example we use jQuery and Google Map API, so here is what our configuration script looks like:&lt;/p&gt;

&lt;pre&gt;{
“modules” : [
{
"name" : "jquery",
"version" : "1.3.2"
},
{
"name" : "maps",
"version" : "3",
other_params:"sensor=false"
}
]
}&lt;/pre&gt;

&lt;p&gt;Quite self-explanatory. We are saying we need two modules, the first one is jQuery version 1.3.2, the second one is Google Map API version 3 (note: the &lt;em&gt;sensor&lt;/em&gt; parameter is mandatory, so we must declare it, even if false).&lt;/p&gt;

&lt;p&gt;Good, now we have to compress it:&lt;/p&gt;

&lt;pre&gt;{”modules”:[{"name":"jquery","version":"1.3.2"},
{"name":"maps","version":"3",other_params:"sensor=false"}]}&lt;/pre&gt;

&lt;p&gt;Due to formatting you see the code splitted in two line, &lt;strong&gt;but please consider everything must be on one single line&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we have to URL encode it: (you can use any free service, like this one)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%7B%22modules%22%3A%5B%7B%22name%22%3A%22jquery%22%2C%22version
%22%3A%221.3.2%22%7D%2C%7B%22name%22%3A%22maps%22%2C%22version%22%3A%223%22%2
Cother_params%3A%22sensor%3Dfalse%22%7D%5D%7D&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And finally we can add this very long string to our HTML:&amp;lt;script type=”text/javascript” src=”http://www.google.com/jsapi?autoload=%7B%22modules&lt;br&gt;%22%3A%5B%7B%22name%22%3A%22jquery%22%2C%22version%22%3A%221.3.2%22%7D%2C%7B%22name&lt;br&gt;%22%3A%22maps%22%2C%22version%22%3A%223%22%2&lt;br&gt;Cother_params%3A%22sensor%3Dfalse%22%7D%5D%7D”&amp;gt;&lt;/p&gt;

&lt;p&gt;Done! If now we load our webpage everything will be there, jQuery and Google Map API, with only one call, as fast as possible. And obviously in the configuration script &lt;em&gt;we can add as many libraries as we need&lt;/em&gt;, at the end will always be a single call in our HTML. How cool is that?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wpsyed.com"&gt;Read more about reducing JS libraries load time&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Any mistake?&lt;/h2&gt;

&lt;p&gt;To trap any mistake in the configuration script, we can take a look at the Google’s response, it will tell us&lt;em&gt;“Error: Invalid autoload”&lt;/em&gt;. It can be tracked with the Firefox’s Error Console, or simply go to the url and see its content, if there’s something like &lt;strong&gt;&lt;em&gt;&lt;code&gt;var error = new Error("Invalid autoload.");&lt;/code&gt;&lt;/em&gt; &lt;/strong&gt;it means you have done some mistake in the configuration script.&lt;/p&gt;

&lt;h2&gt;Going Forward&lt;/h2&gt;

&lt;p&gt;What if we go forward to the initial aim of the Auto-Loading feature? Can we use it for more then reduce our website loading time? Maybe yes…&lt;/p&gt;

&lt;p&gt;Think this scenario. A complex website where there’s only one main global javascript loading script (’cause we don’t want to handle tens or hundreds loading scripts spread in every single HTML file! &lt;/p&gt;

&lt;p&gt;We want / need one single entry point, easy to maintain, easy to update). Every page called need different libraries. One jQuery, another one the Feed API, another one jQuery + Google Map API + Language API to provide a translation service to our end users. &lt;/p&gt;

&lt;p&gt;It could be a little hell.. (think this in a very complex web application). We could use the Auto-Loading feature to simply our life. We can add some custom metatags to each HTML file with informations about which Javascript library it needs to run, and build runtime a dynamic configuration script to load everything needed!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>jslibraries</category>
      <category>loadingtime</category>
    </item>
    <item>
      <title>Easter eggs using Rooks</title>
      <author>Anish De</author>
      <pubDate>Sun, 12 Sep 2021 09:05:00 +0000</pubDate>
      <link>https://dev.to/anishde12020/easter-eggs-using-rooks-4mhp</link>
      <guid>https://dev.to/anishde12020/easter-eggs-using-rooks-4mhp</guid>
      <description>&lt;p&gt;I stumbled upon this great React Hooks library called &lt;a href="https://react-hooks.org/"&gt;Rooks&lt;/a&gt; recently and it has got a lot to offer. We all have discovered various Easter eggs in various apps and sites. It can range anywhere from stumbling upon a Rick-roll when you click a button a certain number of times or enjoying playing snake when you press a hidden button on a 404 page. &lt;/p&gt;

&lt;p&gt;Ok, so let us start making an Easter egg 🥚&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-alert-when-you-press-a-certain-key-combination"&gt;
  &lt;/a&gt;
  An alert when you press a certain key combination
&lt;/h3&gt;

&lt;p&gt;Rooks provides us with a very useful &lt;a href="https://react-hooks.org/docs/useKeys"&gt;useKeys hook&lt;/a&gt;. With this, we can trigger an action whenever a certain key combination is pressed. For this example whenever the keys Q, W, E, R, T, and Y are pressed, all together, an alert will be triggered saying the key combination was pressed. This is a simple example and hence a great place to start&lt;/p&gt;

&lt;p&gt;Firstly we need to create a react project (you can use Gatsby, NextJS, etc as well as long as it is React). I am using &lt;a href="https://codesandbox.io/"&gt;Codesandbox&lt;/a&gt; for this tutorial but you can do it locally as well. &lt;/p&gt;

&lt;p&gt;Now we need to install rooks so we can run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i - s rooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can following the &lt;a href="https://react-hooks.org/docs/getting-started/"&gt;getting started guide&lt;/a&gt; for rooks.&lt;/p&gt;

&lt;p&gt;Now let us see the code&lt;/p&gt;

&lt;p&gt;Firstly, we need to import the hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useKeys&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to configure the hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useKeys&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyQ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyT&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;KeyY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;QWERTY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the first parameter is an array of all the keys that need to be pressed. We pass in a callback function which will be triggered if all the keys are pressed as the second parameter. &lt;/p&gt;

&lt;p&gt;Now whenever the 6 keys are pressed together, we will see this alert - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veLdR35G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631436265132/OOazJ3pmE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veLdR35G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631436265132/OOazJ3pmE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codesandbox - &lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/weathered-wave-gy3s3"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now we have successfully made our first Easter egg 🥳!!!&lt;/p&gt;

&lt;p&gt;Now it is time for you to explore other &lt;a href="https://react-hooks.org/docs/hooks-list/"&gt;hooks&lt;/a&gt; and come up with some great Easter eggs for your site.&lt;/p&gt;

&lt;p&gt;Feel free to share your creations down in the comments section.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Associative links</title>
      <author>Ivan S Glazunov</author>
      <pubDate>Sun, 12 Sep 2021 08:52:42 +0000</pubDate>
      <link>https://dev.to/deepfoundation/associative-links-4cda</link>
      <guid>https://dev.to/deepfoundation/associative-links-4cda</guid>
      <description>&lt;p&gt;What is the ideal "quantum of information" or "minimal unit of meaning" and why to ask such a question? There is a lot of pain associated with this, often not even realized. We offer a solution, but first you need to figure out what it is for. We recommend you to read &lt;a href="https://dev.to/deepfoundation/refactoring-factor-bo2"&gt;the first article in a series&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#retrospective"&gt;
  &lt;/a&gt;
  Retrospective
&lt;/h3&gt;

&lt;p&gt;Relational tables, document oriented databases, jsonb stores ... We often use the model in the table/collection as the minimum unit of meaning. The model consists of columns/fields with a different structure, and reflects some real object or abstract concept defined by the author.&lt;/p&gt;

&lt;p&gt;This approach creates problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lots of address spaces. (If you do not see it as a problem, then soon where will be an article exclusively on this topic, and you will see why this problem is real).&lt;/li&gt;
&lt;li&gt;Many control points of the data structure that are expensive to change.&lt;/li&gt;
&lt;li&gt;Compatibility only at the level defined by the author.&lt;/li&gt;
&lt;li&gt;Failure to fully describe something new without creating another table/collection.&lt;/li&gt;
&lt;li&gt;The inability to separate objects from the relationships between them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these problems are addressed in the Deep.Case associative model of data.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in optimization or search by ranges in a graph, there will be a link here to that article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#lets-dig-into-it"&gt;
  &lt;/a&gt;
  Let's dig into it
&lt;/h3&gt;

&lt;p&gt;Deep.Case operates with the Link concept as a minimal unit of meaning / quantum of information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links-table"&gt;
  &lt;/a&gt;
  Links table
&lt;/h3&gt;

&lt;p&gt;Links (a network of links) is very similar to a graph, however, the graph has a division into nodes and edges referring only to nodes. Links do not divide these address spaces. This allows links to refer to links and carry any meaning that the author of the data models can put in them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhqCLIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oeh7bck6cl9n2lpaw7m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhqCLIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oeh7bck6cl9n2lpaw7m.png" alt="1"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-structure"&gt;
  &lt;/a&gt;
  Link structure
&lt;/h3&gt;

&lt;p&gt;The link structure consists of the required unique &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;type_id&lt;/code&gt; used as the type of this link. The optional &lt;code&gt;from_id&lt;/code&gt; and &lt;code&gt;to_id&lt;/code&gt; fields can only be specified together.&lt;/p&gt;

&lt;p&gt;Types for creating links are easily created by the user himself within the project model, or supplied with imported model packages.&lt;/p&gt;

&lt;p&gt;The specified &lt;code&gt;from_id&lt;/code&gt; and &lt;code&gt;to_id&lt;/code&gt; fields refer to other links. Any relationship can be described with such links.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vnP0_2aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dno18kod8ak5pwa7xnne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnP0_2aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dno18kod8ak5pwa7xnne.png" alt="2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#link-as-a-node"&gt;
  &lt;/a&gt;
  Link as a node
&lt;/h3&gt;

&lt;p&gt;You can leave &lt;code&gt;from_id&lt;/code&gt; and &lt;code&gt;to_id&lt;/code&gt; fields empty in links. Such links play the role of a node, a point, an object of relations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wCyOk0Tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t2a050ltzsefw17r6py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wCyOk0Tl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t2a050ltzsefw17r6py.png" alt="3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#link-as-a-link"&gt;
  &lt;/a&gt;
  Link as a link
&lt;/h3&gt;

&lt;p&gt;If &lt;code&gt;from_id&lt;/code&gt; and &lt;code&gt;to_id&lt;/code&gt; are specified, the link plays the role of a relationship between nodes or links. It can answer the question of how they are related using &lt;code&gt;type_id&lt;/code&gt;. The environment of a node with links can answer many questions about its meaning, relationships, purpose, value and state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lm19anTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v3nfk1qkx16h5dobpqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lm19anTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7v3nfk1qkx16h5dobpqz.png" alt="4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_in&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#unified-graphql-api"&gt;
  &lt;/a&gt;
  Unified GraphQL API
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;This API allows to do a lot of things, such as traversal to all children/parents in certain subtrees using index. But there will be separate articles about this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obviously, the structure of the link itself is available there, and also from a link you can go to other links both by its links (&lt;code&gt;from_id&lt;/code&gt; and &lt;code&gt;to_id&lt;/code&gt;) and by backwards references from other links (outgoing and incoming). For example, you can go to all links that refer to this link by &lt;code&gt;from_id&lt;/code&gt; (these links go from it) using relationship &lt;code&gt;out&lt;/code&gt;, or by &lt;code&gt;to_id&lt;/code&gt; (these links go to it) using relationship &lt;code&gt;in&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0ezsP2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adb1kvyuxl8xdhqmaftb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0ezsP2O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adb1kvyuxl8xdhqmaftb.png" alt="5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"out"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"in"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#sqllike-queries"&gt;
  &lt;/a&gt;
  SQL-like queries
&lt;/h3&gt;

&lt;p&gt;We can receive not only the data on the structures described above. We can use the sql-like &lt;code&gt;where&lt;/code&gt; predicate to perform a variety of complex filtering at each level.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"to"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"out"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"in"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"type_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"from_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"to_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#subscriptions"&gt;
  &lt;/a&gt;
  Subscriptions
&lt;/h3&gt;

&lt;p&gt;And all of this already with support for subscriptions. You can simply describe to which structure you want to subscribe - and you will receive updates on the results of your query in real-time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;subscription&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;type_id&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#support-associative-technologies"&gt;
  &lt;/a&gt;
  Support associative technologies
&lt;/h3&gt;

&lt;p&gt;We create a development environment (boxed CE / EE version and SaaS version), which allows you to use data storage for solving your business problems with the ability to adapt to any business changes using an associative approach. We will create a distributed network of server clusters in a single associative space, including so as not to think about regional legislation when creating a project. We create a culture of publishing reusable data models with their behavior.&lt;br&gt;
Join our community on &lt;a href="https://www.notion.so/ivansglazunov/Footer-179ca8489dac46adae6abdbc3845e1db#c4c7af0af2374c8b925fa0817ef4f7c5"&gt;Discord&lt;/a&gt;. Sign up for early access on our Waitlist or support us on &lt;a href="https://www.notion.so/ivansglazunov/Footer-179ca8489dac46adae6abdbc3845e1db#c4c7af0af2374c8b925fa0817ef4f7c5"&gt;Patreon&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://deep.foundation/?utm_source=dev&amp;amp;utm_medium=article&amp;amp;utm_content=article2"&gt;On our site&lt;/a&gt; you can find links to drafts of future articles in development, links to code sources, plans for project and product management and invest presentations.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>database</category>
      <category>datascience</category>
    </item>
  </channel>
</rss>
