<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best description on 3 Main Characteristics of Java Language (oop）</title>
      <author>Ricky_Ruan</author>
      <pubDate>Sat, 21 Aug 2021 06:22:00 +0000</pubDate>
      <link>https://dev.to/devide_r_conquer/3-main-characteristics-of-java-oop-language-class-2237</link>
      <guid>https://dev.to/devide_r_conquer/3-main-characteristics-of-java-oop-language-class-2237</guid>
      <description>&lt;h1&gt;
  &lt;a href="#three-main-features-of-oop-language"&gt;
  &lt;/a&gt;
  Three main features of OOP language.
&lt;/h1&gt;




&lt;p&gt;PREFACE:&lt;br&gt;
(you can just skip this section to Introduction XD )&lt;/p&gt;

&lt;p&gt;Okay, Java and cpp are the language that I learn from my school, though this summer I receive an email from my professor that we "had better" to have some expreience on C. (And I use fews week to be acquainted with this. OMG) &lt;/p&gt;

&lt;p&gt;And, we know those two languages are &lt;strong&gt;Object Oriented Programming&lt;/strong&gt; languages. So they have three features that are different from Procedure-Oriented Language (like C, so far I have learnt). &lt;/p&gt;

&lt;p&gt;Due to these three features have a high occurrence rate on interviews from many comps, I decide to summary my knowledge. &lt;/p&gt;

&lt;p&gt;This blog is based on the language of JAVA, and you should know there are still difference amoung all OOP languages. And in this blog I will try to use "my word" and my thinking to describe what they are and why they exist, how to use them. Please correct me if there is any wrong in my blog. Thank you!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Encapsulation&lt;/li&gt;
&lt;li&gt;Inheritance&lt;/li&gt;
&lt;li&gt;Polymorphism&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;
  &lt;a href="#encapsulation-what-why-how"&gt;
  &lt;/a&gt;
  Encapsulation: What Why How
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Defination (What):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Put the objects which have same features or, belongs to the same class together, and pack them well.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So you know in the company, there are lots of departments that led by different managers or supervisors. For example, we have &lt;code&gt;IT_Department&lt;/code&gt; class and &lt;code&gt;HR_Department&lt;/code&gt; class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HR_Department&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;Dep_Members&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;HR_Department&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// constructor of HR_Dep&lt;/span&gt;
        &lt;span class="nc"&gt;Manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;employ&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Our company need to employ a new employee."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dismissal&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"We decide to dismissal someone..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IT_Department&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;Dep_Members&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;IT_Department&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// constructor of IT_Dep&lt;/span&gt;
        &lt;span class="nc"&gt;Manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Access_Database&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Our IT Department can access database of our company."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Power_outage&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"IT Department decide to shut down the power for fixing problems."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Google_Inc&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;IT_Department&lt;/span&gt; &lt;span class="n"&gt;it_Dep&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;HR_Department&lt;/span&gt; &lt;span class="n"&gt;hr_Dep&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;Google_Inc&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;IT_Manager_Name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;HR_Manager_Name&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// constructor of Google_Inc&lt;/span&gt;
        &lt;span class="n"&gt;it_Dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;IT_Department&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IT_Manager_Name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;hr_Dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HR_Department&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HR_Manager_Name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Google Inc is established successfully!"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// set up a company call newGoogle_Inc XD&lt;/span&gt;
        &lt;span class="n"&gt;Google_Inc&lt;/span&gt; &lt;span class="n"&gt;google_Inc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Google_Inc&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Jack"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Rose"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are CEO of this company, you have to employ some managers to help you manage these different departments, and of course you require any department work in perfect order and help each other&lt;br&gt;
. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Significance (Why):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can easily imagine that, how messy this scenario would be if we didn't have access to every piece of data in any class.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I believe, you can't stand it when HR employee turns off the power without checking in with THE IT department.  (even I never work for any companys XD) It's dangerous and out of line anywhere.&lt;/p&gt;

&lt;p&gt;So the existance of Encapsulation shows its importance right now. The example of company is also suitable for any program's, code's, data's management. It's dangerous  while after you design a program, some of your users could access your data and edit them. &lt;/p&gt;

&lt;p&gt;So for Java, we usually "pack" our CLASS (data) well through using &lt;strong&gt;&lt;em&gt;Permission Modifier&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
   1.&lt;code&gt;public&lt;/code&gt;&lt;br&gt;
   2.&lt;code&gt;protected&lt;/code&gt; (default)&lt;br&gt;
   3.&lt;code&gt;private&lt;/code&gt; (most used to modify class and variable, as you can see on previous code block)&lt;/p&gt;

&lt;p&gt;Obviously, you can realize that, if you correctly use the &lt;br&gt;
permission modifier, you can realize the &lt;strong&gt;advantages&lt;/strong&gt; of your code:&lt;/p&gt;

&lt;p&gt;1.Isolate important variables(vars) or functions(funcs)&lt;br&gt;
2.Conveniently access vars or funcs&lt;br&gt;
3.Increase the importance&lt;br&gt;
4.Enhance the security&lt;/p&gt;

&lt;p&gt;And of course, these advantages also cause the code being much more harder to access and leading you spending more steps to access them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Implement of Encapsulation(HOW):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before using them, you need to know the range of different modified vars or funcs that could be accessed.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Modify&lt;/th&gt;
&lt;th&gt;Same class&lt;/th&gt;
&lt;th&gt;Same package&lt;/th&gt;
&lt;th&gt;Sub class&lt;/th&gt;
&lt;th&gt;All class&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;protected&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;In some way, &lt;code&gt;protected&lt;/code&gt; equals to default.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eg: You can not access manager name of HR department directly by assign &lt;code&gt;=&lt;/code&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3YSORiRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avjpflv118l1irlqv0ne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YSORiRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/avjpflv118l1irlqv0ne.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, you need to set up some functions called "Getters" and "Setters":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IT_Department&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;Dep_Members&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;IT_Department&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// constructor of IT_Dep&lt;/span&gt;
        &lt;span class="nc"&gt;Manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;manager_name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getManager&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt; &lt;span class="c1"&gt;// a classic getter function&lt;/span&gt;
        &lt;span class="c1"&gt;//return manager's name&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Manager&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setManager&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="c1"&gt;// a classic setter function&lt;/span&gt;
        &lt;span class="c1"&gt;//set name to manager's name&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Manager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Access_Database&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Our IT Department can access database of our company."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Power_outage&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"IT Department decide to shut down the power for fixing problems."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence, you can realize, the implement of encapsulation is abstract in code. We prefer to call encapsulation a phenomenon or a feature. If you have a clear and strict frame of code, your codes will look so GOOD and COMFORTABLE.&lt;/p&gt;

&lt;p&gt;In main function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// set up a company call newGoogle_Inc&lt;/span&gt;
        &lt;span class="n"&gt;Google_Inc&lt;/span&gt; &lt;span class="n"&gt;google_Inc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Google_Inc&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Jack"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Rose"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;google_Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;it_Dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getManager&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// assign "Jack" to name.&lt;/span&gt;
        &lt;span class="n"&gt;google_Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;it_Dep&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setManager&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ben"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// assign "Ben" to IT Department's manager&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#inheritance-w-w-h"&gt;
  &lt;/a&gt;
  Inheritance : W W H
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Defination (What):&lt;/strong&gt;&lt;br&gt;
Key word: &lt;code&gt;extend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When multiple classes have common attributes (member variables) and behavior (member methods), these common parts are extracted and defined in a public class. Other classes and classes can form an inheritance relationship with this public class, so that there is no need to redefine the public part in multiple classes! This common class is the parent class, also known as the superclass or base class, and the other classes are the subclasses. Subclasses can access non-private member variables of the parent class directly, and private member variables of the parent class can be accessed using the super.get() method.&lt;/p&gt;

&lt;p&gt;Now we have the codes at the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Toyota"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry Potter"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// son extends from his father&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Father&lt;/span&gt; &lt;span class="n"&gt;Howard_Stark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="n"&gt;Tony_Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seems like son has nothing. However, once the son extends from his father, Tony now could drive the car from his father and read the books, which his father "confer" to him.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Father&lt;/span&gt; &lt;span class="n"&gt;Howard_Stark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="n"&gt;Tony_Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: Toyota&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;books&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// output: Harry Potter&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some features that you should pay attention about the Inheritance in Java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Every sub class is prowerful than base class, which means sub class would have or cover more vars and funcs than father class has. (Of course, Iron man Tony is much more greater than his father Howard haha)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Even son extends from his father, son could not "change" the feature of his father. The reason why son could not change his father's feature is that, father and son are two independent instances of &lt;code&gt;class Son&lt;/code&gt; and &lt;code&gt;class Father&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Father&lt;/span&gt; &lt;span class="n"&gt;Howard_Stark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="n"&gt;Tony_Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mercedes"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//Tony changes his car to Mercedes, but could not change Howard's car.&lt;/span&gt;

        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Howard_Stark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: Toyota&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output: Mercedes&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence, what Tony has in the future does not Howard's business, including his Mark One and Mark Two. That's why son class is absolutely greater than father class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Toyota"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry Potter"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// son extends from his father&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;suit1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mark One"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;suit2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mark Two"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Java is single inheritance, not multiple inheritance (unlike C++). However, it is possible to build multi-level subclasses of inheritance.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Like Tony extends from Howard, Morgan Stark (Tony's daughter) extends from Tony, but Morgan could not extend from Howard and Tony at the same time.&lt;/p&gt;

&lt;p&gt;Tony_Stark &amp;lt;-(extends)-- Howard_Stark&lt;br&gt;
Morgan_Stark &amp;lt;-(extends)-- Tony_Stark&lt;/p&gt;

&lt;p&gt;Morgan_Stark &amp;lt;--X-- Howard_Stark, Tony_Stark &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Significance(Why):&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If a class want to get a same function from another class, it can set up an inheritance. (Save your time to coding, and increase the reusing rate of code)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.Encapsulation and inheritance are the prerequisites for polymorphism implementation.&lt;/p&gt;

&lt;p&gt;Of course, when you edit the feature of father class, the common features that the son has would be changed too, unless the son change these common features independently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Implementation(How):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is the best time to implement inheritance among classes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When those classes have many properties in common.&lt;/li&gt;
&lt;li&gt;When there are obviously relationship among those classes (like &lt;code&gt;class animals&lt;/code&gt; includes &lt;code&gt;class dog&lt;/code&gt; and &lt;code&gt;class cat&lt;/code&gt;, so &lt;code&gt;class cat&lt;/code&gt; and &lt;code&gt;class dog&lt;/code&gt; extends the proteries from &lt;code&gt;class animals&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After knowing when to use inheritance, you can try to build up the relationship and have a rough frame in your mind.&lt;/p&gt;

&lt;p&gt;I'm going to talk about the six points of inheritance.&lt;/p&gt;

&lt;p&gt;1.When construct an instance of sub class, the complier will invoke the constructor of base class first, and then invoke the constuctor of sub class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Toyota"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry Potter"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Father's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// son extends from his father&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;suit1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mark One"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;suit2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Mark Two"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Son's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="n"&gt;Tony_Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Father's constructor invoked&lt;br&gt;
Son's constructor invoked&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.&lt;code&gt;class Object&lt;/code&gt; is the father class of any class in JAVA.&lt;/p&gt;

&lt;p&gt;Hence, every instance (object) in Java is the polymorphism of instance of &lt;code&gt;class Object&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;3.The constructor of a subclass runs super () first, regardless of whether it has arguments or how many;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;super();&lt;/code&gt; equals to default constructor of father class. So you can either explicitly or implicitly call &lt;code&gt;super()&lt;/code&gt; in the any constructor of sub class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Toyota"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry Potter"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// where the super() is.&lt;/span&gt;
    &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Father's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// son extends from his father&lt;/span&gt;
    &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="c1"&gt;//super(); default&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Son's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;//super(); default&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.Properties that are private to the parent class are not directly accessible to the subclass in test.java, even if the subclass inherits them. &lt;/p&gt;

&lt;p&gt;You can specify the subclass's parameter-constructor only by calling the parent's parameter-constructor. For properties that are not private to the parent class, the child class object can invoke directly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Toyota"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Harry Potter"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;bank_account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"123456"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
    &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Father's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Father&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// son extends from his father&lt;/span&gt;

    &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="c1"&gt;//super(); default&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Son's constructor invoked"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Son&lt;/span&gt; &lt;span class="n"&gt;Tony_Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Son&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;Tony_Stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bank_account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"111111"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// error reported: 'bank_account' has private access in 'test.Father'!!!&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Due to the limitation of the paragraph, here are all my knowledge of Inheritance and, there will be more features' details in Polymorphism Section.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#polymorphism"&gt;
  &lt;/a&gt;
  Polymorphism:
&lt;/h3&gt;

&lt;p&gt;Finally, I begin to write about POLYMORPHISM section. This section needs me get much more familier with the core knowledge of &lt;em&gt;Three Main Features Of Java&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Inheritance maybe not the most popular in code, but the most important part of programming (at least, I think so XD).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. What is Polymorphism:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polymorphism is the implementation of an object having different manifestations.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For example, pressing the same button "ENTER" in different applications, computer will show up different reactions, like acting &lt;br&gt;
 "Line Feed" function in Word application, acting "Send" function after you type the text in chat box, etc. Just like invoking the same function, pressing "ENTER" button plays an different roles in different applications. This is also kind of Polymorphism.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Significance of Polymorphism :&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove coupling between classes&lt;/li&gt;
&lt;li&gt;Replaceability&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Working as interface (like a real &lt;code&gt;interface&lt;/code&gt; in Java)&lt;/li&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before describing all of its significance, there are hree necessary conditions for the existence of polymorphisms that you should know:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The implementance of inheritance: So you can see, the implementance of polymorphsm is also the implementance of &lt;/li&gt;
&lt;li&gt;Override&lt;/li&gt;
&lt;li&gt;An reference of father class points to an object of a sub class: &lt;code&gt;Parent p = new Child();&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we have classes in our program:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97neIZjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6env33zyq3ir8dfw7p1q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97neIZjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6env33zyq3ir8dfw7p1q.jpg" alt="2384ed46c6540cea9eb1415086bf8c89_2DAC601E-70D8-4B3C-86CC-7E4972FC2466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we have codes for these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="c1"&gt;// is overridden&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Circle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;//override function draw() of class Shape&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Circle.draw()"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Square&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;//override function draw() of class Shape&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Square.draw()"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Triangle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Shape&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;//override function draw() of class Shape&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Triangle.draw()"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a method is called in polymorphic mode, it is first checked to see if the method exists in the parent class. If it does not, a compile error occurs. If so, call the method of the same name in the subclass. The phenomenon of calling a function in a subclass with the same name as the one of father class, but showing different results is called Override.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PkYIkB87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krn1ru5f51j9apo77z74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PkYIkB87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/krn1ru5f51j9apo77z74.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to demonstrate these 6 advantages is to look at the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;// Abstraction&lt;/span&gt;
    &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;// Interface&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Eat fish."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;work&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Catch mouse."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dog&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Eat bone."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;work&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Guard."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;  &lt;span class="c1"&gt;// Invoke the show() through the object of class Cat&lt;/span&gt;
        &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Dog&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;  &lt;span class="c1"&gt;// Invoke the show() through the object of class Cat&lt;/span&gt;

        &lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// Upcasting&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;               &lt;span class="c1"&gt;// Invoke eat() of class Cat&lt;/span&gt;
        &lt;span class="nc"&gt;Cat&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;// Downcasting&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;work&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;        &lt;span class="c1"&gt;// Invoke work() of class Cat&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Animal&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="c1"&gt;// Judging the class type&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;// What a cat does&lt;/span&gt;
            &lt;span class="nc"&gt;Cat&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Cat&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;work&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nc"&gt;Dog&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// What a dog does&lt;/span&gt;
            &lt;span class="nc"&gt;Dog&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Dog&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;work&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you can see the output:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Eat fish.&lt;br&gt;
Catch mouse.&lt;br&gt;
Eat bone.&lt;br&gt;
Guard.&lt;br&gt;
Eat fish.&lt;br&gt;
Catch mouse.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3. How to implement Polymorphism:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Override: &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Override exists for polymorphisms.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We've already discussed method overrides, which are methods that can be overridden by a sub class.&lt;/p&gt;

&lt;p&gt;When a subclass object calls an overridden method, the method in the subclass is called, not the overridden method in the superclass.&lt;/p&gt;

&lt;p&gt;To call an overridden method in a parent class, you must use the &lt;code&gt;super&lt;/code&gt; keyword.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Interface&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Interfaces in Java are similar to interfaces in life, which are collections of method characteristics, but no method implementation. See the &lt;a href="https://www.tutorialspoint.com/java/java_interfaces.htm"&gt;Java Interfaces&lt;/a&gt; section for details.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Abstract classes and abstract functions (vitural function)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Virtual functions also exist for polymorphisms.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, the implementation of polymorphism is not only about the interation among classes. It also can be implemented by &lt;code&gt;abstract function()&lt;/code&gt; and &lt;code&gt;abstract class {}&lt;/code&gt;(like the vitural func() in c++). &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#last-but-not-least"&gt;
  &lt;/a&gt;
  Last but not least
&lt;/h3&gt;

&lt;p&gt;Those concepts of &lt;code&gt;abstract&lt;/code&gt; and &lt;code&gt;override&lt;/code&gt; could be written in another blogs. However, this blog is the first blog of mine, I hope I could get some feedbacks and advice from our members of DEV community, and then move forward again.&lt;/p&gt;

&lt;p&gt;Your advice and comments are the power of my moving forward. Thank you for your reading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Don't know how good you will be if you don't push yourself.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Ricky Ruan:&lt;/p&gt;

&lt;p&gt;E-mail: &lt;a href="mailto:yruan@umass.edu"&gt;yruan@umass.edu&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>oop</category>
      <category>beginners</category>
      <category>writing</category>
    </item>
    <item>
      <title>Flutter - Let's Share one to one Images on our chat app  (Final Part) || ChatApp #34</title>
      <author>Balram Rathore</author>
      <pubDate>Sat, 21 Aug 2021 05:50:02 +0000</pubDate>
      <link>https://dev.to/devstack06/flutter-let-s-share-one-to-one-images-on-our-chat-app-final-part-chatapp-34-55no</link>
      <guid>https://dev.to/devstack06/flutter-let-s-share-one-to-one-images-on-our-chat-app-final-part-chatapp-34-55no</guid>
      <description>&lt;p&gt;Wanted to know how to add a feature of one to one Image sharing in your chat app. Here is the new video on my WhatsApp clone Series using #Flutter #NodeJs #SocketIO.&lt;/p&gt;

&lt;p&gt;Link of &lt;a href="https://youtu.be/vqKX9Gu8df8"&gt;Video&lt;/a&gt;&lt;br&gt;
Playlist &lt;a href="https://youtube.com/playlist?list=PLtIU0BH0pkKovuEaNsrGE_Xd5Tz3m1zeC"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will help you understand the image sharing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2UMOuCa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1fojpdspaap6r5cvh4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2UMOuCa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j1fojpdspaap6r5cvh4e.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the some images of app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BvH7L3BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djwki2ctwws8sqb12m58.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BvH7L3BU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djwki2ctwws8sqb12m58.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRkzQp8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x866pcyb7qowv83m7747.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRkzQp8D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x866pcyb7qowv83m7747.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>javascript</category>
      <category>android</category>
    </item>
    <item>
      <title>A tour guide to React Ecosystem</title>
      <author>Menard Maranan</author>
      <pubDate>Sat, 21 Aug 2021 05:30:55 +0000</pubDate>
      <link>https://dev.to/menard_codes/a-tour-guide-to-react-ecosystem-hol</link>
      <guid>https://dev.to/menard_codes/a-tour-guide-to-react-ecosystem-hol</guid>
      <description>&lt;p&gt;ReactJS is a very popular front-end library for building UI components. That being said, React is actually what it says, a &lt;strong&gt;library for building UI components&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are many front-end features that React does not support by default (unlike Angular), thus we have to decide which tech to use on a specific task.&lt;/p&gt;

&lt;p&gt;As a result, we have to cherry-pick dependencies and Google things like &lt;em&gt;how to have multiple pages and routes in React&lt;/em&gt;, until we end up with tons of browser tabs open.&lt;/p&gt;

&lt;p&gt;So in this blog, I'll be talking about some of the common tech used alongside React (which I also use myself) to cutout your research and go straight to the topic or tech.&lt;/p&gt;

&lt;p&gt;If you're learning React, this blog can serve as a roadmap to guide you through the &lt;em&gt;ReactJS wilderness&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-react-ecosystem"&gt;
  &lt;/a&gt;
  The React Ecosystem
&lt;/h2&gt;

&lt;p&gt;Alright, so we will be tackling the common front-end tasks and the (popular) technologies used for such purposes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#state-management-redux"&gt;
  &lt;/a&gt;
  State Management: Redux
&lt;/h3&gt;

&lt;p&gt;Managing state is one of the most important aspects in React. And for this, I'll be talking about Redux.&lt;/p&gt;

&lt;p&gt;But isn't React have in-built support for handling state?&lt;/p&gt;

&lt;p&gt;Yes it is, and with hooks, we have useState, useContext, and useReducer. So why should we learn Redux then?&lt;/p&gt;

&lt;p&gt;There are many reasons and motivations why.&lt;/p&gt;

&lt;p&gt;Maybe you're opting to become a React dev. In that case, take note that hooks are just released a few years ago, while React and Redux are out in the wild a longer time before hooks. That means there are legacy codes that you may work with, and it's highly likely that they use Redux.&lt;/p&gt;

&lt;p&gt;Likewise, the in-built state management solutions by React are only ideal for smaller apps. Redux actually shines if the project is large. There are many benefits Redux brings to the table, like easy debugging, but I won't be talking much about those as this will get much longer.&lt;/p&gt;

&lt;p&gt;So in Redux, we have the following to keep in mind when managing state:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Actions&lt;/li&gt;
&lt;li&gt;Reducers&lt;/li&gt;
&lt;li&gt;Store&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Redux is awesome and powerful, but it also comes with too much boilerplate. The dynamics of state management with Redux is complex and will be overkill for smaller apps, but in essence, the front-end components just have to subscribe to the store to get the current App state. The components also are given dispatchers as they cannot change state themselves.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: With React, another dependency is used alongside Redux&lt;br&gt;
called &lt;code&gt;react-redux&lt;/code&gt; which makes it easier for react to&lt;br&gt;
work with redux and subscribe to the store.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find out more in &lt;a href="https://redux.js.org/"&gt;Redux Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing-react-router-dom"&gt;
  &lt;/a&gt;
  Routing: React Router DOM
&lt;/h3&gt;

&lt;p&gt;React is used to build &lt;strong&gt;Single-Page Apps&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But what if your website has more than one page, like an e-commerce site?&lt;/p&gt;

&lt;p&gt;In this case, we need Routing, and the (most popular) tech used for this purpose is the &lt;strong&gt;React-Router DOM&lt;/strong&gt;. With React-Router DOM, we can build React Apps with multiples pages and navigate the site without the need to refresh the current tab.&lt;/p&gt;

&lt;p&gt;You can read more on &lt;a href="https://reactrouter.com/"&gt;React Router from their Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#form-handling-formik"&gt;
  &lt;/a&gt;
  Form Handling: Formik
&lt;/h3&gt;

&lt;p&gt;In React, we handle the form and it's state ourselves by using onChange event. For simpler forms, tasks like these are just a breeze. But working with a larger form (i.e. online application form, booking form, etc.) will be pretty daunting. Things like form validation and preventing XSS can become complex really fast.&lt;/p&gt;

&lt;p&gt;Formik helps solve this problem by providing an intuitive API to easily handle forms for us.&lt;/p&gt;

&lt;p&gt;You can check out more on &lt;a href="https://formik.org/"&gt;Formik Documentation Here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components-library-material-uichackra-ui"&gt;
  &lt;/a&gt;
  Components Library: Material UI/Chackra UI
&lt;/h3&gt;

&lt;p&gt;These are actually optional especially if the company you're working with have their own styles and components. But if they suggest or requires you to do so, or you're working for your own project, Chackra UI and Material UI are among the best Components Library out there for React. You can take advantage of a professional design and layout so that you can focus more on code and building the App.&lt;/p&gt;

&lt;p&gt;Material UI was maintained by Google and reflects their years of research in UI. So yes, we're standing on the shoulder of giants here. By using Material UI, we can leverage their professional design.&lt;/p&gt;

&lt;p&gt;Chakra UI is also as awesome and professional as Material UI. There are many professionally designed components there ready for us to be used on our next project.&lt;/p&gt;

&lt;p&gt;You can check out more about &lt;a href="https://material-ui.com/"&gt;Material UI here&lt;/a&gt; and in &lt;a href="https://chakra-ui.com/"&gt;Chakra UI here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-react-testing-library"&gt;
  &lt;/a&gt;
  Testing: React Testing Library
&lt;/h3&gt;

&lt;p&gt;Testing is as important as development. In fact, we should write tests before we develop (it's Test Driven Development). This practice makes us more focused on what we're working on while also ensuring that our website or app will not suffer from an unexpected bug or crash without knowing which caused it and how to fix it.&lt;/p&gt;

&lt;p&gt;That's why we have testing.&lt;/p&gt;

&lt;p&gt;The React team recommends (and uses by default) the &lt;code&gt;testing library&lt;/code&gt;, more specifically the &lt;code&gt;react-testing-library&lt;/code&gt; for us to write &lt;code&gt;unit tests&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The most common approach on writing test suites is to include the test files alongside the code and components that each tests, and naming the test files exactly as the module it is testing with an additional .test.js (which is like this: &lt;code&gt;module-name.test.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With testing library, we can write test for common functions and codes, and also for components and their behaviors.&lt;/p&gt;

&lt;p&gt;You can check out more about &lt;a href="https://github.com/testing-library/react-testing-library"&gt;React Testing Library here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-in-touch"&gt;
  &lt;/a&gt;
  Let's get in touch!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Follow me on &lt;a href="https://twitter.com/menard_codes"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 5 Best Logistics Companies in Saudi Arabia for eCommerce</title>
      <author>vijaykumar147</author>
      <pubDate>Sat, 21 Aug 2021 05:22:33 +0000</pubDate>
      <link>https://dev.to/vijaykumar147/top-5-best-logistics-companies-in-saudi-arabia-for-ecommerce-5fi7</link>
      <guid>https://dev.to/vijaykumar147/top-5-best-logistics-companies-in-saudi-arabia-for-ecommerce-5fi7</guid>
      <description>&lt;p&gt;&lt;strong&gt;1)All About Logistics Companies in Saudi Arabia for eCommerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Every online business has two major things to focus on. The first is selling their products to customers and the second is actually ensuring the orders reach customers. For the second task, the main resources used are logistics companies in Saudi Arabia for eCommerce. These companies take care of a multitude of functions that contribute to the customer’s post-purchase journey, i.e., their delivery experience, which includes everything that occurs after a customer places an order. From distribution of inventory in warehouses across the respective regions, to actual handing over of orders to customers. These same companies are also responsible for handling delivery exceptions through multiple delivery reattempts as well as ensuring RTOs, cancelled orders and returns safely make it back to the inventory. Logistics companies are vital to ecommerce businesses in Saudi Arabia. That’s why it’s important to stay abreast of the leaders in ecommerce logistics in Saudi Arabia and how to choose the right logistics company for your ecommerce business. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)Top 5 Best Logistics Companies in Saudi Arabia for eCommerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most effective way to understand what logistics companies are, as well as the many logistics services they offer ecommerce companies in Saudi Arabia, is by getting to know the most favoured logistics companies for ecommerce in the region. While all offer shipping services, these ones are known for offering a wider range, for a varied volume of orders. The best logistics companies in Saudi Arabia offer ecommerce specific shipping and logistics services. For you to better understand what this means, here’s a brief overview of the &lt;a href="https://www.clickpost.ai/blog/top-10-best-logistics-companies-in-saudi-arabia"&gt;top 5 best logistics companies in Saudi Arabia for eCommerce&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.1)Barq Express&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Barq Express is a young logistics company, founded in 2016 that uses AI for route optimisation and provides options for unified shipment tracking. It enables pickups and deliveries to be coordinated via GPS. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.2)Fetchr&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fetchr is a cloud-based logistics company that helps optimise shipment and delivery as well as perform inventory and order management services. It uses analytics tools to enable predictive insights to be shared and acted upon, improving delivery operations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.3)UPS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Saudi Arabia is one of 220+ countries in which UPS is operational. This logistics company offers packaging services for LTL shipments as well as direct marketplace integrations. Numerous discounts are available depending on mode of payment. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.4)Careem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Careem is a leading logistics company that is known for providing route optimisation, time-sensitive deliveries, and discounted shipping rates. They also provide around-the-clock technical support services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.5)Aramex&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aramex was founded in 1982 in the UAE and provides express delivery for domestic and international orders at cost-effective rates. It also provides shipment tracking and shipping management services like order bundling and co-packing. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3)Choose the Best Logistics Companies in Saudi Arabia for eCommerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The top 5 best logistics companies listed above for &lt;a href="https://en.wikipedia.org/wiki/E-commerce"&gt;ecommerce&lt;/a&gt; businesses in Saudi Arabia should give you a better idea of what exactly logistics companies can do for you. However, to choose the right logistics companies for your ecommerce needs you must look at as many different types of logistics companies in your area of operation as you can. You can find out this information with the help of a multicarrier integration platform. You can then pick and choose the best logistics companies in Saudi Arabia for your eCommerce business using the criteria listed below.    &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.1)Range&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The best logistics companies in Saudi Arabia for eCommerce are ones that can provide their services within the region and to the locations you require. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.2)Services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The widest range of services from inventory management, stock appraisal and integration to reverse logistics should be handled by the best logistics companies in Saudi Arabia for eCommerce. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.3)Tracking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shipment tracking is an important part of managing shipping operations and order deliveries, so ensure the logistics company you tie up with has efficient shipment tracking services. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.4)Tech&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More advanced technologies offer greater automation and efficiency in shipping operations, so a logistics company that can offer advanced tech is the best choice. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.5)Cost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The best price paid for a logistics company in Saudi Arabia for ecommerce is one that covers the entirety of services offered and is balanced with your profitability. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4)Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The foundation of any successful ecommerce business lies in their choice of logistics partners as these are the resources that provide the services enabling basic ecommerce functionality. Only with the help of the best logistics companies in Saudi Arabia for eCommerce will you be able to take your online business to the next level. The best logistics companies to tie up with are ones that can provide services like inventory management, warehouse storage and distribution, and handle the bulk of your shipping operations. End-to-End logistics solutions are the cornerstone of any ecommerce operations success and failure. This makes it doubly important to be aware of the top 5 best logistics companies in Saudi Arabia for eCommerce, so that you’re ahead of the market trends. &lt;/p&gt;

</description>
      <category>ecommerce</category>
      <category>saudiarabia</category>
      <category>logisticcompanies</category>
    </item>
    <item>
      <title>React vs Angular</title>
      <author>Hari Om Singh</author>
      <pubDate>Sat, 21 Aug 2021 05:20:36 +0000</pubDate>
      <link>https://dev.to/hari_om_333/react-vs-angular-1pil</link>
      <guid>https://dev.to/hari_om_333/react-vs-angular-1pil</guid>
      <description>&lt;ul&gt;
&lt;li&gt;many people ask to me which JavaScript framework can i learn first or which framework is easy then other or which framework should i learn.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React? 🤔
&lt;/h2&gt;

&lt;p&gt;So React is a technically a JavaScript library for building user interfaces.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
using react we can make single page web application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developed by Facebook&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#requmintent-to-learning-react"&gt;
  &lt;/a&gt;
  requmintent to learning React
&lt;/h3&gt;

&lt;p&gt;you only need to learn React is JavaScript. first you need to master in javascript, es6, arrow function, array method, map and set.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
if know this skill then you are ready to go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-angular"&gt;
  &lt;/a&gt;
  What is Angular? 😕
&lt;/h2&gt;

&lt;p&gt;Angular is JavaScript Framework and it's help us to make morden web application. you can also make a single page application using Angular.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developed by Google.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#requmintent-to-learn-angular"&gt;
  &lt;/a&gt;
  Requmintent to learn Angular
&lt;/h3&gt;

&lt;p&gt;Angular is a type-script based Web framework to learn Angular you need to master typeScript. typeScript is super set of javaScript and typescript made by microsoft.&lt;br&gt;
to learn Angular you need to learn type-script must.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-compare-react-vs-angular"&gt;
  &lt;/a&gt;
  let's compare React vs Angular
&lt;/h3&gt;

&lt;p&gt;if you are a beginner and just learn HTML, CSS, JavaScript. then Answere is simple. REACT - Wait i tell you way.&lt;/p&gt;

&lt;p&gt;And if you are a intermediate level Developer or you have some experience of javascript or you learn web developet last 6 months. then try once Angular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-learn-react-is-too-hard"&gt;
  &lt;/a&gt;
  is Learn React is too Hard 😰
&lt;/h3&gt;

&lt;p&gt;NO, learn React is so easy if you JavaScript Fundaments is clear.&lt;br&gt;
in React You have to understand the fundaments like props, hooks, state etc. then you understand react so easy and use react is fun😁.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-learn-angular-is-too-hard"&gt;
  &lt;/a&gt;
  is Learn Angular is too Hard 😭
&lt;/h3&gt;

&lt;p&gt;yes if you are a beginner if you unfamiliar with typescript and you don't know the fundaments of JavaScipt then React and Angular both is hard for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-opition"&gt;
  &lt;/a&gt;
  My opition
&lt;/h2&gt;

&lt;p&gt;i talk to many developer and all said that start with React and once you under-stand react then move to angular&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#job"&gt;
  &lt;/a&gt;
  JOB 👨‍💻
&lt;/h3&gt;

&lt;p&gt;when the deviate goes to Jobs section then i say it's depended, search for  which framework most use in your area, then focus on this. i also say that learn both because which framework you next working on no one knows.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>react</category>
      <category>angular</category>
      <category>javascript</category>
    </item>
    <item>
      <title>jsPdf || adjust image height and width in ratio which will fit on page.. </title>
      <author>SHUBHAM </author>
      <pubDate>Sat, 21 Aug 2021 04:12:00 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/jspdf-adjust-image-height-and-width-in-ratio-which-will-fit-on-page-469o</link>
      <guid>https://dev.to/shubham_ingale/jspdf-adjust-image-height-and-width-in-ratio-which-will-fit-on-page-469o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#making-jsbased-serverless"&gt;
  &lt;/a&gt;
  Making js-based serverless
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0rWFJcPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp6dwq1rxj0tzeapq1v1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0rWFJcPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cp6dwq1rxj0tzeapq1v1.png" alt="serverless explain image"&gt;&lt;/a&gt;&lt;br&gt;
online pdf maker / generator.&lt;br&gt;
It is hard to make serverless things . It needs to get more libraries and stackoverflow (for me)🤓.&lt;br&gt;
I was also trying to create serverless pdf generator and I found very use ful library.which is jsPDF.So,I taken it and started to make app.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#starting-using-jspdf"&gt;
  &lt;/a&gt;
  Starting using jsPDF
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTZeUNYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a11wlp4s9o29op3un50t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTZeUNYD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a11wlp4s9o29op3un50t.png" alt="jsPdf logo"&gt;&lt;/a&gt;&lt;br&gt;
It was also not simple to implement library.Mainly the photo is not being fit on the page of pdf file.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#let-me-show-you-example-"&gt;
  &lt;/a&gt;
  let me show you example .
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h57RreFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzmfggk9zr1dec1cg0yb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h57RreFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzmfggk9zr1dec1cg0yb.jpg" alt="the pdf generated with jsPDF example"&gt;&lt;/a&gt;&lt;br&gt;
In this screenshot you can see the photo is going out of the pdf page &lt;br&gt;
I searched it on Google but no one written article on it and also jsPDF not given solution on this problem.&lt;br&gt;
So, I started solving this problem.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ratio"&gt;
  &lt;/a&gt;
  Ratio
&lt;/h2&gt;

&lt;p&gt;It's important to know the ration&lt;br&gt;
 of image height as width so we can derive the small scale of the image which will fit on the page of pdf&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#here-how-to-get-ratio-of-image"&gt;
  &lt;/a&gt;
  here how to get ratio of image
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : we have to get ratio of image exact after image upload so, we can be able to use it globally whenever we wanted..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's code it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;onchange=&lt;/span&gt;&lt;span class="s"&gt;"getratio(this.files"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;images_to_convert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getRatio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Note files is json object not array object&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FileReader&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onloadend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imgsrc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;addImageToPdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imgsrc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readAsDataUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addImageToPdf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="c1"&gt;// src is data url of image&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;images_to_convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;// Now successfully ratio of height as width is noted&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It was how I noted Ratio.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#making-image-fit-on-page"&gt;
  &lt;/a&gt;
  Making image fit on page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPiATUgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gu1wfq1mmvew57avyytj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPiATUgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gu1wfq1mmvew57avyytj.png" alt="Illustration that shows resize icon from icons8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Image by icons8&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we have ratio of image.only we need is page height and width size.&lt;br&gt;
A4 page have width 210mm and height 300mm so the max is 300mm*210mm.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;210&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We have know that the image height and width is in pixels but this doesn't Matter because it's in ratio.&lt;br&gt;
Because , Height as well as width decrease or increase at same time so ratio will in same proportion.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rendering"&gt;
  &lt;/a&gt;
  Rendering
&lt;/h2&gt;

&lt;p&gt;Now things we have are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Max height and width &lt;/li&gt;
&lt;li&gt;Ratio of image height as width&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If width of page is smaller than image width then image width will be page width  similarly , if height of page is smaller than image height then image height is page hei axis.&lt;br&gt;
Let me show in code&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;jsPDF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;image_to_convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// img is json that we stored previously&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Making reciprocal of ratio because ration of height as width is no valid here needs width as height&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Ratio is valid here &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Now successfully fitted image on page                                                &lt;/span&gt;
&lt;span class="c1"&gt;// I will prefer to use mm instead px&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;download.pdf&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://formal-stack.netlify.app/"&gt;https://formal-stack.netlify.app/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;I have created the App which converts images into pdf. Which will show you how images are being fitted on page of jsPDF.&lt;br&gt;
Source code:-&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/NotableAPP"&gt;
        NotableAPP
      &lt;/a&gt; / &lt;a href="https://github.com/NotableAPP/Formal-stack-pdfs"&gt;
        Formal-stack-pdfs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Make pdf from image , markdown and more is coming...
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Formal-stack-pdfs&lt;/h1&gt;
&lt;p&gt;Hey there this is app where you can create pdfs with jsPDF library and our ui/ux this will help you to convert the images into pdf&lt;/p&gt;
&lt;p&gt;App running at - &lt;a href="https://formal-stack.netlify.app" rel="nofollow"&gt;https://formal-stack.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Currently under development.....&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/NotableAPP/Formal-stack-pdfs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>jspdf</category>
      <category>javascript</category>
      <category>pdf</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to add "SKIP TO MAIN CONTENT" to websites</title>
      <author>Kritika Pattalam Bharathkumar</author>
      <pubDate>Sat, 21 Aug 2021 01:23:37 +0000</pubDate>
      <link>https://dev.to/kritikapattalam/how-to-add-skip-to-main-content-to-websites-4f5i</link>
      <guid>https://dev.to/kritikapattalam/how-to-add-skip-to-main-content-to-websites-4f5i</guid>
      <description>&lt;p&gt;As part of this blog post let's see what is web accessibility, and how to add "skip to main content" link for web pages and why?.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h3&gt;

&lt;p&gt;As per w3.org&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Web accessibility means that websites, tools, and technologies are designed and developed so that people with disabilities can use them. More specifically, people can: perceive, understand, navigate, and interact with the Web&lt;br&gt;
contribute to the Web&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a normal user when he visits a page, he/she directly jumps to the section of the page where they want to read. But if we consider visually impaired users or someone who uses screen reader, the assistive device has to read through the entire page before they can reach a point which interests them. &lt;/p&gt;

&lt;p&gt;Let's assume when a user lands on the page , the screen reader will read the entire navigation/header and then goes to the actual content of the page. The user reads through the first page of your website once, now he/she goes to the second page and the screen reader will again start reading the entire navigation for them before they can go to the main content. This is where "SKIP TO MAIN CONTENT" link comes in handy for them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-add-skip-to-main-content-on-the-page"&gt;
  &lt;/a&gt;
  How to add "SKIP TO MAIN CONTENT" on the page
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Inside the body tag add an anchor tag as the first element. &lt;/li&gt;
&lt;li&gt;Add an id to the content you want the screenreader to jump/skip to. eg: 'main-content'&lt;/li&gt;
&lt;li&gt;Add the same id as the href value to the anchor tag eg: 'main-content'
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
    &amp;lt;a class="skip-link" href="#main-content"&amp;gt;SKIP TO MAIN CONTENT&amp;lt;/a&amp;gt;
    &amp;lt;header&amp;gt; .....&amp;lt;/header&amp;gt;
    &amp;lt;main id="main-content"&amp;gt;
         Main Body Content .....
    &amp;lt;/main&amp;gt;
    &amp;lt;footer&amp;gt;......&amp;lt;/footer&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Add CSS to the link to hide it from view.
&lt;strong&gt;[P.S Do not use display:none or visibility hidden because screen readers will not read the element. Our main focus is for the screen reader to read the link]&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;When the screenreader focuses on that element, make the element visible and also the screen reader will read the content inside the anchor tag . i.e "SKIP TO MAIN CONTENT" in our example.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.skip-link {
    position: absolute;
    left: -999px;
    width: 1px;
    height: 1px;
    top: auto;
}

.skip-link:active, .skip-link:focus {
    color: #000;
    display: inline-block;
    height: auto;
    width: auto;
    position: static;
    margin: auto
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.w3.org/WAI/fundamentals/accessibility-intro/"&gt;Accessibility&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#checkout-my-other-blog-posts"&gt;
  &lt;/a&gt;
  Checkout my other blog posts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://dev.to/kritikapattalam/getting-started-with-javascript-ultimate-free-resources-59p6"&gt;Getting Started with JavaScript - Ultimate Free Resources&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/kritikapattalam/10-things-you-can-do-in-chrome-developer-tools-333g"&gt;10 Things you can do in Chrome Developer Tools &lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/kritikapattalam/2-simple-ways-you-can-truncate-text-using-css-1n18"&gt;2 Simple ways you can truncate text using CSS&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please share your feedbacks and suggestions in the comments below.&lt;/p&gt;

&lt;p&gt;Lets connect on  &lt;a href="https://twitter.com/KritikaPattalam"&gt;Twitter&lt;/a&gt;  | &lt;a href="https://www.linkedin.com/in/kritika-p-296739155/"&gt;LinkedIn&lt;/a&gt; for more web development related tips &amp;amp; tricks.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>programming</category>
      <category>html</category>
    </item>
    <item>
      <title>Sending DELETE Request In JS Using fetch</title>
      <author>Aya Bouchiha</author>
      <pubDate>Fri, 20 Aug 2021 23:33:04 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/sending-delete-request-in-js-using-fetch-293b</link>
      <guid>https://dev.to/ayabouchiha/sending-delete-request-in-js-using-fetch-293b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#sending-delete-request-using-then-amp-catch"&gt;
  &lt;/a&gt;
  Sending DELETE request using then &amp;amp; catch
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DELETE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cm"&gt;/*200*/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;deleteTodo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sending-delete-request-using-async-and-await"&gt;
  &lt;/a&gt;
  Sending DELETE request using async and await
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;todoId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DELETE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;// 200&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nx"&gt;deleteTodo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have a good day&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React open source Ecommerce web app with PayPal checkout</title>
      <author>Abod Micheal (he/him)</author>
      <pubDate>Fri, 20 Aug 2021 22:40:07 +0000</pubDate>
      <link>https://dev.to/abodmicheal/react-open-source-ecommerce-web-app-with-paypal-checkout-2img</link>
      <guid>https://dev.to/abodmicheal/react-open-source-ecommerce-web-app-with-paypal-checkout-2img</guid>
      <description>&lt;p&gt;Github  - &lt;a href="https://github.com/abodmicheal/React-projects/"&gt;https://github.com/abodmicheal/React-projects/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;live project - &lt;a href="https://abod-zone.web.app"&gt;https://abod-zone.web.app&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>help</category>
      <category>techtalks</category>
      <category>beg</category>
    </item>
    <item>
      <title>Computer networking in 5 minutes: Static IP vs dynamic IP</title>
      <author>Erin Schaffer</author>
      <pubDate>Fri, 20 Aug 2021 22:29:29 +0000</pubDate>
      <link>https://dev.to/educative/computer-networking-in-5-minutes-static-ip-vs-dynamic-ip-1pen</link>
      <guid>https://dev.to/educative/computer-networking-in-5-minutes-static-ip-vs-dynamic-ip-1pen</guid>
      <description>&lt;p&gt;IP addresses are an essential part of computer networking. They play an important role in sending and receiving information on the internet. Every device that connects to an internet network has an IP address, which means there are billions of IP addresses that exist. Today, we’re going to discuss IP addresses, how they work, static IP vs dynamic IP, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We'll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#ipaddress"&gt;What is an IP address?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#work"&gt;How does an IP address work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#static"&gt;Static IP addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynamic"&gt;Dynamic IP addresses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#staticvsdynamic"&gt;Static IP vs dynamic IP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-ip-address"&gt;
  &lt;/a&gt;
  What is an IP address?
&lt;/h2&gt;

&lt;p&gt;An Internet Protocol address, or IP address, is a &lt;strong&gt;unique identifier&lt;/strong&gt; assigned to every device on a TCP/IP network. The Internet Protocol is the set of rules that outlines how data should be transported across the internet or local networks. IP addresses help &lt;strong&gt;identify devices and allow them to communicate&lt;/strong&gt; with each other. &lt;/p&gt;

&lt;p&gt;Internally, IP addresses are stored as numbers. The Domain Name System (DNS) allows us to use words to identify different servers on the internet, such as an application, server, or website. When we type a URL into our search bar, DNS looks up that domain’s IP address and returns it to our network device. There are two main versions of IP addresses: IPv4 and IPv6.&lt;/p&gt;

&lt;p&gt;IP addresses are strings of four numbers separated by characters. For example, an IP address could look like this: &lt;code&gt;152.132.4.23&lt;/code&gt;. They’re produced by a division of the Internet Corporation for Assigned Names and Numbers to help make the internet more secure and accessible. &lt;/p&gt;

&lt;p&gt;We can think of IP addresses as physical home addresses. We can exchange addresses with friends and family. Those addresses give us a destination that allows us to communicate with friends and family through different communication methods like birthday cards, letters, and more. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-an-ip-address-work"&gt;
  &lt;/a&gt;
  How does an IP address work?
&lt;/h2&gt;

&lt;p&gt;All devices communicate with one another using the Internet Protocol (IP). Here’s how it works:&lt;/p&gt;

&lt;p&gt;Before our devices connect to the internet, they &lt;strong&gt;connect to a network&lt;/strong&gt; that’s connected to the internet. This network gives us access to the internet. For example, the network that we use at home will most likely be our Internet Service Provider (ISP). After this, our ISP will assign an IP address to our device. Our internet activity will go through the ISP and then be routed back to us using our assigned IP address. &lt;/p&gt;

&lt;p&gt;If we leave our home and take our personal device with us, our IP address from our home network doesn’t come with us. Let’s say we go to a hotel. When we want to use the internet at the hotel, we’d probably connect to their Wi-Fi network. Since we’re using a new network, we’re temporarily assigned a &lt;strong&gt;new IP address&lt;/strong&gt;. This temporary IP address is assigned to us by the hotel’s ISP.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Can our IP addresses change?&lt;/strong&gt;&lt;br&gt;
Yes, they can! If we turn our modem or router off, our IP address may change. We can also contact our ISP to change our IP address. This is one of the reasons why DNS is so important. Instead of directly informing others when our IP address changes, we can directly inform our DNS server. This means that any other device that contacts the DNS server will get the updated information for the new IP address.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-ip-addresses"&gt;
  &lt;/a&gt;
  Static IP addresses
&lt;/h2&gt;

&lt;p&gt;A static IP address is an IP address that &lt;strong&gt;doesn’t change&lt;/strong&gt;. Our static IP addresses usually stay the same unless our network architecture changes or our devices are out of commission. Static IP addresses are typically used for servers or other important networking equipment. They’re popular within &lt;strong&gt;business settings&lt;/strong&gt; because they ensure that the devices connected to them keep a consistent address. They also work well for remote access solutions.&lt;/p&gt;

&lt;p&gt;A static IP address is assigned to a device by an ISP. Typically, static IP addresses add to the cost of your internet service. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-ip-addresses"&gt;
  &lt;/a&gt;
  Dynamic IP addresses
&lt;/h2&gt;

&lt;p&gt;A dynamic IP address is an IP address that can &lt;strong&gt;regularly change&lt;/strong&gt;. An ISP will buy a large number of dynamic IP addresses and assign them to their customer’s devices. Dynamic IP addresses are often reassigned. Reassigning IP addresses helps internet providers save money and ensure a higher level of &lt;strong&gt;security&lt;/strong&gt;. It also means that they don’t need to take the time to reestablish any network connections if we go on a vacation or move to a new location.&lt;/p&gt;

&lt;p&gt;Dynamic IP addresses are more common for &lt;strong&gt;consumer equipment&lt;/strong&gt; and personal use. A dynamic IP address is assigned to a device by our ISP’s Dynamic Host Configuration Protocol (DHCP) servers. The DHCP server typically uses network routers to assign addresses to devices.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-ip-vs-dynamic-ip"&gt;
  &lt;/a&gt;
  Static IP vs dynamic IP
&lt;/h2&gt;

&lt;p&gt;There’s not always a clear answer when it comes to deciding between a static or a dynamic IP address. When choosing between the two, it’s important to consider your connection environment. In other words, static IP addresses tend to be better for businesses, while dynamic IP addresses tend to be better for personal or home networks. &lt;/p&gt;

&lt;p&gt;Let’s take a look at some of the pros and cons of static and dynamic IP addresses:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#static-ip-addresses"&gt;
  &lt;/a&gt;
  Static IP addresses
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Remote access&lt;/strong&gt;: Static IP addresses make it easy for us to work remotely using a Virtual Private Network (VPN).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server hosting&lt;/strong&gt;: Static IP addresses make it easy for people to find us using DNS. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DNS support&lt;/strong&gt;: With static IP, it’s easier to manage DNS servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Geolocation services&lt;/strong&gt;: With static IP addresses, our geolocation services are more accurate. This is because our services will match the IP address to its physical location.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reliable connection&lt;/strong&gt;: A static IP address is fixed, which typically results in a more reliable connection. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy to find&lt;/strong&gt;: A static IP address can make it easier to find specific devices on a network.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Security concerns&lt;/strong&gt;: With a static IP address, anyone with the proper tools can find where our devices are located. VPNs can help with this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cost&lt;/strong&gt;: Static IP addresses are not as cost-effective as dynamic IP addresses. Typically, ISPs charge more for them.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-ip-addresses"&gt;
  &lt;/a&gt;
  Dynamic IP addresses
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easy configuration&lt;/strong&gt;: DHCP servers automatically assign IP addresses to our devices, so we don’t need to worry about setting it up ourselves.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cost&lt;/strong&gt;: Dynamic IP addresses are usually cheaper than static IP addresses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Unlimited IP addresses&lt;/strong&gt;: Dynamic IP addresses can be reused. Whenever our devices need a new dynamic IP address, our network or router can automatically configure them for us.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;: Dynamic IP addresses make it more difficult for potential attackers to locate our networked devices. This is because dynamic IP addresses can change frequently, so it’s harder to track a device. This helps with physical and online security. We can also increase our security measures by using a VPN.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DNS compatibility&lt;/strong&gt;: If we wanted to host an email server, for example, it may be difficult to use a dynamic IP address because DNS doesn’t work well with dynamic IP addresses. We could use a dynamic DNS service, but those tend to be expensive.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Remote connectivity&lt;/strong&gt;: If we don’t have the proper remote access software, it’ll be difficult to connect using a dynamic IP address. A VPN can help with this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Increased downtime&lt;/strong&gt;: Sometimes, our ISP can’t assign us a dynamic IP address. This can slow down our internet connection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Inaccurate geolocation&lt;/strong&gt;: Dynamic IP addresses may affect our geolocation services because our IP address may not reflect our physical location.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Today, we took a closer look at IP addresses and discussed what they are and how they work. IP addresses are an important part of computing networking because they allow our devices to properly communicate with other devices. Static and dynamic IP addresses are the two types of IP addresses with different purposes. It’s often said that static IP addresses are better for businesses, and dynamic IP addresses are better for personal use. &lt;/p&gt;

&lt;p&gt;We covered a lot today, but there’s still so much more to learn! Some recommended topics to cover next include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DNS servers&lt;/li&gt;
&lt;li&gt;Network addresses&lt;/li&gt;
&lt;li&gt;Firewalls&lt;/li&gt;
&lt;li&gt;Routing in IP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get started learning these concepts and a lot more, check out Educative’s course &lt;a href="https://www.educative.io/courses/grokking-computer-networking"&gt;&lt;strong&gt;Grokking Computer Networking for Software Engineers&lt;/strong&gt;&lt;/a&gt;. This hands-on course will teach you the fundamentals of networks, socket programming in Python, command-line tools, and much more. By the end, you’ll have a deeper understanding of computer networking essentials.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-reading-about-networking"&gt;
  &lt;/a&gt;
  Continue reading about networking
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/osi-model-layers"&gt;What is the OSI model? 7 layers explained in detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/computer-networking-101"&gt;Computer networking 101: Terms, tools, and getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/behind-the-screens-what-happens-when-you-type-a-url-in-a-browser"&gt;Behind the scenes: What happens when you type a URL in a browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>JavaScript Execution Context</title>
      <author>Harshvardhan</author>
      <pubDate>Fri, 20 Aug 2021 22:18:47 +0000</pubDate>
      <link>https://dev.to/harshvardhan22/javascript-execution-context-57gc</link>
      <guid>https://dev.to/harshvardhan22/javascript-execution-context-57gc</guid>
      <description>&lt;p&gt;JavaScript is a beautiful language, since it is loosely typed it is super easy to start coding with it. But to take full advantage of this powerful language one should always know the basics and what else is a better place to start than the execution context!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;I am writing this article to help people who are beginners or at intermediate level, so I will try to explain everything in the simplest way possible. Let's begin!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Execution context is a box that is created every time a javascript code is executed. The box is divided into two parts : &lt;strong&gt;"memory creation"&lt;/strong&gt; and &lt;strong&gt;"code execution"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Lets take a simple code to understand what goes inside these parts of execution context box.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1.  var x = 5;
2. 
3.  //calculates the cubic value of input
4.  function cube (input) {
5.  var result = input*input*input;
6.    return var; 
7.  }
8. 
9.  var cubeFive = cube(x);
10.
11. var cubeTwo = cube(2);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 1: A global execution context is created, which has the global object (window), global variable (this) and functions inside it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;JavaScript is a synchronous single threaded language, means the code is executed line by line one at a time, you can think of this  as a pointer that moves from top to down the code file and the line at which this pointer is pointing gets executed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;All the variables are assigned a value "undefined" in  memory creation phase and all the function definitions are stored the way they are written, i.e. the exact code of the function is stored against the function name.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Step 2: Our pointer starts the memory creation phase.&lt;/p&gt;

&lt;p&gt;Step 3: Pointer points at line 1, finds a variable &lt;strong&gt;x&lt;/strong&gt; and assigns &lt;strong&gt;undefined&lt;/strong&gt; to it.&lt;/p&gt;

&lt;p&gt;Step 4: Pointer points to line 5, finds a function definition &lt;strong&gt;cube&lt;/strong&gt;  and it stores the code as a value of &lt;strong&gt;cube&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Step 5: Pointer points at line 9, finds a variable &lt;strong&gt;cubeFive&lt;/strong&gt; and assigns &lt;strong&gt;undefined&lt;/strong&gt; to it.&lt;/p&gt;

&lt;p&gt;Step 6: Pointer points at line 11, finds a variable &lt;strong&gt;cubeTwo&lt;/strong&gt; and assigns &lt;strong&gt;undefined&lt;/strong&gt; to it.&lt;/p&gt;

&lt;p&gt;Step 7: Now code execution phase begins and the code is executed line by line.&lt;/p&gt;

&lt;p&gt;Step 8: Our pointer starts executing the code, first it points at line 1 of code where the value of &lt;strong&gt;x&lt;/strong&gt; which was assigned "undefined" in step 3, is now assigned its original value i.e. 5.&lt;/p&gt;

&lt;p&gt;Step 9: Pointer comes at line 5, where it finds a function definition, so it does &lt;strong&gt;nothing&lt;/strong&gt; and moves further ahead.&lt;/p&gt;

&lt;p&gt;Step 10: Pointer comes at line 9, again finds a variable &lt;strong&gt;cubeFive&lt;/strong&gt;, but here the value is nothing but a function call! So a very interesting thing happens here, a new box i.e. execution context is created which again has two parts : memory creation and code execution.&lt;/p&gt;

&lt;p&gt;Step 11 : Now the pointer goes to the function definition at line 5 and starts to do the same steps, from (1-9) inside the newly created execution context.&lt;/p&gt;

&lt;p&gt;Step 12 :  Now when the function returns the value at line 6, that particular value is stored in the variable &lt;strong&gt;cubeFive&lt;/strong&gt; at line 9.&lt;/p&gt;

&lt;p&gt;Step 13: After this step the new box that was created is now destroyed and all the things inside it, like variables and function definitions are also destroyed.&lt;/p&gt;

&lt;p&gt;Step 14: Pointer comes at line 11, again finds a variable &lt;strong&gt;cubeTwo&lt;/strong&gt;, and same steps are repeated again. A new box is created, the pointer goes to the function definition. After it returns a value to the variable at line 11 the box is deleted and pointer is now again pointing at line 11.&lt;/p&gt;

&lt;p&gt;Step 15: Since there is no code left to be executed, the global execution that was created at step 1 is also deleted now and yes all the variables and function definitions are also deleted with it.&lt;/p&gt;

&lt;p&gt;Congratulations!! now you know the concept of execution context.&lt;/p&gt;

&lt;p&gt;And this is how a JavaScript code is executed. This very concept of execution context the forms the fundamental logic behind more advanced concepts like hoisting, call stack, closures, etc.&lt;/p&gt;

&lt;p&gt;Keep learning,&lt;br&gt;
Cheers :-)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Some soft skills that we should keep in mind and remember often ✨</title>
      <author>Maria Antonella 🦋</author>
      <pubDate>Fri, 20 Aug 2021 22:14:08 +0000</pubDate>
      <link>https://dev.to/antoomartini/some-soft-skills-that-we-should-keep-in-mind-and-remember-often-2da7</link>
      <guid>https://dev.to/antoomartini/some-soft-skills-that-we-should-keep-in-mind-and-remember-often-2da7</guid>
      <description>&lt;p&gt;Some things I learned and some things I am still learning. Once my mentor told me that soft skills are very important, and before programmers, we are people, we are humans. So it's good to remember these tips often. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-dummy-questions"&gt;
  &lt;/a&gt;
  ✨ Ask dummy questions.
&lt;/h2&gt;

&lt;p&gt;There are a million technologies. And you're not expected to know them all, so ask! [I don't understand what these words mean" From what source can I read about this? Remember there are no dummy questions, only fools who don't ask.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-kind"&gt;
  &lt;/a&gt;
  ✨ Be kind
&lt;/h2&gt;

&lt;p&gt;The IT world is full of hostile opinions and we all want the best results. That is not why you have to become an unpleasant and arrogant person. Radiate kindness. You're going to go far.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-advantage-of-what-other-people-are-doing"&gt;
  &lt;/a&gt;
  ✨ Take advantage of what other people are doing
&lt;/h2&gt;

&lt;p&gt;Look for existing solutions before starting a task. Understand the coding paradigms used. Look at your team's code. Present your solution in the best way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fight-for-diversity"&gt;
  &lt;/a&gt;
  ✨ Fight for diversity
&lt;/h2&gt;

&lt;p&gt;It is important the participation of women in IT an Tech. It's vital to add diversity and a new perspective in the area. Encourage the participation of diversity in your team. This makes the technology more reliable and not reflect only the world and the view from men.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-the-right-thing"&gt;
  &lt;/a&gt;
  ✨ Do the right thing
&lt;/h2&gt;

&lt;p&gt;Code is art. And you are the artist, of course! Every task is an opportunity to write beautiful and elegant code. Take the opportunity and become a professional. Take pride in your work, don't just make it work. Make it work the best way you can.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-your-way-fight-for-yourself"&gt;
  &lt;/a&gt;
  ✨ Find your way, fight for yourself
&lt;/h2&gt;

&lt;p&gt;Some tasks have a big impact on job advancement or promotions. Others not so much. You have to do your best at both. But your day should start with the high-impact task. Fight for yourself, make yourself grow, no one else will do it for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#look-for-critics-in-your-code"&gt;
  &lt;/a&gt;
  ✨ Look for critics in your code.
&lt;/h2&gt;

&lt;p&gt;Make code review. Review your code as much as possible, the more constructive feedback you get, the faster you will learn and grow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#put-your-ego-aside"&gt;
  &lt;/a&gt;
  ✨ Put your ego aside
&lt;/h2&gt;

&lt;p&gt;Your colleagues are unique and talented, with experiences and super smart.&lt;br&gt;
Be empathetic, be open-minded, learn from your team, even when they are wrong.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-initiative"&gt;
  &lt;/a&gt;
  ✨ Take initiative
&lt;/h2&gt;

&lt;p&gt;Look for opportunities to improve process and experience development of your team and project. Improve documentation, learn from your mentors and teach others. Be a mentor too! Become the person you wanted to have as a mentor when you started as a junior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#throw-yourself-into-the-fire"&gt;
  &lt;/a&gt;
  ✨ Throw yourself into the fire
&lt;/h2&gt;

&lt;p&gt;We will never be ready to work on large projects or new features, deploy in production, manage implementations... the best way to prepare for them is to do them! &lt;br&gt;
You will expand your comfort zone. And you'll grow a lot!  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intention-always-intention"&gt;
  &lt;/a&gt;
  ✨ Intention, always intention.
&lt;/h2&gt;

&lt;p&gt;It doesn't matter if you spent 4 hours to solve something and you did it wrong. Maybe it takes so much time! Delete and start again. And again. &lt;br&gt;
Make sure that behind every line of code there is purpose, intention and clarity.&lt;/p&gt;

&lt;p&gt;What other advice would you give? :)&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>leadership</category>
      <category>devjournal</category>
    </item>
  </channel>
</rss>
