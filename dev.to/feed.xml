<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Keyboard shortcuts which will make sure you don't have to touch your mouse while writing code</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Tue, 09 Nov 2021 17:24:22 +0000</pubDate>
      <link>https://dev.to/shubhracodes/keyboard-shortcuts-which-will-make-sure-you-dont-have-to-touch-your-mouse-while-writing-code-1i58</link>
      <guid>https://dev.to/shubhracodes/keyboard-shortcuts-which-will-make-sure-you-dont-have-to-touch-your-mouse-while-writing-code-1i58</guid>
      <description>&lt;p&gt;There are times when you might feel like reaching for the mouse to execute a certain task. But we all know that shifting our hand to and fro from the mouse reduces our productivity. So, &lt;/p&gt;

&lt;p&gt;Here are 10 keyboard shortcuts that will help you to speed up your coding process üßµ &lt;/p&gt;

&lt;p&gt;These shortcuts work with a majority of code editors and IDEs like VS Code, Atom, Sublime etc. If these doesn't work for you, make sure to check the settings of you editor.&lt;/p&gt;

&lt;p&gt;Let's Begin üëá &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#copycutpaste-entire-line"&gt;
  &lt;/a&gt;
  1Ô∏è‚É£ Copy/Cut/Paste Entire Line
&lt;/h2&gt;

&lt;p&gt;You might be aware about Ctrl+C/X/V but there's a trick to it, if you don't select any portion in the line, your editor will copy/cut/paste the whole line including the line break.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comment-and-uncomment-lines"&gt;
  &lt;/a&gt;
  2Ô∏è‚É£ Comment and Uncomment Lines
&lt;/h2&gt;

&lt;p&gt;Comments are extremely handy for us, but instead of going to each and every line individually and commenting it, just highlight whatever lines you want commented and then hit&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + /&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will comment and uncomment the entire line&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-for-a-file-in-your-file"&gt;
  &lt;/a&gt;
  3Ô∏è‚É£ Search for a file in your file
&lt;/h2&gt;

&lt;p&gt;Navigating through a project can get hard, especially when the project is pretty big. You can just use&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + P&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;to search for any file in your whole project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#search-for-a-keyword-in-a-file-and-in-the-whole-project"&gt;
  &lt;/a&gt;
  4Ô∏è‚É£ Search for a keyword in a file and in the whole project
&lt;/h2&gt;

&lt;p&gt;Searching for a keyword inside a file can be done using &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + F&lt;/code&gt; and then pressing Enter will let you navigate through the keywords&lt;/p&gt;

&lt;p&gt;To search in the whole project,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Shift + F&lt;/code&gt; is used. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#indent-and-unindent-code"&gt;
  &lt;/a&gt;
  5Ô∏è‚É£ Indent and Un-indent code
&lt;/h2&gt;

&lt;p&gt;Select the code block that you need to indent and then press the Tab key to indent the whole code block. &lt;/p&gt;

&lt;p&gt;Similarly, to un-indent the code block, select it and press Shift + Tab&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-file"&gt;
  &lt;/a&gt;
  6Ô∏è‚É£ Create a new file
&lt;/h2&gt;

&lt;p&gt;This might not be the most useful shortcut in bigger projects but you can create new files using &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + N&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-line"&gt;
  &lt;/a&gt;
  7Ô∏è‚É£ Create a new line
&lt;/h2&gt;

&lt;p&gt;Usually, when we have to create a new line, we place our cursor at the end of the line and press Enter, but pressing &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Enter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;will create a new line just below the line where your cursor is present.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navigate-across-the-whole-world-rather-than-a-character-at-a-time"&gt;
  &lt;/a&gt;
  8Ô∏è‚É£ Navigate across the whole world rather than a character at a time
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Arrow Key&lt;/code&gt; will allow you to navigate across a whole word at a time as compared to just a character&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Backspace&lt;/code&gt; will allow you to delete a whole word at a time&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#highlighting-characters-and-words"&gt;
  &lt;/a&gt;
  9Ô∏è‚É£ Highlighting characters and words
&lt;/h2&gt;

&lt;p&gt;Holding down Shift key and pressing allow keys will allow you to highlight characters.&lt;/p&gt;

&lt;p&gt;Similarly,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Shift + Ctrl + Arrow keys&lt;/code&gt; will allow you to highlight a whole word at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-og-shortcuts"&gt;
  &lt;/a&gt;
  1Ô∏è‚É£ 0Ô∏è‚É£ The OG Shortcuts
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Ctrl + S&lt;/code&gt; -&amp;gt; Save the file&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + A&lt;/code&gt; -&amp;gt; Select All&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Z&lt;/code&gt; -&amp;gt; Undo&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Ctrl + Y&lt;/code&gt; -&amp;gt; Redo&lt;/p&gt;

&lt;p&gt;These are all the shortcuts you'll need to speed up your coding. Initially, it might be a little bit difficult to use them regularly.&lt;/p&gt;

&lt;p&gt;You need to use these shortcuts consciously and in no time they'll get into your habit without you even knowing.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build your own component library with Svelte</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 09 Nov 2021 17:15:46 +0000</pubDate>
      <link>https://dev.to/logrocket/build-your-own-component-library-with-svelte-510l</link>
      <guid>https://dev.to/logrocket/build-your-own-component-library-with-svelte-510l</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/madushikaperera/"&gt;Madushika Perera&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Svelte is an open source JavaScript component framework for building web applications. Svelte takes a different approach than all the existing web frameworks like React, Angular, and Vue, which follow declarative, state-driven code.&lt;/p&gt;

&lt;p&gt;The Svelte bundle size is significantly smaller than most frameworks because it doesn‚Äôt have any dependencies (only dev dependencies are available in the &lt;code&gt;package.js&lt;/code&gt; file). Due to these features, Svelte has become &lt;a href="https://insights.stackoverflow.com/survey/2021#section-most-loved-dreaded-and-wanted-web-frameworks"&gt;the most loved, dreaded, and wanted web framework in 2021&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Due to this popularity, devs have introduced several awesome UI component frameworks/libraries like &lt;a href="https://sveltematerialui.com/"&gt;Svelte Material UI&lt;/a&gt;, &lt;a href="https://smeltejs.com/"&gt;Smelt&lt;/a&gt;, &lt;a href="https://svelte-materialify.vercel.app/"&gt;Svelte Materialify&lt;/a&gt; and &lt;a href="https://sveltestrap.js.org/"&gt;Sveltestrap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But what would it be like to build your own Svelte component library? Fortunately, there are several templates that you could start with, like the official &lt;a href="https://github.com/sveltejs/component-template"&gt;template provided by Svelte&lt;/a&gt; and &lt;a href="https://github.com/YogliB/svelte-component-template"&gt;Svelte 3 Component Template&lt;/a&gt;, which are considered the go-to for building your own component library.&lt;/p&gt;

&lt;p&gt;However, these templates are highly opinionated, and you may not be able to see the underlying tools and techniques required to build the component library itself. In this article, we are going to learn how to build a component library on our own using Svelte‚Äôs new SvelteKit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-sveltekit"&gt;
  &lt;/a&gt;
  What is SvelteKit?
&lt;/h2&gt;

&lt;p&gt;SvelteKit can be considered the successor to &lt;a href="https://sapper.svelte.dev/"&gt;Sapper&lt;/a&gt; or NextJS for Svelte. It is packed with tons of cool features, like server side rendering, routing, and code splitting.&lt;/p&gt;

&lt;p&gt;SvelteKit uses &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; under the hood, which is quite surprising, as Sapper and most tools are developed using &lt;a href="https://www.snowpack.dev/"&gt;Snowpack&lt;/a&gt;. Vite 2 is framework-agnostic and designed with SSR at its core.&lt;/p&gt;

&lt;p&gt;SvelteKit is still in beta, but it‚Äôs very stable, and there are many projects in production using this framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-sveltekit"&gt;
  &lt;/a&gt;
  Getting started with SvelteKit
&lt;/h2&gt;

&lt;p&gt;For this project, we will use a skeleton project as the base for our library.&lt;/p&gt;

&lt;p&gt;Let‚Äôs initialize the project using SvelteKit. You will need to execute the following command and select the options given by the Svelte:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FWVSQHrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Initializing-sveltekit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FWVSQHrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Initializing-sveltekit.png" alt="Initializing sveltekit" width="730" height="221"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrate-storybook"&gt;
  &lt;/a&gt;
  Integrate Storybook
&lt;/h2&gt;

&lt;p&gt;It‚Äôs time to integrate Storybook, an open source tool for building UI components and pages in isolation. It streamlines UI development and testing, which is ideal for our component library development. It allows us to build components without worrying about the configurations or development server in SvelteKit.&lt;/p&gt;

&lt;p&gt;In your SvelteKit project root, execute the following command. This will identify and generate the necessary configurations for Svelte:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx sb init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may face some issues when setting up Storybook with a SvelteKit project. Storybook will throw an error when you start the server, like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_N_6oJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-error.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_N_6oJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-error.png" alt="storybook error" width="730" height="121"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This issue is thrown due to the property of the &lt;code&gt;‚Äútype‚Äù:‚Äùmodule‚Äù&lt;/code&gt; under the &lt;code&gt;package.json&lt;/code&gt; file, which means we cannot use ESM-required syntax.&lt;/p&gt;

&lt;p&gt;To overcome this, you can make a small tweak in the Storybook configuration files. Simply change the extension of your Svelte Storybook configuration files from &lt;code&gt;.js&lt;/code&gt; to &lt;code&gt;.jcs&lt;/code&gt; and inside the &lt;code&gt;main.cjs&lt;/code&gt; file, make sure you comment out the &lt;code&gt;svelteOptions&lt;/code&gt; property, which consists of a &lt;code&gt;require&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SYHP3rr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-configuration-files.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SYHP3rr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/storybook-configuration-files.png" alt="Storybook configuration files" width="378" height="694"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After making the above tweaks, you can run the command below to start the Storybook server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will open up a new tab in the browser that loads the Storybook app for our SvelteKit project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBPw0I2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-welcome-page.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBPw0I2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-welcome-page.png" alt="Storybook welcome page" width="730" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#factors-to-consider-before-building-components"&gt;
  &lt;/a&gt;
  Factors to consider before building components
&lt;/h2&gt;

&lt;p&gt;Consider the factors below before building components, as they will help us follow the proper guidelines.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#props-usage"&gt;
  &lt;/a&gt;
  Props usage
&lt;/h3&gt;

&lt;p&gt;The word ‚Äúprops'' is common to all major frameworks and libraries like Vue and React. Props pass data to child components or enable component communication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#slots-and-raw-slots-endraw-usage"&gt;
  &lt;/a&gt;
  Slots and &lt;code&gt;$$slots&lt;/code&gt; usage
&lt;/h3&gt;

&lt;p&gt;Even though props allow you to reuse components by passing data, it will bring a strict parent-child relationship. This means its HTML content will always control the child, and the parent is only capable of passing different values, so components can‚Äôt be composed together with props.&lt;/p&gt;

&lt;p&gt;This is where slots come in handy. Slots maintain reusability while allowing the parent component to control the content of the child, including the HTML elements inside it. By adding &lt;code&gt;&amp;lt;slots/&amp;gt;&lt;/code&gt;¬†tags, you can pass down HTML or markdown from the parents, not just the values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoiding-nested-and-global-css"&gt;
  &lt;/a&gt;
  Avoiding nested and global CSS
&lt;/h3&gt;

&lt;p&gt;When building components, avoid nested and global CSS because they will not be scoped, which means they will leak through to all child components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#handling-events"&gt;
  &lt;/a&gt;
  Handling events
&lt;/h3&gt;

&lt;p&gt;When building components, make sure you add or handle the proper events. You will have to use a Svelte API called &lt;code&gt;createEventDispatcher&lt;/code&gt;, which can be useful when dispatching events.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-components"&gt;
  &lt;/a&gt;
  Creating components
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs create some components for our library. First, remove the default &lt;code&gt;story&lt;/code&gt; folder generated by Storybook, and create a &lt;code&gt;stories&lt;/code&gt; file under the &lt;code&gt;src&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Next, we will focus on the project structure. Create a directory called &lt;code&gt;lib&lt;/code&gt; under the &lt;code&gt;src&lt;/code&gt; directory. This &lt;code&gt;lib&lt;/code&gt; directory is a special directory for SvelteKit because it will allow us to use a special notation called &lt;a href="https://kit.svelte.dev/docs#modules-%24lib"&gt;&lt;code&gt;$lib&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;$lib&lt;/code&gt; can be used to alias the &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt; directory and helps us to access components and utility modules without using relative paths like &lt;code&gt;../../../../ .&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#button-component"&gt;
  &lt;/a&gt;
  Button component
&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs create our button component under the &lt;code&gt;lib&lt;/code&gt; directory called &lt;code&gt;Button.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  import { createEventDispatcher } from 'svelte';

  export let primary = false;
  export let size = 'medium';
  export let label = '';

  const dispatch = createEventDispatcher();
   /**
   * Button click handler
   */
   function onClick(event) {
    dispatch('click', event);
  }
&amp;lt;/script&amp;gt;

&amp;lt;button
  type="button"
  class={['sveltio-button', `sveltio-button--${size}`,
   `sveltio-button--${primary?'primary':'secondary'}`].join(' ')
   }
  on:click={onClick}&amp;gt;
  {label}
&amp;lt;/button&amp;gt;

&amp;lt;style&amp;gt;
.sveltio-button {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
    border: 0;
    border-radius: 3px;
    cursor: pointer;
    display: inline-block;
    line-height: 1;
}
.sveltio-button--primary {
    color: #1b116e;
    background-color: #6bedb5;
}
.sveltio-button--secondary {
    color: #ffffff;
    background-color: #1b116e;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;
}
.sveltio-button--small {
    font-size: 12px;
    padding: 10px 16px;
}
.sveltio-button--medium {
    font-size: 14px;
    padding: 11px 20px;
}
.sveltio-button--large {
    font-size: 16px;
    padding: 12px 24px;
}

.sveltio-button--primary :hover {
    color: #1b116e;
    background-color: #55bd90;
}

.sveltio-button--primary :active {
    color: #1b116e;
    background-color: #55bd90;
    border: solid 2px #1b116e;
}

.sveltio-button--primary :disabled {
    color: #1b116e;
    opacity: 0.5;
    background-color: #6bedb5;
}

.sveltio-button--secondary :hover {
    color: #1b116e;
    background-color: #55bd90;
}

.sveltio-button--secondary :active {
    color: #1b116e;
    background-color: #6bedb5;
    border: solid 2px #1b116e;
}

.sveltio-button--secondary :disabled {
    color: #ffffff;
    opacity: 0.5;
    background-color: #1b116e;
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have added styles in the same file under the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs create a stories file for our Button component called &lt;code&gt;Button.stories.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Button from "./Button.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Button"
    component={Button}
    argTypes={{
      label: { control: "text" },
      primary: { control: "boolean" },
      backgroundColor: { control: "color" },
      size: {
        control: { type: "select", options: ["small", "medium", "large"] },
      },
      onClick: { action: "onClick" },
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Button {...args} on:click={args.onClick} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Primary"
    args={{
      primary: true,
      label: "Button",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Secondary"
    args={{
      label: "Button",
    }}
  /&amp;gt;
  &amp;lt;Story
    name="Large"
    args={{
      size: "large",
      label: "Button",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Small"
    args={{
      size: "small",
      label: "Button",
    }}
  /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have created several templates for our button component by passing several arguments to the templates.&lt;/p&gt;

&lt;p&gt;Now in the Storybook window, you will be able to see a button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4SF1IKdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-button.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4SF1IKdP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-button.png" alt="Storybook button" width="730" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can switch from the &lt;strong&gt;primary&lt;/strong&gt; button to the &lt;strong&gt;secondary&lt;/strong&gt; button from the controllers provided below. You can also clearly view the types of events that are available for this custom component from the &lt;strong&gt;Actions&lt;/strong&gt; logs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#toggle-component"&gt;
  &lt;/a&gt;
  Toggle component
&lt;/h3&gt;

&lt;p&gt;Now let‚Äôs create a toggle component. Start by creating the &lt;code&gt;Toggle.svelte&lt;/code&gt; and &lt;code&gt;Toggle.stories.svelte&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Toggle.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    export let label = '';
    export let isToggled = false;
    export let style = '';
&amp;lt;/script&amp;gt;

&amp;lt;label {style} class="sveltio-toggle-label"&amp;gt;
    &amp;lt;input type="checkbox" class="sveltio-input" bind:checked={isToggled} /&amp;gt;
    &amp;lt;div class="sveltio-toggle" /&amp;gt;
    {label}
&amp;lt;/label&amp;gt;

&amp;lt;style&amp;gt;
    .sveltio-toggle-label {
    --width: 40px;
    --height: calc(var(--width) / 2);
    --radius: calc(var(--height) / 2);
    display: flex;
}

.sveltio-toggle {
    position: relative;
    width: var(--width);
    height: var(--height);
    border-radius: var(--radius);
    border: solid 1px #c2c2c3;
    transition: background-color 0.3s ease;
    margin-right: 5px;
    background-color: var(--toggleBackgroundColor, #c2c2c3);
}

.sveltio-toggle::after {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    height: var(--height);
    width: var(--height);
    border-radius: var(--radius);
    background-color: var(--toggleButtonColor, #ffffff);
    box-shadow: 2px 4px 6px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease;
}
.sveltio-input {
    display: none;
}

.sveltio-input:checked + .toggle {
    background-color: var(--toggleCheckedBackgroundColor, #1b116e);
}

.sveltio-input:checked + .toggle::after {
    transform: translate3d(100%, 0, 0);
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Toggle.stories.svelte&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Toggle from "./Toggle.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Toggle"
    component={Toggle}
    argTypes={{
      label: { control: "text" },
      primary: { control: "boolean" },
      backgroundColor: { control: "color" },
      size: {
        control: { type: "select", options: ["small", "medium", "large"] },
      },
      onClick: { action: "onClick" },
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Toggle {...args} on:click={args.onClick} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Labeled"
    args={{
      primary: true,
      label: "Check me",
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Blank"
    args={{
      label: "",
    }}
  /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see how this component will be rendered in Storybook. This story consists of Two templates called &lt;strong&gt;Labeled&lt;/strong&gt; and &lt;strong&gt;Blank&lt;/strong&gt;, and will render two instances of the same component with different props or arguments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aK3q1A6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-toggle-component.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aK3q1A6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Storybook-toggle-component.png" alt="Storybook toggle component" width="730" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input-field-component"&gt;
  &lt;/a&gt;
  Input field component
&lt;/h3&gt;

&lt;p&gt;Finally, we will create an input field component with styling that shows pleasing colors for each state for the input.&lt;/p&gt;

&lt;p&gt;Write the following in your &lt;code&gt;Input.svelte&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { createEventDispatcher } from 'svelte';

    export let placeholder = '';
    export let label = '';
    export let disabled = false;

    export let state = "active";

    const dispatch = createEventDispatcher();

     /**
     * input change handler
     */
     function onChange(event) {
      dispatch('click', event);
    }
&amp;lt;/script&amp;gt;

&amp;lt;label &amp;gt;

    {#if label}
        &amp;lt;span class="sveltio-input-label"&amp;gt;{label}&amp;lt;/span&amp;gt;
    {/if}

    &amp;lt;input
    disabled={disabled}
    type="text"
    class={['sveltio-input',`sveltio-input--${state}`].join(' ')}
    placeholder={placeholder}
    &amp;gt;
&amp;lt;/label&amp;gt;

&amp;lt;style&amp;gt;
    .sveltio-input {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
    min-height: 25px;
    margin: 2px;
    border-radius: 3px;
    border: solid 2px #353637;
    background-color: #ffffff;
}

.sveltio-input ::focus {
    border: solid 2px #1b116e;
}

.sveltio-input--success {
    border: solid 2px #067d68;
}

.sveltio-input--error {
    border: solid 2px #a9150b;
}

.sveltio-input--disabled {
    color: #e4e3ea;
    border: solid 2px #e4e3ea;
}

.sveltio-input ::-webkit-input-placeholder {
    color: red;
}

.sveltio-input-label {
    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
}

&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, because we have created the &lt;code&gt;input&lt;/code&gt; component with its styling, let‚Äôs see how we can write stories for these components and how it renders. Here, we will pass in some arguments like &lt;code&gt;backgroundColor&lt;/code&gt; and &lt;code&gt;state&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Input.stories.svelte:&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    import { Meta, Template, Story } from "@storybook/addon-svelte-csf";
    import Input from "./Input.svelte";
  &amp;lt;/script&amp;gt;

  &amp;lt;Meta
    title="Sveltio/Input"
    component={Input}
    argTypes={{
      backgroundColor: { control: "color" },
      state: {
        control: { type: "select", options: ["active","success", "error"] },
      },
      onChange: { action: "onChange" },
      disabled:{ control: "boolean" }
    }}
  /&amp;gt;

  &amp;lt;Template let:args&amp;gt;
    &amp;lt;Input {...args} on:change={args.onChange} /&amp;gt;
  &amp;lt;/Template&amp;gt;

  &amp;lt;Story
    name="Active"
    args={{
      placeholder: "Text Input Active",
      state:"active"
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Success"
    args={{
      placeholder: "Text Input Success",
      state: "success",
    }}
  /&amp;gt;
  &amp;lt;Story
    name="Error"
    args={{
      placeholder: "Text Input Error",
      state: "error"
    }}
  /&amp;gt;

  &amp;lt;Story
    name="Disabled"
    args={{
      state: "disabled",
      disabled:true
    }}
  /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a similar manner, you can create other web components and create stories for other components to continue building your component library. You can find the whole code for the components we built through this &lt;a href="https://github.com/LMPerera/sveltio"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-with-sveltetestinglibrary-and-jest"&gt;
  &lt;/a&gt;
  Testing with svelte-testing-library and Jest
&lt;/h2&gt;

&lt;p&gt;One of the most critical aspects of developing web applications is running and maintaining tests for our components. With Svelte, the process of running tests is similar to what we get with React, Vue, or Angular.&lt;/p&gt;

&lt;p&gt;There are several tools to write and run tests like Mocha, Karma, Jasmine, and &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;. For this project, we will be using Jest as our test runner. However, even Jest falls slightly short, because we need to render our component and check how it's behaving after executing actions on them.&lt;/p&gt;

&lt;p&gt;For this purpose, we will be using a tool called &lt;a href="https://testing-library.com/"&gt;Testing Library&lt;/a&gt;. This tool helps us write tests as if a real user is working on the elements, and also supports all the major frontend frameworks and libraries.&lt;/p&gt;

&lt;p&gt;We will also use an additional plugin with Testing Library called &lt;a href="https://testing-library.com/docs/ecosystem-user-event/"&gt;user-event&lt;/a&gt;, which allows us to mimic user events, like typing inside an input or clicking on a button. We will also use a plugin called &lt;a href="https://testing-library.com/docs/ecosystem-jest-dom/"&gt;jest-dom&lt;/a&gt;, which extends the DOM-related matching capabilities of Jest, which we require because we are dealing with web components.&lt;/p&gt;

&lt;p&gt;Now let's install these libraries as dev dependencies in our project like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; jest babel-jest svelte-jester  @testing-library/svelte @testing-library/user-event @testing-library/jest-dom @testing-library/dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let‚Äôs add some configuration files to the root of our project. Starting with the &lt;code&gt;Jest.config.cjs&lt;/code&gt; file which holds the configurations for Jest and a &lt;code&gt;.babelrc&lt;/code&gt; with some presets for converting the files to ES2015 JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Jest.config.cjs&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    transform: {
        "^.+\\.js$": "babel-jest",
        "^.+\\.svelte$": "svelte-jester"
    },
    moduleFileExtensions: ['js', 'svelte'],
    moduleNameMapper: {
        '^\\$lib(.*)/pre&amp;gt;: '&amp;lt;rootDir&amp;gt;/src/lib$1',
        '^\\$app(.*)/pre&amp;gt;: [
            '&amp;lt;rootDir&amp;gt;/.svelte-kit/dev/runtime/app$1',
            '&amp;lt;rootDir&amp;gt;/.svelte-kit/build/runtime/app$1'
        ]
    },
    setupFilesAfterEnv: ["@testing-library/jest-dom/extend-expect"],
    testEnvironment: "jsdom"
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;.babelrc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;targets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;current&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}}]]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above test will check if the text is available in the button and do some assertions.&lt;/p&gt;

&lt;p&gt;Let‚Äôs add another test for the &lt;code&gt;Input&lt;/code&gt; file we have created. Let‚Äôs call this &lt;code&gt;Input.test.js&lt;/code&gt; under the &lt;code&gt;test&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/jest-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$lib/Input/Input.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input Has Placeholder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getByPlaceholderText&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Sveltio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByPlaceholderText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Sveltio&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above test will check if the input field consists of the placeholder we pass as a prop.&lt;/p&gt;

&lt;p&gt;Before we run these tests, we will add a small attribute called &lt;code&gt;‚Äútest‚Äù:‚Äùjest‚Äù&lt;/code&gt; under &lt;code&gt;scripts&lt;/code&gt; to the &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now all you have to do is run the following command in the project root:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pllXdqCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Jest-button-test-pass.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pllXdqCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/Jest-button-test-pass.png" alt="Jest button test" width="730" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this, you can maintain unit tests that will improve the quality of your components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#packaging-and-publishing-to-npm"&gt;
  &lt;/a&gt;
  Packaging and publishing to npm
&lt;/h2&gt;

&lt;p&gt;Now it‚Äôs time to publish your project to the world! There are several tools that can be used to export your components as a package, but we will be using a cool feature that comes built in to SvelteKit. First, add this attribute to the &lt;code&gt;package.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"package"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"svelte-kit package"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all you have to do is run the following from the root of the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you didn‚Äôt initialize a TypeScript SvelteKit project, you will need to install a dependency called &lt;code&gt;svelte2tsx&lt;/code&gt;, which converts the Svelte component source into TSX.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This command will take all the files that are under the &lt;code&gt;src/lib&lt;/code&gt; folder and make them available as a package. This command generates a new directory called &lt;code&gt;package&lt;/code&gt; at the root of your project, and inside this, you will notice that there is a new &lt;code&gt;package.json&lt;/code&gt; file. This file consists of an attribute called &lt;code&gt;exports&lt;/code&gt;, which consists of all the paths or entry points to the individual components that we have developed.&lt;/p&gt;

&lt;p&gt;Enter the following code into the &lt;code&gt;package.json&lt;/code&gt; file under the &lt;code&gt;package&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"sveltio"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="err"&gt;//some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dependencies&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./package.json"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./package.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Button.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Button/Button.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Input.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Input/Input.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Modal.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Modal/Modal.svelte"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"./Toggle.svelte"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"./Toggle/Toggle.svelte"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your library consists of files like &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.js&lt;/code&gt; or &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.svelte&lt;/code&gt;, it will be treated as the package root. This makes it much easier to use the components of our library as ES module imports.&lt;/p&gt;

&lt;p&gt;For example, if you had an &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;Button.svelte&lt;/code&gt; component and an &lt;code&gt;src&lt;/code&gt;/&lt;code&gt;lib&lt;/code&gt;/&lt;code&gt;index.js&lt;/code&gt; module that re-exported it, a consumer of your library could do either of the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import &lt;span class="o"&gt;{&lt;/span&gt; Button &lt;span class="o"&gt;}&lt;/span&gt; from &lt;span class="s1"&gt;'your-library'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import Button from &lt;span class="s1"&gt;'your-library/Button.svelte'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have created a package using SvelteKit, it‚Äôs time to publish it as an npm module. All you need to do is to execute the following command from the root of the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm publish ./package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will publish the package we have created using SvelteKit. Make sure that the package name and package version combination don‚Äôt exist already; if so, the package will not be published on npm.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You can see why SvelteKit deserves more attention in the developer community. SvelteKit has fantastic features packed in, and creating packages is quite easy. With tools like Storybook and Jest, creating a component in isolation and maintaining tests for components is simple and efficient. For more information, please go through the SvelteKit &lt;a href="https://kit.svelte.dev/docs"&gt;documentation&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and &lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>It works </title>
      <author>Tom Smykowski</author>
      <pubDate>Tue, 09 Nov 2021 17:11:36 +0000</pubDate>
      <link>https://dev.to/tomaszs2/it-works-5dd1</link>
      <guid>https://dev.to/tomaszs2/it-works-5dd1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WN7Nvi4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anmasjn5uw0c2u2g29bd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WN7Nvi4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anmasjn5uw0c2u2g29bd.jpg" alt="Image description" width="700" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The 6 November Frontend tips about a11y and UX</title>
      <author>Stas Melnikov</author>
      <pubDate>Tue, 09 Nov 2021 17:10:41 +0000</pubDate>
      <link>https://dev.to/melnik909/the-6-november-frontend-tips-about-a11y-and-ux-1i9l</link>
      <guid>https://dev.to/melnik909/the-6-november-frontend-tips-about-a11y-and-ux-1i9l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#focus-moving-is-underestimated"&gt;
  &lt;/a&gt;
  Focus moving is underestimated
&lt;/h2&gt;

&lt;p&gt;We don't think about what to do with focus when we design elements that appear after user actions. Or, more specifically, we just do nothing. Therefore there are 2 problems.&lt;/p&gt;

&lt;p&gt;Firstly, we cut off the possibility of more quick interaction. For example, when we log in on Groupon we have to focus on the input field to start filling in the form.&lt;/p&gt;

&lt;p&gt;Instead, when we go through the same case on Pinterest focus moves to the first input field automatically. So we can start filling in the form without additional actions. &lt;/p&gt;

&lt;p&gt;Secondly, if users have vestibular disabilities login becomes an impossible task because in this case, they lost the possibility of using a keyboard. For example, when we push on the sign in button on Groupon focus doesn't move inside of the form. It's lost just.&lt;/p&gt;

&lt;p&gt;For these reasons, we have to design our interfaces with the thought of how focus should move. In this case, our interfaces will be accessible for more users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gxh5LzBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/b9df71dad9504ae9aa978215dd7d44c3/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DMuX-fP5TefycieyyKFrbv7RThcQijj-Qdt1vtcpS1gU%253D" alt="Focus doesn't move inside modal on Groupon website when we push the sign in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PgK-5Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58254310/1874e90a676c41f482de193ef7e1cae4/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3D2yC7bx6K0r5rE-pP6aTvxCIcDUEsP4oMJEx7Krf0QoA%253D" alt="Focus moves on the first input box on Pinterest website when we push the log in button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-a-main-and-additional-goal-when-we-work-with-focus"&gt;
  &lt;/a&gt;
  Thinking about a main and additional goal when we work with focus
&lt;/h2&gt;

&lt;p&gt;Did you think sometimes about how better to move focus when users open elements such as modals or dialogs? &lt;/p&gt;

&lt;p&gt;I think there is a main and additional goal when we work with focus. The main goal is what users want to do after moving focus for reaching their goals using a minimal number of actions. An additional is what they can do something else.&lt;/p&gt;

&lt;p&gt;Let's consider what I mean using the case of selecting a language on Booking. If we push the button of selecting a language we'll see modal with languages. &lt;/p&gt;

&lt;p&gt;Focus will move on the close button. Nice what we can close modal by pushing the enter key. But is that why we open the modal? No, we wanted to select a language. That's the main goal. And closing a modal is an additional goal.&lt;/p&gt;

&lt;p&gt;Now let's look at what Booking suggests for selecting a language. If we use only a keyboard we have to use the tab, ‚Üë or ‚Üì keys to start moving between languages. &lt;/p&gt;

&lt;p&gt;Then we push the same keys again until we find the necessary option.  If we push the enter key we'll select a language. Well, that's a nice solution but I want to suggest another. &lt;/p&gt;

&lt;p&gt;We have already identified that users open the modal because they want to select a language. It's the main goal. So we should give that to them. I think we can do that if we move focus on the current language. &lt;/p&gt;

&lt;p&gt;Then we should make the possibility of moving between languages using tab, ‚Üë, ‚Üí,  ‚Üì or ‚Üê keys immediately. The selection of a language we'll make using the enter key.  Also, we'll save the possibility of closing the modal using the Esc key like Booking made.&lt;/p&gt;

&lt;p&gt;I hope I was able to pass on the importance of defining a main and additional goal when you work with focus. Please, think about it and your interfaces will be user-friendly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLR_z_8u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/29d37053a3714b5b82fdfa9f59a1f71c/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3Dy99ufbBUtwd8BUpGWRGF1zidhd2HQB9t4VMZJnv8bZc%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLR_z_8u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/29d37053a3714b5b82fdfa9f59a1f71c/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3Dy99ufbBUtwd8BUpGWRGF1zidhd2HQB9t4VMZJnv8bZc%253D" alt="Focus moves on the close button on Booking website when we push the selection of a language button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T53dPD_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/d1869110e74e47caad750f372fd18b17/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DB4b8DQrBWxBSqWdPYWMI-vIUd6K9XQGXY8hYM0UZUso%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T53dPD_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/58465126/d1869110e74e47caad750f372fd18b17/1.jpg%3Ftoken-time%3D1637712000%26token-hash%3DB4b8DQrBWxBSqWdPYWMI-vIUd6K9XQGXY8hYM0UZUso%253D" alt="Focus moves on the current language on Booking website when we push the selection of a language button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt="" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#where-are-the-buttons-here"&gt;
  &lt;/a&gt;
  Where are the buttons here?
&lt;/h2&gt;

&lt;p&gt;Unfortunately, designers and developers don't know the importance of using the button element for any elements for which users can click. So why is that important?&lt;/p&gt;

&lt;p&gt;Yes, by default click applies on any elements. But not all users use a mouse for interaction with UI. For example, some users want to use tab, enter and space keys for interaction with UI. &lt;/p&gt;

&lt;p&gt;If we think about users of screen readers they can't interact with UI if button elements aren't on the page. &lt;/p&gt;

&lt;p&gt;So if you want to create an element by which users will click, please, make it is a button. &lt;/p&gt;

&lt;p&gt;For inspiration, I collected a few examples where the button element will be helpful. As a result, users will get a more user-friendly web interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cFP-1RfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/57394376/e15dcab999b0459cb6341f370c73c32a/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DafeXIOr2WFoLscg-HWErfvhNb44hMyoBY5jDfhu0aFI%253D" alt="All dates inside a calendar are buttons" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G52erXTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/81e352bb434747368259abb64bb60192/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DwKox3i0AZcg9AidPHEBlfco88LVTX5B37b3rP9w_FvQ%253D" alt="The button for clearing selected dates inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE7VsoCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/975142f987d249fea31cf6bfaecf112f/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DJtTF9f4zus9ce3HiMel5vXGXukm-1OdiLCYN1yVjVP0%253D" alt="The toggle on a previous month inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aznxhJmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/ce0d494c321d4415b8cfad42d350e339/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DLsiNIl0tnfUBiDViu10y8TqvnSSSiQZPVts1rNy1XvY%253D" alt="The toggle on a next month inside a calendar is a button" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SBRPEhZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJxIjoxMDAsIndlYnAiOjB9/patreon-media/p/post/57394376/e6ac857309b94b6297d8f8ffa52c4438/1.jpg%3Ftoken-time%3D1635811200%26token-hash%3DNI9XILGhD9eLhUzvGCbezoZPP6TOG_f-mzZ-1qgGXKA%253D" alt="All points that mark apartaments on a map are buttons" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
Folks, I love to share my tips with you. I do that with the help of donations from my sponsors since content creating is my full-time job.&lt;/p&gt;

&lt;p&gt;For this reason I ask you to join my sponsors if you like what I do &lt;br&gt;
&lt;a href="https://www.patreon.com/melnik909"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0zkeHmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3IjoxOTIwLCJ3ZSI6MX0%253D/patreon-media/p/campaign/2871133/09751df69a6d4a3990d4f6a2fb77340f/19.jpg%3Ftoken-time%3D1633305600%26token-hash%3DF2s9h-8VI8cZLJiiUalO1rewbCh6FPD_Qyepp1C7Aiw%253D" alt="" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/melnik909"&gt;Go to Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ù§ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos.&lt;/p&gt;

&lt;p&gt;üëÄ Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>ux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Are The Different Roles In The Cloud? A Beginners Guide.</title>
      <author>Lou (üöÄ Open Up The Cloud ‚òÅÔ∏è)</author>
      <pubDate>Tue, 09 Nov 2021 17:08:00 +0000</pubDate>
      <link>https://dev.to/aws-builders/what-are-the-different-roles-in-the-cloud-a-beginners-guide-41ha</link>
      <guid>https://dev.to/aws-builders/what-are-the-different-roles-in-the-cloud-a-beginners-guide-41ha</guid>
      <description>&lt;p&gt;If you‚Äôre new to the cloud industry, it‚Äôs likely you‚Äôre feeling overwhelmed by all the routes and roles to get you into the cloud industry, right? I speak to many people new to the cloud industry every day, and ‚Äúwhat are the different roles in cloud?‚Äù is a very common question that I get asked.&lt;/p&gt;

&lt;p&gt;Today, I‚Äôll take you through some of the most popular roles in cloud, covering: how much they earn, how technical the roles are (e.g. if they write code, how much), and if the role is suitable for a beginner and why. Then, in the end, I‚Äôll make you some recommendations about where I suggest you should start.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAH17wIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://openupthecloud.com/wp-content/uploads/2021/10/which-cloud-role-is-the-best-760x426.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAH17wIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://openupthecloud.com/wp-content/uploads/2021/10/which-cloud-role-is-the-best-760x426.png" alt="" width="760" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the different job roles in the cloud industry?&lt;/strong&gt; Cloud Architect, Site Reliability Engineer (SRE), Cloud Engineer, Software Engineer, Data Engineer, DevOps, Product Manager, Quality Assurance, and Cloud Support Engineer.&lt;/p&gt;

&lt;p&gt;Let‚Äôs start to break these roles down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-roles-compared"&gt;
  &lt;/a&gt;
  Cloud Roles Compared
&lt;/h2&gt;

&lt;p&gt;To make things easier, here‚Äôs an overview of the different roles. I created this visualization so you can easily compare different aspects across the different roles, understanding how much the roles can earn, how much coding is usually involved, and if the role is (generally speaking) suitable for a beginner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pkg00fyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://openupthecloud.com/wp-content/uploads/2021/10/cloud-role-infographic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pkg00fyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://openupthecloud.com/wp-content/uploads/2021/10/cloud-role-infographic.png" alt="Visualisation of the different roles in cloud: Cloud architect, site reliability engineer, cloud engineer, software engineer, data engineer, devops, product manager, quality assurance engineer, cloud support engineer" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, to make this visualization, I had to make some generalizations, and of course, there always are exceptions and things that ‚Äúit depends‚Äù on, so let‚Äôs dive into the details of the different roles to understand them better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-architect"&gt;
  &lt;/a&gt;
  Cloud Architect
&lt;/h2&gt;

&lt;p&gt;Responsible for the high-level design of software systems. An architect usually requires deep expertise in the many technologies that they use in order to facilitate considered decisions. Architects usually start their careers in other roles, like software engineering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; High, $137K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-cloud-architect-salary-SRCH_IL.0,2_IN1_KO3,18.htm"&gt;Source&lt;/a&gt;) ‚Äì Due to the wide impact the architect can have on a company, and the depth of skills that are often required, the earning potential for cloud architects is typically high. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much code?&lt;/strong&gt; Low ‚Äì An architect usually is not required to write much code in the day-to-day. However, an architect is often expected to keep up-to-date with trends in the industry, to ensure they make informed decisions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Low ‚Äì Due to the depth of knowledge required, architecture is often a difficult role for those new to the tech industry. There are some exceptions where larger companies, such as the cloud providers offer schemes to help less experienced candidates step into the architect role (&lt;a href="https://www.amazon.jobs/en/landing_pages/AWS-techu"&gt;such as AWS Tech U&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#site-reliability-engineer-sre"&gt;
  &lt;/a&gt;
  Site Reliability Engineer (SRE)
&lt;/h2&gt;

&lt;p&gt;Ensures reliability and stability of software systems. The SRE spends their time gathering data about the systems they operate through ‚Äútelemetry‚Äù. The SRE role suits those who like data and investigations. SRE‚Äôs are also responsible for configuring and creating processes around responding to incidents or outages, which makes the role also quite people-focussed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; High, $128K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-site-reliability-engineer-salary-SRCH_IL.0,2_IN1_KO3,28.htm"&gt;Source&lt;/a&gt;) ‚Äì SRE‚Äôs are required to have deep knowledge of the systems they operate, write code, influence stakeholders, and set up processes, all of which can make the SRE role quite challenging, and as a result, compensation is high. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much code?&lt;/strong&gt; Medium ‚Äì SRE‚Äôs might not write as much code as a typical software engineer, but they certainly write code. Knowledge of how underlying applications are created is essential to an SRE, to allow them to instrument and support those systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Medium ‚Äì Whilst an SRE is a technical role, it is feasible for a beginner to aim to land a role as an SRE as some companies will offer junior positions and be willing to train an SRE. However, due to it‚Äôs technical nature, it‚Äôs not an easy role or skillset to pick up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#software-engineer"&gt;
  &lt;/a&gt;
  Software Engineer
&lt;/h2&gt;

&lt;p&gt;There are many flavors of software engineer, those who work on user interfaces, and those who work on backend systems moving about data and building application programming interfaces (APIs).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; Medium, $108K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-software-engineer-salary-SRCH_IL.0,2_IN1_KO3,20.htm?clickSource=searchBtn"&gt;Source&lt;/a&gt;) ‚Äì Compensation for software engineers varies depending on the type of role and company, but generally, the earning potential is quite high. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; High ‚Äì Out of all the roles in cloud, the software engineer has the most technical and in-depth coding knowledge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Medium ‚Äì Whilst it‚Äôs not easy to land a job as a software engineer, it is one of the most well-documented routes into tech and the cloud industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-engineer"&gt;
  &lt;/a&gt;
  Cloud Engineer
&lt;/h2&gt;

&lt;p&gt;A cloud engineer manages and maintains a companies cloud accounts, and builds shared cloud components. A cloud engineer guides other software engineers and their business on cloud best practices. A cloud engineer is usually required to code, but more often ‚Äúinfrastructure as code‚Äù than application code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; High, $111K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-cloud-engineer-salary-SRCH_IL.0,2_IN1_KO3,17.htm?clickSource=searchBtn"&gt;Source&lt;/a&gt;) ‚Äì The cloud industry is constantly changing, and keeping up can be a challenge, which is why the cloud engineer role is also highly compensated. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; High ‚Äì The cloud engineer is very hands-on with writing code. Cloud engineers will often write more ‚Äúinfrastructure as code‚Äù than application code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Medium ‚Äì A cloud engineer is a highly technical role, but some companies will offer junior positions. The skillset for a cloud engineer can vary dependent on the technologies used in the company.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devops-engineer"&gt;
  &lt;/a&gt;
  DevOps Engineer
&lt;/h2&gt;

&lt;p&gt;The DevOps role is often quite varied in expectation and can involve tasks similar to that of a cloud engineer, SRE, or platform engineer. However, in some cases, the DevOps engineer is considered responsible for the delivery and operation of software systems, which typically means working on build and deployment (often called CI or CI/CD pipelines).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; High, $105K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-devops-engineer-salary-SRCH_IL.0,2_IN1_KO3,18.htm"&gt;Source&lt;/a&gt;) ‚Äì A DevOps engineer is sometimes a jack-of-all-trades, requiring skills in many different areas of the tech stack. Due to the high skill requirement, the compensation is high. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; High ‚Äì Much like a cloud engineer or SRE, the DevOps engineer won‚Äôt write much application code, instead, they will typically write more infrastructure as code, and build and deploy pipeline configurations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Medium ‚Äì DevOps can be a challenging role to apply for, due to the varying interpretation of the role, however, by building the right skills, it is possible to land a job as a DevOps engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-engineer"&gt;
  &lt;/a&gt;
  Data Engineer
&lt;/h2&gt;

&lt;p&gt;A data engineer is responsible for handling a companies data, and putting it to strategic use. Company data is often used to create company insights to guide decision-making, or the data could form part of the product or services of the company itself. It‚Äôs the data engineer‚Äôs job to help get that data from its source, cleaned up, and structured for analysis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; High, $112K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-data-engineer-salary-SRCH_IL.0,2_IN1_KO3,16.htm"&gt;Source&lt;/a&gt;) ‚Äì Data engineers need knowledge of the systems they are extracting data from, understanding of how to build data pipelines, and analytics. Due to the highly technical nature of the job, the compensation is high. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; High ‚Äì Data engineers certainly will write code. Data engineers will need to understand how databases are structured and queried, and will need to write code that sanitizes, structures or moves data around.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Medium ‚Äì Whilst a strongly technical role, some companies will offer junior positions working as a data engineer, working on a subset of systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quality-assurance-engineer"&gt;
  &lt;/a&gt;
  Quality Assurance Engineer
&lt;/h2&gt;

&lt;p&gt;A quality assurance (QA) engineer is responsible for ensuring that newly created versions of software work as expected. Depending on the role, some QA engineers work manually to verify applications, whilst others will work in a highly automated fashion, writing code to test applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; Low, $84K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-quality-assurance-engineer-salary-SRCH_IL.0,2_IN1_KO3,29.htm"&gt;Source&lt;/a&gt;) ‚Äì Some QA engineers, especially those working with automation, can command high salaries. However, due to the fact that some roles have a manual element, which can be low-skilled, the compensation on average is lower than for other roles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; Low ‚Äì Some QA engineers work on automation and write a lot of code, however, there are many QA roles requiring only a limited understanding of software and programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; High ‚Äì Due to some QA roles working with manual verification, the QA role can be easier to land than others. In some cases, it will be possible to learn some automation and whilst working, and eventually move into more technical positions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloud-support-engineer"&gt;
  &lt;/a&gt;
  Cloud Support Engineer
&lt;/h2&gt;

&lt;p&gt;Cloud support engineers work to resolve customer queries. Support roles are often created to ease the pressure between customer requests, and the busier, more technical members of the business, such as software engineers. Depending on the role, some technical skills may be required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíµ Earning potential?&lt;/strong&gt; Low, $85K USD (&lt;a href="https://www.glassdoor.co.uk/Salaries/us-cloud-support-salary-SRCH_IL.0,2_IN1_KO3,16.htm?clickSource=searchBtn"&gt;Source&lt;/a&gt;) ‚Äì Due to the lower technical requirements of the cloud support engineer, the total compensation is lower than for other roles. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üíª How much coding?&lt;/strong&gt; Low ‚Äì Very little, or often no coding is required to become a cloud support engineer. An understanding of the companies product is usually required, which might be technical, and there may be some interaction with some cloud services in order to complete the role.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üë∂ Suitable for a beginner?&lt;/strong&gt; Cloud Support is one of the most popular roles entry-level roles to the cloud industry due to the lower barriers to entry. One criticism of the support role is that sometimes positions do not give much exposure, or room for learning and growing as expected.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-role-in-the-cloud-is-best-for-a-beginner"&gt;
  &lt;/a&gt;
  Which Role In The Cloud Is Best For A Beginner?
&lt;/h2&gt;

&lt;p&gt;Naturally, the next question you might have is: ‚Äúwhich role is best?‚Äù&lt;/p&gt;

&lt;p&gt;But that‚Äôs a very difficult question to answer.&lt;/p&gt;

&lt;p&gt;I‚Äôve met people who have broken into the cloud industry through every role listed here. I see many people enter the industry via the support role, due to the low barrier to entry, however that shouldn‚Äôt put you off aspiring to take on a more technical role such as a software engineer or cloud engineer.&lt;/p&gt;

&lt;p&gt;If you think some of the roles here might suit you, what I‚Äôd suggest your next step is: start to look through different job descriptions, which should start to give you an idea about the skills required and create a learning plan.&lt;/p&gt;

&lt;p&gt;Because I recommend this approach so often, I put together a YouTube video going through 100 Cloud Engineer job descriptions to show how I‚Äôd do it.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IjYo-LS6lVY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope that helped to start you off on your journey to understand the different roles in the cloud industry, do your research, reach out to people already in the industry, and make a decision that‚Äôs right for you.&lt;/p&gt;

&lt;p&gt;If you‚Äôre looking for &lt;a href="https://openupthecloud.com/recommended-resources/"&gt;resources to get into the cloud industry&lt;/a&gt;, I‚Äôve collated some of my favorites here.&lt;/p&gt;




&lt;p&gt;Hey! üëã If we haven't met, let me introduce myself, I'm &lt;a href="https://twitter.com/loujaybee"&gt;Lou&lt;/a&gt;, and I created &lt;em&gt;&lt;a href="http://thedevcoach.co.uk/"&gt;Open Up The Cloud&lt;/a&gt;&lt;/em&gt; to help you get your start, and grow your career in cloud üöÄ. &lt;/p&gt;

&lt;p&gt;If you're interested in cloud, the best way to keep up-to-date with news, and everything I publish is via the &lt;a href="http://newsletter.thedevcoach.co.uk/"&gt;monthly cloud newsletter&lt;/a&gt;. And find &lt;em&gt;Open Up The Cloud&lt;/em&gt; on &lt;a href="https://www.youtube.com/channel/UCAklaE5D59xWtip-3Jwa7xA"&gt;YouTube&lt;/a&gt;, &lt;a href="https://twitter.com/openupthecloud"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/openupthecloud"&gt;Instagram&lt;/a&gt;... wherever you like to hang out! üòÑ&lt;/p&gt;

&lt;p&gt;The post &lt;a href="https://openupthecloud.com/cloud-roles-explained/"&gt;What Are The Different Roles In The Cloud? A Beginners Guide.&lt;/a&gt; appeared first on &lt;a href="https://openupthecloud.com"&gt;Open Up The Cloud&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>career</category>
    </item>
    <item>
      <title>because copy &amp; paste is tough</title>
      <author>Matthew Foley</author>
      <pubDate>Tue, 09 Nov 2021 17:05:32 +0000</pubDate>
      <link>https://dev.to/mtfoley/because-copy-paste-is-tough-3f3o</link>
      <guid>https://dev.to/mtfoley/because-copy-paste-is-tough-3f3o</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/arp7Pkw2fmdwc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/arp7Pkw2fmdwc/giphy.gif" alt="copy and paste is tough" width="396" height="338"&gt;&lt;/a&gt;&lt;br&gt;
Following up on my &lt;a href="https://dev.to/mtfoley/sifting-thru-the-types-5e2p"&gt;post last week&lt;/a&gt; about the first aspect of &lt;a href="https://github.com/open-sauced/explore.opensauced.pizza/pull/2"&gt;a PR&lt;/a&gt; contribution to &lt;a href="//open-sauced/explore.opensauced.pizza"&gt;explore.opensauced.pizza&lt;/a&gt;, I'm going to talk about the second aspect of that PR - joyfully implemented as an HTML &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element (I really like these).&lt;/p&gt;

&lt;p&gt;So as I mentioned in the post before:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We also wanted to let users quickly reproduce the queries we use in Open Sauced... this way, when its time to iterate on an existing feature, there's very little friction to finding that starting point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;About a week before this, I had been working on a &lt;a href="https://github.com/open-sauced/open-sauced/pull/1101"&gt;PR&lt;/a&gt; for tabulating the GraphQL API calls in the Open Sauced docs, so a lot of the details about API calls were pretty fresh. &lt;/p&gt;

&lt;p&gt;Side note, if you want line breaks inside a table in markdown, you'll need to use a &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; element, but don't forget to use a self closing tag in the event your markdown file is parsed and used by a tool like Docusaurus, &lt;a href="https://github.com/open-sauced/open-sauced/pull/1104"&gt;:cough, cough:&lt;/a&gt;. Shout out to &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt;
 for cleaning up my messes!&lt;/p&gt;

&lt;p&gt;Anywho, after looking around at GraphiQL implementations, I came to the belief that most define a fetcher with the correct API endpoint/headers and otherwise things just work out of the box.  Once the introspection query is run and the schema parsed and validated, the combination of the Explorer pane and the Query Editor pane make it really easy to build up and run valid queries. There's also a common pattern of using a default query so when the client first loads up, the query is pre-populated. What these two don't help with is reproducing and working with &lt;em&gt;multiple&lt;/em&gt; queries.&lt;/p&gt;

&lt;p&gt;The approach I wound up taking was to store all of the dynamic queries in an object, and then generate a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element in the toolbar, which updates the query contents and query name with the &lt;code&gt;onchange&lt;/code&gt; event. Here's the piece of code that does the job...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GraphiQL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Toolbar&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;
        &lt;span class="na"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleEditQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Queries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleEditOperationName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Choose a Query&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Queries&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ALL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMutation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Queries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mutation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMutation&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(Mutation) &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    // ...
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GraphiQL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Toolbar&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's a screenshot of what it does.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nVy8k1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4il1y1gya6le6eptok8a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nVy8k1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4il1y1gya6le6eptok8a.png" alt="graphiql screenshot" width="841" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The thing I still want to see work for this repo is supporting persisted queries - really just for the &lt;a href="https://docs.opensauced.pizza/technical/fetching-data-from-github/#use-of-api-in-components"&gt;sake of completeness&lt;/a&gt;.  I have some ideas on how to do it, but perhaps someone reading has done this before?&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to create your own cryptocurrency with JavaScript</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 09 Nov 2021 17:03:05 +0000</pubDate>
      <link>https://dev.to/logrocket/how-to-create-your-own-cryptocurrency-with-javascript-1ai9</link>
      <guid>https://dev.to/logrocket/how-to-create-your-own-cryptocurrency-with-javascript-1ai9</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/atharvadeosthale/"&gt;Atharva Deosthale&lt;/a&gt;&lt;/strong&gt; ‚úèÔ∏è&lt;/p&gt;

&lt;p&gt;Nowadays, there are a lot of methods to send money digitally to someone else. Most of the ways are through a bank or some wallets, but recently, using cryptocurrency has become popular.&lt;/p&gt;

&lt;p&gt;Cryptocurrency is a great way to send money anonymously to others. Another advantage of cryptocurrencies is that their network is decentralized, which means there‚Äôs no one looking over the transaction, and there‚Äôs no middleman. Some people think this is not good because most scammers operate on cryptocurrencies, but some think that this is another step towards privacy.&lt;/p&gt;

&lt;p&gt;Today, we are going to create a cryptocurrency using JavaScript. Hopefully, this article will give you a basic idea of how to create your own cryptocurrency, and you can continue to work on these skills for improving privacy in your finances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/optimize-node-js-performance-with-clustering/"&gt;Node.js&lt;/a&gt;¬†installed on your machine&lt;/li&gt;
&lt;li&gt;  A code editor (I prefer &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Working knowledge of Node&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can always refer to the &lt;a href="https://github.com/atharvadeosthale/cryptocurrency-blog"&gt;GitHub repository&lt;/a&gt; if you want to have a look at the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs get started by creating a Node project. Navigate to a safe directory and enter the following command to create a new project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should generate a &lt;code&gt;package.json&lt;/code&gt; file for you. If the file is created, then the project is created.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs create a new file called &lt;code&gt;index.js&lt;/code&gt;. First, import the &lt;a href="https://nodejs.org/api/crypto.html#crypto"&gt;&lt;code&gt;crypto&lt;/code&gt;&lt;/a&gt;¬†package so that we can deal with hashes in our project. The &lt;code&gt;crypto&lt;/code&gt; package helps us to work with hashes, signatures, and keys. It allows us to perform cryptographic conversion in Node.&lt;/p&gt;

&lt;p&gt;This is a pre-installed package with Node, so you don‚Äôt need to install it separately:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;crypto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will be dealing with four classes in these projects. They are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;Transaction&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;Block&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;Chain&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;Wallet&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First let‚Äôs create the &lt;code&gt;Transaction&lt;/code&gt; class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-raw-transaction-endraw-class"&gt;
  &lt;/a&gt;
  Creating the &lt;code&gt;Transaction&lt;/code&gt; class
&lt;/h2&gt;

&lt;p&gt;The basic properties of a transaction will be the &lt;code&gt;amount&lt;/code&gt;, &lt;code&gt;senderPublicKey&lt;/code&gt;, and &lt;code&gt;recieverPublicKey&lt;/code&gt;. So let‚Äôs set up a constructor for the properties so that we can use the class later:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;senderPublicKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need a method to convert the object of the class into a string so as to convert it into a hash. So, we will create a function to convert the object to string for later use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your complete &lt;code&gt;Transaction&lt;/code&gt; class should look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;senderPublicKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// convert the data of the class to json so that&lt;/span&gt;
  &lt;span class="c1"&gt;// it can be converted into a hash&lt;/span&gt;
  &lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now store these transactions inside a block, which we will create next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-raw-block-endraw-class"&gt;
  &lt;/a&gt;
  Creating the &lt;code&gt;Block&lt;/code&gt; class
&lt;/h2&gt;

&lt;p&gt;The term ‚Äúblockchain‚Äù means exactly what it sounds like - a chain of blocks. The chain is the collection of blocks (that contain the transactions) linked to each other so that we can access them in a systematic manner.&lt;/p&gt;

&lt;p&gt;To get things started, let‚Äôs set up the constructors and properties we will be using with the &lt;code&gt;Block&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previousHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a block, we will have &lt;code&gt;previousHash&lt;/code&gt; (the¬†hash of previous block on the chain), &lt;code&gt;transaction&lt;/code&gt; (the object of class &lt;code&gt;Transaction&lt;/code&gt;), and &lt;code&gt;timestamp&lt;/code&gt; (the time the block was created).&lt;/p&gt;

&lt;p&gt;Now, let‚Äôs create a function to generate a hash of the block:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getHash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SHA256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Firstly, we convert the object into JSON format. Then, we create a &lt;code&gt;SHA256&lt;/code&gt; hash, which is a hashing method that cannot be decrypted. We use the hash to verify the blocks later; it provides legitimacy for a block once a hash is verified.&lt;/p&gt;

&lt;p&gt;Next, we add the JSON as the data so that it gets converted to a &lt;code&gt;SHA256&lt;/code&gt; hash. Finally, we create a &lt;code&gt;HEX&lt;/code&gt; digest for the hash and we return it.&lt;/p&gt;

&lt;p&gt;Now again, we create a function to convert the block object into JSON:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your complete &lt;code&gt;Block&lt;/code&gt; class should now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previousHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;getHash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SHA256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hex&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let‚Äôs create the &lt;code&gt;Chain&lt;/code&gt; class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-raw-chain-endraw-class"&gt;
  &lt;/a&gt;
  Creating the &lt;code&gt;Chain&lt;/code&gt; class
&lt;/h2&gt;

&lt;p&gt;Now that we have our &lt;code&gt;Block&lt;/code&gt; class ready, we can fill in those blocks in a &lt;code&gt;Chain&lt;/code&gt;. A chain holds every block, or every transaction, that takes place on the blockchain. As discussed before, a blockchain contains all the blocks linked to each other, and our project needs a &lt;code&gt;Chain&lt;/code&gt; class in order to keep all the blocks together in one place.&lt;/p&gt;

&lt;p&gt;Because we only need to initialize the chain once and not multiple times, we will initialize it right away in the class itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Chain&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Chain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs set up our constructor so that we have the first block ready in the chain whenever the program is run. This will also set up the array where our blocks are placed.&lt;/p&gt;

&lt;p&gt;We do this to eliminate any errors in our project, because we depend on the previous block in parts of our code, so we need a dummy block initialized at first:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;temp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;temp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we need a function to get the last hash of the chain, in order to use the information in new blocks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getPreviousBlockHash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// sending the entire block itself&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getHash&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let‚Äôs create a function that will actually create and insert a block into our chain array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;insertBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create verifier&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createVerify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SHA256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// add the transaction JSON&lt;/span&gt;
  &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="c1"&gt;// Verify it with the sender's public key&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPreviousBlockHash&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Block added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are first using the &lt;code&gt;createVerify&lt;/code&gt; function from the &lt;code&gt;crypto&lt;/code&gt; package to verify hashes with the public keys. We then use the data from the JSON of a particular transaction, and finally verify by providing the sender‚Äôs public key and the signature.&lt;/p&gt;

&lt;p&gt;This will return a boolean value that we can use to check if verification was successful or failed. If the verification was successful, we simply create a new block with that information and add it to the chain array.&lt;/p&gt;

&lt;p&gt;Now your &lt;code&gt;Chain&lt;/code&gt; class should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Chain&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Chain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// initializing our chain with no records&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;temp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;temp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;getPreviousBlockHash&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// sending the entire block itself&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getHash&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;insertBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create verifier&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createVerify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SHA256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// add the transaction JSON&lt;/span&gt;
    &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="c1"&gt;// Verify it with the sender's public key&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;senderPublicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isValid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getPreviousBlockHash&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Block added&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-raw-wallet-endraw-class"&gt;
  &lt;/a&gt;
  Creating the &lt;code&gt;Wallet&lt;/code&gt; class
&lt;/h2&gt;

&lt;p&gt;Now let‚Äôs create the wallets, which the users can use to send cryptocurrencies to other people. Each crypto wallet has a pair of keys: a public key and a private key. The private keys are used to create new transactions (e.g., send cryptocurrencies) and the public key is used to verify them and receive cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Let‚Äôs first set up the constructor so that we can generate a key pair as soon as the wallet is initiated:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateKeyPairSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;modulusLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;publicKeyEncoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;spki&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;privateKeyEncoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pkcs8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pem&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;privateKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;privateKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are using the &lt;code&gt;PEM&lt;/code&gt; format for the keys. It is a well known format and can be saved on the user‚Äôs PC. The &lt;code&gt;RSA&lt;/code&gt; algorithm allows us to create public and private keys.&lt;/p&gt;

&lt;p&gt;Now let‚Äôs create a function that will help us to send cryptocurrencies to other wallets on the network:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;recieverPublicKey&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shaSign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createSign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SHA256&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// add the transaction json&lt;/span&gt;
  &lt;span class="nx"&gt;shaSign&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// sign the SHA with the private key&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;shaSign&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;privateKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;Chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we take &lt;code&gt;amount&lt;/code&gt; and &lt;code&gt;recieverPublicKey&lt;/code&gt; as parameters and create a new object from the &lt;code&gt;Transaction&lt;/code&gt; class using that information. We then create the hash of the transaction and sign it with the private key. Finally, we add it to the chain using the &lt;code&gt;insertBlock&lt;/code&gt; function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-things-out"&gt;
  &lt;/a&gt;
  Testing things out
&lt;/h2&gt;

&lt;p&gt;Now that everything is ready, you can test things out by creating wallets and creating transactions using them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itachi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;madara&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orochimaru&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Wallet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;itachi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;madara&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;madara&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;orochimaru&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;orochimaru&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;madara&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publicKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, I created wallets with random names (not quite random, they are the villains in Naruto), and then sent money from one wallet to other and finally logging the chain to see how it looks.&lt;/p&gt;

&lt;p&gt;For me, my chain looked like this (yours might be different because of different hashes):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Chain&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1634561976555&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c22300510c923a8ebf4d804f6edb4370731fcfd58f938d255852b4ea2744f20e&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1634561976623&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1799ab15685e086cdb539e1851a759c713b3f71205664286cd4024c9f74d2a69&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1634561976628&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;Block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;previousHash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1eb1f51c1b94a18f1c35e0cd81245ea6c69bac0100573cb76f3dac8026132597&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Transaction&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1634561976629&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What‚Äôs next?
&lt;/h2&gt;

&lt;p&gt;This was just the basics of creating cryptocurrencies using JavaScript. You should not use this in production because cryptocurrencies involve a lot of different things such as mining and a lot of security is involved.&lt;/p&gt;

&lt;p&gt;If you are stuck somewhere, you can always visit my &lt;a href="https://github.com/atharvadeosthale/cryptocurrency-blog"&gt;GitHub repository&lt;/a&gt; to have a look at the code.&lt;/p&gt;

&lt;p&gt;If you want to experiment even more, I‚Äôd recommend incorporating a wallet balance system and mining system into this project.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-debug-javascript-errors-more-easily-by-understanding-the-context"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Debug JavaScript errors more easily by understanding the context
&lt;/h2&gt;

&lt;p&gt;Debugging code is always a tedious task. But the more you understand your errors the easier it is to fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; allows you to understand these errors in new and unique ways. Our frontend monitoring solution tracks user engagement with your JavaScript frontends to give you the ability to find out exactly what the user did that led to an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6-0SwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2020/06/reproduce-javascript-errors.gif" alt="LogRocket Dashboard Free Trial Banner" width="800" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogRocket records console logs, page load times, stacktraces, slow network requests/responses with headers + bodies, browser metadata, and custom logs. Understanding the impact of your JavaScript code will never be easier!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>blockchain</category>
      <category>tutorial</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Ultimate Guide To Optimize Divi On WordPress (2021 Edition)</title>
      <author>CodeWatchers</author>
      <pubDate>Tue, 09 Nov 2021 17:01:36 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/ultimate-guide-to-optimize-divi-on-wordpress-2021-edition-2nhc</link>
      <guid>https://dev.to/codewatchers_en/ultimate-guide-to-optimize-divi-on-wordpress-2021-edition-2nhc</guid>
      <description>&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/review-divi-4-vs-other-wordpress-themes#translate-2843"&gt;Divi&lt;/a&gt; is undoubtedly one of the most popular WordPress themes nowadays. It comes with a powerful Page Builder, that you can use to create almost any type of design for any type of website (literally). This huge advantage comes with a downside. As Divi has a bunch of features, these features have a weight. And for those who don't want to admit it, it's important to consider optimizing Divi, especially if you want to offer the best experience to your visitors.&lt;/p&gt;

&lt;p&gt;While it's true Divi is receives frequent performances, nevertheless, these aren't always enough and that's truer for those having more than a simple "&lt;strong&gt;Hello World&lt;/strong&gt;" blog.&lt;/p&gt;

&lt;p&gt;In this tutorial, we are going to explore what we can do make divi loads faster (while it's yet already a fast WordPress theme cosnidering the available features). Here are some key topics we‚Äôll cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#How-To-Optimize-The-Database"&gt;How To Optimize The Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Optimize-The-DNS"&gt;How To Optimise the DNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Choose-A-Good-Hosting"&gt;How To Choose A Good Hosting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Optimize-The-Time-to-First-Byte"&gt;How To Optimize The Time to First Byte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Cache-Your-WordPress-Website"&gt;How To Cache Your WordPress Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Perform-A-Minification"&gt;How To Perform A Minification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Enable-Gzip-Compression"&gt;How To Enable Gzip Compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Which-CDN-Can-You-Use"&gt;Which CDN Can You Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Optimize-Images"&gt;How To Optimize Your Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Optimize-Your-Videos"&gt;How To Optimize Your Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-To-Perform-SpeedTests-On-Divi"&gt;How To Perform SpeedTests On Divi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Other%20Tips%20And%20Tricks"&gt;Other Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#why-you-must-have-a-fast-website" class="anchor"&gt;
  &lt;/a&gt;
  Why You Must Have A Fast Website?
&lt;/h2&gt;

&lt;p&gt;It's no more a secret for no one. Fast websites convert better than slow websites. There is a huge correlation between the speed of your website and your bounce rate. More accurately here are why it's nowadays a must :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduce Bounce Rate ‚Äì You need to keep your visitors? Make your website blazing fast.&lt;/li&gt;
&lt;li&gt;Increase Conversion ‚Äì If you would like your visitor to see your store or form, your website needs to load fast before they go away.&lt;/li&gt;
&lt;li&gt;SEO ‚Äì Google Might Rank You Higher (might because it's &lt;a href="https://backlinko.com/hub/seo/pagespeed"&gt;not always the case&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Credibility ‚Äì slow websites create a bad first impression to your visitors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-fast-should-a-website-load" class="anchor"&gt;
  &lt;/a&gt;
  How Fast Should A Website Load?
&lt;/h2&gt;

&lt;p&gt;Based on various studies, a website should load in &lt;a href="https://www.searchenginejournal.com/how-quickly-should-page-load/375799/"&gt;3 seconds or less&lt;/a&gt;. Generally, a good goal is to have your webpages load in 3 seconds or less. Although it seems most customers expect it to be 2 seconds or less these days. But obviously, every website and web page is different.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tips-and-tricks-to-make-divi-load-faster" class="anchor"&gt;
  &lt;/a&gt;
  Tips And Tricks To Make Divi Load Faster
&lt;/h2&gt;

&lt;p&gt;Now we'll explore all the tips and tricks you can apply right away on your Divi website and see significant changes on the performance. Some of these techniques also applies to any other WordPress themes, so you might already be familiar with theses.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-optimize-the-database" class="anchor"&gt;
  &lt;/a&gt;
  How To Optimize The Database
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97_aRek2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/wp-optimize.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97_aRek2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/wp-optimize.jpg" alt="" width="880" height="436"&gt;&lt;/a&gt;WordPress is a dynamic CMS that interacts with MySQL database to store and retrieve data (post, pages, metadata, etc). This way to work makes your website management easier, but the downside is that it takes longer for pages to load because it has to locate the data in the database before loading the page. For a static HTML website, there is no need to search for dynamic content, because it's doesn't change dynamically. That's why static HTML websites will be faster than WordPress websites.&lt;/p&gt;

&lt;p&gt;One way to keep a Divi site (or any WordPress website) as fast as possible is to make sure to optimize your database. WordPress site files are organized in your database by tables and everytime you add new data to your site (like themes and plugins), that creates new tables and new data. As you would expect, the more your database is bloated, the harder it will be to find the data. This leads to a slower website.&lt;/p&gt;

&lt;p&gt;Now, if you're blogging for many years, you might have tried a lot of themes and plugins. This has eventually caused your database to keep data it doesn't need. Even if you uninstall a plugin, it doesn‚Äôt mean that all the data created by this plugin is wiped as well. Some plugins keep some data, in case you reinstall the plugin, or the developer might have forgotten to add a proper uninstall measure. Obviously that not good and fair for your database. This left over data can lead to unnecessary clutter and slow down your site.&lt;/p&gt;

&lt;p&gt;Just like every human needs organization to work more efficiently, every WordPress site (Divi or not) needs a clean database to load pages faster. That' why if you had your website for a moment now, you should definitely consider optimizing your database.&lt;/p&gt;

&lt;p&gt;There are many plugins that can help with that, but you can definitely give a try to &lt;a href="https://wordpress.org/plugins/wp-optimize/"&gt;WP Optimize&lt;/a&gt;, which seems to be a credible option. But there are other &lt;a href="https://wordpress.org/support/article/optimization/"&gt;tricks to consider as well&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition to optimizing your WordPress Database, you may want to make WordPress even lighter by cutting down on the data it stores. For example, WordPress will automatically hold deleted items in the trash for 30 days. You may want to cut that time period down to 7.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-optimize-the-dns" class="anchor"&gt;
  &lt;/a&gt;
  How To Optimize The DNS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20eye9Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/dns-optimization-wordpress.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20eye9Nb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/dns-optimization-wordpress.png" alt="" width="880" height="402"&gt;&lt;/a&gt;One of the first things that happen when your website is about to be accessed, is a DNS Lookup. As soon as the URL is entered (or clicked), the visitor‚Äôs ISP sends a DNS query to the nameservers to find the IP address associated with your domain (every domain/website has a specific IP address). More clearly, a DNS lookup is like looking up your domain name in a phone book to find the IP address for that domain.&lt;/p&gt;

&lt;p&gt;However, when a user visits a page on your site, the page may have multiple domains that need to be accessed to pull up the page. So you could be doing 3 or 4 domain lookups on a single page load (maybe more).&lt;/p&gt;

&lt;p&gt;Generally speaking, most free DNS Providers like Godaddy and Namecheap will generally be slower than others.&lt;/p&gt;

&lt;p&gt;The best free option out there that will boost your DNS lookup speed is probably &lt;a href="https://www.cloudflare.com/dns/"&gt;Cloudflare&lt;/a&gt;. They have the fastest DNS performance recorded on &lt;a href="https://www.dnsperf.com/"&gt;DNSPerf.com&lt;/a&gt;. They are significantly faster than GoDaddy and Namecheap. And, you can even optimize Cloudflare to be used for DNS without their other services (like CDN or WAF) if you want.&lt;/p&gt;

&lt;p&gt;For example, you may want to use Cloudflare for DNS and Security (DDOS detection) and KeyCDN (or MaxCDN) for your CDN. That is also a great combination.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setup-cloudflare" class="anchor"&gt;
  &lt;/a&gt;
  Setup Cloudflare
&lt;/h3&gt;

&lt;p&gt;Cloudflare is easy to setup. You don‚Äôt have to worry about switching your hosting or anything beforehand. All you need to do is walk through their 5-minute setup that begins with entering your domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-uwDYZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/setup-cloudflare.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-uwDYZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/setup-cloudflare.png" alt="" width="880" height="489"&gt;&lt;/a&gt;They will retrieve your current DNS records automatically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2kQyNzfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/fetching-query-wordpress.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2kQyNzfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/fetching-query-wordpress.png" alt="" width="880" height="598"&gt;&lt;/a&gt;One of the things you will need to do to complete your setup is to change the default nameservers on your current DNS provider (like GoDaddy) to Cloudflare‚Äôs nameservers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xVWoQFZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/change-nameserver.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVWoQFZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/change-nameserver.png" alt="" width="880" height="642"&gt;&lt;/a&gt;From now you'll be able to manage your DNS easily from their Dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NOuolAZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/manage-dns-wordpress-dashboard.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NOuolAZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/manage-dns-wordpress-dashboard.png" alt="" width="880" height="611"&gt;&lt;/a&gt;And just like that, you have a boost in DNS lookup speed, more security, and a CDN for your website and for free.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-choose-a-good-hosting" class="anchor"&gt;
  &lt;/a&gt;
  How To Choose A Good Hosting
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ypsCqbo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/divi-hosting-partners.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ypsCqbo4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/divi-hosting-partners.jpg" alt="" width="800" height="484"&gt;&lt;/a&gt;Beforehand, one of the first things to consider during your website optimization journey is to choose a hosting that works well for your WordPress website. A few months ago, Elegantheme was releasing a partnership offer &lt;a href="https://codewatchers.com/en/blog/divi-hosting-an-affordable-way-to-use-divi#%C5%A7ranslate-3183"&gt;with popular Hosting providers&lt;/a&gt; that works well with WordPress. These providers are recognized for providing a better service for Divi and the integration with the Elegant Themes dashboard is seamless. You just have to choose from these providers which one you'll choose for your website.&lt;/p&gt;

&lt;p&gt;Now nothing forces you to use these providers as they are many other solutions available out there that work well for WordPress and Divi as well. Let's then break it down by considering the type of hosting available.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#types-of-hosting" class="anchor"&gt;
  &lt;/a&gt;
  Types of Hosting
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#shared-hosting" class="anchor"&gt;
  &lt;/a&gt;
  Shared Hosting
&lt;/h4&gt;

&lt;p&gt;This is by far the most popular type of hosting for WordPress/Divi users. But unfortunately, it is the worst option for having a fast website. With the shared hosting, you will share all the available resources of a server with others. Because you are sharing, the cost for this kind of hosting is usually very low. However, the downside is that you can‚Äôt control how much traffic those other sites are getting, and how their website can potentially affect the performance of the server, and then affect your website performance. So you can easily fall prey to periods of extremely slow loading times and even times when your site is completely down. So you better have a good idea of &lt;a href="https://www.elegantthemes.com/affiliates/idevaffiliate.php?id=61141&amp;amp;url=66750&amp;amp;tid=ultimateguide"&gt;how much traffic your shared hosting can handle&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#vps-hosting" class="anchor"&gt;
  &lt;/a&gt;
  VPS Hosting
&lt;/h4&gt;

&lt;p&gt;Virtual Private Server (VPS) hosting is basically a middle ground between shared and dedicated hosting. Your server space is ‚Äúprivate‚Äù which means it is completely separated from others. So your site files aren‚Äôt exposed to others on the server. Unlike shared hosting, a VPS does have a dedicated amount of system resources at your disposal to ensure your site always gets what it needs to deliver fast load times consistently. Technically, you won‚Äôt have to worry about other website‚Äôs traffic spikes affecting your site speed.&lt;/p&gt;

&lt;p&gt;But, unless you have a managed VPS, this kind of hosting is mostly for those DIY types that are tech-savvy enough to handle things themselves.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#cloud-hosting" class="anchor"&gt;
  &lt;/a&gt;
  Cloud Hosting
&lt;/h4&gt;

&lt;p&gt;With cloud hosting, you have access to a network of servers (in the cloud) instead of a single physical server. This allows you to pull all the resources you need from this network of servers as needed. More simply, you have a virtual partition of server space that is backed by the power and resources of the entire network of servers. There is therefore no need to worry about the traffic spikes like you would have for shared hosting. Cloud hosting is extremely flexible and scalable for your needs.&lt;/p&gt;

&lt;p&gt;One main difference between Cloud Hosting and VPS hosting is that VPS hosting has a dedicated (sometimes limited) amount of resources to pull from that may or may not become depleted. Cloud Hosting, on the other hand, is capable of keeping your resources available without being depleted because it can always pull from the other servers in the cloud. In theory, cloud hosting offers more consistent and reliable high speeds. So if you are serious about speed, cloud hosting is a great option (maybe even the best).&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#dedicated-hosting" class="anchor"&gt;
  &lt;/a&gt;
  Dedicated Hosting
&lt;/h4&gt;

&lt;p&gt;With dedicated hosting, you have your own dedicated server just for you. There is no need to share any resources with anyone else. This means you will have more predictable and consistent fast loading times for your website. This is usually offered as a top-tier option for large corporations at a high premium cost (obviously). You'll consider using that if you can afford the cost that it inherits.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#managed-wordpress-hosting" class="anchor"&gt;
  &lt;/a&gt;
  Managed WordPress Hosting
&lt;/h4&gt;

&lt;p&gt;Managed WordPress Hosting usually refers to shared hosting that is managed by WordPress experts. Here it's not private as a VPS or as powerful as a Dedicated Server. But it does help maximize the speed of your shared environment by having WordPress experts do the work. They do this well because they tailor their services and configure their servers strictly for WordPress sites. And a lot of them come with many cool and convenient built-in features like one-click staging environments, site caching, one-click CDN deployment, automatic backups, SSL‚Äôs, and more. They are perfect for those who don‚Äôt want to handle these things manually themselves.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#other-hosting-provider-to-consider" class="anchor"&gt;
  &lt;/a&gt;
  Other Hosting Provider To Consider
&lt;/h4&gt;

&lt;p&gt;There are many WordPress Hosting companies out there. And if at all possible, you will want to avoid traditional shared hosting (not managed) if you are serious about speed optimization. But if you have a simple site and aren‚Äôt willing to pay the extra money for managed, Siteground seems to be one of the best for shared hosting.&lt;/p&gt;

&lt;p&gt;For now, here is a quick list of hosts to consider for a faster Divi website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/hostings/go/kinsta"&gt;Kinsta&lt;/a&gt;&lt;/strong&gt; ‚Äì specializes in managed WP hosting&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/elegantthemes/go?to=hosting.siteground"&gt;SiteGround&lt;/a&gt;&lt;/strong&gt; ‚Äì offers shared hosting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://codewatchers.com/aff/cloudways/go"&gt;Cloudways&lt;/a&gt;&lt;/strong&gt; ‚Äì specializes in SSD-Based managed cloud hosting&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://getflywheel.com/"&gt;Flywheel&lt;/a&gt;&lt;/strong&gt; ‚Äì specializes in managed WP hosting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is not all the possible providers available out there, but definitely with these, you'll have a fast WordPress website.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-optimize-the-time-to-first-byte" class="anchor"&gt;
  &lt;/a&gt;
  How To Optimize The Time to First Byte
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rxz3jHMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/ttfb-wordpress.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rxz3jHMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/ttfb-wordpress.jpg" alt="" width="429" height="512"&gt;&lt;/a&gt;The Time to First Byte (TTFB) is the amount of time it takes the user to receive the first byte of website data from your server. This means, when a user tries to access your website, the TTFB will essentially be that waiting period before any data is received by the browser.&lt;/p&gt;

&lt;p&gt;The TTFB is usually around 200ms. But for sites that are on poor hosting and haven‚Äôt been optimized, the TTFB can easily be 2 seconds or more.&lt;/p&gt;

&lt;p&gt;The TTFB delay on your Divi site is usually caused by the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The amount of &lt;strong&gt;dynamic content&lt;/strong&gt; that needs to be received. This can be cut down with caching, database optimization, and a CDN.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;amount of traffic&lt;/strong&gt; your server is experiencing at the time. Shared hosting providers can't have a low TTFB because you are sharing resources with others on the same server. Spikes in their traffic will cut down on your server‚Äôs processing speed.&lt;/li&gt;
&lt;li&gt;Your &lt;strong&gt;web server configuration&lt;/strong&gt;. A good WordPress hosting provider can help with your site‚Äôs TTFB by providing a solid backend infrastructure and optimizing your web server configuration (things pretty much out of your control).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, if you want a quick boost in TTFB, get better hosting and follow the rest of the steps below.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-cache-your-wordpress-website" class="anchor"&gt;
  &lt;/a&gt;
  How To Cache Your WordPress Website
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLfg1lAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/w3-total-cache-WordPress.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLfg1lAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/w3-total-cache-WordPress.jpg" alt="" width="880" height="413"&gt;&lt;/a&gt;There are four main types of caching that can be implemented to speed up your WordPress site.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Page Caching&lt;/strong&gt; ‚Äì This process stores cached static HTML versions of your page for fast delivery.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Browser Caching&lt;/strong&gt; ‚Äì This gives you more control over what content is able to be cached by the browser and for how long. Only some plugins can do this, so you should consider doing that manually for more control. This will help take care of the ‚ÄúLeverage Browser Caching‚Äù metrics when conducting speed tests.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CDN Caching&lt;/strong&gt; ‚Äì Serves cached website pages/files from a CDN closest to your users.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Object Caching&lt;/strong&gt; ‚Äì Object caching caches repeated query results that PHP initiates to retrieve data from the database and serve it to the user. This is different from bytecode caching which stores a cached version of the compiled PHP code used to display your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Divi does perform caching for serving up Divi‚Äôs static JS and CSS files behind the scenes. But this is primarily for the Divi theme files for better Divi Builder functionality.&lt;/p&gt;

&lt;p&gt;You still need to use caching for optimizing your entire WordPress website. Most sites have multiple plugins that come with their own CSS files that may need to be combined, minified, and cached. You can therefore take advantage of a third-party plugin to serve cached static HTML versions of all of your pages.&lt;/p&gt;

&lt;p&gt;Popular Caching Plugins include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/plugins/wp-super-cache/"&gt;WP Super Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/plugins/w3-total-cache/"&gt;W3 Total Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wp-rocket.me/"&gt;WP Rocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/plugins/cache-enabler/"&gt;Cache Enabler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/plugins/comet-cache/"&gt;Comet Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wordpress.org/plugins/wp-fastest-cache/"&gt;WP Fastest Cache&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-to-perform-a-minification" class="anchor"&gt;
  &lt;/a&gt;
  How To Perform A Minification
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO7eclrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/minimification-wordpress.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO7eclrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2021/02/minimification-wordpress.gif" alt="" width="880" height="399"&gt;&lt;/a&gt;Minification makes your site files smaller. Minifying your site files (CSS, JavaScript, HTML) remove all those unnecessary things (like spaces and page breaks) so that the file size shrinks. That will reduce the time for the browser to download that asset.&lt;/p&gt;

&lt;p&gt;Aggregation means combining the site files to reduce the total requests on the page and speed up loading times for your visitors. But, that also means serving bigger files to your users, you should make sure to serve a 1MB file of CSS for example, and consider splitting in small chunks.&lt;/p&gt;

&lt;p&gt;As mentioned earlier, Divi does minify and combine Javascript and CSS files that are used by the Divi Theme by default. So you technically don‚Äôt have to worry about using a third-party plugin to further minify and combine Divi‚Äôs Javascript and CSS files. However, Divi doesn‚Äôt minify the HTML output. So you can benefit from a third-party plugin to minify (and cache) the entire HTML of a page.&lt;/p&gt;

&lt;p&gt;Plus, almost every Divi site will depend on files outside of the Divi Theme (like plugins or other files added by the Child Theme) that will benefit from minifying and combining the CSS and JS files. This can easily be handled by a plugin.&lt;/p&gt;

&lt;p&gt;Some suitable plugins that will minify your site files include:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/ultimate-guide-to-optimize-divi-on-wordpress?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>1 line of code: How to get every odd item of an Array</title>
      <author>martin krause</author>
      <pubDate>Tue, 09 Nov 2021 16:39:30 +0000</pubDate>
      <link>https://dev.to/martinkr/1-line-of-code-how-to-get-every-odd-item-of-an-array-2j5g</link>
      <guid>https://dev.to/martinkr/1-line-of-code-how-to-get-every-odd-item-of-an-array-2j5g</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;oddItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Returns an array which contains every odd (second) item of the original array.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-repository-amp-npm-package"&gt;
  &lt;/a&gt;
  The repository &amp;amp; npm package
&lt;/h2&gt;

&lt;p&gt;You can find the all the utility functions from this series at &lt;a href="https://github.com/martinkr/onelinecode"&gt;github.com/martinkr/onelinecode&lt;/a&gt;&lt;br&gt;
The library is also published to &lt;a href="https://www.npmjs.com/package/@onelinecode/onelinecode"&gt;npm as @onelinecode&lt;/a&gt; for your convenience.&lt;/p&gt;

&lt;p&gt;The code and the npm package will be updated every time I publish a new article.&lt;/p&gt;




&lt;p&gt;Happy coding and consider to &lt;a href="https://www.buymeacoffee.com/martinkr"&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@zoo_monkey"&gt;zoo_monkey&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fuji"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>performance</category>
      <category>codequality</category>
    </item>
    <item>
      <title>React: Pass State as Props to Child Components</title>
      <author>Randy Rivera</author>
      <pubDate>Tue, 09 Nov 2021 16:37:29 +0000</pubDate>
      <link>https://dev.to/rthefounding/react-pass-state-as-props-to-child-components-2mca</link>
      <guid>https://dev.to/rthefounding/react-pass-state-as-props-to-child-components-2mca</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A great thing about FreeCodeCamp aside from it being free it gives you like a great introduction to many different areas. In this case we're working on React. Here For example, The &lt;code&gt;MyApp&lt;/code&gt; component is stateful and renders a &lt;code&gt;Navbar&lt;/code&gt; component as a child. We have to pass the &lt;code&gt;name&lt;/code&gt;property in its &lt;code&gt;state&lt;/code&gt; down to the child component, then show the &lt;code&gt;name&lt;/code&gt; in the &lt;code&gt;h1&lt;/code&gt; tag that's part of the &lt;code&gt;Navbar&lt;/code&gt; render method. &lt;code&gt;name&lt;/code&gt; should appear after the text &lt;code&gt;Hello, my name is:&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ex:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CamperBot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Change code below this line */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Navbar&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Change code above this line */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Navbar&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Change code below this line */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello, my name is: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Change code above this line */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;About React, there's an important pattern to it. The first is unidirectional data flow.&lt;/li&gt;
&lt;li&gt;State flows in one direction down the tree of your application's components, from the stateful parent component to child components. The child components only receive the state data they need. &lt;/li&gt;
&lt;li&gt;The second is that complex stateful apps can be broken down into just a few, or maybe a single, stateful component. The rest of your components simply receive state from the parent as props, and render a UI from that state. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Larson, Q., 2019. Frontend Development Libraries. [online] Freecodecamp.org. Available at: &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/react"&gt;https://www.freecodecamp.org/learn/front-end-development-libraries/react&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>devops</category>
      <category>beginners</category>
    </item>
    <item>
      <title>I used JavaScript to clean the Ocean</title>
      <author>Shuvo</author>
      <pubDate>Tue, 09 Nov 2021 16:35:12 +0000</pubDate>
      <link>https://dev.to/0shuvo0/i-used-javascript-to-clean-the-ocean-31ep</link>
      <guid>https://dev.to/0shuvo0/i-used-javascript-to-clean-the-ocean-31ep</guid>
      <description>&lt;p&gt;Let's simulate ocean cleaning using JavaScript and Three JS&lt;br&gt;
&lt;a href="https://ocean-cleaner.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9q9vKc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7acxe9enjpvjp42lzml.png" alt="Ocean cleaning game preview" width="880" height="370"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After &lt;a href="https://teamtrees.org/"&gt;#TeamTrees&lt;/a&gt; MrBeast, Mark Rober have took the initiative to clean oceans and created &lt;a href="https://teamseas.org/"&gt;#TeamsSeas&lt;/a&gt;. We estimate to clean 30Million pounds of trash from ocean by the end of 2021. And for each $1 donation, one pound of trash will be removed from the Ocean. So go to &lt;a href="https://teamseas.org/"&gt;teamseas.org&lt;/a&gt; donate what ever amount you can.&lt;/p&gt;

&lt;p&gt;Inspired by this I have created this game using JavaScript.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#you-can-play-it-here-models-take-some-time-to-load"&gt;
  &lt;/a&gt;
  You can &lt;a href="https://ocean-cleaner.netlify.app/"&gt;Play It Here&lt;/a&gt; (&lt;em&gt;models take some time to load&lt;/em&gt;)
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#here-is-the-github-repo-for-the-codes"&gt;
  &lt;/a&gt;
  Here is the Github repo &lt;a href="https://github.com/0shuvo0/ocean-cleaner"&gt;for the codes&lt;/a&gt;
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#also-watch-the-tutorial-on-how-to-create-this-game"&gt;
  &lt;/a&gt;
  Also watch the tutorial on how to create this game
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JdkHeQojLr0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Make sure you checkout my other articles and YouTube channel&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#was-it-helpful-support-me-on-patreon"&gt;
  &lt;/a&gt;
  Was it helpful? Support me on Patreon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/0shuvo0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vln7kszB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vnw8g7vs5pok3jwgtgv.png" alt="Patreon Logo" width="225" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>opensource</category>
      <category>gamedev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to implement MongoDB using Spring Boot?</title>
      <author>ROHAN KADAM</author>
      <pubDate>Tue, 09 Nov 2021 16:29:48 +0000</pubDate>
      <link>https://dev.to/rohan2596/how-to-implement-mongodb-using-spring-boot-4b04</link>
      <guid>https://dev.to/rohan2596/how-to-implement-mongodb-using-spring-boot-4b04</guid>
      <description>&lt;p&gt;Helloüëã, Its Rohan Kadamüòä.&lt;/p&gt;

&lt;p&gt;In the article, we will try to understand MongoDB and How to use the same using spring boot. Before jumping directly into code we should first understand certain sub-topics What is MongoDB? Why use MongoDB? and many more questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_BoqYT8B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2A_LKoZptdL9I_6NM4qiYcYA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BoqYT8B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3840/1%2A_LKoZptdL9I_6NM4qiYcYA.png" alt="How To implement MongoDB Using Spring Boot?" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-mongodb"&gt;
  &lt;/a&gt;
  ‚ö°What is MongoDB?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/10-free-online-courses-to-learn-mongodb-and-nosql-942609611664"&gt;MongoDB&lt;/a&gt; is a document database with the scalability and flexibility that you want with the querying and indexing that you need. It stores data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time.&lt;/p&gt;

&lt;p&gt;The document model maps to the objects in your application code, making data easy to work with. Ad hoc queries, indexing, and real-time aggregation provide powerful ways to access and analyze your data. It is a distributed database at its core, so high availability, horizontal scaling, and geographic distribution are built-in and easy to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-mongodb"&gt;
  &lt;/a&gt;
  ‚ö°Why use MongoDB?
&lt;/h3&gt;

&lt;p&gt;MongoDB is built on a &lt;a href="https://www.mongodb.com/basics/scaling"&gt;scale-out architecture&lt;/a&gt; that has become popular with developers of all kinds for developing scalable applications with evolving data schemas.&lt;/p&gt;

&lt;p&gt;As a document database, MongoDB makes it easy for developers to store structured or unstructured data. It uses a &lt;a href="https://www.mongodb.com/json-and-bson"&gt;JSON-like&lt;/a&gt; format to store documents.&lt;/p&gt;

&lt;p&gt;This format directly maps to native objects in most modern programming languages, making it a natural choice for developers, as they don‚Äôt need to think about &lt;a href="https://www.mongodb.com/basics/data-models"&gt;normalizing data&lt;/a&gt;. MongoDB can also handle high volume and can scale both vertically or horizontally to accommodate large data loads.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-implement-mongodb-using-spring-boot"&gt;
  &lt;/a&gt;
  ‚ö°How to implement MongoDB Using Spring Boot?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/5-best-mongodb-courses-to-learn-nosql-for-beginners-in-2020-42df5af5496c"&gt;MongoDB &lt;/a&gt;is widely been used by industry today for developing fast and powerful apps. Its best known for its high-performance searching and querying. Today we are going to implement MongoDB using the spring boot and the programming language Java. This part of we going to cover the CRUD operations for the same.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-how-to-generate-spring-boot-project"&gt;
  &lt;/a&gt;
  Step 1: How to generate Spring Boot Project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://start.spring.io/"&gt;&lt;strong&gt;Spring Initializr&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-which-dependencies-should-i-include"&gt;
  &lt;/a&gt;
  Step 2: Which dependencies should I include?
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://spring.io/projects/spring-data-mongodb#overview"&gt;Spring Data MongoDB&lt;/a&gt; project provides integration with the MongoDB document database. Key functional areas of Spring Data MongoDB are a POJO centric model for interacting with a MongoDB DBCollection and easily writing a Repository style data access layer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QSfD8uR9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3112/1%2AtMPZz1J5-NSMBC06FFrHLQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QSfD8uR9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3112/1%2AtMPZz1J5-NSMBC06FFrHLQ.png" alt="MongoDB-Dependency" width="880" height="316"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-what-will-be-the-configuration-for-mongo-db"&gt;
  &lt;/a&gt;
  Step 3: What will be the Configuration for Mongo DB?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.mongodb.com/manual/reference/connection-string/"&gt;Connection String&lt;/a&gt;:- It helps to set connections between ours application and database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.spring.io/spring-data/mongodb/docs/current/api/org/springframework/data/mongodb/core/MongoTemplate.html"&gt;MongoTemplate&lt;/a&gt;:- The MongoTemplate class is &lt;strong&gt;the primary implementation of the MongoOperations interface which specifies the basic set of MongoDB operations&lt;/strong&gt;. We can also use the MongoRepository interface to perform MongoDB operations. The implementation class of MongoRepository uses MongoTemplate bean at run time&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxRljA8B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/5120/1%2AErdkctUB7RMEysByYpzJEQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxRljA8B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/5120/1%2AErdkctUB7RMEysByYpzJEQ.png" alt="MongoDB Configurations" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-what-will-be-the-documententity-for-mongodb"&gt;
  &lt;/a&gt;
  Step 4: What will be the Document/Entity for MongoDB?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C7u57SnN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2504/1%2A05_prnCOk7J3w7Hc7FKbEw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C7u57SnN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2504/1%2A05_prnCOk7J3w7Hc7FKbEw.png" alt="User Entity" width="880" height="2093"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-what-will-be-the-controller-for-mongodb"&gt;
  &lt;/a&gt;
  Step 5: What will be the Controller for MongoDB?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Request Add and Update Request&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7jD2M5BF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2804/1%2AgNBNBrEateQtMGGRJuamfA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7jD2M5BF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2804/1%2AgNBNBrEateQtMGGRJuamfA.png" alt="Add Request &amp;amp; Edit Request" width="880" height="584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. User Response&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--neH0K1kB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2804/1%2AvEcN4V5SXfBPsDWz7hbHag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--neH0K1kB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2804/1%2AvEcN4V5SXfBPsDWz7hbHag.png" alt="User Response" width="880" height="1705"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. User Controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfDIrkpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3164/1%2AVuKlgqraC5QQkpg6tWPchg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfDIrkpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3164/1%2AVuKlgqraC5QQkpg6tWPchg.png" alt="User Controller-Endpoints" width="880" height="890"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-what-will-be-the-repositorydao-for-mongodb"&gt;
  &lt;/a&gt;
  Step 6: What will be the Repository/DAO for MongoDB?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6jFNAkje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3096/1%2ABjXu0Hz1Ilm3uP1FvHQFyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jFNAkje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3096/1%2ABjXu0Hz1Ilm3uP1FvHQFyg.png" alt="User Repository ‚Äî MongoDB" width="880" height="317"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-8-what-will-be-the-business-logic-crud-operations-for-mongodb"&gt;
  &lt;/a&gt;
  Step 8: What will be the business logic CRUD operations for MongoDB?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nx50DzNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3304/1%2A5x7xnnSxxV-AlgeC0eLUqA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nx50DzNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3304/1%2A5x7xnnSxxV-AlgeC0eLUqA.png" alt="User Service -logic" width="880" height="932"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7-what-will-be-the-final-output-for-mongodb"&gt;
  &lt;/a&gt;
  Step 7: What will be the final Output for MongoDb?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PlK1XPI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2004/1%2A-9MJxFxTfqqC07cqQ7Fkjg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PlK1XPI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2004/1%2A-9MJxFxTfqqC07cqQ7Fkjg.png" alt="Mongo DB Database" width="880" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-8-where-do-i-find-the-full-codebase"&gt;
  &lt;/a&gt;
  Step 8: Where do I find the full Codebase?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/Rohan2596/spring-boot-mongoDB"&gt;&lt;strong&gt;GitHub - Rohan2596/spring-boot-mongoDB&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  ‚ö°Conclusion:-
&lt;/h3&gt;

&lt;p&gt;In the article, we tried to answer some questions related to MongoDB and how to implement the same using Spring boot. MongoDB is a no-SQL fast and powerful database used by many fortune 500 companies to provide service to others.&lt;/p&gt;

&lt;p&gt;Please do share and like if you find the article useful. Follow me on medium &lt;a href="https://dev.toundefined"&gt;Rohan Ravindra Kadam&lt;/a&gt; and on Twitter at &lt;a href="https://twitter.com/rohankadam25"&gt;**rohankadam25&lt;/a&gt;**&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bibliography"&gt;
  &lt;/a&gt;
  ‚ö°Bibliography:-
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/what-is-mongodb"&gt;&lt;strong&gt;What Is MongoDB?&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.mongodb.com/why-use-mongodb"&gt;&lt;strong&gt;Why Use MongoDB and When to Use It?&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RewtI9lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/1%2AmRwSuSvhuRcZKS3uElP6bg.png" alt="Thank You, Viewers -Rohan Kadam" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>mongodb</category>
      <category>jamstack</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
