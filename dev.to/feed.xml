<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>git fork vs git clone on a command line</title>
      <author>dtnf45</author>
      <pubDate>Fri, 17 Dec 2021 22:26:53 +0000</pubDate>
      <link>https://dev.to/dtnf45/git-fork-vs-git-clone-on-a-command-line-562</link>
      <guid>https://dev.to/dtnf45/git-fork-vs-git-clone-on-a-command-line-562</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-the-difference-between-a-fork-and-a-clone"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Whats the difference between a fork and a clone?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;fork&lt;/strong&gt;: you are creating a copy of the repository using your github id (if you are using github). If you create changes it the forked repository, you have to create a pull request to the original repository&lt;/p&gt;

&lt;p&gt;technically fork is not a git command. So you will have to use something that is available on Github, GitLab etc..&lt;/p&gt;

&lt;p&gt;If you are using Github. First install &lt;code&gt;gh&lt;/code&gt;. Eg. on a mac&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install gh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To login:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gh auth login --web&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To fork a repo: E.g to fork Netflix Conductor repo&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gh repo fork https://github.com/Netflix/conductor.git --clone&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;clone&lt;/strong&gt; Cloning a repo will create a local copy on our computer so that it can sync between both the local and remote locations of the repo. Cloning is good when you want to get your own copy of a repository where you may not be contributing to the original project.&lt;/p&gt;

&lt;p&gt;To clone:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/Netflix/conductor.git&lt;/code&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to make Creative Product Card for NFT Website HTML CSS</title>
      <author>Sadee</author>
      <pubDate>Fri, 17 Dec 2021 22:14:50 +0000</pubDate>
      <link>https://dev.to/codewithsadee/how-to-make-creative-product-card-for-nft-website-30pp</link>
      <guid>https://dev.to/codewithsadee/how-to-make-creative-product-card-for-nft-website-30pp</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RR_53O_sk3s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;how to make creative product card for nft website with html css.&lt;/p&gt;

&lt;p&gt;In this video, we will learn how to make creative product card for nft website with html css.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  📹 Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;How to use ionicon&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  🔗 Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/19EIH7zmM8ch6C6QvEWl-Qn6cVaAAiBEu/view?usp=sharing"&gt;All Images&lt;/a&gt;&lt;br&gt;
&lt;a href="https://fonts.google.com/specimen/Poppins?query=poppin"&gt;Font - Poppins&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/posts/source-code-card-60040483?utm_medium=clipboard_copy&amp;amp;utm_source=copy_to_clipboard&amp;amp;utm_campaign=postshare"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  👤 Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tutorial: How to reverse a linked list in C++</title>
      <author>ericaeducative</author>
      <pubDate>Fri, 17 Dec 2021 21:52:42 +0000</pubDate>
      <link>https://dev.to/educative/tutorial-how-to-reverse-a-linked-list-in-c-5c2m</link>
      <guid>https://dev.to/educative/tutorial-how-to-reverse-a-linked-list-in-c-5c2m</guid>
      <description>&lt;p&gt;Knowing how to work with the C++ programming language makes you a competitive candidate for various roles. As you break into new roles, you’ll advance through interviews that test your understanding of computer science fundamentals such as data structures and algorithms. A linked list is just one of many C++ data structures you need to know for interviews. One popular interview question is reversing a linked list.&lt;/p&gt;

&lt;p&gt;Today, we’ll cover a tutorial on reversing singly linked lists in C++. We’ll demonstrate an iterative and recursive solution to this problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#linkedlists"&gt;Linked lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#linkedlist"&gt;Problem description: Reversing a linked list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iteration"&gt;Solution 1: Reverse a linked list using iteration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recursion"&gt;Solution 2: Reverse a linked list using recursion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linked-lists"&gt;
  &lt;/a&gt;
  Linked lists
&lt;/h2&gt;

&lt;p&gt;Linked lists are linear data structures connecting nodes in a sequence. Each node has two components: 1.) A data element and 2.) A pointer containing a memory address to the next node in the list. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h88wuUMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6c5bq6fhayxa80p618pm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h88wuUMt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6c5bq6fhayxa80p618pm.png" alt="diagram linked list" width="880" height="117"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the case of a singly linked list, nodes only store &lt;strong&gt;one pointer&lt;/strong&gt; to the next node in the sequence. A node in a doubly linked list, on the other hand, stores &lt;strong&gt;two pointers&lt;/strong&gt;: one to the next node, and one to the previous node in the sequence. A singly linked list is uni-directional while a doubly linked list is bi-directional. In the case of a singly linked list, the tail node’s pointer is null.&lt;/p&gt;

&lt;p&gt;Some terms associated with linked lists are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node:&lt;/strong&gt; The object in the list, with two components: a piece of data (element) and a pointer.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Next:&lt;/strong&gt; The next node in a sequence, respective to a given list node&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Head:&lt;/strong&gt; The first node in a linked list &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tail:&lt;/strong&gt; The last node in a linked list is called the tail. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Head pointer:&lt;/strong&gt; The memory address contained by the head node referencing the first node in the list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linked lists may be the second most used data structure, behind arrays. Linked lists are great for quickly adding and deleting nodes. They can be used to implement &lt;strong&gt;stacks and queues&lt;/strong&gt;, as well as other abstract data types. Linked lists are often used to maintain directories of names, or for dynamic memory allocation. &lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-description-reversing-a-linked-list"&gt;
  &lt;/a&gt;
  Problem description: Reversing a linked list
&lt;/h2&gt;

&lt;p&gt;We’re provided the pointer or reference to the head node of a singly linked list. We must sequence the list in reverse order and return the pointer to the head of the reversed linked list. The head of the original linked list becomes the tail of the reversed linked list, and the tail of the original linked list becomes the head of the reversed linked list.&lt;/p&gt;

&lt;p&gt;For example, provided the given linked list:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oZQMq52x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahqdaanl9zc0plgy8xfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZQMq52x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahqdaanl9zc0plgy8xfw.png" alt="linked list diagram" width="880" height="96"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reversed linked list would look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cte02fA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1r9eees94j3rlitrsfgp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cte02fA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1r9eees94j3rlitrsfgp.png" alt="reversed link list diagram" width="880" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-1-reverse-a-linked-list-using-iteration"&gt;
  &lt;/a&gt;
  Solution 1: Reverse a linked list using iteration
&lt;/h2&gt;

&lt;p&gt;If the linked list has two or more elements, we can use three pointers to implement an iterative solution. We use a function to reverse the linked list. Passing the head pointer as the sole argument, the function will return the head of the reversed list.&lt;/p&gt;

&lt;p&gt;We'll define &lt;strong&gt;three nodes&lt;/strong&gt;: &lt;em&gt;current&lt;/em&gt; (with reference to the head node), and &lt;em&gt;temp&lt;/em&gt; and &lt;em&gt;prev&lt;/em&gt; (with null pointers). Using a while loop, we traverse the linked list until the next pointer does not yield &lt;code&gt;null&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;In the iterative process, we’ll perform these operations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;temp = current-&amp;gt;next; 

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Assigns temp node to the current node’s next node&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;current-&amp;gt;next = prev;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Assigns current node to the previous node’s next node&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;prev = current;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Increments previous node to current node&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;current = temp;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Increments current node to temp node&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We then return the reversed list's head node.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;

using namespace std;

struct node {
    int data;
    struct node *next;
};

// We construct a linked list and use this function to push elements to the list 
void push(struct node **head_ref, int data) {
    struct node *node;
    node = (struct node*)malloc(sizeof(struct node));
    node-&amp;gt;data = data;
    node-&amp;gt;next = (*head_ref);
    (*head_ref) = node;
}

// Function to reverse the list
void reverse(struct node **head_ref) {
    struct node *temp = NULL;
    struct node *prev = NULL;
    struct node *current = (*head_ref);
    while(current != NULL) {
        temp = current-&amp;gt;next;
        current-&amp;gt;next = prev;
        prev = current;
        current = temp;
    }
    (*head_ref) = prev;
}

// Checking our program 
void printnodes(struct node *head) {
    while(head != NULL) {
        cout&amp;lt;&amp;lt;head-&amp;gt;data&amp;lt;&amp;lt;" ";
        head = head-&amp;gt;next;
    }
}

// Driver function
int main() {
    struct node *head = NULL;
    push(&amp;amp;head, 28);
    push(&amp;amp;head, 21);
    push(&amp;amp;head, 14);
    push(&amp;amp;head, 7);

    cout &amp;lt;&amp;lt; "Original Linked List" &amp;lt;&amp;lt; endl;
    printnodes(head);
    reverse(&amp;amp;head);
    cout &amp;lt;&amp;lt; endl;
    cout &amp;lt;&amp;lt; "Reversed Linked List"&amp;lt;&amp;lt;endl;
    printnodes(head);
    return 0;
}

==&amp;gt;Original Linked List
==&amp;gt;7 14 21 28 
==&amp;gt;Reversed Linked List
==&amp;gt;28 21 14 7
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O(N) is the &lt;strong&gt;time complexity&lt;/strong&gt; of this solution since we iterate through each element at least once. O(1) is the &lt;strong&gt;space complexity&lt;/strong&gt; because no extra memory was needed for the solution. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solution-2-reverse-a-linked-list-using-recursion"&gt;
  &lt;/a&gt;
  Solution 2: Reverse a linked list using recursion
&lt;/h2&gt;

&lt;p&gt;The recursive solution uses a &lt;strong&gt;stack&lt;/strong&gt;. Each recursive call requires your compiler to allocate stack memory. Since recursive implementation can run out of memory, the recursive solution isn't the best approach when working with very large linked lists.&lt;/p&gt;

&lt;p&gt;To return the head of the new list, we recursively visit each node in the given linked list until we reach the last node. This last node then serves as the new head of the list. On the return path, each node appends itself to the end of the partial reversed list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;


struct Node {
    int data;
    struct Node* next;
    Node(int data)
    {
        this-&amp;gt;data = data;
        next = NULL;
    }
};

struct LinkedList {
    Node* head;
    LinkedList()
    {
        head = NULL;
    }

    Node* reverse(Node* head)
    {
        if (head == NULL || head-&amp;gt;next == NULL)
            return head;
        // Recursive call
        Node* rest = reverse(head-&amp;gt;next);
        head-&amp;gt;next-&amp;gt;next = head;

        head-&amp;gt;next = NULL;

        return rest;
    }

    void print()
    {
        struct Node* temp = head;
        while (temp != NULL) {
            cout &amp;lt;&amp;lt; temp-&amp;gt;data &amp;lt;&amp;lt; " ";
            temp = temp-&amp;gt;next;
        }
    }

    void push(int data)
    {
        Node* temp = new Node(data);
        temp-&amp;gt;next = head;
        head = temp;
    }
};

int main()
{
    LinkedList ll;
    ll.push(28);
    ll.push(21);
    ll.push(14);
    ll.push(7);

    cout &amp;lt;&amp;lt; "Original Linked List\n";
    ll.print();

    ll.head = ll.reverse(ll.head);

    cout &amp;lt;&amp;lt; "\nReversed Linked List \n";
    ll.print();
    return 0;
}
==&amp;gt;Original Linked List
==&amp;gt;7 14 21 28 
==&amp;gt;Reversed Linked List 
==&amp;gt;28 21 14 7 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;space complexity&lt;/strong&gt; of this solution is O(N) since we create a recursive stack for each recursive function call. O(N) is the &lt;strong&gt;time complexity&lt;/strong&gt; of this solution, since we iterate through each element at least once.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Now you know how to reverse a linked list! This is a common question in C++ coding interviews. Before going to a coding interview, you’ll want to be comfortable with as many C++ data structures as possible. &lt;/p&gt;

&lt;p&gt;To help you learn C++, check out our &lt;a href="https://www.educative.io/path/ace-cpp-coding-interview"&gt;&lt;strong&gt;Ace the C++ Coding Interview&lt;/strong&gt;&lt;/a&gt; learning path. This interactive learning path helps you prepare for C++ interviews with several modules and quizzes, including content covering several other operations on data structures.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-c"&gt;
  &lt;/a&gt;
  Continue learning about C++
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/pass-array-to-function-c-plus-plus"&gt;How to pass an array to a function in C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/intermediate-cpp-tutorial"&gt;Intermediate C++ tutorial: Strings, maps, memory, and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/cpp-data-structures-interview-prep"&gt;9 C++ data structures you need to know for your interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#start-a-discussion"&gt;
  &lt;/a&gt;
  Start a discussion
&lt;/h3&gt;

&lt;p&gt;How do you approach reversing linked lists? Is there anything we missed that you'd like to learn about? Let us know in the comments below!&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
      <category>programming</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Building Edge Applications With Apache Pulsar</title>
      <author>Timothy Spann</author>
      <pubDate>Fri, 17 Dec 2021 21:12:48 +0000</pubDate>
      <link>https://dev.to/tspannhw/building-edge-applications-with-apache-pulsar-1ff2</link>
      <guid>https://dev.to/tspannhw/building-edge-applications-with-apache-pulsar-1ff2</guid>
      <description>&lt;p&gt;The explosive growth of connected remote devices is posing challenges for the centralized computing paradigm. Due to network and infrastructure limitations, organizations find it increasingly difficult to move and process all the device-generated data in data centers or the cloud without latency or performance issues. As a result, edge applications are on the rise. By Gartner’s estimation, 75% of enterprise data will be created and processed outside data centers or the cloud by 2025.&lt;br&gt;
So what are edge applications? Edge applications run on or near the sources of data, such as IoT devices and local edge servers, and edge execution. Edge computing enables computation, storage, cache, management, alerting, machine learning, and routing to happen beyond data centers and the cloud. Organizations across industries, such as retail, farming, manufacturing, transportation, healthcare, and telecommunications, are adopting edge applications to achieve lower latency, better bandwidth availability, lower infrastructure costs, and faster decision-making.&lt;br&gt;
In this article, you will learn some of the challenges of developing edge applications and why Apache Pulsar is the solution. You will also learn how to build edge applications using Pulsar with a step-by-step example.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Key Challenges
While the decentralized nature of edge computing offers a multitude of benefits, it also poses challenges. Some of the key challenges include:
Edge applications often need to support a variety of devices, protocols, languages, and data formats.
Communication from edge applications needs to be asynchronous with a stream of events from sensors, logs, and applications at a rapid but uneven pace.
By design, edge producers of data require diverse messaging cluster deployments.
By design, edge applications are geographically distributed and heterogeneous.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Solution&lt;br&gt;
To overcome the key challenges of building edge applications, you need an adaptable, hybrid, geo-replicated, extensible, and open-source solution. A widely-adopted open-source project provides the support of an engaged community and a rich ecosystem of adapters, connectors, and extensions needed for edge applications. After working with different technologies and open-source projects for the past two decades, I believe Apache Pulsar solves the needs for edge applications.&lt;br&gt;
Apache Pulsar is an open-source, cloud-native, distributed messaging and streaming platform. Since Pulsar became a top-level Apache Software Foundation project in 2018, its community engagement, ecosystem growth, and global adoption have skyrocketed. Pulsar is equipped to solve the many challenges of edge computing because:&lt;br&gt;
Apache Pulsar supports fast messaging, metadata, and many data formats with support for various schemas.&lt;br&gt;
Pulsar supports a rich set of client libraries in Go, C++, Java, Node.js, Websockets, and Python. Additionally, there are community-released open-source clients for Haskell, Scala, Rust, and .Net as well as stream processing libraries for Apache Flink and Apache Spark.&lt;br&gt;
Pulsar supports multiple messaging protocols, including MQTT, Kafka, AMQP, and JMS.&lt;br&gt;
Pulsar’s geo-replication feature solves the issues with distributed device locations.&lt;br&gt;
Pulsar is cloud-native and can run in any cloud, on-premises, or Kubernetes environment. It can also be scaled down to run on edge gateways and powerful devices like the NVIDIA Jetson Xavier NX.&lt;br&gt;
In today’s examples, we build out edge applications on an NVIDIA Jetson Xavier NX, which provides us enough power to run an edge Apache Pulsar standalone broker, multiple web cameras, and deep learning edge applications with horsepower to spare. My edge device contains 384 NVIDIA CUDA® cores and 48 Tensor cores, six 64-bit ARM cores, and 8 GB of 128-bit LPDDR4x RAM. In my upcoming blogs, I will show you that running Pulsar on more restrained devices like Raspberry PI 4s and NVIDIA Jetson Nanos is still adequate for fast edge event streams.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Architecture&lt;br&gt;
Now that we have covered the physical architecture of our solution, let’s focus on how we want to logically structure incoming data. For those of you unfamiliar with Pulsar, each topic belongs to both a tenant and a namespace as shown in the diagram below.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These logical constructs allow us to group data together based on various criteria such as the original source of the data and different business. Once we have decided on our tenant, namespaces, and topics, we need to determine what fields we will need to collect additional data required for analytics.&lt;br&gt;
Next, we need to determine the format of our data. It can be the same as the original format or we can transform it to meet transport, processing, or storage requirements. We need to ask ourselves a number of architectural questions. Plus in many cases, our devices, equipment, sensors, operating system, or transport force us to choose a specific data format.&lt;br&gt;
For today’s application we are going to use JSON, which is ubiquitous for practically any language and human readable. . Apache Avro, a binary format, is also a good option, but for these blogs we will keep it simple.&lt;br&gt;
Now that data format is chosen, we may need to enrich the raw data with extra fields beyond what is produced by the sensors, machine learning classification, logs, or other sources. I like to add IP address, mac address, host name, a creation timestamp, execution time, and some fields about the device health like disk space, memory, and CPU. You can add more or remove some if you don’t see a need for it or if your device already broadcasts device health. At a minimum these fields can help with debugging especially when you get thousands of devices. Therefore I always like to include them unless strict bandwidth restrictions make that impossible.&lt;br&gt;
We need to find a primary key or unique identifier for our event record. Often IoT data does not have a natural one. We can synthesize one with a UUID generator at the creation of the record.&lt;br&gt;
Now that we have a list of fields, we need to fit a schema to our data and determine field names, types, defaults, and nullability. Once we have a schema defined, which we can do with JSON Schema or build a class with the fields, we can then use Pulsar SQL to query data from our topics. We can also leverage that schema to run continuous SQL with Apache Flink SQL.&lt;/p&gt;

&lt;p&gt;For IoT applications you often want to use a time-series-capable primary data store for these events. I recommend Aerospike, InfluxDB, or ScyllaDB. We can handle this via Pulsar IO sinks or other mechanisms based on use cases and needs. We can use the Spark connector, Flink Connector, or NiFi connector if needed.&lt;br&gt;
Our final event will look like the JSON in the following example.&lt;br&gt;
{"uuid": "xav_uuid_video0_lmj_20211027011044", "camera": "/dev/video0", "ipaddress": "192.168.1.70", "networktime": 4.284832000732422, "top1pct": 47.265625, "top1": "spotlight, spot", "cputemp": "29.0", "gputemp": "28.5", "gputempf": "83", "cputempf": "84", "runtime": "4", "host": "nvidia-desktop", "filename": "/home/nvidia/nvme/images/out_video0_tje_20211027011044.jpg", "imageinput": "/home/nvidia/nvme/images/img_video0_eqi_20211027011044.jpg", "host_name": "nvidia-desktop", "macaddress": "70:66:55:15:b4:a5", "te": "4.1648781299591064", "systemtime": "10/26/2021 21:10:48", "cpu": 11.7, "diskusage": "32367.5 MB", "memory": 82.1}&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Edge Producers
Let’s test out a few libraries, languages, and clients on our NVIDIA Jetson Xavier NX to see which is best for our use case. After prototyping a number of libraries that ran on Ubuntu with NVIDIA Jetson Xavier NX’s version of ARM, I have found a number of options that produce messages in line with what I need for my application. These are not the only but very good options for this edge platform.
Go Lang Pulsar Producer
Python 3.x Websocket Producer
Python 3.x MQTT Producer
Java 8 Pulsar Producer
Go Lang Pulsar Producer
package main
import (
    "context"
    "fmt"
    "log"
    "github.com/apache/pulsar-client-go/pulsar"
    "github.com/streamnative/pulsar-examples/cloud/go/ccloud"
   "github.com/hpcloud/tail"
)
func main() {
client := ccloud.CreateClient()
producer, err := client.CreateProducer(pulsar.ProducerOptions{
    Topic: "jetson-iot",
})
if err != nil {
    log.Fatal(err)
}
defer producer.Close()
t, err := tail.TailFile("demo1.log", tail.Config{Follow:true})
    for line := range t.Lines {
    if msgId, err := producer.Send(context.Background(), 
&amp;amp;pulsar.ProducerMessage{
        Payload: []byte(line.Text),
    }); err != nil {
        log.Fatal(err)
    } else {
        fmt.Printf("jetson:Published message: %v-%s \n", 
msgId,line.Text)
    }
}
}
Python 3 Websocket Producer
import requests, uuid, websocket, base64, json
uuid2 = uuid.uuid4()
row = {}
row['host'] = 'nvidia-desktop'
ws = websocket.create_connection( 'ws://server:8080/ws/v2/producer/persistent/public/default/energy')
message = str(json.dumps(row) )
message_bytes = message.encode('ascii')
base64_bytes = base64.b64encode(message_bytes)
base64_message = base64_bytes.decode('ascii')
ws.send(json.dumps({ 'payload' : base64_message, 'properties': { 'device' : 'jetson2gb', 'protocol' : 'websockets' },'key': str(uuid2), 'context' : 5 }))
response =  json.loads(ws.recv())
if response['result'] == 'ok':
        print ('Message published successfully')
else:
        print ('Failed to publish message:', response)
ws.close()
Java Pulsar Producer with Schema
public static void main(String[] args) throws Exception {
    JCommanderPulsar jct = new JCommanderPulsar();
    JCommander jCommander = new JCommander(jct, args);
    if (jct.help) {
        jCommander.usage();
        return;
    }
    PulsarClient client = null;
    if ( jct.issuerUrl != null &amp;amp;&amp;amp; jct.issuerUrl.trim().length() &amp;gt; 
0 ) {
        try {
            client = PulsarClient.builder()
                    .serviceUrl(jct.serviceUrl.toString())
                    .authentication(
AuthenticationFactoryOAuth2.clientCredentials(new URL(jct.issuerUrl.toString()),new URL(jct.credentialsUrl.toString()), jct.audience.toString())).build();
        } catch (PulsarClientException e) {
            e.printStackTrace();
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    }
    else {
        try {
            client = PulsarClient.builder().serviceUrl(jct.serviceUrl.toString()).build();
        } catch (PulsarClientException e) {
            e.printStackTrace();
        }
    }
    UUID uuidKey = UUID.randomUUID();
    String pulsarKey = uuidKey.toString();
    String OS = System.getProperty("os.name").toLowerCase();
    String message = "" + jct.message;
    IoTMessage iotMessage = parseMessage("" + jct.message);
    String topic = DEFAULT_TOPIC;
    if ( jct.topic != null &amp;amp;&amp;amp; jct.topic.trim().length()&amp;gt;0) {
        topic = jct.topic.trim();
    }
    ProducerBuilder producerBuilder = client.newProducer(JSONSchema.of(IoTMessage.class))
            .topic(topic)
            .producerName("jetson").
            sendTimeout(5, TimeUnit.SECONDS);
    Producer producer = producerBuilder.create();
    MessageId msgID = producer.newMessage()
            .key(iotMessage.getUuid())
            .value(iotMessage)
            .property("device", OS)
            .property("uuid2", pulsarKey)
            .send();
    producer.close();
    client.close();
    producer = null;
    client = null;
}
private static IoTMessage parseMessage(String message) {
    IoTMessage iotMessage = null;
    try {
        if ( message != null &amp;amp;&amp;amp; message.trim().length() &amp;gt; 0) {
            ObjectMapper mapper = new ObjectMapper();
            iotMessage = mapper.readValue(message, IoTMessage.class);
            mapper = null;
        }
    }
    catch(Throwable t) {
        t.printStackTrace();
    }
    if (iotMessage == null) {
        iotMessage = new IoTMessage();
    }
    return iotMessage;
}
java -jar target/IoTProducer-1.0-jar-with-dependencies.jar --serviceUrl pulsar://nvidia-desktop:6650 --topic 'iotjetsonjson' --message "...JSON…"
You can find all the source code here.
Now we determine how to execute our applications on the devices. It can be using a scheduler that comes with the system such as cron or some add-on. I often use cron, MiNiFi agents, a shell script, or run the application continuously as a service. You will have to investigate your device and sensor for optimal scheduling.&lt;/li&gt;
&lt;li&gt;Validate Data and Monitor
Now that we have a continuous stream of events streaming into our Pulsar cluster, we can validate the data and monitor our progress. The easiest option is to use StreamNative Cloud Manager for a fresh web interface to our unified messaging data, as shown in the diagram below. We also have the option to view the Pulsar metrics endpoint as documented here.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Check Stats via REST&lt;br&gt;
http://:8080/admin/v2/persistent/public/default/mqtt-2/stats http://:8080/admin/v2/persistent/public/default/mqtt-2/internalStats&lt;br&gt;
Check Stats via Admin CLI&lt;br&gt;
bin/pulsar-admin topics stats-internal persistent://public/default/mqtt-2&lt;br&gt;
Find Subscriptions to Your Topic&lt;br&gt;
&lt;a href="http://nvidia-desktop:8080/admin/v2/persistent/public/default/mqtt-2/subscriptions"&gt;http://nvidia-desktop:8080/admin/v2/persistent/public/default/mqtt-2/subscriptions&lt;/a&gt;&lt;br&gt;
Consume from Subscription via REST&lt;br&gt;
&lt;a href="http://nvidia-desktop:8080/admin/v2/persistent/public/default/mqtt-2/subscription/mqtt2/position/10"&gt;http://nvidia-desktop:8080/admin/v2/persistent/public/default/mqtt-2/subscription/mqtt2/position/10&lt;/a&gt;&lt;br&gt;
Consume Messages via CLI&lt;br&gt;
bin/pulsar-client consume "persistent://public/default/mqtt-2" -s "mqtt2" -n 5&lt;br&gt;
Query Topics via Pulsar SQL&lt;br&gt;
select * from pulsar."public/default".iotjetsonjson;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Next Steps
At this point, we have built an edge application that can stream data at event speed and join thousands of other applications’ streaming data into your Apache Pulsar cluster. Next we can add rich, real-time analytics with Flink SQL. This will allow us to do advanced stream processing, join event streams, and process data at scale.
Start a trial with StreamNative Cloud now so you can start building IoT applications immediately. With StreamNative Cloud, you can spin up a Pulsar Cluster within minutes.&lt;/li&gt;
&lt;li&gt;Further Learning
This blog did not cover the Pulsar fundamentals, which you will need if you want to build your own edge applications following my methods. If you are new to Pulsar, I highly recommend that you take the self-serve Pulsar courses or instructor-led Pulsar training developed by StreamNative Academy. This will get you started with Pulsar and accelerate your streaming immediately.
If you are interested in learning more about edge and building your own connectors, take a look at the following resources:
My talk at Pulsar Summit EU 2021 — Using the FLiPN Stack for Edge AI (Flink, NiFi, Pulsar) (Get the slides here)
Pulsar client libraries
Example source
InfluxDB Pulsar IO sink connector
Java OAuth2 example for StreamNative Cloud login&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    <item>
      <title>C++ complete roadmap</title>
      <author>Manak Upadhyay</author>
      <pubDate>Fri, 17 Dec 2021 21:03:34 +0000</pubDate>
      <link>https://dev.to/manak/c-complete-roadmap-5e4</link>
      <guid>https://dev.to/manak/c-complete-roadmap-5e4</guid>
      <description>&lt;p&gt;Let's jump in!&lt;/p&gt;

&lt;p&gt;If you are a beginner I will suggest you to make a time table of at least 45 days which will be sufficient in order to get a really good understanding of C++. Now, you can break your 45 days into 6 weeks and start with the concepts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1st Week&lt;/strong&gt;: Now, these seven days will introduce you to something that you have no previous knowledge of. So make sure you understand the foundations well and give a kickstart to the world of programming.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is C++?&lt;/li&gt;
&lt;li&gt;It’s history and features.&lt;/li&gt;
&lt;li&gt;Understanding and writing our first Hello World program in C++.&lt;/li&gt;
&lt;li&gt;Tokens&lt;/li&gt;
&lt;li&gt;Variables, Datatypes.&lt;/li&gt;
&lt;li&gt;Keywords&lt;/li&gt;
&lt;li&gt;How to take input from the user?&lt;/li&gt;
&lt;li&gt;Operators

&lt;ul&gt;
&lt;li&gt;Arithmetic Operators.&lt;/li&gt;
&lt;li&gt;Logical Operators.&lt;/li&gt;
&lt;li&gt;Relational Operators.&lt;/li&gt;
&lt;li&gt;Other operators.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Selection Statements

&lt;ul&gt;
&lt;li&gt;if statements&lt;/li&gt;
&lt;li&gt;if-else&lt;/li&gt;
&lt;li&gt;else-if&lt;/li&gt;
&lt;li&gt;switch&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2nd Week&lt;/strong&gt;: Now you have understood the basic units of a program well. Its time to take a step forward. So, schedule yourself to learn the following topics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loops

&lt;ul&gt;
&lt;li&gt;for loop&lt;/li&gt;
&lt;li&gt;while loop&lt;/li&gt;
&lt;li&gt;do-while loop&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Jump Statements

&lt;ul&gt;
&lt;li&gt;goto&lt;/li&gt;
&lt;li&gt;break&lt;/li&gt;
&lt;li&gt;continue&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Comments.&lt;/li&gt;
&lt;li&gt;Arrays

&lt;ul&gt;
&lt;li&gt;One-Dimensional Array.&lt;/li&gt;
&lt;li&gt;Two-Dimensional Array.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Now, start solving some problems on these topics, so that you get a good grip on them.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3rd Week&lt;/strong&gt;: It’s time to start functions and play with pointers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functions

&lt;ul&gt;
&lt;li&gt;Call by value.&lt;/li&gt;
&lt;li&gt;Call by reference&lt;/li&gt;
&lt;li&gt;Function Overloading.&lt;/li&gt;
&lt;li&gt;Inline functions.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pointers&lt;/strong&gt;: Now this is a topic that most of the students find difficult. But believe me, it’s a myth. If you will understand the basics of pointers well, you will surely love C++, as it is one of C++’s coolest features. So get a hold on them.&lt;/li&gt;
&lt;li&gt;Relation between Pointers and Array.&lt;/li&gt;
&lt;li&gt;Array to Functions.&lt;/li&gt;
&lt;li&gt;Structures.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I said, solve problems to check your understanding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4th Week&lt;/strong&gt;: Now, these topics are asked everywhere like Interviews, practical exams, etc. So don’t make haste and understand them in depth.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Classes and Objects.&lt;/li&gt;
&lt;li&gt;this keyword, static keyword, Friend Functions.&lt;/li&gt;
&lt;li&gt;Constructors.

&lt;ul&gt;
&lt;li&gt;Default Constructor.&lt;/li&gt;
&lt;li&gt;Parametrized Constructor.&lt;/li&gt;
&lt;li&gt;Copy Constructor.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Destructors.&lt;/li&gt;
&lt;li&gt;Concepts of Object-Oriented Programming(OOP).

&lt;ul&gt;
&lt;li&gt;Abstraction.&lt;/li&gt;
&lt;li&gt;Encapsulation.&lt;/li&gt;
&lt;li&gt;Inheritance.&lt;/li&gt;
&lt;li&gt;Polymorphism.&lt;/li&gt;
&lt;li&gt;Data Hiding.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Practice problems on these concepts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5th Week:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inheritance

&lt;ul&gt;
&lt;li&gt;Types of Inheritance.&lt;/li&gt;
&lt;li&gt;Derived and Base class.&lt;/li&gt;
&lt;li&gt;Access Specifiers.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Polymorphism.

&lt;ul&gt;
&lt;li&gt;Compile Time Polymorphism.&lt;/li&gt;
&lt;li&gt;Overloading.&lt;/li&gt;
&lt;li&gt;Overriding.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Run Time Polymorphism.

&lt;ul&gt;
&lt;li&gt;Virtual Functions.&lt;/li&gt;
&lt;li&gt;Operator Overloading.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Exception Handling.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Practice, practice, and practice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6th Week:&lt;/strong&gt; Get familiar with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Templates.&lt;/li&gt;
&lt;li&gt;Data File Handling.&lt;/li&gt;
&lt;li&gt;Macros.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it. After learning the above topics you can stand anywhere and say I know C++. :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most Important Tip&lt;/strong&gt;: You will face problems while learning some concepts, but please don’t quit. Because everybody faces them and it’s totally OKAY. Give yourself time and jump to that topic again cause this is how things work in the world of programming.&lt;/p&gt;

&lt;p&gt;Happy Coding:)&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Root to Linux: Hands-on Commands Part 2</title>
      <author>Christina Gorton</author>
      <pubDate>Fri, 17 Dec 2021 21:03:30 +0000</pubDate>
      <link>https://dev.to/coffeecraftcode/root-to-linux-hands-on-commands-part-2-de4</link>
      <guid>https://dev.to/coffeecraftcode/root-to-linux-hands-on-commands-part-2-de4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In part 1 of this guide, you will learned some of the basic Linux commands to see your working directory, list directories and files, make new directories, and create text files.&lt;/p&gt;

&lt;p&gt;In part 2 of this guide you will learn the commands to move directories, copy files, add content, and delete files. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;You will need a Linux shell to work with to try these commands in this tutorial. If you do not have a &lt;a href="https://en.wikipedia.org/wiki/Linux_distribution"&gt;Linux distro&lt;/a&gt; set up, you can use an online command shell to practice these commands. For this tutorial I used &lt;a href="https://bellard.org/jslinux/"&gt;JSLinux&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-changes-to-your-directories"&gt;
  &lt;/a&gt;
  Making Changes to Your Directories
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3sAXHUZv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pm5e1kcgr4bdc3t3lfjo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3sAXHUZv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pm5e1kcgr4bdc3t3lfjo.jpg" alt="Directory hierarchy" width="880" height="1108"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Look at the directories above. &lt;br&gt;
In part one of this guide you created the top directory hierarchy. When you created the original directories you added the Elliot directory under &lt;code&gt;Pride_prejudice&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Sometimes when you create directories or files you may find that they are in the wrong place and you need to move them. The character Elliot is actually in Jane Austen’s book Persuasion not Pride and Prejudice.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#moving-a-directory"&gt;
  &lt;/a&gt;
  Moving a Directory
&lt;/h3&gt;

&lt;p&gt;Instead of deleting the Elliot directory and creating a new one under Persuasion, you can use the &lt;code&gt;mv&lt;/code&gt; command to move the directory. When using the &lt;code&gt;mv&lt;/code&gt; command you add the file path you want to move, then the file path you want to it move to. &lt;/p&gt;

&lt;p&gt;In the Linux shell type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;austen/Pride_prejudice/Elliot/ austen/Persuasion/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will move the Elliot directory from the Pride_prejudice file path to the Persuasion file path. You can navigate to the Persuasion or Pride_prejudice directory and use the &lt;code&gt;ls&lt;/code&gt; command to see that the file was moved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZJKknL6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efvwup8fus82zyj0keg0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZJKknL6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efvwup8fus82zyj0keg0.png" alt="Moving a directory " width="880" height="261"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#copying-a-file"&gt;
  &lt;/a&gt;
  Copying a File
&lt;/h3&gt;

&lt;p&gt;Look at the image of the directories again. You can see that in the top directory there is no partner text file under the Pride_prejudice directory. &lt;/p&gt;

&lt;p&gt;In the bottom directory there is a partner.txt file under &lt;code&gt;Pride_prejudice/Darcy&lt;/code&gt;. You could navigate to that directory and use the &lt;code&gt;touch&lt;/code&gt; command to create the file. &lt;/p&gt;

&lt;p&gt;However, in this section you will use the &lt;code&gt;cp&lt;/code&gt; command to copy the &lt;code&gt;partner.txt&lt;/code&gt; file that is under the Persuasion/Wentworth directory instead.&lt;/p&gt;

&lt;p&gt;Currently these files are empty but if they had a lot of information in them it would be more efficient to copy the file instead of creating a new one with the &lt;code&gt;touch&lt;/code&gt; command and adding the information again.  &lt;/p&gt;

&lt;p&gt;In the Linux shell type the &lt;code&gt;cp&lt;/code&gt; command followed by the file path you want to copy and then the file path you want to copy it to. &lt;/p&gt;

&lt;p&gt;In this case you will copy the file from Wentworth to Darcy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PwLqJPjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9skhgfdmvuk6cq4gk49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PwLqJPjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9skhgfdmvuk6cq4gk49.png" alt="Copying a directory" width="880" height="195"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deleting-a-file"&gt;
  &lt;/a&gt;
  Deleting a File
&lt;/h3&gt;

&lt;p&gt;Another important command to know while working in the Linux shell is how to delete a file or directory. &lt;/p&gt;

&lt;p&gt;Look at the top and bottom directories again. &lt;br&gt;
In the top directory you can see the &lt;code&gt;partners.txt&lt;/code&gt; file under Churchill. This file is under Knightly instead in the bottom directory.&lt;/p&gt;

&lt;p&gt;Delete this file by using the &lt;code&gt;rm&lt;/code&gt;(remove) command. Be sure to use the correct file path when deleting a file. For this example type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;rm &lt;/span&gt;austen/Emma/Churchill/partner.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you delete the file, change directories into Churchill and use the &lt;code&gt;ls&lt;/code&gt; command to see if the file was removed. If no files are listed then your file was successfully deleted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eAQ8yhM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jw1lheuiddcya2m87l7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eAQ8yhM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jw1lheuiddcya2m87l7.png" alt="Deleting the partners.txt file" width="613" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#editing-a-text-file"&gt;
  &lt;/a&gt;
  Editing a Text File
&lt;/h3&gt;

&lt;p&gt;So far you have created three empty &lt;code&gt;partner.txt&lt;/code&gt; text files. Now you will use the &lt;code&gt;cat&lt;/code&gt; command to add text to the files. The &lt;code&gt;cat&lt;/code&gt; command is one of the more frequently used commands in Linux. It can be used to create single or multiple files, view the content of those files, concatenate files, and redirect output in terminal or files.&lt;/p&gt;

&lt;p&gt;In this guide you will use it to add content to a file and to view the content of the file. &lt;/p&gt;

&lt;p&gt;Change directories to &lt;code&gt;austen/Emma/Knightly&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; partners.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be able to type content to the shell. Type &lt;code&gt;Mr. Knightly marries Emma&lt;/code&gt; into the shell. To exit type &lt;code&gt;Ctrl + d&lt;/code&gt; from the keyboard.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4uwaT__v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7yywjjussnt3jyymo7o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4uwaT__v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7yywjjussnt3jyymo7o.png" alt="Using cat command to add content to file" width="778" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To view the content you can use the cat command and file name. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fq83LeS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10c674yb6vribxx8jdii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fq83LeS4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10c674yb6vribxx8jdii.png" alt="Using cat command to see contents of a file" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, you can use the &lt;code&gt;less&lt;/code&gt; command to view content of a text file. &lt;br&gt;
If you use the &lt;code&gt;less&lt;/code&gt; command you will need to type &lt;code&gt;q&lt;/code&gt; on your keyboard to exit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dRxtOA5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6ohoiof3ck2cgjfgnwp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dRxtOA5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6ohoiof3ck2cgjfgnwp.png" alt="Less command to see content" width="701" height="349"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KAXchyfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzearly63zxz9obmc05o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KAXchyfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzearly63zxz9obmc05o.png" alt="Content displayed with the less command" width="880" height="636"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more practice, navigate to the other partner.txt files and add content to them. &lt;/p&gt;

&lt;p&gt;In &lt;code&gt;Wentworth/partner.txt&lt;/code&gt; add the following content:&lt;br&gt;
&lt;code&gt;Captain Wentworth marries Anne Elliot.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;Darcy/partner.txt&lt;/code&gt; add the following content:&lt;br&gt;
&lt;code&gt;Mr. Darcy marries Elizabeth Bennet&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In part 2 of this hands-on guide you learned the following basic commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;mv&lt;/code&gt; to move directories&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cp&lt;/code&gt; to copy directories or files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rm&lt;/code&gt; to delete files (if you want to delete a directory and all of it's contents use the &lt;code&gt;rm&lt;/code&gt; command with the &lt;code&gt;-r&lt;/code&gt; (recursive) option: &lt;code&gt;rm -r directory_name&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cat&lt;/code&gt; to edit a text file or view it's content&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have worked through both of the hands-on guides take the time to go back through all of the commands to reinforce what you have learned.  &lt;/p&gt;

</description>
      <category>linux</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Root to Linux: Hands-on Commands Part 1</title>
      <author>Christina Gorton</author>
      <pubDate>Fri, 17 Dec 2021 21:03:21 +0000</pubDate>
      <link>https://dev.to/coffeecraftcode/root-to-linux-hands-on-commands-part-1-284e</link>
      <guid>https://dev.to/coffeecraftcode/root-to-linux-hands-on-commands-part-1-284e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;One of the most intimidating parts of learning Linux is working with the Linux shell. The shell is a command line interpreter and gives a user the ability to execute programs which are also called commands. &lt;/p&gt;

&lt;p&gt;In part 1 of this guide, you will learn and use some of the basic Linux commands to see your working directory, list directories and files, make new directories, and create text files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;You will need a Linux shell to work with to try these commands in this tutorial. If you do not have a &lt;a href="https://en.wikipedia.org/wiki/Linux_distribution"&gt;Linux distro&lt;/a&gt; set up, you can use an online command shell to practice these commands. For this tutorial I used &lt;a href="https://bellard.org/jslinux/"&gt;JSLinux&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checking-current-directory"&gt;
  &lt;/a&gt;
  Checking Current Directory
&lt;/h2&gt;

&lt;p&gt;In Linux, a directory is a location on your computer that stores files. They are set up in a hierarchical system on your computer. &lt;/p&gt;

&lt;p&gt;To see what directory you are currently in you can use the &lt;code&gt;pwd&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While using JSLinux you will be in the &lt;code&gt;root&lt;/code&gt; directory. &lt;/p&gt;

&lt;p&gt;If you are using the Linux shell on your own computer you will likely be in the &lt;code&gt;home&lt;/code&gt; directory. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AEbkdSGy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6oclxe3yr1kbnnfbqsq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AEbkdSGy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6oclxe3yr1kbnnfbqsq.png" alt="pwd command to show current working directory" width="608" height="225"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-directories"&gt;
  &lt;/a&gt;
  Creating Directories
&lt;/h2&gt;

&lt;p&gt;Now that you know what directory you are in, you can start creating new directories and set up your own hierarchical structure. &lt;/p&gt;

&lt;p&gt;In the image below. you will see several directories and files that are set up in a hierachy. These directories are named after the author Jane Austen, some of her books, and a few of the characters in those books. &lt;/p&gt;

&lt;p&gt;In this section of the tutorial you will learn the commands to create each directory, change directories and list the directories that have been created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UCzyZJoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1zqm4rnoq9ldiw3hgb0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UCzyZJoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1zqm4rnoq9ldiw3hgb0.png" alt="Directory hierarchy" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first directory you will create is &lt;code&gt;austen&lt;/code&gt;. &lt;br&gt;
To create this directory you will use the &lt;code&gt;mkdir&lt;/code&gt; command which stands for make directory. &lt;br&gt;
In the Linux shell type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;austen
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you type &lt;code&gt;Austen&lt;/code&gt; it will be different from &lt;code&gt;austen&lt;/code&gt;. The Linux shell sees these as two different directories. Be sure to pay attention to your capitalization and any spelling errors while creating directories or files. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To see if the directory was created you can use the &lt;code&gt;ls&lt;/code&gt; command. &lt;br&gt;
This command is short for &lt;strong&gt;list&lt;/strong&gt; and will list out any directories or files that are in the current working directory.&lt;br&gt;&lt;br&gt;
In the image below you can see the &lt;code&gt;austen&lt;/code&gt; directory is listed along with a few default directories that come with JSLinux. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MM6j7BNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvqp0drzpwq8o4i5t16i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MM6j7BNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvqp0drzpwq8o4i5t16i.png" alt="austen directory listed with ls command" width="831" height="262"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-directories-under-raw-austen-endraw-"&gt;
  &lt;/a&gt;
  Creating Directories Under &lt;code&gt;austen&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Now you can create the next directories in the hierarchy. You will create the &lt;code&gt;Emma&lt;/code&gt;, &lt;code&gt;Persuasion&lt;/code&gt;, and &lt;code&gt;Pride_prejudice&lt;/code&gt; directories. &lt;br&gt;
You can create each directory one at a time with the &lt;code&gt;mkdir&lt;/code&gt; command like you did when creating the &lt;code&gt;austen&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdJ41G32--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elsetoxvkiexlkcci9tc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdJ41G32--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elsetoxvkiexlkcci9tc.png" alt="created the Emma directory" width="511" height="177"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or you can create several directories at a time like the image below.&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;mkdir&lt;/code&gt; command and separate each directory you would like to create. Here we create the &lt;code&gt;Persuasion&lt;/code&gt; and &lt;code&gt;Pride_prejudice&lt;/code&gt; directories all at once. &lt;/p&gt;

&lt;p&gt;Once you are done creating the directories you can use the &lt;code&gt;cd&lt;/code&gt; command, which stands for change directory, to move from the &lt;code&gt;root&lt;/code&gt; or &lt;code&gt;home&lt;/code&gt; directory to the &lt;code&gt;austen&lt;/code&gt; directory. &lt;br&gt;
From there you can use the &lt;code&gt;ls&lt;/code&gt; command to list all of your new directories and confirm they were successfully created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fxip9Hlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwoh0c4rijwi38jo711o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxip9Hlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwoh0c4rijwi38jo711o.png" alt="Creating multiple directories with mkdir" width="842" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create the next directories in the hierarchy you will use the same &lt;code&gt;mkdir&lt;/code&gt; command. In the image below you will see an example of changing directories to the austen directory and creating the character name directories. &lt;/p&gt;

&lt;p&gt;You must add them to the correct file path. For example, Knightly will go under the Emma directory so you will create it by including Emma in the file path like: &lt;br&gt;
&lt;code&gt;mkdir Emma/Knightly&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Repeat the same pattern with the other directories that need to be added. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In the Linux shell you can press the tab key on your keyboard after you start a file path to auto-complete it. For example, if you type &lt;code&gt;Pr&lt;/code&gt; then hit the &lt;code&gt;tab&lt;/code&gt; key it will auto complete to &lt;code&gt;Pride_prejudice&lt;/code&gt; for you. This will save time as you create more directories.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CMtcqvqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9gm1duga1tjtk4kp44b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CMtcqvqA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9gm1duga1tjtk4kp44b.png" alt="Creating more directories" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-a-text-file"&gt;
  &lt;/a&gt;
  Creating a Text File
&lt;/h3&gt;

&lt;p&gt;In the directory hierarchy image you can see that there are two &lt;code&gt;partner.txt&lt;/code&gt; files. &lt;br&gt;
&lt;code&gt;.txt&lt;/code&gt; stands for a text file. To create text files you use the &lt;code&gt;touch&lt;/code&gt; command. &lt;/p&gt;

&lt;p&gt;Navigate to the Churchill directory with the &lt;code&gt;cd&lt;/code&gt; command. &lt;br&gt;
Then type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;partner.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the &lt;code&gt;ls&lt;/code&gt; command to see if you were successful in creating a text file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N-Bf5RU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crh1huydxpdsqq7bcq2i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N-Bf5RU4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crh1huydxpdsqq7bcq2i.png" alt="Creating a text file" width="755" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the same steps to create a &lt;code&gt;partner.txt&lt;/code&gt; file under the &lt;code&gt;Persuasion/Wentworth&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Once you have created both text files you should now have all of the directories and files from the first image. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In part 1 of this hands-on guide you learned the following basic commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pwd&lt;/code&gt; to see your current working directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ls&lt;/code&gt; to list directories and files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mkdir&lt;/code&gt; to create a new directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd&lt;/code&gt; to change directories&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;touch&lt;/code&gt; to create a text file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In part 2 of this hands-on guide you will learn the commands to move a directory, copy a file, delete a file, and edit a file. &lt;/p&gt;

&lt;p&gt;Take the time to go back through the commands you just learned before moving on to part 2. &lt;/p&gt;

</description>
      <category>linux</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Community AMA: Adam Furtado and Scaling Kessel Run</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 17 Dec 2021 21:02:41 +0000</pubDate>
      <link>https://dev.to/linearb/community-ama-adam-furtado-and-scaling-kessel-run-1m6b</link>
      <guid>https://dev.to/linearb/community-ama-adam-furtado-and-scaling-kessel-run-1m6b</guid>
      <description>&lt;p&gt;How will the wars of the future be fought, and who is heading these advancements in technology? Back in 2017, the US Air Force created a program called Kessel Run, which aids war fighters in the realms of DevOps, Agile, and UX, and the head of this project was an analyst by the name of Adam Furtado. In February of 2021, &lt;a href="https://devinterrupted.com/podcast/winning-wars-literally-with-agile-devops/"&gt;we interviewed Adam on the Dev Interrupted Podcast&lt;/a&gt; and shortly afterward hosted an AMA on our community Discord server.&lt;/p&gt;

&lt;p&gt;Adam is the Chief of Platform at Kessel Run, and his story of how he almost single handedly led the US Air Force from 1970's software delivery methods to modern DevOps is one of the most incredible episodes of Dev Interrupted we've had. Adam talks about translating engineering to military officials and how he had to shift his mindset from application development to creating a system of systems. Listen to the episode here: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1yEGsyHYL7BJlNcYG0vQ0b"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This Community AMA took place on February 26, 2021 on the &lt;a href="https://discord.com/channels/771397800835022858/771400927479463996/814870708751826985"&gt;Dev Interrupted Discord.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; 📢📢Community AMA📢📢   &lt;a class="mentioned-user" href="https://dev.to/everyone"&gt;@everyone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Topic: Scaling Agile &amp;amp; DevOps&lt;/p&gt;

&lt;p&gt;We're getting started in 15-minutes! Adam Furtado joins us to share his experience and expertise in scaling his organization (Kessel Run) from 5 &amp;gt;&amp;gt; 200+ developers!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; Let's get this thing started! &lt;a class="mentioned-user" href="https://dev.to/here"&gt;@here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome to our little community Adam! I can honestly say your episode of Dev Interrupted this week was one of the most interesting episodes I've produced.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam Furtado:&lt;/em&gt;&lt;/strong&gt; Thanks for having me! I'm happy to hear that.  Fighter jets are inherently cool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; I don't think anyone can argue with that. To start things off, Adam can you give the community some quick context about Kessel Run? How many developers in your organization, what you’re building, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; Sure thing, KR is an Air Force organization proving that government-led software development will lead to better mission outcomes than outsourcing our software to companies that specialize in building airplanes (and using the same processes for their software).   We build applications for warfighters to more efficiently strategize, plan, execute, task and assess the complexities of air campaigns. We have grown to about 1300 people… I’d guess. 400 of those are developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;luisfernandezbr:&lt;/em&gt;&lt;/strong&gt; Adam. What are the top 5 tech/dev metrics that you consider important to measure on a dev team? (Not product metrics like MAU, MRR).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; I think they change as an organization changes... but for the most part I love the DORA 4... I think when used properly (and together!) it can tell you quite a bit about where you need to invest in your organization.  The relationships between the metrics are what drives the value and I think often get forgotten about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; Were you looking at different things (metrics or ways of visualizing work) when KR was smaller vs today?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; For sure. I led most of our app development at first and we were/are an XP shop.  Our teams were always very diligent about pulling the next story from the top of the backlog etc., so we never really had a WIP problem.  When I moved over to lead our platform org, they were using a poorly-executed pseudo-scrum model and all of a sudden all of the DeGrandis/Kersten/Kim stuff I have been reading my whole career started to make a ton more sense.  In building internal services, it was amazing to be able to see why work visualization matters and SEE the constraints building up.  I'm so glad that I made the switch to build the empathy needed to be a more effective leader.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; Sounds like a big jump indeed. I have to say I’m wicked curious about how software development is different from within the military vs. the corporate environments most of us know.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; Traditionally, the DoD was a case study in poor waterfall dev.  Years of requirement development by people very removed from the work, leading to a contract being put in place that could only feasibly be won by a big defense contractor, years of development to "deliver" the "finished" software to be tested by separate government test organizations for a year or so and then "fielded" manually by folks traveling around the world putting CDs in machines. We've proven that all that risk avoidance actually INCREASES risk and we've had it backwards all along.  To biggest thing we focused on early was how to reach Continuous Delivery with the heavy GRC requirements that we have in Defense (and rightfully so).  So we worked with a forward-leaning IT leader in the Air Force to create and pilot the first Continuous Authority to Operate in the DoD.  So instead of an approval to deploy to classified systems at the "end", we got our processes approved so everything coming out of our org was approved to go into those production environments.  That’s prob the most unique thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;luisfernandezbr:&lt;/em&gt;&lt;/strong&gt; How you measure the evolution of your dev teams? And what initiatives and practices you use to grow them (like Dojo's etc)? What content do you recommend about DeGrandis/Kersten/Kim?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; Deploy Frequency, Lead Time, Mean Time to Restore and Change/Fail Rate... Accelerate is the bible on this one (Forsgren, Humble, Kim)... Phoenix and Unicorn Project for Gene Kim's take on how to transform IT to DevOps approaches in big, slow companies... Making Work Visible by Domenica DeGrandis is a fantastic book on understanding what keeps us for being as productive as possible.... Mik Kersten's Project to Product on increasing flow.  There are a ton of others, but that's a good start.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;&lt;a href="https://discord.com/channels/771397800835022858/771400927479463996/814870708751826985"&gt;Read the unedited AMA and join in the discussion in the Dev Interrupted Discord here!&lt;/a&gt; With over 2000 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CigZ8dJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wcmbkx6tt0ahu5gtjqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CigZ8dJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wcmbkx6tt0ahu5gtjqh.png" alt="https://discord.com/invite/devinterrupted" width="880" height="182"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;drdwilcox:&lt;/em&gt;&lt;/strong&gt; Thanks for joining us. During the podcast episode you talked about gaining momentum with some early wins. How did you keep that momentum going?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; We struggled there, to be honest. The early wins were so much easier to "sell" to stakeholders.  "There wasn't an app before... now there is.  So I'm impressed". The first year we were deploying MVPs left and right and were the Belle of the ball.   However in building large scale systems, we started focusing a lot more on our infrastructure, data models, optimization, internally efficiencies... and things that were providing real value- but weren't as visible.  Those things are a lot less interesting to stakeholders. The Government has a very output-centric approach to value.  We have focused on building an outcome-driven organization, so there is always a conflict when discussing what is or isn't valuable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;drdwilcox:&lt;/em&gt;&lt;/strong&gt; I don't think it's just the government, to be honest. I have the same struggles in my private company. Output as defined by Product are sexy, all the other things are not. What was effective for you in getting the stakeholders re-engaged?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; It's still a work in progress, to be honest.  We constantly harp on the risk of NOT transforming in this way.  The 2018 National Defense Strategy hits on this hard and all of our Senior leaders are pushing the same message.  So that has been really helpful.  General Brown, AF Chief of Staff, has done a great job of being clear about where we need to drive, so that allows us a bit of a trump card when we come into contact with someone who is trying to hold back progress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; That idea of selling to stakeholders is really interesting, especially in the military. What did you have to say or do to convince your higher-up that  the counter-intuitive dev methodologies like releasing more frequently was worth a try?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; We had no support early on.  The incentive process in the military rewards people who follow the rules and work within the system.  We sort of worked quietly off to the side on a project nobody really cared about to prove the value once delivered.  Once we got that delivered… we had MASSIVE dollar savings, so we started to be loud about it.  In fact, we were told not to use the “Kessel Run” moniker by higher ups… we decided to do it anyway and started promoting pretty hard.  By the time our first FastCompany article came out, all those senior leaders changed their tune and now they will say they were supporters all along. I am constantly doing that translation/evangelism work. And in the military, people swap out of positions every year or so generally, so some new person will get dropped in with no idea what’s going on and we need to start over again.  “Nope, the cloud is a real place…” Continuous Delivery has broken every gov process.  The test community doesn’t know what to do or look for… Requirement Managers don’t understand their place.  Configuration Management is just…. Different now.  I don’t need some guy managing a spreadsheet of what versions of software are deployed where.   We are in a weird transition period right now. In a lot of ways those stakeholders are sick of hearing from me.  I'm sure they hear Charlie-Brown-teacher-voice when I try to discuss this stuff at this point.  So we have worked on finding the proper champions in higher up places to do that work for us.  The very top of the Air Force totally gets it.  It's everyone in between who need to keep their head down to keep rising in the ranks.  (Tale as old as time...)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; Geez, what a thing. I can't believe you have the energy to continuously fight these battles within your own organization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6JGhIUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imboldqt3wv947440ynr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6JGhIUJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imboldqt3wv947440ynr.jpg" alt="Star Wars Episode 10: The Phantom DevOps" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://devinterrupted.com/kessel-run-smuggling-devops-into-the-department-of-defense/"&gt;&lt;em&gt;Read more about Kessel Run and smuggling DevOps into the Department of Defense&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; Someone once told me a story about this dad who brought his family to the beach.  They had this big, pink inflatable bunny that the kids were using in the water.  Every so often the bunny would deflate and the kids would run back up the beach to the dad and he would huff and puff and blow it back up.  Kids would be happy and go back in the water.  An hour later, kids are back again and the dad is blowing it back up.  This person said "that is what innovation in the government is like".  Every once in awhile you need someone or something to "pump up your bunny".   The work I do is so exciting and fulfilling, all the BS that I have to deal with, all the money that government employees are leaving on the table, the bureaucracy ends up being worth it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; That is a great analogy. Reminds me of how you talked about the mission driven culture at KR on the podcast. Can you talk about why you believe the culture of your organization is so important? And any advice you might have for organizations who are bifurcated?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; Organizational alignment is incredibly important.  One place we have struggled is that we put such an emphasis on teams, that teams built strong individual identities.  They were empowered to solve their problem, but over time became less concerned about other teams' problems.  This was never more evident than working with the ops/platform teams.  The app teams knew what their users needed and all they cared about was meeting their needs.   Meanwhile, we had a whole organization with organizational outcomes that were the priority.  Let to a lack of empathy across teams and the communicate at the seams of teams was challenging. We are still digging ourselves out of that, but one thing we focus on is that mission-driven culture.  All it takes is a day like yesterday, with airstrikes in Syria, to level-set everyone on the seriousness of our work.  The mission aligns the teams towards a common goal and common outcomes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;luisfernandezbr:&lt;/em&gt;&lt;/strong&gt; Adam. Thanks for the great tips. What were the big challenges that you had when increasing the dev team?  Things like knowledge sharing, share learning and maintain quality and excellence. Could you share some tips about this, if it is the case?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; We sucked at all those things.  That mission-driven culture led us down the unenviable path about feeling so much pressure to deliver and support our users, that tech debt mounted and documentation suffered.  We struggled investing in automation in favor of getting short term wins.   The last year we have really rebalanced and ensured that we are providing space for our teams to organize their time better.  None of it was intentional, but regardless of what we said, we (leadership) were giving off the vibe that teams couldn't possibly slow down to invest in tech debt or spend time focusing on automating toil away.  We have had to be super clear that it is EXPECTED that teams work at a sustainable pace, invest in their code bases, invest in their professional growth and personal health and be okay saying "no". We have a lot of military members on our team, so saying "no" to your superiors is always a culture change we have to work on internally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Necco-LB:&lt;/em&gt;&lt;/strong&gt; Working on technical dept and automation vs. new features is something everyone can relate with for sure. I think we'll let Adam get back to his far more important job at Kessel Run. One last question, if someone here wants to get involved with Kessel Run, where can they go? Should they reach out to you?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adam:&lt;/em&gt;&lt;/strong&gt; This was fun- thanks for having me.  You can follow me on Twitter at @adamsfurtado or you can reach out directly at &lt;a href="mailto:afurtado@kr.af.mil"&gt;afurtado@kr.af.mil&lt;/a&gt;.  To follow along with KR, you can follow @kesselrunAF on most social media platform. I'd also like to plug that we are currently hiring for a bunch of roles from product leadership to engineers.  It's an incredible place to work and you can make a real impact.  Please take a look and reach out to me with any questions! Thanks again!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Antonette:&lt;/em&gt;&lt;/strong&gt; Job opportunities at Kessel Run here: &lt;a href="https://grnh.se/3201d1713us"&gt;https://grnh.se/3201d1713us&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;&lt;em&gt;Starved for top-level software engineering content? Need some good tips on how to manage your team? This AMA is based on an episode of &lt;a href="https://devinterrupted.com/podcasts/"&gt;Dev Interrupted&lt;/a&gt; - the go-to podcast for engineering leaders.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dev Interrupted features expert guests from around the world to explore strategy and day-to-day topics ranging from dev team metrics to accelerating delivery. With new guests every week from Google to small startups, the Dev Interrupted Podcast is a fresh look at the world of software engineering and engineering management.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devinterrupted.com/podcasts/"&gt;&lt;strong&gt;&lt;em&gt;Listen and subscribe on your streaming service of choice today.&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HgTsRoBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbqzjg5cbjub3u4ehdc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HgTsRoBL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbqzjg5cbjub3u4ehdc9.png" alt="https://devinterrupted.com/podcasts/" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>discord</category>
      <category>management</category>
      <category>agile</category>
    </item>
    <item>
      <title>23 Ways Machine Learning  Can Be Used</title>
      <author>images.cv</author>
      <pubDate>Fri, 17 Dec 2021 20:42:26 +0000</pubDate>
      <link>https://dev.to/imagescv/26-ways-machine-learning-can-be-used-44ni</link>
      <guid>https://dev.to/imagescv/26-ways-machine-learning-can-be-used-44ni</guid>
      <description>&lt;p&gt;Did you know that machine learning is used in a lot of different ways? It can be used to predict the weather, to help doctors diagnose diseases, and even to keep your internet browsing history private. In this blog post, we'll take a closer look at how machine learning is used and some of the benefits it offers. Stay tuned!&lt;/p&gt;

&lt;p&gt;&lt;u&gt;🔥 Machine learning algorithms can be used in a number of ways:&lt;/u&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To predict future events&lt;/strong&gt;. Machine learning can be used to predict everything from the weather to stock prices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To personalize user experiences&lt;/strong&gt;. Machine learning can be used to personalize the experience for each individual user, for example by recommending products or services that are likely to be of interest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To improve decision-making&lt;/strong&gt;. Machine learning can be used to help decision-makers make better choices by analyzing data and identifying patterns and trends.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To automate tasks&lt;/strong&gt;. Machine learning can be used to automate tasks such as identifying spam emails or fraudulent credit card transactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To improve health care.&lt;/strong&gt; Machine learning can be used to improve health care by helping to diagnose diseases and by providing personalized treatment plans.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To research new drugs&lt;/strong&gt;. Machine learning can be used to help researchers interactively explore chemical structures and predict properties such as toxicity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To find patterns in data&lt;/strong&gt;. Machine learning can be used to find patterns in the data that lead to better predictions, without being told what those patterns might be. For example, it could look for recurring purchase patterns among customers who buy a particular product and then alert marketers when it spots a new trend.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To improve security&lt;/strong&gt;. Machine learning can be used to improve security by identifying suspicious activity, such as patterns of unauthorized access to a network.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To create new products or services&lt;/strong&gt;. Machine learning can be used to create new products or services by analyzing data and identifying patterns that have not been previously discovered. For example, a retailer might use machine learning to identify new product trends by analyzing data from hundreds of thousands of online clothing purchases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To optimize operations&lt;/strong&gt;. Machine learning can be used to help companies make better decisions about how they run their operations, such as how they manufacture products or ship packages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To automate business processes&lt;/strong&gt;. Machine learning can be used to automate business processes, such as by automatically sorting and routing emails or filling out online forms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To improve customer service&lt;/strong&gt;. Machine learning can be used to improve customer service by predicting the needs of customers and providing personalized recommendations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To understand natural language&lt;/strong&gt;. Machine learning can be used to understand language, either written or spoken, by extracting meaning from text, audio, and images.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To translate languages&lt;/strong&gt;. Machine learning can be used to translate languages by helping computers understand the intent of words in different contexts. For example, it could enable a Spanish-English machine translation service that understands both English and Spanish.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To detect fraudulent activities&lt;/strong&gt;. Machine learning can be used to detect fraudulent activities by analyzing patterns of behavior that are indicative of fraud. For example, it could be used to identify unauthorized access to a bank account or the use of a stolen credit card number.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To recommend products or services&lt;/strong&gt;. Machine learning can be used to recommend products or services that would be of interest to a particular user. For example, it could recommend movies and books for users to purchase from an online store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To personalize content&lt;/strong&gt;. Machine learning can be used to personalize web search results and recommendations by analyzing the interests and preferences of individual users and predicting what information would appeal to them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To prevent traffic congestion&lt;/strong&gt;. Machine learning can be used to prevent traffic congestion by analyzing traffic data and predicting where congestion is likely to occur. This information could then be used to adjust the timing of traffic signals or to reroute traffic away from congested areas.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To improve public transportation&lt;/strong&gt;. Machine learning can be used to improve public transportation services by analyzing historical data and making recommendations for resources such as the number of trains or buses needed at specific times.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To optimize energy use&lt;/strong&gt;. Machine learning can be used to optimize energy use by identifying patterns in energy consumption and scheduling resources for when demand is expected to be below.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To identify patterns in financial transactions&lt;/strong&gt;. Machine learning can be used to identify possible fraudulent or erroneous financial transactions by analyzing patterns in large numbers of past transactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To detect early signs of diseases&lt;/strong&gt;. Machine learning can be used to detect early signs of disease based on patients' electronic health records, medical history, and other data sources. For example, a computer system could analyze patterns in patients' speech, genome data, or web-browsing history to predict whether they are at risk of developing certain diseases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;To predict the behavior of customers&lt;/strong&gt;. Machine learning can be used to predict customer preferences and behavior by analyzing their past purchases, browsing history, social media activity, and more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Machine learning is a type of artificial intelligence that allows computers to learn from data and improve their performance or accuracy. It can be used for any number of things, including making your website more user-friendly by personalizing it based on the visitor's preferences. But how does machine learning work? In short, an algorithm analyzes patterns in large sets of information (big data) so it can make predictions about new inputs. A common example might be predicting which products will sell well at a specific store location next month given past sales data from other stores in the chain. This would allow you to better plan inventory levels and optimize staffing requirements without having to rely solely on guesswork - potentially saving both time and money! &lt;/p&gt;




&lt;p&gt;&lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size and data augmentation.&lt;/p&gt;

&lt;p&gt;👉Visit &lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; to learn more&lt;/p&gt;

</description>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Congrats to our 2021 GitHub Actions Hackathon Winners!</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 17 Dec 2021 20:05:10 +0000</pubDate>
      <link>https://dev.to/devteam/congrats-to-our-2021-github-actions-hackathon-winners-1fhk</link>
      <guid>https://dev.to/devteam/congrats-to-our-2021-github-actions-hackathon-winners-1fhk</guid>
      <description>&lt;p&gt;For the second year in a row, we co-hosted the &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;GitHub Actions Hackathon&lt;/a&gt; with our friends at GitHub. &lt;/p&gt;

&lt;p&gt;This contest took place over the last month and challenged the community to create and document usable workflows that utilized GitHub Actions (— existing or newly-built). Participants picked one of five categories for their submissions: DIY Deployments, Maintainer Must-Haves, Phone-Friendly, Interesting IoT, or Wacky Wildcards.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#after-much-deliberation-between-the-dev-and-github-teams-the-final-results-are-in-and-were-so-excited-to-announce-the-winners-of-the-2021-github-actions-hackathon"&gt;
  &lt;/a&gt;
  After much deliberation between the DEV and GitHub teams, the final results are in and &lt;strong&gt;we're so excited to announce the winners of the 2021 GitHub Actions Hackathon&lt;/strong&gt;.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#grand-prize-winners"&gt;
  &lt;/a&gt;
  Grand Prize Winners
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DIY Deployments: &lt;a class="mentioned-user" href="https://dev.to/99littlebugs"&gt;@99littlebugs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/99littlebugs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LFJyfx-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bLRBk5AM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/644717/ca80c7bb-07eb-4672-9fac-2fd4fecf0c59.jpeg" alt="99littlebugs"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/99littlebugs/automatic-data-updates-for-static-websites-1gdl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automatic Data Updates for Static Websites&lt;/h2&gt;
      &lt;h3&gt;99littlebugs ・ Nov 23 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#githubactions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#jamstack&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Maintainer Must-Haves: &lt;a class="mentioned-user" href="https://dev.to/erikaheidi"&gt;@erikaheidi&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/erikaheidi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6eXk8o4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--95Vsc3-S--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/162988/b604f249-a248-4582-80e3-4a781d054e3f.jpeg" alt="erikaheidi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/erikaheidi/automatically-update-your-contributors-file-with-this-github-action-workflow-d98" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automatically update your CONTRIBUTORS file with this GitHub Action + Workflow&lt;/h2&gt;
      &lt;h3&gt;Erika Heidi ・ Nov 16 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#contributors&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Interesting IoT: &lt;a class="mentioned-user" href="https://dev.to/xaviergeerinck"&gt;@xaviergeerinck&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/xaviergeerinck" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBvb7Nxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MPQE66XR--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/214178/74ed6432-cb5d-4e09-b0d2-9bab9db791ef.jpg" alt="xaviergeerinck"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/xaviergeerinck/automating-pytorch-arm-builds-with-docker-buildx-for-nvidia-cuda-and-python-36-h31" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automating PyTorch ARM Builds with Docker BuildX for Nvidia CUDA and Python &amp;gt; 3.6&lt;/h2&gt;
      &lt;h3&gt;Xavier Geerinck ・ Nov 25 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nvidia&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Phone Friendly: &lt;a class="mentioned-user" href="https://dev.to/jforatier"&gt;@jforatier&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jforatier" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86g12kUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WFmR7B0G--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/367223/3191d85d-1f18-49ab-86a2-97e7b4992a52.jpg" alt="jforatier"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jforatier/build-test-and-deploy-your-android-application-with-github-actions-hh1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build, Test and Deploy your Android Application📱  with GitHub Actions 🤖&lt;/h2&gt;
      &lt;h3&gt;Julien Foratier ・ Nov 26 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kotlin&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Wacky Wildcards: &lt;a class="mentioned-user" href="https://dev.to/paulasantamaria"&gt;@paulasantamaria&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/paulasantamaria" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjiVRwOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DMNIJIHX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/61042/0a24f53f-aae9-4516-ac05-8f1cde9566db.jpg" alt="paulasantamaria"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/paulasantamaria/using-github-actions-to-turn-contributors-into-heroes-of-an-open-source-game-4cei" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Using GitHub Actions to turn contributors into heroes of an open source game&lt;/h2&gt;
      &lt;h3&gt;Paula Santamaría ・ Dec 9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#gamedev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All Grand Prize Winners will receive&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$1,500 USD gift card or equivalent 🤑&lt;/li&gt;
&lt;li&gt;$300 USD credit to the DEV Shop 😎&lt;/li&gt;
&lt;li&gt;GitHub Swag Pack 🎁&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack ✨&lt;/li&gt;
&lt;li&gt;DEV 2021 “GitHub Actions Hackathon” Grand Prize winner badge 🏆&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#runnersup-in-no-particular-order"&gt;
  &lt;/a&gt;
  Runners-Up (in no particular order)!
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mariehposa" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjBN2SEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Vlx-SRG0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378643/e59d7165-08ba-4728-9756-4d23c8911647.jpg" alt="mariehposa"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mariehposa/automating-terraform-with-github-actions-1hc3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automating Terraform With Github Actions&lt;/h2&gt;
      &lt;h3&gt;Mariam Adedeji ・ Dec 3 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#actions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/insan3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EH7-OqBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PesYeAtb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/115099/1ae74054-8e4d-4690-ac26-fd3ab885f634.jpg" alt="insan3"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/insan3/headless-cms-using-github-issues-and-github-actions-3bh8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Headless CMS using Github Issues and Github Actions&lt;/h2&gt;
      &lt;h3&gt;Oscar Nevárez ・ Nov 15 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/azisk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ORX-yRtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RDLphJ0Y--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/18412/75639850-545d-44b3-a024-2ddb083589ff.jpg" alt="azisk"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/azisk/how-we-build-an-open-source-app-for-animal-shelters-91e" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How we build an open source app for animal shelters&lt;/h2&gt;
      &lt;h3&gt;AzisK ・ Dec 8 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#animalshelter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#pets&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/arndom" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e88QwSzF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--stgWsRf2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/540171/34183fb6-9293-4c44-bd9d-e6b24e851514.jpg" alt="arndom"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/arndom/octo-my-readme-1pa8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Get a custom Github octocat in your README&lt;/h2&gt;
      &lt;h3&gt;Nabil Alamin ・ Nov 28 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/darthbenro008" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PYtKaaaf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CYuJDPh1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/241675/d9870963-fd83-4357-acc9-c3e6baece8b1.jpeg" alt="darthbenro008"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/darthbenro008/action-paniker-stimulate-your-sense-physically-when-your-build-fails-3ah9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Action Paniker - Stimulate your senses physically when your build fails 🚨&lt;/h2&gt;
      &lt;h3&gt;Hemanth Krishna ・ Dec 7 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#iot&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/lauren_schaefer" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tf09RPkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Pc81c2Xy--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/241842/a4613a71-b9cc-421c-a37e-8d66a26c86bd.jpg" alt="lauren_schaefer"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lauren_schaefer/sometimes-you-gotta-work-a-little-so-you-can-ball-a-lot-i7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;"Sometimes you gotta work a little, so you can ball a lot." &lt;/h2&gt;
      &lt;h3&gt;Lauren Schaefer ・ Dec 6 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mongodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ios&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/star_trooper" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yflCbwa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--rzhHpSOi--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/669994/a0d2d49b-1755-4d40-8a65-b0c9037c9a9a.png" alt="star_trooper"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/star_trooper/notify-bot-github-action-workflow-2676" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Notify Bot : Github Action + Workflow&lt;/h2&gt;
      &lt;h3&gt;Atharva Shirdhankar ・ Dec 7 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#actions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/robertobutti" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3fCMqHqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zXDq1E0V--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/243922/39e3a5b7-5be5-4a87-9289-42aae21a5052.png" alt="robertobutti"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/robertobutti/maghic-a-swiss-army-knife-for-github-actions-workflow-14kn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Maghic: a Swiss army knife for GitHub Actions Workflow&lt;/h2&gt;
      &lt;h3&gt;Roberto B. ・ Nov 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/oz9un" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JqTwFl9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vOGUbXRz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/709742/819a4005-40d3-4438-91fb-1ba2d12dc945.jpeg" alt="oz9un"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/oz9un/developers-collaborative-playlist-3eih" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Developers' Collaborative Playlist&lt;/h2&gt;
      &lt;h3&gt;oz9un ・ Dec 7 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#spotify&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/realsaddy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C-jaUqi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8wNfuOhu--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/255839/83d97548-bb32-41fc-910f-f7a09eeaae66.jpeg" alt="realsaddy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/realsaddy/library-of-babel-pr-3of9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Library of Babel PR&lt;/h2&gt;
      &lt;h3&gt;Jack ・ Nov 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#actionshackathon21&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All runners-up will receive&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$250 USD gift card or equivalent 💰&lt;/li&gt;
&lt;li&gt;$150 USD credit to the DEV Shop 🌈&lt;/li&gt;
&lt;li&gt;GitHub Swag Pack 😎&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack 💻&lt;/li&gt;
&lt;li&gt;DEV 2021 “GitHub Actions Hackathon” Runner-Up badge 🌟&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#participants"&gt;
  &lt;/a&gt;
  Participants
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;All participants with a valid project will receive a DEV sticker pack and a DEV 2021 "GitHub Actions Hackathon" participant profile badge. 🎉&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Three cheers for &lt;em&gt;everyone&lt;/em&gt; who submitted a project for the hackathon. These were some truly impressive projects.&lt;/p&gt;

&lt;p&gt;Thanks to all of you ❤️&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>opensource</category>
      <category>showdev</category>
    </item>
    <item>
      <title>3 SEO tips from my podcast interview with SEO expert</title>
      <author>Wannabe Entrepreneur 🎙️</author>
      <pubDate>Fri, 17 Dec 2021 19:57:22 +0000</pubDate>
      <link>https://dev.to/wbepodcast/3-seo-tips-from-my-podcast-interview-with-seo-expert-3l2g</link>
      <guid>https://dev.to/wbepodcast/3-seo-tips-from-my-podcast-interview-with-seo-expert-3l2g</guid>
      <description>&lt;p&gt;I just published my &lt;a href="https://wannabe-entrepreneur.com/episodes/174"&gt;chat&lt;/a&gt; with the SEO wizard &lt;a href="https://twitter.com/robertodigital_"&gt;Roberto Robles&lt;/a&gt; 🧙‍♂️ . He has been working in SEO for more than 15 years and what he teaches in our chat is really useful for indie makers and small entrepreneurs...&lt;/p&gt;

&lt;p&gt;Here are my three lessons from my SEO chat with Roberto:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1- Pick one Keyword per page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SEO keywords are the words and phrases in your website that make it possible for people to find your content via search engines.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You should define one keyword per page and use them in your h1 tags. Let's say you have a Twitter analytics tool, your home page keyword could be &lt;em&gt;Twitter&lt;/em&gt;. However, the product page would have different keywords like &lt;em&gt;analytics&lt;/em&gt; or &lt;em&gt;dashboard&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2- The importance of backlinks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A backlink is a link created when one website links to another.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For Google to see you as an authority in your topic is crucial that websites in the same field link to your content. A simple way to achieve this is by adding content in the so-called "foundational websites" that allowed you to create backlinks (indie hackers is one of them but Twitter is not). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3- Use on-page optimization tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These page optimization tools point out many improvement areas in your page that will help you rank better. This includes: metatags, page speed, load speed, images, etc...&lt;/p&gt;

&lt;p&gt;These are just 3 simple tips from our chat but if you are a bootstrapper I really recommend you to &lt;a href="https://wannabe-entrepreneur.com/episodes/174"&gt;listen to the full chat&lt;/a&gt; because there are many other SEO topics covered.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>I made an app to visualize React Hooks flow</title>
      <author>Augusto</author>
      <pubDate>Fri, 17 Dec 2021 19:47:54 +0000</pubDate>
      <link>https://dev.to/augusto1024/i-made-an-app-to-visualize-react-hooks-flow-32b3</link>
      <guid>https://dev.to/augusto1024/i-made-an-app-to-visualize-react-hooks-flow-32b3</guid>
      <description>&lt;p&gt;Are you using &lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;React hooks&lt;/a&gt; in your projects? If you're like me then you probably might had ran into weird or unexpected re-renders.&lt;/p&gt;

&lt;p&gt;I made a React app that lets you visualize the flow in which (some) React hooks are executed. Here's the list of hooks/actions that were considered for this app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://react-hooks-flow.vercel.app/"&gt;Lazy Initial State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://react-hooks-flow.vercel.app/"&gt;useState&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;useEffect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;Clean up effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rendering of a component&lt;/li&gt;
&lt;li&gt;Unmounting of a component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The app is based on &lt;a href="https://github.com/donavon"&gt;Donavon West&lt;/a&gt;'s &lt;a href="https://github.com/donavon/hook-flow"&gt;React hooks flow diagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-hooks-flow.vercel.app/"&gt;Here's the link&lt;/a&gt; to the app and also the &lt;a href="https://github.com/augusto1024/react-hooks-flow"&gt;link to the source code&lt;/a&gt; in case you want to check it out 😁&lt;/p&gt;

&lt;p&gt;Hopefully you'll find this useful and any feedback will be very much received 🙌&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
