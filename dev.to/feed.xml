<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Javascript flaws you should know</title>
      <author>Muhammad Muhktar Musa</author>
      <pubDate>Tue, 23 Nov 2021 13:44:33 +0000</pubDate>
      <link>https://dev.to/mcube25/javascript-flaws-you-should-know-44i2</link>
      <guid>https://dev.to/mcube25/javascript-flaws-you-should-know-44i2</guid>
      <description>&lt;h4&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h4&gt;

&lt;p&gt;We all know and everybody does agree that javascript is awesome. It is a language that by any metrics is growing faster than anything else. There is a lot of reasons for this. There is a lot of goodness in this. This are some core javascript traits.&lt;br&gt;
‚Ä¢ Built-in memory management&lt;br&gt;
‚Ä¢ Native serialization (JSON)&lt;br&gt;
‚Ä¢ Naturally scalable (via Eventloop)&lt;br&gt;
‚Ä¢ Frequent template /encoding use&lt;br&gt;
‚Ä¢ Flourishing npm package ecosystem&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript-capabilities"&gt;
  &lt;/a&gt;
  Javascript capabilities
&lt;/h4&gt;

&lt;p&gt;These are amazing capabilities. They are core allowing the building of amazing things. But sometimes the same capabilities that make it awesome also make it vulnerable. So you look at this various different capabilities and what you can see as Built- in memory management one can look at the flaws and see buffer objects and leaking memory from servers.  If you talk about native serialization  hackers can look at it and do some type manipulation because types a decided in runtime and those kind of changes can be manipulated. A lot of our talk today is going to center on how javascript capabilities can be manipulated and abused.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Built-in memory management : Buffer vulnerabilities&lt;br&gt;
‚Ä¢ Native serialization (JSON) : Type manipulation&lt;br&gt;
‚Ä¢ Naturally scalable (via Eventloop): Regex Dos&lt;br&gt;
‚Ä¢ Frequent template /encoding use: Sandbox Escaping&lt;br&gt;
‚Ä¢ Flourishing npm package ecosystem: Vulnerable packages&lt;/p&gt;

&lt;p&gt;Another thing to remember is that this vulnurebalities  don‚Äôt just happen in your code. Part of the core part of the javascript ecosystems are libraries . Npm, node, jquery. Much of the codes are open source codes. A typical application has thousands of dependencies which leads to a situation where your app is very large but your code is so small. It is slightly frightening from a security perspective. Most of your apps code come from npm which makes most of your apps vulnerabilities to come from npm.  This is not a theoretical problem, it is practically what happens when we use npm packages.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#risk-frontend-apps"&gt;
  &lt;/a&gt;
  Risk front-end Apps
&lt;/h4&gt;

&lt;p&gt;Packages use packages that use other packages and within that ecosystem is vulnerabilities. Pretty every node shop has these and this risk node apps and front-end app has vulnerabilities in front-end apps like angular, react and node apps with all the packages we pull in from npm. Also there is the internet of things, we hear about Ddos and other massive attacks that take down the internet. Many of these devices run node apps and light weight apps and these can have vulnerabilities. We are going to look at &lt;br&gt;
‚Ä¢ Explain and exploit real world javascript vulnerabilities using npm&lt;br&gt;
‚Ä¢ Discuss remediation and solutions for vulnerable code and packages&lt;br&gt;
We will discuss this in our next write up&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>websecurity</category>
    </item>
    <item>
      <title>Demystifying Closures in JavaScript</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 23 Nov 2021 13:42:54 +0000</pubDate>
      <link>https://dev.to/thenerdydev/demystifying-closures-in-javascript-222j</link>
      <guid>https://dev.to/thenerdydev/demystifying-closures-in-javascript-222j</guid>
      <description>&lt;p&gt;Hey guys üëãüèª,&lt;br&gt;
In this article, let us talk about Closures in Javascript.&lt;/p&gt;

&lt;p&gt;In this article, we will understand&lt;br&gt;
‚úî What are Closures ?&lt;br&gt;
‚úî Code Example with explanation.&lt;br&gt;
‚úî Conclusion&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-closures-"&gt;
  &lt;/a&gt;
  What are Closures ?
&lt;/h2&gt;

&lt;p&gt;Before understanding what a closure is, let us revisit the concept of &lt;strong&gt;functions&lt;/strong&gt;. From what we know about functions in JavaScript is that every function in JavaScript has a &lt;em&gt;reference&lt;/em&gt; to its outer &lt;em&gt;lexical environment&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;This means that it registers the outer &lt;em&gt;lexical environment&lt;/em&gt; and the variables present in there and it remembers the values of these variables. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;=&amp;gt; This also means that the reference that gets setup enables the code inside the inner function to see variables declared outside the inner function, regardless of when and where the function was called.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So let us see an example, &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iUWEQNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkdx49jr04jfvpf1pmkg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iUWEQNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkdx49jr04jfvpf1pmkg.png" alt="Image description" width="880" height="513"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;In the above code, we have a &lt;code&gt;calculateSimpleInterest&lt;/code&gt; function that takes on a &lt;code&gt;principal&lt;/code&gt; value inside which we have &lt;em&gt;function&lt;/em&gt; &lt;code&gt;useRateAndTime&lt;/code&gt; that takes on &lt;code&gt;rate&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt; and computes the simple interest for us. At the bottom of the &lt;code&gt;calculateSimpleInterest&lt;/code&gt; function, we return the &lt;code&gt;useRateAndTime&lt;/code&gt; function.  &lt;/p&gt;

&lt;p&gt;So for our &lt;code&gt;calculateSimpleInterest&lt;/code&gt; function, &lt;code&gt;useRateAndTime&lt;/code&gt; forms a closure with the &lt;em&gt;lexical environment&lt;/em&gt; of the &lt;em&gt;execution context&lt;/em&gt; which gets created when &lt;code&gt;calculateSimpleInterest&lt;/code&gt; function is invoked, closing over the variables defined inside the outer function (if any).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#let-us-see-the-usage"&gt;
  &lt;/a&gt;
  Let us see the usage
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tm_4WEiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9mnmzjya95x4sq3w21z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tm_4WEiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9mnmzjya95x4sq3w21z.png" alt="Image description" width="880" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the invocation of &lt;code&gt;calculateSimpleInterest&lt;/code&gt; function using a value of 10000 as &lt;code&gt;principal&lt;/code&gt;, a new function &lt;code&gt;useRateAndTime&lt;/code&gt; gets created and in it the value of &lt;code&gt;principal&lt;/code&gt; gets &lt;strong&gt;locked&lt;/strong&gt; and is returned. Now we have the &lt;code&gt;useRateAndTimeFn&lt;/code&gt; constant in which we have the returned function having the &lt;code&gt;principal&lt;/code&gt; locked in. So we call the inner function now by passing the value of &lt;code&gt;rate&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt;. Lastly we store the returned value in a variable with the name of &lt;code&gt;result&lt;/code&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;‚úî Use closures if you want a function to always have access to a &lt;strong&gt;private&lt;/strong&gt; piece of state. &lt;br&gt;
‚úî In JavaScript, if you declare a function within another function, then the local variables of the outer function can remain accessible even after returning from the outer function.&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you enjoy my articles, consider following me on Twitter for more interesting stuff :&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdzF7_iP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf9dc7pby59jmgkstw74.png" alt="Image description" width="284" height="255"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;‚ö°Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jun 10 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Python FastAPI crash course Part 2</title>
      <author>Eric The Coder</author>
      <pubDate>Tue, 23 Nov 2021 13:34:05 +0000</pubDate>
      <link>https://dev.to/ericchapman/python-fastapi-crash-course-part-2-1bnk</link>
      <guid>https://dev.to/ericchapman/python-fastapi-crash-course-part-2-1bnk</guid>
      <description>&lt;p&gt;Here is a crash course (series of articles) that will allow you to create an API in Python with FastAPI.&lt;/p&gt;

&lt;p&gt;I will publish a new article about every two days and little by little you will learn everything there is to know about FastAPI&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#create-a-crud-api"&gt;
  &lt;/a&gt;
  Create a CRUD API
&lt;/h2&gt;

&lt;p&gt;Now we are going to create an API that will be closer to what you will need to create in a real project.&lt;/p&gt;

&lt;p&gt;CRUD is an acronym that stands for Create, Read, Update, and Delete. These actions are the actions most often used when manipulating data.&lt;/p&gt;

&lt;p&gt;Here is a concrete example. Consider a data table containing products:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you might have URL paths to perform CRUD actions on this product board.&lt;/p&gt;

&lt;p&gt;Here are some examples:&lt;/p&gt;

&lt;p&gt;Create a new product&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;POST¬†www.example.com/products 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read all products&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;GET¬†www.example.com/products
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read a particular product (e.g. with id = 2)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;GET¬†www.example.com/products/2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Modify a specific product (e.g. with id = 2)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;PUT¬†www.example.com/products/2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Delete a specific product (e.g. with id = 2)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;DELETE¬†www.example.com/products/2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the name and structure of URL paths are not random. It is a convention that is used in the creation of APIs.&lt;/p&gt;

&lt;p&gt;This is why to retrieve a particular product you must specify its id directly in the path:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;GET¬†www.example.com/products/2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;FastAPI allows you to read this path and extract the relevant information. We will see this concept shortly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-step"&gt;
  &lt;/a&gt;
  First step
&lt;/h3&gt;

&lt;p&gt;In your file first-api.py replace the current content with this one&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start the server and test your API, type in the terminal (if you haven't already done so).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;uvicorn&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;reload&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So you can then visit: http: //127.0.0.1: 8000/products&lt;/p&gt;

&lt;p&gt;The list of all products will be displayed in JSON format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we created the READ of our CRUD API. Now let's see the other URL paths&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extract-the-id-from-the-url-path"&gt;
  &lt;/a&gt;
  Extract the "id" from the URL path
&lt;/h3&gt;

&lt;p&gt;To read all a particular product we need to extract the id from the url path. For example with the path "/products/2" how to extract the 2?&lt;/p&gt;

&lt;p&gt;FastAPI allows to automatically send part of the path in a variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/{id}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Not found"&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the @app.get() the part represented by {id} will be sent in the variable "id" of the function index(id: int)&lt;/p&gt;

&lt;p&gt;It is then possible to use this "id" variable to find the right product.&lt;/p&gt;

&lt;p&gt;Note that the "id" parameter is completed with ":int" This addition allows you to specify the type of the variable, in this case an integer.&lt;/p&gt;

&lt;p&gt;Why use a type in the parameter? This allows FastAPI to validate the incoming data.&lt;/p&gt;

&lt;p&gt;For example the path "/products/abc" would return an error because "abc" is not an integer&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#status-code"&gt;
  &lt;/a&gt;
  Status Code
&lt;/h3&gt;

&lt;p&gt;When the HTTP server returns a response, it always returns a status code with the response.&lt;/p&gt;

&lt;p&gt;All HTTP response status codes are separated into five classes or categories. The first digit of the status code defines the response class, while the last two digits have no ranking or categorization role. There are five classes defined by the standard:&lt;/p&gt;

&lt;p&gt;1xx information response - request has been received, process in progress&lt;/p&gt;

&lt;p&gt;2xx successful - the request was received, understood and accepted successfully&lt;/p&gt;

&lt;p&gt;3xx redirect - additional steps must be taken in order to complete the request&lt;/p&gt;

&lt;p&gt;Client error 4xx - request contains bad syntax or cannot be fulfilled&lt;/p&gt;

&lt;p&gt;Server error 5xx - the server failed to respond to an apparently valid request&lt;/p&gt;

&lt;p&gt;Here are some examples of status code&lt;/p&gt;

&lt;p&gt;200 OK&lt;/p&gt;

&lt;p&gt;201 Created&lt;/p&gt;

&lt;p&gt;403 Forbidden&lt;/p&gt;

&lt;p&gt;404 Not Found&lt;/p&gt;

&lt;p&gt;500 Internal Server Error&lt;/p&gt;

&lt;p&gt;In our last FastAPI example, if the product is not found the path will return "Not found" however the status code returned will always be "200 OK"&lt;/p&gt;

&lt;p&gt;By convention when a resource is not found it is necessary to return a status "404 Not Found"&lt;/p&gt;

&lt;p&gt;FastAPI allows us to modify the status code of the response&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/{id}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Product Not found"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To do this we must add 3 lines to our code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First we need to import the Response object&lt;/li&gt;
&lt;li&gt;Then add the "response: Response" parameter to our function&lt;/li&gt;
&lt;li&gt;And finally change the status to 404 if the product is not found&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that the "response: Response" parameter may seem strange to you, indeed how is it possible that the "response" variable contains an instance of the "Response" object without even having created this instance?&lt;/p&gt;

&lt;p&gt;This is possible because FastAPI creates the instance for us in the background. This technique is called "Dependency Injection".&lt;/p&gt;

&lt;p&gt;No need to understand this concept, just using it is enough for now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extract-the-query-parameters"&gt;
  &lt;/a&gt;
  Extract the "Query Parameters"
&lt;/h3&gt;

&lt;p&gt;Take for example the following path:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;iPhone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This path requests the list of all products which contain the word "iPhone"&lt;/p&gt;

&lt;p&gt;The "?Search=iPhone" is a Query Parameter.&lt;/p&gt;

&lt;p&gt;FastAPI allows us to extract this variable from the URL path.&lt;/p&gt;

&lt;p&gt;After the existing code, enter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"No Products Found"&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just add the name of the variable as a parameter to the index() function. FastAPI will automatically associate Query Parameters with variables of the same name. So "?Name=iPhone" will end up in the parameter/variable "name"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#path-declaration-order"&gt;
  &lt;/a&gt;
  Path declaration order
&lt;/h3&gt;

&lt;p&gt;If you launch your server and try to visit the following URL path&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;iPhone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will probably get this error&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"detail"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s"&gt;"loc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"id"&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="s"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"value is not a valid integer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"type_error.integer"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why ? The error message states that the value is not of type integer? Yet if we look at our function, no value is of type integer? We only have a "name" parameter&lt;/p&gt;

&lt;p&gt;In fact, the message speaks the truth. Here is all our code so far&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/{id}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Product Not found"&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"No Products Found"&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a route "/products/{id}" which is declared before the last route. The dynamic part of route "{id}" means that all routes that match "/products/*" will be executed with this code.&lt;/p&gt;

&lt;p&gt;So when we ask for "/products/search/?Name=iPhone" FastAPI sends us to the second route because it matches "/products/*". The last function is never performed and never will be.&lt;/p&gt;

&lt;p&gt;The solution? Reverse the routes, the order of the routes is essential for FastAPI. it is therefore important to place dynamic routes like "/products/{id}" last&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;responses&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;599&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iWatch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;699&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"No Products Found"&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;founded_products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/products/{id}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Product Not found"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the code in that order, if you revisit "/products/search?Name=iphone". You will have the following answer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"iPhone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"price"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;999&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>python</category>
      <category>fastapi</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Levelling as a Developer with Content Creation and Community Building #DevRel</title>
      <author>Saurabh Rai</author>
      <pubDate>Tue, 23 Nov 2021 13:33:21 +0000</pubDate>
      <link>https://dev.to/srbhr/levelling-as-a-developer-with-content-creation-and-community-building-devrel-17a9</link>
      <guid>https://dev.to/srbhr/levelling-as-a-developer-with-content-creation-and-community-building-devrel-17a9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#join-developer-relations-expert-at-new-relic-pachi-parra-for-her-amazing-talk-on-content-creation-and-community-building-join-git-commit-show-season03"&gt;
  &lt;/a&gt;
  Join Developer Relations Expert at New Relic Pachi Parra for her amazing talk on Content Creation and Community Building! Join &lt;a href="https://gitcommit.show"&gt;Git Commit Show&lt;/a&gt; #season03
&lt;/h1&gt;

&lt;p&gt;Get your &lt;strong&gt;FREE Tickets&lt;/strong&gt; &lt;a href="http://push.gitcommit.show/"&gt;here&lt;/a&gt; &lt;em&gt;Fill the form&lt;/em&gt; üëà&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why Building a strong community is important?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Community is pretty much a group of people having similar interests coming together, either be it for creating ideas, working together, or personal growth. Why is it important? Because when people come together they bring in ideas together, collaborate and create amazing possibilities. Coming to collaborate together can lead to better ideas, and what not? How many creative ideas, upon which companies have been created formed in such communities when people/friends together came in to form ideas and learn! &lt;/p&gt;

&lt;p&gt;We're inviting you people to our Community of Developers, "Git Commit Show" so that we can learn, collaborate and participate together so that we all can learn and create more opportunities for everyone of us! &lt;/p&gt;

&lt;p&gt;About Pachi:-&lt;/p&gt;

&lt;p&gt;Pachi works as Developer Relations Engineer at New Relic and is a Streamer and Co-Founder of Feministech, an online community for Brazilian women and non-binary people who share and learn tech with live coding. Her passions include community building, hyping her friends and live coding on Twitch.&lt;/p&gt;

&lt;p&gt;Join Git Commit Show &lt;a href="https://gitcommit.show/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join our &lt;a href="https://discord.gg/JFWP8c2gPG"&gt;Discord&lt;/a&gt; for more information! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_bRE7z23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73wopj8r03xvw1of2ox6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_bRE7z23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73wopj8r03xvw1of2ox6.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>career</category>
      <category>discuss</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to easily get started with ThreeJS - Part 1</title>
      <author>Davide Mandelli</author>
      <pubDate>Tue, 23 Nov 2021 13:21:58 +0000</pubDate>
      <link>https://dev.to/th3wall/how-to-easily-get-started-with-threejs-part-1-go7</link>
      <guid>https://dev.to/th3wall/how-to-easily-get-started-with-threejs-part-1-go7</guid>
      <description>&lt;p&gt;Hi guys, hope you are fine! :)&lt;/p&gt;

&lt;p&gt;Recently I came across a teaser video on &lt;a href="https://twitter.com/Th3Wall25"&gt;my Twitter&lt;/a&gt; feed: it was a &lt;a class="mentioned-user" href="https://dev.to/prismicio"&gt;@prismicio&lt;/a&gt;
 post of an interview with the great &lt;a class="mentioned-user" href="https://dev.to/brunosimon"&gt;@brunosimon&lt;/a&gt;
. During the interview he explains how to use ThreeJS to enhance a website with 3D elements.&lt;/p&gt;

&lt;p&gt;Here's a reference to that tweet:&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55yvoMNy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1454078456707403776/pu/img/PQU65J2ISrl6NOLv.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hmOkC4qK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1013754225917034497/wNvNaz0p_normal.jpg" alt="Prismic profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Prismic
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/prismicio"&gt;@prismicio&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In this tutorial, &lt;a href="https://twitter.com/bruno_simon"&gt;@bruno_simon&lt;/a&gt; explains how to use &lt;a href="https://twitter.com/hashtag/threejs"&gt;#threejs&lt;/a&gt; to enhance a website with 3D elements.&lt;br&gt;&lt;br&gt;He takes a standard header section from basic to &lt;a href="https://twitter.com/hashtag/dynamic"&gt;#dynamic&lt;/a&gt; by swapping out the image for a cool shape with a matcap.&lt;br&gt;&lt;br&gt;Watch the full interview üëâ &lt;a href="https://t.co/Gbf2e4r2wC"&gt;youtu.be/tVr89249gwM&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:32 PM - 29 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1454078632884846600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1454078632884846600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1454078632884846600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;This interview and the passion with which Bruno explains ThreeJS concepts inspired me A LOT so I've decided to start digging into this new virtual world.&lt;/p&gt;

&lt;p&gt;I'll try to recap and explain in the easiest and clearer way possible.&lt;br&gt;
&lt;em&gt;I promise you that in around 30 lines of code you will create your first working 3D element (recap at the end of the article).&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;
&lt;h2&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project setup
&lt;/h2&gt;

&lt;p&gt;The first step is to create a new &lt;em&gt;index.html&lt;/em&gt; file that should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0, maximum-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css/styles.css"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My first ThreeJS demo app&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"js/script.js"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we should add the two external files 'linked' inside our &lt;em&gt;index.html&lt;/em&gt; file: we create the &lt;em&gt;styles.css&lt;/em&gt; and &lt;em&gt;script.js&lt;/em&gt; files and we put them respectively inside &lt;em&gt;css&lt;/em&gt; and &lt;em&gt;js&lt;/em&gt; folders.&lt;/p&gt;

&lt;p&gt;Now it's time to initialize our package manager for the configuration of our project so we launch a&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;npm init&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My default package manager is NPM but you can obviously use Yarn instead.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#threejs-installation-and-setup"&gt;
  &lt;/a&gt;
  Three.js installation and setup
&lt;/h2&gt;

&lt;p&gt;In order to start playing with Three.js, we should install it. We can do it by opening the terminal and launching:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;npm install three&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, inside the &lt;em&gt;script.js&lt;/em&gt; we can import Three with the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have imported it, we can start using it.&lt;/p&gt;

&lt;p&gt;The first thing to know is that once Three is installed, we have access to one very specific variable which is 'THREE'. By logging it we can already see that we have access to a lot of things that this library supports:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vgR-zKwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0qy7vvgv0a8urr7bz37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vgR-zKwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0qy7vvgv0a8urr7bz37.png" alt="Screenshot of console.log(THREE)" width="880" height="610"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#how-to-add-a-scene-a-camera-and-aspect-ratio"&gt;
  &lt;/a&gt;
  How to add a scene, a camera and aspect ratio
&lt;/h2&gt;

&lt;p&gt;We need three things to start with: the first one is a &lt;strong&gt;scene&lt;/strong&gt;, just like a movie set. On the scene you will add &lt;strong&gt;objects&lt;/strong&gt; (that might be characters) and a &lt;strong&gt;camera&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First of all we create the empty &lt;strong&gt;scene&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the scene we said that we need to add a &lt;strong&gt;camera&lt;/strong&gt;.&lt;br&gt;
Here it's necessary to know that in Three.js exists various types of camera (have a look &lt;a href="https://threejs.org/docs/index.html?q=camera"&gt;here in the docs&lt;/a&gt; for further info).&lt;br&gt;
The one we will use is the &lt;strong&gt;PerspectiveCamera&lt;/strong&gt;, which mimics the way the human eye sees, it's like a real-life camera: the nearer you are, the bigger you will see.&lt;/p&gt;

&lt;p&gt;To create the camera we need to add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The camera needs some options as parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the first option is the &lt;strong&gt;FOV (Field Of View)&lt;/strong&gt; and is intended as degrees. We might choose an open angle of 180 degrees or a very close angle of 30 degrees, like photo lenses.&lt;br&gt;
As Bruno experience, he recommends to stay in a range that goes from 40 degrees to a maximum of 70 degrees, so we will use an angle of 55 degrees.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the second required option is the &lt;strong&gt;aspect ratio&lt;/strong&gt;: since we want to cover the whole background of our page, we will insert the width and the height of our viewport, and in JS we can retrieve these sizes with &lt;em&gt;window.innerWidth&lt;/em&gt; and &lt;em&gt;window.innerHeight&lt;/em&gt;.&lt;br&gt;
TL/DR: The aspect ratio is just the width divided by the height.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the things to understand with Three.js is that whatever object we want to include, we have to add it to the scene, and at this stage we can already add our camera by typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#add-a-mesh-to-the-scene"&gt;
  &lt;/a&gt;
  Add a mesh to the scene
&lt;/h2&gt;

&lt;p&gt;With this first article (&lt;strong&gt;yes, it will be a small series&lt;/strong&gt; üòâ), we will add a cube to the scene.&lt;br&gt;
A cube is an object that we will be able to see, and in Three.js an object that we will be able to see is called &lt;strong&gt;mesh&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A mesh is composed of two things: its &lt;strong&gt;geometry&lt;/strong&gt; (the &lt;em&gt;points&lt;/em&gt; that composes a geometry, like the number of vertices of a cube) and a &lt;strong&gt;material&lt;/strong&gt;, that is how the geometry will look when it will be rendered in the scene.&lt;/p&gt;

&lt;p&gt;We need to create first our geometry and since we want a cube, we will use its related class, the "BoxGeometry":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BoxGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This class automatically knows that it should create the cubes points once it receives its required parameters, which are the &lt;em&gt;width&lt;/em&gt;, the &lt;em&gt;height&lt;/em&gt; and the &lt;em&gt;depth&lt;/em&gt; (&lt;a href="https://threejs.org/docs/index.html#api/en/geometries/BoxGeometry"&gt;reference to the docs&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now it's time to add the material that our cube will use when it renders. For this first experiment we want our cube to be completely red. So we add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xff0000&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The "MeshBasicMaterial" class and all the available mesh and geometry classes are available in the documentation with a lot of examples. As a parameter we are passing in a color.&lt;/p&gt;

&lt;p&gt;The color parameter can be specified in many ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;as a string ('red');&lt;/li&gt;
&lt;li&gt;as a hexadecimal (#FF0000);&lt;/li&gt;
&lt;li&gt;as hexadecimal in base 16 (0xff0000).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point we have our geometry and our material, so we can proceed to mix them in a mesh and add it to the scene:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#rendering-the-scene"&gt;
  &lt;/a&gt;
  Rendering the scene
&lt;/h2&gt;

&lt;p&gt;It's finally time to see our cube!&lt;/p&gt;

&lt;p&gt;We declare a renderer using the most common WebGL renderer, the "WebGLRenderer":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGLRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our renderer needs to know a size, and as we said before, we want our scene to take the full viewport width. So we can tell it to the renderer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to see our scene, we now need to draw inside a &lt;em&gt;canvas&lt;/em&gt; üé®.&lt;br&gt;
Looking at our renderer variable we can notice that our canvas is contained inside the &lt;strong&gt;domElement&lt;/strong&gt; property.&lt;br&gt;
If we log it we can see our canvas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOVDVk13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnvg8fpttbcvnvtl4o32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOVDVk13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnvg8fpttbcvnvtl4o32.png" alt="Screenshot of renderer.domElement property" width="880" height="178"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point we will let ThreeJS create our canvas and append it inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of the page; we can do it by adding the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inspecting our DOM we should now see our &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element added inside the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As a last step for our renderer, we now have to tell it to render the canvas inside the page. It requires the &lt;em&gt;scene&lt;/em&gt; (in which we should have &lt;strong&gt;added&lt;/strong&gt; all the necessary elements) and the &lt;em&gt;camera&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But wait a minute.&lt;br&gt;
Why can't we see the cube yet?&lt;br&gt;
&lt;a href="https://i.giphy.com/media/hEc4k5pN17GZq/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/hEc4k5pN17GZq/giphy.gif" alt="John Travolta wondering" width="426" height="213"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;
&lt;h2&gt;
  &lt;a href="#fixing-the-camera-and-rotating-the-cube"&gt;
  &lt;/a&gt;
  Fixing the camera and rotating the cube
&lt;/h2&gt;

&lt;p&gt;The answer of the previous question is related to the &lt;strong&gt;camera position&lt;/strong&gt;.&lt;br&gt;
We still can't see the cube because we are &lt;strong&gt;inside the cube&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You may be wondering now: shouldn't I see everything red around me since the cube is red?&lt;br&gt;
The answer is no: by default we cannot see the "inside" of the geometry. We can see the face, but not its reverse side.&lt;/p&gt;

&lt;p&gt;So, now that we know the above, we should move the camera position &lt;em&gt;outside&lt;/em&gt; of the cube. Moving up where we defined the camera variable, we add the following below that line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to move the camera &lt;em&gt;back&lt;/em&gt;, we need to work on the &lt;em&gt;Z&lt;/em&gt; axis.&lt;br&gt;
Once done, we can finally see our cube:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mUBWXSMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqnniduebjln3q5xwocv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mUBWXSMF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqnniduebjln3q5xwocv.png" alt="First cube screenshot" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We might also move the camera position to the left/right or to top/bottom by editing the position on the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; axis (ie: for our final demo we will move our object a little bit to the right so we can reserve a space on the left for the heading, a paragraph and maybe a CTA).&lt;/p&gt;

&lt;p&gt;Since with these settings our object is flat, it doesn't seems to be a real cube. We can rotate the cube in order to see some angles.&lt;/p&gt;

&lt;p&gt;To do a rotation, we just need to work on our mesh object.&lt;br&gt;
As Bruno says, in order to move it horizontally, we have to think about putting something a spike on the y axis, so under our mesh declaration line we will add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Smxoj2-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15dhph57vz2y5pgcy2qo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Smxoj2-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15dhph57vz2y5pgcy2qo.png" alt="Rotated cube screenshot" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep in mind that the unit of measure is in radiants, not degrees. So math here can be our best friend with some concepts like the &lt;em&gt;PI&lt;/em&gt;, that is half of a circle.&lt;br&gt;
If you think with PI in mind, you can think like "1/8 of a circle" and things like that, just dividing or multiplying the &lt;strong&gt;Math.PI&lt;/strong&gt; value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0"&gt;
  &lt;/a&gt;
  ¬†
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;I leave down here the full &lt;em&gt;script.js&lt;/em&gt; code block so you can have a better look at it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// script.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Scene&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PerspectiveCamera&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geometry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BoxGeometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MeshBasicMaterial&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;0xff0000&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mesh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Mesh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;material&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rotation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mesh&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;THREE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WebGLRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;scene&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;camera&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can finally see our 3D cube on the page and we can play around with its position, its rotation, and its color.&lt;/p&gt;

&lt;p&gt;In the next articles (coming shortly in the next days), we will &lt;strong&gt;animate&lt;/strong&gt; the cube, we will see how we can change its geometry and material and we will also see how to make the canvas &lt;strong&gt;responsive&lt;/strong&gt;.&lt;br&gt;
We will also throw in some smooth animations and some cool little interactions with our object.&lt;/p&gt;

&lt;p&gt;The final result that we will achieve is already visible at this demo link:&lt;br&gt;
üëâüèº ¬†&lt;a href="https://th3wall-threejs.netlify.app"&gt;https://th3wall-threejs.netlify.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you have already learned something and I hope you find this article interesting.&lt;/p&gt;

&lt;p&gt;Please follow me on &lt;a href="https://twitter.com/Th3Wall25"&gt;Twitter&lt;/a&gt;, &lt;a href="https://github.com/Th3Wall"&gt;GitHub&lt;/a&gt; &amp;amp; &lt;a href="https://hashnode.com/@th3wall"&gt;Hashnode&lt;/a&gt;.&lt;br&gt;
Let me know if you liked it!&lt;/p&gt;

&lt;p&gt;Thanks.&lt;br&gt;
Th3Wall&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>threejs</category>
      <category>webgl</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Animated content card with HTML CSS</title>
      <author>Sadee</author>
      <pubDate>Tue, 23 Nov 2021 13:01:38 +0000</pubDate>
      <link>https://dev.to/codewithsadee/animated-content-card-with-html-css-2eme</link>
      <guid>https://dev.to/codewithsadee/animated-content-card-with-html-css-2eme</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fdE02AJaRL8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to create animated content card using only html and css&lt;/p&gt;

&lt;p&gt;In this video, &lt;br&gt;
I will show you how to create responsive animated content card using only html &amp;amp; css,&lt;br&gt;
And you also learn how to pause the animation with a single line of code.&lt;/p&gt;




&lt;p&gt;HI üëã&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel üëá&lt;/p&gt;

&lt;p&gt;üì∫ My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
üîî Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
üïê New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;How to use ionicon&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fonts.google.com/specimen/Poppins?query=poppins#standard-styles"&gt;Font - Poppins&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ionic.io/ionicons"&gt;Ionicon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.patreon.com/codewithsadee"&gt;Source Code&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#others-videos"&gt;
  &lt;/a&gt;
  üìπ Others Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/lDHspzUov88"&gt;Loopstudios Landing Page&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/ATRQj60Q3S0"&gt;Clipboard Landing Page&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtube.com/playlist?list=PLasZMtSCguZbYYb7uzDMAC0rg49A8XOsS"&gt;Personal Portfolio Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/OpbbPLPqSDc"&gt;Toggle Button with 3d Effect&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/g9VdvKx8fuM"&gt;Awesome Card Design for Website&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üíô Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Best Way to Build a Free Website for Your Solopreneur Ideas.</title>
      <author>Debuzzify</author>
      <pubDate>Tue, 23 Nov 2021 12:36:43 +0000</pubDate>
      <link>https://dev.to/debuzzify/the-best-way-to-build-a-free-website-for-your-solopreneur-ideas-dej</link>
      <guid>https://dev.to/debuzzify/the-best-way-to-build-a-free-website-for-your-solopreneur-ideas-dej</guid>
      <description>&lt;p&gt;Solopreneurs are independent individual business owners who like the idea of being their own boss and working from home.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://debuzzify.com/how-do-become-a-solopreneur-5fd42b40af58"&gt;Solopreneurs usually have multiple income streams&lt;/a&gt;. A website is almost always associated with each of them. Hence, it‚Äôs a good idea to start with a free one to test the water before dumping all your money.&lt;/p&gt;

&lt;p&gt;These individuals often start a new business on a shoestring budget, so finding free resources to assist you in building a website can be beneficial for your solopreneur work.&lt;/p&gt;

&lt;p&gt;Related: &lt;a href="https://debuzzify.com/solopreneur-website-purpose-8d10ea80da6c"&gt;&lt;strong&gt;&lt;em&gt;Self-Employed Entrepreneurs Should Start a Website From Day Zero&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we get started on exactly how to build a free website for your solopreneur ideas, let‚Äôs take a look at specific types of websites that you may want to consider building.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solopreneur Idea #1: Business Website&lt;/strong&gt;&lt;br&gt;
If you are an independent business owner looking to promote your goods or services, then a website can be beneficial. A good example is an independent consultant. For example, if you are a financial consultant, then you can have a business website that allows customers to view your services and contact you for further information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solopreneur Idea #2: Personal Branding Site&lt;/strong&gt;&lt;br&gt;
If you are looking to build your brand by creating a name for yourself online, an individual website can be beneficial. You can make a website that allows you to publish work samples, blog posts, YouTube videos, or any other type of content that shows who you are. This will enable people to get an idea of who you are and what kind of work you are doing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solopreneur Idea #3: Individual Blog&lt;/strong&gt;&lt;br&gt;
Many people have a personal blog for their solopreneur ideas. This is a perfect way to share your stories, helpful hints, and things you are interested in. The best news is that blogging can help you earn some extra cash every month.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-best-way-to-build-a-free-website-for-your-solopreneur-ideas"&gt;
  &lt;/a&gt;
  What‚Äôs the Best Way to Build a Free Website for Your Solopreneur Ideas?
&lt;/h2&gt;

&lt;p&gt;For most self-employed entrepreneurs, the easiest way to build a free website is through Weebly. It is a popular website-building platform that makes it simple to design and host your free website or blog.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No link in this post is an affiliate link. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Building a website with Weebly is super simple. You can start with a template and modify it any way you want. Weebly also offers a drag-and-drop website builder so that you can add your text and images to existing templates.&lt;/p&gt;

&lt;p&gt;Within minutes a sleek website for your new solopreneur business is live on the vast internet.&lt;/p&gt;

&lt;p&gt;What makes Weebly more attractive?&lt;/p&gt;

&lt;p&gt;Weebly sites rank well on Google because the platform uses clean code. You don‚Äôt have to worry about search engine optimization because Weebly already has you covered‚Ä¶ and, guess what? If you do want to change anything with your site‚Äôs SEO, you can.&lt;/p&gt;

&lt;p&gt;Weebly also makes it easy to directly track your site‚Äôs traffic and get insights into your audience, subscriptions, and sales. Their integrated analytics make it simple to see what‚Äôs working and adjust your site if needed.&lt;/p&gt;

&lt;p&gt;In addition, you can capture leads using their email capture forms. You can also use the platform to sell products, create an e-commerce store, accept donations and even provide event registration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-weebly"&gt;
  &lt;/a&gt;
  Getting Started with Weebly
&lt;/h2&gt;

&lt;p&gt;You can create a Weebly site in a few simple steps.&lt;br&gt;
Go to weebly.com and sign up for a new account. It‚Äôs free and straightforward.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xlx31Eqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2Ac3MWOzM2prLp61FI8di7EQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xlx31Eqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2Ac3MWOzM2prLp61FI8di7EQ.png" alt="Weebly is the best way to create a free website for self-employed entrepreneurs (solopreneurs)" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be asked to choose a template and enter some basic information about yourself. Weebly templates are optimized for speed and user experience. You can also pick the category that fits your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8WeStFVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2AYTNj-1I3oMp3_YKdhL01bQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8WeStFVx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2AYTNj-1I3oMp3_YKdhL01bQ.png" alt="Weebly templates allows solopreneurs create a beautiful website for free." width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also pick your own domain name or use Weebly‚Äôs free domain. Domain name costs vary depending on the demand and availability of your chosen name. If you already have one purchased with a different domain registrar you can configure them too.&lt;/p&gt;

&lt;p&gt;A different option is to stick with Weebly's subdomain itself. For most new sites, this is okay unless if you want to build a brand from day zero (which is a good idea on too)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HftXTFTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2ApvCKIwZNfNrSWrHmcY1A4A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HftXTFTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/963/1%2ApvCKIwZNfNrSWrHmcY1A4A.png" alt="Self-employed entrepreneurs can purchase domain for their website without leaving Weebly" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you can choose your site‚Äôs design and colors to make it look exactly how you want it to.&lt;/p&gt;

&lt;p&gt;Go on and publish Your Weebly Website&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>html</category>
      <category>website</category>
    </item>
    <item>
      <title>Tutorial: Build Serverless functions with C#</title>
      <author>Taavi Rehem√§gi</author>
      <pubDate>Tue, 23 Nov 2021 12:32:28 +0000</pubDate>
      <link>https://dev.to/dashbird/tutorial-build-serverless-functions-with-c-2f33</link>
      <guid>https://dev.to/dashbird/tutorial-build-serverless-functions-with-c-2f33</guid>
      <description>&lt;p&gt;The world of cloud computing has been revolutionized by a solution called serverless computing. It has been an absolute joy for developers to use.&lt;/p&gt;

&lt;p&gt;Before this innovation, developers had to worry about the resources powering their code. Since the launch of serverless computing, the developer's focus on operating-system and hardware architecture is now a thing of the past. It handles all the server management while focusing on what you do well --- writing good quality code.&lt;/p&gt;

&lt;p&gt;This article will explain how to build serverless functions on the primary cloud providers services: Azure and AWS.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you are new to serverless computing or need to dig deep into the origins and evolutions of serverless, check out this&lt;/em&gt; &lt;a href="https://dashbird.io/blog/origin-of-serverless/"&gt;&lt;em&gt;article&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#using-c-with-azure-functions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Using C# with Azure Functions&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Two essential prerequisites need to be met to build serverless Azure Functions applications with C#:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Have an active Microsoft Azure subscription. If you don't have one already, you can &lt;a href="https://azure.microsoft.com/en-us/free/"&gt;create a free account&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; Get an Azure Storage account. You can create a storage account if you don't have this by signing into &lt;a href="https://portal.azure.com/"&gt;the Azure portal&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a C# developer, you are already familiar with the various tools for building your applications, including Visual Studio Code and Visual Studio IDE. Both tools help create applications with Azure Functions, depending on whichever one you are most comfortable with. Let's dig a little deeper into these two tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-code"&gt;
  &lt;/a&gt;
  Visual Studio Code
&lt;/h2&gt;

&lt;p&gt;Visual Studio Code is a lightweight but powerful code editor with different versions available for Windows, Linux, and macOS.&lt;/p&gt;

&lt;p&gt;To build apps for Azure functions, you will need to get Azure Tools for Visual Studio Code which will give you convenient commands to access or create resources directly from the VS Code editor.&lt;/p&gt;

&lt;p&gt;To set up Azure Tools, install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-azureextensionpack"&gt;Azure Extension Pack&lt;/a&gt; by firing up your editor and navigating to the extension marketplace on the left side menu. The extension marketplace interface in VS Code should look like this:&lt;/p&gt;

&lt;p&gt;When you are done with the setup of Azure for VS Code, log in to Azure from the code editor by firing the Command Palette with the commands &lt;strong&gt;CTRL+Shift+P&lt;/strong&gt; and typing "&lt;strong&gt;Azure: Login&lt;/strong&gt;" in the text field that appears. Click the corresponding result that appears, and a code will be generated by the editor with instructions on how to complete the process.&lt;/p&gt;

&lt;p&gt;Another vital extension if you will be developing in C# with VS Code is the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp"&gt;C# for Visual Studio Code&lt;/a&gt;. As of the time of this writing, the extension supports basic debugging capabilities, full details of &lt;a href="http://aka.ms/vscclrdebugger"&gt;which can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-2017-ide"&gt;
  &lt;/a&gt;
  Visual Studio 2017 IDE
&lt;/h2&gt;

&lt;p&gt;From version 15.5, the Azure Development workload comes bundled with Azure Functions tools. This implies if you plan on installing the latest version of Visual Studio 2019, you need to include Azure Development workload in your installation process.&lt;/p&gt;

&lt;p&gt;Once installation is complete, sign in to your Microsoft account in Visual Studio and create a new Azure Functions project, and you are good to go.&lt;/p&gt;

&lt;p&gt;Now that we've highlighted what you need to know if you want to build serverless functions in C# with Azure functions, let's move over to discussing what you need to begin running serverless apps on the AWS Lambda serverless framework&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-c-with-aws-lambda"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Using C# with AWS Lambda&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;AWS Lambda is the compute part of the AWS serverless architecture and requires almost zero administration. It is one of the most popular options for serverless, and though AWS launched it in 2014, in 2018, AWS announced official support for &lt;a href="https://aws.amazon.com/about-aws/whats-new/2018/01/aws-lambda-supports-c-sharp-dot-net-core-2-0/"&gt;a .NET Core 2.0 runtime&lt;/a&gt;, and in &lt;a href="https://aws.amazon.com/blogs/compute/announcing-aws-lambda-supports-for-net-core-3-1/"&gt;2020 for version 3.1&lt;/a&gt;. It is crucial to understand that .NET Core is different from the .NET framework, and here are a few reasons AWS chose .NET Core over the .NET framework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  .NET Core is the newly redesigned version of .NET that focuses on more modern applications and, in particular, cloud-enabled applications, which has significant benefits when writing Lambda functions&lt;/li&gt;
&lt;li&gt;  .NET Core was designed with a modularized design which means you only get to include the part of .NET you will need when writing your Lambda functions. This leads to lesser memory usage, and since Lambda charges you for memory usage, lesser memory demands by your functions will lead to lesser costs for using AWS Lambda.&lt;/li&gt;
&lt;li&gt;  .NET Core is open-source and validated against Amazon Linux -- the underlying platform for AWS Lambda, making it possible for AWS to respond to security issues that might arise with using it.&lt;/li&gt;
&lt;li&gt;  With .NET Core, you can now write your C# code on any platform instead of earlier days with .NET, where you could write C# code on only Windows environments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To begin building Lambda functions in C# with Visual Studio, you will need to understand AWS Lambda has a laid-down pattern for authoring code for your Lambda function. This pattern includes the following concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Handler&lt;/strong&gt; -- the handler function is a function called by AWS Lambda to begin execution of your Lambda function. AWS Lambda passes any input data into this function as the first parameter and passes a context object as a second parameter.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Context Object&lt;/strong&gt; -- is the second parameter passed into the handler function, and it provides information through which your code interacts with AWS Lambda.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Logging&lt;/strong&gt; -- a sound logging system is a critical component of a well-written function. AWS Lambda writes these logs to CloudWatch Logs.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Exceptions&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we know the framework for writing for AWS Lambda, let's see how all this works together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-c-code-for-aws-lambda-with-visual-studio"&gt;
  &lt;/a&gt;
  Writing C# code for AWS Lambda with Visual Studio
&lt;/h2&gt;

&lt;p&gt;A few prerequisites are required to begin writing code for Lambda functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If you don't have one, you can &lt;a href="https://portal.aws.amazon.com/billing/signup?nc2=h_ct&amp;amp;src=header_signup&amp;amp;redirect_url=https%3A%2F%2Faws.amazon.com%2Fregistration-confirmation#/start"&gt;create an AWS account here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://visualstudio.microsoft.com/downloads/"&gt;Download&lt;/a&gt; and install Visual Studio IDE 2019.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.AWSToolkitforVisualStudio2017"&gt;Download&lt;/a&gt; and install the AWS Toolkit for Visual Studio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you've installed all prerequisites, open Visual Studio and fill in the AWS credentials on the &lt;strong&gt;Getting Started with the AWS Toolkit for Visual Studio&lt;/strong&gt; window displayed next to the Start Page tab. The credentials (Access Key and Secret Key) can be obtained by following the instructions outlined in the window.&lt;/p&gt;

&lt;p&gt;With all set, let's move on to build our Lambda project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Create a .NET Core Lambda project&lt;/li&gt;
&lt;li&gt;  Open Visual Studio IDE and go to file&amp;gt; New &amp;gt; Project&lt;/li&gt;
&lt;li&gt;  On the Installed pane, Click Visual C# and then AWS Lambda Project (.NET Core) as shown below:&lt;/li&gt;
&lt;li&gt;  Fill out the project name with a name of your choice and click OK, leaving the defaults as they are, then move on to selecting the type of Lambda project you want to build.&lt;/li&gt;
&lt;li&gt;  Click Finish to create the project and review the project code and structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A critical file created with your project is the &lt;code&gt;aws-lambda-tools-defaults.json&lt;/code&gt; file, where you set your function handler and other options.¬†&lt;/p&gt;

&lt;p&gt;The contents of the file should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GRX0q_DK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqa19aqkuds0czbfhjp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRX0q_DK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqa19aqkuds0czbfhjp1.png" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For copyable code snippets see the &lt;a href="https://dashbird.io/blog/serverless-and-c-what-you-need-to-know/"&gt;original article&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publishing-to-aws-lambda"&gt;
  &lt;/a&gt;
  Publishing to AWS Lambda
&lt;/h2&gt;

&lt;p&gt;The next step to running our code on AWS Lambda is to publish it. This is done after the code has been reviewed and you are convinced it is good to go. The following steps outline what you need to do to get your code published.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  On the right side, you can see the project. There, in the Solution Explorer, click Publish to AWS Lambda.&lt;/li&gt;
&lt;li&gt;  Next, fill in the Function Name in the Upload to AWS Lambda window that appears. You can give any preferred name to your function at this point. Once you are done, click Next.&lt;/li&gt;
&lt;li&gt;  On the Advanced Function Details page, fill the Role Name section with a role associated with your AWS account. This is a required field to supply before proceeding to the next stage of the upload process. Other sections include the VPC section (only applicable if your function will be accessing resources on Amazon VPC) and the Environment section.&lt;/li&gt;
&lt;li&gt;  Once your function begins uploading, a window is displayed showing the status of the upload, after which a function view page is displayed where you can test your function and view logs, respectively.&lt;/li&gt;
&lt;li&gt;  The Invoke button begins testing the function while the log output displays the output from the test. These logs are also saved into CloudWatch Logs in AWS, where more details on the logs can be viewed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now, you have a quick peek into what you need to know to build and publish serverless applications with the powerful C# programming language, and though at &lt;a href="https://dashbird.io/"&gt;Dashbird&lt;/a&gt;, we are more inclined towards AWS Lambda, nothing is stopping you from exploring both the Microsoft Azure functions and AWS Lambda options in getting that serverless infrastructure for your applications.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Further reading:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/how-to-get-overview-c-lambdas/"&gt;How to get an overview of C# Lambda functions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/aws-vs-azure/"&gt;AWS vs Azure, a quick comparison&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/observability/serverless-observability-real-time-debugging/"&gt;Serverless observability and real-time troubleshooting&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>csharp</category>
      <category>serverless</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 JavaScript Array methods you need to know!</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Tue, 23 Nov 2021 12:29:52 +0000</pubDate>
      <link>https://dev.to/avneesh0612/5-javascript-array-methods-you-need-to-know-34kj</link>
      <guid>https://dev.to/avneesh0612/5-javascript-array-methods-you-need-to-know-34kj</guid>
      <description>&lt;p&gt;While building applications you would have noticed yourself using Array's a lot. So let's take a look at the 5 Array methods.&lt;/p&gt;

&lt;p&gt;To show you all the methods with examples, I am going to create a simple Array with some fruits and their prices-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fruits = [
   {
    name: "Mango",
    price: 3,
  },
  {
    name: "Apple",
    price: 5,
  },
  {
    name: "Banana",
    price: 10,
  },
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#1-map"&gt;
  &lt;/a&gt;
  1. Map
&lt;/h3&gt;

&lt;p&gt;A map function is similar to loop and if you are a React developer you probably have seen this function be used quite a lot. So let's understand this properly with an example-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getFruitNames() {
  return fruits.map((fruit) =&amp;gt; fruit.name);
}

console.log(getFruitNames());
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getFruitNames&lt;/code&gt; maps through the fruits Array and returns the name of each fruit. So if we run the function it will return an Array with all the fruit names-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;['Mango', 'Apple', 'Banana']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-filter"&gt;
  &lt;/a&gt;
  2. Filter
&lt;/h3&gt;

&lt;p&gt;If you want to filter some products out based on some conditions like getting the fruits that cost more than 4 then we will use the filter function to do so. This is how you use a filter function-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getCostlyFruits() {
  return fruits.filter((fruit) =&amp;gt; fruit.price &amp;gt; 4);
}

console.log(getCostlyFruits());
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function returns-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[
  { name: "Apple", quantity: 5 },
  { name: "Banana", quantity: 10 },
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-reduce"&gt;
  &lt;/a&gt;
  3. Reduce
&lt;/h3&gt;

&lt;p&gt;Reduce lets you add up a bunch of numbers inside an Array, in a very easy way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MTMsl-dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/DHqth0hVQoIzS/200.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MTMsl-dz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/DHqth0hVQoIzS/200.gif" alt="The Math GIF" width="466" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see it in action-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getTotalCost() {
  return fruits.reduce((acc, fruit) =&amp;gt; acc + fruit.price, 0);
}

console.log(getTotalCost());
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the first parameter is the number formed by adding the previous numbers and the second parameter is the amount that will get added to the first value. The 0 that you see at the end can be replaced with the number you want the count to start with.&lt;/p&gt;

&lt;p&gt;This function outputs a number, in this case- &lt;code&gt;18&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-find"&gt;
  &lt;/a&gt;
  4. Find
&lt;/h3&gt;

&lt;p&gt;If you want to find fruit based on its price or by its name, then this is the method you are looking for.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getFruitByName(name) {
  return fruits.find((fruit) =&amp;gt; fruit.name === name);
}

console.log(getFruitByName("Mango"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return the Mango object when run-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{ name: 'Mango', price: 3 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-includes"&gt;
  &lt;/a&gt;
  5. Includes
&lt;/h3&gt;

&lt;p&gt;This method lets you check if there is an item in that Array. Suppose I want to check if banana is present in the fruits Array. If it is present then it will return true, otherwise false. You can't check items inside an object in the Array, so I am going to use the Array with the names from our &lt;code&gt;getFruitNames&lt;/code&gt; function-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fruitNames = getFruitNames();

console.log(fruitNames.includes("Orange"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return &lt;code&gt;false&lt;/code&gt; as Orange isn't inside the fruits Array, but if we try Apple then it would return &lt;code&gt;true&lt;/code&gt;-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const fruitNames = getFruitNames();

console.log(fruitNames.includes("Apple"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope you found this useful. If you have any questions, drop them down in the comments. Until next time Peace ‚úåÔ∏è&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful Links-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/avneesh0612-the-bold/pen/ExvzLgB"&gt;CodePen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;Connect with me&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>array</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>C# Arrays</title>
      <author>Grant</author>
      <pubDate>Tue, 23 Nov 2021 12:16:23 +0000</pubDate>
      <link>https://dev.to/gweaths/c-arrays-47m0</link>
      <guid>https://dev.to/gweaths/c-arrays-47m0</guid>
      <description>&lt;p&gt;In previous chapter we learnt about collections (Lists, Stacks, Queues, Dictionaries), and I gave a special mention to &lt;code&gt;Arrays&lt;/code&gt;. Why was this, well arrays can store a collection of objects too just like the aforementioned, however we can't add to them as we go along like the others&lt;/p&gt;

&lt;p&gt;e.g&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//do other code&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is another sentance"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With arrays we have to know the length of the array to allocate memory space to it, the length needs to be known at time of instantiation. The contents of an array &lt;strong&gt;cannot&lt;/strong&gt; be changed once created !&lt;/p&gt;

&lt;p&gt;We can declare an array in a few different ways, but the common use of the &lt;code&gt;[]&lt;/code&gt; square brackets "keyword / syntax" means an array is being declared.&lt;/p&gt;

&lt;p&gt;There are a few ways you can declare an array in C#, explicitly or implicitly. For example when I said we need to know the length, this can be implicitly calculated by creating the array at point of instantiation and setting the values like so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// will create an integer array with 5 values, will output 5 objects with value 0 (int default is 0)&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;emptyArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 

&lt;span class="c1"&gt;//will create a string array with 5 string values, output will be the 5 names.&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Grant"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Gary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Mary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Cat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;//this can also be done using alternative syntax of&lt;/span&gt;
&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]{&lt;/span&gt;&lt;span class="s"&gt;"Grant"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Gary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Mary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Cat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;//Both do the same thing&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you've been playing with C# for a while, or have seen some intellisense tips (code helper when you type code in Visual Studio), you may have seen a method called &lt;code&gt;ToArray()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This does exactly what it says on the tin. It converts a collection to an array. Say you had a &lt;code&gt;List&amp;lt;string&amp;gt;&lt;/code&gt; but wanted to use it as an array, I dunno to pass it to another method that only accepts an &lt;code&gt;Array&lt;/code&gt;. It's simple you&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;{&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"World"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"How are you?"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;convertedArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToArray&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now your list is an Array, and gives you access to array methods and properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;{&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"World"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"World"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;//Get number of objects &lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;countList&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;countArray&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#array-vs-list"&gt;
  &lt;/a&gt;
  Array vs List
&lt;/h2&gt;

&lt;p&gt;So when would you use an array vs when to use a List. For me I'd usually opt for a List simply because lists in C# are far more easily sorted, searched through, and manipulated than arrays. &lt;/p&gt;

&lt;p&gt;However arrays do have a place, e.g if your data is unlikely to grow very much or if you‚Äôre dealing with a relatively large amount of data that will need to be indexed into often.&lt;/p&gt;

&lt;p&gt;Accessing Arrays is faster than Lists, this is because a List is just a .Net wrapper around an array. That unwrapping process can affect time taken to load records out of the list etc. There are few other reasons, but far too technical for this article. But we're talking milliseconds here, not huge amounts of time, however with large datasets this may be more noticeable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-summary"&gt;
  &lt;/a&gt;
  In Summary
&lt;/h2&gt;

&lt;p&gt;Use an array when you know how much data is going into it, and the data doesn't need to be added / removed / manipulated.&lt;/p&gt;

&lt;p&gt;Use a list when you wish to add / remove data to it easily. If you want to perform multiple actions on the data, pick a list as it offers more built-in functionality.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>csharp</category>
      <category>tutorial</category>
      <category>collections</category>
    </item>
    <item>
      <title>Day 46 of 100 Days of Code &amp; Scrum: Raging at CORS, AWS Lambda, and API Gateway</title>
      <author>Rammina</author>
      <pubDate>Tue, 23 Nov 2021 12:14:27 +0000</pubDate>
      <link>https://dev.to/rammina/day-46-of-100-days-of-code-scrum-raging-at-cors-aws-lambda-and-api-gateway-49jk</link>
      <guid>https://dev.to/rammina/day-46-of-100-days-of-code-scrum-raging-at-cors-aws-lambda-and-api-gateway-49jk</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;Today was my weekly visit to the physical therapist, so I wasn't able to code much.&lt;/p&gt;

&lt;p&gt;I didn't really make that much progress because I was still stuck on the same problem as I was yesterday. I spent most of the time troubleshooting my AWS API Gateway integration and Lambda function. Apparently, there is something wrong with the preflight request part of the communication between frontend and backend. I used tools such as AWS CloudWatch Logs to retrieve the error message for the integration of the API Gateway.&lt;/p&gt;

&lt;p&gt;I'm hoping that I manage to solve this issue tomorrow.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I set up my contact form to connect with the AWS serverless backend, but I got stuck on this bug:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Access to XMLHttpRequest at API_GATEWAY_ENDPOINT from origin http://localhost:3000 has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I also selected a design scheme for my website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I spent most of my time trying to solve the bug above.&lt;/li&gt;
&lt;li&gt;reviewed how to use CloudWatch Logs to gain insight as to what's going on with the AWS services I use.&lt;/li&gt;
&lt;li&gt;learned a lot about CORS.&lt;/li&gt;
&lt;li&gt;did a lot of searching about Access Control headers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I learned about why the Daily Scrum is more than just a status report.&lt;/li&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/services-apigateway.html"&gt;Using AWS Lambda with Amazon API Gateway&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-troubleshooting-lambda.html"&gt;Troubleshooting issues with HTTP API Lambda integrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum Master learning pathway | Scrum.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to create an iOS app? A step by step guide</title>
      <author>Anques Technolabs</author>
      <pubDate>Tue, 23 Nov 2021 12:00:50 +0000</pubDate>
      <link>https://dev.to/anquestechnolab/how-to-create-an-ios-app-a-step-by-step-guide-30m9</link>
      <guid>https://dev.to/anquestechnolab/how-to-create-an-ios-app-a-step-by-step-guide-30m9</guid>
      <description>&lt;p&gt;Are you new to the iOS app business? In this blog you will learn the whole process of how to create an iOS app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JvMsx6hS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.anques.com/wp-content/uploads/2021/05/create-an-iOS-app.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JvMsx6hS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.anques.com/wp-content/uploads/2021/05/create-an-iOS-app.jpg" alt="Image description" width="700" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the past decade, mobile app development has become one of the most promising and bright industries. Shows a large number of mobile apps, relying on mobile phones for everyday chores and entertainment and recreation. How to create an iOS application&lt;/p&gt;

&lt;p&gt;But the question is why do users like iOS so much? Well, first, it‚Äôs easy. Second, the app store submission process is rigorous, ensuring users get high quality mobile products. Finally, Apple has made it clear that user privacy is one of the company‚Äôs primary concerns.&lt;/p&gt;

&lt;p&gt;As a result, iOS app developers have to work hard during the iOS app development process and deliver the best product in one form or another.&lt;/p&gt;

&lt;p&gt;How the process turns out is a strange thing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General flow of iOS application development process:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Application development is not just about creating a mobile application and launching it on a digital store. The process requires planning, research, proper skills and, most of all, clear attention. To ensure the success of the final product, the mobile application development company must follow a series of steps in the application development cycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In general, there are five main stages in the development cycle of an application.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-planning-phase"&gt;
  &lt;/a&gt;
  1. Planning phase
&lt;/h3&gt;

&lt;p&gt;Before launching the app, it is very important to have a clear focus on what challenges the mobile app solves, what tasks are involved, who the target audience is, etc.&lt;/p&gt;

&lt;p&gt;In addition, thorough market research is required to make sure the app is competitive in your market or niche. The planning phase also includes configuring all the requirements at a later stage of the application development process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-design-phase"&gt;
  &lt;/a&gt;
  2. Design phase
&lt;/h3&gt;

&lt;p&gt;At this stage, the design team presents the user interface and user experience, i.e. appearance, vision and navigation. This design is then transferred to mobile app developers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-development-phase"&gt;
  &lt;/a&gt;
  3. Development phase
&lt;/h3&gt;

&lt;p&gt;This phase of the flow of the application development process involves creating a functional application from an existing design.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-testing-phase"&gt;
  &lt;/a&gt;
  4. Testing phase
&lt;/h3&gt;

&lt;p&gt;When development is complete, testing the application is mandatory. QA Engineers review the application to ensure that it is fully functional and error free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-application-release-and-maintenance"&gt;
  &lt;/a&gt;
  5. Application release and maintenance
&lt;/h3&gt;

&lt;p&gt;Once the application is verified and reviewed by the customer, it can be introduced in the market. However, this application does not complete the steps of the development process, as each application requires ongoing maintenance and must be updated frequently to take into account the changing demands of the customer. So this phase only marks the beginning of the second development cycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to create iOS mobile application? Step by step process:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The iOS application development workflow also follows the general pattern mentioned above. It all starts with the app plan, then designs and develops the app, tests it before launching the product and maintains it until the app runs.&lt;/p&gt;

&lt;p&gt;But, in practice, the iOS development process is not so simple. iOS developers must follow the rules of  Apple, developers to ensure a private, secure and user-friendly user experience. So, hire mobile app developers who can implement the elements and best practices needed to create a successful end product.&lt;/p&gt;

&lt;p&gt;The following section provides a detailed explanation of all the development steps of the iOS app:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-initial-steps-to-create-an-app-for-ios"&gt;
  &lt;/a&gt;
  1. Initial steps to create an app for iOS
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Research analysis&lt;/strong&gt;&lt;br&gt;
There are over a million apps on the App Store. So the market is extremely competitive. To ensure that your app receives frequent traction and frequent downloads, you need to do extensive market research to see if apps already exist. Then see how those apps work and compare yourself to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compliance with app store guidelines&lt;/strong&gt;&lt;br&gt;
In addition, the process of creating an iOS application also requires that you strictly follow the Apple guide. Apple only releases applications that meet its design, security, user privacy and other requirements. And there is no other way. This is the reason why all the apps on iOS look the same without losing uniqueness, and this is the reason why most of them are performing well.&lt;/p&gt;

&lt;p&gt;Read more from source URL: &lt;a href="https://www.anques.com/how-to-create-an-ios-app-a-step-by-step-guide/"&gt;https://www.anques.com/how-to-create-an-ios-app-a-step-by-step-guide/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ios</category>
      <category>appdev</category>
      <category>mobile</category>
      <category>mobileapp</category>
    </item>
  </channel>
</rss>
