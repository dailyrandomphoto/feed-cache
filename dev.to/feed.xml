<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Java Thread Sınıfı</title>
      <author>Özgür Akıncı</author>
      <pubDate>Wed, 19 Jan 2022 09:48:50 +0000</pubDate>
      <link>https://dev.to/ozgur/java-thread-sinifi-1od0</link>
      <guid>https://dev.to/ozgur/java-thread-sinifi-1od0</guid>
      <description>&lt;p&gt;Thread yapısı, aynı anda ve birbirini beklemeden birden çok işin gerçekleşebildiği yapıdır.&lt;/p&gt;

&lt;p&gt;Thread oluştururken, java'da &lt;u&gt;thread sınıfı extend edilebilir&lt;/u&gt; ya da &lt;u&gt;runnable implementasyonu&lt;/u&gt; tercih edilebilir.&lt;/p&gt;

&lt;p&gt;Java'da sadece bir sınıf extend edilebildiği ve daha fazla esneklik sağlamak için &lt;u&gt;runnable implementasyonu&lt;/u&gt; daha avantajlıdır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Önemli tanımlar&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Runnable:&lt;/strong&gt; Thread tanımlarının ne yapması gerektiğini açıklayan bir arayüzdür. &lt;br&gt;
&lt;strong&gt;Run:&lt;/strong&gt; Ana thread bekleme yaparak, diğer thread'ler çalışır. &lt;br&gt;
&lt;strong&gt;Start:&lt;/strong&gt; Ana thread bekleme yapmadan, diğer threadler ile birlikte çalışır.&lt;br&gt;
&lt;strong&gt;Sleep:&lt;/strong&gt; Thread bekletmek/uyutmak için kullanılır.&lt;br&gt;
&lt;strong&gt;Join:&lt;/strong&gt; Mevcut thread işini bitirmeden, diğer thread işine başlayamaz.,&lt;br&gt;
&lt;strong&gt;Synchronized:&lt;/strong&gt; Method'a ulaşmak isteyen threadler method'a sıra ile girerler ve bir thread method'u bitirmeden diğer thread başlayamaz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not:&lt;/strong&gt; &lt;u&gt;Thread.join()&lt;/u&gt;, iş parçacığının tamamen bitmesini beklerken, iki iş parçacığının aynı anda aynı kod parçasını yürütmesini önlemek için &lt;u&gt;synchronized&lt;/u&gt; bir blok kullanılabilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Örnek Uygulama&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.app.thread;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main{
    public static void main(String[] args){
        List&amp;lt;Integer&amp;gt; v = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(1, 2, 3,4));

        ThreadExample thread1 = new ThreadExample(v);
        ThreadExample thread2 = new ThreadExample(v);

        try {
            thread1.start();
            thread1.join(); // thread2 çalışabilmek için bekleyecektir.
            thread2.start();
            thread2.join();
        }catch (InterruptedException e) {
            System.out.println(e.getMessage());
        }

        Integer totalSum = thread1.getSum() + thread2.getSum();
        System.out.println("The sum: " + totalSum);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.app.thread;
import java.util.List;

public class ThreadExample extends Thread implements Runnable{
    private List&amp;lt;Integer&amp;gt; v;
    public Integer sum = 0;

    public ThreadExample(List&amp;lt;Integer&amp;gt; p) {
        this.v = p;
    }

    @Override
    public void run() {
        System.out.println(Thread.currentThread().getName() + " started..");
        synchronized(this) {
            for (Integer i : v) {
                sum += i;
            }
            System.out.println(Thread.currentThread().getName() + " =&amp;gt; The sum: " + totalSum);
        }
    }
    public Integer getSum() {
        return sum;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Program Çıktısı&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0CIwv_Zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9domc38kptxuoruob02o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0CIwv_Zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9domc38kptxuoruob02o.png" alt="Image description" width="714" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to get noticed by tech recruiters?</title>
      <author>kavyaj</author>
      <pubDate>Wed, 19 Jan 2022 09:46:51 +0000</pubDate>
      <link>https://dev.to/kavyaj/how-to-get-noticed-by-tech-recruiters-a1b</link>
      <guid>https://dev.to/kavyaj/how-to-get-noticed-by-tech-recruiters-a1b</guid>
      <description>&lt;p&gt;I attended a webinar by &lt;a href="https://www.codementor.io/"&gt;Codementor&lt;/a&gt; yesterday about tech hiring, where the speaker Jeff Lam shared these insightful gems on creating resumes that help candidates stand out:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-recruiters-look-for"&gt;
  &lt;/a&gt;
  What do recruiters look for?
&lt;/h2&gt;

&lt;p&gt;Regardless of ATS (applicant tracking system) or a human reviewing your application, here's what they look for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;your tech stacks&lt;/li&gt;
&lt;li&gt;relevant experience for the role&lt;/li&gt;
&lt;li&gt;clear &amp;amp; concise profile/resume (if too long, recruiters may even skip reading it)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-to-optimize-your-resume-for-visibility"&gt;
  &lt;/a&gt;
  How to optimize your resume for visibility?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;make it easy to read with bullets, tech stacks, project details&lt;/li&gt;
&lt;li&gt;keep it short &amp;amp; concise, don't overwhelm with info&lt;/li&gt;
&lt;li&gt;recruiters (&amp;amp; ATS) are experts at keyword search. Add relevant ones&lt;/li&gt;
&lt;li&gt;add tech stack at the bottom of every employment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1hFqI4eQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0t1lt4k5cqhc3wyaf5hk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1hFqI4eQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0t1lt4k5cqhc3wyaf5hk.jpg" alt="Image with an example of optimized resume with bullet points, tech stacks and keywords" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-stand-out"&gt;
  &lt;/a&gt;
  How to stand out?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;give personality to your professional profile: it could be through choice of words, colour, font or anything else&lt;/li&gt;
&lt;li&gt;be active in tech communities and link it to your resume: Github, LinkedIn, Twitter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xoXEOyHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1i9ja9is6r38nmvdk9w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xoXEOyHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1i9ja9is6r38nmvdk9w.jpg" alt="Image with an example of optimized resume with professional fonts, colour and links to social media" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;don't just write responsibilities. Write about something challenging you've worked on, any projects.&lt;/li&gt;
&lt;li&gt;optimize content for the role. The more relevant it is, there's a higher chance of getting shortlisted&lt;/li&gt;
&lt;li&gt;reach out to key decision makers in the company you're applying for.&lt;/li&gt;
&lt;li&gt;add numbers and quantify wherever you can. Specify the duration of employment. Recruiters (and ATS) are not technical experts but they use them to derive your degree of skill level &amp;amp; understand your seniority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, it's not difficult but takes &lt;em&gt;some&lt;/em&gt; effort to optimize :)&lt;/p&gt;

&lt;p&gt;Recently, I launched a product which helps candidates to create resumes with these elements easily. It's now live here: &lt;a href="https://resumey.pro/"&gt;Resumey.Pro&lt;/a&gt;.&lt;br&gt;
Feel free to  let me know what you think in the comments below 👇 &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Building Zoom clone in Flutter with 100ms SDK</title>
      <author>Nilay Jayswal</author>
      <pubDate>Wed, 19 Jan 2022 09:25:55 +0000</pubDate>
      <link>https://dev.to/100mslive/building-zoom-clone-in-flutter-with-100ms-sdk-27eg</link>
      <guid>https://dev.to/100mslive/building-zoom-clone-in-flutter-with-100ms-sdk-27eg</guid>
      <description>&lt;p&gt;Today, Zoom is the most popular video and audio conferencing app. From interacting with co-workers to organising events like workshops and webinars, Zoom is everywhere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This content was originally published - &lt;a href="https://www.100ms.live/blog/zoom-clone-in-flutter"&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This post will take you through a step by step guide on how to build a basic Zoom like app using Flutter and 100ms' live audio-video SDK in the following way -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add 100ms to a Flutter app&lt;/li&gt;
&lt;li&gt;Join a room&lt;/li&gt;
&lt;li&gt;Leave a room&lt;/li&gt;
&lt;li&gt;Show video tiles with the user’s name&lt;/li&gt;
&lt;li&gt;Show Screenshare tile&lt;/li&gt;
&lt;li&gt;hand Raised&lt;/li&gt;
&lt;li&gt;Mute/Unmute&lt;/li&gt;
&lt;li&gt;Camera off/on&lt;/li&gt;
&lt;li&gt;Toggle Front/Back camera&lt;/li&gt;
&lt;li&gt;Chatting with everyone in the room&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By the end of this blog, this is how your app will look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ON6Ob6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki0tyhigjcmkulqyyyj1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ON6Ob6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki0tyhigjcmkulqyyyj1.gif" alt="Image description" width="288" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before proceeding, make sure you have the following requirements:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Flutter v2.0.0 or later (stable)&lt;/li&gt;
&lt;li&gt;100ms Account (&lt;a href="https://dashboard.100ms.live/register?__hstc=19694910.00d8cf2b93837ca0e9ae2449ee855bfe.1638881948926.1642569352227.1642578062293.40&amp;amp;__hssc=19694910.3.1642578062293&amp;amp;__hsfp=208315710"&gt;Create 100ms Account&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;p&gt;Download the &lt;a href="https://github.com/govindmaheshwari2/zoom-example-app/tree/starter"&gt;starter app containing all the prebuilt UI&lt;/a&gt; from here. Open it in your editor, build and run the app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_LIX7eL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55fc420b939fh81rbpzr.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_LIX7eL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/55fc420b939fh81rbpzr.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9md9vpt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91g3odmietvzde3licjk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9md9vpt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91g3odmietvzde3licjk.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPijiD3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjokbl8jlv52hhtk0z9d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPijiD3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjokbl8jlv52hhtk0z9d.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The file structure of the starter project looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8E6_7jmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im2kx4xb9uj4xiwsv9kl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8E6_7jmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im2kx4xb9uj4xiwsv9kl.png" alt="Image description" width="432" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;main.dart&lt;/code&gt;: The entry point of the app and the screen to get user details before joining the meeting.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;meeting.dart&lt;/code&gt;: The video call screen to render all peers view.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;message.dart&lt;/code&gt;: The chat screen to send messages to everyone in the room.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;room_service.dart&lt;/code&gt;: A helper service class to fetch the token to join a meeting.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;peerTrackNode.dart&lt;/code&gt;: A data model class for user details:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class PeerTracKNode {
  String peerId;
  String name;
  @observable
  HMSTrack? track;
  HMSTrack? audioTrack;
  PeerTracKNode({
    required this.peerId,
    this.track,
    this.name = "",
    this.audioTrack,
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the next step, you’ll start setting up your project and initialise 100ms in it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-project"&gt;
  &lt;/a&gt;
  Setting up project
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#get-the-access-credentials"&gt;
  &lt;/a&gt;
  Get the Access Credentials
&lt;/h2&gt;

&lt;p&gt;You’ll need the Token endpoint and App id, so get these credentials from the Developer Section:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUkSytf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcp0ppqsu43dhe4tqewf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUkSytf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcp0ppqsu43dhe4tqewf.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-new-app"&gt;
  &lt;/a&gt;
  Create New App
&lt;/h2&gt;

&lt;p&gt;Before creating a room, you need to &lt;a href="https://dashboard.100ms.live/create-new-app?__hstc=19694910.00d8cf2b93837ca0e9ae2449ee855bfe.1638881948926.1642569352227.1642578062293.40&amp;amp;__hssc=19694910.3.1642578062293&amp;amp;__hsfp=208315710"&gt;create a new app&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KcC5itHD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vegnrtdcmb77d7etsm7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KcC5itHD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vegnrtdcmb77d7etsm7v.png" alt="Image description" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, choose the &lt;code&gt;Video Conferencing&lt;/code&gt; template:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--suoTArbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3o9pm7a5rgmqu4fzu1ql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suoTArbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3o9pm7a5rgmqu4fzu1ql.png" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;Set up App&lt;/code&gt; and and your app is created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydk4nLbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opbgkeolopomcvanmi5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydk4nLbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opbgkeolopomcvanmi5s.png" alt="Image description" width="880" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#room"&gt;
  &lt;/a&gt;
  Room
&lt;/h2&gt;

&lt;p&gt;Finally, go to Rooms in the dashboard and click on room pre-created for you:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A2yBtSHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2fydm5ohm23k08mcqn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2yBtSHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2fydm5ohm23k08mcqn1.png" alt="Image description" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N.B., Grab the Room Link to use it later to join the room.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#add-100ms-to-your-flutter-app"&gt;
  &lt;/a&gt;
  Add 100ms to your Flutter app
&lt;/h2&gt;

&lt;p&gt;Add the 100ms plugins in the pubspec dependencies as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hmssdk_flutter: ^0.5.0
mobx: ^2.0.1
flutter_mobx: ^2.0.0
mobx_codegen: ^2.0.1+3
http: ^0.13.3
intl: ^0.17.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Either get it using your IDE to install the plugins or use the below command for that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flutter pub get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update target Android version&lt;/p&gt;

&lt;p&gt;Update the Android SDK version to 21 or later by navigating to the &lt;code&gt;android/app&lt;/code&gt; directory and updating the &lt;code&gt;build.gradle&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;defaultConfig{
minSdkVersion 21
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-permissions"&gt;
  &lt;/a&gt;
  Add Permissions
&lt;/h2&gt;

&lt;p&gt;You will require Recording Audio, Video and Internet permission in this project as you are focused on the audio/video track in this tutorial.&lt;/p&gt;

&lt;p&gt;A track represents either the audio or video that a peer is publishing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#android-permissions"&gt;
  &lt;/a&gt;
  Android Permissions
&lt;/h2&gt;

&lt;p&gt;Add the permissions in your  AndroidManifest file (&lt;code&gt;android/app/src/main/AndroidManifest.xml&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;uses-permission android:name="android.permission.RECORD_AUDIO" /&amp;gt;
&amp;lt;uses-permission android:name="android.permission.INTERNET" /&amp;gt;
&amp;lt;uses-feature android:name="android.hardware.camera"/&amp;gt;
&amp;lt;uses-feature android:name="android.hardware.camera.autofocus"/&amp;gt;
&amp;lt;uses-permission android:name="android.permission.CAMERA"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ios-permissions"&gt;
  &lt;/a&gt;
  iOS Permissions
&lt;/h2&gt;

&lt;p&gt;Add the permissions to your &lt;code&gt;Info.plist&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;key&amp;gt;NSCameraUsageDescription&amp;lt;/key&amp;gt;
   &amp;lt;string&amp;gt;{YourAppName} wants to use your camera&amp;lt;/string&amp;gt;

&amp;lt;key&amp;gt;NSMicrophoneUsageDescription&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;{YourAppName} wants to use your microphone&amp;lt;/string&amp;gt;

&amp;lt;key&amp;gt;NSLocalNetworkUsageDescription&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;{YourAppName} App wants to use your local network&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you are ready to join a room.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-listener"&gt;
  &lt;/a&gt;
  Implement Listener
&lt;/h2&gt;

&lt;p&gt;You have to implement some new classes over the current SDK, this will help you interact with the SDK easily. So start by adding the following file in the setup subfolder in lib:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/100mslive/100ms-flutter/blob/main/example/lib/meeting/meeting_store.dart"&gt;100ms-flutter/meeting_store.dart at main · 100mslive/100ms-flutter (github.com)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above class provides you with a lot of methods over the HMS SDK which will be later used here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/100mslive/100ms-flutter/blob/main/example/lib/meeting/hms_sdk_interactor.dart"&gt;100ms-flutter/hms_sdk_interactor.dart at main · 100mslive/100ms-flutter (github.com)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above contains an abstract class providing several methods to build a more advanced app. It uses the help of the meeting_store.dart to interact with the HMS SDK.&lt;/p&gt;

&lt;p&gt;&lt;a href="//100ms-flutter/HmsSdkManager.dart%20at%20main%20%C2%B7%20100mslive/100ms-flutter%20(github.com)"&gt;100ms-flutter/HmsSdkManager.dart at main · 100mslive/100ms-flutter (github.com)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;meeting_store&lt;/code&gt; file is to interact with HMSSDKInteractor.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N.B., Make sure to generate the class using build_runner and mobx_codegen:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd zoom
flutter packages pub run build_runner build --delete-conflicting-outputs 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#join-room"&gt;
  &lt;/a&gt;
  Join Room
&lt;/h2&gt;

&lt;p&gt;A room is a basic object that 100ms SDK returns on a completing a connection. This contains connections to peers, tracks and everything you need to view a live audio-video app. To join a room, you require an &lt;code&gt;HMSConfig&lt;/code&gt; object, that’ll have the following fields:&lt;/p&gt;

&lt;p&gt;userName: A name shown to other peers in a room.&lt;br&gt;
roomLink: A room link, that was generated earlier while creating the room.&lt;br&gt;
First, you can get userName and roomLink fields, by using the TextField widget to get the userName and room information using the &lt;code&gt;usernameTextEditingController&lt;/code&gt; and &lt;code&gt;roomLinkTextEditingController&lt;/code&gt; TextEditingController :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nRqa6-WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9lpyg7k5xuh3vtd1q6i.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nRqa6-WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9lpyg7k5xuh3vtd1q6i.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then pass this info in meeting.dart file on onPressed event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ElevatedButton(
             onPressed: () {
               Navigator.push(
                 context,
                 MaterialPageRoute(
                     builder: (context) =&amp;gt; Meeting( 
                           name: usernameTextEditingController.text,
                           roomLink: roomLinkTextEditingController.text,
                         )),
               );
             },
             child: const Text(  
               "Join",
               style: TextStyle(fontSize: 20),
             ))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now move to meeting.dart file and you will find it taking 2 parameters name and roomLink which we have passed from main.dart file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Meeting extends StatefulWidget {
 final String name, roomLink;

 const Meeting({Key? key, required this.name, required this.roomLink})
     : super(key: key);
 @override
 _MeetingState createState() =&amp;gt; _MeetingState();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, in meeting.dart add the following code in your _meetingState:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class _MeetingState extends State&amp;lt;Meeting&amp;gt; with WidgetsBindingObserver {
//1
  late MeetingStore _meetingStore;

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance!.addObserver(this);
//2
    _meetingStore = MeetingStore();
//3
    initMeeting();
  }
//4
    initMeeting() async {
    bool ans = await _meetingStore.join(widget.name, widget.roomLink);
    if (!ans) {
      const SnackBar(content: Text("Unable to Join"));
      Navigator.of(context).pop();
    }
    _meetingStore.startListen();
  }
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Created a late instance of MeetingStore that will get initialise in initState.&lt;/li&gt;
&lt;li&gt;Initialize the MeetingStore instance for observing the changes.&lt;/li&gt;
&lt;li&gt;Calling joinMeeting method from the initState to join the meeting&lt;/li&gt;
&lt;li&gt;initMeeting: Here you are using the _meetingStore object to join the meeting. If joined successfully, then you are starting to listen to the changes in the meeting.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Build and run your app. Now, you have joined the meeting and move to meeting page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2-Z8lLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7fym48btfna6awgo7mh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2-Z8lLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7fym48btfna6awgo7mh.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will activate the onJoin event, and your app will be bring an update from the 100ms SDK.&lt;/p&gt;

&lt;p&gt;✅ If successful, the function onJoin(room: HMSRoom) method of HMSUpdateListener will be invoked with details about the room containing in the HMSRoom object.&lt;/p&gt;

&lt;p&gt;❌ If failure, the fun onError(error: HMSException) method will be invoked with failure reason.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#render-the-peers"&gt;
  &lt;/a&gt;
  Render the Peers
&lt;/h2&gt;

&lt;p&gt;A peer is an object returned by 100ms SDKs that hold the information about a user in meeting - name, role, track, raise hand etc.&lt;/p&gt;

&lt;p&gt;So, update the build method of your meeting by wrapping it by  Observer to rebuild the method on any changes, like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Flexible(
    child: Observer(
            builder: (_) {
        //1
         if (_meetingStore.isRoomEnded) {  
                Navigator.pop(context, true);
             }
        //2
         if (_meetingStore.peerTracks.isEmpty) {
                return const Center(
                   child: Text('Waiting for others to join!'));
            }
        //3
         ObservableList&amp;lt;PeerTracKNode&amp;gt; peerFilteredList =
                               _meetingStore.peerTracks;
        //4
         return videoPageView(peerFilteredList); 
            },
          ),
),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you did the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;isRoomEnded: If the room gets ended then it will take the user to the home screen.&lt;/li&gt;
&lt;li&gt;peerTracks.isEmpty: If no one has joined the room then it shows a message to the user.&lt;/li&gt;
&lt;li&gt;peerFilteredList is an ObservableList is user get added or removed then it will notify the UI to change it.&lt;/li&gt;
&lt;li&gt;videoPageView: It is a function to render multiple peers videos on screen. (UI implementation).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After setting up the UI for rendering we need to call HMSVideoView() and pass track which will be provided by the peerFilterList in videoTile widget.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SizedBox(
     width: size,
     height: size,
     child: ClipRRect(
        borderRadius: BorderRadius.circular(10),
        child: (track.track != null &amp;amp;&amp;amp; isVideoMuted)
                ? HMSVideoView(
                     track: track.track!,
                  )
                : Container(
                      width: size,
                      height: size,
                      color: Colors.black,
                      child: Center(
                        child: CircleAvatar(
                                radius: 50,
                                backgroundColor: Colors.green,
                                child: track.name.contains(" ")
                                    ? Text(
                                (track.name.toString().substring(0, 1)                                      +
                                track.name.toString().split(" ")[1]
                                .substring(0, 1)).toUpperCase(),
                                style: const TextStyle(
                                      fontSize: 18,
                                      fontWeight: FontWeight.w700),
                                      )
                                    : Text(track.name
                                        .toString()
                                        .substring(0, 1)
                                        .toUpperCase()),
                              ),
                            ))),
),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, you check if the video is on of the user or not if yes then render the video using HMSVideoView() otherwise show Initial of user name.&lt;/p&gt;

&lt;p&gt;You can also pass other parameters to HmsVideoView widget like mirror view, match parent and viewSize.&lt;/p&gt;

&lt;p&gt;For checking if user video is on or off we do following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ObservableMap&amp;lt;String, HMSTrackUpdate&amp;gt; trackUpdate = _meetingStore.trackStatus;
if((trackUpdate[peerTracks[index].peerId]) == HMSTrackUpdate.trackMuted){
    return true;
}else{
    return false;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For getting a username we have call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Text(
   track.name,
   style: const TextStyle(fontWeight: FontWeight.w700),
),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JSF1yBCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6i7vud4mc8yhkrsa9mm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSF1yBCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6i7vud4mc8yhkrsa9mm.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screen-share-tile"&gt;
  &lt;/a&gt;
  Screen share Tile
&lt;/h2&gt;

&lt;p&gt;To display the screenshare tile update videoPageView function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (_meetingStore.screenShareTrack != null) {
      pageChild.add(RotatedBox(
        quarterTurns: 1,
        child: Container(
            margin:
                const EdgeInsets.only(bottom: 0, left: 0, right: 100, top: 0),
            child: Observer(builder: (context) {
              return HMSVideoView(track: _meetingStore.screenShareTrack!);
            })),
      ));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;screenShareTrack: _meetingStore.screenShareTrack contain track for screenshare if it is null then no one is sharing the screen otherwise it will return track.&lt;/li&gt;
&lt;li&gt;rotatedBox: To match the screenshare ratio with the mobile device screen.&lt;/li&gt;
&lt;li&gt;HMSVideoView will render the screen by using _meetingStore.screenShareTrack as a track parameter.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now build app and run when you do screenshare you can see it like below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--souZgP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npnrdo1jn44si6j9mjuy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--souZgP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npnrdo1jn44si6j9mjuy.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hand-raised"&gt;
  &lt;/a&gt;
  Hand Raised
&lt;/h2&gt;

&lt;p&gt;For hand raised follow the follwing code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IconButton(
        icon: Image.asset(
           'assets/raise_hand.png',
           //1
           color: isRaiseHand?                          Colors.amber.shade300
            : Colors.grey),
            onPressed: () {
              setState(() {
              //2
                isRaiseHand = !isRaiseHand;
                       });
            //3
            _meetingStore.changeMetadata();
           },
   ),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Used the &lt;code&gt;isRaiseHand&lt;/code&gt;boolean local variable to check and update the Image colour accordingly.&lt;/li&gt;
&lt;li&gt;Updated the &lt;code&gt;onPressed&lt;/code&gt; event to toggle the isRaiseHand variable.&lt;/li&gt;
&lt;li&gt;Toggle the raiseHand metadata using the &lt;code&gt;_meetingStore&lt;/code&gt; to inform all users.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To get other peers hand raise info update videoViewGrid function as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//1
ObservableList&amp;lt;HMSPeer&amp;gt; peers = _meetingStore.peers;
//2
HMSPeer peer = peers[peers.indexWhere(
              (element) =&amp;gt; element.peerId == peerTracks[index].peerId)];
 //3
 if(peer.metadata.toString() == "{\"isHandRaised\":true}"){
              return true;
              }
              else{
              return false;
              }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;_meetingStore.peers&lt;/code&gt; will return all the information about the peers in form of list.&lt;/li&gt;
&lt;li&gt;We will find HMSPeer object from peers list by comparing peerId.&lt;/li&gt;
&lt;li&gt;Check metadata of peer if it is equal to {"isHandRaised":true} then return true else false.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now build app and run when you raise hand you can see it on video tiles as below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DD7sbN3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nat1uslnwomk3riegxhm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DD7sbN3f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nat1uslnwomk3riegxhm.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mute-unmute"&gt;
  &lt;/a&gt;
  Mute/ Unmute
&lt;/h2&gt;

&lt;p&gt;To mute or unmute your mic, update your mic button as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//1
Observer(builder: (context) {
                     return CircleAvatar(
                       backgroundColor: Colors.black,
                       child: IconButton(
                       //2
                         icon: _meetingStore.isMicOn
                             ? const Icon(Icons.mic)
                             : const Icon(Icons.mic_off),
                         onPressed: () {
//3
_meetingStore.switchAudio();
                         },
                         color: Colors.blue,
                       ),
                     );
                   }),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you updated the button as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Wrapped the button with the Observer so that you can rebuild it on change of mic status.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;isMicOn&lt;/code&gt; boolean to check and update the Icon accordingly.&lt;/li&gt;
&lt;li&gt;Updated the &lt;code&gt;onPressed&lt;/code&gt; event to toggle the local peer mic using the &lt;code&gt;_meetingStore&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#camera-toggle"&gt;
  &lt;/a&gt;
  Camera Toggle
&lt;/h2&gt;

&lt;p&gt;To toggle the camera, update your camera button as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//1
Observer(builder: (context) {
                     return CircleAvatar(
                       backgroundColor: Colors.black,
                       child: IconButton(
                       //2
                         icon: _meetingStore.isVideoOn
                             ? const Icon(Icons.videocam)
                             : const Icon(Icons.videocam_off),
                         onPressed: () {
                        //3                       _meetingStore.switchVideo();
                         },
                         color: Colors.blue,
                       ),
                     );
                   }),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you updated the button as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Wrapped the button with the Observer  so that you can rebuild it on change of camera status.&lt;/li&gt;
&lt;li&gt;Used the &lt;code&gt;isVideoOn&lt;/code&gt; boolean method to check and update the Icon accordingly.&lt;/li&gt;
&lt;li&gt;Updated the &lt;code&gt;onPressed&lt;/code&gt; event to toggle the local peer video using the &lt;code&gt;_meetingStore&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#switch-between-frontback-camera"&gt;
  &lt;/a&gt;
  Switch between Front/Back Camera
&lt;/h2&gt;

&lt;p&gt;To switch the camera, update your switch camera button as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;IconButton(
                         icon: const Icon(Icons.cameraswitch),
                         onPressed: () {
//1
_meetingStore.switchCamera();
                         },
                         color: Colors.blue,
                       ),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you updated the button as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Updated the &lt;code&gt;onPressed&lt;/code&gt; event to switch the camera using the &lt;code&gt;_meetingStore.switchCamera()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#leave-room"&gt;
  &lt;/a&gt;
  Leave Room
&lt;/h2&gt;

&lt;p&gt;To leave the room update the leave room button as follow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;onPressed: () {
_meetingStore.leave();
  Navigator.pop(context);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, you are using the MeetingStore object to leave the room.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q1u3Cu6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs0ivgq4l6ze0n2ypx.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1u3Cu6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs0ivgq4l6ze0n2ypx.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chat"&gt;
  &lt;/a&gt;
  Chat
&lt;/h2&gt;

&lt;p&gt;To add the feature to chat with everyone in a meeting you need to update your message widget.&lt;/p&gt;

&lt;p&gt;First, accept the MeetingStore object in your message constructor from the meeting.dart to get the meeting details as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;final MeetingStore meetingStore;

const Message({required this.meetingStore, Key? key}) : super(key: key);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, store this object inside your _ChatViewState as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;late MeetingStore _meetingStore;

  @override
  void initState() {
    super.initState();
    _meetingStore = widget.meetingStore;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, update the body of scaffold widget to render the messages as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Expanded(
        //1
                 child: Observer(                       
                   builder: (_) {
                   //2
                     if (!_meetingStore.isMeetingStarted) {     
                       return const SizedBox();
                     }
                     //3
                     if (_meetingStore.messages.isEmpty) {      
                       return const Center(child: Text('No messages'));
                     }
                     //4
                     return ListView.separated(         
                       itemCount: _meetingStore.messages.length,
                       itemBuilder: (itemBuilder, index) {
                         return Container(
                           padding: const EdgeInsets.all(5.0),
                           child: Column(
                             crossAxisAlignment: CrossAxisAlignment.start,
                             mainAxisSize: MainAxisSize.min,
                             children: [
                               Row(
                                 children: [
                                   Expanded(
                                     child: Text(
//5
_meetingStore           
                                  .messages[index].sender?.name ??
                                           "",
                                       style: const TextStyle(
                                           fontSize: 10.0,
                                           color: Colors.black,
                                           fontWeight: FontWeight.bold),
                                     ),
                                   ),
                                   Text(
//6
_meetingStore
                               .messages[index].time        
                                         .toString(),
                                     style: const TextStyle(
                                         fontSize: 10.0,
                                         color: Colors.black,
                                         fontWeight: FontWeight.w900),
                                   )
                                 ],
                               ),
                               const SizedBox(
                                 height: 10.0,
                               ),
                               Text(
//7
                             _meetingStore
                              .messages[index].message      
                                     .toString(),
                                 style: const TextStyle(
                                     fontSize: 14.0,
                                     color: Colors.black,
                                     fontWeight: FontWeight.w300),
                               ),
                             ],
                           ),
                         );
                       },
                       separatorBuilder: (BuildContext context, int index) {
                         return const Divider();
                       },
                     );
                   },
                 ),
               ),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Observer is used to display the changes.&lt;/li&gt;
&lt;li&gt;Return the empty box if the meeting hasn’t started.&lt;/li&gt;
&lt;li&gt;Displaying "No messages" text if there are no messages.&lt;/li&gt;
&lt;li&gt;Rendering the messages as a List get updated.&lt;/li&gt;
&lt;li&gt;Displaying the sender's peer name.&lt;/li&gt;
&lt;li&gt;Displaying the DateTime of the message.&lt;/li&gt;
&lt;li&gt;Displaying the message.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After this, you can see  the incoming messages, however, this willl not allow to send a message yet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W5lx6Edy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u62kbmfkwg2n0f3pu7e.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W5lx6Edy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u62kbmfkwg2n0f3pu7e.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So edit the onTap event of the Send button of the message as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 1
String message = messageTextController.text;
                        if (message.isEmpty) return;
                        // 2
                        DateTime currentTime = DateTime.now();
                        final DateFormat formatter =
                            DateFormat('d MMM y hh:mm:ss a');
                   //3     _meetingStore.sendBroadcastMessage(message);
                          // 4
                          _meetingStore.addMessage(HMSMessage(
                            sender: _meetingStore.localPeer!,
                            message: message,
                            type: "chat",
                            time: formatter.format(currentTime),
                            hmsMessageRecipient: HMSMessageRecipient(
                                recipientPeer: null,
                                recipientRoles: null,
                                hmsMessageRecipientType:
                                    HMSMessageRecipientType.BROADCAST),
                          ));
        messageTextController.clear();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you did the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Saving the message using the &lt;code&gt;messageTextController&lt;/code&gt; TextEditingController.&lt;/li&gt;
&lt;li&gt;Saving the current DateTime and formatting it to string.&lt;/li&gt;
&lt;li&gt;Using the &lt;code&gt;sendBroadcastMessage&lt;/code&gt; of the &lt;code&gt;_meetingStore&lt;/code&gt; object to Send the message in meeting.&lt;/li&gt;
&lt;li&gt;Add the message as an &lt;code&gt;HMSMessage&lt;/code&gt; object to render message in above list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Build and run your app. Now, you can send and receive message  in the meeting&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x-3prOfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5lo4d8n0q9ixom97p94.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x-3prOfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5lo4d8n0q9ixom97p94.jpeg" alt="Image description" width="720" height="1600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you have learned the essential functionality and are prepared to use these skills in your projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You can find &lt;a href="https://github.com/govindmaheshwari2/zoom-example-app"&gt;the starter and final project from here&lt;/a&gt;. In this tutorial, you discovered about 100ms and how you can efficiently use 100ms to build a zoom Application. Yet, this is only the opening, you can discover more about switching roles, changing tracks, adding peers, screen share from device, different type of chats(peer to peer or group chat), and &lt;a href="https://docs.100ms.live/flutter/v2/foundation/basics"&gt;many more functionality&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We hope you enjoyed this tutorial. Feel free to reach out to us if you have any queries. Thank you!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Rise of Browser Os</title>
      <author>Patrick Waweru</author>
      <pubDate>Wed, 19 Jan 2022 08:56:34 +0000</pubDate>
      <link>https://dev.to/patrickweb/the-rise-of-browser-os-5e0</link>
      <guid>https://dev.to/patrickweb/the-rise-of-browser-os-5e0</guid>
      <description>&lt;p&gt;Why is chrome so heavy? The all to famous question and meme. Well I have the answer. See chrome and other web browsers are more of operating systems than browsers. Lets look at it from this perspective, websites these days are being referred to as web &lt;strong&gt;apps&lt;/strong&gt;, why? Well, maybe because they are more of like apps. Is Gmail a website or a web app? What about github? I'll do you one better, what about figma or gravit designer? The days where web developers were "looked down on" by the developer community is long gone. Web developers(backend and frontend) are building some seriously complex systems. &lt;br&gt;
Let's do a quick experiment.Open &lt;a href="https://figma.com"&gt;Figma&lt;/a&gt; If you are on a chromium based browser press &lt;code&gt;Shift +  Esc&lt;/code&gt; to open your browser's task and check how much memory and cpu Figma is using. Here is mine 👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CROIdqWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wa0oc4v5pfgn5anpywm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CROIdqWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wa0oc4v5pfgn5anpywm.png" alt="Browser Task Manager" width="880" height="478"&gt;&lt;/a&gt;&lt;br&gt;
Figma is using 300+ mb of ram(currently, I just rechecked). More than the browser itself. What about YouTube?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqU6PzO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m08kqqbsnsxbqaswmv3h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqU6PzO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m08kqqbsnsxbqaswmv3h.png" alt="Youtube Memory Usage" width="880" height="55"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's the point? The point is that website are pretty heavy these days. They are apps and the browser is the operating system managing them. We have browsers suspending tabs after some idle time to conserve memory, well that there is memory management, a concept in Operating Systems. We can go all in in mapping operating system functions to features in modern web browsers but I'll stop at that one.&lt;/p&gt;

&lt;p&gt;You can perform pretty much 99% of your tasks right on your browser. You can code (stakblitz, code pen, codesandbox),design (figma, gravit designer, vectr), video editing(invideo,clipchamp,veed.io), photo editing (photopea, pxlr, fotor), zip and compress files, heck even gaming with google stadia and xbox game pass. This is why this concept came to me. I can 100% live in the browser. Am guessing this realization was also the fuel for building chrome os. And while we are on that, lets talk about google.&lt;br&gt;
Google and Microsft are hell-bent on making the browser an os. Checkout the &lt;a href="https://www.chromium.org/teams/web-capabilities-fugu"&gt;fugu&lt;/a&gt; project that is on a course of availing all native apis (file system access, bluetooth and so on) to the browser. Check this out 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b69yp8wB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vvru3q5fl8i3lul26bi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b69yp8wB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vvru3q5fl8i3lul26bi.png" alt="Screen shot of PWA capabilities" width="880" height="267"&gt;&lt;/a&gt;&lt;br&gt;
This is a screeshot from the &lt;a href="https://whatpwacando.today"&gt;whatpwacando&lt;/a&gt; website that lists all of the features progress web apps can do. This list is just unbelievable. The gap between web apps and native is quickly getting filled. And in the process of bridging this gap, the browser operating systems are slowly being built.&lt;/p&gt;

&lt;p&gt;Am not sure whether to support this progression or to oppose it because it has benefits and drawbacks. But whatever my or your stance is on this it wont stop this process. With each passing day we get closer to the "web winning", in the "virtual war" between web and native. What do you think. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>C# PDF Viewers</title>
      <author>IronSoftware</author>
      <pubDate>Wed, 19 Jan 2022 08:49:14 +0000</pubDate>
      <link>https://dev.to/ironsoftware/c-pdf-viewers-1a7h</link>
      <guid>https://dev.to/ironsoftware/c-pdf-viewers-1a7h</guid>
      <description>&lt;p&gt;Viewing PDFs in applications is a common request that is easily solved with the &lt;a href="https://ironpdf.com/use-case/pdf-library-dot-net/"&gt;PDF Library for .NET&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-installing-ironpdf-into-your-project"&gt;
  &lt;/a&gt;
  1. Installing IronPDF into Your Project
&lt;/h1&gt;

&lt;p&gt;Use NuGet package manager to install IronPDF:&lt;br&gt;
&lt;a href="https://www.nuget.org/packages/IronPdf"&gt;https://www.nuget.org/packages/IronPdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PM &amp;gt; Install-Package IronPdf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;IronPDF DLL can also be &lt;a href="https://ironpdf.com/packages/IronPdf.Package.For.net.pdf.viewer.zip"&gt;downloaded&lt;/a&gt; and manually installed.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;How to Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-pdf-viewers-for-net"&gt;
  &lt;/a&gt;
  2. PDF Viewers for .NET
&lt;/h1&gt;

&lt;p&gt;We are working on a visual framework for viewing PDFs in C#/.Net - in the mean time you have lots of viable free options without resorting to Adobe Acrobat.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#21-aspnet-amp-mvc-pdf-viewer"&gt;
  &lt;/a&gt;
  2.1. ASP.Net &amp;amp; MVC PDF viewer.
&lt;/h2&gt;

&lt;p&gt;For web applications - PDFs can be viewed in a browser window or iframe. You may also use the amazing pdf.js library from mozilla to leverage a full PDF viewer written in pure javascript code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mozilla.github.io/pdf.js/"&gt;https://mozilla.github.io/pdf.js/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#22-wpf-c-pdf-viewer"&gt;
  &lt;/a&gt;
  2.2. WPF C# PDF Viewer
&lt;/h2&gt;

&lt;p&gt;For viewing PDF documents directly in WPF you can use the native &lt;strong&gt;WebBrowser&lt;/strong&gt; control.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#23-windows-forms-pdf-viewer"&gt;
  &lt;/a&gt;
  2.3. Windows Forms PDF Viewer
&lt;/h2&gt;

&lt;p&gt;For viewing PDF documents directly in windows forms (WinForms) applications the &lt;strong&gt;WebBrowser&lt;/strong&gt; control is also a good choice.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#24-viewing-a-pdf-in-a-the-default-system-pdf-viewer"&gt;
  &lt;/a&gt;
  2.4. Viewing a PDF in a the Default System PDF Viewer
&lt;/h2&gt;

&lt;p&gt;To open a PDF from any application in an external window, we may use a trick involving &lt;strong&gt;System.Diagnostics.Process.Start&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This will generally open the PDF in the default web browser which supports viewing PDF content, or Adobe Acrobat if installed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Render any HTML fragment or document to HTML
var Renderer = new IronPdf.ChromePdfRenderer();
var PDF = Renderer.RenderHtmlAsPdf("&amp;lt;h1&amp;gt;Hello IronPdf&amp;lt;/h1&amp;gt;");
var OutputPath = "ChromePdfRenderer.pdf";
PDF.SaveAs(OutputPath);
// This neat trick opens our PDF file so we can see the result in our default PDF viewer
System.Diagnostics.Process.Start(OutputPath);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;' Render any HTML fragment or document to HTML
Dim Renderer = New IronPdf.ChromePdfRenderer()
Dim PDF = Renderer.RenderHtmlAsPdf("&amp;lt;h1&amp;gt;Hello IronPdf&amp;lt;/h1&amp;gt;")
Dim OutputPath = "ChromePdfRenderer.pdf"
PDF.SaveAs(OutputPath)
' This neat trick opens our PDF file so we can see the result in our default PDF viewer
System.Diagnostics.Process.Start(OutputPath)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>MemoryStream to PDF C#</title>
      <author>IronSoftware</author>
      <pubDate>Wed, 19 Jan 2022 08:38:22 +0000</pubDate>
      <link>https://dev.to/ironsoftware/memorystream-to-pdf-c-1mgo</link>
      <guid>https://dev.to/ironsoftware/memorystream-to-pdf-c-1mgo</guid>
      <description>&lt;p&gt;We can load, create, and export MemoryStream to PDF files in C# .NET without even touching the file system. This is possible through the MemoryStream object present inside the System.IO .NET namespace. Follow the tutorial below to find out how to export HTML to PDF in your C# project.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#install-ironpdf"&gt;
  &lt;/a&gt;
  Install IronPDF
&lt;/h1&gt;

&lt;p&gt;In this tutorial, we'll be using IronPDF's C# PDF Library to save MemoryStream files to PDF in C#. You can &lt;a href="https://ironpdf.com/packages/IronPdf.Package.For.CSharp.Memorystream.PDF.zip"&gt;download it free&lt;/a&gt; or &lt;a href="https://www.nuget.org/packages/IronPdf"&gt;install to Visual Studio with NuGet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PM &amp;gt; Install-Package IronPdf&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;How to Tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-load-a-pdf-from-memory"&gt;
  &lt;/a&gt;
  2. Load a PDF from Memory
&lt;/h1&gt;

&lt;p&gt;A new instance of &lt;code&gt;IronPdf.PdfDocument&lt;/code&gt; can be initialized in any of these .NET in-memory-objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A MemoryStream&lt;/li&gt;
&lt;li&gt;A FileSteam&lt;/li&gt;
&lt;li&gt;Binary Data as a Byte array (byte[])&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example of reading a URL directly into a stream, then saving the PDF file to disk by using C#:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;​    private void ReadViaMemStream()
​    {
​      //Conversion of the URL into PDF
​      var Renderer = new IronPdf.ChromePdfRenderer();
​      Uri url = new Uri("https://ironpdf.com/docs/questions/pdf-memory-stream/");
​      MemoryStream rend = Renderer.RenderUrlAsPdf(url).Stream; //Read stream
​      HttpContext.Current.Response.AddHeader("Content-Type", "application/pdf"); //Download
​      HttpContext.Current.Response.AddHeader("Content-Disposition", String.Format("{0}; filename=Print.pdf; size={1}", "attachment", rend.Length.ToString()));
​      // Write PDF buffer to HTTP response
​      HttpContext.Current.Response.BinaryWrite(rend.ToArray());
​      // Stop page processing
​      HttpContext.Current.Response.End();
​    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;​ Private Sub ReadViaMemStream()
​ ​ var Renderer = New IronPdf.ChromePdfRenderer()
​ Uri url = New Uri("https://ironpdf.com/docs/questions/pdf-memory-stream/")
​ MemoryStream rend = Renderer.RenderUrlAsPdf(url).Stream 'Read stream
​ HttpContext.Current.Response.AddHeader("Content-Type", "application/pdf") 'Download
​ HttpContext.Current.Response.AddHeader("Content-Disposition", String.Format("{0}; filename=Print.pdf; size={1}", "attachment", rend.Length.ToString()))
​ ​ HttpContext.Current.Response.BinaryWrite(rend.ToArray())
​ ​ HttpContext.Current.Response.End()
'INSTANT VB TODO TASK: The following line uses invalid syntax:
'​ }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#3-save-a-pdf-to-memory"&gt;
  &lt;/a&gt;
  3. Save a PDF to Memory
&lt;/h1&gt;

&lt;p&gt;An IronPdf.PdfDocument can be saved directly to memory in one of 2 ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://ironpdf.com/object-reference/api/IronPdf.PdfDocument.html"&gt;IronPdf.PdfDocument.Stream&lt;/a&gt; exports the PDF as a System.IO.MemoryStream&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ironpdf.com/object-reference/api/IronPdf.PdfDocument.html"&gt;IronPdf.PdfDocument.BinaryData&lt;/a&gt; exports the PDF as a Byte Array (byte[])&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a quick example for MVC and ASP.NET:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#41-export-a-pdf-with-mvc"&gt;
  &lt;/a&gt;
  4.1 Export a PDF with MVC
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
return new FileStreamResult(stream, “application/pdf”)
{
   FileDownloadName = “downloadedfile.pdf”
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'INSTANT VB TODO TASK: The following line uses invalid syntax:
'Return New FileStreamResult(stream, "application/pdf”) { FileDownloadName = "downloadedfile.pdf” };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#41-export-a-pdf-with-aspnet"&gt;
  &lt;/a&gt;
  4.1 Export a PDF with ASP.NET
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;byte[] Binary = MyPDFDocument.BinaryData;
Response.Clear();
Response.ContentType = “application/octet-stream”;
Context.Response.OutputStream.Write(Binary, 0, Binary.Length);
Response.Flush();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Dim Binary() As Byte = MyPDFDocument.BinaryData
Response.Clear()
'INSTANT VB TODO TASK: The following line uses invalid syntax:
'Response.ContentType = "application/octet-stream”; Context.Response.OutputStream.Write(Binary, 0, Binary.Length); Response.Flush();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>The big STL Algorithms tutorial: "numeric" scans</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 19 Jan 2022 08:31:44 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-big-stl-algorithms-tutorial-numeric-scans-17b7</link>
      <guid>https://dev.to/sandordargo/the-big-stl-algorithms-tutorial-numeric-scans-17b7</guid>
      <description>&lt;p&gt;In this next part of &lt;a href="http://sandordargo.com/blog/2019/01/30/stl-algos-intro"&gt;the big STL algorithm tutorial&lt;/a&gt;, we are going to talk about the 4 algorithms in the &lt;code&gt;&amp;lt;numeric&amp;gt;&lt;/code&gt; header that we haven't discussed yet:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exclusive_scan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inclusive_scan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform_exclusive_scan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transform_inclusive_scan&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They all end with &lt;code&gt;_scan&lt;/code&gt;? But what do they scan? Let's have a closer look.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-exclusivescan-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;exclusive_scan&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;std::exclusive_scan&lt;/code&gt; resembles a lot to &lt;code&gt;std::partial_sum&lt;/code&gt; that we discussed &lt;a href=""&gt;in the previous episode&lt;/a&gt;. It takes an input range denoted by its beginning and its end, an output range defined by its beginning and an initial value for the summing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exclusive&lt;/em&gt; in the name means that the given *i*th element is excluded from the partial sum. To see this perfectly, we can have a look at the first element of the output which is the initial value instead of the first element of the input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;numeric&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;partial_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;exclusive_scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;plus&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"partial_sum results   :"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"exclusive_scan results:"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
partial_sum results   :1 3 6 10 15 21 28 36 45 55 
exclusive_scan results:0 1 3 6 10 15 21 28 36 45 
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's worth mentioning that before all the other parameters, &lt;code&gt;exclusive_scan&lt;/code&gt; can take an execution policy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-inclusivescan-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;inclusive_scan&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Exclusive&lt;/em&gt; meant that the given *i*th element is excluded from the partial sum, following this logic inclusive should mean that the element is included in the partial sum and that's right!&lt;/p&gt;

&lt;p&gt;You might suspect it well, &lt;code&gt;partial_sum&lt;/code&gt; and &lt;code&gt;inclusive_scan&lt;/code&gt; often end up with the same results. Let's have a look!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;numeric&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;inclusive_scan_results&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;inclusive_scan_results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;partial_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;exclusive_scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;plus&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;inclusive_scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inclusive_scan_results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;plus&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"partial_sum results   :"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;partial_sums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"exclusive_scan results:"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exclusion_scan_results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"inclusive_scan results:"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inclusive_scan_results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
partial_sum results   :1 3 6 10 15 21 28 36 45 55 
exclusive_scan results:0 1 3 6 10 15 21 28 36 45 
inclusive_scan results:1 3 6 10 15 21 28 36 45 55 
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I find how &lt;code&gt;exclusive_scan&lt;/code&gt; and &lt;code&gt;inclusive_scan&lt;/code&gt; are defined is a bit misleading. Better to say, they don't follow the same logic.&lt;/p&gt;

&lt;p&gt;They both have overloads when they take the input range defined by their beginning and end, plus the output range defined by their beginning. They both can take an execution policy in the &lt;strong&gt;0th&lt;/strong&gt; position. So far, so good.&lt;/p&gt;

&lt;p&gt;But while &lt;code&gt;exclusive_scan&lt;/code&gt; can optionally take an initial value and a binary operation in this order, &lt;code&gt;inclusive_scan&lt;/code&gt; takes these optional values in the other order, first the binary operation and then the initial value.&lt;/p&gt;

&lt;p&gt;Is this on purpose to make sure that you call the algorithm you really intended or by accident, that is unknown to me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-transformexclusivescan-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;transform_exclusive_scan&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;std::transform_exclusive_scan&lt;/code&gt; is easy to understand once &lt;code&gt;std::exclusive_scan&lt;/code&gt; is understood. It "sums" up all the elements of the input range and write the results to the output range. Exclusive means that the *i*th element is not included in the *i*th sum.&lt;/p&gt;

&lt;p&gt;The main difference compared to &lt;code&gt;std::exclusive_scan&lt;/code&gt; is that before the sum operation happens, all elements are transformed with a unary operation.&lt;/p&gt;

&lt;p&gt;Another difference is that &lt;code&gt;std::transform_exclusive_scan&lt;/code&gt; cannot default the initial value nor the binary operation of the summing. They must be defined.&lt;/p&gt;

&lt;p&gt;In the following example, we are going to sum up all the elements after they were multiplied by 10.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;numeric&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;transform_exclusive_scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;plus&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;});&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
0 10 30 60 100 150 210 280 360 450 
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#-raw-transforminclusivescan-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;transform_inclusive_scan&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Based on &lt;code&gt;inclusive_scan&lt;/code&gt; and &lt;code&gt;transform_exclusive_scan&lt;/code&gt;, I'm sure we can deduce what &lt;code&gt;std::transform_inclusive_scan&lt;/code&gt; does. It "sums" up all the elements of the input range after performing a transformation on them and write the results to the output range. Inclusive means that the *i*th element is also included in the *i*th sum.&lt;/p&gt;

&lt;p&gt;On the other hand, after having seen the differences between &lt;code&gt;inclusive_scan&lt;/code&gt; and &lt;code&gt;exclusive_scan&lt;/code&gt;, I cannot assume anything about &lt;code&gt;transform_inclusive_scan&lt;/code&gt;'s signature.&lt;/p&gt;

&lt;p&gt;After the optional execution policy and the three iterators denoting the input and the output ranges, this algorithm takes a binary operation for the summing and a unary operation for the transformation and at the very end, an optional initial value.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transform_inclusive_scan&lt;/code&gt; is also constexpr.&lt;/p&gt;

&lt;p&gt;Let's have a look at the same example as we used for &lt;code&gt;transform_exclusive_scan&lt;/code&gt;, let's sum up integers after multiplying them by 10.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include &amp;lt;numeric&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;vector&amp;gt;
&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reserve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;transform_inclusive_scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;back_inserter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;plus&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
10 30 60 100 150 210 280 360 450 550 
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can observe that the results are different as the *i*th elements are included in the results and that the order of parameters changed. For sure, you cannot accidentally mix up the two algorithms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This time, we learned about the different scan algorithms in the &lt;code&gt;&amp;lt;numeric&amp;gt;&lt;/code&gt; header. With them, we can sum up the items of a container and have the rolling results in many different ways.&lt;/p&gt;

&lt;p&gt;We finished discussing all the algorithms defined in the &lt;code&gt;&amp;lt;numeric&amp;gt;&lt;/code&gt; header, next time we will discuss the &lt;code&gt;&amp;lt;memory&amp;gt;&lt;/code&gt; header.&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>tutorial</category>
      <category>stl</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>C# Print PDF Documents</title>
      <author>IronSoftware</author>
      <pubDate>Wed, 19 Jan 2022 08:26:56 +0000</pubDate>
      <link>https://dev.to/ironsoftware/c-print-pdf-documents-241m</link>
      <guid>https://dev.to/ironsoftware/c-print-pdf-documents-241m</guid>
      <description>&lt;p&gt;You can easily print a PDF in .NET applications with the help of Visual Basic or C# code. This tutorial will walk you through how to use C# print PDF capabilities to print programmatically.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-print-pdf-files-in-c-by-following-these-steps"&gt;
  &lt;/a&gt;
  How to Print PDF Files in C# by Following these Steps
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Download the Print to PDF C# Library&lt;/li&gt;
&lt;li&gt;Choose a PDF file from your computer&lt;/li&gt;
&lt;li&gt;Select specific printer to print and set resolution&lt;/li&gt;
&lt;li&gt;Check your PDF output from your printer&lt;/li&gt;
&lt;li&gt;Track your printing processes using C#&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#1-install-ironpdf-for-c-print-to-pdf"&gt;
  &lt;/a&gt;
  1. Install IronPDF for C# Print to PDF
&lt;/h1&gt;

&lt;p&gt;Step 1 - Install the IronPDF C# PDF Library for all the programmatic printing functionalities you'll see in this tutorial. Download the &lt;a href="https://ironpdf.com/packages/IronPdf.Package.For.Print.CSharp.Programmatically.zip"&gt;DLL free for development&lt;/a&gt;, otherwise you can also &lt;a href="https://www.nuget.org/packages/IronPdf"&gt;install with NuGet&lt;/a&gt; and open the library in your Visual Studio project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PM &amp;gt; Install-Package IronPdf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-create-a-pdf-and-print"&gt;
  &lt;/a&gt;
  2. Create a PDF and Print
&lt;/h1&gt;

&lt;p&gt;You can send a PDF document directly to a printer silently or create a &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.printing.printdocument"&gt;System.Drawing.Printing.PrintDocument&lt;/a&gt; object, which can be worked with and sent to GUI print dialogs.&lt;/p&gt;

&lt;p&gt;The following code can be used for both options:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
Create and Print PDF
anchor-create-a-pdf-and-print
**/
using IronPdf;
// Create a new PDF and print it
IronPdf.ChromePdfRenderer Renderer = new IronPdf.ChromePdfRenderer();
PdfDocument Pdf = Renderer.RenderUrlAsPdf("https://www.nuget.org/packages/IronPdf");
// Send the PDF to the default printer to print
Pdf.Print();
//For advanced silent real-world printing options, use PdfDocument.GetPrintDocument
//Remember to add an assembly reference to System.Drawing.dll
 System.Drawing.Printing.PrintDocument PrintDocYouCanWorkWith = Pdf.GetPrintDocument();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
'''Create and Print PDF
'''anchor-create-a-pdf-and-print
'''*
Imports IronPdf
' Create a new PDF and print it
Private Renderer As New IronPdf.ChromePdfRenderer()
Private Pdf As PdfDocument = Renderer.RenderUrlAsPdf("https://www.nuget.org/packages/IronPdf")
' Send the PDF to the default printer to print
Pdf.Print()
'For advanced silent real-world printing options, use PdfDocument.GetPrintDocument
'Remember to add an assembly reference to System.Drawing.dll
 Dim PrintDocYouCanWorkWith As System.Drawing.Printing.PrintDocument = Pdf.GetPrintDocument()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the easiest method for using a &lt;a href="https://ironpdf.com/use-case/csharp-pdf-printer/"&gt;C# PDF printer&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#3-advanced-printing"&gt;
  &lt;/a&gt;
  3. Advanced Printing
&lt;/h1&gt;

&lt;p&gt;IronPDF is quite capable of dealing with advanced Printing features such as finding the printer name or setting it and setting the Printer resolution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-specify-printer-name"&gt;
  &lt;/a&gt;
  4. Specify Printer Name
&lt;/h1&gt;

&lt;p&gt;To specify the printer name, all you need to do is to get the current print document object (with the use of the &lt;a href="https://ironpdf.com/object-reference/api/IronPdf.PdfDocument.html"&gt;GetPrintDocument&lt;/a&gt; method of the PDF document), then use the &lt;code&gt;PrinterSettings.PrinterName&lt;/code&gt; property, as follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
Specify Printer Name
anchor-specify-printer-name
**/
using (var ChromePdfRenderer = new ChromePdfRenderer())
{
using (var pdfDocument =
ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText()))
{
using (var printDocument = pdfDocument.GetPrintDocument())
{
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF";
printDocument.Print();
}
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
'''Specify Printer Name
'''anchor-specify-printer-name
'''*
Using ChromePdfRenderer As New ChromePdfRenderer()
Using pdfDocument = ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText())
Using printDocument = pdfDocument.GetPrintDocument()
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF"
printDocument.Print()
End Using
End Using
End Using
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#5-set-printer-resolution"&gt;
  &lt;/a&gt;
  5. Set Printer Resolution
&lt;/h1&gt;

&lt;p&gt;Resolution refers to the number of pixels being printed, or displayed, depending on your output. You can set the resolution of your printing through IronPDF by making use of the &lt;a href="https://ironpdf.com/docs/questions/csharp-print-pdf/"&gt;DefaultPageSettings.PrinterResolution&lt;/a&gt; property of the PDF document. Here is a very quick demonstration:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
Set Printer Resolution
anchor-set-printer-resolution
**/
using (var ChromePdfRenderer = new ChromePdfRenderer())
{
using (var pdfDocument =
ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText()))
{
using (var printDocument = pdfDocument.GetPrintDocument())
{
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF";
printDocument.DefaultPageSettings.PrinterResolution = new PrinterResolution
{
**Kind = PrinterResolutionKind.Custom,**
**X = 1200,**
**Y = 1200**
**};**
printDocument.Print();
}
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
'''Set Printer Resolution
'''anchor-set-printer-resolution
'''*
Using ChromePdfRenderer As New ChromePdfRenderer()
Using pdfDocument = ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText())
Using printDocument = pdfDocument.GetPrintDocument()
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF"
printDocument.DefaultPageSettings.PrinterResolution = New PrinterResolution With {
    **Kind = PrinterResolutionKind.Custom,
    ** **X = 1200,
    ** **Y = 1200** **
}
** printDocument.Print()
End Using
End Using
End Using
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, I have set the resolution to a custom level: 1200 vertical and 1200 horizontal.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-printtofile-method"&gt;
  &lt;/a&gt;
  6. PrintToFile Method
&lt;/h1&gt;

&lt;p&gt;The PDFDocument.PrintToFile method allows you to print the PDF to a file, you simply supply the output filepath and specify whether or not you’d like to see a preview, for example:&lt;br&gt;
&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
PrinttoFile
anchor-printtofile-method
**/
printDocument.PrintToFile(“PathToFile”, false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
'''PrinttoFile
'''anchor-printtofile-method
'''*
'INSTANT VB TODO TASK: The following line uses invalid syntax:
'printDocument.PrintToFile("PathToFile”, false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#7-tracing-printing-processes-using-c"&gt;
  &lt;/a&gt;
  7. Tracing Printing Processes using C
&lt;/h1&gt;

&lt;p&gt;The beauty of C# in conjunction with IronPDF is that when it comes to keeping track of printed pages, or anything printing related, it is actually quite simple. In the next example I will demonstrate how to change the printer’s name, resolution as well as how to get a count of pages that was printed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C#:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/**
Tracing Printing Processes
anchor-tracing-printing-processes-using-c-num
**/
using (var ChromePdfRenderer = new ChromePdfRenderer())
{
using (var pdfDocument =
ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText()))
{
using (var printDocument = pdfDocument.GetPrintDocument())
{
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF";
printDocument.DefaultPageSettings.PrinterResolution = new PrinterResolution
{
Kind = PrinterResolutionKind.Custom,
X = 1200,
Y = 1200
};
**var printedPages = 0;**
**printDocument.PrintPage += (sender, args) =&amp;gt; printedPages++;**
**printDocument.Print();**
}
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;VB:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
'''Tracing Printing Processes
'''anchor-tracing-printing-processes-using-c-num
'''*
Using ChromePdfRenderer As New ChromePdfRenderer()
Using pdfDocument = ChromePdfRenderer.RenderHtmlAsPdf(TestSources.HtmlTemplateBasicText())
Using printDocument = pdfDocument.GetPrintDocument()
printDocument.PrinterSettings.PrinterName = "Microsoft Print to PDF"
printDocument.DefaultPageSettings.PrinterResolution = New PrinterResolution With {
    .Kind = PrinterResolutionKind.Custom,
    .X = 1200,
    .Y = 1200
}
**var printedPages = 0
'INSTANT VB WARNING: An assignment within expression was extracted from the following statement:
'ORIGINAL LINE: ** **printDocument.PrintPage += (sender, args) =&amp;gt; printedPages++;
AddHandler ** **printDocument.PrintPage, Sub(sender, args) printedPages
printedPages += 1
** **printDocument.Print()
**
End Using
End Using
End Using
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>A11y tips: use landmarks</title>
      <author>Carlos Espada</author>
      <pubDate>Wed, 19 Jan 2022 08:23:41 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-use-landmarks-1npj</link>
      <guid>https://dev.to/carlosespada/a11y-tips-use-landmarks-1npj</guid>
      <description>&lt;p&gt;Even if the usage of landmarks &lt;a href="https://webaim.org/projects/screenreadersurvey9/#landmarks"&gt;is in continuous decline&lt;/a&gt; among users of assistive technologies, &lt;strong&gt;they are still a very used resource for navigation&lt;/strong&gt;, and if they are not used more often it may be due to the improper usage that we, developers, tend to make of them.&lt;/p&gt;

&lt;p&gt;Landmarks are used to &lt;strong&gt;define specific regions&lt;/strong&gt; within the structure of our HTML. Remember that &lt;strong&gt;all content should be included within a landmark&lt;/strong&gt;, except, if you like, &lt;a href="https://dev.to/carlosespada/a11y-tips-add-a-skip-link-222m#:~:text=the%20skip%20link%20can%20be%20located%20outside%20of%20any%20landmark"&gt;the skip link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Landmarks have an implicit role, so in theory &lt;a href="https://www.w3.org/TR/html-aria/#h-note"&gt;it is not necessary&lt;/a&gt; to assign it unless they are repeated in the document. On this subject &lt;a href="https://www.tempertemper.net/blog/implicit-aria-landmark-roles"&gt;there are contrary opinions&lt;/a&gt; that advocate declaring it explicitly to ensure compatibility with any browser. These are some of the most used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="(https://dev.to/carlosespada/html-tags-header-2f84)"&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;role=”banner”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/carlosespada/html-tags-main-422k"&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;role=”main”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/carlosespada/html-tags-aside-48hp"&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;role=”complementary”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/carlosespada/html-tags-footer-3of5"&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;role=”contentinfo”&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/carlosespada/html-tags-nav-p4d"&gt;&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;role=”contentinfo”&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ltheadergt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;If, in addition to the main header, it is used more than once in the document to mark the header of other areas (eg: &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;), &lt;strong&gt;it must be indicated&lt;/strong&gt; that the main header has a &lt;code&gt;role="banner"&lt;/code&gt; to set it apart from the others.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;header role="banner"&amp;gt;&lt;/code&gt; &lt;strong&gt;can only appear once&lt;/strong&gt; in each document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ltmaingt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;By identifying the main content of the page &lt;strong&gt;only one can be used in each document&lt;/strong&gt;. It must exist in a mandatory way, there may be pages that are missing any other landmark but all of them &lt;strong&gt;must always have a single&lt;/strong&gt; &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ltasidegt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;To know if a content has to go in an &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; we can ask ourselves the following two questions: &lt;em&gt;Is this content complementary to the main one being at the same hierarchy level? Can it be separated from it and still make sense?&lt;/em&gt; If the answer is yes in both cases, then it is an &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ltfootergt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;If, in addition to the main footer, it is used more than once in the document to mark the footer of other areas (eg: &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;), &lt;strong&gt;it must be indicated&lt;/strong&gt; that the main footer has a &lt;code&gt;role="contentinfo"&lt;/code&gt; to set it apart from the others.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;footer role="contentinfo"&amp;gt;&lt;/code&gt; &lt;strong&gt;can only appear once&lt;/strong&gt; in each document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-ltnavgt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;It can appear several times in the same document, since it is used to mark important blocks of navigation (eg: main menu, footer sitemap...), but it should not be used excessively to mark each small group of links.&lt;/p&gt;

&lt;p&gt;If it appears more than once, add an &lt;code&gt;aria-label&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; that identifies what type of navigation it represents, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;nav aria-label="Main"&amp;gt;
&amp;lt;nav aria-label="Sitemap"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Avoid the role of the landmark as part of the value of &lt;code&gt;aria-label&lt;/code&gt;. For example, a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; will be announced with the word "&lt;em&gt;Navigation&lt;/em&gt;" at the end, so if we use an &lt;code&gt;aria-label="Main navigation"&lt;/code&gt; it will be announced as "&lt;em&gt;Main navigation Navigation&lt;/em&gt;", which is redundant. If we just use &lt;code&gt;aria-label="Main"&lt;/code&gt; the user will just hear "&lt;em&gt;Main Navigation&lt;/em&gt;", which is nicer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-rolesearch-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;role="search"&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Although the default role of an HTML element should not be changed, this is a particular case that arises from the agreement between specs writers and screen reader developers, so that users of assistive technologies can jump directly to the site's search form if we use this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form role="search"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are just some of the landmarks at our disposal, but to get to know them all in depth there is a lot of interesting information &lt;a href="https://www.w3.org/TR/wai-aria-practices/examples/landmarks/index.html"&gt;in the corresponding section&lt;/a&gt; of the W3C page.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
    <item>
      <title>Why no universal login?</title>
      <author>Arnaud Dagnelies</author>
      <pubDate>Wed, 19 Jan 2022 08:07:15 +0000</pubDate>
      <link>https://dev.to/dagnelies/why-no-universal-login-31id</link>
      <guid>https://dev.to/dagnelies/why-no-universal-login-31id</guid>
      <description>&lt;p&gt;Isn't it quite silly that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;every user has to register/login everywhere for any kind of website they use&lt;/li&gt;
&lt;li&gt;every developer has to implement the process of registering/login on their website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don't know about you, but I'm annoyed in both cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oauth2-got-it-backwards"&gt;
  &lt;/a&gt;
  OAuth2 got it backwards
&lt;/h2&gt;

&lt;p&gt;Now, don't get me wrong, it's great that you can login with Google, GitHub or whatever... It's just:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;for users, it's annoying that you have to login/logout everywhere separately&lt;/li&gt;
&lt;li&gt;for developers, it's surprisingly complex to implement the OAuth flow(s)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The root of the issue is that OAuth2 is actually an "authorization" protocol. It was not meant to identify yourself. It's "dear provider, please allow me to use some parts of your API". Then, it's used solely to access the user's profile, in particular the email. This is provider specific, requires lots of know-how, app registrations, exchanging secrets, a backend to be secure... &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if"&gt;
  &lt;/a&gt;
  What if...
&lt;/h2&gt;

&lt;p&gt;When people are on a website, the login button redirects to "universal-login.xyz" (dummy) where the person can login. The main difference is that this information would be shared with &lt;em&gt;any&lt;/em&gt; other website. No need for special auth flows, secrets or whatever. A simple HTTP request to &lt;code&gt;/profile&lt;/code&gt; would give the profile, accessible to any website you visit. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-isnt-it-quite-what-xxx-does"&gt;
  &lt;/a&gt;
  But isn't it quite what XXX does?
&lt;/h2&gt;

&lt;p&gt;You mean like Auth0, Okta, etc.? Well, not quite. These are more like OAuth2 providers "merging" many other providers. You still need the secrets and complex flows. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;for users, you would just have to login once at "universal-login.xyz", and all websites using it would know it&lt;/li&gt;
&lt;li&gt;for developers, it would be so much easier! There is no flow to implement. Just a call to &lt;code&gt;/profile&lt;/code&gt; or a redirect to &lt;code&gt;/login&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#drawbacks"&gt;
  &lt;/a&gt;
  Drawbacks
&lt;/h2&gt;

&lt;p&gt;It's not a perfect solution either. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the flow has one more hop: &lt;code&gt;website.com &amp;lt;-&amp;gt; universal-login.xyz &amp;lt;-&amp;gt; gmail/github/...&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;any website you visit knows you are logged in, it's both a strength and a weakness&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#technically"&gt;
  &lt;/a&gt;
  Technically
&lt;/h2&gt;

&lt;p&gt;In order to make this possible, many things have to be properly configured. Login flows, CORS, SameSite, redirects... It is certainly not trivial, but I don't see any road block. Do you? &lt;/p&gt;

&lt;p&gt;Lastly, identity has a lot to do with services. After all, you often need to know in the backend who the user is and need to thrust that information. Well, a call to &lt;code&gt;/jwt&lt;/code&gt; could provide just that! A Json Web Token, a proof of your identity, only valid for your website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-concerns"&gt;
  &lt;/a&gt;
  Security concerns
&lt;/h2&gt;

&lt;p&gt;Of course, security is paramount to such a sensitive topic. After all, it's about your online identity. &lt;/p&gt;

&lt;p&gt;So, what bad things could happen? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An evil website knows who I am!

&lt;ul&gt;
&lt;li&gt;explicit consent should be required&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;My website or server got hacked! 

&lt;ul&gt;
&lt;li&gt;luckily, the JWT can be constrained to the domain name, so that a stolen JWT cannot be used elsewhere.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;It is used to track me!

&lt;ul&gt;
&lt;li&gt;they can already do that, independently from how authentication is performed. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you see any vulnerability or undesirable behavior that I haven't thought of, please tell me! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-but-most-importantly-what-do-you-think-about-it"&gt;
  &lt;/a&gt;
  ... But most importantly, what do you think about it?
&lt;/h2&gt;

&lt;p&gt;Would you use this "universal login" if it existed? As a user? As a developer?&lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

</description>
      <category>oauth2</category>
      <category>login</category>
      <category>authentication</category>
      <category>jwt</category>
    </item>
    <item>
      <title>A guide into Data Science</title>
      <author>Lians </author>
      <pubDate>Wed, 19 Jan 2022 08:05:29 +0000</pubDate>
      <link>https://dev.to/lians/a-guide-into-data-science-2mm9</link>
      <guid>https://dev.to/lians/a-guide-into-data-science-2mm9</guid>
      <description>&lt;p&gt;Data Science appears to be one of history's most misunderstood terms. The term data scientist, like stoicism, minimalism, and rationality, has been stripped of its original meaning. So, let's take a look at what becoming a data scientist entails. The word "data science" refers to the collecting, analysis, manipulation, and interpretation of data. Three different vocations can be derived from its definition. Data science, data engineering, and data analysis. Let's talk about the three jobs and how we got them from the definition of data science and get a chance to go into why data science is a profession from the name data science. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.      Data Engineer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To be able to comprehend and handle data, one must first acquire it; this is precisely what a data engineer does. A data engineer's (DE) ultimate purpose is to make information accessible to analysts and scientists. That is to say, data engineering is the first profession that comes to mind when someone hears the term data science. A DE's other duty would be to create mechanisms that would make it easier to obtain pertinent data. What qualifications are required to begin a career in data engineering? &lt;/p&gt;

&lt;p&gt;Coding - Expertise in languages such as SQL, Python, NoSQL, and R, which are the most commonly used in this industry, is required.&lt;/p&gt;

&lt;p&gt;·         Database administration entails becoming familiar with both relational and non-relational databases.&lt;/p&gt;

&lt;p&gt;·         Machine Learning - this is a burgeoning subject that focuses mostly on data science and may thus be used to create systems that help people comprehend the topic. That is, using machine learning to learn and construct systems to assist you in collecting data sets.&lt;/p&gt;

&lt;p&gt;·         ETL systems - Extract, Transform, and Load solutions allow you to transport data sets from one location to another. Stitch, Alooma, and other similar technologies are examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.      Data Analyst&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A data analyst attempts to analyze and alter the acquired data after getting it from an engineer. Cleaning data sets to improve interpretation could be part of the job. It is necessary to establish patterns from prior company data that may be used to assist firms in making better profit decisions. Large data sets are frequently converted into useful formats such as reports or presentations by data analysts. That involves learning skills like: &lt;/p&gt;

&lt;p&gt;• Data visualization with Tableau, Numpy, Pandas, and Excel&lt;/p&gt;

&lt;p&gt;• Coding - You should know SQL, Python, NoSQL, and R, which are the most common languages in this profession.&lt;/p&gt;

&lt;p&gt;• Statistical Programming&lt;/p&gt;

&lt;p&gt;• Machine Learning&lt;/p&gt;

&lt;p&gt;• Presentation and Communication Skills                                            &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Data Scientist&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A data scientist is supposed to estimate how the result will be in the future based on the thesis developed during the investigation. As a result, a data scientist's primary purpose is to forecast future outcomes based on the data available. They are also expected to develop data models and algorithms to assist the company in resolving complex issues. &lt;/p&gt;

&lt;p&gt;Data scientists must have a combination of skills such as;&lt;/p&gt;

&lt;p&gt;· Knowledge with algorithms and  a combination of analytic capabilities&lt;/p&gt;

&lt;p&gt;·          Machine learning,&lt;/p&gt;

&lt;p&gt;·         Data mining&lt;/p&gt;

&lt;p&gt;·         Statistical skills.&lt;/p&gt;

&lt;p&gt;·         Coding with languages such as;  R, SAS, Python, MatLab, SQL, Hive, Pig, and Spark are examples of coding languages.&lt;/p&gt;

&lt;p&gt;That isn't to say that there are only three types of data science career paths; rather, the article focuses on the most primary ones. Business analysts, data architects, machine learning engineers, database administrators, and so on are among the others. I hope this post has helped you understand what data science is all about.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why syncing .env files doesn’t scale for secrets management</title>
      <author>Ryan Blunden</author>
      <pubDate>Wed, 19 Jan 2022 07:59:09 +0000</pubDate>
      <link>https://dev.to/doppler/why-syncing-env-files-doesnt-scale-for-secrets-management-5325</link>
      <guid>https://dev.to/doppler/why-syncing-env-files-doesnt-scale-for-secrets-management-5325</guid>
      <description>&lt;h2&gt;
  &lt;a href="#learn-why-using-a-universal-secrets-platform-is-the-key-to-managing-environment-variables-at-scale-and-eliminates-the-need-for-syncing-env-files"&gt;
  &lt;/a&gt;
  Learn why using a Universal Secrets Platform is the key to managing environment variables at scale and eliminates the need for syncing .env files.
&lt;/h2&gt;

&lt;p&gt;The benefits of using &lt;a href="https://12factor.net/config"&gt;environment variables to keep secrets out of source code&lt;/a&gt; are well established. But are .env files the best method for managing them?&lt;/p&gt;

&lt;p&gt;Secrets management has &lt;a href="https://blog.doppler.com/why-secrets-management-is-not-a-key-value-store"&gt;evolved beyond the limited Key-Value storage&lt;/a&gt; that .env files provide. However, most developers are either unaware of .env file’s shortcomings or have simply become numb to the pain from the many years of usage and lack of innovation.&lt;/p&gt;

&lt;p&gt;This post aims to highlight the risks of continuing to use .env files, why the major cloud vendors and hosting platforms offer a built-in secrets or environment variables store which can be used instead, and how secrets managers such as &lt;a href="https://thenewstack.io/secrets-management-doppler-or-hashicorp-vault/"&gt;Doppler and HashiCorp Vault&lt;/a&gt; are providing the much-needed management and &lt;a href="https://blog.doppler.com/the-missing-third"&gt;secrets automation layer&lt;/a&gt; on top of encrypted and access controlled secret storage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-brief-history-of-env-files"&gt;
  &lt;/a&gt;
  A brief history of .env files
&lt;/h2&gt;

&lt;p&gt;The usage of environment variables and .env files for application config and secrets largely began around 2013. It was a long overdue and important step towards more secure secrets management practices.&lt;/p&gt;

&lt;p&gt;Libraries such as &lt;a href="https://pypi.org/project/python-dotenv/"&gt;Python’s dotenv&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/dotenv"&gt;Node’s dotenv&lt;/a&gt; made it easy for developers to use .env files and environment variables for application configuration, giving developers a simple path to removing secrets from their source code for good.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oe3xX7G6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642574498495/FQ9CKLwrYa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oe3xX7G6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642574498495/FQ9CKLwrYa.png" alt="Node.js dotenv first commit - July 2013" width="880" height="286"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOLLtaAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642574768773/Z35-1cZtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOLLtaAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642574768773/Z35-1cZtx.png" alt="Python dotenv first commit - June 2013" width="880" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To think that .env file usage has remained practically unchanged for over eight years is quite remarkable. It should come as no surprise then, that it’s time to say &lt;a href="https://blog.doppler.com/the-triumph-and-tragedy-of-env-files-zgkyjEpw1pGUVw"&gt;goodbye to .env files&lt;/a&gt; in exchange for alternatives that better meet the needs of modern application development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problems-with-env-files"&gt;
  &lt;/a&gt;
  The problems with .env files
&lt;/h2&gt;

&lt;p&gt;Using .env files allowed us to move secrets out of source code. Unfortunately, they introduced a new set of challenges:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Scaling issues related to syncing .env file changes across environments and different cloud providers, increasing the risk of infrastructure misconfiguration and potential downtime.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy for .env files to contain syntax errors, requiring additional tools such as &lt;a href="https://github.com/dotenv-linter/dotenv-linter-KWTN2DR"&gt;dotenv-linter&lt;/a&gt; to be added to pro-commit hooks or GitHub checks.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sharing of unencrypted secrets in .env files over Slack when secrets change or new developers join a team risks breaking the principle of least privilege by exposing secrets to potentially unauthorized users.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.doppler.com/blog/goodbye-env-files"&gt;Inconsistent format of environment variables&lt;/a&gt; can cause issues, e.g. Docker and GitHub require unquoted values while other packages do not.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Patchy and inconsistent support for multi-line secrets such as TLS certificates, SSH keys, JSON, and YAML.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secrets used in multiple applications must be duplicated in every .env file (instead of &lt;a href="https://docs.doppler.com/docs/enclave-secrets#referencing-secrets"&gt;dynamic secrets referencing&lt;/a&gt;), making updating and rolling credentials tedious and repetitive.&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If persisted to disk in plain text, they may be readable by unauthorized users with access to the system and threat actors if file restrictive file permissions aren't used.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy to accidentally expose to &lt;a href="https://www.zdnet.com/article/botnets-have-been-silently-mass-scanning-the-internet-for-unsecured-env-files/"&gt;malicious bots&lt;/a&gt; if placed in the &lt;a href="https://dev.to/ewnx01/env-file-in-public-folder-is-security-risk-59ej-sS_SKFDo7"&gt;webroot of a web server&lt;/a&gt; or &lt;a href="https://trufflesecurity.com/blog/an-s3-bucket-worm-in-the-making-thousands-of-secrets-found-in-open-s3-buckets"&gt;S3 buckets&lt;/a&gt;.&lt;br&gt;&lt;br&gt;  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local development environments break whenever team members forget to share updates that need to be applied to their .env files, e.g. when a feature branch is merged that requires a new secret.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's clear .env files have serious implications for application security Next, we’ll take a closer look at why the productivity impacts of using .env files may be worse than you think.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-hidden-productivity-costs-from-using-env-files"&gt;
  &lt;/a&gt;
  The hidden productivity costs from using .env files
&lt;/h2&gt;

&lt;p&gt;Small repetitive problems, such as manually updating .env files across several servers as part of the deployment process, while perhaps initially frustrating and annoying, can easily become just an expected part of the application deployment lifecycle.&lt;/p&gt;

&lt;p&gt;While some developers would argue that the papercuts associated with using .env files are minor, one thing we can all agree on is that interruptions can have serious productivity implications for writing code.&lt;/p&gt;

&lt;p&gt;According to a recent study, &lt;a href="https://www.fastcompany.com/944128/worker-interrupted-cost-task-switching"&gt;the average lost time per serious interruption is 23 minutes&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"You need to get into the mindset for development and then slowly trace back to where you left off. This can easily take more than 30 minutes." - Gloria Mark, Professor of Informatics California, Irvine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The cost of misconfiguration errors is not just the time spent fixing an .env file related issue. It's the impact of unexpected context switching and the challenge of getting back into a state of deep work, also known as “flow”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-developers-have-ignored-traditional-secrets-managers"&gt;
  &lt;/a&gt;
  Why developers have ignored traditional secrets managers
&lt;/h2&gt;

&lt;p&gt;Traditional secrets managers such as &lt;a href="https://azure.microsoft.com/en-au/services/key-vault"&gt;Azure Key Vault&lt;/a&gt; or &lt;a href="https://aws.amazon.com/secrets-manager/"&gt;AWS Secrets Manager&lt;/a&gt; provide encrypted storage and fine-grained access controls, specially designed for storing secrets such as API keys, database credentials, SSH keys, and TLS certificates.&lt;/p&gt;

&lt;p&gt;They are incredibly secure, robust, and enterprise-ready. But unfortunately, secret managers such as &lt;a href="https://blog.doppler.com/doppler-vs-hashicorp-vault"&gt;HashiCorp Vault are built for security teams, not developers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a result, they can be complex to implement correctly and often require secret-fetching implementation details to leak into application code—the exact opposite of the benefits afforded by using language-agnostic environment variables.&lt;/p&gt;

&lt;p&gt;Even security-minded developers motivated to use a traditional secrets managers have typically given up for one primary reason: Using .env files was much easier.&lt;/p&gt;

&lt;p&gt;Instead of environment variables, a vendor-specific SDK, platform integration, or custom application code for fetching secrets from a vendor’s API is often required.&lt;/p&gt;

&lt;p&gt;For example, take this &lt;a href="https://docs.aws.amazon.com/code-samples/latest/catalog/javascript-secrets-secrets_getsecretvalue.js.html"&gt;AWS Secrets Manager SDK for Node.js&lt;/a&gt; sample code for fetching secrets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Load the AWS SDK&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;AWS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&amp;lt;{{MyRegionName}}&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;secretName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;&amp;lt;{{MySecretName}}&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;decodedBinarySecret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Create a Secrets Manager client&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AWS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SecretsManager&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;region&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// In this sample we only handle the specific exceptions for the 'GetSecretValue' API.&lt;/span&gt;
&lt;span class="c1"&gt;// See https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html&lt;/span&gt;
&lt;span class="c1"&gt;// We rethrow the exception by default.&lt;/span&gt;

&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSecretValue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;SecretId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;secretName&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DecryptionFailureException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// Secrets Manager can't decrypt the protected secret text using the provided KMS key.&lt;/span&gt;
            &lt;span class="c1"&gt;// Deal with the exception here, and/or rethrow at your discretion.&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;InternalServiceErrorException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// An error occurred on the server side.&lt;/span&gt;
            &lt;span class="c1"&gt;// Deal with the exception here, and/or rethrow at your discretion.&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;InvalidParameterException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// You provided an invalid value for a parameter.&lt;/span&gt;
            &lt;span class="c1"&gt;// Deal with the exception here, and/or rethrow at your discretion.&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;InvalidRequestException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// You provided a parameter value that is not valid for the current state of the resource.&lt;/span&gt;
            &lt;span class="c1"&gt;// Deal with the exception here, and/or rethrow at your discretion.&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ResourceNotFoundException&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;// We can't find the resource that you asked for.&lt;/span&gt;
            &lt;span class="c1"&gt;// Deal with the exception here, and/or rethrow at your discretion.&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Decrypts secret using the associated KMS CMK.&lt;/span&gt;
        &lt;span class="c1"&gt;// Depending on whether the secret is a string or binary, one of these fields will be populated.&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SecretString&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SecretString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SecretBinary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;base64&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;decodedBinarySecret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;buff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ascii&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Your code goes here. &lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's this level of complexity compared with using environment variables that turns most developers off from the start.&lt;/p&gt;

&lt;p&gt;As product teams are incentivized to ship software and new features as fast as possible, migrating to a traditional secrets manager usually only occurs due to regulatory requirements or security mandates.&lt;/p&gt;

&lt;p&gt;But is it possible to still use environment variables for modern applications without .env files?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modern-platforms-with-native-environment-variable-storage"&gt;
  &lt;/a&gt;
  Modern platforms with native environment variable storage
&lt;/h2&gt;

&lt;p&gt;Modern hosting platforms such as &lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt;, &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;Vercel&lt;/a&gt;, &lt;a href="https://docs.digitalocean.com/products/app-platform/how-to/use-environment-variables/"&gt;DigitalOcean&lt;/a&gt;, &lt;a href="https://developers.cloudflare.com/workers/platform/environment-variables"&gt;Cloudflare Workers&lt;/a&gt;, &lt;a href="https://fly.io/docs/reference/secrets/"&gt;Fly.io&lt;/a&gt;, and &lt;a href="https://docs.railway.app/develop/variables"&gt;Railway&lt;/a&gt; all come with secure environment variable storage built-in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elIP_6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575262453/jLCF9p-T4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elIP_6Dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575262453/jLCF9p-T4.png" alt="Cloudflare Workers’ environment variable management UI" width="880" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This not only shows how easy it is to migrate away from .env files but confirms that environment variables are still the best language and platform-agnostic method for injecting secrets into an application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-you-need-env-files-for-local-development"&gt;
  &lt;/a&gt;
  Do you need .env files for local development?
&lt;/h2&gt;

&lt;p&gt;It may seem we’re still reliant on .env files for local development if hosting platforms only manage environment variables for applications running on their infrastructure. But this is beginning to change.&lt;/p&gt;

&lt;p&gt;Every developer understands that inconsistencies between local and production environments are a recipe for unexpected issues. That’s why a USP provides first-class support for managing secrets in every environment. A trend modern hosting providers are also beginning to follow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxlgUv9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575297042/LYFYptizC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxlgUv9C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575297042/LYFYptizC.png" alt="Vercel development environment variable UI" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vercel.com/docs/concepts/projects/environment-variables#development-environment-variables-CetGQl"&gt;Vercel&lt;/a&gt;, for example, offers environment variable storage specifically for local development that is fetched and injected into the Node.js application via the Vercel CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vercel dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what about developers using hosting providers without such functionality? This is where a USP such as &lt;a href="https://doppler.com/"&gt;Doppler&lt;/a&gt; fills in the gaps, eliminating the need for manually managed .env files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoLnreu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642577688122/UDNB7cg5S.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_AoLnreu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642577688122/UDNB7cg5S.png" alt="Doppler project environments" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once developers have &lt;a href="https://docs.doppler.com/docs/create-project"&gt;created a project&lt;/a&gt; and &lt;a href="https://docs.doppler.com/docs/install-cli"&gt;installed the Doppler CLI&lt;/a&gt;, secrets can be injected as environment variables into any application process:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;doppler run &lt;span class="nt"&gt;--&lt;/span&gt; npm run firebase-local-functions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Developer tooling is rapidly improving to provide a better integrated local development experience that will eliminate the differences between local and production environments and the need for manually managed .env files on developer machines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-universal-approach-to-taming-secret-sprawl"&gt;
  &lt;/a&gt;
  A Universal approach to taming secret sprawl
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMBiXbPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575414749/AmayL8-jj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMBiXbPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575414749/AmayL8-jj.jpeg" alt="Doppler Universal Secrets Platform diagram" width="880" height="606"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.doppler.com/secrets-sprawl-is-hurting-your-productivity-heres-how-to-fix-it"&gt;Taming&lt;/a&gt; &lt;a href="https://blog.doppler.com/secrets-sprawl-is-hurting-your-productivity-heres-how-to-fix-it"&gt;secret sprawl&lt;/a&gt; is a growing challenge for every development team and one that is only made worse as the number of .env files increase. We need an entirely new approach to secrets management that goes beyond incremental improvements—A Universal Secrets Platform.&lt;/p&gt;

&lt;p&gt;Taking a “Universal” approach means being able to manage and sync secrets to every application on any platform by avoiding the problems associated with &lt;a href="https://blog.doppler.com/siloed-secrets-and-security-theatre-why-we-need-universal-secrets-management"&gt;siloed secrets&lt;/a&gt; and antiquated solutions that don’t scale such as trying to sync dotenv files across platforms.&lt;/p&gt;

&lt;p&gt;This can be achieved through a hub-and-spoke model where the USP acts as a single source of truth for secret storage and management with &lt;a href="https://www.doppler.com/integrations"&gt;integrations&lt;/a&gt; automatically syncing secrets when they change to any external platform, including other secrets managers.&lt;/p&gt;

&lt;p&gt;We hope our vision of a &lt;a href="https://blog.doppler.com/siloed-secrets-and-security-theatre-why-we-need-universal-secrets-management#an-automation-driven-approach-universal-secrets-management"&gt;Universal Secrets Platform&lt;/a&gt; serves as inspiration for other secrets managers to create a more developer-friendly experience in order to make migrating away from .env files a more attractive option to developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We don’t need to sync .env files. We need the developer-specific workflows that a Universal Secrets Platform such as &lt;a href="https://www.doppler.com"&gt;Doppler&lt;/a&gt; can provide.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gsQYT_ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575672271/LMHpHGZS3E.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gsQYT_ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642575672271/LMHpHGZS3E.jpeg" alt="" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The simplicity of .env files, while attractive at first, is also its greatest weakness. The demands of modern application development and the explosion of microservices across multiple clouds and platforms provide scalability challenges .env files simply can’t address.&lt;/p&gt;

&lt;p&gt;The use of .env files was certainly an improvement over hard-coded secrets. But better options now exist for secrets management, and not only will your infrastructure be more secure without .env files, you’ll be more productive without them too.&lt;/p&gt;

</description>
      <category>security</category>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
    </item>
  </channel>
</rss>
