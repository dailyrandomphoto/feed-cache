<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Mine VeChain VET on Your Laptop in 2021</title>
      <author>Course Probe</author>
      <pubDate>Tue, 30 Nov 2021 11:55:09 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-vechain-vet-on-your-laptop-in-2021-p0m</link>
      <guid>https://dev.to/courseprobe/how-to-mine-vechain-vet-on-your-laptop-in-2021-p0m</guid>
      <description>&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and VET in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Vechain VET with any laptop in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining VET with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;VeChain is a cryptocurrency and smart contracts platform focused on supply chain management. It allows manufacturers to add sensors, such as RFID tags, to their products that can then record data onto the VeChain blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;em&gt;If you are having any difficulties, please join me on discord so I can help you further&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/KNwsgX7uN5"&gt;https://discord.gg/KNwsgX7uN5&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting a wallent with support for VET, good candidates might included Trust wallet, Atomic Wallet or Exodus.&lt;/p&gt;

&lt;p&gt;From the wallet get your Public Receive address, this is the address the pool needs in order to transfer your coins.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine VET.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen" width="407" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your VeChain VET Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgAHl0eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfdnt01tpz375jwn2ng2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgAHl0eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfdnt01tpz375jwn2ng2.png" alt="Unmineable Mining VET" width="405" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen" width="409" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings" width="409" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;When using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.cmd" or "start.cmd" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u VET:0x57971cB501a6FECdae05499e801697804361469F.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the VET: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You also need to edit the config.json file and update the Pools object to look similar to this using your details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"pools": [
        {
"url": "rx.unmineable.com:3333",
            "user": "VET:0x57971cB501a6FECdae05499e801697804361469F.wrkID#e4xd-wmzl"
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the pool_mine_example file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site" width="880" height="687"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example VET and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, veChain VET.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. &lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;em&gt;If you are having any difficulties, please join me on discord so I can help you further&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/KNwsgX7uN5"&gt;https://discord.gg/KNwsgX7uN5&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NPzyNEHz0lU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU" width="320" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>crypto</category>
      <category>vechain</category>
    </item>
    <item>
      <title>Parallex Effect in CSS!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Tue, 30 Nov 2021 11:42:51 +0000</pubDate>
      <link>https://dev.to/ziratsu/parallex-effect-in-css-4235</link>
      <guid>https://dev.to/ziratsu/parallex-effect-in-css-4235</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Learn how to do a &lt;em&gt;parallex effect in CSS&lt;/em&gt; in less than a minute! &lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TqF45C7mpZg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML structure.
&lt;/h2&gt;

&lt;p&gt;Create three sections that contain a title each:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"s1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;SECTION 1&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"s2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;SECTION 2&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"s3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;SECTION 3&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-each-section"&gt;
  &lt;/a&gt;
  2. Style each section.
&lt;/h2&gt;

&lt;p&gt;Make sure each section takes up the full height of the viewport and that the background covers the whole space and is centered:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-style-the-titles"&gt;
  &lt;/a&gt;
  3. Style the titles.
&lt;/h2&gt;

&lt;p&gt;Style the titles however you want, here's how I did it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#F1F1F1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;55px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-add-the-background-images"&gt;
  &lt;/a&gt;
  4. Add the background images.
&lt;/h2&gt;

&lt;p&gt;Add your assets to a folder and then add them as backgrounds to each section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.s1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(imgs/img1.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.s2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(imgs/img2.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.s3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(imgs/img3.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-add-the-parallex-effect"&gt;
  &lt;/a&gt;
  5. Add the parallex effect.
&lt;/h2&gt;

&lt;p&gt;In the section styling, add a background-attachment: fixed so that each image are fixed to the background of the different sections.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-attachment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you scroll down your app, you'll see that each image wipes out the one above or below it!&lt;/p&gt;

&lt;p&gt;You can now create a simple &lt;em&gt;parallex effect in pure CSS&lt;/em&gt; in under a minute ;)&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>So you have an idea for a startup—here's how to build it</title>
      <author>Austin Shelby</author>
      <pubDate>Tue, 30 Nov 2021 11:36:33 +0000</pubDate>
      <link>https://dev.to/austinshelby/so-you-have-an-idea-for-a-startup-heres-how-to-build-it-5cpj</link>
      <guid>https://dev.to/austinshelby/so-you-have-an-idea-for-a-startup-heres-how-to-build-it-5cpj</guid>
      <description>&lt;p&gt;So you have an idea for the next unicorn startup and the only thing between you and success is actually building it.&lt;/p&gt;

&lt;p&gt;I have been there too and while my side projects never got to a billion dollar evaluation—I learned how to build them. Quickly and efficiently.&lt;/p&gt;

&lt;p&gt;After reading this article you will have the knowledge to choose the correct tech stack for your startup that the top 0.1% of companies are using.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-jamstack"&gt;
  &lt;/a&gt;
  What is Jamstack
&lt;/h2&gt;

&lt;p&gt;The most important factor for startups is to create websites quickly without compromising the development of features added in the future.&lt;/p&gt;

&lt;p&gt;There have been numerous website architectures emerging from this need but only one of them has really gotten mainstream attention.&lt;/p&gt;

&lt;p&gt;It’s called Jamstack.&lt;/p&gt;

&lt;p&gt;Some of the main benefits of Jamstack architecture are speed, security, developer experience, and the ease of scaling.&lt;/p&gt;

&lt;p&gt;Just like the technology director at Pac Macmillan—James Luscombe says about moving their tech stack to Jamstack:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The move to the Jamstack was about speed, accessibility, and taking the worry out of deployment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article we will be building a Jamstack based architecture where most of your efforts can be put into actually programming the core business logic of your website instead of having to worry about the boring stuff.&lt;/p&gt;

&lt;p&gt;Instead of focusing on individual technologies, I want you to understand the general concepts behind choosing each piece.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-frontend"&gt;
  &lt;/a&gt;
  The best frontend
&lt;/h2&gt;

&lt;p&gt;The best tool to build a frontend for startups is Next.js. Even people not so familiar with frontend web development have heard about Next.js&lt;/p&gt;

&lt;p&gt;There are a few good reasons for it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It comes &lt;em&gt;batteries included&lt;/em&gt; greatly reducing the time to setup a project&lt;/li&gt;
&lt;li&gt;It has exceptionally low page load times which is great for Core Web Vitals and SEO&lt;/li&gt;
&lt;li&gt;It comes with kick ass features like i18n, routing, server-side rendering, and now middlewares.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are not sure if your website's performance is limiting your ranking on search engine results, take my &lt;a href="https://www.austinshelby.com/resources/core-web-vitals-test"&gt;core web vitals test&lt;/a&gt; (takes 3 seconds) to check your score.&lt;/p&gt;

&lt;p&gt;Instead of having to build a backend just to create a few API endpoints so you can get the data to your frontend, Next.js allows you to directly query data source of your choice from the frontend.&lt;/p&gt;

&lt;p&gt;Of course they ingeniously keep this secure by using either static site generation or server side rendering.&lt;/p&gt;

&lt;p&gt;Which, as I mentioned earlier greatly reduces development time as you don’t need a dedicated backend.&lt;/p&gt;

&lt;p&gt;Instead, you can put your efforts into building a more smart content management solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-backend"&gt;
  &lt;/a&gt;
  The best backend
&lt;/h2&gt;

&lt;p&gt;When choosing a backend you have to consider who is going to be using your website and for what purpose.&lt;/p&gt;

&lt;p&gt;Do they need a visual interface?&lt;/p&gt;

&lt;p&gt;Are they going to be manually entering data?&lt;/p&gt;

&lt;p&gt;Based on what we know so far about building minimum viable products we are going to be looking at two different solutions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GraphCMS&lt;/li&gt;
&lt;li&gt;Fauna&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Again to remind you, the main thing we are looking for is a backend that allows us to focus on the business logic without having to worry about the boring stuff—&lt;strong&gt;greatly reducing the development time&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-easiest-solution"&gt;
  &lt;/a&gt;
  The easiest solution
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://graphcms.com/"&gt;GraphCMS&lt;/a&gt; comes with an easy to use and simple graphical UI that allows non-technical people to add, edit, delete, and publish content.&lt;/p&gt;

&lt;p&gt;Unlike most content management systems GraphCMS allows you to also create items programmatically, not only read.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HLSKob_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv339guqgdruwfgbetgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLSKob_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fv339guqgdruwfgbetgk.png" alt="GraphCMS UI" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, it comes out of the box with a GraphQL API. The documentation is excellent and the very generous free tier allows you to kick-start your business in record time.&lt;/p&gt;

&lt;p&gt;It comes with some pro features like localization and remote data fetching to federate content from external sources.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GraphCMS gives you instant GraphQL Content APIs to create, enrich, unify, and deliver your content across platforms.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-best-solution-for-speed"&gt;
  &lt;/a&gt;
  The best solution for speed
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://fauna.com/"&gt;FaunaDB&lt;/a&gt; is the closest you can get to the database without compromising developer experience or productivity.&lt;/p&gt;

&lt;p&gt;Simply put, it is the best solution when you need high performance, scalability, ACID transactions and advanced features like streaming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMn-2Mh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kcmvfuu2nfxmp7eucgj4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMn-2Mh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kcmvfuu2nfxmp7eucgj4.png" alt="Fauna UI" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fauna prides itself in &lt;em&gt;Get started in minutes, without the heavy lift&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Fauna comes with a graphical user interface but it’s most powerful when used through the API with its own query language FQL.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Focus on your application instead of managing database clusters, provisioning capacity, creating replicas, or sharding data. Fauna does all the work for you behind the API so that you don’t have to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#hosting"&gt;
  &lt;/a&gt;
  Hosting
&lt;/h2&gt;

&lt;p&gt;Hosting is traditionally considered a very difficult thing to do.&lt;/p&gt;

&lt;p&gt;For example—you have to take care of CI/CD pipelines. This includes automated build and test setups. Deployment scripts, rollbacks and all kings of other boring stuff.&lt;/p&gt;

&lt;p&gt;The problem of creating all of this from scratch by yourself is that the time spent doing all of that is time NOT spent on building your actual product.&lt;/p&gt;

&lt;p&gt;We want a solution that already comes with all of those features.&lt;/p&gt;

&lt;p&gt;The hosting solution that I recommend is &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ylWDAgyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/778yi5xvab3mockk1hwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ylWDAgyb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/778yi5xvab3mockk1hwg.png" alt="Netlify UI" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Netlify brings tons of features that you love and even more features that you probably didn’t even know you want like A/B testing.&lt;/p&gt;

&lt;p&gt;First of all their CDN is globally available meaning people from all over the world can access your website lightning fast.&lt;/p&gt;

&lt;p&gt;They are fully supporting the git feature branch workflow that agile teams all over the world love.&lt;/p&gt;

&lt;p&gt;They have preview deployments for each branch or pull request you make, making it easy to test your website on every change.&lt;/p&gt;

&lt;p&gt;Netlify has a very generous free tier meaning that you can get started without paying a single cent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#third-party-services"&gt;
  &lt;/a&gt;
  Third party services
&lt;/h2&gt;

&lt;p&gt;Another major thing you have to focus on when building your startups is not reinventing the wheel.&lt;/p&gt;

&lt;p&gt;Time is money. So don’t waste it by building something from scratch when an already made solution exists.&lt;/p&gt;

&lt;p&gt;Instead of adding an elastic search database to your stack to get full text search, just use Algolia.&lt;/p&gt;

&lt;p&gt;Instead of reinventing video streaming and automatic image optimizations and sharing, just use Bunny CDN.&lt;/p&gt;

&lt;p&gt;By using third party services you can take the stress out of building your product by not having to worry about coding every little thing by yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now that you know why Jamstack won't slow you down when coding your product, you can confidently start to build your startup.&lt;/p&gt;

&lt;p&gt;Just like we covered, Jamstack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allows you to focus on programming the core business logic of your application&lt;/li&gt;
&lt;li&gt;Makes your website fast and secure&lt;/li&gt;
&lt;li&gt;Is easy to extend with third party APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are interested in the actual technical side of building a startup, take a look at &lt;a href="https://www.youtube.com/c/AustinShelby"&gt;my YouTube channel&lt;/a&gt; where I teach exactly that—using modern web development techniques.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 Key Characteristics of an Effective Case Study</title>
      <author>jessica moore</author>
      <pubDate>Tue, 30 Nov 2021 11:33:00 +0000</pubDate>
      <link>https://dev.to/jessica31132645/5-key-characteristics-of-an-effective-case-study-2olh</link>
      <guid>https://dev.to/jessica31132645/5-key-characteristics-of-an-effective-case-study-2olh</guid>
      <description>&lt;p&gt;Writing a case study may require a little more effort than you think. Such types of papers need you to write in a group of individuals or one person. You need to develop the content as per your knowledge of a situation and present it in the form of a scenario. It is an interesting way of conveying information and the purpose to a reader. If you do not understand certain aspects of case, you can seek &lt;a href="https://assignmenthelp.us/case-study/"&gt;case study help&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By creating a case scenario, you can attract and grab a reader’s attention in a good way. You can use different creative strategies to convince your reader about a problem and also show your writing skills. Check out Sony case study samples or the same of other big brands to get a better idea.&lt;/p&gt;

&lt;p&gt;If you are required prepare a case study, you need first to figure out the purpose of the case study. For finding a solution to a problem through a case study, you need to compose and present the issues caused by it. Following are specific key characteristics of these types of studies.&lt;/p&gt;

&lt;p&gt;1.Focus on the Readers&lt;/p&gt;

&lt;p&gt;Like any other type of essay, you need to know your audience before designing these studies. When you specifically focus on your reader, then writing becomes easier. The introduction must engage the readers in your writing and it must be impactful. As the common saying goes ‘First impression is the last impression;’ so prepare an introduction that hooks your readers. &lt;/p&gt;

&lt;p&gt;2.Make your study interesting&lt;/p&gt;

&lt;p&gt;By narrating the case study in the form of a story, you make the content interesting to read. You need to convince the readers about the problem using the said strategy. You also need to explain in details about every perspective of the problem that you are discussing on the paper.&lt;/p&gt;

&lt;p&gt;3.Writing in the form of narration&lt;/p&gt;

&lt;p&gt;As you write your essay in the form of narration, do not forget to create a flow. you need to use logical explanations when linking connections between the sentences. An outline will help you with this perspective. An essay writing service can help you in developing an outline for your case study. It will provide you with factors in a sequence that will induct logical reasoning in continuing the story.&lt;/p&gt;

&lt;p&gt;4.Purpose&lt;/p&gt;

&lt;p&gt;You cannot keep your audience hooked if there is no purpose for your case. While taking the reader through your case study, keep highlighting the main purpose. You need to ensure that the content and your purpose statement are related. Most of these types of cases are proposed to resolve an issue at hand. &lt;/p&gt;

&lt;p&gt;5.Creativity&lt;/p&gt;

&lt;p&gt;Writing such a case study needs a touch of creativity for conveying the reader about the problem and possible solutions. You need to put some extra time into identifying the purpose of your case study. Once you have completed it, compose an outline for achieving that purpose. Giving in an organized effort will develop your required essay in a short time. If you have Sony case study, you can show your creative style of writing using the information you have, or you can seek &lt;a href="https://assignmenthelp.us/case-study/sony-case-study.html"&gt;Sony case study help&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The above mentioned points can help you understand the characteristics of the assignment, and you can develop assignments accordingly.&lt;/p&gt;

&lt;p&gt;Summary: Assignments are a part of academic life, and students cannot avoid them at any cost. It allows students to hone writing skills and allows them to learn something new.&lt;/p&gt;

&lt;p&gt;Author Bio: Jane Garner is a full-time writer at Assignmenthelp.us. Students can get case study help from her.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>REST APIs Testing with Hoppscotch, go from zero to hero!
</title>
      <author>Sankalp Swami</author>
      <pubDate>Tue, 30 Nov 2021 10:57:29 +0000</pubDate>
      <link>https://dev.to/aviyel/rest-apis-testing-with-hoppscotch-go-from-zero-to-hero-77f</link>
      <guid>https://dev.to/aviyel/rest-apis-testing-with-hoppscotch-go-from-zero-to-hero-77f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3x4G_az3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638201754575-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3x4G_az3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638201754575-image-resized.png" alt="Hoppscotch" width="760" height="380"&gt;&lt;/a&gt;&lt;br&gt;
I was really helpless using Postman on my 4 gig laptop as it used to take a lot of time on startup and then complete blackout. This is when I came across Hoppscotch which is a really lightweight and web-based API development suite that was very helpful for someone like me who had a very low-end laptop with chrome occupying most of my RAM.&lt;/p&gt;

&lt;p&gt;If you are a backend developer, this is for sure that you have developed many APIs for your web application. APIs act like connecting tissues as APIs connect your User Interface to your server, which states the vital role APIs play in your web application. If you push your APIs LIVE without testing their feasibility, your server will crash. To help you out, Aviyel is coming with yet another worthwhile and informative event where you will learn how to test your APIs.&lt;/p&gt;

&lt;p&gt;Why should you join this event?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will learn the importance of API Testing.&lt;/li&gt;
&lt;li&gt;You will learn how to test your APIs with &lt;a href="https://aviyel.com/projects/5/hoppscotch"&gt;Hoppscotch&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You will learn how to organize your RESTful APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sankalp Swami is coming live on Coffee&amp;amp;Code where he will take you through the complete process of testing APIs and automating the process using Hoppscotch's various rich features. Sankalp is a self-taught Node.js Developer from India who is passionate about Open-Source and giving back to the community. Sankalp also writes articles on DEV and Hackernoon on JavaScript, Node.js, and OpenSource in his free time.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with APIs and &lt;a href="https://aviyel.com/"&gt;open-source!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date: December 3rd, 2021&lt;br&gt;
Time: 8.00 AM PST | 11:00 AM EST&lt;br&gt;
Register here 👉:&lt;/strong&gt; &lt;a href="https://bit.ly/3lnOE9x"&gt;https://bit.ly/3lnOE9x&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our &lt;a href="https://aviyel.com/events"&gt;events&lt;/a&gt;!&lt;br&gt;
Let’s build open-source together! 🎉&lt;br&gt;
Team Aviyel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sankalp Swami Socials!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/sankalpswami01"&gt;sankalpswami01&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/SwamiSankalp"&gt;SwamiSankalp&lt;/a&gt;&lt;br&gt;
Dev.to: &lt;a href="https://dev.to/sankalpswami1122"&gt;sankalpswami1122&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://www.linkedin.com/in/sankalp-swami/"&gt;Sankalp Swami&lt;/a&gt; &lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>Best UI/UX Design Pattern Libraries</title>
      <author>Jhonth Smith</author>
      <pubDate>Tue, 30 Nov 2021 10:56:24 +0000</pubDate>
      <link>https://dev.to/jhonthsmith/best-uiux-design-pattern-libraries-bc7</link>
      <guid>https://dev.to/jhonthsmith/best-uiux-design-pattern-libraries-bc7</guid>
      <description>&lt;p&gt;Mobile applications provide organizations with benefits inaccessible for different methods for product or services development. This is an instance of admittance to, and long-lasting presence in clients' regular routines. A mobile application can be an exceptionally effective investment - yet, it can possibly turn out to be such in the event that it's well designed. &lt;br&gt;
However, making a UI for a mobile application is challenging. The uplifting news is, design libraries furnish organizations with &lt;a href="https://www.franticpro.com/ios-ui-ux-app-development/"&gt;UI/UX design&lt;/a&gt;  formats that can either be utilized for motivation or lay the preparation for the future mobile interface. There's no deficiency of mobile UX configuration design libraries accessible on the web.&lt;br&gt;
Pttrns:Pttrns is one of the biggest pattern libraries out there. Utilizing a navigation tab on the left half of the page, you'll have the option to pick a required component and browse formats. All entries are arranged on a timeline - designers will actually want to perceive how interface patterns change throughout the long term. Pttrns contains paid formats for Android, iOS, Watch, and iPad.&lt;br&gt;
UX Archive: UX Archive is an &lt;a href="https://www.franticpro.com/ios-ui-ux-app-development/"&gt;iOS design&lt;/a&gt;  library that permits planners to make workflows get interface motivation thoughts. You will actually want to analyze the work processes of all popular applications. There are over 350 planned work processes right now. UX Archive is an arranged content platform. Clients will actually want to present their own work processes and offer them to the community. &lt;br&gt;
Mobbin Design: Mobbin Design is a mobile application UX configuration design library for iOS. It has a progression of the screenshots of 170 applications and over 10,000 examples. Originators can add top picks to their own library. &lt;br&gt;
Mobbin Design has an interface that is not difficult to utilize and good to look at. All the screenshots are assembled by components or examples. For every passage, there's a tab recognizing the iOS adaptation of the application was designed for.&lt;br&gt;
Dark Patterns: Dark Patterns is perhaps the most imaginative example library out there as it gathers the 'dark side of the UI plan'. Manipulative strategies designers use, hidden promotions, client experience obstruction, and a lot more slippery procedures partners use to deceive clients. While the pattern library can scarcely be utilized for motivation during UI configuration, it's absolutely a drawing-in site to browse through.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>ios</category>
      <category>programming</category>
    </item>
    <item>
      <title>Strengthen your iOS/ANDROID application with MobSF!
</title>
      <author>Sankalp Swami</author>
      <pubDate>Tue, 30 Nov 2021 10:55:44 +0000</pubDate>
      <link>https://dev.to/aviyel/strengthen-your-iosandroid-application-with-mobsf-3mo9</link>
      <guid>https://dev.to/aviyel/strengthen-your-iosandroid-application-with-mobsf-3mo9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7ELZQex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638256756497-event-announcement-1-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7ELZQex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638256756497-event-announcement-1-resized.png" alt="MobSF" width="760" height="380"&gt;&lt;/a&gt;&lt;br&gt;
When you are developing a mobile app, the data security for your mobile app is as important as other elements of your mobile app. Every app has some critical and sensitive data like your passcodes, banking information, and more which can be exploited and it is something that you don’t want at any cost. It is your responsibility to build trust with the users and maintain the user's privacy. When you are connected to the web, you don't know what might happen when. These days safety is a prime concern, Aviyel is coming with another valuable and informative event where you will learn how to secure your application before its release.&lt;/p&gt;

&lt;p&gt;Why should one join this event?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will learn the importance of security in general.&lt;/li&gt;
&lt;li&gt;You will learn the role of &lt;a href="https://aviyel.com/projects/7/mobile-security-framework"&gt;MobSF&lt;/a&gt; in mobile application security.&lt;/li&gt;
&lt;li&gt;You will forge ahead with the computer security ecosystem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Habdul Hazeez is coming live on Coffee&amp;amp;Code to help you gain the importance &amp;amp; viability of your mobile application security. Habdul got into technology in 2011starting with computer security reading blogs on The Hacker News, Bruce Schneier's, and Krebs on Security. This interest led to the pursuit of a B.Sc degree in computer science. Currently, Habdul is a tech blogger in Web Development and Computer Security domain. You'll find most of his writings on DEV. He has also contributed articles for the LogRocket blog and CSS-Tricks.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with APIs and &lt;a href="https://aviyel.com/discussions"&gt;open-source&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date: December 4th, 2021&lt;br&gt;
Time: 8.00 AM PST | 11:00 AM EST&lt;br&gt;
Register Here 👉:&lt;/strong&gt; &lt;a href="https://bit.ly/3FXoFxA"&gt;https://bit.ly/3FXoFxA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our &lt;a href="https://aviyel.com/events"&gt;events&lt;/a&gt;!&lt;br&gt;
Let’s build open-source together! 🎉&lt;br&gt;
Team Aviyel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habdul Hazeez Socials!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/ziizium"&gt;ziizium&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/ziizium"&gt;ziizium&lt;/a&gt;&lt;br&gt;
Dev.to: &lt;a href="https://dev.to/ziizium"&gt;ziizium&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://linkedin.com/in/ziizium"&gt;Habdul Hazeez&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>security</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>🧰 Setting up your username and email in Git at your first dev job</title>
      <author>Stefi Rosca</author>
      <pubDate>Tue, 30 Nov 2021 10:37:15 +0000</pubDate>
      <link>https://dev.to/stefirosca/setting-up-your-username-and-email-in-git-at-your-first-dev-job-13ej</link>
      <guid>https://dev.to/stefirosca/setting-up-your-username-and-email-in-git-at-your-first-dev-job-13ej</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TxsKK3Io--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dub8lvb336t4xu0o4nf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TxsKK3Io--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dub8lvb336t4xu0o4nf3.png" alt="Before and after example with image and name from profile" width="880" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the things I had to do when getting my first job was configuring Git. Unless you setup your name and email address Git will take it from the environment. This is important because every Git commit uses this information and if it's not setup correctly it will not be linked to your Github account. Hence if you have a profile picture it won't show.&lt;/p&gt;

&lt;p&gt;There are 2 ways to do it:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Globally&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open the command line and run the following commands with your name and email.&lt;/p&gt;

&lt;p&gt;To setup your username:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global user.name "Stefi Rosca"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To setup your email:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global user.email "stefi.rosca@me.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case you only have to do it once and Git will always use this information for anything you do on that system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Repository-specific&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From the command line, change into a repository directory where you want to make this change and then run the commands as below.&lt;/p&gt;

&lt;p&gt;To setup your username:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config user.name "Stefi Rosca"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To setup your email address:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config user.email "stefi.rosca@me.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To test that you set it up correctly you can run in your in a specific Git terminal &lt;code&gt;git config user.email&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Make sure you change the name and email in the example above to yours. &lt;/p&gt;

&lt;p&gt;For more information check out chapter on Getting Started from the &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup"&gt;Pro Git book&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Laravel Envoy setup</title>
      <author>skino</author>
      <pubDate>Tue, 30 Nov 2021 10:20:09 +0000</pubDate>
      <link>https://dev.to/skino2020/laravel-envoy-setup-2m0</link>
      <guid>https://dev.to/skino2020/laravel-envoy-setup-2m0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I'm sure that I'm not the only person like this but i often forget to run certain commands when pulling my blog live from GitHub. The two I'm terrible for are &lt;strong&gt;php artisan&lt;/strong&gt; &lt;strong&gt;migrate&lt;/strong&gt; and &lt;strong&gt;php artisan config:cache&lt;/strong&gt;. I don't know what the reason is for this but its been a pain in the neck for me for a while, i shamefully spent 45 mins trying to figure out why my posts weren't going over to Dev.to and the only error i was getting was "connection refused". Turns out i had not run the config cache to make my .env changes live...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-envoy"&gt;
  &lt;/a&gt;
  Introducing Envoy
&lt;/h3&gt;

&lt;p&gt;Envoy isn't a new package and I've just put off setting it up for no good reason until today.... its time to get the automation of my pull's to live working and it couldn't be easier!.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-one-require-the-package"&gt;
  &lt;/a&gt;
  Step One - Require the package
&lt;/h3&gt;

&lt;p&gt;As with almost all packages worth mentioning with Laravel this has a simple command to install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require laravel/envoy --dev

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ye that's really it for the installation...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-specify-the-server"&gt;
  &lt;/a&gt;
  Step 2 - Specify the server
&lt;/h3&gt;

&lt;p&gt;Envoy uses code from a file in the root of your project (which you need to create) called &lt;strong&gt;Envoy.blade.php&lt;/strong&gt;. In this file we will specify our Server and the jobs required.&lt;/p&gt;

&lt;p&gt;so firs things first we need to specify the server to run the code one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@servers(['localhost' =&amp;gt; '127.0.0.1'])

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm setting this up for my blog, so i don't have any replication as at this stage it would be overkill for my simple setup. if you wanted to add more than one server you would need to pass the server names and IP's to the Array like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@servers(['Raspada-web-1' =&amp;gt; '192.168.1.68', 'Raspada-web-2' =&amp;gt; '192.168.1.69'])

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-lets-tell-a-story"&gt;
  &lt;/a&gt;
  Step 3 - Lets tell a story!
&lt;/h3&gt;

&lt;p&gt;Thing i like about the way Envoy works is i can set it up and "talk out" my process like i do to my "Coding Duck"... if your Unsure what a coding duck is, quite simply its a rubber duck that when i'm struggling with a problem i talk through my issue with the duck... Sounds mental but it bloody works, often talking through your issue out loud will help you solve it... anyway back to our story. What should i be doing each time i make changes and make them live....&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git pull: Well duh! Merge the branch your working on into the main/master and pull to live&lt;/li&gt;
&lt;li&gt;Migrate: i want to run the migrate command just in case i have made some changes to tables.&lt;/li&gt;
&lt;li&gt;install composer packages for production: i want to install the packages for the live environment... not dev ones.&lt;/li&gt;
&lt;li&gt;Dump-Autoload: i want to clear out any auto-loaded classes that may have changed with my work completed.&lt;/li&gt;
&lt;li&gt;config-cache: i want to ensure all changes i have made to files like .env or saved to cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's our story! so how do we define this? well we use the &lt;a class="mentioned-user" href="https://dev.to/story"&gt;@story&lt;/a&gt;
 code and name our story... for this tutorial were going to use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@story('code_update')
// story chapters here
@endstory

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So my story so far is this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@servers(['localhost' =&amp;gt; '127.0.0.1'])

@story('code_update')
gitpull
migrate
composerinstall
dumpautoload
savenewconfig
@endstory

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 4 - Create the Tasks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now that we have our main story for envoy we need to make each individual task with the required code inside.&lt;/p&gt;

&lt;p&gt;So first things first id suggest layout out each task accordingly like below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@servers(['localhost' =&amp;gt; '127.0.0.1'])

@story('code_update')
gitpull
migrate
composerinstall
dumpautoload
savenewconfig
@endstory


@task('gitpull')

@endtask

@task('migrate')

@endtask

@task('composerinstall')

@endtask

@task('dumpautoload')

@endtask

@task('savenewconfig')

@endtask

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Starting to get the idea?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-add-the-commands"&gt;
  &lt;/a&gt;
  Step 5 - Add the commands
&lt;/h3&gt;

&lt;p&gt;For this bit you just need to write the commands you would normally run (when you don't forget :S ) inside each of the tasks. when you're finished you should have something like mine below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@task('gitpull')
    git pull
@endtask

@task('migrate')
    php artisan migrate --force
@endtask

@task('composerinstall')
    composer install --no-dev
@endtask

@task('dumpautoload')
    composer dump-autoload
@endtask

@task('savenewconfig')
    php artisan config:cache
@endtask

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-6-finish-the-story"&gt;
  &lt;/a&gt;
  Step 6 - Finish the story
&lt;/h3&gt;

&lt;p&gt;All good stories come to an end... and envoy isn't any different we need to set the @finished flag&lt;/p&gt;

&lt;p&gt;You could leave this blank if you wanted to but seems a bit daft when Envoy makes it so easy to integrate with platforms like Slack, MS teams and Discord.&lt;/p&gt;

&lt;p&gt;For this im going to be just using some text in the terminal for when i pull.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@finished
    if ($exitCode &amp;gt; 0) {
       &amp;lt;span class="hljs-regexp"&amp;gt;// There were errors in one of the tasks...
    }
@endfinished
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#run-the-envoy-command"&gt;
  &lt;/a&gt;
  Run the Envoy command
&lt;/h3&gt;

&lt;p&gt;So first of we will pull this to our live environment after out branch merge (unless you were naughty and working on main/master!).&lt;/p&gt;

&lt;p&gt;we will then need to run composer install to just get Envoy working on live. and then you can run your full story by typing this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php vendor/bin/envoy run code_update

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first time i ran this i got a bit scared because i seen a wall of red text.... don't worry its fine!... and that it, if you really want to be clever you could alias the command in your terminal to something like deploy-blog, deploy-saas so from anywhere on your server it will CD to the directory and run the command for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-done"&gt;
  &lt;/a&gt;
  All done...
&lt;/h3&gt;


&lt;p&gt;Now this will go live and just work and it will make my life easier. i haven't even scratched the surface yet with what i can do with envoy, I've not spoken about queue:restarts as i don't have any queues yet, I've not talked about running the envoy stories on multiple servers at the same time either. there is so much more this package can do!&lt;br&gt;&lt;br&gt; &lt;/p&gt;
&lt;h2&gt;Raspada-Blog&lt;/h2&gt;  I post on my blog primarily and share the posts via API, please check out &lt;a href="//www.raspada-blog.co.uk"&gt;Raspada-Blog&lt;/a&gt; for more posts and information. If you have any questions please message me on twitter or use my website contact form.

</description>
      <category>git</category>
      <category>php</category>
      <category>laravelenvoy</category>
    </item>
    <item>
      <title>Django Basics: Views and URLs </title>
      <author>Meet Gor</author>
      <pubDate>Tue, 30 Nov 2021 10:18:32 +0000</pubDate>
      <link>https://dev.to/mr_destructive/django-basics-views-and-urls-3bmm</link>
      <guid>https://dev.to/mr_destructive/django-basics-views-and-urls-3bmm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;After getting familiar with the folder structure of the Django framework, we'll create our first view in an app. The basics of creating and mapping a view with a URL will be cleared by the end of this part. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-views"&gt;
  &lt;/a&gt;
  Creating Views
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Views are the functions written in python as a logic control unit of the webserver &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To create a view or typically-like function, we need to write a function in the &lt;code&gt;views.py&lt;/code&gt; file inside of the application folder. The function name can be anything but should be a sensible name as far as its usability is concerned. Let's take a basic example of sending an HTTP response of 'Hello World'. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameviewspy"&gt;
  &lt;/a&gt;
  project_name/app_name/views.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.http import HttpResponse 

def index(request):
    return HttpResponse('Hello World') 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, we are simply returning an HTTP Response right now, but rendering Templates/HTML Documents is quite similar and easy to grasp in Django. So, this is a view or a piece of logic but there is a piece missing in this. Where should this function be used? Of course a URL i.e a path to a web server. &lt;/p&gt;

&lt;p&gt;We'll see how to map the views to an URL in Django in the next section &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mapping-the-views-to-a-url"&gt;
  &lt;/a&gt;
  Mapping the Views to a URL
&lt;/h2&gt;

&lt;p&gt;We need to first create a &lt;code&gt;urls.py&lt;/code&gt; file in the application folder to create a map of the URL to be mapped with the view. After creating the file in the same app folder as the &lt;code&gt;views.py&lt;/code&gt;, import the function in the view into the file. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameurlspy"&gt;
  &lt;/a&gt;
  project_name/app_name/urls.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from .views import index 
from django.urls import path  

urlpatterns = [     
    path('', index, name='index'), 
] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The path can be anything you like but for simplicity, we'll keep it blank('') for now.    &lt;/p&gt;

&lt;p&gt;Now, you have the path for your view to work but it's not linked to the main project. We need to link the app urls to the project urls.  &lt;/p&gt;

&lt;p&gt;To link the urls of your app to the main project folder, you need to just add a single line of code in the &lt;code&gt;urls.py&lt;/code&gt; file of the project folder. &lt;/p&gt;

&lt;p&gt;In projectname folder -&amp;gt; urls.py &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameurlspy"&gt;
  &lt;/a&gt;
  project_name/urls.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin 
from django.urls import path, include 

urlpatterns = [     
    path('admin/', admin.site.urls), 
    path('', include('post.urls')), 
] 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to add the line &lt;code&gt;path('', include('post.urls')),&lt;/code&gt; and also import the &lt;code&gt;include&lt;/code&gt; function from &lt;code&gt;django.urls&lt;/code&gt;. This additional statement includes the urls or all the &lt;code&gt;urlpatterns&lt;/code&gt; in the &lt;code&gt;post&lt;/code&gt; app from the &lt;code&gt;urls.py&lt;/code&gt; file into the project's url-routes.  &lt;/p&gt;

&lt;p&gt;Here, the URL path can be anything like &lt;code&gt;'home/'&lt;/code&gt;, &lt;code&gt;'about/'&lt;/code&gt;, &lt;code&gt;'posts/'&lt;/code&gt;, etc. but since we are just understanding the basics, we'll keep it &lt;code&gt;''&lt;/code&gt; i.e. the root URL.  &lt;/p&gt;

&lt;p&gt;You can also see that there is another route in our project &lt;code&gt;'admin/'&lt;/code&gt; which is a path to the admin section. We'll explore this path and the entire Admin Section in some other part of this series. &lt;/p&gt;

&lt;p&gt;Now if you start the server and visit the default URL i.e &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;, you will see a simple HTTP message &lt;code&gt;Hello World&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vzlBJSKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638194390/blogmedia/uv1_xf4byq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vzlBJSKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638194390/blogmedia/uv1_xf4byq.png" alt="Hello World view" width="529" height="541"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#breaking-the-raw-path-endraw-function-in-urlpatterns"&gt;
  &lt;/a&gt;
  Breaking the &lt;code&gt;path&lt;/code&gt; function in urlpatterns
&lt;/h2&gt;

&lt;p&gt;The path function in the urlpatterns takes in at least 2 parameters, i.e. the URL pattern and the view of any other function that can be related to the webserver.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;path( ' ',   view,    name )        
       ^       ^        ^        
       |       |        |       
       |       |     url_name       
       |   function_name    
    url_path     
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#url-path"&gt;
  &lt;/a&gt;
  URL path
&lt;/h3&gt;

&lt;p&gt;The URL Path is the pattern or literally the path which you use in the Browser's search bar. This can be static i.e. some hard-coded text like &lt;code&gt;home/&lt;/code&gt;, &lt;code&gt;user/&lt;/code&gt;, &lt;code&gt;post/home/&lt;/code&gt;, etc. and we can also have dynamic URLs like &lt;code&gt;post/&amp;lt;pk:id&amp;gt;/&lt;/code&gt;, &lt;code&gt;user/&amp;lt;str:name&amp;gt;/&lt;/code&gt;, etc. here the characters &lt;code&gt;&amp;lt;pk:id&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;str:name&amp;gt;&lt;/code&gt; will be replaced by the actual id(integer/primary key) or the name(String) itself.  &lt;/p&gt;

&lt;p&gt;This is used in an actual web application, where there might be a user profile that needs the unique user-id to render it specifically for that user. The User-Profile is just an example, it can anything like posts, emails, products, any form of a content-driven application.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#view"&gt;
  &lt;/a&gt;
  View
&lt;/h3&gt;

&lt;p&gt;The view or the function is the name of the function that will be attached to that URL path. That means once the user visits that URL, the function is literally called. &lt;strong&gt;View is just a fancy word for a function(or any logic basically).&lt;/strong&gt; There is a lot to be covered when it comes to &lt;code&gt;View&lt;/code&gt; as there are a lot of ways to create it, there are two types of views, how to use them for various use-cases that can be learned along the way because it is a topic where the crust of Django exists.   &lt;/p&gt;

&lt;p&gt;We'll learn to create different implementations and structure our views, for time-being just consider them as the unit where every operation on the web can be performed. We can create other standalone functions in python to work with the views to make it a bit structured and readable. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#url-name"&gt;
  &lt;/a&gt;
  URL Name
&lt;/h3&gt;

&lt;p&gt;This is an optional parameter to the path function as we do not mandatorily need to give the URL map a name. This can be really useful in multi-page application websites where you need to link one page to another and that becomes a lot easier with the URL name. We do not need this right now, we'll touch it when we'll see the Django Templating Language.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-views"&gt;
  &lt;/a&gt;
  Example Views
&lt;/h2&gt;

&lt;p&gt;Let's create some examples to understand the working of Views and URLs. We'll create a dynamic URL and integrate the Python module in the views to get familiarized with the concept. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-urls"&gt;
  &lt;/a&gt;
  Dynamic URLs
&lt;/h3&gt;

&lt;p&gt;We can use the dynamic URLs or placeholder variables to render out the content dynamically. Let's create another set of View and URL map. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameviewspy"&gt;
  &lt;/a&gt;
  project_name/app_name/views.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def greet(request, name):
    return HttpResponse('Welcome, ' + name) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This view or function takes an additional argument called &lt;code&gt;name&lt;/code&gt; and in response, it just says &lt;code&gt;Welcome, name&lt;/code&gt; where the name can be any string. Now after creating the view, we need to map the view to a URL pattern, We'll add a path for this greet function.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameurlspy"&gt;
  &lt;/a&gt;
  project_name/app_name/urls.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;path('greet/&amp;lt;str:name&amp;gt;/', greet, name='greet'), 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see how we have created the url-pattern here. The greet part is static but the &lt;code&gt;&amp;lt;str:name&amp;gt;&lt;/code&gt; is a variable or just a URL parameter to be passed to the view as the value of the variable &lt;code&gt;name&lt;/code&gt;. We have also given the URL map a name called greet, just for demonstration of its creation.  &lt;/p&gt;

&lt;p&gt;You'll get an error, 100% if you are blindly following me! Didn't you forget something? &lt;/p&gt;

&lt;p&gt;Import the greet function from the views like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from .views import index, greet   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, after we visit the URL &lt;code&gt;https://127.0.0.1:8000/greet/harry&lt;/code&gt;, you should see a response &lt;code&gt;Welcome, harry&lt;/code&gt; as simple as that.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--onlCT2vd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638252762/blogmedia/uv-greet_e2wg5o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--onlCT2vd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638252762/blogmedia/uv-greet_e2wg5o.gif" alt="Greet URL Demo" width="510" height="413"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Now, how is this working? We see the view first. The function takes two parameters one is most common the request which stores the meta-data about the request, the other parameter is the name that we will be use to respond to the server dynamically. The name variable is used in the string with the HttpResponse function to return a simple string. &lt;/p&gt;

&lt;p&gt;Then, in the URLs, we need to find a way to pass the variable name to the view, for that we use the &lt;code&gt;&amp;lt;string:name&amp;gt;&lt;/code&gt; which is like a URL parameter to the view. The path function automatically parses the name to the appropriate view and hence we call the greet function with the name variable from the URL. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-pythonic-things"&gt;
  &lt;/a&gt;
  Using Pythonic things
&lt;/h3&gt;

&lt;p&gt;We'll use some Python libraries or functions in the Django App. In this way, we'll see it's nearly no-brainer to use Python functions or libraries in the Django framework as indeed all files which we are working with are Python files. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameviewspy"&gt;
  &lt;/a&gt;
  project_name/app_name/views.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from random import randint 

def dice(request):
    number = randint(1,6)     
    return HttpResponse(f"Its {number}") 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This view is using the random module, you can pretty much use other web-compatible modules or libraries. We have used the &lt;code&gt;random.randint&lt;/code&gt; function to generate the pseudo-random number between 1 and 6. We have used the f-string (&lt;code&gt;f"{variable}"&lt;/code&gt;)styled Response string as int is not compatible with the response concatenation. So this is the logic of our map, now we'll need to link it to a URL-path.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projectnameappnameurlspy"&gt;
  &lt;/a&gt;
  project_name/app_name/urls.py
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;path('throw/', dice, name='dice'), 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, import the view name from the views as &lt;code&gt;from .views import dice&lt;/code&gt; also add other views if present. Now if we go to the URL &lt;code&gt;https://127.0.0.1:8000/throw/&lt;/code&gt;, we shall see a random number in the response. This is how we used Python to make the logic of our view. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UkQkVTv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638252951/blogmedia/uv-dice_bsodzq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UkQkVTv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1638252951/blogmedia/uv-dice_bsodzq.gif" alt="Dice URL Demo" width="510" height="413"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So, that was the basics of creating and mapping views and urls. It is the most fundamental of the workflow in Django project development. You need to get familiar with the process of mapping Views and urls before diving into Templates, Models, and other complex stuff.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;From this part of the series, we touched upon the basics of views and URLs. The concept of mapping URLs and views might have been much cleared and it will be even gripping after we explore the Template handling and Static files in the next part. If you have any queries or mistakes I might have made please let me know. Thanks for reading and Happy Coding :) &lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>backend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>RudderStack: How Pachyderm Pipelines Help Parse Customer Event Data</title>
      <author>RudderStack</author>
      <pubDate>Tue, 30 Nov 2021 10:18:00 +0000</pubDate>
      <link>https://dev.to/rudderstack/rudderstack-how-pachyderm-pipelines-help-parse-customer-event-data-193p</link>
      <guid>https://dev.to/rudderstack/rudderstack-how-pachyderm-pipelines-help-parse-customer-event-data-193p</guid>
      <description>&lt;p&gt;Astasia from RedPoint Ventures wrote a &lt;a href="https://medium.com/memory-leak/reverse-etl-a-primer-4e6694dcc7fb/"&gt;great post&lt;/a&gt; on new technologies supporting "reverse ETL" functionality in the customer data stack.&lt;/p&gt;

&lt;p&gt;We're excited to be innovating in the area of reverse ETL tech (via our Warehouse Actions feature), and our product and engineering teams discuss these topics and industry trends often, so we thought it would be helpful to provide a bit more technical depth on a few of Astasia's points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-data-movement-differs-between-event-streams-and-tabular-data-which-is-an-important-consideration-for-reverse-etl"&gt;
  &lt;/a&gt;
  1) Data Movement Differs Between Event Streams and Tabular Data, Which is an Important Consideration for Reverse ETL
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#differences-in-moving-data"&gt;
  &lt;/a&gt;
  Differences in Moving Data
&lt;/h3&gt;

&lt;p&gt;ETL/ELT solutions all accomplish a similar function, moving data, but there are several foundational differences to keep in mind when it comes to the data. One of those is the difference between &lt;em&gt;event stream data&lt;/em&gt; and &lt;em&gt;tabular data&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Everyone is familiar with this distinction on the ingestion side of the stack. Ingesting event streams is different from ingesting tabular data from SaaS applications (like Salesforce), not just in how the data is generated, i.e., pulled via API vs. generated by an SDK also in the structure of the data itself.&lt;/p&gt;

&lt;p&gt;This distinction has significant impacts, from real-time requirements to downstream reporting implications. This distinction has led to different vendors doing well in each category (i.e., Segment for event streaming and Fivetran for tabular data), but modern companies have to leverage both.&lt;/p&gt;

&lt;p&gt;At RudderStack, we believe there is an opportunity to do both well, together. In fact, a unified stack to do both can achieve some interesting things, like cross-pipeline identity stitching (i.e., joining Salesforce record IDs with anonymousIDs) and unified data governance. We're building these solutions at RudderStack, but that's a topic for a different post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#event-stream-vs-tabular-data-for-reverse-etl"&gt;
  &lt;/a&gt;
  Event Stream vs. Tabular Data for Reverse ETL
&lt;/h3&gt;

&lt;p&gt;When you hear the term reverse ETL, it's easy to think only of tabular data. The distinction still exists, though, and you can (and should) distinguish between event stream data and tabular data.&lt;/p&gt;

&lt;p&gt;Astasia touched on a few use cases for tabular data, but reverse ETL as an event stream is equally important. One use case we see quite often among our customers is sending events stored in logs (e.g., generated by your back end application and dumped into S3) into destinations like Google Analytics and Amplitude for analytics or platforms like Braze for marketing.&lt;/p&gt;

&lt;p&gt;Many of our customers also perform more advanced processing like data mining or ML modeling of logs before sending them as events, then use RudderStack to pipe the data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-table-sync-can-be-modeled-as-an-event-stream"&gt;
  &lt;/a&gt;
  2) Table Sync can be Modeled as an Event Stream
&lt;/h2&gt;

&lt;p&gt;An important point related to tabular vs. event stream data is that tabular data can be modeled as events, but not necessarily the other way around. On the ETL/ELT side, CDC technologies (or incremental pulls) have generated quite a bit of interest because there are advantages of representing that data as events versus doing a batch pull via API.&lt;/p&gt;

&lt;p&gt;Some of those advantages include incremental syncs for real-time updates, maintaining a consistent point-in-time state, and routing the data to streaming technologies (we will cover this topic in more depth in a future post).&lt;/p&gt;

&lt;p&gt;This is possible because &lt;em&gt;tabular data are actually a subset of event data&lt;/em&gt;. Similarly, batch processing is a subset of streaming processing. This means that tabular data can be derived from a stream of events and recreate the final state at any point (see event sourcing architecture). This is not true for the inverse, though.&lt;/p&gt;

&lt;p&gt;In fact, the reason the industry adopted the tabular/batch model was primarily technical---it is much more difficult to build and manage streaming data. However, this is changing with technologies like RudderStack.&lt;/p&gt;

&lt;p&gt;At RudderStack, we have modeled table sync as an event stream in our reverse ETL solution.&lt;/p&gt;

&lt;p&gt;At a high level, syncing a row from your warehouse to a 'row' in a cloud application is an "event" that specifies which data points are being mapped. Tools like Segment and RudderStack already accomplish that functionality with &lt;code&gt;.identify&lt;/code&gt; calls in the event stream, so there is no inherent limitation of the data model for the use case.&lt;/p&gt;

&lt;p&gt;So, while there are certainly different user experiences for streaming-based solutions like RudderStack vs. table sync solutions like Census, they are primarily variations in UI/UX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-limitations-of-segments-personas-product-for-reverse-etl"&gt;
  &lt;/a&gt;
  3) The Limitations of Segment's Personas Product for Reverse ETL
&lt;/h2&gt;

&lt;p&gt;Astasia made a great point about the distinction between reverse ETL and Segment's Persona's product. Personas are a powerful product feature, but it isn't a reverse ETL solution. The reason is simple: Personas treats the user profile as a first-class object in data sync. The practical implication of this is that all data sync must conform to a contact/account structure. Still, as the recent increase in reverse ETL startups has shown, companies need sync functionality that serves a much wider range of use cases.&lt;/p&gt;

&lt;p&gt;Reverse ETL as an event stream directly from the warehouse is unhindered by those limitations. In fact, with our Warehouse Actions feature, our customers can turn warehouse tables into a flexible, configurable event stream. That includes updating contacts, accounts, and audiences, but can also support sending of cleansed internal events, derived proxy events (events represented by the absence of behavior), and use cases where the data needs to be delivered to other infrastructure via tools like Kafka, Redis or HTTP endpoints.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-reverse-etl-is-still-just-data-movement-and-a-single-pipe-simplifies-your-stack-security-and-data-governance"&gt;
  &lt;/a&gt;
  4) Reverse ETL is Still Just Data Movement, and a Single Pipe Simplifies Your Stack, Security, and Data governance
&lt;/h2&gt;

&lt;p&gt;Our mission at RudderStack is to help data engineers become the heroes of their companies by providing every team with rich data. We want to make their jobs easier, and part of that mission is simplifying data management into one pipeline.&lt;/p&gt;

&lt;p&gt;In the modern stack, the warehouse is king, and many destinations are also becoming sources (and vice versa!).&lt;/p&gt;

&lt;p&gt;For example, sources of data often include&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Events coming from your client or server-side apps&lt;/li&gt;
&lt;li&gt;  Data from your SaaS tools&lt;/li&gt;
&lt;li&gt;  Data from your internal databases&lt;/li&gt;
&lt;li&gt;  Data from your warehouses and data lakes (and...lakehouses)&lt;/li&gt;
&lt;li&gt;  Data from internal event streams (like Kafka).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When all of those sources are also destinations, almost every combination of source and destination is a use case, which creates some important categories of tooling in the customer data stack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  App to warehouse/SaaS (event streaming)&lt;/li&gt;
&lt;li&gt;  SaaS to the warehouse ('traditional' ETL/ELT)&lt;/li&gt;
&lt;li&gt;  Warehouse to SaaS (new 'reverse ETL' category)&lt;/li&gt;
&lt;li&gt;  SaaS to SaaS (API to API category)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Increasingly, those categories within the stack need to support important use cases that are becoming standard but are still challenging for many companies to implement from a technical standpoint:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Enabling customer-facing ML use-cases by sending live events to a key-value store (like Redis) for real-time personalization&lt;/li&gt;
&lt;li&gt;  Enabling internal ML use-cases by pulling data, enriching ML, then sending it from the warehouse to tools for internal teams (i.e., Salesforce, Marketo, etc.)&lt;/li&gt;
&lt;li&gt;  Streaming internal events from Kafka to SaaS applications&lt;/li&gt;
&lt;li&gt;  Feeding transformed data (features) to feature stores (like Tecton)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you step back and look at those categories and the use cases they must support, it becomes clear that a business could easily have to build or buy a significant number of technologies to enable all of the functionality. In fact, we hear from companies all of the time about the pain of managing multiple technologies and vendors (which means contracts) across data pipelines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/feed/update/urn:li:activity:6770012325396262912?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A6770012325396262912%2C6770136342476263424%29/"&gt;One commenter&lt;/a&gt; on Astasia's LinkedIn post said it this way:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"I think we have failed as technologists if we need to build different tools to load data into a warehouse and get data out of the warehouse. This is "focus on doing one thing well" and "you must create a new category" gone too far."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We agree. Customers tell us all of the time that when it comes to managing pipelines in the context of the modern data stack, "best of breed" is becoming problematic to manage---after all, it's the same customer data.&lt;/p&gt;

&lt;p&gt;At RudderStack, we're building the complete customer data stack for simplified pipeline management, including the reverse ETL component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign up for Free and Start Sending Data
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app. &lt;a href="https://app.rudderlabs.com/signup?type=freetrial/"&gt;Get started&lt;/a&gt;.This post explores the customer data stack of business partner &lt;a href="https://www.pachyderm.com/"&gt;Pachyderm&lt;/a&gt;, which offers a Kubernetes-based ETL (extract, transform, load) tool of the same name. We'll show how Pachyderm leverages real-time customer event data across different sources to gain deeper insights into user behavior in its product and optimize the UX to increase customer adoption.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pachyderm"&gt;
  &lt;/a&gt;
  What is Pachyderm?
&lt;/h2&gt;

&lt;p&gt;Pachyderm &lt;a href="https://thenewstack.io/pachyderm-aims-displace-hadoop-container-based-collaborative-data-analysis-platform/"&gt;was designed&lt;/a&gt; to make building and managing end-to-end ML/AI pipelines easier, regardless of their size and complexity. With Pachyderm, you can track your data lineage and bring together version control for your data with the tools, languages, and frameworks of your choice to build scalable data science pipelines.&lt;/p&gt;

&lt;p&gt;With Pachyderm, there are three easy ways to get up and running with your data science pipelines. You can either deploy Pachyderm in your local environment, on your favorite cloud provider, or use the company's hosted and fully-managed SaaS platform: &lt;a href="https://hub.pachyderm.com/"&gt;Pachyderm Hub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-pachyderm-uses-its-data"&gt;
  &lt;/a&gt;
  How Pachyderm uses its Data
&lt;/h2&gt;

&lt;p&gt;Being a modern data science platform, all the teams within Pachyderm make extensive use of data for all their operations and KPIs. The customer team at Pachyderm uses their customer event data --- collected, routed, and warehoused with RudderStack Event Stream --- to understand user behavior and product usage patterns better. They also use this data to drive effective inbound and outbound marketing campaigns.&lt;/p&gt;

&lt;p&gt;Pachyderm uses product usage data --- again collected, routed, and warehoused with RudderStack Event Stream --- from within the Pachyderm Hub, its SaaS platform, for product analytics and optimizing the platform. They then leverage their event stream and product usage data along with non-event data from their cloud tools like Salesforce, HubSpot, Zendesk, Slack, and Google Analytics --- collected and warehoused with tools like Fivetran and Stitch.&lt;/p&gt;

&lt;p&gt;With a unique combination of customer event data, product usage data, and data from customer tools, along with modern data storage and processing tools, Pachyderm has set up a robust, powerful stack to leverage unlimited data for all activation use-cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pachyderms-customer-data-stack"&gt;
  &lt;/a&gt;
  Pachyderm's Customer Data Stack
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Data Collection and Synchronization: RudderStack SDKs, RudderStack Event Stream, RudderStack Warehouse Actions, Stitch, Fivetran&lt;/li&gt;
&lt;li&gt;  Data Warehouse: Google BigQuery&lt;/li&gt;
&lt;li&gt;  Data Processing and Business Intelligence: Sigma Computing&lt;/li&gt;
&lt;li&gt;  Cloud Toolset for Activation Use-cases: HubSpot, Google Analytics, Zendesk, Salesforce, Outreach.io&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-data-flows-through-the-pachyderm-stack"&gt;
  &lt;/a&gt;
  How Data Flows Through the Pachyderm Stack
&lt;/h3&gt;

&lt;p&gt;Here's a visual representation of the data flow through Pachyderm's data stack:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQd4lGnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0vg5o3f7r7c11e42ciz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQd4lGnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0vg5o3f7r7c11e42ciz.png" alt="Pachyderm pipelines" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pachyderm pipelines&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-collection"&gt;
  &lt;/a&gt;
  Data Collection
&lt;/h3&gt;

&lt;p&gt;Pachyderm generates hundreds of gigabytes of data through tracking user interactions and data from cloud sources. All of this data resides in the customer data lake built on top of their data warehouse, Google BigQuery.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-streaming-and-warehousing"&gt;
  &lt;/a&gt;
  Data Streaming and Warehousing
&lt;/h3&gt;

&lt;p&gt;Pachyderm teams mainly use customer event data to track user journeys and trigger various downstream use-cases (such as marketing campaigns). They use &lt;a href="https://rudderstack.com/?utm_content=inline-mention/"&gt;RudderStack&lt;/a&gt; Event Stream to route event data to downstream destinations such as &lt;a href="https://rudderstack.com/integration/hubspot/"&gt;HubSpot&lt;/a&gt; and &lt;a href="https://rudderstack.com/integration/google-analytics/"&gt;Google Analytics&lt;/a&gt; and their data warehouse &lt;a href="https://rudderstack.com/integration/bigquery/"&gt;Google BigQuery&lt;/a&gt;. RudderStack's seamless integration with these platforms allows them to stream near real-time events for their activation use-cases.&lt;/p&gt;

&lt;p&gt;To track and capture event data on their web app, Pachyderm uses the &lt;a href="https://docs.rudderstack.com/rudderstack-sdk-integration-guides/rudderstack-javascript-sdk/"&gt;RudderStack JavaScript SDK&lt;/a&gt;. For server-side capturing, it uses the &lt;a href="https://docs.rudderstack.com/rudderstack-sdk-integration-guides/rudderstack-go-sdk/"&gt;RudderStack Go SDK&lt;/a&gt;. In addition to the SDKs, Pachyderm also uses the &lt;a href="https://docs.rudderstack.com/rudderstack-api-spec/http-api-specification/"&gt;RudderStack HTTP API tracking&lt;/a&gt; for seamless recording and capturing of customer events.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"RudderStack has given us better access to our data. Our data was siloed in cloud sources. Now we have it all in a warehouse, making it accessible to everyone."\&lt;br&gt;
--- Dan Baker, Marketing Ops Manager, Pachyderm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#data-from-its-saas-platform-and-cloud-tools"&gt;
  &lt;/a&gt;
  Data from Its SaaS Platform and Cloud Tools
&lt;/h3&gt;

&lt;p&gt;Apart from customer events, Pachyderm collects data from Pachyderm Hub, its SaaS platform. This data mainly includes the customers' workspace usage details and other metrics related to the platform usage and performance. Pachyderm clusters (which host both their open-source and enterprise offerings) also generate a large chunk of the workspace usage data. This data is processed by &lt;a href="https://webhookrelay.com/"&gt;Webhook Relay&lt;/a&gt; and streamed directly into the company's data warehouse.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"With RudderStack, there are fewer moving pieces. Having RudderStack means that we don't have to have a bunch of manual processes or APIs that we have to build for and support ourselves."\&lt;br&gt;
--- Dan Baker, Marketing Ops Manager, Pachyderm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pachyderm also pulls different types of data from a variety of cloud sources. Some of these include marketing data from HubSpot, customer and CRM data from tools like Salesforce and Zendesk, messaging data from Slack, advertisement and campaign data from tools like Google Ads, and insights from Google Analytics. To collect this data, Pachyderm uses popular ETL tools like Fivetran and Stitch.&lt;/p&gt;

&lt;p&gt;All of this information is useful for stitching together comprehensive customer profiles and understanding Pachyderm's in-product behavior.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-transformation-and-business-intelligence"&gt;
  &lt;/a&gt;
  Data Transformation and Business Intelligence
&lt;/h3&gt;

&lt;p&gt;Once the data is in its data warehouse, Pachyderm uses &lt;a href="https://www.sigmacomputing.com/"&gt;Sigma&lt;/a&gt; --- warehouse-focused analytics and BI tool --- for internal reporting and metrics tracking. Beyond general BI, it also uses Sigma to build queries, join tables, and aggregate the data stored from various sources, to give a single source of truth for customers.&lt;/p&gt;

&lt;p&gt;This transformed data is materialized in BigQuery for storage. The software then uses RudderStack Warehouse Actions to send this transformed data from the warehouse to downstream destinations like HubSpot.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;*"*We already have a bunch of uses for Warehouse Actions, and we're only at the tip of the iceberg. Our future plans involve getting more data insights out of the warehouse, and Warehouse Actions will continue to be our go-to solution for this."\&lt;br&gt;
--- Dan Baker, Marketing Ops Manager, Pachyderm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#data-activation-usecases"&gt;
  &lt;/a&gt;
  Data Activation Use-Cases
&lt;/h3&gt;

&lt;p&gt;The way Pachyderm uses transformed data for the activation use-cases is quite interesting. All the customer event data and data coming from the apps and systems is primarily used for lead qualification and analyzing customer journeys and behavior.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lead-qualification"&gt;
  &lt;/a&gt;
  Lead Qualification
&lt;/h3&gt;

&lt;p&gt;When a user first signs up on Pachyderm, the first course of action suggested is to create a workspace. Pachyderm's customer team encourages this action with drip emails. Once the user has created a workspace, an event is sent from the application backend to their data warehouse.&lt;/p&gt;

&lt;p&gt;The team then uses Sigma to determine the total number of workspaces created and workspaces created since the last run and materialize this data on the data warehouse. This information is then sent back to HubSpot with RudderStack Warehouse Actions. Once in HubSpot --- the inbound lead system --- this data is synced with Salesforce --- the outbound lead system. After the behavioral data from the application has made its way into their CRM, they use Outreach.io to drive their personalized messaging and email campaigns, and (in this example) they stop sending drip emails to a user that has created a workspace.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Getting aggregated event data into HubSpot and Salesforce is key for our Sales team to be able to effectively communicate with our customers."\&lt;br&gt;
--- Dan Baker, Marketing Ops Manager, Pachyderm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#customer-journey-and-behavior-analysis"&gt;
  &lt;/a&gt;
  Customer Journey and Behavior Analysis
&lt;/h3&gt;

&lt;p&gt;With event data captured across various customer touchpoints, the Pachyderm teams can now understand their customer's product journey and pinpoint any issues. They also get deeper insights into how their users are using the platform and optimize those specific aspects of the product to improve their customer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simplified-data-access-and-no-data-silos"&gt;
  &lt;/a&gt;
  Simplified Data Access and No Data Silos
&lt;/h2&gt;

&lt;p&gt;Before incorporating RudderStack into their customer data stack, the team at Pachyderm had to do any plumbing in HubSpot to move the data around the data warehouse. This, in turn, created a lot of data silos. They looked at other customer data platforms to solve these problems, but the cost was unjustifiable given what they were getting in return.&lt;/p&gt;

&lt;p&gt;With RudderStack now a core component of their customer data stack, Pachyderm can get all the event data into a centralized location --- the data warehouse --- to be used efficiently for analytics. In addition, RudderStack Warehouse Actions sends insights from the analysis to downstream tools for lead qualification and personalized marketing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign up for Free and Start Sending Data
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app. &lt;a href="https://app.rudderlabs.com/signup?type=freetrial/"&gt;Get started&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>datapipeline</category>
      <category>pachyderm</category>
      <category>customerevents</category>
      <category>eventdata</category>
    </item>
    <item>
      <title>Top 15 Java Frameworks to Use in 2022</title>
      <author>Devesh Chauhan</author>
      <pubDate>Tue, 30 Nov 2021 10:17:11 +0000</pubDate>
      <link>https://dev.to/deveshchauhan04/top-15-java-frameworks-to-use-in-2022-69c</link>
      <guid>https://dev.to/deveshchauhan04/top-15-java-frameworks-to-use-in-2022-69c</guid>
      <description>&lt;p&gt;At a Java development project, you'll have plenty of options to choose from when it comes to frameworks. You might have heard of some, and others may be new to you, but the fact that there are so many available makes it hard to figure out which one might be best for your team or project.&lt;/p&gt;

&lt;p&gt;In this guide, we'll walk you through fifteen of the best Java frameworks currently available, so you can analyze &amp;amp; determine which one will work best with your needs. In no particular order:&lt;/p&gt;

&lt;p&gt;Here’s the list:&lt;br&gt;
Spring &lt;br&gt;
JSF &lt;br&gt;
Struts&lt;br&gt;
Hibernate&lt;br&gt;
Vaadin &lt;br&gt;
Play &lt;br&gt;
Dropwizard&lt;br&gt;
Blade &lt;br&gt;
Jersey &lt;br&gt;
OSGi &lt;br&gt;
GWT &lt;br&gt;
Spark&lt;br&gt;
Vert. x&lt;br&gt;
Richfaces&lt;br&gt;
Primefaces&lt;/p&gt;

&lt;p&gt;Let’s explore them in detail&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-top-15-java-frameworks"&gt;
  &lt;/a&gt;
  List of Top 15 Java Frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Spring Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--09Be1bkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni95ld49lrv4w4qml9ss.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09Be1bkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni95ld49lrv4w4qml9ss.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Developed by SpringSource, Spring is an application framework that Rod Johnson wrote with flexibility in mind. Unlike many other frameworks before it, Spring wasn't explicitly designed for one type of application or development style. &lt;/p&gt;

&lt;p&gt;Instead, it's adaptable enough to work across different architectures and types of applications. To achieve its flexibility, Spring gives developers a wide range of programming options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Spring Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lightweight Framework&lt;/li&gt;
&lt;li&gt;Flexible libraries&lt;/li&gt;
&lt;li&gt;Powerful abstractions to JEE specifications&lt;/li&gt;
&lt;li&gt;Declarative support&lt;/li&gt;
&lt;li&gt;Dependency injection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Spring Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Deleo Korea&lt;/li&gt;
&lt;li&gt;Zalando&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Java Server Faces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YF5NaMYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u57jg5goo4rovq7a43n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YF5NaMYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u57jg5goo4rovq7a43n.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This framework, built by Sun Microsystems, was once used to create interactive web applications for desktop users. Later on, the development team scaled it down to suit mobile device technology. It is used to construct dynamic HTML user interfaces that are very similar to desktop applications. &lt;/p&gt;

&lt;p&gt;The functionality of these systems includes custom commands and page navigation capabilities, known as action commands. JSF is currently one of four standards included in Enterprise Development Projects under Oracle Development environments.&lt;/p&gt;

&lt;p&gt;It creates a standardized approach to many projects on different devices with different operating systems. These include mobile phones, standard computers, and extensive business servers with complex operating system structures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of JSF Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highly pluggable&lt;/li&gt;
&lt;li&gt;Robust event handling&lt;/li&gt;
&lt;li&gt;Rich managing architecture&lt;/li&gt;
&lt;li&gt;Render kit support&lt;/li&gt;
&lt;li&gt;Multiple vendor implementations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Top brands using JSF Framework:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scopeland Technology&lt;/li&gt;
&lt;li&gt;Deutsche Kreditbank&lt;/li&gt;
&lt;li&gt;Insoft.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. Struts Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyxebjjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7r8mjo63tro2k1vx9ql.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyxebjjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7r8mjo63tro2k1vx9ql.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Apache Struts is an open-source application framework for developing Java EE web applications. It was initially created by Craig McClanahan and donated to the Apache Software Foundation in 2000.&lt;/p&gt;

&lt;p&gt;Struts combine MVC design pattern, convention over configuration, and architecture-neutral API, thus reducing the development time of java business applications built on it. Struts are widely used for enterprise portal solutions, serving as a server-side component of JavaServer Faces (JSF). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Struts Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MVC structure&lt;/li&gt;
&lt;li&gt;Centralized configuration&lt;/li&gt;
&lt;li&gt;Good documentation&lt;/li&gt;
&lt;li&gt;Faster development&lt;/li&gt;
&lt;li&gt;Built-in capabilities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Top brands using Struts Framework&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coinatstar&lt;/li&gt;
&lt;li&gt;Spookies&lt;/li&gt;
&lt;li&gt;Aspen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Hibernate Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6V8dkRG5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2lofzl7bhufky0c25lh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6V8dkRG5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2lofzl7bhufky0c25lh.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Hibernate (sometimes called Hibernate ORM) is an object-relational mapping (ORM) framework for JVM-based programming languages. Hibernate provides database abstraction and gives your applications a uniform data access layer, making it possible to swap databases without having to rewrite every line of code that uses them.&lt;/p&gt;

&lt;p&gt;It also provides lazy loading of related data, cache support, primary key generation, and more. To start using Hibernate, you have to specify which database you're using in your application configuration file, then write Java classes that represent your tables in terms of objects with methods for storing/retrieving information from/to those objects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Hibernate Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-source&lt;/li&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Fast performance&lt;/li&gt;
&lt;li&gt;Simplifies complex joins&lt;/li&gt;
&lt;li&gt;Database independent query&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Top brands using Hibernate Framework:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wealthsimple&lt;/li&gt;
&lt;li&gt;Trade Republic&lt;/li&gt;
&lt;li&gt;Ataccama ONE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. Vaadin Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSEki1Fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt11apwg7t9rvh5pge9e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSEki1Fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xt11apwg7t9rvh5pge9e.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
The Vaadin framework is a client-side, open-source web application framework that is compatible with all major browsers. It is built on top of Google Web Toolkit and thus delivers rich features in a fast and reliable way. While it mainly makes modern web applications and business dashboards, it can also create animated desktop applications in Java.&lt;/p&gt;

&lt;p&gt;Available under the LGPL license, Vaadin brings in many benefits to both businesses and individual developers. The wide range of supported browsers enables you to reach larger audiences. At the same time, its unique UI components give you plenty of opportunities to add high-quality design elements to your apps. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Vaadin Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fully object-oriented&lt;/li&gt;
&lt;li&gt;Plug-in supports&lt;/li&gt;
&lt;li&gt;Smooth integration&lt;/li&gt;
&lt;li&gt;Multiple components &amp;amp; layouts&lt;/li&gt;
&lt;li&gt;Gentle learning curve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Vaadin Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Motorola&lt;/li&gt;
&lt;li&gt;JPMorgan Chase&lt;/li&gt;
&lt;li&gt;Dell&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;6. Play Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4bdkY4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxitbhtifazy53797bce.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4bdkY4I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxitbhtifazy53797bce.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Play is a high-productivity web framework for Java and Scala. Play is based on a lightweight, stateless, web-friendly architecture. Built on Akka, Play provides predictable and minimal resource consumption (CPU, memory, threads) for highly-scalable applications.&lt;/p&gt;

&lt;p&gt;Leveraging both HTTP and HTML5 WebSockets, Play Framework offers developers an easy way to build scalable real-time apps in Java &amp;amp; Scala. For that purpose, it takes care of many low-level details such as connection management and protocol implementation so you can focus on business logic instead of dealing with infrastructure code.&lt;/p&gt;

&lt;p&gt;And thanks to its reactive programming model, Play provides developers with tools for asynchronous programming in a simple manner, so your code remains clean when it comes to event handlers &amp;amp; callbacks without much boilerplate or repetition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Play Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Stateless&lt;/li&gt;
&lt;li&gt;Web-friendly&lt;/li&gt;
&lt;li&gt;Highly scalable&lt;/li&gt;
&lt;li&gt;Minimal resource consumption&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Play Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;LinkedIn&lt;/li&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Glovo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;7. Dropwizard Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaKV_DkK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s85wrm3o9f86m7bwrhyr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaKV_DkK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s85wrm3o9f86m7bwrhyr.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Dropwizard is a new framework that helps you build simple, high-performance, RESTful web services with minimal effort. It borrows ideas from other frameworks and packages them together in a simple, coherent whole. If you are familiar with JUnit or Maven, then you will feel right at home using Dropwizard.&lt;/p&gt;

&lt;p&gt;The code samples are available in both Java and Scala. Don't worry if you are not familiar with either of these languages because it should not take long to become acclimated to them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Dropwizard Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supports multiple independent libraries&lt;/li&gt;
&lt;li&gt;Ops-friendly&lt;/li&gt;
&lt;li&gt;Highly modular&lt;/li&gt;
&lt;li&gt;High performance&lt;/li&gt;
&lt;li&gt;Rapid prototyping&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Top brands using Dropwizard Framework:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CRED&lt;/li&gt;
&lt;li&gt;Upwork&lt;/li&gt;
&lt;li&gt;Rent the Runway&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;8. Blade Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyiSak8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07j6ptt2nvdztse4bm7r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyiSak8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07j6ptt2nvdztse4bm7r.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
The Blade is a minimal, open-source framework for creating modern web apps using Groovy on top of any Servlet container. The Blade extends Groovy with support for annotations and domain-specific languages that make it easy to build highly expressive APIs quickly.&lt;/p&gt;

&lt;p&gt;At its core, Blade is inspired by Spring MVC's template model but also allows developers to leverage Groovy features like builders, meta-programming, AST transformations, and dependency injection to improve productivity without sacrificing power or performance dramatically.&lt;/p&gt;

&lt;p&gt;It provides full support for annotation-based or convention-over-configuration style development with an intuitive DSL that allows you to create dynamic HTML views directly from your controller code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Blade Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;MVC framework&lt;/li&gt;
&lt;li&gt;Robust pattern&lt;/li&gt;
&lt;li&gt;Highly modular&lt;/li&gt;
&lt;li&gt;Zero invasive receptors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Blade Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Meatier&lt;/li&gt;
&lt;li&gt;Vapor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;9. Jersey Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4EdDfK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1r0azgw9m9ykw4yidku.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4EdDfK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1r0azgw9m9ykw4yidku.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Jersey is a lightweight framework that makes it easy to build RESTful web services. It gets used in several high-profile projects, including Twitter's Bootstrap, Google App Engine, etc. Jersey also provides a simple JAX-RS client API for in-browser applications or other clients that access &lt;a href="https://www.pixelcrayons.com/web-development/java-web-development?utm_source=dev-to&amp;amp;utm_medium=java-web-development&amp;amp;utm_campaign=DC-AR"&gt;Java web development services&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The complete source code for Jersey is available under an Apache 2 open source license, and there are no runtime dependencies on third-party libraries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Jersey Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lightweight&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open-source&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fast performance&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Personal APIs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additional features &amp;amp; Toolkits&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Jersey Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bodybuilding.com&lt;/li&gt;
&lt;li&gt;SnapEngage&lt;/li&gt;
&lt;li&gt;Neko&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;10. OSGi (Open Service Gateway Initiative)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mOAWBQe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ixwzukx0aui29l7rqag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mOAWBQe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ixwzukx0aui29l7rqag.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
While other popular frameworks, such as Spring and Hibernate, we can't talk about modern Java frameworks without discussing OSGi. If you've been into Java development for a while, you've probably heard about OSGi. It is one of the most influential &amp;amp; flexible open-source frameworks for developing distributed applications.&lt;/p&gt;

&lt;p&gt;The underlying framework allows components to communicate with each other in very flexible ways by enabling them to publish services for others to consume. This functionality has made it extremely popular among developers over time and makes it one of our top 15 best java frameworks list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of OSGI Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supports rapid project development&lt;/li&gt;
&lt;li&gt;Rapid testing&lt;/li&gt;
&lt;li&gt;Service-oriented architecture&lt;/li&gt;
&lt;li&gt;Facilitates quick modifications &lt;/li&gt;
&lt;li&gt;Creates portable applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using OSGI Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Liferay&lt;/li&gt;
&lt;li&gt;Business File Manager&lt;/li&gt;
&lt;li&gt;SYSTHEMIS AG&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;11. GWT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWsowEfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg523pzn8twiw3pwzrfa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWsowEfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jg523pzn8twiw3pwzrfa.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Google Web Toolkit (GWT) is a set of tools that allow you to use your favorite programming language to quickly build complex web applications without having to worry about configuring servers or writing JavaScript code. It also allows for high-speed development by compiling .java files into .gwt.HTML pages at run time. &lt;/p&gt;

&lt;p&gt;Google Web Toolkit is handy when you're building AJAX applications with your favorite IDE—like IntelliJ IDEA, Eclipse, NetBeans, and more. GWT was initially designed for Google's internal use, but it was released as an open-source tool under Apache 2.0 license in 2006.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of GWT Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creates highly responsive web apps&lt;/li&gt;
&lt;li&gt;Built-in IDE support&lt;/li&gt;
&lt;li&gt;Standard Java static code&lt;/li&gt;
&lt;li&gt;Optimizes generated code&lt;/li&gt;
&lt;li&gt;Generates cross-browser code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Top brands using GWT Framework&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SnapEngage&lt;/li&gt;
&lt;li&gt;Whatfix&lt;/li&gt;
&lt;li&gt;Navatom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;12. Spark Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hZFOxWEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wclptldxy44tr10up39j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hZFOxWEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wclptldxy44tr10up39j.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Apache Spark is a modern, lightning-fast framework that allows developers to work in a multi-paradigm and build fast and efficient programs in various languages such as Scala, Java, and Python. It has diverse functionalities in machine learning and data analysis, streaming data, etc., with high performance on Hadoop and non-Hadoop environments.&lt;/p&gt;

&lt;p&gt;Additionally, Spark has high flexibility for Hadoop users because of its compatibility with other powerful technologies such as SQL and NoSQL databases. It enables programming in JVM languages such as Scala or Java with support for structured sources like Hive tables or SQL databases through RDD (Resilient Distributed Datasets).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Spark Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High processing speed&lt;/li&gt;
&lt;li&gt;Powerful Analytics&lt;/li&gt;
&lt;li&gt;Advance libraries&lt;/li&gt;
&lt;li&gt;Low-latency in-memory data processing capability&lt;/li&gt;
&lt;li&gt;Supports dynamic development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Spark Framework: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Revolut.&lt;/li&gt;
&lt;li&gt;Payjinn.&lt;/li&gt;
&lt;li&gt;AfricanStockPhoto.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;13. Vert. x&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVzhtVSR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qjlowgcpug39xmn0zse.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVzhtVSR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qjlowgcpug39xmn0zse.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Vert. x is a tool for creating reactive web applications in Java and Scala. You can also use it to replace RESTful calls with no network latency, ideal for data streaming applications, NoSQL databases, and large-scale distributed systems. &lt;/p&gt;

&lt;p&gt;Vert. x gives you all you need to build an event-driven application, allowing you to develop using asynchronous non-blocking input/output (NIO) APIs by utilizing many frameworks such as Netty or Jetty. &lt;/p&gt;

&lt;p&gt;The Framework itself abstracts away thread management and synchronization issues, giving you a more straightforward way to work with concurrency issues in your code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Vert. x Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Event-driven runtime&lt;/li&gt;
&lt;li&gt;High performance&lt;/li&gt;
&lt;li&gt;Scalable apps&lt;/li&gt;
&lt;li&gt;Reduces overheads&lt;/li&gt;
&lt;li&gt;Well suited to modern apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Top brands using Vert. x: *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bitpanda&lt;/li&gt;
&lt;li&gt;Trade Republic&lt;/li&gt;
&lt;li&gt;Braincube&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;14. Richfaces Framework&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKX00RW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug3ywo8bsdcgk2rmiw0x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKX00RW0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ug3ywo8bsdcgk2rmiw0x.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
Richfaces is a popular Ajax-based UI framework incorporating many industry standards into its design, making it very attractive to developers. It supports rich AJAX for web pages, 3D charts and graphs, drag-and-drop capabilities, sortable lists, and data grids with live updates. &lt;/p&gt;

&lt;p&gt;As a complete MVC solution, Richfaces works well with many Java applications. Since Richfaces is an open-source project hosted on Google Code, developers are encouraged to contribute to its development by reviewing existing code or submitting their additions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Richfaces Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open-source &lt;/li&gt;
&lt;li&gt;Adds ajax capabilities to JSF&lt;/li&gt;
&lt;li&gt;Enhances UI&lt;/li&gt;
&lt;li&gt;Facilitates custom rich components&lt;/li&gt;
&lt;li&gt;Multiple libraries&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;15. PrimeFaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OCdE1QSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnykvmiol2kmjuvhywxh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OCdE1QSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnykvmiol2kmjuvhywxh.jpg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;br&gt;
PrimeFaces is an open-source, highly customizable JSF (JavaServer Faces) UI component suite for building rich internet applications. PrimeFaces library includes 140+ UI components. It's easy to use, mobile-ready and tested across all major browsers with complete documentation.&lt;/p&gt;

&lt;p&gt;The latest version of PrimeFaces is 5.1, released on July 9, 2017, along with seven more bug fixes and improvements since the previous release of the 5.0 version. Just like other frameworks available on the Java ecosystem, it's an extensible framework using a plugin system that employs more than 20 open source libraries like jQuery or Google Guava.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advantages of PrimeFaces Framework&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Open-source&lt;/li&gt;
&lt;li&gt;Adds Ajax capabilities to JSF&lt;/li&gt;
&lt;li&gt;Good Documentation&lt;/li&gt;
&lt;li&gt;Multiple libraries&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Final Words&lt;/strong&gt;&lt;br&gt;
It's clear that there are many different frameworks for &lt;a href="https://www.pixelcrayons.com/hire-Java-developers?utm_source=dev-to&amp;amp;utm_medium=hire-java-developers&amp;amp;utm_campaign=DC-AR"&gt;Java developers&lt;/a&gt; to use, but one stands out above all others. Spring offers developers a flexible environment that helps them build robust applications that can scale quickly as your company grows. Spring Framework 4 was recently released and brought many improvements over version 3.&lt;/p&gt;

&lt;p&gt;For example, it's possible to write code once and run it on both Servlet containers and Web servers using the new JavaServer Faces technology introduced in version 4.&lt;/p&gt;

&lt;p&gt;Also, with dependency injection to manage dependencies between classes, you can make adjustments easier by simply adding or removing components without disrupting existing logic.&lt;/p&gt;

&lt;p&gt;Because of these features, we've decided to give Spring Framework 4 our highest recommendation as to the best Framework for creating enterprise-level web applications with Java.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Question: What is a framework?&lt;br&gt;
Answer: A software framework is an abstraction in which software providing generic functionality can be selectively changed by additional user-written code, thus offering application-specific software.&lt;br&gt;
Programs written in a low-level language, such as C, often lack pre-existing software libraries that provide proper functionality. In other cases, programmers may find it challenging to utilize existing libraries because of political reasons or simply a compatibility issue with different library versions.&lt;br&gt;
In both cases, using a framework allows one to develop applications without reinventing or customizing core services or common infrastructure. &lt;/p&gt;

&lt;p&gt;Question: How can I choose the best Java Framework? &lt;br&gt;
Answer: The purpose of a framework is to simplify development by standardizing components that are complex or time-consuming to create. Developers can focus on what makes their application unique rather than reinventing wheels every time they start a new project. &lt;br&gt;
Each Framework has its strengths &amp;amp; weaknesses, but here are some things you should consider when making your choice: platform support, community, accessibility, documentation, ease of use, longevity, and maintenance. &lt;br&gt;
Some frameworks work better for enterprise applications, while others are more appropriate for smaller businesses with fewer technical resources. A few aren't even geared toward business applications at all - they're targeted for use in particular markets like gaming or robotics.&lt;/p&gt;

&lt;p&gt;When it comes to using frameworks, ask yourself these questions: &lt;/p&gt;

&lt;p&gt;What does it bring to my team? &lt;br&gt;
Do I have time for it? &lt;br&gt;
Is my current process streamlined enough to make room for another framework? &lt;br&gt;
And finally, if you're looking into new technology or processes in general (even something simple like replacing an older printer with a newer one), talk with your team and get their buy-in before implementing anything new.&lt;/p&gt;

&lt;p&gt;Question: How many Java frameworks are there?&lt;br&gt;
Answer: There are more than 30 frameworks for the Java programming language. However, most of them are compatible with other programming languages besides Java.&lt;/p&gt;

&lt;p&gt;Question: Why have frameworks become an invincible part of the development projects?&lt;br&gt;
Answer: A framework is a way to structure your code. It's a sort of skeleton, with all of its joints already put together for you. If you're working on a non-web project, several good frameworks for various languages will help keep your code organized and help you develop more quickly.&lt;br&gt;
In my experience, they also enable teams of developers to work together more effectively by providing a standard set of protocols and procedures across each member. &lt;/p&gt;

&lt;p&gt;Question: Is Spring an open-source framework?&lt;br&gt;
Answer: Yes, Spring is an open-source framework. The project was created by Rod Johnson in 1999 and hosted on SourceForge. It went fully open source in 2005, after which it quickly became one of the most popular frameworks for enterprise applications development. And since then, it has only enhanced its relevance and popularity within organizations both large and small. &lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>framework</category>
      <category>javaframeworks</category>
    </item>
  </channel>
</rss>
