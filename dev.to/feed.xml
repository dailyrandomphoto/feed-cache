<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Budibase is live on Product Hunt and out of beta</title>
      <author>Budibase</author>
      <pubDate>Tue, 16 Nov 2021 08:02:46 +0000</pubDate>
      <link>https://dev.to/budibase/budibase-is-live-on-product-hunt-and-out-of-beta-1p3n</link>
      <guid>https://dev.to/budibase/budibase-is-live-on-product-hunt-and-out-of-beta-1p3n</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUDebSW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89f9buwaz68822igv4k4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUDebSW2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89f9buwaz68822igv4k4.gif" alt="Budibase design section gif" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Budibase is an open source low code platform for creating beautiful business apps in minutes.&lt;/p&gt;

&lt;p&gt;Here is a link to the Product Hunt post if you are interested in checking out our new promo video, graphics, and comments. Feedback/support appreciated. &lt;a href="https://www.producthunt.com/posts/budibase"&gt;Visit Budibase on Product Hunt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, Budibase is now out of beta. You can get started with Budibase in just a few seconds. &lt;a href="https://budibase.com"&gt;Visit website&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>CSS Animation Simplified!</title>
      <author>Ansub Khan</author>
      <pubDate>Tue, 16 Nov 2021 07:52:27 +0000</pubDate>
      <link>https://dev.to/ansub/css-animation-simplified-2g0i</link>
      <guid>https://dev.to/ansub/css-animation-simplified-2g0i</guid>
      <description>&lt;p&gt;CSS animations are a module that lets you animate the element which changes the element from one style to another. and to use the CSS animation we use &lt;code&gt;@keyframes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;before talking about animation, let us make two boxes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;.parent{}&lt;/code&gt; - this is going to create a box &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;.child{}&lt;/code&gt; - this is going to create a small box inside the parent.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: container class is here to make the box come to the center for easier visibility.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"child"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;214&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;124&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uydFkQQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx7rtl1em520hr7cu9fi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uydFkQQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx7rtl1em520hr7cu9fi.png" alt="css-animation-box" width="836" height="888"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transition-property"&gt;
  &lt;/a&gt;
  Transition Property
&lt;/h3&gt;

&lt;p&gt;let's move our box from left to right, for that we don't have to use the animation and keyframe property because the animation of moving a box from left to right is quite simple easy and a one-step process. because the object is moving from left to right that's it.&lt;/p&gt;

&lt;p&gt;so that's why we use transition property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="n"&gt;ease-in&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this is going to make to move the child box from left to right when you are going to hover on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/0rmw6M3h"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57KFKJ3q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/DfpdM1cf/7065468b160fdfdcf3cb3cc4ad9eb96bf5349b3b.gif" alt="7065468b160fdfdcf3cb3cc4ad9eb96bf5349b3b.gif" width="862" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;syntax of transition property is like:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;transition&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;transition-property&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;transition-duration&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;transition-timing-function&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;transition-delay&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;transition property&lt;/strong&gt; : it is used to specify which specific property you have to change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;transition-duration&lt;/strong&gt;: this determines the duration of the transition&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;transition-timing-function&lt;/strong&gt;: this is used to define a function that describes how a transition will proceed over its duration, allowing a transition to change speed during its course. learn more about &lt;a href="https://css-tricks.com/almanac/properties/t/transition-timing-function/"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;transition-duration&lt;/strong&gt;: it is used to define a length of time to delay the start of a transition.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;&lt;strong&gt;but what if we want to make the child circle around the parent box?&lt;/strong&gt;&lt;br&gt;
now here comes the role of &lt;code&gt;animation&lt;/code&gt; property&lt;/p&gt;

&lt;p&gt;animation also has a lot of properties but we can use a shorthand &lt;code&gt;animation&lt;/code&gt; to include all the properties. so let's get started:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.child&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;left-to-right&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;ease-in&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;left-to-right&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="err"&gt;30&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="err"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;first you will see that the animation actually has a name "left-to-right" and then i am using that same name in the keyframe. this is to determine that animation is going to apply on that exact keyframes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;second is that you will find forwards, it actually comes from &lt;code&gt;animation-fill-mode&lt;/code&gt; property which is actually saying that you have to stop the animation at 100% otherwise what animation is going to do is that it will reset the animation when it will reach to 100% and the box will come again to 0%.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#subproperties-of-animation"&gt;
  &lt;/a&gt;
  Sub-Properties of Animation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;animation-name&lt;/strong&gt;: declares the name of the @keyframes at-rule to manipulate.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-duration&lt;/strong&gt;: the length of time it takes for an animation to complete one cycle.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-timing-function&lt;/strong&gt;: establishes preset acceleration curves such as ease or linear.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-delay&lt;/strong&gt;: the time between the element being loaded and the start of the animation sequence (cool examples).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-direction&lt;/strong&gt;: sets the direction of the animation after the cycle. Its default resets on each cycle.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-iteration-count&lt;/strong&gt;: the number of times the animation should be performed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-fill-mode&lt;/strong&gt;: sets which values are applied before/after the animation.
For example, you can set the last state of the animation to remain on screen, or you can set it to switch back to before when the animation began.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animation-play-state&lt;/strong&gt;: pause/play the animation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and this will be the result: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/BtpGCsjN"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4nHysMf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/X7S74Y4M/ezgif-6-cc307b2c5c6b.gif" alt="ezgif-6-cc307b2c5c6b.gif" width="600" height="557"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;so that's CSS Animation for you, this is actually quite the basics of animation there is a lot more to CSS Animations, I will provide some links which can help you become a PRO in CSS Animations:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://css-tricks.com/almanac/properties/a/animation/"&gt;CSS Tricks Animation Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=zHUpx90NerM&amp;amp;ab_channel=TraversyMedia"&gt;CSS3 Animation &amp;amp; Transitions Crash Course&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect With Me!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/justansub"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opAxX3tY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Twitter-1DA1F2%3Fstyle%3Dfor-the-badge%26logo%3Dtwitter%26logoColor%3Dwhite" width="100" height="28"&gt; &lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://ansubkhan.com"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QhRPtQbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/website-000000%3Fstyle%3Dfor-the-badge%26logo%3DAbout.me%26logoColor%3Dwhite" width="104" height="28"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/ansub"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imBRhTaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-0077B5%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite" width="107" height="28"&gt; &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ansub"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K6IT_-ba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/dev.to-0A0A0A%3Fstyle%3Dfor-the-badge%26logo%3Ddevdotto%26logoColor%3Dwhite" width="93" height="28"&gt; &lt;/a&gt; &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Build a Discord stage channel clone with 100ms and Next.js</title>
      <author>Arpit Mishra</author>
      <pubDate>Tue, 16 Nov 2021 07:26:30 +0000</pubDate>
      <link>https://dev.to/100mslive/build-a-discord-stage-channel-clone-with-100ms-and-nextjs-5heb</link>
      <guid>https://dev.to/100mslive/build-a-discord-stage-channel-clone-with-100ms-and-nextjs-5heb</guid>
      <description>&lt;p&gt;Ever since the Clubhouse app rose to fame, the popularity of drop-in audio-only rooms has been increasing sharply and adopted by several platforms such as Slack, Twitter, and Discord. These rooms are great for hosting Q&amp;amp;A sessions, panel discussions, and a lot more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This content was originally published - &lt;a href="https://www.100ms.live/blog/build-discord-stage-channel-clone-hms"&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Earlier this year, Discord introduced Stages, an audio-only channel to engage with your Discord community with separation between speakers and audience. In this blog, we’ll learn how to build a similar platform painlessly with 100ms.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-well-be-building"&gt;
  &lt;/a&gt;
  What We’ll Be Building
&lt;/h4&gt;

&lt;p&gt;Using the 100ms React SDK, we’ll build our custom audio room application that will mimic these features from Discord &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stages:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Allow the user to join as a speaker, listener, or a moderator.&lt;br&gt;
Speakers and moderators will have the permission to mute or unmute themselves.&lt;/p&gt;

&lt;p&gt;Listeners will only be able to listen to the conversation, raise their hand to become a speaker, or leave the room.&lt;br&gt;
Moderators will be allowed to mute anyone and change the role of a person to speaker or listener.&lt;/p&gt;

&lt;p&gt;By the end of this blog, you can expect to build an application like this with Next.js (a React framework) and 100ms SDK:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aXTeoyAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsusqlmrfdblvkcqswih.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXTeoyAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsusqlmrfdblvkcqswih.gif" alt="How this would look" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The only prerequisites for building this project is a fundamental understanding of Next.js and React hooks. The Next.js documentation is a great place to start reading about how Next.js works, but you can still follow along if you’ve only used React in the past.&lt;/p&gt;

&lt;p&gt;Familiarity with Flux-based architecture is a bonus but not a necessity, and no prior knowledge of WebRTC is required. How wonderful is that!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  Setting up the Project
&lt;/h4&gt;

&lt;p&gt;Before diving right into the code, create a 100ms account from the 100ms Dashboard to get your &lt;code&gt;token_endpoint&lt;/code&gt; and &lt;code&gt;room_id&lt;/code&gt;. We’ll be needing these credentials in the later stages of building the application.&lt;/p&gt;

&lt;p&gt;Once you’ve created an account, follow the steps given below to create your application and set it up on the 100ms dashboard:&lt;/p&gt;

&lt;p&gt;Defining Roles&lt;/p&gt;

&lt;p&gt;We’ll be having four roles in our application: &lt;code&gt;listener&lt;/code&gt;, &lt;code&gt;speaker&lt;/code&gt;, &lt;code&gt;handraise&lt;/code&gt;, and &lt;code&gt;moderator&lt;/code&gt;. Let’s set up permissions for each of these roles, starting with the listener role.&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;listener&lt;/code&gt; role, we can turn off all the publish strategies as we don’t want listeners to share their audio, video, or screen. Listeners will still be able to listen to others’ audio.&lt;/p&gt;

&lt;p&gt;Inside the permissions section, uncheck all the options except for &lt;code&gt;Can change any participant's role permission&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dV615aiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uw4ads5vonfkmlnqlpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dV615aiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uw4ads5vonfkmlnqlpq.png" alt="Second image" width="880" height="1188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;handraise&lt;/code&gt; role, we can again turn off all the publish strategies and just keep the &lt;code&gt;Can change any participant's role&lt;/code&gt; permission turned on. This permission will allow us to switch the user from &lt;code&gt;listener&lt;/code&gt; role to handraise role, and vice-versa, and help us to to implement the hand-raise functionality.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_xOdTXo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otruy82btlufdml1hlbd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_xOdTXo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otruy82btlufdml1hlbd.png" alt="Third image" width="880" height="1186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a &lt;code&gt;listener&lt;/code&gt; wants to become a &lt;code&gt;speaker&lt;/code&gt;, they can click on the hand-raise button that will change their role to &lt;code&gt;handraise&lt;/code&gt;. When the user's role is &lt;code&gt;handraise&lt;/code&gt;, we'll display a small badge next to their avatar to notify the moderator.&lt;/p&gt;

&lt;p&gt;Now for the &lt;code&gt;speaker&lt;/code&gt; role, since we’re building an audio-only room, we can just check the &lt;code&gt;Can share audio&lt;/code&gt; publish strategy and leave the rest of them unchecked. We can leave all the permissions turned off for the &lt;code&gt;speaker&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZa31Qi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gmispxcr8aqfsrjousl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZa31Qi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gmispxcr8aqfsrjousl.png" alt="Fourth Image" width="880" height="1187"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, for the &lt;code&gt;moderator&lt;/code&gt; role, we can check the Can share audio publish strategy and move on towards the permissions. In the permissions section, turn on the &lt;code&gt;Can change any participant's role&lt;/code&gt; permission and the &lt;code&gt;Can mute any participant&lt;/code&gt; permission.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oLipxbcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn32dt1rz0thbwwzjf9k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLipxbcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hn32dt1rz0thbwwzjf9k.png" alt="Fifth Image" width="880" height="1186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For all the roles, set the subscribe strategies to &lt;code&gt;speaker&lt;/code&gt; and &lt;code&gt;moderator&lt;/code&gt;. And with that, we’re ready to move on and get the required credentials from the 100ms Dashboard.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#getting-the-tokenenpoint"&gt;
  &lt;/a&gt;
  Getting the token_enpoint
&lt;/h5&gt;

&lt;p&gt;Once you’re done creating your custom application and setting up the roles, head on over to the &lt;a href="https://dashboard.100ms.live/developer"&gt;Developers tab&lt;/a&gt; to get your token endpoint URL. Keep this URL handy. We’ll store this URL inside an environment variable shortly in the upcoming sections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYpIx3Zs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ozec8p0as5z6cst03nvu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYpIx3Zs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ozec8p0as5z6cst03nvu.png" alt="Sixth Image" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#getting-the-raw-roomid-endraw-"&gt;
  &lt;/a&gt;
  Getting the &lt;code&gt;room_id&lt;/code&gt;
&lt;/h5&gt;

&lt;p&gt;To obtain the room ID, head on over the &lt;a href="https://dashboard.100ms.live/rooms"&gt;Rooms tab&lt;/a&gt; on 100ms Dashboard. If you don’t have an existing room, you can go ahead and create one to get its ID. Otherwise, copy the room ID of an existing room and paste it somewhere for now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvZMpbKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qonnhlp9ny6vvqqqenlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvZMpbKz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qonnhlp9ny6vvqqqenlg.png" alt="Seventh Image" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#understanding-the-terminologies"&gt;
  &lt;/a&gt;
  Understanding the Terminologies
&lt;/h5&gt;

&lt;p&gt;I know you’re excited to start coding, but let’s take a moment to understand the key terminologies associated with the 100ms SDK so that we’re on the same page.&lt;/p&gt;

&lt;p&gt;Room — A room is the basic object that 100ms SDKs return on successful connection. This contains references to peers, tracks and everything you need to render a live audio/video app.&lt;/p&gt;

&lt;p&gt;Peer — A peer is the object returned by 100ms SDKs that contains all information about a user — name, role, video track etc.&lt;/p&gt;

&lt;p&gt;Track — A track represents either the audio or video that a peer is publishing.&lt;/p&gt;

&lt;p&gt;Role — A role defines who a peer can see/hear, the quality at which they publish their video, whether they have permissions to publish video/screenshare, mute someone, change someone’s role.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#an-overview-of-the-starter-code"&gt;
  &lt;/a&gt;
  An Overview of the Starter Code
&lt;/h5&gt;

&lt;p&gt;To ease the development process, you can grab the starter code with prebuilt components and styling by cloning the &lt;code&gt;template&lt;/code&gt; branch of this repo with this command:&lt;/p&gt;

&lt;p&gt;This starter code is built using the Create Next App CLI tool with the Tailwind CSS template. All the dependencies required for this building this project, such as the &lt;code&gt;@100mslive/hms-video&lt;/code&gt; and &lt;code&gt;@100mslive/hms-video-react&lt;/code&gt; SDK have already been added to the &lt;code&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Therefore, make sure to run &lt;code&gt;npm install&lt;/code&gt; or &lt;code&gt;yarn install&lt;/code&gt; to install these dependencies locally before moving forward.&lt;/p&gt;

&lt;p&gt;Remember the token endpoint URL and room ID we had saved earlier? It’s time to transfer them to an environment variable file. The starter code comes with an &lt;code&gt;.env.local.example&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Run this command to copy this example env file and create an actual one:&lt;br&gt;
Now, add the token endpoint URL and room ID to this &lt;code&gt;.env.local&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;To start the Next.js development server, run the &lt;code&gt;dev&lt;/code&gt; script in this manner:&lt;/p&gt;

&lt;p&gt;Visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000&lt;/a&gt; on your browser and you’ll be greeted with this screen if everything goes well:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZJ1nMWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6m40ttx6d10b74uu0cuy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZJ1nMWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6m40ttx6d10b74uu0cuy.png" alt="Eigth Image" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fantastic! Let’s start implementing the features one by one in the upcoming sections.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#building-the-project"&gt;
  &lt;/a&gt;
  Building the project
&lt;/h5&gt;

&lt;p&gt;Before we can start using the hooks, selectors, or store from the 100ms React SDK, we will need to wrap our entire application with &lt;code&gt;&amp;lt;HMSRoomProvider /&amp;gt;&lt;/code&gt; component from the &lt;code&gt;@100mslive/hms-video-react package&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here’s how your code should look like once you’ve completed this step:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#joining-a-room"&gt;
  &lt;/a&gt;
  Joining a Room
&lt;/h5&gt;

&lt;p&gt;Right now, we’re conditionally rendering either the &lt;code&gt;&amp;lt;Room /&amp;gt;&lt;/code&gt; component or the &lt;code&gt;&amp;lt;Join /&amp;gt;&lt;/code&gt; component based on the isConnected variable. However, its value has been hardcoded to be false for now.&lt;/p&gt;

&lt;p&gt;To check if the user is connected to a room or not, we can use the &lt;code&gt;selectIsConnectedToRoom&lt;/code&gt; selector and &lt;code&gt;useHMSStore&lt;/code&gt; hook like this:&lt;/p&gt;

&lt;p&gt;By default, the user will not be connected to any room, and hence, the &lt;code&gt;&amp;lt;Join /&amp;gt;&lt;/code&gt; component will be rendered. Let’s implement the functionality to join a room inside the &lt;code&gt;components/Join.jsx file&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To join a room, we can use the join() method on the &lt;code&gt;hmsActions&lt;/code&gt; object returned by the &lt;code&gt;useHMSActions() hook&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;This &lt;code&gt;join(&lt;/code&gt;) method takes an object containing the userName, authToken and an optional settings object as the parameter.&lt;/p&gt;

&lt;p&gt;We can get the &lt;code&gt;userName&lt;/code&gt; from the local &lt;code&gt;name&lt;/code&gt; state variable created using the &lt;code&gt;useState()&lt;/code&gt; hook from React. However, to obtain the &lt;code&gt;authToken&lt;/code&gt;, we will need to make a network request to our custom Next.js API route along with the role we want to join the room with.&lt;/p&gt;

&lt;p&gt;We’re also tracking the role the user has selected using the local role state variable, similar to &lt;code&gt;name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can find the API route inside the &lt;code&gt;pages/api/token.js&lt;/code&gt; file. Here’s how it will look like:&lt;/p&gt;

&lt;p&gt;Essentially, this API route makes a &lt;code&gt;POST&lt;/code&gt; request to our 100ms &lt;code&gt;token endpoint URL&lt;/code&gt;, which is stored inside the environment variables, along with a unique &lt;code&gt;user_id&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, and the &lt;code&gt;room_id&lt;/code&gt;, which is also stored inside the environment variables.&lt;/p&gt;

&lt;p&gt;If successful, our Next.js API route will return the &lt;code&gt;authToken&lt;/code&gt;. Using this &lt;code&gt;authToken&lt;/code&gt;, we can join the &lt;code&gt;room&lt;/code&gt;. Since we don’t want the user to join with their mic turned on, we can set &lt;code&gt;isAudioMuted&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; inside the optional settings object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECf2npn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fucux02tmf02t55p9gcb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECf2npn9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fucux02tmf02t55p9gcb.gif" alt="Ninth image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And with just a few lines of code, we have implemented the functionality to join a room and render the &lt;code&gt;&amp;lt;Room /&amp;gt;&lt;/code&gt; component. Now, let’s move forward and render the peers connected to our room.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#rendering-the-peers"&gt;
  &lt;/a&gt;
  Rendering The Peers
&lt;/h5&gt;

&lt;p&gt;Right now, if you view the &lt;code&gt;&amp;lt;Room /&amp;gt;&lt;/code&gt; component inside the &lt;code&gt;components/Room.jsx&lt;/code&gt; file, you can see that we have hardcoded the value of peers to an empty array.Let’s make this dynamic.&lt;/p&gt;

&lt;p&gt;To do that, we can use the &lt;code&gt;selectPeers selector&lt;/code&gt; combined with the &lt;code&gt;useHMSStore()&lt;/code&gt; hook to get an array of all the peers connected to the room in the form of objects. Each of these peer objects will contain information such as their &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;roleName&lt;/code&gt; that we can use to render their tiles accordingly.&lt;/p&gt;

&lt;p&gt;Once we get an array of all the peers, we can use the &lt;code&gt;filter()&lt;/code&gt; JavaScript array method to separate them into &lt;code&gt;listenersAndHandraised&lt;/code&gt; and &lt;code&gt;speakersAndModerators&lt;/code&gt; using the &lt;code&gt;roleName&lt;/code&gt; property on each peer object. This will help us render the appropriate tile based on the user’s role.&lt;/p&gt;

&lt;p&gt;If the role of the user is a &lt;code&gt;listener&lt;/code&gt; or &lt;code&gt;handraise&lt;/code&gt;, we will render the &lt;code&gt;&amp;lt;ListenerTile /&amp;gt;&lt;/code&gt; component. Else, we will render the &lt;code&gt;&amp;lt;SpeakerTile /&amp;gt;&lt;/code&gt; component. While rendering these tiles, pass the &lt;code&gt;peer&lt;/code&gt; object as a prop in order to display the peer’s information inside the tiles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKV9Qbbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clv1bfvvhnd87j3m60o7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKV9Qbbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clv1bfvvhnd87j3m60o7.gif" alt="Tenth Image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;RoomInfo /&amp;gt;&lt;/code&gt; component takes a count prop with the total number of peers connected to the rooms as its value. For the speakers and listeners headings, we can access the length property of &lt;code&gt;speakersAndModerators&lt;/code&gt; and &lt;code&gt;listenersAndHandraised&lt;/code&gt; array, respectively, to get their count.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#adding-functionalities-to-the-controls"&gt;
  &lt;/a&gt;
  Adding Functionalities To The Controls
&lt;/h5&gt;

&lt;p&gt;Let’s go to the &lt;code&gt;&amp;lt;Controls /&amp;gt;&lt;/code&gt; component inside &lt;code&gt;components/Room/Controls.jsx&lt;/code&gt;. Essentially, we will be having three controls: one to toggle our mic on or off, one to toggle hand-raise, and lastly to leave the room. We'll cover the hand-raise functionality in the latter part of this blog post.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;MicButton /&amp;gt;&lt;/code&gt; component responsible for the toggle mic functionality will only be displayed to the speakers and moderators whereas, the &lt;code&gt;&amp;lt;ExitButton /&amp;gt;&lt;/code&gt; component will be displayed to all roles.&lt;/p&gt;

&lt;p&gt;We need to check if our role and if our mic is turned on or not to render the buttons accordingly. To do this, use the &lt;code&gt;selectIsLocalAudioEnabled&lt;/code&gt; selector to get the status of our mic, and the &lt;code&gt;selectLocalPeer&lt;/code&gt; selector to get our local peer object.&lt;/p&gt;

&lt;p&gt;Now, to add the functionalities, start by creating a new instance of the &lt;code&gt;useHMSActions()&lt;/code&gt; hook and store it inside &lt;code&gt;hmsActions&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Call the &lt;code&gt;setLocalAudioEnabled()&lt;/code&gt; method on the &lt;code&gt;hmsActions&lt;/code&gt; object inside the &lt;code&gt;toggleMic&lt;/code&gt; prop of the &lt;code&gt;&amp;lt;MicButton /&amp;gt;&lt;/code&gt; component. &lt;/p&gt;

&lt;p&gt;This method takes a boolean value: &lt;code&gt;true&lt;/code&gt; for turning on the mic and &lt;code&gt;false&lt;/code&gt; for turning it off. Since we want to toggle, we can pass the opposite of current status using the ! operator.&lt;br&gt;
To exit the room, we can simply call the &lt;code&gt;leave()&lt;/code&gt; method on the &lt;code&gt;hmsActions&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t92BwPFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jv3q4hd66px6tcjq63pu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t92BwPFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jv3q4hd66px6tcjq63pu.gif" alt="Eleventh Image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#displaying-audio-level-and-mic-status"&gt;
  &lt;/a&gt;
  Displaying Audio Level and Mic Status
&lt;/h5&gt;

&lt;p&gt;When a user is speaking, we want to display a green ring just outside the user’s avatar to indicate the same. This will require us to know the audio level of the speaker, but how can we find that out? With 100ms React SDK, it is as simple as using the &lt;code&gt;selectPeerAudioByID&lt;/code&gt; selector.&lt;/p&gt;

&lt;p&gt;This selector function takes the peer’s ID as the parameter and returns an integer to represent the audio level. We can assign it to a variable and check if it is greater than 0 to check if the user is speaking.&lt;/p&gt;

&lt;p&gt;Similarly, to check if a user’s mic is turned on or not, we can use the &lt;code&gt;selectIsPeerAudioEnabled&lt;/code&gt; selector, which also takes the peer’s ID as the parameter and returns a boolean value to indicate the mic status.&lt;/p&gt;

&lt;p&gt;Using these two selectors, we can render the UI accordingly by adding a ring using Tailwind CSS classes and displaying the appropriate icon. Go to the &lt;code&gt;&amp;lt;SpeakerTile /&amp;gt;&lt;/code&gt; component inside &lt;code&gt;components/User/SpeakerTile.jsx&lt;/code&gt; and make the following changes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYtfUnU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b9ajee54gk3j511twhy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYtfUnU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9b9ajee54gk3j511twhy.gif" alt="Twelth Image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#the-permissions-menu"&gt;
  &lt;/a&gt;
  The Permissions Menu
&lt;/h5&gt;

&lt;p&gt;Time to add some functionality to the &lt;code&gt;&amp;lt;PermissionsMenu /&amp;gt;&lt;/code&gt; component inside the &lt;code&gt;components/User/PermissionsMenu.jsx&lt;/code&gt; file. We want to display this menu only if we have the &lt;code&gt;moderator&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;To get our &lt;code&gt;localPeer&lt;/code&gt; object, we can use the &lt;code&gt;selectLocalPeer&lt;/code&gt; selector function. This will return an object with the &lt;code&gt;roleName&lt;/code&gt; property that we can check to get our role. &lt;/p&gt;

&lt;p&gt;Alternatively, you can also choose to use the &lt;code&gt;selectLocalPeerRole&lt;/code&gt; selector and access the &lt;code&gt;name&lt;/code&gt; property of the returned object.&lt;/p&gt;

&lt;p&gt;To check if we are a &lt;code&gt;moderator&lt;/code&gt;, use the &lt;code&gt;===&lt;/code&gt; equality operator to check if our &lt;code&gt;roleName&lt;/code&gt; equates to &lt;code&gt;moderator&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Accordingly, we can either render this component, or null if we’re not a &lt;code&gt;moderator&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The permissions menu has three options: &lt;code&gt;Mute Peer&lt;/code&gt;, &lt;code&gt;Make Listener&lt;/code&gt;, and &lt;code&gt;Make Speaker&lt;/code&gt;. To achieve these functionalities, create a new instance of the &lt;code&gt;useHMSActions()&lt;/code&gt; hook to get access to all the required methods.&lt;/p&gt;

&lt;p&gt;For muting a peer, call the &lt;code&gt;setRemoteTrackEnabled()&lt;/code&gt; method on &lt;code&gt;hmsActions&lt;/code&gt; with the peer’s audio track (that we’re getting from the props) and &lt;code&gt;false&lt;/code&gt; as parameters.&lt;/p&gt;

&lt;p&gt;To change the role of a peer, call the &lt;code&gt;changeRole()&lt;/code&gt; method on &lt;code&gt;hmsActions&lt;/code&gt; along with the peer’s ID, new role, and a force boolean value to change their role without asking them or give them a chance to accept/reject.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0MkWdcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxguxobu8boukwi8nsr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0MkWdcle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilxguxobu8boukwi8nsr.gif" alt="Thirteenth Image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#adding-handraise-functionality"&gt;
  &lt;/a&gt;
  Adding Hand-Raise Functionality
&lt;/h5&gt;

&lt;p&gt;Finally, let’s add the last bit of functionality to our application: &lt;code&gt;hand-raise&lt;/code&gt;. As a &lt;code&gt;listener&lt;/code&gt;, you might also want a chance to become a speaker at times. To notify the &lt;code&gt;moderator&lt;/code&gt;, we can build a simple hand-raise button that will display a badge next to your avatar to show that you're interested to speak.&lt;/p&gt;

&lt;p&gt;Therefore, start by building the functionality to change our role from &lt;code&gt;listener&lt;/code&gt; to &lt;code&gt;handraise&lt;/code&gt; on clicking the &lt;code&gt;&amp;lt;HandRaiseButton /&amp;gt;&lt;/code&gt; component. &lt;/p&gt;

&lt;p&gt;To do this, go back to the &lt;code&gt;&amp;lt;Controls /&amp;gt;&lt;/code&gt; component inside &lt;code&gt;components/Room/Controls.jsx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Over here, you’ll notice the &lt;code&gt;&amp;lt;HandRaiseButton /&amp;gt;&lt;/code&gt; component with 2 props: a &lt;code&gt;isHandRaised&lt;/code&gt; boolean prop to check if you've raised hand currently and a &lt;code&gt;toggleHandRaise&lt;/code&gt; function to toggle it. Also, we'll display this button only if we are a &lt;code&gt;listener&lt;/code&gt; or have &lt;code&gt;handraise&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;For the &lt;code&gt;isHandRaised&lt;/code&gt; prop, we simply need to get our role by accessing the &lt;code&gt;roleName&lt;/code&gt; property of our local peer and check if it equates to the &lt;code&gt;handraise&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;For the toggle functionality, we can use the &lt;code&gt;changeRole()&lt;/code&gt; method available on the &lt;code&gt;hmsActions&lt;/code&gt; object like we did for the &lt;code&gt;&amp;lt;PermissionsMenu /&amp;gt;&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;changeRole()&lt;/code&gt; method takes our local peer's ID, the new role to set, and a force boolean prop. For the new role, if we are a &lt;code&gt;listener&lt;/code&gt; currently, we need to pass &lt;code&gt;handraise&lt;/code&gt; as the parameter. If we already have the role of &lt;code&gt;handraise&lt;/code&gt;, we need to set it back to listener.&lt;/p&gt;

&lt;p&gt;Here’s how your code should look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x71fc1MX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k12tcza7dynn49vpyujp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x71fc1MX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k12tcza7dynn49vpyujp.gif" alt="Fourteenth Image" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The starter code already contains the code to display a hand-raise badge in the &lt;code&gt;&amp;lt;ListenerTile /&amp;gt;&lt;/code&gt; component. Inside this component, we just need to check if the peer's role is set to &lt;code&gt;handraise&lt;/code&gt; and then conditionally render the &lt;code&gt;&amp;lt;HandRaiseBadge /&amp;gt;&lt;/code&gt; accordingly.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#and-thats-a-wrap"&gt;
  &lt;/a&gt;
  And That’s a Wrap!
&lt;/h5&gt;

&lt;p&gt;Building real-time audio application with 100ms SDK is as simple as that. I hope you enjoyed building this app, and make sure to drop by the 100ms Discord Server in case of any queries.&lt;/p&gt;

&lt;p&gt;We can’t wait to see all the marvelous projects you build with 100ms. Till then, happy coding!&lt;/p&gt;

&lt;p&gt;Check 100ms Now -&amp;gt; &lt;a href="https://www.100ms.live/blog/build-discord-stage-channel-clone-hms"&gt;https://www.100ms.live/blog/build-discord-stage-channel-clone-hms&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Need an IndieHackers invite code!</title>
      <author>Virej Dasani</author>
      <pubDate>Tue, 16 Nov 2021 07:08:49 +0000</pubDate>
      <link>https://dev.to/virejdasani/need-an-indiehackers-invite-code-3l43</link>
      <guid>https://dev.to/virejdasani/need-an-indiehackers-invite-code-3l43</guid>
      <description>&lt;p&gt;If you have a code, I'd appreciate it if you can send me one:&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/virejdasani"&gt;@virejdasani&lt;/a&gt;
 on twitter&lt;br&gt;
&lt;a href="https://twitter.com/VirejDasani"&gt;https://twitter.com/VirejDasani&lt;/a&gt;&lt;br&gt;
Thanks a lot!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>gamedev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Customer Data Pipeline And Data Processing: Types, Importance, And Benefits</title>
      <author>RudderStack</author>
      <pubDate>Tue, 16 Nov 2021 07:06:16 +0000</pubDate>
      <link>https://dev.to/rudderstack/customer-data-pipeline-and-data-processing-types-importance-and-benefits-9k4</link>
      <guid>https://dev.to/rudderstack/customer-data-pipeline-and-data-processing-types-importance-and-benefits-9k4</guid>
      <description>&lt;p&gt;A data pipeline consists of actions that ingest raw data from various sources and move the data to a storage and analysis destination. This post will look at what a customer data pipeline is and a few of its key elements. We will further talk about the different types of data processing taking place within the data pipeline.&lt;/p&gt;

&lt;p&gt;Business analysis deeply depends on data pipelines, which are essential for any online venture. Given the voluminous amount of data today, the need for managing and storing the data s drastically heightened.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-an-automated-pipeline"&gt;
  &lt;/a&gt;
  Why Use An Automated Pipeline?
&lt;/h2&gt;

&lt;p&gt;A data pipeline is an automated process, but why do we need it in the first place?&lt;/p&gt;

&lt;p&gt;Data pipelines take the role of arranging all data volumes in the same format and one place, thus reproducible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-elements-of-a-data-pipeline"&gt;
  &lt;/a&gt;
  Key Elements Of A Data Pipeline
&lt;/h2&gt;

&lt;p&gt;A data pipeline represents a data preparation process based on a few key elements - &lt;em&gt;source, destination, dataflow, processing, workflow, and monitoring.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Data pipelines enable application or data lake information to travel to a data warehouse or an analytics database, respectively.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#source"&gt;
  &lt;/a&gt;
  Source
&lt;/h3&gt;

&lt;p&gt;A data source is a place from where the pipeline retrieves information. These can include cloud-based customer tools (&lt;a href="https://rudderstack.com/integration/salesforce-source/"&gt;Salesforce&lt;/a&gt;, &lt;a href="https://rudderstack.com/integration/facebook-ads-source/"&gt;Facebook Ads&lt;/a&gt;, &lt;a href="https://rudderstack.com/integration/google-ads-source/"&gt;Google Ads&lt;/a&gt;, etc.), relational management systems, social media database management tools, and even sensor devices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#destination"&gt;
  &lt;/a&gt;
  Destination
&lt;/h3&gt;

&lt;p&gt;You can enter the data directly in the visual data analysis tools, but this is the data pipeline's endpoint, where it removes all data pulled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dataflow"&gt;
  &lt;/a&gt;
  Dataflow
&lt;/h3&gt;

&lt;p&gt;The raw data can be changed while traveling from its source to its destination- a move also referred to as data flow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-processing"&gt;
  &lt;/a&gt;
  Data Processing
&lt;/h3&gt;

&lt;p&gt;Data processing is a method that enables you to evaluate how data is gathered, transformed, and stored.&lt;/p&gt;

&lt;p&gt;As an important step, data processing in data pipelines chooses whereby you should implement the dataflow. The processing of data includes the extraction of business data from all available sources. Once processed, this data undergoes an inspection and is adjusted to the business user before it is loaded into the data store.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-data-processing"&gt;
  &lt;/a&gt;
  Types Of Data Processing
&lt;/h2&gt;

&lt;p&gt;So, can you make a difference between a data processing system and data processing? Yes, and here's how it works:&lt;/p&gt;

&lt;p&gt;Data processing regards data transformed into beneficial information, whereas a data processing system is an optimized tool for proper data management.&lt;/p&gt;

&lt;p&gt;Some of the basic types of data processing include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transaction-processing"&gt;
  &lt;/a&gt;
  Transaction Processing
&lt;/h3&gt;

&lt;p&gt;The processing of the transaction is deployed in mission-critical situations. If violated, these conditions will negatively affect your business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hardware"&gt;
  &lt;/a&gt;
  Hardware
&lt;/h3&gt;

&lt;p&gt;The system for processing transactions should have redundant hardware. Excess hardware allows partial defects because you can automate the unnecessary components to take the system and maintain it operationally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#software"&gt;
  &lt;/a&gt;
  Software
&lt;/h3&gt;

&lt;p&gt;The software system for processing transactions shall be designed to recover quickly from the defect. Usually, systems for processing transactions use abstraction transactions to achieve this. If there's a failure, uncommitted transactions are interrupted, allowing the system to restart quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#distributed-processing"&gt;
  &lt;/a&gt;
  Distributed Processing
&lt;/h3&gt;

&lt;p&gt;Distributed data processing breaks down these big stores, while data sets across many machines or servers. Data within a distributed processing system has a huge tolerance for slips. When one or two network servers crash in a distributed processing system, the system redistributes the data processing to other remaining servers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#realtime-processing"&gt;
  &lt;/a&gt;
  Real-Time Processing
&lt;/h3&gt;

&lt;p&gt;Real-time processing takes the same approach seen in transaction processing.&lt;/p&gt;

&lt;p&gt;If an error is detected in the input, it ignores it and instead switches to the next piece of incoming data. The most popular application of real-time data processing is GPS tracking apps.&lt;/p&gt;

&lt;p&gt;Batch Processing&lt;/p&gt;

&lt;p&gt;As the name suggests, serial processing happens when pieces of data stored at a certain time are analyzed either together or in batches. Serial processing is required when you need to analyze huge volumes of data for a detailed inspection. As the system handles mass volumes of data, the processing period might take longer to complete. The favored real-time data processing method is serial processing, given that accuracy of information is more significant than the processing speed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiprocessing"&gt;
  &lt;/a&gt;
  Multiprocessing
&lt;/h3&gt;

&lt;p&gt;Multiprocessing is a method in which two or more processors work on the same database. The most obvious drawback of this data processing type is the cost. Keep in mind that building and maintaining internal servers is very expensive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h3&gt;

&lt;p&gt;Workflow usually refers to the sequencing of jobs within the pipeline data, as well as their co-dependence. Here, dependencies and sequencing decide when a data pipeline is operating.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h3&gt;

&lt;p&gt;The final element is monitoring, meaning the pipeline is continually monitored for efficiency and speed to evaluate data accuracy and loss.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-pipeline-and-etl"&gt;
  &lt;/a&gt;
  Data Pipeline And ETL
&lt;/h2&gt;

&lt;p&gt;ETL stands for Extract, Transform and Load, and is a method applied with batch loads regarding particular pipeline data.&lt;/p&gt;

&lt;p&gt;Essentially, this process refers to source data transferring, like an app target, such as a data warehouse.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Data Extraction using various source systems enables an easy acquiring of relevant data from a specific source.&lt;/li&gt;
&lt;li&gt;  Data Transformation applies to the processes of filtering, aggregating, and preparing data for further analysis.&lt;/li&gt;
&lt;li&gt;  Data Loading represents the loading of data into its final destination.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign Up For Free And Start Sending Data
&lt;/h3&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.rudderstack.com/signup?type=freetrial"&gt;Get Started&lt;/a&gt;&lt;/p&gt;

</description>
      <category>datapipeline</category>
      <category>dataprocessing</category>
      <category>customerdata</category>
      <category>privacy</category>
    </item>
    <item>
      <title>Learn JavaScript Closures in 7 mins</title>
      <author>Elijah Trillionz</author>
      <pubDate>Tue, 16 Nov 2021 07:04:03 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/learn-javascript-closures-in-7-mins-324n</link>
      <guid>https://dev.to/elijahtrillionz/learn-javascript-closures-in-7-mins-324n</guid>
      <description>&lt;p&gt;To learn closures, you need to understand how scope works.&lt;/p&gt;

&lt;p&gt;In JavaScript, we have global and local scope.&lt;/p&gt;

&lt;p&gt;Variables declared in the main body are referred to as global scopes. They belong to the global object and can be accessed from anywhere in the code.&lt;/p&gt;

&lt;p&gt;Variables declared in a function are referred to as local scopes. They belong to the function body including its nested functions, and they can access any variable in the global scope.&lt;/p&gt;

&lt;p&gt;If a function is defined inside a function, the parent function will not have access to the variables declared in the child function. But the child function will have access to the variables in the parent function.&lt;/p&gt;

&lt;p&gt;So basically any block of code has access to the variables of its outer scope.&lt;/p&gt;

&lt;p&gt;Here is an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;someone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// has access to x&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firstCall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;incrementFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;secondCall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;incrementFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstCall&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;secondCall&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// does not have access to count i.e console.log(count) will throw an error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Have in mind, that the parameter is a local variable because it's in a local scope. It will get created anew for every call to the &lt;code&gt;incrementFrom&lt;/code&gt; function.&lt;br&gt;
It is basically the same thing as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementNum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// all the calls&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the good news is that local variables will not trample each other when the function is called.&lt;/p&gt;

&lt;p&gt;But the bad news is, with such standard calling &lt;code&gt;incrementFrom(5)&lt;/code&gt; a couple of times will not increment it. It's just going to keep logging 5, because "every local variable is created anew for every call".&lt;/p&gt;

&lt;p&gt;So what if we want to keep making use of the value passed into (or created in) a function for each call to this function. Like in the case of &lt;code&gt;incrementFrom()&lt;/code&gt;, we simply want to get an initial value and increment on it for every call.&lt;/p&gt;

&lt;p&gt;So when I call &lt;code&gt;incrementFrom(3)&lt;/code&gt; 3 times, it will magically increment from 3 to 4, then to 5, and to 6. This is possible with closures.&lt;/p&gt;

&lt;p&gt;Another example is probably to pass in a &lt;code&gt;firstName&lt;/code&gt; of a user to a function, and then later add the &lt;code&gt;lastName&lt;/code&gt; to it. Something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For some reasons, &lt;code&gt;lastName&lt;/code&gt; has not been provided yet, so you make the first call with what you have now&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I don't have it yet&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, the &lt;code&gt;lastName&lt;/code&gt; get's processed, and now you have nowhere in memory with &lt;code&gt;firstName&lt;/code&gt;, so you'll end up doing this to make the second call with the &lt;code&gt;lastName&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;I lost it&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I know, the example is kinda stupid, but the idea is to make two function calls and relate their local variables together. This is possible with closures.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-what-are-closures"&gt;
  &lt;/a&gt;
  Now what are closures?
&lt;/h3&gt;

&lt;p&gt;In Eloquent JavaScript it says "…being able to reference a specific instance of a local binding in an enclosing scope is called closure."&lt;/p&gt;

&lt;p&gt;Simply put, closures are functions that have access to the scope of outer functions even when the outer functions have closed (no longer active).&lt;/p&gt;

&lt;p&gt;That means a child function can make use of any local variable declared in a parent function anytime, even after the parent function has been called and is no longer active.&lt;/p&gt;

&lt;p&gt;The way it works is this, when we create a function with any local variable, the function returns another function (which is a child function), and as stated the child function has access to the variable in the parent function.&lt;/p&gt;

&lt;p&gt;So when the function is called, the value is a function, which can be called. i.e&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;funcVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is just an expression of "functions are what they return", or better expressed as "function as values".&lt;/p&gt;

&lt;p&gt;So when a function that returns a string is called, the properties and methods of strings can be used on that function call. Same thing with numbers, arrays, objects, functions.&lt;/p&gt;

&lt;p&gt;In this case, our function is returning a function, which means the value of the &lt;code&gt;callMe()&lt;/code&gt; function can be called, because it is a function (you can add params and args).&lt;/p&gt;

&lt;p&gt;This is where it gets more interesting...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;newVal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;funcVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've called the &lt;code&gt;callMe()&lt;/code&gt; function once and passed in a value. Now, this value can be used when we call the function it returns. This is closure.&lt;/p&gt;

&lt;p&gt;I can call &lt;code&gt;funcVal()&lt;/code&gt; different times now and it will still have access to the local variable (&lt;code&gt;val&lt;/code&gt;) of the parent function (&lt;code&gt;callMe&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 5 i.e 2 + 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 12 i.e 2 + 10&lt;/span&gt;
&lt;span class="c1"&gt;// we can go on and on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the rule of local variables of a function not trampling themselves on different calls still STANDS, we've only made one call to the parent function &lt;code&gt;callMe&lt;/code&gt;, let's try calling it one more time&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;funcVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;funcVal2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callMe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// local variable (val) will be created anew here with a value of 100.&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 4 i.e 2 + 2&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 110 i.e 100 + 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So basically, it's the function they return that does the magic. Even at that, their local variables are still not trampling each other on different calls&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 5 i.e 2 + 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;funcVal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// local variable (newVal) will be created anew here, but it still has access to the local variables in the outer function. so we get 12 i.e 2 + 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's head back to our initial examples or problems. Let's first solve the name issue.&lt;/p&gt;

&lt;p&gt;Recall we had a function &lt;code&gt;printName&lt;/code&gt; to print a user's first name and last name, but for some reason, the last name will be delayed (and we know about this) so we have to go on without it initially. And then when it finally comes we should print the full name. This is what we'd do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the function has changed a little bit&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the function &lt;code&gt;printName&lt;/code&gt; now takes just one argument (&lt;code&gt;firstName&lt;/code&gt; - the guy we know will not be delayed)&lt;/li&gt;
&lt;li&gt;it (&lt;code&gt;printName&lt;/code&gt;) now returns a function instead of returning a string.&lt;/li&gt;
&lt;li&gt;and the child function takes &lt;code&gt;lastName&lt;/code&gt; (the guy which we know will be delayed) and then returns the full name string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we try logging, it will now make more sense&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// first name comes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// after a while, last name comes&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// John Doe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Voila!! Problem solved using closures. Let's add another user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// first name comes&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// after a while, last name comes&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// John Doe&lt;/span&gt;

&lt;span class="c1"&gt;// new user&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;printName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Michelle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Sarah Michelle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I know there are tons of other ways to solve this, but this is yet another way.&lt;/p&gt;

&lt;p&gt;Now the last example before we call this article a wrap - our counter.&lt;/p&gt;

&lt;p&gt;Recall we had a function &lt;code&gt;incrementFrom&lt;/code&gt; which is in no way incrementing. How do we solve this?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrementFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just one thing changed, we returned a function that returns &lt;code&gt;count + 1&lt;/code&gt; instead of returning just &lt;code&gt;count + 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now let's see if it works&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addOne&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;incrementFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// 7&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// 8&lt;/span&gt;
&lt;span class="c1"&gt;// and on and on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gladly and unsurprisingly, it works!!&lt;/p&gt;

&lt;p&gt;So this is how closures can be very useful in programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Now, this is quite a lot to take in, if it's your first time learning about closures. But when you practice over time it will become clear.&lt;/p&gt;

&lt;p&gt;Thanks for reading to the end, I hope you enjoyed and learned from it as I did. I'll see you next time. But in the meantime, you can leave comments for me to let me know what you think. You can also click the like and share button so we can reach more developers.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Laravel React - Purity Dashboard (Free Product)</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 16 Nov 2021 06:59:18 +0000</pubDate>
      <link>https://dev.to/sm0ke/laravel-react-purity-dashboard-free-product-3laf</link>
      <guid>https://dev.to/sm0ke/laravel-react-purity-dashboard-free-product-3laf</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an open-source full-stack seed project crafted in &lt;a href="https://appseed.us/product/laravel-react-purity-dashboard"&gt;Laravel and React&lt;/a&gt; on top of a pixel-perfect &lt;code&gt;Chakra UI&lt;/code&gt; design: &lt;strong&gt;Purity Dashboard&lt;/strong&gt;. The product can be downloaded and used directly from Github and the permissive license permits unlimited copies and usage for commercial products. For newcomers, &lt;strong&gt;Purity React&lt;/strong&gt; is an innovative design crafted by Creative-Tim and &lt;strong&gt;Laravel&lt;/strong&gt; is a leading web framework written in PHP. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://laravel-react-purity-dashboard.appseed-srv1.com/#/auth/signin"&gt;Laravel React Purity&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/app-generator/laravel-react-purity-dashboard"&gt;Laravel React Purity&lt;/a&gt; - Source code&lt;/li&gt;
&lt;li&gt;🔥 More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - full-stack seed projects&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dXoN3GmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bqykhh3jrjf4mru6e9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dXoN3GmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bqykhh3jrjf4mru6e9f.png" alt="Laravel React - Purity Dashboard." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-the-product"&gt;
  &lt;/a&gt;
  How to use the product
&lt;/h2&gt;

&lt;p&gt;This open-source product can be used in a local environment by typing a few commands in the terminal window. Before trying to compile Laravel React Purity, make sure the workstation has a minimal programming kit to complete the task:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Php 7.4+&lt;/li&gt;
&lt;li&gt;NodeJS 12.x or above&lt;/li&gt;
&lt;li&gt;GIT - command line versioning tool&lt;/li&gt;
&lt;li&gt;A modern code editor like VsCode or Atom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this minimal toolchain is properly installed and accessible in the terminal, we can proceed further and compile the product starting with the backend:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Download the product via GIT&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/laravel-react-purity-dashboard.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The product is built using a two-tier pattern where the React frontend is decoupled logically and physically from the API backend. In order to use the product in a local environment, a few simple steps are required:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Compile and start&lt;/code&gt; the &lt;strong&gt;Laravel API Backend&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Compile and start&lt;/code&gt; the &lt;strong&gt;React UI&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;Optional&lt;/code&gt;) Change the API port exposed by &lt;strong&gt;Laravel&lt;/strong&gt; Codebase&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;Optional&lt;/code&gt;) Configure the API port used by the &lt;strong&gt;React UI&lt;/strong&gt; to communicate with the backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With all the above steps completed, we should see the product running in the browser and being able to register new users, authenticate and interact with the UI.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#compile-and-start-the-api"&gt;
  &lt;/a&gt;
  Compile and Start the API
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;laravel-api
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install Modules&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;composer &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cp&lt;/span&gt; .env.example .env 
&lt;span class="nv"&gt;$ &lt;/span&gt;php artisan key:generate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Generate a `secret` key used by JWT Authentication Flow&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;php artisan jwt:secret
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set up the database&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;database/database.sqlite
&lt;span class="nv"&gt;$ &lt;/span&gt;php artisan migrate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Start the server&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;php &lt;span class="nt"&gt;-S&lt;/span&gt; localhost:5000 server.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, the API should be up &amp;amp; running and we can test it using POSTMAN or &lt;code&gt;curl&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xXs5MQAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzqmckkdyy4yrrhxnu6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xXs5MQAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzqmckkdyy4yrrhxnu6f.png" alt="Laravel API Server - Product Banner." width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#start-the-react-ui"&gt;
  &lt;/a&gt;
  Start the React UI
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-ui
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install Modules&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Start for development (LIVE Reload)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The React UI comes pre-configured to communicate with the backend using the port &lt;code&gt;5000&lt;/code&gt; but we can easily change this via the configuration &lt;code&gt;src/config/constant.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="na"&gt;API_SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:5000/api/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  &lt;span class="c1"&gt;// &amp;lt;-- The magic line&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Once the backend and the frontend are both up &amp;amp; running, we should be able to register new users, authenticate and interact with this nice design. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;React Laravel Purity Dashboard&lt;/code&gt; - Billing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSdhRdZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9g09uyqqmrjw5wxjwnko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSdhRdZC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9g09uyqqmrjw5wxjwnko.png" alt="React Laravel Purity Dashboard - Billing Page." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;React Laravel Purity Dashboard&lt;/code&gt; - RTL Support&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZhYIaTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi0aswh05s5j3k5afa9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZhYIaTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fi0aswh05s5j3k5afa9u.png" alt="React Laravel Purity Dashboard - RTL Support." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;✨ AppSeed for &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://appseed.us/support"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - a curated index with Full-Stack Starters &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>laravel</category>
      <category>react</category>
      <category>opensource</category>
    </item>
    <item>
      <title>tmux or zsh?</title>
      <author>Reza Khademi</author>
      <pubDate>Tue, 16 Nov 2021 06:42:37 +0000</pubDate>
      <link>https://dev.to/rezakhademi/tmux-or-zsh-5432</link>
      <guid>https://dev.to/rezakhademi/tmux-or-zsh-5432</guid>
      <description>&lt;p&gt;This is my first article on &lt;a href="//dev.to"&gt;dev.to&lt;/a&gt;, so go easy on me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tmux"&gt;
  &lt;/a&gt;
  what is tmux?
&lt;/h2&gt;

&lt;p&gt;tmux is an open-source terminal multiplexer for Linux operating  distributions. It allows multiple terminal sessions to be accessed simultaneously in a single window. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-zsh"&gt;
  &lt;/a&gt;
  what is zsh?
&lt;/h2&gt;

&lt;p&gt;on the other hand, ZSH, also called as 'Z Shell', is an extended version of the Bourne Shell (sh), with plenty of new features, and support for plugins and themes. Since it’s based on the same shell as Bash, ZSH has many of the same features, and switching over is a breeze.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-should-choose"&gt;
  &lt;/a&gt;
  what you should choose?
&lt;/h2&gt;

&lt;p&gt;If your editor for developing and coding is vim or sth like that, the best solution for you is tmux because you can always switch between tabs in a breeze and edit the code at the same time.&lt;br&gt;
You should know tmux is very convenient with the vim editor and speeds up your developing.&lt;/p&gt;

&lt;p&gt;But if you are like me and use VSCode as code editor, I recommend you to install zsh and even OhMyZsh to have some great features like: auto suggestion(Not recommended), syntax highlighting and etc.&lt;/p&gt;

&lt;p&gt;So, both of them are great and offer you some helpful features. zsh is more like a handful featured terminal and tmux will bring your editor and terminal at same place to switch simultaneously!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>zsh</category>
      <category>tmux</category>
    </item>
    <item>
      <title>I decreased my average load time by 381ms</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 16 Nov 2021 06:33:49 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/i-decreased-my-average-load-time-by-381ms-4bfc</link>
      <guid>https://dev.to/dailydevtips1/i-decreased-my-average-load-time-by-381ms-4bfc</guid>
      <description>&lt;p&gt;Thanks for stopping by, not just a clickbait title, as I went from an average load time of 507ms to 126ms.&lt;br&gt;
A whopping win of 381ms!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5r9SVc9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636092298213/kKPf4rWUd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5r9SVc9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636092298213/kKPf4rWUd.jpeg" alt="Decreasing my load time from 507ms to 126ms" width="880" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's talk about how this came to be.&lt;/p&gt;

&lt;p&gt;For those who don't know me, I'm a bit obsessed with making my website faster and optimizing whatever I can on it.&lt;/p&gt;

&lt;p&gt;Quite a while ago, I learned that my biggest downfall is Google Analytics. And heck, even a Google product complains about...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NEAfh3eY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636090841782/4RxqPZYs3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NEAfh3eY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636090841782/4RxqPZYs3.png" alt="Pagespeed insights complaining about Gtag" width="660" height="242"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep, this is Pagespeed insights complaining about a google tag. It's just a plain google tag to load your analytics.&lt;/p&gt;

&lt;p&gt;And it slows down your loads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-i-even-need-google-analytics"&gt;
  &lt;/a&gt;
  Do I even need Google Analytics
&lt;/h2&gt;

&lt;p&gt;This whole topic came about when I started to think if I even needed Google Analytics.&lt;/p&gt;

&lt;p&gt;Their numbers are off, as they can be blocked, and it's just vanity metrics for me at the end of the day.&lt;br&gt;
I don't optimize anything based on their numbers. I just get a kick out of looking at the numbers and seeing the site is growing.&lt;/p&gt;

&lt;p&gt;At the time of writing this, I even moved to Cloudflare analytics to test them out.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Inside: So far, they seem to be doing super well and show a more realistic number.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#optimising-the-google-analytics-load"&gt;
  &lt;/a&gt;
  Optimising the Google Analytics load
&lt;/h2&gt;

&lt;p&gt;With that in mind, I thought, why not play around with this google analytics loading to see what we can optimize.&lt;/p&gt;

&lt;p&gt;Everyone on the internet will tell you to place that code in your head.&lt;/p&gt;

&lt;p&gt;And it makes sense because people might close your page before even loading the footer.&lt;/p&gt;

&lt;p&gt;But then realize putting it there slows down your page by a massive 381ms!&lt;br&gt;
Maybe that's &lt;strong&gt;WHY&lt;/strong&gt; they are even leaving in the first place?&lt;/p&gt;

&lt;p&gt;And to be honest, who cares that you didn't track that person who didn't wait on your page to load?&lt;/p&gt;

&lt;p&gt;It's not like Google Analytics is a realistic number of users anyway.&lt;/p&gt;

&lt;p&gt;So I decided to move my implementation.&lt;/p&gt;

&lt;p&gt;Before, I loaded it in the head like everyone else.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZumwgIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636091187957/3rSXK001-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZumwgIl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636091187957/3rSXK001-.png" alt="Google analytics loaded in the head" width="570" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I then placed this code at the last space before closing the body like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owG9poU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636091228307/xlHXZNGUX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owG9poU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636091228307/xlHXZNGUX.png" alt="Screenshot 2021-11-03 at 10.25.18.png" width="726" height="311"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might have spotted I replaced the google tag manager loading to a normal loading of only the analytics as this is all that's loaded anyway.&lt;/p&gt;

&lt;p&gt;And that made a difference!&lt;br&gt;
A 381ms difference.&lt;/p&gt;

&lt;p&gt;This is not based on one load, but an average load of all pages over a week!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Think about your analytics. Do you use it? &lt;br&gt;
Should it be in the head, or can you move it down to make your site faster?&lt;/p&gt;

&lt;p&gt;And if you do, you might lose that odd person that doesn't wait for your website, but who cares? 🤷‍♂️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>analytics</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create your own Github Gist with PHP!</title>
      <author>Posandu </author>
      <pubDate>Tue, 16 Nov 2021 06:16:29 +0000</pubDate>
      <link>https://dev.to/posandu/create-your-own-github-gist-with-php-3p9h</link>
      <guid>https://dev.to/posandu/create-your-own-github-gist-with-php-3p9h</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;If you can read this in &lt;a href="https://www.tronic247.com/create-your-own-github-gist-with-php/?ref=dev.to"&gt;my blog&lt;/a&gt; it's great.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this post, We'll create a site like &lt;a href="https://gist.github.com"&gt;Github Gist&lt;/a&gt; using  PHP, CSS and a 1 line of JavaScript! If you want a preview, you can go to &lt;a href="https://user-images.githubusercontent.com/76736580/139574909-3f9d95dc-1934-4a8a-a0a3-29e216650763.gif"&gt;This link&lt;/a&gt; or see below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.tronic247.com/create-your-own-github-gist-with-php/?ref=dev.to"&gt;Click this link because Dev.to image embed doesn't work&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#collecting-the-stuff-we-need"&gt;
  &lt;/a&gt;
  Collecting the stuff we need
&lt;/h2&gt;

&lt;p&gt;Before we begin, you must have these things.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A local server&lt;/li&gt;
&lt;li&gt;A code editor (I use Visual Studio Code)&lt;/li&gt;
&lt;li&gt;Basic Knowledge of CSS, HTML &amp;amp; PHP&lt;/li&gt;
&lt;li&gt; A MySQL Database&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-files"&gt;
  &lt;/a&gt;
  Creating the files
&lt;/h3&gt;

&lt;p&gt;Now, let's start. The first thing is to do, create the files. The files are,&lt;br&gt;
&lt;code&gt;index.php&lt;/code&gt;  - The index file&lt;br&gt;
&lt;code&gt;config.php&lt;/code&gt; -The configuration file&lt;br&gt;
&lt;code&gt;gist.php&lt;/code&gt; - The gist view/delete file&lt;br&gt;
&lt;code&gt;gists.php&lt;/code&gt; - The file that shows all the gists&lt;br&gt;
&lt;code&gt;styles.css&lt;/code&gt;- The stylesheet&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-database"&gt;
  &lt;/a&gt;
  Creating the database
&lt;/h3&gt;

&lt;p&gt;We will create a database named &lt;code&gt;gists&lt;/code&gt; and create a table named &lt;code&gt;gists&lt;/code&gt;. The table structure will look like this.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;title&lt;/th&gt;
&lt;th&gt;content&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;unique&lt;/td&gt;
&lt;td&gt;mediumtext&lt;/td&gt;
&lt;td&gt;varchar(40)&lt;/td&gt;
&lt;td&gt;unique&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If you are too lazy to create the table, you can use this SQL code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;`gists`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nv"&gt;`title`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;`content`&lt;/span&gt; &lt;span class="nb"&gt;mediumtext&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;`type`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nv"&gt;`id`&lt;/span&gt; &lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ENGINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;InnoDB&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;CHARSET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;utf8mb4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;`gists`&lt;/span&gt;
  &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="nv"&gt;`id`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;`id`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="nv"&gt;`title`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;`title`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;COMMIT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#coding"&gt;
  &lt;/a&gt;
  Coding
&lt;/h2&gt;

&lt;p&gt;And It's time for the coding. We'll first define the database connection constants. Put this in your &lt;code&gt;config.php&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$servername&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="s2"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="s2"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="s2"&gt;"gist"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt;  &lt;span class="nc"&gt;PDO&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"mysql:host=&lt;/span&gt;&lt;span class="nv"&gt;$servername&lt;/span&gt;&lt;span class="s2"&gt;;dbname=&lt;/span&gt;&lt;span class="nv"&gt;$database&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ATTR_ERRMODE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ERRMODE_EXCEPTION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PDOException&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;  &lt;span class="s2"&gt;"&amp;lt;div class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;message error&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;Connection failed: "&lt;/span&gt;  &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;  &lt;span class="s2"&gt;"&amp;lt;/div&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ERROR'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Generate random string function&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;generateRandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$charactersLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$characters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$randomString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$randomString&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$characters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$charactersLength&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$randomString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use &lt;a href="https://www.php.net/manual/en/book.pdo.php"&gt;PDO&lt;/a&gt; because It's easy &amp;amp; secure. &lt;/p&gt;

&lt;p&gt;Then, in all the other PHP files (Not &lt;code&gt;config.php&lt;/code&gt;) put this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE  html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt;  &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;  &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;  &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt;  &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt;  &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt;  &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt;  &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;  &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"styles.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Own Gist&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;  &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="c"&gt;&amp;lt;!-- This is where we put code --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the template we're going to use. And for the CSS, you can style yourself (Edit styles.css) or &lt;a href="https://gist.github.com/Posandu/d0e7809ee513aeaf1bdbc7b5703a35c6"&gt;Go to this link&lt;/a&gt; to get the demo CSS code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-gist-page"&gt;
  &lt;/a&gt;
  Create A New Gist Page
&lt;/h2&gt;

&lt;p&gt;This is the code for the create new gist page. (&lt;code&gt;index.php&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"config.php"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'create'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Please fill all the fields"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"INSERT  INTO gists (`title`, `content`, `type`, `id`)
 VALUES (:title, : content, :type, :id)"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cont&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"2"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"3"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"javascript"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"4"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"php"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xml"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"6"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"jsx"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"c#"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nv"&gt;$tit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nv"&gt;$cont&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;generateRandomString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Gist added"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Location: gist.php?id="&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PDOException&lt;/span&gt; &lt;span class="nv"&gt;$er&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$er&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I'll explain what this code does. First, it checks if &lt;code&gt;$_GET["create"]&lt;/code&gt; , &lt;code&gt;$_GET["title"]&lt;/code&gt; , &lt;code&gt;$_GET["content"]&lt;/code&gt;,&lt;code&gt;$_GET["type"]&lt;/code&gt; is present. Then, it will check if the values are empty. If it's empty, set the &lt;code&gt;$e&lt;/code&gt; variable to &lt;code&gt;true&lt;/code&gt; else it will try to add the data into the database and if there's a error it'll tell the user.&lt;/p&gt;

&lt;p&gt;Now add this inside the &lt;code&gt;#container&lt;/code&gt; of &lt;code&gt;index.php&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ERROR"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"An error occured"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;div class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;message error&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;"&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$m&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/div&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Add new Gist&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"divider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"?create"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"newgist"&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"gist-title"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Title&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gist-title"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"gist-content"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gist-content"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"height: 200px;font-family: monospace;font-size: 15px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"gist-type"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Type&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gist-type"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Plain text&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CSS&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Javascript&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;PHP&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;JSX&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C#&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"divider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Create Gist&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"divider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"divider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"divider"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!---- ----&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"gists.php"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show other gists&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#single-gist-page"&gt;
  &lt;/a&gt;
  Single gist page
&lt;/h2&gt;

&lt;p&gt;And in the &lt;code&gt;gist.php&lt;/code&gt; file, add this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"config.php"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Not Found"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"delete"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'confirm'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"DELETE FROM Gists WHERE `id` = :id"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nb"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Location: gists.php"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PDOException&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Error: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;a href=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;gist.php?delete&amp;amp;id="&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&amp;amp;confirm=true&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;Click to confirm&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;a class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;btn&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; href=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;gist.php?id="&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;Click to go back&amp;lt;/a&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$conn&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT * FROM Gists WHERE `id` = :id"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$_GET&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// set the resulting array to associative&lt;/span&gt;
    &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetchAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Not found"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nv"&gt;$code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PDOException&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Error: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt;&lt;span class="nb"&gt;htmlspecialchars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;sup&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt;&lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/sup&amp;gt;&amp;lt;/h1&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"language-&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt;&lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&amp;amp;lt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"gists.php"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show other gists&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"index.php"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Create Gist&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"gist.php?delete&amp;amp;id=&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?=&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"background: #ab0000;"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And for the end of the body, add this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script  &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.3.1/highlight.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;hljs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;highlightAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, This is all this is all the hard stuff to do. So you can get the code from below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-the-source-code"&gt;
  &lt;/a&gt;
  Get the source code.
&lt;/h2&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/Posandu/gist-php"&gt;https://github.com/Posandu/gist-php&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Decentralized Exchange (DEX) Software Development</title>
      <author>thiago luca</author>
      <pubDate>Tue, 16 Nov 2021 05:46:09 +0000</pubDate>
      <link>https://dev.to/thiagoluca16/decentralized-exchange-dex-software-development-4hp4</link>
      <guid>https://dev.to/thiagoluca16/decentralized-exchange-dex-software-development-4hp4</guid>
      <description>&lt;p&gt;In this article, we will focus on Decentralized exchange software, trying to compare decentralized exchanges vs centralized exchange and make things easier for you to understand the differences.&lt;br&gt;
But first, let’s start with the Types of Cryptocurrency Exchanges.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-cryptocurrency-exchanges"&gt;
  &lt;/a&gt;
  Types of Cryptocurrency Exchanges
&lt;/h2&gt;

&lt;p&gt;• Centralized exchanges.&lt;br&gt;
• Decentralized exchanges.&lt;br&gt;
• Hybrid cryptocurrency exchanges&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#centralized-exchanges"&gt;
  &lt;/a&gt;
  Centralized Exchanges
&lt;/h3&gt;

&lt;p&gt;Let’s put it this way, centralized means that there’s a single point that does all the work involved in any given operation. Their platform needs all the data to enter and leave through a central. This means you can’t send or receive any information without it going through a single point.&lt;br&gt;
Centralized exchange are most known and traditional in the crypto sphere. They are governed by a company that offers the options of both crypto-to-crypto trading and fiat-to-crypto gateway. CEX is a place, where buyers meet sellers on some centralized platform, meaning that someone handles your crypto and is responsible for it. You can use the order books for your trades and in some advanced exchanges even some technical analysis tools.&lt;br&gt;
The biggest advantages are that Centralized exchange is easy to use and has great UI and UX, which go along with the quick response. In some of them, you simply register with your email, write down your password, and you can trade.&lt;br&gt;
Customer support, various trading pairs, and fiat gateways are often offered by Centralized exchanges, and most of the time you can benefit from additional services such as staking, savings opportunities, or IEOs (Initial exchange offers). They also add services known as DeFi. Some of you might ask, what is DeFi in crypto, or what is decentralized finance? In a simple way, those are decentralized instruments that you might know from the banking sector such as lending or borrowing of crypto, but without a middleman.&lt;br&gt;
The most popular centralized exchanges are Binance, Coinbase, and Huobi.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6Z1h8Pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr7e4gl4e4ldk4s7kesp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6Z1h8Pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr7e4gl4e4ldk4s7kesp.png" alt="Decentralized Exchanges" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-exchanges"&gt;
  &lt;/a&gt;
  Decentralized Exchanges
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;&lt;a href="https://radindev.com/decentralized-exchange-software/"&gt;decentralized exchange software&lt;/a&gt;&lt;/strong&gt; is a cryptocurrency exchange that operates in a decentralized way, without a central authority, without relying on a third-party service to hold the customer's funds. Instead, trades occur directly between users (p2p) through an automated process. This system can be achieved by creating proxy tokens (crypto assets that represent a certain fiat or cryptocurrency) or assets (that can represent shares in a company, for example) or through a decentralized multi-signature escrow system, among other solutions that are currently being developed.&lt;br&gt;
Because the most advanced blockchain with the largest number of tokens (ERC-20 tokens) is Ethereum, most Decentralized exchanges operate using Ethereum and its smart contracts, most of them can't even handle Bitcoin for trading. This might be upgraded by arriving at decentralized finances (DeFi) on an interoperable platform. With their usage, the limits for trading will be much lower.&lt;br&gt;
Because no company is responsible for the run of DEX, it's harder for governments and regulators to shut them down. But the price for decentralization is on most Decentralized exchanges low trading volume, small liquidity, lower speed, and poorer UI which makes them harder to use.&lt;br&gt;
Some Decentralized exchanges are focused merely on experienced users. You can’t contact customer support for help on DEX, and they don’t provide a fiat gateway as CEX does.&lt;br&gt;
The most known decentralized exchanges are Binance DEX and Uniswap. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hybrid-cryptocurrency-exchanges"&gt;
  &lt;/a&gt;
  Hybrid Cryptocurrency Exchanges
&lt;/h3&gt;

&lt;p&gt;What is a hybrid cryptocurrency exchange? Simply, it’s the kind that is taking advantage of each Centralized exchange and Decentralized exchange. It is the combination of fast transaction speed you can find in centralized platforms and security assurance by still holding private keys. Hybrid types are a new generation of the crypto trading marketplace, but still underdevelopment. The most popular hybrid types are Nash exchange and Qurrex exchange.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IUvtQlJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4k7106sx8yw9adazpe0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IUvtQlJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b4k7106sx8yw9adazpe0.png" alt="Decentralized Exchanges Vs Centralized Exchanges" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decentralized-exchangesdex-vs-centralized-exchangescex"&gt;
  &lt;/a&gt;
  Decentralized Exchanges(DEX) Vs Centralized Exchanges(CEX)
&lt;/h2&gt;

&lt;p&gt;Let’s compare the centralized and decentralized exchanges, as the result will be individual for each one of you. For better understanding, we used the comparison table.&lt;br&gt;
It’s up to you to decide, which type of cryptocurrency exchange will solve the best for your needs. If you are going to purchase your crypto with fiat, you will need to use CEX or HEX. The same thing is when you desire to trade many kinds of different altcoins because DEX is mostly limited to ERC-20 tokens or some limited number of cryptocurrencies.&lt;br&gt;
Traders who want to handle their taxes and statistics about all trades can use some centralized exchanges that can easily help with that.&lt;br&gt;
Decentralized exchanges and hybrid exchanges are rather focused on more experienced users, who use solely their hardware wallets and want to have every Satoshi under their full control. But they sacrifice some other qualities provided by centralized exchanges. User experience, high trading volume and liquidity, as well as additional services like Initial Exchange Offerings (IEO), DeFi products, and so on.&lt;br&gt;
In conclusion, if you choose some prestigious and well-secured Centralized, you can even earn more crypto by using their features such as staking or lending so your crypto actually works for you even when you sleep – and that counts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-of-the-best-decentralized-exchange"&gt;
  &lt;/a&gt;
  Some of the Best Decentralized Exchange
&lt;/h2&gt;

&lt;p&gt;Since the early days of Bitcoin, exchanges have played an important role in mediating between buyers and sellers of cryptocurrencies. Traditionally, centralized exchanges have been dominated in this area. However, with the rapidly evolving stack of available technology, more and more tools for decentralized trading have become available. For example:&lt;br&gt;
• &lt;strong&gt;Uniswap:&lt;/strong&gt; Uniswap is a kind of decentralized exchange or, in short, DEX that is on the ascent. The Uniswap platform has been in existence since 2018, working on the Ethereum blockchain. It is the second-biggest cryptocurrency program in terms of market capitalization globally, making it viable with all ERC-20 tokens and frameworks, for example, wallet services.&lt;br&gt;
• &lt;strong&gt;PancakeSwap:&lt;/strong&gt; PancakeSwap is a decentralized exchange that is similar to Ethereum’s Uniswap, but it runs on Binance Smart Chain instead. The DEX lets you swap tokens without an intermediary, as well as earn liquidity pool and staking rewards, enter a lottery, and other options.&lt;br&gt;
• &lt;strong&gt;Binance DEX:&lt;/strong&gt; Binance DEX is a decentralized exchange created by Binance and powered by the company’s Binance Coin (BNB). It offers lower fees and improved security over centralized exchanges. However, it also has a steeper learning curve and is best suited to experienced crypto users.&lt;br&gt;
• &lt;strong&gt;IDEX BSC:&lt;/strong&gt; IDEX, a high-performance decentralized cryptocurrency exchange (DEX), today announced the launch of IDEX's trading infrastructure on Binance Smart Chain to provide efficient, cost-effective DEX trading.&lt;br&gt;
• &lt;strong&gt;Sushiswap:&lt;/strong&gt; SushiSwap is a popular Ethereum-based decentralized exchange (DEX) that allows users to swap tokens, earn rewards via yield farming, and more.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CYnZPiih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mhub9i25f5zzwaza4x7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CYnZPiih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0mhub9i25f5zzwaza4x7.png" alt="How Decentralized Exchanges Do Work" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-decentralized-exchanges-do-work"&gt;
  &lt;/a&gt;
  How Decentralized Exchanges Do Work?
&lt;/h2&gt;

&lt;p&gt;On some decentralized exchanges, everything happens on a blockchain, every order is recorded on the blockchain. This approach is considered the most transparent because users don't trust any third party to transmit the orders, and therefore they cannot be distorted in any way. This approach is also the most impractical. Because users are asking all the nodes in the network to permanently record their orders, they are paying a fee for doing so. Also, they have to wait for the miner to add their transaction to the blockchain, which also creates an inconvenience. Like digital currencies, decentralized exchanges were created in response to flawed and archaic financial systems that passed along risks of a centralized system to its users, including insufficient security, technical issues, and a lack of transparency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-i-do-with-decentralized-exchange"&gt;
  &lt;/a&gt;
  What Can I Do with Decentralized Exchange?
&lt;/h2&gt;

&lt;p&gt;You can make a new online marketplace for exchanging any digital crypto assets in a decentralized manner without having to spend dozens of thousands on development, asset security, and staff.&lt;br&gt;
• Send and receive any existing cryptocurrencies.&lt;br&gt;
• Issue and manage new tokens to digitalize assets - create, mint/burn, and freeze/unfreeze.&lt;br&gt;
• Create trading pairs between different tokens.&lt;br&gt;
• Send orders to buy and sell crypto assets through created trading pairs.&lt;br&gt;
• Watch the market charts to monitor prices and market activity for other market pairs, powered by Trading View, or any other trading chart API.&lt;br&gt;
• Explore the transaction history and blocks on the chain via different interfaces.&lt;br&gt;
• Run a full node to listen and broadcast chain transactions, blocks, and consensus.&lt;br&gt;
• Develop more tools and libraries to improve and enhance Open DEX.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MdbFs5y2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzy9uhtg5m4dmrt0f3ti.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MdbFs5y2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wzy9uhtg5m4dmrt0f3ti.png" alt="Different Types of Decentralized Exchanges" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#different-types-of-decentralized-exchanges"&gt;
  &lt;/a&gt;
  Different Types of Decentralized Exchanges
&lt;/h3&gt;

&lt;p&gt;• &lt;strong&gt;On-Chain Order Books:&lt;/strong&gt; For some decentralized exchanges, everything is processed on-chain, including modifying and canceling orders. Philosophically, this is the most decentralized and transparent process because it circumvents trusting a third party to handle any orders at any time. However, this approach is not very practical in execution.&lt;br&gt;
• &lt;strong&gt;Off-Chain Order Books:&lt;/strong&gt; DEXs with off-chain order books are still decentralized to some degree but are somewhat more centralized than their on-chain counterparts. As opposed to orders being stored on the blockchain, off-chain orders are posted elsewhere, such as a centralized entity that governs the order book. Such an entity could exploit access to the order books to front-run or misrepresent orders, however, users’ funds would still be protected from the DEXs noncustodial model.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-decentralized-cryptocurrency-exchanges"&gt;
  &lt;/a&gt;
  Advantages of Decentralized Cryptocurrency Exchanges
&lt;/h3&gt;

&lt;p&gt;• The ease of access: CEX makes it easier for users to create an account or buy their first cryptocurrency. This helped to bring new users into the system and has also made crypto markets more popular.&lt;br&gt;
• They have a license: Most of these centralized exchanges have licenses and runs under government regulations. This gives the trader an assurance if something goes wrong.&lt;br&gt;
• Use of escrow: As a middleman in trades, they hold the currency until both parties complete their end of the bargain. Thus, there’s no need to worry about the transaction after the trade gets finalized.&lt;br&gt;
• Transparency: They make their address and location available to the traders. Hence, it helps the consumers to reach them if needed.&lt;br&gt;
• Offers and discounts: CEX also offer discounts while trading in large amounts. Also, the users can exchange fiat currencies to crypto and cryptocurrencies to fiat.&lt;br&gt;
• Privacy: Transactions made on DEX shares no data with the third party. Hence, it allows maintaining consumer’s information and privacy. Also, centralized exchanges ask for personal information such as email, identity proof, and phone number while signing up. DEX doesn’t need any of that.&lt;br&gt;
• Security: The biggest advantage of decentralization is the enhanced security it offers. The cryptocurrency got introduced for this purpose, it gives the consumer complete control over their assets.&lt;br&gt;
• Decentralized servers: Most DEXs do not have a centralized server, they store data across various servers around the world. Hence, the data remains safe and is almost impossible to get hacked.&lt;br&gt;
• Funds are held by you in your personal wallet and not by a third party&lt;br&gt;
• Users are not required to disclose their personal details (except if the exchange method involves bank transfers, in this case only the buyer or seller from which you will buy\sell will only know your details)&lt;br&gt;
• No Hacker activity&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-decentralized-exchange"&gt;
  &lt;/a&gt;
  Disadvantages of Decentralized Exchange
&lt;/h3&gt;

&lt;p&gt;• Users are at a loss if they are ever hacked for their passwords or private keys.&lt;br&gt;
• Low Liquidity&lt;br&gt;
• Only Basic features for Trade available&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8qbvhu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itya8bn4cxbc4bs9tfm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8qbvhu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itya8bn4cxbc4bs9tfm6.png" alt="What is Decentralized Exchange Software" width="880" height="324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-decentralized-exchange-software"&gt;
  &lt;/a&gt;
  What is Decentralized Exchange Software?
&lt;/h2&gt;

&lt;p&gt;In the world of digitalization, online transactions, and the utilization of virtual currency are gradually increasing day by day. Since the origination of the world’s first virtual currency, i.e., Bitcoin in the year 2009, most of the countries are choosing virtual currency over real currency for making their financial transactions. A secured and bug-free exchange development is much needed for the virtual transactions to stop the fraudulent activities across the globe.&lt;br&gt;
The bitcoin exchange websites are completely based on decentralized servers that are spread around the world. It is also not restricted to one particular location, which becomes a drawback for hackers. Also, the platforms offer the ownership of cryptocurrency in the user’s hands just by serving as the bridge between the traders. For this reason, the use of decentralized exchange software is needed to launch your own crypto exchange. So you can get this product from cryptocurrency exchange website development companies.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRnViZ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ne89t0t743eqoc1kkybf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRnViZ5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ne89t0t743eqoc1kkybf.png" alt="How to Create a Software for a Decentralized Cryptocurrency Exchange?" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-software-for-a-decentralized-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  How to Create a Software for a Decentralized Cryptocurrency Exchange?
&lt;/h2&gt;

&lt;p&gt;Choosing A Development Company: If there is a desire to create an exchanger that will maximally meet the requirements stated by the customer, then the best solution would be to develop software with the help of an outsourced company. The result will be a unique solution, the quality of which will be guaranteed by the contractor.&lt;br&gt;
Ready software: There is nothing easier and at the same time more convenient than an out-of-the-box solution, which is quite simple to choose and buy. Subsequently, the development company independently carries out installation, configuration and testing. An even easier way is to buy a ready-made site and rebrand it (renaming).&lt;br&gt;
White label solutions: A white label solution is a product or service that is produced by one company and that other companies rebrand to make it appear as if they made it. Another way to think of a white label solution is you are renting software from the owner and passing it off as your own. Over the last few years, white label solutions have grown in popularity as businesses are reluctant to invest in developing their own technology and infrastructure. This has created a need for specialist companies to develop technology platforms that can easily be rebranded and presented to the end client under a variety of brand identities. A cryptocurrency exchange on a standard basis, as a rule, becomes either a temporary alternative or an additional service for customers. The main activity of a buyer of such a product is not related to cryptocurrency, but the topic is quite similar.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#last-word"&gt;
  &lt;/a&gt;
  Last Word
&lt;/h3&gt;

&lt;p&gt;According to the text above, It’s up to the individual to choose the right exchange for themselves. Centralized exchange, provides ease of access and reliability, while decentralized exchange contributes to enhanced privacy. Both have their own benefits and concerns. But if you choose a decentralized exchange, then you should get the decentralized exchange software from the best cryptocurrency exchange development companies. They take care of everything from development, design, testing, and deployment, allowing you to focus on just the customization part. There are many advantages involved with purchasing and deploying a decentralized exchange software for your business.&lt;/p&gt;

</description>
      <category>dex</category>
      <category>blockchain</category>
      <category>webdev</category>
      <category>crypto</category>
    </item>
    <item>
      <title>Uniswap Clone Script- How to Start Your Crypto Exchange Like Uniswap?</title>
      <author>isiah ndidi</author>
      <pubDate>Tue, 16 Nov 2021 05:42:51 +0000</pubDate>
      <link>https://dev.to/isiahndidi/uniswap-clone-script-how-to-start-your-crypto-exchange-like-uniswap-1h56</link>
      <guid>https://dev.to/isiahndidi/uniswap-clone-script-how-to-start-your-crypto-exchange-like-uniswap-1h56</guid>
      <description>&lt;p&gt;We love to see it together in this guide, where I will explain it in detail so that you can use it in the best possible way.&lt;br&gt;
We will find out what uniswap Clone script is, how uniswap Clone script works, and what are its exclusive features.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aqrsAyX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oupooaipo9u38i2bg66o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aqrsAyX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oupooaipo9u38i2bg66o.png" alt="Uniswap Exchange" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-uniswap-exchange"&gt;
  &lt;/a&gt;
  About Uniswap Exchange
&lt;/h2&gt;

&lt;p&gt;Uniswap is a DeFi project that gives the possibility to exchange or give liquidity in crypto or fiat currencies. Uniswap currently does not have a native token, meaning liquidity providers earn the fees dominated in the assets within their respective market.&lt;br&gt;
It uniswap be thought of as a set of computer programs running on the blockchain of Ethereum that allow the execution of swap token type decentralized. &lt;br&gt;
Traders are able to trade Ethereum tokens on Uniswap directly, without intercessions. In addition, it is possible to lend your cryptocurrencies to special reserves called liquidity pools, obtaining commissions in exchange. A kind of loan.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stable-coins"&gt;
  &lt;/a&gt;
  Stable Coins:
&lt;/h3&gt;

&lt;p&gt;• Tether: USDT&lt;br&gt;
• True USD: TUSD&lt;br&gt;
• Dai Stablecoin: DAI&lt;br&gt;
• Paxos Standard: PAX&lt;br&gt;
• USD Coin: USDC&lt;br&gt;
• Binance USD: BUSD&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-uniswap-used-for"&gt;
  &lt;/a&gt;
  What Is Uniswap Used for?
&lt;/h2&gt;

&lt;p&gt;Usually, Uniswap exchange is used for exchanging crypto values. It is managed by an Ethereum blockchain, so it allows all sorts of tokens. Besides, the protocol is also used for yield farming where a user can invest in a liquidity pool. People can use different strategies to earn profits and increase passive crypto earning.&lt;br&gt;
Before we saw what Uniswap clone script is, now let's see what are advantages of using clone script?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-using-a-website-clone-script-for-businesses"&gt;
  &lt;/a&gt;
  Advantages of using a Website Clone Script for Businesses
&lt;/h3&gt;

&lt;p&gt;• Time: The biggest benefit of a cloning solution is that you will be able to save a lot of time for yourself. With the assistance of cloning, you will be able to save time by not going into a complete development cycle.&lt;br&gt;
• Expense: When it comes to developing a website, you will need a good amount of money and resources to get the development covered with perfection. But, thanks to cloning scripts, you will be able to overcome this hurdle as well.&lt;br&gt;
• Strategizing: Before moving towards the development zone, it is important that we plan our work and then take it ahead. We require strategizing about the stuff that will keep the users and viewers engaged for a long on the website. Everything requires proper planning before it is taken ahead. &lt;br&gt;
• Coding Knowledge: We all have a promising idea of a startup but, we fail to make an impact and all because of not having proper knowledge of online marketing and programming language. &lt;br&gt;
• Competition: The competition is quite high, and it is quite difficult for startups to make an impact straight away. But, with the assistance of web clone scripts things are quite possible, you will be able to have a space for your business in the competitive market as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UttP2NzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nk9rgh4zvrzck5k6s2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UttP2NzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nk9rgh4zvrzck5k6s2r.png" alt="What is Uniswap clone script" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-uniswap-clone-script"&gt;
  &lt;/a&gt;
  What is Uniswap clone script?
&lt;/h2&gt;

&lt;p&gt;Uniswap Clone Script is a DeFi exchange script that can assist any budding crypto entrepreneur to create a decentralized exchange platform like Uniswap on ethereum blockchain with advanced trading options and a simplified user interface. The companies develop Uniswap Clone Script with both “swap and liquidity pool” Smart contracts that exist in the Uniswap DEX. The Automated Market Maker (AMM) launched using Uniswap Clone Script allows traders to swap/trade desired cryptocurrencies by connecting any web3 wallets like MeatMask wallet, Walletconnect, and so on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-uniswap-clone-script"&gt;
  &lt;/a&gt;
  Features of UniSwap Clone Script
&lt;/h3&gt;

&lt;p&gt;• Flash Swapping&lt;br&gt;
• Token Swapping/Exchange&lt;br&gt;
• Price Oracles&lt;br&gt;
• Path to Sustainability&lt;br&gt;
• Anonymous Trading&lt;br&gt;
• Own Custody of Tokens&lt;br&gt;
• Flexibility of Token Exchanges&lt;br&gt;
• Highly Secure&lt;br&gt;
• Highly Confidential&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-own-defi-based-protocol-like-uniswap"&gt;
  &lt;/a&gt;
  How to create own defi based protocol like uniswap?
&lt;/h2&gt;

&lt;p&gt;• Go to Uniswap clone interface.&lt;br&gt;
• Connect your wallet.&lt;br&gt;
• Select the token you'd like to exchange from.&lt;br&gt;
• Select the token you'd like to exchange to.&lt;br&gt;
• Click on Swap.&lt;br&gt;
• Preview the transaction in the pop-up window.&lt;br&gt;
• Confirm the transaction request in your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-benefits-of-using-uniswap-clone-script"&gt;
  &lt;/a&gt;
  The benefits of using Uniswap Clone Script?
&lt;/h3&gt;

&lt;p&gt;• Complete decentralized liquidity solution&lt;br&gt;
• Support for Multi-crypto token trading pairs&lt;br&gt;
• Fast &amp;amp; Instant Swapping &lt;br&gt;
• 100% Customizable&lt;br&gt;
• Prebuilt Scripts&lt;br&gt;
• Scalable &amp;amp; Clean Design&lt;br&gt;
• Multi-Language &amp;amp; Multi-Crypto Token Support&lt;br&gt;
• Referral &amp;amp; Promotions&lt;br&gt;
• User-friendly UI/UX&lt;br&gt;
• Liquidity Pools&lt;br&gt;
• Integrated Crypto Wallets&lt;br&gt;
• Top-performing pools&lt;br&gt;
• Flash Swapping&lt;br&gt;
• Perfectly Integrated &amp;amp; Audited Immutable Smart Contract&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xfrZuId6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49oi2cvewystp70xuc94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfrZuId6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49oi2cvewystp70xuc94.png" alt="Uniswap clone app development" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#uniswap-clone-app-development"&gt;
  &lt;/a&gt;
  Uniswap Clone App Development
&lt;/h2&gt;

&lt;p&gt;Uniswap does not have a dedicated application, but companies’ technologies not only offer exclusive Uniswap clone script-based software solutions, but also provide an updated Uniswap clone app development for your business. DEX clone app development is packed with all the features and benefits that Uniswap has. You can also add some additional features based on your business requirements. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-uniswap-clone-app"&gt;
  &lt;/a&gt;
  Features of uniswap clone app
&lt;/h3&gt;

&lt;p&gt;• Fingerprint unlocking&lt;br&gt;
• Timeout session&lt;br&gt;
• Push notification and alerts&lt;br&gt;
• geolocation&lt;br&gt;
• Trade on go&lt;br&gt;
• Multilingual supports&lt;br&gt;
• In app authentication&lt;br&gt;
• Live chat with traders&lt;br&gt;
• Crypto widget&lt;br&gt;
• Portfolio sharing&lt;br&gt;
• Market tool&lt;br&gt;
• Security &amp;amp; stability&lt;br&gt;
• Easy &amp;amp; comfortable to use&lt;br&gt;
• Brand-new UI design&lt;br&gt;
• User friendly&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-to-create-a-mobile-application-like-uniswap-app"&gt;
  &lt;/a&gt;
  Why to Create a Mobile Application Like Uniswap App?
&lt;/h2&gt;

&lt;p&gt;Trading cryptocurrencies with mobile apps becomes a usual activity of traders nowadays. So, every popular cryptocurrencies exchange provides a separate mobile app for its traders to keep on engaging with them. So, as an entrepreneur, when you draft a business plan to start an exchange like uniswap, you must have added this one too. &lt;br&gt;
Trading cryptocurrency with mobile apps becomes a usual activity of traders nowadays. So every popular cryptocurrencies exchange provides separate mobile apps for its traders to keep on engaging with them, so, as an entrepreneur, when you draft business plan to start an exchange like uniswap, you must have added this one too.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--se-vUXxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k31o17f79oji8ar6ozkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--se-vUXxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k31o17f79oji8ar6ozkn.png" alt="Which exchange is better" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-exchange-is-better-uniswap-or-idex"&gt;
  &lt;/a&gt;
  Which exchange is better? Uniswap or Idex?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#idex"&gt;
  &lt;/a&gt;
  Idex:
&lt;/h3&gt;

&lt;p&gt;IDEX is available on Binance, Uniswap V2, Gate.io and Balancer.&lt;br&gt;
Active users: more than 150,000 users&lt;br&gt;
Trading Volume 24h: $27,751,080.25&lt;br&gt;
Volume / Market Cap: 0.1929&lt;br&gt;
Market Rank: 388&lt;br&gt;
Circulating Supply: 592,220,290.83 IDEX&lt;/p&gt;

&lt;p&gt;Advantages of Idex: &lt;br&gt;
• Highly secure and encrypted trading.&lt;br&gt;
• Crypto-to-crypto payments can be made quickly.&lt;br&gt;
• Staking program for stakers with rewards to earn.&lt;br&gt;
• Supports Ethereum and Binance smart chain.&lt;br&gt;
• Trade makers and takers can earn rewards on aurora utility tokens.&lt;br&gt;
• Reliable customer support.&lt;br&gt;
• Metamask wallet integrated.&lt;br&gt;
• User-friendly UI for easy trading and fund management.  &lt;/p&gt;

&lt;p&gt;Disadvantages of idex: &lt;br&gt;
• Users can’t trade in Bitcoins.&lt;br&gt;
• Beginners can find trading in crypto challenges.&lt;br&gt;
• Requires a variety of other digital currency support.&lt;br&gt;
Crypto trading platforms like IDEX Exchange allow investors to open their exchange account on a highly secure platform and earn through financial trading in cryptocurrency. Offering many benefits like secure trading, customized trading engine, custom custody solution, open-source smart contract for security, and IDEX stake to earn more, IDEX Exchange is a uniquely valuable resource for crypto exchange trading enthusiasts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uniswap"&gt;
  &lt;/a&gt;
  Uniswap:
&lt;/h3&gt;

&lt;p&gt;Uniswap is a protocol for automated token exchange on Ethereum.&lt;br&gt;
Active users: 2.5 million users&lt;br&gt;
Trading Volume 24h: $645,379,875.78&lt;br&gt;
Volume / Market Cap: 0.01337&lt;br&gt;
Market Rank: 14&lt;br&gt;
Circulating Supply: 1 Billion&lt;/p&gt;

&lt;p&gt;Advantages of Uniswap:&lt;br&gt;
• Low fees&lt;br&gt;
• Full Custody of Your Funds&lt;br&gt;
• No KYC (Know Your Customer) Process&lt;br&gt;
• The Newest coins&lt;/p&gt;

&lt;p&gt;Disadvantages of uniswap:&lt;br&gt;
• Fake coins&lt;br&gt;
• Transactions failure&lt;br&gt;
Uniswap has quickly become the de facto exchange for DeFi tokens to be traded.&lt;br&gt;
 Compared to its more recent competitors, it still maintains the largest market share, the best liquidity, and the widest range of tokens available for trading. If one thing is for certain, the fact that Uniswap was able to build such an intuitive product with $100k seriously challenges the notions of how much funding is necessary to build a true killer application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion!
&lt;/h3&gt;

&lt;p&gt;In today’s fast-changing world of technology and digital money, IDEX Exchange is among the safest options to trade without having to give any deposit or withdrawal money. It is highly secure and cost-effective for users looking to earn more on their funds by trading and staking cryptocurrencies. But with that being said, it should be emphasized that only Ethereum-based assets are currently supported in the current version. While it is possible to wrap cryptocurrencies like Bitcoin (WBTC) and trade it via Uniswap, at this point in time other protocols are not supported via Uniswap markets. Also, it can be said compared to its, Uniswap is the best for low fees.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>defi</category>
    </item>
  </channel>
</rss>
