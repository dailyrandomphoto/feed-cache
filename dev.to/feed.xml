<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Crypto Lending and what are the benefits?</title>
      <author>Radin Dev</author>
      <pubDate>Tue, 13 Jul 2021 07:17:59 +0000</pubDate>
      <link>https://dev.to/radindev/what-is-crypto-lending-and-what-are-the-benefits-51f1</link>
      <guid>https://dev.to/radindev/what-is-crypto-lending-and-what-are-the-benefits-51f1</guid>
      <description>&lt;p&gt;We are all familiar with the banking facility system and its ups and downs, and we know the inconveniences of borrowing from banks. But in today's world, where blockchain technology and digital currencies are available; It is a bit strange to stay behind the barrier of centralized systems such as banks. Because you can quickly get a loan using the Crypto Lending system, away from time-consuming administrative processes and in the shortest time.&lt;/p&gt;

&lt;p&gt;Getting a loan in the cryptocurrency world is much easier and faster than getting a bank loan, and these days it has many fans around the world. This article will take a closer look at digital currency loans and how to get them; Stay with us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-cryptocurrency-lending-system-work"&gt;
  &lt;/a&gt;
  How does a cryptocurrency lending system work?
&lt;/h2&gt;

&lt;p&gt;To get a digital currency loan, you pledge your cryptocurrency assets (Bitcoin, Ethereum, Tether and other cryptocurrencies) and borrow from other users' assets (the loan can be Bitcoin, Ethereum, Tether, etc.).&lt;/p&gt;

&lt;p&gt;This process is done on a peer-to-peer (P2P) basis in the context of online crypto lending platforms, and there are no intermediaries. At the time of settlement, the borrower, in addition to the loan amount, must also deposit the amount of interest determined at the time of signing the contract to the lender's account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why and when will you need a digital currency loan?&lt;/strong&gt;&lt;br&gt;
Imagine that you bought some cryptocurrencies for investment purposes and did not intend to sell them. But after this investment, you will need financial support. In this situation, you should convert your cryptocurrencies into Fiat currency and stop investing. But the second way is to use a crypto lending system. This way, you can meet your financial needs without losing your cryptocurrency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who lends you?&lt;/strong&gt;&lt;br&gt;
The lenders of this system are usually people who have bought some cryptocurrencies for investment and earn money from their capital by lending their digital currency assets and receiving interest on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the guarantee that you will repay the loan?&lt;/strong&gt;&lt;br&gt;
The amount you deposit as collateral is generally many times the amount of the loan you have received; Transferred to the lender's account. If you refuse to pay interest and principal on the cryptocurrencies, the collateral will remain in his account, and you will no longer have access to your cryptocurrency assets. (The lender will not sell this asset, and only the amount in his account will be blocked until the loan is fully settled).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgh5oxGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hlz559vw4mpzf1he0dr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgh5oxGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hlz559vw4mpzf1he0dr.jpg" alt="lending cryptocurrency with smart contract"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#differences-between-crypto-lending-system-and-bank-loans"&gt;
  &lt;/a&gt;
  Differences between crypto lending system and bank loans
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When you are planning to borrow from a bank, the first step is to provide accurate identification and authentication documents at the bank. However, to get a cryptocurrency loan, there is no need to identify and present identification documents.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Banks will ask you for guarantees such as a house deed or a valid payslip, and you will not be given a loan without such collateral. But in crypto lending, you can easily use your cryptographic assets as collateral.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Banks do not provide facilities to people under 18 and do not have a fixed job with a certain amount of income. But there are no restrictions on getting a crypto loan, and anyone with a cryptocurrency can use the network's loans.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you borrow from banks, you have to wait for the money to be credited to your account for a while. But in the crypto lending system, the loan amount will be credited to your wallet account when the contract is approved.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-using-a-crypto-lending-system"&gt;
  &lt;/a&gt;
  What are the benefits of using a crypto lending system?
&lt;/h2&gt;

&lt;p&gt;Digital currency lending is more practical. This means that you do not need to explain why you apply for a loan and only use this amount in the same field.&lt;br&gt;
The amount of the crypto loan is determined according to the specified collateral and is not related to the borrower's transactions and payments.&lt;br&gt;
No long-term investment is required to earn crypto loans.&lt;br&gt;
Due to the universality of blockchains, crypto lending knows no boundaries and geography and can be contacted or borrowed from anywhere in the world.&lt;br&gt;
Changing tax trends is another benefit of cryptocurrencies. The amount received and repaid by the borrower is not recorded in any centralized financial center, which exempts him from being held accountable to the tax authorities for the loan he has taken out.&lt;br&gt;
Determining the loan amount by the borrower and the lack of restrictions on the requested amount are other features of the crypto loan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-disadvantages-of-using-a-crypto-lending-system"&gt;
  &lt;/a&gt;
  What are the disadvantages of using a crypto lending system?
&lt;/h2&gt;

&lt;p&gt;Like all other digital systems, the crypto lending system has drawbacks and can cause problems for those who use it.&lt;/p&gt;

&lt;p&gt;The first thing that might be a problem for the borrower or lender in this system is the error in the writing code of the smart contract. Crypto lending is done through smart contracts, and if there is the slightest mistake in its coding, the parties will suffer irreparable losses.&lt;/p&gt;

&lt;p&gt;Another problem is the heavy collateral that the system imposes on the borrower. When receiving a loan from a bank, the guarantee is usually not several times the requested loan amount and determines the amount and amount of collateral according to the facility's conditions. But online digital currency loan platforms specify a large amount as collateral, sometimes several times the amount of the loan received.&lt;/p&gt;

&lt;p&gt;The main reason for the heavy collateral is the numerous fluctuations in the cryptocurrency market. The system plans to receive collateral so that if the value of the cryptocurrency to be used as collateral drops sharply, it will still be worth more than or equal to the loan received. However, if the amount of depreciation of the collateral reaches such a level that it is less than the loan amount; The system automatically auctions the collateral to make up for its loss.&lt;/p&gt;

&lt;p&gt;This is called the liquidation or liquidation of Cryptocurrency assets, an infrequent but possible occurrence in the crypto lending system. The borrower, in this case, must increase the collateral of the loan immediately before the liquidation of his property. Another way is to get a quick loan settlement in such a situation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-get-a-digital-currency-loan"&gt;
  &lt;/a&gt;
  Steps to get a digital currency loan
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j3W0wQK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2n5a19r44j5nljzbeiz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j3W0wQK_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2n5a19r44j5nljzbeiz.PNG" alt="steps to get a cryptocurrncy lending"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crypto lending platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MakerDAO Lending Platform&lt;/li&gt;
&lt;li&gt;Compound Lending Platform&lt;/li&gt;
&lt;li&gt;Aave Lending Platform&lt;/li&gt;
&lt;li&gt;DYdX Lending Platform&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Centralized crypto lending systems&lt;/p&gt;

&lt;p&gt;In addition to defaults or decentralized systems, some organizations and companies provide cryptocurrencies to applicants with different rules. The loan applicant in this system, unlike decentralized systems, must be authenticated and a person known to the collection. These institutions generally use a marginal lending system; In most cases, they provide such services to launch various projects and thus participate in new projects.&lt;/p&gt;

&lt;p&gt;Binance Digital Currency Exchange, Hodlnaut Lending Platform, BlockFi Lending Platform, Celsius Lending Platform and Nexo Lending Platform; some centralized systems are managed completely and now also provide digital currency loans.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding-remarks"&gt;
  &lt;/a&gt;
  Concluding remarks
&lt;/h2&gt;

&lt;p&gt;Finally, note that crypto lending systems, like all services based on Defi or decentralized financial platforms, are based on blockchain technology; It requires sufficient knowledge and awareness in this field. Making a digital currency loan, like investing in this market or trading and earning money, must be done with enough expertise and great care. Because, as you know, no contract can be deleted or changed after concluding a blockchain platform, and you will not have a way back in case of the slightest mistake.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>crypto</category>
    </item>
    <item>
      <title>Preventing key-delay when using </title>
      <author>Lucretius Biah</author>
      <pubDate>Tue, 13 Jul 2021 07:16:00 +0000</pubDate>
      <link>https://dev.to/biah/preventing-key-delay-when-using-2gob</link>
      <guid>https://dev.to/biah/preventing-key-delay-when-using-2gob</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem...
&lt;/h2&gt;

&lt;p&gt;I was using the onkeypress event to grab the text from the textarea element but I realized that the data collected was one character delayed. I then tried the onkeyup and onkeydown but it was still one character delayed.&lt;/p&gt;

&lt;p&gt;Initially, I thought this was a bug with my code but after a careful consideration, I realized my code was fine and the onkeypress event was also working correctly so why the one character delay?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCE10ysK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/prevent_key_delay_textarea/keydelay.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCE10ysK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/prevent_key_delay_textarea/keydelay.gif" alt="A gif showing the problem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-was-really-happening"&gt;
  &lt;/a&gt;
  What was really happening
&lt;/h2&gt;

&lt;p&gt;When ever we want to get the value of an element from an event, what we normally do is to take the &lt;code&gt;event.target.value&lt;/code&gt;, this code is the code that returns the content in the element. Now when the contents are returned with &lt;code&gt;event.target.value code&lt;/code&gt;, it returns everything excluding the current event, that means, excluding the current character.&lt;/p&gt;

&lt;p&gt;We are going to run an experiment to show what is happening. In the gif below, we add a function to the textarea onkeypress event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNMIN94e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/prevent_key_delay_textarea/debugging.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNMIN94e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/prevent_key_delay_textarea/debugging.gif" alt="A gif debugging the problem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the first character is entered, the &lt;code&gt;event.target.value&lt;/code&gt; is '', this is because, the value is contained in the event object not the &lt;code&gt;event.target.value&lt;/code&gt;.&lt;br&gt;
This same analogy happens as we continue to type&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solving-the-problem"&gt;
  &lt;/a&gt;
  Solving the problem...
&lt;/h2&gt;

&lt;p&gt;Now as we are seeing what is the causing the problem, we can see the solution,&lt;br&gt;
to prevent the key delay, we just need to adjust our function to add event.key which contains the current character to &lt;code&gt;event.target.value&lt;/code&gt; which also contains the 'already' text, so the function will now be like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;get_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, that's the solution folks.&lt;/p&gt;

</description>
      <category>html</category>
      <category>event</category>
    </item>
    <item>
      <title>Array.flat() in JavaScript</title>
      <author>capscode</author>
      <pubDate>Tue, 13 Jul 2021 06:28:00 +0000</pubDate>
      <link>https://dev.to/capscode/array-flat-in-javascript-4dnp</link>
      <guid>https://dev.to/capscode/array-flat-in-javascript-4dnp</guid>
      <description>&lt;p&gt;Hello Devs,&lt;/p&gt;

&lt;p&gt;In this article i will walk you through one of the important methods of Array in JavaScript i.e Array.flat method.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#theory"&gt;Theory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#syntax"&gt;Syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#return"&gt;Return Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;So without wasting any time lets get into the article&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theory"&gt;
  &lt;/a&gt;
  Theory &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The flat() method is used to flatten the array of arrays. The process of flatten depends on the depth we want to flattened the array of arrays.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What this method do is, it takes out the array element from an array of arrays and concat them in the main array.&lt;br&gt;
it will repeat this process till the depth value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;depth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// The depth level specifying how deep a nested array structure should be flattened.&lt;/span&gt;
&lt;span class="c1"&gt;// Defaults to 1.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#return-value"&gt;
  &lt;/a&gt;
  Return Value &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="nx"&gt;concatenated&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]];&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2, [3, 4, [5, 6]]];&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2, 3, 4, [5, 6]]&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2, 3, 4, 5, 6]&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2, 3, 4, 5, 6] &lt;/span&gt;
&lt;span class="nx"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2, 3, 4, [5, 6]]&lt;/span&gt;
&lt;span class="c1"&gt;// if no depth is provided then it will take the default value i.e 1.&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;//3&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;//5&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="c1"&gt;//6&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thank you for reading this far. This is a brief introduction of &lt;strong&gt;Array.flat() method in JavaScript&lt;/strong&gt; .&lt;br&gt;
If you find this article useful, like and share this article. Someone could find it useful too. If you find anything technically inaccurate please feel free to comment below.&lt;/p&gt;

&lt;p&gt;Hope its a nice and informative read for you.&lt;br&gt;
VISIT &lt;a href="https://www.capscode.in/#/blog"&gt;https://www.capscode.in/#/blog&lt;/a&gt; TO LEARN MORE...&lt;br&gt;
See you in my next Blog article, Take care!!&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/capscode"&gt;@capscode&lt;/a&gt;
&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to verify your commits on GitHub</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 13 Jul 2021 06:21:13 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/how-to-verify-your-commits-on-github-236</link>
      <guid>https://dev.to/dailydevtips1/how-to-verify-your-commits-on-github-236</guid>
      <description>&lt;p&gt;You might have seen some commits from merge-requests or Dependabot having a badge that states verified.&lt;br&gt;
But your own commits don't have this fancy badge?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nznpOOPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625640933127/1gWRcb-CD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nznpOOPv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625640933127/1gWRcb-CD.png" alt="Details of a verified commit on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-bother-with-verified-commits"&gt;
  &lt;/a&gt;
  Why bother with verified commits?
&lt;/h2&gt;

&lt;p&gt;This is a valid question, which mainly comes down to security in this day and age.&lt;/p&gt;

&lt;p&gt;We are still primarily working remotely/from home.&lt;br&gt;
Meaning the companies we work for have many questions if it's safe what we are doing at home.&lt;/p&gt;

&lt;p&gt;When you set your git configuration, you set it to be a certain email and name. And pretend someone else made that commit.&lt;br&gt;
That, of course, is a bit weird.&lt;/p&gt;

&lt;p&gt;Looking at private repo's it even makes sense, yes you are using some SSH key to commit to git, but you could still pretend to be a colleague, for instance.&lt;/p&gt;

&lt;p&gt;That's what verified commits will go against. They will make sure that a commit is signed as a specific user.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#set-up-verified-commits-on-github"&gt;
  &lt;/a&gt;
  Set up verified commits on GitHub
&lt;/h2&gt;

&lt;p&gt;GitHub uses Cryptographic signatures in the form of the GNU Privacy Guard (GPG) key.&lt;/p&gt;

&lt;p&gt;Such key comes in a public key which we'll set up in GitHub, and a private key that lives on our computer.&lt;br&gt;
Next time when we send a commit to GitHub, it will use this key and encrypt our commit and data. On the GitHub side, it will decrypt and make sure it's the right user.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-install-gpg"&gt;
  &lt;/a&gt;
  Step 1 Install GPG
&lt;/h3&gt;

&lt;p&gt;For this step, I'll be using &lt;a href="https://daily-dev-tips.com/posts/homebrew-one-package-manager-to-rule-them-all/"&gt;Homebrew&lt;/a&gt; since it;'s the quickest way to install it.&lt;/p&gt;

&lt;p&gt;Run the following command in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-generate-a-new-gpg-key"&gt;
  &lt;/a&gt;
  Step 2 Generate a new GPG key
&lt;/h3&gt;

&lt;p&gt;We can now use the GPG command to generate a new key.&lt;br&gt;
Run the following command in your terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gpg &lt;span class="nt"&gt;--full-generate-key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will prompt a CLI program that will guide you through the process of generation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dS12sqaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637103731/5BYO_ggdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dS12sqaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637103731/5BYO_ggdy.png" alt="GPG key generation CLI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind the following settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I choose an RSA key (Option 1)&lt;/li&gt;
&lt;li&gt;Key should be a MINIMUM of 4096 in size&lt;/li&gt;
&lt;li&gt;I set it never to expire (Option 0)&lt;/li&gt;
&lt;li&gt;Name and email. Use your GitHub email else, it won't work!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After this, it will prompt a password field twice. Use a secure password for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn8zMz6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637140595/6VKGR7X8X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn8zMz6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637140595/6VKGR7X8X.png" alt="GPG protected by password flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-verify-the-gpg-key"&gt;
  &lt;/a&gt;
  Step 3 verify the GPG key
&lt;/h3&gt;

&lt;p&gt;Now that we created the key, let's verify it's set up correctly.&lt;/p&gt;

&lt;p&gt;Run the following command in a terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gpg &lt;span class="nt"&gt;--list-secret-keys&lt;/span&gt; &lt;span class="nt"&gt;--keyid-format&lt;/span&gt; LONG
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should return something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[SCRAMBLING NOT REALLY IMPORTANT]
--------------------------------------
sec   rsa4096/[THIS_KEY_ID] 2021-07-07 [SC]
      2B18EEB732D15480D40A60D605AE1785E201CE95
uid                 [ultimate] Chris Bongers &amp;lt;chrisbongers@gmail.com&amp;gt;
ssb   rsa4096/C98A99F6B0202433 2021-07-07 [E]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Noted, I added the [THIS_KEY_ID], which will contain a key that is important to do anything with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-export-the-key-to-github"&gt;
  &lt;/a&gt;
  Step 4 Export the key to GitHub
&lt;/h3&gt;

&lt;p&gt;Now we should be able to create an export of this key to use in GitHub.&lt;/p&gt;

&lt;p&gt;With the [THIS_KEY_ID] you got from step 3, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gpg &lt;span class="nt"&gt;--armor&lt;/span&gt; &lt;span class="nt"&gt;--export&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;THIS_KEY_ID]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate a large code block between:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----
[SCRAMBLE]
----------END PGP PUBLIC KEY BLOCK-----
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy that whole section, including the comments.&lt;/p&gt;

&lt;p&gt;Now head over to GitHub, click on your profile image -&amp;gt; Settings.&lt;br&gt;
Choose SSH and GPG Keys from the left menu, scroll down and add a new GPG Key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0AiN1Dfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637884903/yGhmYEZCG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0AiN1Dfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625637884903/yGhmYEZCG.png" alt="GitHub keys"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy that code block in the editor, and press save.&lt;br&gt;
You should now have your GPG key setup.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-5-configure-git-always-to-sign-commits"&gt;
  &lt;/a&gt;
  Step 5 Configure git always to sign commits
&lt;/h3&gt;

&lt;p&gt;Let's enable the Git client always to sign commits with our new key.&lt;/p&gt;

&lt;p&gt;Run the following commands in a terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.signingkey &lt;span class="o"&gt;[&lt;/span&gt;THIS_KEY_ID]
git config &lt;span class="nt"&gt;--global&lt;/span&gt; commit.gpgsign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now try and make a commitment to one of your projects.&lt;br&gt;
And it should show a verified commit like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vvHZf1tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625639077886/dTdArvKCM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vvHZf1tV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625639077886/dTdArvKCM.png" alt="GitHub verified commits"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#troubleshooting"&gt;
  &lt;/a&gt;
  Troubleshooting
&lt;/h2&gt;

&lt;p&gt;If you have issues in the last part and the response is saying the commit can't be verified, you can try the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"test"&lt;/span&gt; | gpg &lt;span class="nt"&gt;--clearsign&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If that is showing it failed, use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GPG_TTY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;tty&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now rerun the command, and you should see a PGP signature.&lt;/p&gt;

&lt;p&gt;It might also help to kill the client, so it will ask for the password the first time!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gpgconf &lt;span class="nt"&gt;--kill&lt;/span&gt; all
gpg-agent &lt;span class="nt"&gt;--daemon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>codenewbie</category>
      <category>security</category>
    </item>
    <item>
      <title>Future of Field Service Management</title>
      <author>Joy Gomez</author>
      <pubDate>Tue, 13 Jul 2021 06:00:48 +0000</pubDate>
      <link>https://dev.to/joygomez/future-of-field-service-management-2lp4</link>
      <guid>https://dev.to/joygomez/future-of-field-service-management-2lp4</guid>
      <description>&lt;p&gt;With every passing year, the Field Service Management industry has expanded its boundaries and increased its potential. In a recent survey, the Field Service Management market began spiking from $2.56 billion in 2018 to around $4.09 within 2020. The market has been driven by mobile applications and wearables that prompt the efficiency and work of the field workers. The significant growth of the &lt;a href="https://www.fieldpromax.com/"&gt;&lt;strong&gt;Field Service Management&lt;/strong&gt;&lt;/a&gt; is proof that the future of the Field Service Management industry has more heights to encounter.&lt;/p&gt;

&lt;p&gt;The future of Field Service requires a digital upgrade in digital appliances and change in business practices and modernization with the incorporation of technical bots, digital augments, outcome-based contracts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-some-of-the-anticipated-adaptations-that-the-future-of-field-service-management-looks-forward-to"&gt;
  &lt;/a&gt;
  Here are some of the anticipated adaptations that the future of Field Service Management looks forward to:-
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The mobility of the &lt;a href="https://www.fieldpromax.com/industries/"&gt;&lt;strong&gt;Field Service Industry&lt;/strong&gt;&lt;/a&gt; is already a driving factor of their speedy progress. It is soon to increase its potential and features to provide maximized performance to the field service enterprise. Access to the data in hand can hasten and improve the resolution structure, increase the customer base and enhance the power of the management. The investment of the mobile technology industry into the field service industry is assured with the present competitive edge.&lt;br&gt;
Mobile Industry&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IoT or the Internet of Things has found its way into the field service arena along with the GPS, Accounting books and other software that uphold the field service management functions. The increased performance of deployment, configuration, troubleshooting, installation of software/firmware, patching, debugging and monitoring the functionality of the Field Service Management software. With IoT, the automation process becomes smoother, avoiding lack of context, delays and lag leading to customer frustration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With improved features of IoT, FSM can now improve their tracking and monitoring features smoothly, along with enhanced wearable instead of devices. These wearable integrated IoT features are easier to carry around, hassle-free and more efficient when working in the field. Wearables save time, effort, and voice command, even more, efficient for field workers to perform their responsibilities with ease. Various companies have introduced wearable sensors for health, delivery and other purposes. With time, field service customised wearables are a great demand in the market, saving businesses the time to make significant investments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The recruiting of tech-friendly and tech-geeks will be in great demand for the field service industry. While education and interpersonal skills are crucial while hiring employees, technology has taken a higher toll on its role within the Field Service premises. It is essential to hire employees who can be trained and are aware of the technology industry to make the process easier. The new technologies and trained, qualified employees determine the future and the height of the business graph.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#your-field-service-managements-future"&gt;
  &lt;/a&gt;
  Your field service management’s Future
&lt;/h2&gt;

&lt;p&gt;The Field Service industry has been shooting or the stars in recent years. There is no doubt about the upgraded future of the field. However, it also depends on the people hired into the field to determine the success and potential of the business. The varied industries and clients that will collaborate with the Field Service industry will expand in quantity, quality and genre. The Field Service industry strives to make business more accessible and simpler and will always continue to do so.&lt;/p&gt;

</description>
      <category>field</category>
      <category>service</category>
      <category>software</category>
      <category>fsmsoftware</category>
    </item>
    <item>
      <title>A javascript trick that you haven't done before</title>
      <author>Tronic247</author>
      <pubDate>Tue, 13 Jul 2021 05:49:27 +0000</pubDate>
      <link>https://dev.to/tronic247/a-javascript-trick-that-you-haven-t-done-before-3hn1</link>
      <guid>https://dev.to/tronic247/a-javascript-trick-that-you-haven-t-done-before-3hn1</guid>
      <description>&lt;p&gt;Create a HTML file add this code to that file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script type="text/javascript"&amp;gt;
        var x = 1;
        setInterval(function() {
            document.title = x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x*x;
            x++;
        }, 0);
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then , look the title of the page. What does it say ?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinity"&gt;
  &lt;/a&gt;
  Infinity
&lt;/h3&gt;

&lt;p&gt;And replace the code with this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script type="text/javascript"&amp;gt;

        var x = 1;
        setInterval(function() {
            document.title = x*x
            x++;
        }, 0);


    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see the same function above I mentioned happens. But, look the title is somewhat like.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#566666e-205"&gt;
  &lt;/a&gt;
  566666e + 205
&lt;/h3&gt;

&lt;p&gt;But how ? comments are welcome from &lt;code&gt;javascript&lt;/code&gt; professionals.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tricks</category>
      <category>help</category>
    </item>
    <item>
      <title>How to review Angular code</title>
      <author>Armen Vardanyan</author>
      <pubDate>Tue, 13 Jul 2021 05:46:43 +0000</pubDate>
      <link>https://dev.to/this-is-angular/how-to-review-angular-code-58aj</link>
      <guid>https://dev.to/this-is-angular/how-to-review-angular-code-58aj</guid>
      <description>&lt;p&gt;&lt;em&gt;Original cover photo by &lt;a href="https://unsplash.com/@alvarordesign"&gt;Alvaro Reyes&lt;/a&gt; on Unsplash.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of the most important responsibilities of a senior developer is reviewing code written by their fellow developers; if anything, there are lots of teams that don't even require one to be a senior developer to be able to review pull requests and code written by others in general (everyone can review anyone). In this article, we are going to explore common approaches and problems that are related to reviewing pull requests in Angular projects and answer several important questions. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to notice important aspects in code?&lt;/li&gt;
&lt;li&gt;How to spot obvious bugs?&lt;/li&gt;
&lt;li&gt;How to write precise comments and be helpful?&lt;/li&gt;
&lt;li&gt;How to ignore stuff if something is urgent?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, let’s get started&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-not-to-do"&gt;
  &lt;/a&gt;
  What not to do?
&lt;/h2&gt;

&lt;p&gt;Before we begin discussing approaches, let’s gloss over some stuff that should &lt;em&gt;not&lt;/em&gt; be a part of a pull request review process&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Do not write comments about&lt;/strong&gt; missing trailing commas, variable names starting with an underscore, missing semicolons and so on. Use a linter for that&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do not push opinionated approaches&lt;/strong&gt; unless existing code is not consistent with the code in the pull request, or you are the team lead (but even if you are, still think twice before rejecting an approach). If the code solves a problem in a way that is different from how that problem is tackled elsewhere in the codebase, comment about it; if the code has obvious problems because of the approach that was selected by the creator of the PR, comment about it. But if the approach is just different to your opinion, be careful about leaving any comments about it, even if you are the deciding team leader. There will be times when junior developers will know better than you (and that is completely okay, even cool!). This may result in unnecessary controversy and hinder the development process.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do not repeat yourself&lt;/strong&gt;. Sometimes a developer might choose an approach and repeat it multiple times when submitting a PR. Do not find all of those instances and comment the same thing under every appearance of the problem; rather, leave a generic comment describing that the approach needs to be changed across the PR related files.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do not disregard deadlines&lt;/strong&gt; - sometimes the fastest solution to a problem isn’t the most neat and beautiful; but approaching deadlines and extra work pressure can create situations where minimal solutions might be acceptable if they don’t violate existing structures &lt;em&gt;too much.&lt;/em&gt; Be careful to acknowledge such situations and maybe keep a backlog of future refactorings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s now discuss some human stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-nice"&gt;
  &lt;/a&gt;
  Be nice
&lt;/h2&gt;

&lt;p&gt;An important thing to remember (always, not only in code review) is that people you interact with are human beings. Remember to do the following things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be polite when writing comments&lt;/li&gt;
&lt;li&gt;Be precise and describe thoroughly why and how a piece of code can be improved; comments like “this does not feel good” are unacceptable.&lt;/li&gt;
&lt;li&gt;Praise good code. If you only ever post comments about problems, your coworkers will feel that a PR review process is just an endless criticism fest&lt;/li&gt;
&lt;li&gt;Ask questions. If a piece of code feels questionable, don’t jump to conclusions and post how it should be improved, but rather ask why the developer chose that approach; they might very well provide a good reason for it to be that way&lt;/li&gt;
&lt;li&gt;Remember the power of &lt;em&gt;please&lt;/em&gt;. If you think something should be changed, don’t write “change this method to use &lt;code&gt;Array.map&lt;/code&gt; instead of &lt;code&gt;Array.forEach&lt;/code&gt;”, but rather write “can we please change &lt;code&gt;Array.forEach&lt;/code&gt; to &lt;code&gt;Array.map&lt;/code&gt;?”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you follow the guideline only in those two first paragraphs, you already will be a reviewer who does not cause problems; that is great. Let’s now try to become a reviewer that is very effective at the job!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#obvious-things"&gt;
  &lt;/a&gt;
  Obvious things
&lt;/h2&gt;

&lt;p&gt;Let’s start with noticing obvious and common pitfalls that people allow into their code, and become efficient at finding those:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Variable names&lt;/strong&gt;. Pay attention to all new and changed variable names. Names need to be efficient at conveying meaning, not too complex, but not too simple either. Do not hesitate to comment i a variable name violates those principles&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Common pitfalls&lt;/strong&gt;. Sometimes developers fall for very common things that do not make the codebase any better. For example, usage of “Array.forEach” when “Array.map” and “Array.filter” could have been used. Familiarize yourself with common bad practices of JavaScript/TypeScript to notice such instances easier&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Clever one-liners&lt;/strong&gt;. Sometimes it is tempting to solve a more or less complex problem with a single line of code, but it is often better to write a bit more code that is more explicit, than something that feels like magic. If you notice a method that has one line of code, good if that line is simple enough; bad if you cannot immediately understand what that line of code achieves.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let’s dive into what is specific to reviewing Angular codebases&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-angular"&gt;
  &lt;/a&gt;
  Tips for Angular
&lt;/h2&gt;

&lt;p&gt;Angular comes with its own list of bad and best practices (some of which are admittedly opinionated). Before you read this part of the guide, you can familiarize yourself with those using my following articles: &lt;a href="https://codeburst.io/angular-bad-practices-eab0e594ce92"&gt;Angular Bad Practices&lt;/a&gt;, &lt;a href="https://indepth.dev/posts/1189/angular-bad-practices-revisited"&gt;Angular Bad Practices Revisited&lt;/a&gt; and &lt;a href="https://codeburst.io/angular-best-practices-4bed7ae1d0b7"&gt;Angular Best Practices&lt;/a&gt;. Also, definitely read and strictly follow the &lt;a href="https://angular.io/guide/styleguide"&gt;Angular Coding Style Guide&lt;/a&gt;. If you have even more time, you can watch my &lt;a href="https://www.youtube.com/watch?v=UxDb0exmp5I&amp;amp;ab_channel=TechTalksWithSantosh"&gt;discussion&lt;/a&gt; with &lt;a href="https://twitter.com/SantoshYadavDev"&gt;Santosh Yadav&lt;/a&gt; on his &lt;a href="https://www.youtube.com/channel/UChvYTafHRgXKb0VbYGeG0nw"&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After exploring those, we can now start listing important things to pay attention to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Explicit violations&lt;/strong&gt;. First of all, look for explicit violations of the style guide (and the practices adopted by your own team). Things like incorrect component selectors, unnecessary class extensions (instead of DI) and so on. In 99% of the cases you won’t find any violations like this, but you might get all too sure that stuff like this won;t happen, and accidentally miss when it appears.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TypeScript issues&lt;/strong&gt;. Look for too loosely typed variables, methods that do not have explicit return types but can return ambiguous values (in general pay lots of attention to types). Also look for type interconnections (you can read more about it in my article &lt;a href="https://indepth.dev/posts/1150/how-not-to-trick-typescript-compiler-and-not-be-tricked-by-it"&gt;How not to trick the TypeScript compiler and not be tricked by it&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too lengthy methods in components&lt;/strong&gt;. While “not writing too verbose code” is a very generic advice, Angular developers often tend to push components to the extreme. Ideally components should receive data and render UI, but often developers would put lots of business logic inside components themselves. Be careful to notice things like that and propose solutions about where to move those pieces of code&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Access to imported variables/constants directly&lt;/strong&gt; instead of through dependency injection - this might be problematic for unit tests and also general readability of a component&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Subclassing&lt;/strong&gt; - components or services that extend other components or services are sometimes a good idea, but too often are used to just share functionality between classes. Whenever you encounter the &lt;code&gt;extends&lt;/code&gt; keyword, examine if that is the case; if so, propose to refactor the class to use object composition/dependency injection instead of inheritance (remember, inheritance is an &lt;em&gt;is-a&lt;/em&gt; relationship, not a &lt;em&gt;has-a&lt;/em&gt; one)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-rxjs"&gt;
  &lt;/a&gt;
  Tips for RxJS
&lt;/h2&gt;

&lt;p&gt;Most Angular codebases make at least some use of RxJS and stream based approaches; be careful to notice bad patterns, unnecessarily complicated code, and wrong usage of operators. Here are some things to pay attention to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Too many subscriptions in the “ngOnInit” method&lt;/strong&gt; - this is usually a red flag. Ideally, you would want to have exactly zero subscriptions for &lt;code&gt;Observables&lt;/code&gt;, but sometimes there are situations it is necessary, but if you have more than one subscription, be careful to examine all of them to see if some can be refactored to just use the async pipe&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;More than 4 operators in an &lt;code&gt;Observable&lt;/code&gt; &lt;code&gt;pipe&lt;/code&gt;&lt;/strong&gt; - usually lots of operators are not a problem, but sometimes they can introduce unnecessary complexity, and some operators have alternatives that do the same thing as a combination of 2&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;References to the component state in the &lt;code&gt;Observable&lt;/code&gt; stream&lt;/strong&gt; - be careful to notice any occurrences of the “this” keyword inside the operator callbacks, as usually this is not something to be encouraged; when noticing such instances, examine thoroughly why the component state was referenced and if/how it can be refactored. One way is to see if the properties changed inside the &lt;code&gt;Observable&lt;/code&gt; pipeline are being displayed in the template; if so, use the &lt;code&gt;async&lt;/code&gt; pipe. In general, avoid modifying to the &lt;code&gt;this&lt;/code&gt; context of a component in Observables, unless it is by calling a third-party imperative function (like &lt;code&gt;FormControl.disable&lt;/code&gt;, for example)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pay special attention to &lt;code&gt;Subjects&lt;/code&gt;&lt;/strong&gt; - Subjects are often used to transport data from one part of application to another, and again can be abused to introduce unnecessary complexity into a system. Sometimes usage of a Subject can be discarded completely&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h2&gt;

&lt;p&gt;Reviewing someone else’s code is often a challenging task, and requires both coding and social skills. Being attentive to details, clear with your comments and rigorous when upholding accepted practices is of huge importance. Hopefully, with this guide, you can become more efficient at reviewing code and finding issues&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 Useful VueJS Tips to Improve Your Building Experience</title>
      <author>OpenReplay Tech Blog</author>
      <pubDate>Tue, 13 Jul 2021 05:07:06 +0000</pubDate>
      <link>https://dev.to/asayerio_techblog/5-useful-vue-js-tips-to-improve-you-building-experience-2cg1</link>
      <guid>https://dev.to/asayerio_techblog/5-useful-vue-js-tips-to-improve-you-building-experience-2cg1</guid>
      <description>&lt;p&gt;&lt;em&gt;by author &lt;a href="https://blog.openreplay.com/authors/nwose-lotanna-victor"&gt;Nwose Lotanna Victor&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In today’s post, we will learn a few tips to help you in your web development journey to build more efficient Vue JS applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-readable-naming-conventions"&gt;
  &lt;/a&gt;
  Use readable naming conventions
&lt;/h2&gt;

&lt;p&gt;This is something you might have heard before, readability is really important especially for a project that involves collaboration or working with other people. Here are a few suggestions that are considered best practices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use PascalCase while naming components

&lt;ul&gt;
&lt;li&gt;NewComponent.vue ✅ &lt;/li&gt;
&lt;li&gt;newcomponent.vue 🛑 &lt;/li&gt;
&lt;li&gt;Newcomponent.vue 🛑 &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Name Parent component with children in a way that you can read them.

&lt;ul&gt;
&lt;li&gt;FooterSection.vue&lt;/li&gt;
&lt;li&gt;FooterSectionHeading.vue&lt;/li&gt;
&lt;li&gt;FooterSectionIcons.vue&lt;/li&gt;
&lt;li&gt;FooterSectionButton.vue&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;You can also try naming components without children in their DOM tree with “the” prefixes.

&lt;ul&gt;
&lt;li&gt;TheNavbar.vue&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The whole idea is readability, also most importantly make sure to stay consistent with whatever convention you choose to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validate-props-data-type"&gt;
  &lt;/a&gt;
  Validate Props data type
&lt;/h2&gt;

&lt;p&gt;Props basically provide a platform for you to pass data from a parent component to its child, making our application a tree-like structure. It is important however to ensure that when you create props in Vue you explicitly specify the data type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;likes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;isPublished&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;commentIds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an example from the Vue documentation, there are also ways to create your own custom validation you can check out in the docs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-not-directly-manipulate-the-dom"&gt;
  &lt;/a&gt;
  Do not directly manipulate the DOM
&lt;/h2&gt;

&lt;p&gt;Coming from a CSS, HTML, and JS background it is easy to build Vue apps while still working directly with the DOM, this is not bad however it is very important to note that Vue uses the virtual DOM which is an abstracted version of the DOM that makes compile happen more efficiently and avoids re-rendering the entire DOM on every change. That alone improves efficiency and resource management to a great degree because the DOM API is called less often.&lt;br&gt;
This means that you do not really need to do something like this in your Vue component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;change=&lt;/span&gt;&lt;span class="s"&gt;"logStatus"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This input is used to log the status of the power supply while a service technician works on the electric board.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;logStatus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isOn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;thecheckbox&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;isOn&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Light is on&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Light is off&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the getElement call is a DOM API call and this can easily be made more efficient if you approached it this way instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;isOn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;logStatus&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isOn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Light is on&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Light is off&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isOn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isOn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This achieves the same result and you can even toggle the state as you can see easily without having to reach into the DOM API. Whatever it is you can do with pure JS, chances are there is a more efficient way to do it in the virtual DOM and if you cannot find it, &lt;a href="https://v3.vuejs.org/guide/component-template-refs.html"&gt;check out Vue Refs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#embrace-computed-properties"&gt;
  &lt;/a&gt;
  Embrace computed properties
&lt;/h2&gt;

&lt;p&gt;Computed properties are another really essential Vue JS tool you need, they are calculations you use to describe a value or property that is bound to another value or property. Vue JS uses it to handle data changes in the most efficient way possible to update the DOM when you want it to.&lt;br&gt;
A good use case will be filtering through a list or array, imagine you had a few hundred cars and the information on their manufacturers’ country in a list and you want to know which of them is German.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;’car&lt;/span&gt; &lt;span class="na"&gt;in&lt;/span&gt; &lt;span class="na"&gt;cars&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;’car.country&lt;/span&gt; &lt;span class="err"&gt;=="&lt;/span&gt;&lt;span class="na"&gt;Germany&lt;/span&gt;&lt;span class="err"&gt;"'&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use &lt;code&gt;V-for&lt;/code&gt; to loop through the list, some people would use  &lt;code&gt;V-if&lt;/code&gt; like it is above to make the condition or filtering. This looks good however, Vue’s compiler prioritizes &lt;code&gt;v-for&lt;/code&gt; over &lt;code&gt;v-if&lt;/code&gt; and so your desired outcome might not be what you get and the list (imagine it has 1 million items) would be looped through every single time. This as you can already tell is not efficient at all, you can use computed properties to ensure this works well for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;car in counteryFilter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;//....&lt;/span&gt;
&lt;span class="nx"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;countryFilter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Germany&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, you get this filtering done for you and the loop is more efficient, the computed property would also be checked once and only checked again if there are any dependency changes. Finally, it brings logic out of the template section so that our code is cleaner and readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vue-gui"&gt;
  &lt;/a&gt;
  Vue GUI
&lt;/h2&gt;

&lt;p&gt;This is a very interesting one, yes you read that correctly Vue CLI has a GUI tool that you might not know about. Go into your terminal and type the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vue ui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have Vue JS already installed globally on your machine, this command should open your default browser at &lt;code&gt;localhost:8000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nQ8adB25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3ib9l2l9latah7h5pgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nQ8adB25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3ib9l2l9latah7h5pgv.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can kill the port anytime you like, if you click the home button you can create a new project or open an already existing project without the CLI commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yb-gJ7y5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljlmjgyk2hyxuip07lw2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yb-gJ7y5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljlmjgyk2hyxuip07lw2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can go through all the prompts, the exact prompt you get with the CLI to create a new Vue project. If you click on Plugins, you would see a kind of Vue plugin marketplace with already existing plugins and suggestions by Vue depending on the project. You can install a plugin with just 1 click.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EMaU9RCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wguqdjc73xoy1b9md79k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EMaU9RCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wguqdjc73xoy1b9md79k.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can add dependencies and configs like the ESlint config and other ones. You can serve your app in the dev server, test it or even build it out for production. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4uOdne_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rgyi1r3clmygdy125h4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4uOdne_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rgyi1r3clmygdy125h4.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is such a powerful tool and very suited for beginners, so make sure to check it out yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source-session-replay"&gt;
  &lt;/a&gt;
  Open Source Session Replay
&lt;/h2&gt;

&lt;p&gt;Debugging a VueJS application in production may be challenging and time-consuming. &lt;a href="https://github.com/openreplay/openreplay"&gt;OpenReplay&lt;/a&gt; is an Open-source alternative to FullStory, LogRocket and Hotjar. It allows you to monitor and replay everything your users do and shows how your app behaves for every issue. &lt;br&gt;
It’s like having your browser’s inspector open while looking over your user’s shoulder.&lt;br&gt;
OpenReplay is the only open-source alternative currently available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" alt="OpenReplay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy debugging, for modern frontend teams - &lt;a href="https://github.com/openreplay/openreplay"&gt;Start monitoring your web app for free&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#extra-tip-the-documentation"&gt;
  &lt;/a&gt;
  Extra tip - The documentation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6pCFDa4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3yi52jdfevnmtz8jquw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pCFDa4w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3yi52jdfevnmtz8jquw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Vue JS docs is one of the best resources for learning anything related to Vue, the team is doing an exceptional job of making sure it is easy to understand, try out and implement in your workflow. &lt;/p&gt;

&lt;p&gt;There is even a very extensive style guide inside the Vue Docs that you should definitely &lt;a href="https://vuejs.org/v2/style-guide/"&gt;check out&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These are a few Vue JS tips to use to make you build faster, write cleaner and more efficient code in Vue JS. An added bonus is using VS Code, you can install a few extensions like Prettier, Vetur, and Vue VS Code snippets to help your workflow with speed, auto-complete, and auto-correct services. &lt;/p&gt;

&lt;p&gt;Which of these are you already using?&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>WILL PYTHON EVER RULE THE WORLD?</title>
      <author>Rocky</author>
      <pubDate>Tue, 13 Jul 2021 05:01:21 +0000</pubDate>
      <link>https://dev.to/codelivly/will-python-ever-rule-the-world-3ma0</link>
      <guid>https://dev.to/codelivly/will-python-ever-rule-the-world-3ma0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Will python rule the world&lt;/strong&gt;&lt;span&gt;&lt;span&gt;: As you know that there are a lot of programming languages are available.Certain languages solve certain problems but all languages cannot solve all  the problems  but here  Python comes .According to the experts of programming languages , &lt;/span&gt;&lt;a href="https://www.codelivly.com/what-is-python-basis-of-python-explained/"&gt;&lt;span&gt;Python&lt;/span&gt;&lt;/a&gt;&lt;span&gt; will be the future of Programming if it continued gaining popularity at this pace  seeming the future of programming languages .As Python has many benefits as explained below . In the article  below I am going to tell that “Will Python Programming Ever Rule the Programming World” or what are the reasons that Python can become the leading future programming language . &lt;/span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/will-python-ever-rule-the-world/"&gt;&lt;span&gt;READ More&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Enforce Husky Pre-Commit With ESLint &amp; Prettier In Monorepo</title>
      <author>Usman Khalil</author>
      <pubDate>Tue, 13 Jul 2021 04:25:17 +0000</pubDate>
      <link>https://dev.to/monfernape/enforce-husky-pre-commit-with-eslint-prettier-in-monorepo-55jc</link>
      <guid>https://dev.to/monfernape/enforce-husky-pre-commit-with-eslint-prettier-in-monorepo-55jc</guid>
      <description>&lt;p&gt;Okay, this kept me frustrated for a whole week because I suck at configurations at many levels. But thankfully, I've now closed my 16 chrome tabs and writing this out to make sure you don't have to face the same exact problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;When different developers work on the same codebase, it becomes necessary to enforce some rules to keep code in check. ESLint and Prettier go hand in hand for this purpose in most of JS projects and integration support is widely available. &lt;/p&gt;

&lt;p&gt;Finally husky is library that allows us trigger actions before committing or pushing. It provides git hooks for this purpose. I'll navigate it to in a minute.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement
&lt;/h2&gt;

&lt;p&gt;The problem that I faced here was that my project was built like a monorepo. It has frontend, backend and library folders in it. In order to use husky git hooks, they are to be placed in the directory where git is placed.&lt;/p&gt;

&lt;p&gt;But then again, for husky to work, it needs to utilize package.json file. This issue had me rolling for days. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;I'll navigate step by step from installing husky to committing the code. This might takes quite a few commands, so please bear with me.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-husky"&gt;
  &lt;/a&gt;
  Installing husky
&lt;/h4&gt;

&lt;p&gt;In the root folder of the repo where git resides, run following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx husky install
npx husky add .husky/pre-commit "npm test"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a &lt;code&gt;.husky&lt;/code&gt; folder in the root directory with &lt;code&gt;pre-commit&lt;/code&gt; file in it. This file would have a single command npm test in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npm test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's leave it for now and move to next step.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-linters"&gt;
  &lt;/a&gt;
  Installing Linters
&lt;/h4&gt;

&lt;p&gt;Go to your frontend project and install eslint, husky and prettier with the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install husky lint-staged eslint-plugin-prettier eslint-config-prettier --save-dev
npm install --save-dev --save-exact prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--save-dev&lt;/code&gt; keeps these libraries in &lt;code&gt;devDependencies&lt;/code&gt; because they won't be used in production and are here for development only.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-linters"&gt;
  &lt;/a&gt;
  Configuring Linters:
&lt;/h3&gt;

&lt;p&gt;We'll be creating few files to let our linters know how they would be working across the project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;.estlintignore&lt;/code&gt; and &lt;code&gt;.prettierignore&lt;/code&gt; files and place the following code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;build
node_modules
.github
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will inform our linters not to look into files in the above mentioned directories&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now we'll be adding few configurations for estlint. Create a file &lt;code&gt;.eslintrc.js&lt;/code&gt; with this code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    env: {
        browser: true,
        es6: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:react/recommended',
        'plugin:react-hooks/recommended',
        'plugin:prettier/recommended',
        'plugin:jsx-a11y/strict',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 2018,
        sourceType: 'module',
    },
    plugins: ['react', 'jsx-a11y', '@typescript-eslint'],
    rules: {
        'react-hooks/exhaustive-deps': 'error',
        'no-var': 'error',
        'brace-style': 'error',
        'prefer-template': 'error',
        radix: 'error',
        'space-before-blocks': 'error',
        'import/prefer-default-export': 'off',
    },
    overrides: [
        {
            files: [
                '**/*.test.js',
                '**/*.test.jsx',
                '**/*.test.tsx',
                '**/*.spec.js',
                '**/*.spec.jsx',
                '**/*.spec.tsx',
            ],
            env: {
                jest: true,
            },
        },
    ],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And finally the configuration for prettier. Add a file &lt;code&gt;.prettierrc.js&lt;/code&gt; and put the following code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    printWidth: 100,
    tabWidth: 2,
    singleQuote: true,
    semi: true,
    trailingComma: 'all',
    arrowParens: "always",
    overrides: [
        {
            files: '*.{js,jsx,tsx,ts,scss,json,html}',
            options: {
                tabWidth: 4,
            },
        },
    ],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#setting-up-packagejson"&gt;
  &lt;/a&gt;
  Setting Up Package.json
&lt;/h4&gt;

&lt;p&gt;We're almost there and now we'll have to add few scripts to package.json. I'll guide you about their purpose along the way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the following line in the scripts section:
&lt;code&gt;"prepare": "cd .. &amp;amp;&amp;amp; husky install frontend/.husky"&lt;/code&gt;
&lt;code&gt;npm prepare&lt;/code&gt; command runs before we commit our code. What essentially we're doing here is that we are moving out of frontend directory and installing husky in the front-end. &lt;/li&gt;
&lt;li&gt;Now we need to add our linting configuration governed by &lt;code&gt;lint-staged&lt;/code&gt;. Place the following code after scripts section:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"lint-staged": {
        "*.{js,ts,tsx, jsx}": [
            "eslint --quiet --fix"
        ],
        "*.{json,md,html,js,jsx,ts,tsx}": [
            "prettier --write"
        ]
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've written the extensions of the files eslint and prettier would be amending.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Finally, we'll be adding a script that would invoke linting. Add this line in your scripts:&lt;br&gt;
&lt;code&gt;"lint-front": "lint-staged"&lt;/code&gt;&lt;br&gt;
Running &lt;code&gt;npm run lint-front&lt;/code&gt; would trigger linting our application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's just inform our husky to run &lt;code&gt;npm run lint-front&lt;/code&gt; before commit. Go to the husky folder in the project root and replace pre-commit file with this code:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

cd frontend
npm run lint-frontend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything followed correctly, making a commit would trigger linting. That's the end of it. Hope this helps someone. If you are still having issue, do mention the comments. I'd be more than happy to help.&lt;/p&gt;

</description>
      <category>git</category>
      <category>react</category>
    </item>
    <item>
      <title>Amazon S3 - Introduction Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 13 Jul 2021 04:22:02 +0000</pubDate>
      <link>https://dev.to/this-is-learning/amazon-s3-introduction-hands-on-42di</link>
      <guid>https://dev.to/this-is-learning/amazon-s3-introduction-hands-on-42di</guid>
      <description>&lt;p&gt;We studied about AWS S3 in the last tutorial now we study how we can add, delete objects in our S3 bucket. Lets move right into it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go the AWS Console Dashboard search for S3 and select it.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0g_OFKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nj7n4e3vtgpnn9hfda49.png" alt="s3 search"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This will land you on the S3 console. Select create bucket on it&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dw3FR6r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssbizxuotvlku7emtfv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dw3FR6r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssbizxuotvlku7emtfv8.png" alt="S3-2"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select Bucket name and bucket region, remember bucket name has to be unique. Although AWS S3 is a global service but buckets belong to a specific region. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't change the block all public access setting its about permissions and we will study about permissions to a bucket later on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hD0Zy-dD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs7cdvta6cgxiv0jr2m3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hD0Zy-dD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs7cdvta6cgxiv0jr2m3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there is bucket versioning if this is enabled we can version our objects. So that the old data is not lost. We disable it for now. To keep this tutorial simple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add tags as you want you can add tags to identify what this bucket is for. Lets learn about encryption and advanced settings later on. Click create bucket.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ3pTaW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2g02ik94wzysrrig80h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ3pTaW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2g02ik94wzysrrig80h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now let us upload some assets on this bucket. To upload click on the bucket. You will se an upload button, click it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ot19XLQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxjmn38852d97bxh0jp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ot19XLQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxjmn38852d97bxh0jp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5q-nrUXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74vw5b4yloo7y10bwqa2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5q-nrUXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74vw5b4yloo7y10bwqa2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here you can add files by clicking the add files button. After that select a file and click upload.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wS3Yh5Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1brofwyq1ggfvrkmqjyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wS3Yh5Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1brofwyq1ggfvrkmqjyw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rPRPaYUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqme7j5h66w87motsx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rPRPaYUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqme7j5h66w87motsx8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will see the following screen. Once upload is completed click close. We have uploaded a file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjBo0hkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo4ee986395yq6ikfx8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjBo0hkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo4ee986395yq6ikfx8t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the S3 object. Click on the object URL. You will se an access denied page. So how we see the contents of our page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCJrzW0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cwppnknk8rcyty92eeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCJrzW0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cwppnknk8rcyty92eeu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On top there is an open button click on it and you can see the contents of the file. So, why does this link works and the earlier one didn't because when we click the open button at the top we are given a url that has no security and has some params which bypass the security. By default all our S# objects are not public. So a public url does not work we have to assign permissions to S3 objects by bucket permissions which we will check later on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFkXMse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pajltq95yp14u17cy6mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFkXMse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pajltq95yp14u17cy6mo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's delete this object. Go to the bucket select the object and click delete.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6hgQfDbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwco4rt4j67otkzdd2wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6hgQfDbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwco4rt4j67otkzdd2wb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Type permanently delete to delete the object and click delete objects. Click close on next screen after deletion is completed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qEo4mkms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o6sfat96ivp23152wd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEo4mkms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o6sfat96ivp23152wd4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ruyzxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd98vpbqsvs6s1y2d5wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ruyzxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd98vpbqsvs6s1y2d5wy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now our bucket is empty. This is it for this tutorial.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8PIKfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jktq7yt8iqute05kz9d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8PIKfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jktq7yt8iqute05kz9d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We added and deleted objects in AWS S3 in the next section we will study about permissions and bucket versioning.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>JavaScript Question #Day 2</title>
      <author>Sooraj S</author>
      <pubDate>Tue, 13 Jul 2021 04:09:15 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-2-102j</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-2-102j</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;0 1 2&lt;/code&gt; and &lt;code&gt;0 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;0 1 2&lt;/code&gt; and &lt;code&gt;3 3 3&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;3 3 3&lt;/code&gt; and &lt;code&gt;0 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;p&gt;Because of the event queue in JavaScript, the &lt;code&gt;setTimeout&lt;/code&gt; callback function is called &lt;em&gt;after&lt;/em&gt; the loop has been executed. Since the variable &lt;code&gt;i&lt;/code&gt; in the first loop was declared using the &lt;code&gt;var&lt;/code&gt; keyword, this value was global. During the loop, we incremented the value of &lt;code&gt;i&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt; each time, using the unary operator &lt;code&gt;++&lt;/code&gt;. By the time the &lt;code&gt;setTimeout&lt;/code&gt; callback function was invoked, &lt;code&gt;i&lt;/code&gt; was equal to &lt;code&gt;3&lt;/code&gt; in the first example.&lt;/p&gt;

&lt;p&gt;In the second loop, the variable &lt;code&gt;i&lt;/code&gt; was declared using the &lt;code&gt;let&lt;/code&gt; keyword: variables declared with the &lt;code&gt;let&lt;/code&gt; (and &lt;code&gt;const&lt;/code&gt;) keyword are block-scoped (a block is anything between &lt;code&gt;{ }&lt;/code&gt;). During each iteration, &lt;code&gt;i&lt;/code&gt; will have a new value, and each value is scoped inside the loop.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
