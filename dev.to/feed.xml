<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>DJPADE</title>
      <author>MarianVelani</author>
      <pubDate>Mon, 24 May 2021 20:34:41 +0000</pubDate>
      <link>https://dev.to/marianvelani/djpade-27ad</link>
      <guid>https://dev.to/marianvelani/djpade-27ad</guid>
      <description>&lt;p&gt;Abstract:&lt;br&gt;
The DjPad is a device that emulates various musical instrument electronically. it uses Signal processing and control system to fire sound. the device replace with various music Instrument by just using device software. it is help to create and merge various track together to Compose music. it also works in real-time environment so it is possible to play direct to audience. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anGVJP24--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h12h4sdzcoue9rgvenv0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anGVJP24--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h12h4sdzcoue9rgvenv0.jpg" alt="Djpade by Manan velani"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aim and Objectives:&lt;/p&gt;

&lt;p&gt;“Reducing cost and time to create music tracks for new idea.”&lt;/p&gt;

&lt;p&gt;We need a lot of tools to do mixing and composing track. Which is expansive and time consuming and also requires skilled team members. Which become major problem for trying new ideas on music.&lt;/p&gt;

&lt;p&gt;For more:&lt;br&gt;
Visit my blog&lt;/p&gt;

</description>
      <category>manan</category>
      <category>innovation</category>
    </item>
    <item>
      <title>How you'd write a reactive calculator with x-HTML in 5 mins</title>
      <author>chris-czopp</author>
      <pubDate>Mon, 24 May 2021 20:25:25 +0000</pubDate>
      <link>https://dev.to/chrisczopp/how-you-d-write-a-reactive-calculator-with-x-html-in-5-mins-57oa</link>
      <guid>https://dev.to/chrisczopp/how-you-d-write-a-reactive-calculator-with-x-html-in-5-mins-57oa</guid>
      <description>&lt;p&gt;In this article you won't see the millionth way of writing a calculator with the tools that are well covered by many others. Instead, I'm going to show you how to do it with much less effort in a tool you probably haven't heard of yet. And it is a big deal since it automates and abstracts away frontend web app development by the ways you've seen elsewhere. And yeah, the calculator is a trivial app, yet it's a good example to present a few interesting concepts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CyUXfuIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2sjyy0syridn2avmyq7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CyUXfuIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2sjyy0syridn2avmyq7.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK, enough of the intro, here are few steps to follow:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to: &lt;a href="https://ide.glue.codes"&gt;https://ide.glue.codes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a new project.&lt;/li&gt;
&lt;li&gt;Write the below code, you can click preview to see changes as your'e typing.&lt;/li&gt;
&lt;li&gt;Export it to a self-contained app based on &lt;a href="http://solidjs.com/"&gt;SolidJS&lt;/a&gt; and JSX.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1, shrink-to-fit=no"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;gc-as=&lt;/span&gt;&lt;span class="s"&gt;"navName"&lt;/span&gt; &lt;span class="na"&gt;gc-name=&lt;/span&gt;&lt;span class="s"&gt;"Home"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Calculator&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;gc-as=&lt;/span&gt;&lt;span class="s"&gt;"layout"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;gc-as=&lt;/span&gt;&lt;span class="s"&gt;"slot"&lt;/span&gt; &lt;span class="na"&gt;gc-name=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;select-x&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; 
          &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;*&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/select-x&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;=&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;

              &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;

              &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;

              &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
                &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-just-happened"&gt;
  &lt;/a&gt;
  What just happened?
&lt;/h2&gt;

&lt;p&gt;Well, the above code certainly wouldn't work if you dropped it into a regular HTML file. In a traditional way, you'd need to have a script below the document and manually query for an element and then update it. It could work in a small app which you don't plan to extend. But, if you need your UI to be reactive and at the same time maintainable you'd opt for some reactive framework or library. Perhaps JSX so your UI looks like HTML but it can be interpolated with dynamic data in a declarative fashion. That can be done beautifully with &lt;a href="http://solidjs.com/"&gt;SolidJS&lt;/a&gt; and it will diff DOM at build-time as opposed to what many other frameworks/libraries do i.e. using Virtual DOM. It's all great but wouldn't it be cool to use HTML where possible and extend it to be reactive where necessary? This is exactly what you see in the code above.&lt;/p&gt;

&lt;p&gt;It's a combination of extended tags and UI signals to mange the local state. At &lt;a href="https://www.glue.codes"&gt;GlueCodes&lt;/a&gt;, we introduced extended tags which are named: &lt;code&gt;tagName + '-x'&lt;/code&gt; and have an embedded &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; allowing you to access variables available in the scope where they have been placed. The scripts can assign to &lt;code&gt;props&lt;/code&gt; variable to change props/attributes of the extended tag. In this case, you can see writing/reading &lt;code&gt;uiSignals&lt;/code&gt; which holds some sort of observables and it'll update any props they are assigned to. What you see is a meta-framework abstracting away the signals. See &lt;a href="https://github.com/solidjs/solid/blob/main/documentation/reactivity.md#signals"&gt;SolidJS&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Notice the &lt;code&gt;uiSignals&lt;/code&gt; are scoped to a slot/partial they are in and an HTML tag is told to be a slot by using one of many &lt;a href="https://www.glue.codes/docs-templating-htmlDirectives.html"&gt;HTML directives&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;gc-as=&lt;/span&gt;&lt;span class="s"&gt;"slot"&lt;/span&gt; &lt;span class="na"&gt;gc-name=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, in addition to extended tags, you can make your HTML dynamic by using attribute directives as you would in modern web frameworks. When typing most of them you'll get notified to auto-create (if don't exist) required actions or to install a widget. The vocabulary here is simple, an attribute &lt;code&gt;[gc-as]&lt;/code&gt; tells what it is and other &lt;code&gt;[gc-*]&lt;/code&gt; attributes are parameters.&lt;/p&gt;

&lt;p&gt;The above code can be split into 4 parts. An embedded &lt;code&gt;script&lt;/code&gt; tag in each of the extended tag allows to modify their props e.g. register events or set a value on an input. It modifies only the props of its direct parent tag. &lt;/p&gt;

&lt;p&gt;1) Capturing the first number:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2) Capturing the operator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;select-x&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;*&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;option&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/select-x&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Capturing the second number:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4) Displaying the result of equation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input-x&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

      &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;uiSignals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/input-x&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it about the UI signals. There is tons of features provided by &lt;a href="https://www.glue.codes"&gt;GlueCodes Studio&lt;/a&gt;. Widgets, built-in app state management, implementation assistant and many more. The most importantly it runs in the browser and stores the project metadata and the exported &lt;a href="http://solidjs.com/"&gt;SolidJS&lt;/a&gt; code on your hard drive!&lt;/p&gt;

&lt;p&gt;Looking forward to see your feedback!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>solidjs</category>
    </item>
    <item>
      <title>Optimizing performance of PHP app that sends an external request</title>
      <author>Volodymyr Dovbenko</author>
      <pubDate>Mon, 24 May 2021 20:08:07 +0000</pubDate>
      <link>https://dev.to/nostop8/optimizing-performance-of-php-app-that-sends-an-external-request-291p</link>
      <guid>https://dev.to/nostop8/optimizing-performance-of-php-app-that-sends-an-external-request-291p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iteration-0"&gt;Optimization Iteration #0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iteration-1"&gt;Optimization Iteration #1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iteration-2"&gt;Optimization Iteration #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expose"&gt;Exposing more info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I’m running web services API written in PHP and one of the endpoints during every request pings another external web service, particularly Firebase Realtime DB which in its turn can deliver notification to the client through the Websockets API. Below is the image with a rough architecture of this process:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4pT7QiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoell2p6fcw8fjo975g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4pT7QiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoell2p6fcw8fjo975g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
As you can see, any client app (browser) and any server app (some 3rd party) can send a request to the PHP endpoint, then PHP pings the Firebase endpoint and finally the Firebase notifies the client app (browser) about intercepted request.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#web-service-short-story"&gt;
  &lt;/a&gt;
  Web service short story
&lt;/h3&gt;

&lt;p&gt;The web service I am running is not very complicated and we can divide the operations is does into the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Processing request&lt;/li&gt;
&lt;li&gt;Doing few SQL queries including insert queries&lt;/li&gt;
&lt;li&gt;Performing POST request to the external Firebase Realtime DB API&lt;/li&gt;
&lt;li&gt;Providing response to the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After it was completed, I did load tests and profiling. It turned out that posting data to Firebase was taking around 1.6–2 seconds. Therefore number of requests that could be performed simultaneously to my own PHP endpoint was around 300–400 / 1 minute with the response time of more than 2 seconds (PHP app time + Firebase request time). This was a very poor result, so I started to look into improving the performance and particularly the request time to Firebase.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#a-bit-of-side-talk"&gt;
  &lt;/a&gt;
  A bit of side talk
&lt;/h3&gt;

&lt;p&gt;You might know that any VM is generally limited by 2 main factors: CPU and Memory. When it comes to these limitations, a very important aspect is the time (a relevant time value to our VM capacity) that is required for our application to run in a specific environment. The faster our app runs or in other words the more optimized it is, the more simultaneous instances of our app can be executed. This is especially valid for the PHP scripts.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#optimization-iteration-0"&gt;
  &lt;/a&gt;
  Optimization Iteration #0 &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;First of all, it turned out that the Firebase PHP SDK was making 2 requests all the time. First request to get the access token and second to actually post the data. I found out that there’s a way to use a “database secrets” which is a one-time generated token that you may use to access your Firebase DB. So I just dropped the SDK and used a direct request using CURL interface provided inside the PHP. The time to post data to Firebase decreased approximately by 1 second. So, now I could perform 700–800 requests per 1 minute and the response time was around 1–1.2 seconds. This is better than previous, but still not good enough.&lt;/p&gt;

&lt;p&gt;The reason why Firebase request was taking so long is because PHP waits for the response from the remote server due to its synchronous code execution nature. So all the subsequent code is blocked until the response is received. This piece of functionality with Firebase notifications is not very critical to my application and in case for any reason something goes wrong during the request to Firebase, there’s no need to perform some rollback and I do not actually need to know about it immediately etc. Thus, I decided to speed up the performance by omitting the part where PHP is waiting for the response from the remote server. The PHP should just send a request and does not care about what happens afterwards.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#optimization-iteration-1"&gt;
  &lt;/a&gt;
  Optimization Iteration #1 &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To solve this task I used a simple solution where you can execute external CLI commands using PHP. And yes, cURL does has a CLI interface (tool).&lt;br&gt;
We may present the updated architecture on the diagram below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9sUlCtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0c23k6b7e5oqzwnonwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9sUlCtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0c23k6b7e5oqzwnonwd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The PHP code combined with the cURL command looks the following way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$cliCommand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sh"&gt;&amp;lt;&amp;lt;&amp;lt;CODE
curl -k -H "Content-Type: application/json" -d '{"hello": "world"}' -X POST https://&amp;lt;my-db&amp;gt;.firebaseio.com/&amp;lt;my-endpoint&amp;gt;.json?auth=&amp;lt;database_secret&amp;gt; &amp;gt;&amp;gt; /tmp/firebase.log 2&amp;gt;&amp;amp;1 &amp;amp;
CODE;&lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cliCommand&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This part &lt;code&gt;&amp;gt;&amp;gt; /tmp/firebase.log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt; allows to omit the response waiting (code blocking) and instead log it inside the firebase.log file in case I need to check for any possible error later which I implemented later using a cronjob task.&lt;/p&gt;

&lt;p&gt;This simple solution made the endpoint working almost instantly. The response time from the PHP script dropped from 1–1.2 seconds to 150–250ms and now I could perform around 1200–1300 simultaneous requests per 1 minute… Really? I was expecting a bit more. Something was definitely wrong here.&lt;br&gt;
When I checked the htop tool (CPU and memory monitoring tool), I found out that during the load test, curl tools literally eats all the CPU. 100% of CPU power was filled with CURL tasks. I’m not really sure why this little command line application is “so hungry” for the computation power. If you know, please drop a message in the comments below.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#optimization-iteration-2"&gt;
  &lt;/a&gt;
  Optimization Iteration #2 &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Anyway, I started to search for some alternatives. Among CLI tools there’s nothing better than curl. So, I’ve decided to try another interface, particularly HTTP interface by experimenting with NodeJS (Express). Javascript is an asynchronous programming language and Node runs it very efficiently along with Express. I’ve created a small JS script using 2 extra libraries: Express and HTTP. It is basically an asynchronous proxy that listens for HTTP requests and forwards data to Firebase Realtime DB endpoint. Because we access the NodeJS script through the HTTP interface, instead of using exec() method on the PHP side, I had to switch to sockets, particularly to fsocketopen(), fwrite() and fclose(). Sockets allow to send ping requests from PHP without waiting for the response. You might want to ask why in the hell I need the NodeJS then? Well, if I use fsocketopen for sending request directly to the remote web server (Firebase) in a different network and region and for sending request to the local web server (NodeJS) that sits on the same machine — that’s 2 totally different things in terms of timing. Also I can run my local Express server without SSL, but Firebase can run using only HTTPS, thus fsocketopen would have to spend additional time to send an extra background request for the SSL handshake. Thus, yes, there’s a great benefit in using fsocketopen in order to simply open some another thread on some different local interface.&lt;br&gt;
Anyway, this is the new architecture diagram I came to:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cXfyDaj0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiio7xe57vava565841j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cXfyDaj0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiio7xe57vava565841j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here are the performance optimization results. CPU load went down from 100% to 40–50% max. The memory was almost on the same level, roughly 50–60%. The response time was 150–250 ms. And finally the number of simultaneous requests I could execute to the endpoint skyrocketed up to 5500 requests per 1 minute.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#exposing-more-info"&gt;
  &lt;/a&gt;
  Exposing more info &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#testing-environment"&gt;
  &lt;/a&gt;
  Testing Environment
&lt;/h3&gt;

&lt;p&gt;Finally, revealing the environment I used for those tests. It is EC2 t2.micro instance (1 CPU and 1GB of memory). BTW, MySQL DB is on the separate VM instance, which saves the VM resources greatly. For load tests I was using Apache jMeter and a default thread properties, which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;number of threads (users) equals to 10&lt;/li&gt;
&lt;li&gt;ramp-up period equals to 1 second.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#code-snippets"&gt;
  &lt;/a&gt;
  Code snippets
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;PHP script that sends request to the NodeJS script using the fsocketopen&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// url http://localhost:3000/prod or http://localhost:3000/dev&lt;/span&gt;
&lt;span class="nv"&gt;$urlParts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fsockopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$urlParts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'host'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$urlParts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'port'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$errno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$errstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// good place to log your error&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"POST "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$urlParts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;" HTTP/1.1&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Host: localhost&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Content-Length: "&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$jsonData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Connection: Close&lt;/span&gt;&lt;span class="se"&gt;\r\n\r\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$out&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$jsonData&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$out&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// good place to log your error&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;NodeJS script which forwards request asynchronously to Firebase&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;my-db-dev&amp;gt;.firebaseio.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;my-dev-token&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;prod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;my-db-prod&amp;gt;.firebaseio.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;my-prod-token&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;postFirebase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;envName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;environments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;envName&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;envName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; not found`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;envName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`/&amp;lt;my-endpoint&amp;gt;.json?auth=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Length&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;postFirebase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originalUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// Listen on port 3000&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Server started on port 3000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To summarize, there’s always a room for improving and optimizing the code and its efficiency. I’ve managed to improve the time required to run the API endpoint from 2.2 seconds to 0.2 (11x times). As for the number of simultaneous requests, the improvement is more than 13x times (from 300–400 requests per minute and up to 5500). NodeJS performed much better than a CLI’s curl tool in terms of consuming CPU and memory resources. Therefore the pair of “fsocketopen() / NodeJS” works much better than “exec() / curl” if you want to initiate another thread from within the PHP to ping some external resource or web service.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Please let me know if you have an idea why curl requires so much of CPU resources to send requests comparing to NodeJS? Also it is interesting if there’s any other good option instead of NodeJS to create a small proxy over the HTTP protocol to send requests asynchronously (e.g. Python?) and do you think it can perform better? Thanks ahead for your thoughts!&lt;/p&gt;

&lt;p&gt;P.S. This article was also posted on my another blog here: &lt;a href="https://nostop8.medium.com/optimizing-performance-of-php-app-that-sends-an-external-request-86e2958bfece"&gt;https://nostop8.medium.com/optimizing-performance-of-php-app-that-sends-an-external-request-86e2958bfece&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>firebase</category>
      <category>node</category>
      <category>performance</category>
    </item>
    <item>
      <title>Friendly Intro to Document Oriented Databases</title>
      <author>Kinanee Samson</author>
      <pubDate>Mon, 24 May 2021 20:06:27 +0000</pubDate>
      <link>https://dev.to/kalashin1/friendly-intro-to-document-oriented-databases-2dkm</link>
      <guid>https://dev.to/kalashin1/friendly-intro-to-document-oriented-databases-2dkm</guid>
      <description>&lt;p&gt;Choosing a database for your application is a critical and important part of software development cycle. There is no shortage of database options that you can chose and this just adds more complexity to the whole process. Personally i use Document oriented databases most of the time and this doesn't mean that Document oriented databases are the best solution for your database all the time, they do come with some albeit a few drawbacks but i think the benefits outweighs the drawbacks. One type of database you could use alternatively is Relational Databases, I recently made an article about Relational Databases and if you missed that, you can go over it &lt;a href="https://dev.to/kalashin1/a-note-on-relational-databases-42hj"&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-document-oriented-databases"&gt;
  &lt;/a&gt;
  What are Document Oriented Databases
&lt;/h2&gt;

&lt;p&gt;Document oriented database are a type database that allows you to organize and store your data into documents. The documents represent an individual record in our data. A document is just an object with key-value pairs. If you are familiar with JavaScript a document is similar to an object literal. Or a dictionary in python. Each document must belong to a collection, which in itself is just a reference to one or more documents that looks alike. You can think of it like this; a collection is a folder that holds multiple documents while documents are just files inside the collection that contains the actual data. Conceptually a collection is similar to a MySQL table, while documents are similar to the rows on a table. The keys on each document represents the columns, each document can have one or more keys. The keys holds a value which is usually of any type e.g(strings, numbers, dates, arrays, objects) e.t.c. The main take away here is that instead of defining how the data should look like on the collection like we do in a relational database with a table, each document actually specifies what it looks like that is why we define keys on the document. However this doesnt mean that we can be haphazard and do whatever we like, we have to ensure that each collection is consistent with the type of document stored inside to prevent errors when we are updating or retrieving data from the database.&lt;/p&gt;

&lt;p&gt;A typical example of a document oriented database collection&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_CNtEyD---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anjhtsfktla1yfc2x37c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_CNtEyD---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anjhtsfktla1yfc2x37c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A typical example of a document oriented database document&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j96yxQBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdhp18l6u75euin0slz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j96yxQBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdhp18l6u75euin0slz5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-document-oriented-databases"&gt;
  &lt;/a&gt;
  Benefits Of Document Oriented Databases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Document oriented database are developer friendly, they allow you to organize, store and retrieve your data in a format that is compatible with how it is consumed, basically what you get in the frontend is exactly how it looks in the backend albeit with some few changes so you don't need to write any data transformation logic keeping your database in sync with the frontend.&lt;/li&gt;
&lt;li&gt;Most Document oriented database service providers allow for flexible payment method rather than a fixed system you get with SQL database and in fact you end up only paying for as much as you use, i.e you are billed as per a set number of document reads and writes for a given period saving you some extra bucks. The best part is that most of the service providers have a free tier so you can even build some simple apps that utilizes this cool feature without worrying too much about paying any money initially.&lt;/li&gt;
&lt;li&gt;Document Oriented database service providers actually give you this database as a service, every other aspect of the database is automatically handled for you, you don't need worry about  data storage locations, electricity, scaling up your database, equipment management and all of that jazz. You can focus on what developers like to focus on and leave your worries not to God in this case but your document oriented database service providers. &lt;/li&gt;
&lt;li&gt;These type of database comes with a query language that is quite easy to learn and use, and allows you to do much more with just fewer lines of code. Although i have enjoyed working with SQL, the language is declarative and has a lot of keywords you need to remember, we already have many frameworks and languages to worry about! Most document oriented database have a query language that is expressive with few keywords and is actually implemented in a programming language you are already familiar with so you need not worry about having to learn a new language from scratch again.&lt;/li&gt;
&lt;li&gt;You don't have to worry about normalizing your data and figuring out how one thing is related to another thing, you do not have to separate information that deserves to be grouped together, you can keep everything you need to be together together. You only need to read a single document to get all the information you need, which means faster load response time. Personally i like keeping things together rather than in different places except of course there is no way around it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#drawbacks-of-document-oriented-database"&gt;
  &lt;/a&gt;
  Drawbacks of Document Oriented Database
&lt;/h2&gt;

&lt;p&gt;I wont say that document oriented databases comes with only benefits and no pain in the neck, there is some drawbacks to using document oriented database and the more common ones include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A schema is not automatically created for you when you create a collection or add a document to a collection thus if you don't implement one you can be having documents with key-value pairs that are not on other documents causing havoc when you want to retrieve or update data.&lt;/li&gt;
&lt;li&gt;Data modeling is quite complicated with document oriented database because it is entirely up to you to choose how you want to model your data. If you are a beginner programmer this can be a little too much for you and even if you are experienced, you have to spend some time on the table doing some structuring.&lt;/li&gt;
&lt;li&gt;Performing joins is actually quite difficult in document oriented database because from the ground up they are not designed to handle relational data so you would rely on your data modeling technique to work a way around this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#document-oriented-databases"&gt;
  &lt;/a&gt;
  Document Oriented Databases
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://firebase.google.com/docs/firestore/quickstart"&gt;&lt;strong&gt;Firesore&lt;/strong&gt;&lt;/a&gt; - This is a type of document oriented database that is provided by Google via Firebase, it is very simple to use and work with. Personally i have built a couple of web apps using firebaseb firestore and I'm currently using it on a project.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mongodb.com/cloud/atlas/lp/try2?utm_source=google&amp;amp;utm_campaign=gs_emea_nigeria_search_core_brand_atlas_desktop&amp;amp;utm_term=mongodb&amp;amp;utm_medium=cpc_paid_search&amp;amp;utm_ad=e&amp;amp;utm_ad_campaign_id=12212624539&amp;amp;gclid=Cj0KCQjwna2FBhDPARIsACAEc_VL7vGvCNKO0cFIhpfUVUKtIbcL66VokARSHSFdltV8qwrjoMRx08caAjltEALw_wcB"&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/a&gt; - The world's most used document oriented database, Mongodb is cloud database that is provided by the MongoDB organization, it is a complete and robust database, when combined with Mongoosejs you can easily negate some of the drawbacks of document oriented databases, i don't say this very often but i recommend using it over Firestore.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fauna.com/"&gt;&lt;strong&gt;Fauna DB&lt;/strong&gt;&lt;/a&gt; - This is a quite a new player in the document oriented database field and it offers more than just document oriented database because you can model relational data, graph data e.t.c but it also keeps things simple and you can only model document data, i pay a lot of attention to this database and i am planning on using it as my database solution for my next app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's for that today, i hope you found this useful and you enjoyed reading it, feel free to extend this with the benefits of document oriented database that makes you use them or one of the drawbacks that make you stay away from them. You can also add other document oriented database service providers that you use.&lt;/p&gt;

</description>
      <category>database</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Chrome Extensions For Developers </title>
      <author>Chaitanya Prabuddha</author>
      <pubDate>Mon, 24 May 2021 19:32:17 +0000</pubDate>
      <link>https://dev.to/line/chrome-extensions-for-developers-you-don-t-wanna-miss-5fl9</link>
      <guid>https://dev.to/line/chrome-extensions-for-developers-you-don-t-wanna-miss-5fl9</guid>
      <description>&lt;p&gt;If you’re a developer, you will likely already have a collection of Chrome extensions you use on a daily basis. Extensions make your work more productive, easier as well as can make your working fast. &lt;/p&gt;

&lt;p&gt;As most of us uses Chrome, or browsers that uses chrome infrastructure like brave. We are going to take about its extensions here. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fact:-  ( about 63% of internet users uses chrome )&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;Githunt&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you spend a lot of time on GitHub looking for new projects to work on, Githunt is useful for you.&lt;/p&gt;

&lt;p&gt;Why Githunt?&lt;/p&gt;

&lt;p&gt;Rather than depending on GitHub’s trending projects feed, this Chrome developer extension brings it to the fore by highlighting all trending projects in a new tab area in your browser. You can search projects in different languages, read a brief project description and the number of current open issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/githunt/khpcnaokfebphakjgdgpinmglconplhp"&gt;https://chrome.google.com/webstore/detail/githunt/khpcnaokfebphakjgdgpinmglconplhp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;strong&gt;Momentum&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is one of the most productive tool for me because it changes boring new tabs into interesting tabs including amazing pictures, motivational quotes or simply better looking. &lt;/p&gt;

&lt;p&gt;You can set a main focus for each day that acts as a reminder of what’s most important for my day each time I open a new Chrome browser window.&lt;/p&gt;

&lt;p&gt;*Visit- *&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca?hl=en"&gt;https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca?hl=en&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Window Resizer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Window Resizer is an incredibly useful Chrome extension for web developers. If you are working on a responsive projects, you can resize the windows of your browsers in the size of your requirement. &lt;/p&gt;

&lt;p&gt;It installs into Chrome and will resize any screen you’re working on to a range of popular screen sizes. It works better than the inspect feature of chrome because unlike chrome most common sizes are covered, mobile, tablet, desktop and the emulation seems very accurate.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh/"&gt;https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;Lorem Ipsum Generator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lorem Ipsum Generator is one of the best Chrome extensions, it does what it is meant for. It generates random text for demo websites and side projects in which you don't want to waste your time in written text that you are going to delete in future.&lt;/p&gt;

&lt;p&gt;Simply install the extension, select it within a page, tell it how much Lorem Ipsum copy you want to generate and copy it from the window. Paste it into your page and you’re done. Enjoy.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/lorem-ipsum-generator-def/mcdcbjjoakogbcopinefncmkcamnfkdb"&gt;https://chrome.google.com/webstore/detail/lorem-ipsum-generator-def/mcdcbjjoakogbcopinefncmkcamnfkdb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;strong&gt;Wappalyzer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to know the secrets behind a page, Wappalyzer is one way to find out. It is a very effective tool for identifying the underlying technologies behind web pages. It quickly identifies web services, CMS type, analytics tools, plugins, JavaScript libraries and a whole host of other apps And it is very accurate in it.&lt;/p&gt;

&lt;p&gt;A page will pop-up when you install this extension and then you can get all information that you want from this extension.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I Started A Newsletter, &lt;a href="https://linenewsletter.substack.com/subscribe?utm_source=menu&amp;amp;simple=true&amp;amp;next=https%3A%2F%2Flinenewsletter.substack.com%2Fp%2Fcoming-soon"&gt;Click Here To Subscribe&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;More information Down At The Last&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;6.&lt;strong&gt;Toggl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Toggl helps you track in which websites you spend your time on.  This information generally helps you in maintaining and improving your routine.&lt;/p&gt;

&lt;p&gt;After installing the Toggl extension, sign into the Todoist web app. A Toggl button will now appear next to any task you hover over. Click on the button to start the timer, and the time entry will automatically be populated with the task name. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/toggl-button-productivity/oejgccbfbmkkpaidnkphaiaecficdnfn"&gt;https://chrome.google.com/webstore/detail/toggl-button-productivity/oejgccbfbmkkpaidnkphaiaecficdnfn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.&lt;strong&gt;Grammarly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This does need any introduction now. Not only does the Grammarly extension check for the usual grammar and spelling mistakes, it will also give you suggestions on style, tone, and word choice to make all your writing inside Chrome “bold, clear, and mistake-free”.&lt;/p&gt;

&lt;p&gt;You can have a paid subscription of this extension, although the free version is sufficient for most of us.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen"&gt;https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;LastPass-&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Save and autofill your logins. As the native password tool for chrome is fine for autofill, lastpass gives you wings in doing this. This powerful tool can be used in all your devices together.&lt;/p&gt;

&lt;p&gt;LastPass is an awesome (and free!) password manager that saves your login credentials across your devices. With one master password, you’ll be able to manage all your passwords from a “password vault,” generate strong passwords.&lt;/p&gt;

&lt;p&gt;*Visit- *&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd"&gt;https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9.&lt;strong&gt;JSON Viewer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JSON Viewer helps you to manage JSON data into a quickly recognizable hierarchy view in a browser window. Working with raw JSON data is fine when you have the time, but using this addon makes the code easier to quickly absorb and use.&lt;/p&gt;

&lt;p&gt;With over 800,000 users and glowing reviews, this is definitely an extension to try.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh"&gt;https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10.&lt;strong&gt;Page Ruler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Page Ruler is a dynamic measurement extension. It is more useful for measuring between your selected areas. Page Rule measures those elements very accurately.&lt;/p&gt;

&lt;p&gt;When you need to measure something, select the ruler icon so it turns orange. The page fades, allowing you to draw the element you want to measure. The extension will then present the exact measurements of the element in a small popup box beside it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Visit-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/page-ruler/idhjfgkakeliobkfbijghiaklmiaheag?hl=en"&gt;https://chrome.google.com/webstore/detail/page-ruler/idhjfgkakeliobkfbijghiaklmiaheag?hl=en&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The End&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Important Information-&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I have started a newsletter in which you will get Email twice&lt;/em&gt; &lt;em&gt;a week directly from me. I will send you latest tech, coding &amp;amp;&lt;/em&gt; &lt;em&gt;Other useful information. I will also be spending a one riddle&lt;/em&gt; &lt;em&gt;each time and the first to complete the riddle will get a small&lt;/em&gt; &lt;em&gt;gift from me&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linenewsletter.substack.com/subscribe?utm_source=menu&amp;amp;simple=true&amp;amp;next=https%3A%2F%2Flinenewsletter.substack.com%2Fp%2Fcoming-soon"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4PKSsD75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljj0lt0zq1dhca0h09yz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me On &lt;a href="https://twitter.com/chetanistaken"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Facebook launches Dynaboard an evaluation-as-a-service for NLP</title>
      <author>amananandrai</author>
      <pubDate>Mon, 24 May 2021 19:16:40 +0000</pubDate>
      <link>https://dev.to/amananandrai/facebook-launches-dynaboard-an-evaluation-as-a-service-for-nlp-3kah</link>
      <guid>https://dev.to/amananandrai/facebook-launches-dynaboard-an-evaluation-as-a-service-for-nlp-3kah</guid>
      <description>&lt;p&gt;In Natural Language Processing it is very difficult to gauge the performance of a model. Facebook has launched &lt;strong&gt;Dynaboard&lt;/strong&gt; which ranks state-of-the-art language models like &lt;strong&gt;BERT&lt;/strong&gt;, &lt;strong&gt;RoBERTa&lt;/strong&gt;, &lt;strong&gt;ALBERT&lt;/strong&gt;, &lt;strong&gt;T5&lt;/strong&gt;, and &lt;strong&gt;DeBERTa&lt;/strong&gt; on four common NLP tasks. The tasks are- &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Natural Language Inference&lt;/li&gt;
&lt;li&gt;Question Answering&lt;/li&gt;
&lt;li&gt;Sentiment Analysis&lt;/li&gt;
&lt;li&gt;Hate Speech&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For evaluating the models for these tasks first a new performance evaluation parameter was created that is known as &lt;strong&gt;Dynascore&lt;/strong&gt;.&lt;br&gt;
It takes into consideration different metrics which include &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Accuracy&lt;/strong&gt; -  how many examples did the model get right as a percentage&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Compute&lt;/strong&gt; - To account for computation, we measure the number of examples that a model can process per second on its instance in our evaluation cloud&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Memory&lt;/strong&gt; - We average the memory usage over the duration that the model is running, with measurements taken each N seconds&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Robustness&lt;/strong&gt; - We evaluate robustness of a model's prediction by measuring changes after adding perturbations to the examples&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fairness&lt;/strong&gt; - we perform perturbations of original datasets by changing, for instance, noun phrase gender (e.g., replacing “sister” with “brother”, or “he” with “they”) and by substituting names with others that are statistically predicative of another race or ethnicity. For the purposes of Dynaboard scoring, a model is considered more “fair” if its predictions don’t change after such a perturbation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dynascore is calculated by giving different weightage to these metrics and combining them depending on the type of task. First the tasks mentioned above which form the Dynabench were solved statically. Dynaboard has helped to make this process more dynamic.&lt;/p&gt;

&lt;p&gt;The objectives achieved by Dynaboard are-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reproducibility&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Backwards Compatibility&lt;/li&gt;
&lt;li&gt;Forward Compatibility&lt;/li&gt;
&lt;li&gt;Prediction Costs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To know more about Dynaboard read the official &lt;a href="https://ai.facebook.com/blog/dynaboard-moving-beyond-accuracy-to-holistic-model-evaluation-in-nlp/"&gt;FB blog&lt;/a&gt; and to know about further details of implementation read the &lt;a href="https://dynabench.org/dynaboard.pdf"&gt;paper&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>nlp</category>
      <category>news</category>
    </item>
    <item>
      <title>We teach "design" (the whole process) - and of course / the programming too! </title>
      <author>perpetual . education</author>
      <pubDate>Mon, 24 May 2021 19:05:59 +0000</pubDate>
      <link>https://dev.to/perpetual_edu/we-teach-design-the-whole-process-and-of-course-the-programming-too-54m8</link>
      <guid>https://dev.to/perpetual_edu/we-teach-design-the-whole-process-and-of-course-the-programming-too-54m8</guid>
      <description>&lt;p&gt;Haven't heard of us? We're &lt;strong&gt;Perpetual&lt;/strong&gt; "Dot" &lt;strong&gt;Education&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That makes sense! We're not a giant corporation. We're keeping thing small and effective.&lt;/p&gt;

&lt;p&gt;We're a small design school dedicated to educating a new era of aware, confident, and &lt;em&gt;responsible&lt;/em&gt; designers in the web space. There are a million "coders" out there - but we need something &lt;em&gt;more&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ooF9DZ-WD1w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The classes are small and personal. Serious personal attention. It's a 6-month program - and it's only goal is to focus full time on getting you trained up and out there designing a better world. You can talk to us every single day (the real humans who designed the course).&lt;/p&gt;

&lt;p&gt;Learn more deeply - and &lt;em&gt;faster&lt;/em&gt; - by focusing on just the right things at the right times.&lt;/p&gt;

&lt;p&gt;Sound &lt;em&gt;interesting?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;We still have some openings for June.&lt;/p&gt;

&lt;p&gt;Next session won't start until August.&lt;/p&gt;

&lt;p&gt;If you want a 100% chill / no pressure - meeting (to meet us/the actual humans who teach the course) - with real-world advice...  and no "Salesman" stuff: Do it. Meet us. It's easy.&lt;/p&gt;

&lt;p&gt;Here's what some of our students are writing during the course:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apinchofcode.substack.com/p/a-month-studying-how-to-code"&gt;a-month-studying-how-to-code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexvong.substack.com/p/working-with-my-first-client-an-intro"&gt;working-with-my-first-client-an-intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://zinthya.substack.com/p/i-am-here"&gt;i-am-here&lt;/a&gt;
&lt;a href="https://jessehunter.substack.com/p/a-dreamer-commits"&gt;a-dreamer-commits&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annalenajohnson.substack.com/p/a-rising-web-designer-and-her-frequent"&gt;a-rising-web-designer-and-her-frequent-emotional-outbusts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://perpetualphilomath.substack.com/p/a-philomath-and-perpetual-learning"&gt;a-philomath-and-perpetual-learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://johnxm.substack.com/p/1"&gt;part-one&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've been trying to "learn code" - for a week or a month - or 6 months - or years... &lt;em&gt;consider&lt;/em&gt; a new path.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#perpetual-education"&gt;
  &lt;/a&gt;
  &lt;a href="https://perpetual.education"&gt;Perpetual Education&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>Firebase Authentication with React and Guarded Routes</title>
      <author>Justin Brooks</author>
      <pubDate>Mon, 24 May 2021 19:01:36 +0000</pubDate>
      <link>https://dev.to/jsbroks/firebase-authentication-with-react-and-guarded-routes-41nm</link>
      <guid>https://dev.to/jsbroks/firebase-authentication-with-react-and-guarded-routes-41nm</guid>
      <description>&lt;p&gt;Authentication is one of those things that just always seems to take a lot more effort than we want it to, yet it's always a feature every website needs.&lt;/p&gt;

&lt;p&gt;Firebase makes this process super easy. So today lets create a React application where we use firebase authentication and router guards.&lt;/p&gt;

&lt;p&gt;It will have a total of 3 pages. One for signing up, another for logging, and a home page that is only accessible if the user is authenticated.&lt;/p&gt;




&lt;p&gt;You can find the full write up at &lt;a href="http://codingwithjustin.com"&gt;codingwithjustin.com&lt;/a&gt; and source code on &lt;a href="https://github.com/codingwithjustin/firebase-v9-auth-react"&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MEAjrlQ35HQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#firebase"&gt;
  &lt;/a&gt;
  Firebase
&lt;/h1&gt;

&lt;p&gt;We'll need to set up a firebase project to get started.&lt;/p&gt;

&lt;p&gt;Head over to Firebase and create a new application. The process should be straightforward and only take a few seconds. We'll also need to enable the auth options before we start building anything. First, make sure you enable email/password in the Authentication tab,  by clicking on Sign-methods.&lt;/p&gt;

&lt;p&gt;I'll also be using &lt;strong&gt;version 9&lt;/strong&gt; of firebase which is currently in beta. It makes the firebase tree shakeable as well as provides some other improvements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h1&gt;

&lt;p&gt;We'll need to create a new project using the create react app CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app firebase-auth-react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once completed we'll also install &lt;code&gt;react-router-dom&lt;/code&gt; and &lt;code&gt;firebase@beta&lt;/code&gt; for version 9.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-router-dom firebase@beta
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next I'll create a firebase helper file called &lt;code&gt;firebase.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;initializeApp&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;firebaseApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initializeApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="cm"&gt;/* config */&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AuthContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AuthContextProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unsubscribe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;onAuthStateChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;unsubscribe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AuthContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useAuthState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AuthContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we'll initialize our configuration using the values we got from creating a project. We'll also create an auth context for holding the state of the current user signed in.&lt;/p&gt;

&lt;p&gt;Context in react is a tool that allows you to share state throughout the whole react component without having to pass it down by props. Instead, we can initialize a &lt;code&gt;Context Provider&lt;/code&gt;, pass in our state as value, and then we can access it anywhere by calling &lt;code&gt;useContext&lt;/code&gt; with our context object. In our case will want to pass in the user's state which we get from the &lt;code&gt;onAuthStateChanged&lt;/code&gt; listener. We'll also want to make sure we unsubscribe from this event when the component is unmounted.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h1&gt;

&lt;p&gt;In our &lt;code&gt;App.js&lt;/code&gt; we'll need to add our routing option and link these to each of our pages. However, doing this won't protect our routes from unauthenticated users. To protect our routes we'll create a custom component which Ill call &lt;code&gt;AuthenticatedRoute&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AuthenticatedRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAuthState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`AuthenticatedRoute: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;
      &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routeProps&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;routeProps&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt; : &amp;lt;Redirect to="/&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; /&amp;gt;
      }
    /&amp;gt;
  )
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll call the &lt;code&gt;useAuthState&lt;/code&gt; hook we created earlier to check if the user is authenticated. If they are authenticated we'll render the page, otherwise, we'll redirect them to the login page.&lt;/p&gt;

&lt;p&gt;Let's also create a simple UnauthenticatedRoute that will use for the login page. This component is similar to the logic above expect we will only want to render the component if the user is not authenticated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UnauthenticatedRoute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAuthState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`UnauthenticatedRoute: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;
      &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;routeProps&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;routeProps&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt; : &amp;lt;Redirect to="/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; /&amp;gt;
      }
    /&amp;gt;
  )
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's also worth mentioning, you might want to add a loading sign-on in your app while the auth check is being run. This way you don't flash a page every time you refresh.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pages"&gt;
  &lt;/a&gt;
  Pages
&lt;/h1&gt;

&lt;p&gt;Now, let's go through each page and those up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#login"&gt;
  &lt;/a&gt;
  Login
&lt;/h2&gt;

&lt;p&gt;For the login page, we'll create a form that asks the user for an email address and password. When the user clicks the submit button, we'll grab those two values from the form element and pass them into the &lt;code&gt;signInWithEmailAndPassword&lt;/code&gt; function. Once it's successful the user will be considered logged in and will automatically be redirected to the home page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I recommend you add better error handling here but I'm going to wrap this in a try-catch statement and alert the user with any error messages.&lt;/p&gt;

&lt;p&gt;If we wanted to redirect to a specific URL we could call the &lt;code&gt;useLocation&lt;/code&gt; hook from the react router and push a path onto it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#signup"&gt;
  &lt;/a&gt;
  Signup
&lt;/h2&gt;

&lt;p&gt;The signup page is also going to be very similar, we'll create another form that asks for their email and password. On submit we'll grab those values and call the &lt;code&gt;createUserWithEmailAndPassword&lt;/code&gt; function. If the user signs in is successfully they will automatically get redirect to the home page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createUserWithEmailAndPassword&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SignUp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;createUserWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;Up&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;Up&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#home-page"&gt;
  &lt;/a&gt;
  Home Page
&lt;/h2&gt;

&lt;p&gt;For the Home page, We'll put a nice welcome message and show the user's email. We'll also create a button that will call the auth signout function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;signOut&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firebase/auth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useAuthState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./firebase&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAuthState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;signOut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getAuth&lt;/span&gt;&lt;span class="p"&gt;())}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Adding authentication and access control to your application doesn't have to be a hassle. Both the setup step and, more importantly, the maintenance over time, are handled with modern platforms like Firebase.&lt;/p&gt;

&lt;p&gt;I have a community over on &lt;a href="https://codingwithjustin.com/discord"&gt;discord&lt;/a&gt; if you'd like to learn more. You should also check out my website &lt;a href="http://codingwithjustin.com"&gt;codingwithjustin.com&lt;/a&gt; where I post more content similar to this one.&lt;/p&gt;

</description>
      <category>react</category>
      <category>firebase</category>
    </item>
    <item>
      <title>SOLID: Principio de Segregación de Interfaces</title>
      <author>Victor Manuel Pinzon</author>
      <pubDate>Mon, 24 May 2021 18:35:40 +0000</pubDate>
      <link>https://dev.to/victorpinzon198/solid-principio-de-segregacion-de-interfaces-1018</link>
      <guid>https://dev.to/victorpinzon198/solid-principio-de-segregacion-de-interfaces-1018</guid>
      <description>&lt;p&gt;Este principio fue desarrollado por Robert C. Martin mientras trabajaba como consultor en Xerox. Durante su periodo laboral, Martin estuvo a cargo del desarrollo de un nuevo sistema de gestión de impresiones, que permitía realizar diferentes acciones concurrentes en una nueva línea de impresoras.  &lt;/p&gt;

&lt;p&gt;A lo largo del desarrollo notó que pequeñas modificaciones al sistema terminaban en largos despliegues a producción, en muchos casos, en despliegues de módulos fuera del alcance de los cambios. El origen del problema era una interfaz sobrecargada con diferentes firmas de métodos que era utilizada en todas las acciones concurrentes que desempeñaba el sistema. Es decir, si Martin realizaba modificaciones en los módulos de impresión, los cambios se propagaban a los otros módulos, como el de faxeo, escaneo, etc. &lt;/p&gt;

&lt;p&gt;La solución dada por Robert C. Martin a este problema, es lo que hoy conocemos como el Principio de Segregación de Interfaces. &lt;/p&gt;

&lt;p&gt;La definición del principio es la siguiente:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ningún cliente debe de ser forzado a depender de una interfaz que no utiliza.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;El principio es bien sencillo, ninguna clase debe de ser forzada a implementar métodos de interfaces que no utiliza. El objetivo, al igual que el principio de responsabilidad única, es limitar el alcance de los cambios a futuro.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#violaci%C3%B3n-al-principio-de-segregaci%C3%B3n-de-interfaces"&gt;
  &lt;/a&gt;
  Violación al Principio de Segregación de Interfaces
&lt;/h2&gt;

&lt;p&gt;Supongamos que eres el desarrollador a cargo del sistema de gestión de la nueva línea de impresoras multifuncionales de Xerox. Este nuevo sistema se desarrollará desde cero, por lo tanto estarás a cargo de los futuros desarrollos de las diferentes impresoras que se originen de la nueva línea de multifuncionales. &lt;/p&gt;

&lt;p&gt;Esta nueva línea cuenta con las siguientes capacidades:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Impresión.&lt;/li&gt;
&lt;li&gt;Escaneo.&lt;/li&gt;
&lt;li&gt;Faxeo.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLX&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de imprimir el siguiente documento 
     * activo en la cola de impresión.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de escanear el documento cargado
     * en la bandeja de escaneo.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de faxear el documento cargado
     * en la bandeja de faxeo.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;faxearDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para llevar a cabo el desarrollo se define la siguiente interfaz. La cual establece los métodos básicos que tendrán las multifuncionales de la nueva línea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ImpresoraLX8578&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLX&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de impresión de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de escaneo de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;faxearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de faxeo de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Para facilitar la compresión del ejemplo, se omitió la implementación especifica de cada método.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Durante varios meses se lanzan diferentes versiones de la multifuncional, las cuales utilizan la misma interfaz para definir sus funcionalidades principales. &lt;/p&gt;

&lt;p&gt;Gracias a la aceptación de la nueva línea de impresoras. Gerencia, te solicita la integración de l sistema de gestión de impresiones a una nueva impresora económica, que será lanzada bajo la línea de impresoras que esta bajo tu responsabilidad. La diferencia es que esta nueva impresora no contará con la capacidad de enviar faxes, únicamente impresión y escaneo.&lt;/p&gt;

&lt;p&gt;Tomando en cuenta que esta nueva impresora pertenece a la misma línea que las impresoras anteriores y también es categorizada como multifuncional, decides utilizar la interfaz definida para dicha línea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ImpresoraLX8590&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLX&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de impresión de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de escaneo de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;faxearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UnsupportedOperationException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Impresora no cuenta con la capacidad de faxeo."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;En este punto es donde se da la violación al Principio de Segregación de Interfaces, debido a que la impresora &lt;strong&gt;ImpresoraLX8590&lt;/strong&gt;  es forzada a depender de métodos que no utiliza.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementaci%C3%B3n-del-principio-de-segregaci%C3%B3n-de-interfaces"&gt;
  &lt;/a&gt;
  Implementación del Principio de Segregación de Interfaces
&lt;/h2&gt;

&lt;p&gt;La solución al ejemplo anterior, es la segregación de la interfaz que agrupa todos los métodos en diferentes interfaces especializadas. Por lo tanto, la interfaz &lt;strong&gt;MultifuncionalLX&lt;/strong&gt; se convertirá en las interfaces:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MultifuncionalLXImpresion&lt;/li&gt;
&lt;li&gt;MultifuncionalLXEscaneo&lt;/li&gt;
&lt;li&gt;MultifuncionalLXFaxeo
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLXEscaneo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de escanear el documento cargado
     * en la bandeja de escaneo.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLXFaxeo&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de faxear el documento cargado
     * en la bandeja de faxeo.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;faxearDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLXImpresion&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="cm"&gt;/**
     * Método encargado de imprimir el siguiente documento 
     * activo en la cola de impresión.
     * 
     * @return      Retorna boolean indicando el resultado.
     */&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se modifican las clases de las impresoras anteriores para que utilice las interfaces especializadas.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ImpresoraLX8578&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLXEscaneo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
        &lt;span class="nc"&gt;MultifuncionalLXFaxeo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;MultifuncionalLXImpresion&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de impresión de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de escaneo de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;faxearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de faxeol de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Se define la clase &lt;strong&gt;ImpresoraLX8590&lt;/strong&gt; únicamente con las interfaces de escaneo e impresión.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ImpresoraLX8590&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MultifuncionalLXEscaneo&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
        &lt;span class="nc"&gt;MultifuncionalLXImpresion&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;imprimirDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de impresión de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;escanearDocumento&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Lógica de escaneo de documentos&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Las modificaciones realizadas permiten que el código se encuentre en cumplimiento con el Principio de Segregación de Interfaces.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#diferencia-entre-el-principio-de-segregaci%C3%B3n-de-interfaces-y-el-principio-de-sustituci%C3%B3n-de-liskov"&gt;
  &lt;/a&gt;
  Diferencia entre el Principio de Segregación de Interfaces y el Principio de Sustitución de Liskov
&lt;/h2&gt;

&lt;p&gt;Algunos desarrolladores pueden confundir estos dos principios SOLID. Sin embargo, ambos se enfocan en diferentes aspectos puntuales en el diseño de la programación orientada a objetos.&lt;/p&gt;

&lt;p&gt;El Principio de Sustitución de Liskov se enfoca en subtipos y herencia, se enfoca en que los subtipos de una clase cumplan con el contrato especificado en la clase abstracta. Por otro lado, el Principio de Segregación de Interfaces se enfoca en segregar interfaces grandes en interfaces especializadas, así las clases que implementen dichas interfaces no dependan de interfaces y métodos que no utilizan.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cuando-utilizar-el-principio-de-segregaci%C3%B3n-de-interfaces"&gt;
  &lt;/a&gt;
  Cuando utilizar el Principio de Segregación de Interfaces
&lt;/h2&gt;

&lt;p&gt;Este principio, al igual que el principio de responsabilidad única, es clave para limitar el alcance de los cambios futuros en el diseño de las aplicaciones. Sin embargo, es muy difícil detectar estas violaciones durante las primeras iteraciones de la solución. Lo mejor es permitir que la solución evolucione para poder identificar los puntos claves en donde se puede aplicar este principio.&lt;/p&gt;

&lt;p&gt;Si deseas ampliar tu conocimiento acerca del Principio de Segragación de Interfaces, puedes consultar el blog de &lt;a href="https://blog.cleancoder.com/uncle-bob/2020/10/18/Solid-Relevance.html"&gt;Robert C. Martin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En la próxima publicación discutiremos acerca del último principio SOLID, el Principio de Inversión de Dependencias.&lt;/p&gt;

</description>
      <category>oop</category>
      <category>spanish</category>
      <category>solid</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Hide NavBar as Scroll down, in less than 10 lines of javascript;</title>
      <author>Areeb ur Rub</author>
      <pubDate>Mon, 24 May 2021 18:21:30 +0000</pubDate>
      <link>https://dev.to/areeburrub/hide-navbar-as-scroll-down-in-less-than-10-lines-of-javascript-1i00</link>
      <guid>https://dev.to/areeburrub/hide-navbar-as-scroll-down-in-less-than-10-lines-of-javascript-1i00</guid>
      <description>&lt;p&gt;You must have seen this effect on several website, where you scroll down and navigation bar automatically hides and reappears when scroll up.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/areeburrub/embed/Vwpbxjw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So here's basic page in which I have implemented this,in just 10 lines of javascript.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var lastScrollTop;&lt;br&gt;
navbar = document.getElementById('navbar');&lt;br&gt;
window.addEventListener('scroll',function(){&lt;br&gt;
  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;&lt;br&gt;
  if(scrollTop &amp;gt; lastScrollTop){&lt;br&gt;
    navbar.style.top='-80px';&lt;br&gt;
  }&lt;br&gt;
  else{&lt;br&gt;
    navbar.style.top='0';&lt;br&gt;
  }&lt;br&gt;
  lastScrollTop = scrollTop;&lt;br&gt;
});&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-its-working"&gt;
  &lt;/a&gt;
  How it's working
&lt;/h3&gt;

&lt;p&gt;Here, the position of the navbar is being altered using javascript.&lt;/p&gt;

&lt;p&gt;First we create a variable which stores position of Page;&lt;/p&gt;

&lt;p&gt;Then we get the scroll position using: &lt;code&gt;window.pageYOffset&lt;/code&gt; or for some browser 'document.documentElement.scrollTop';&lt;/p&gt;

&lt;p&gt;Then check that weather the page is scrolled up or down;&lt;/p&gt;

&lt;p&gt;Then save the scroll vale to the variable;&lt;/p&gt;

&lt;p&gt;This is done every time whenever the page is scrolled, as all this lies under a &lt;code&gt;EventListener&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-the-js-in-codepen-it-will-make-it-more-clear"&gt;
  &lt;/a&gt;
  Check the JS in codepen it will make it more clear
&lt;/h3&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Deployer on GitHub Actions</title>
      <author>Stefan Zweifel</author>
      <pubDate>Mon, 24 May 2021 17:43:04 +0000</pubDate>
      <link>https://dev.to/_stefanzweifel/deployer-on-github-actions-3ie5</link>
      <guid>https://dev.to/_stefanzweifel/deployer-on-github-actions-3ie5</guid>
      <description>&lt;p&gt;Today I would like to share with you my approach on how I deploy my PHP applications with &lt;a href="https://deployer.org"&gt;deployer&lt;/a&gt; through GitHub Actions. This might sound counterintuitive, as deploying with deployer is already easy: Running a CLI command and youre done.&lt;/p&gt;

&lt;p&gt;However, running deployer on GitHub Actions allows you to make the deployment process available to more people and/or to more situations. For example you could trigger the deployment automatically whenever a new commit is made to a particular branch, when a new release has been tagged, a new Pull Request is opened or when a user runs a Slack Command in a certain channel.&lt;/p&gt;

&lt;p&gt;This article will go into detail how to write the GitHub Actions workflows and gives you examples on how to trigger these workflows. I will not cover how to configure deployer itself.&lt;br&gt;&lt;br&gt;
Accompanying this article is an example Laravel application with example workflows for different deployment scenarios. If you like to read code first you can have a look at the repository &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example"&gt;on GitHub&lt;/a&gt; (I will reference this example project throughout the article).&lt;/p&gt;

&lt;p&gt;Before we dive deep into the workflow examples, I would like to give you a short introduction to what deployer and GitHub Actions are.&lt;/p&gt;

&lt;p&gt;You can skip the intros and jump right &lt;a href="#the-deployer-github-action"&gt;to the requirements and the first example&lt;/a&gt;. There is a &lt;a href="#faq"&gt;FAQ&lt;/a&gt; section at the end to answer common questions that might come up.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-deployer"&gt;
  &lt;/a&gt;
  What is deployer?&lt;a href="#what-is-deployer"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://deployer.org"&gt;deployer&lt;/a&gt; is a deployment tool written in PHP. It comes with "Zero Downtime Deployments" out of the box and can be extended by writing simple PHP code. (&lt;a href="https://github.com/capistrano/capistrano"&gt;capistrano&lt;/a&gt; would be the equivalent in the Ruby world).&lt;/p&gt;

&lt;p&gt;But what does "Zero Downtime Deployment" mean? Here is how I would describe it:&lt;/p&gt;

&lt;p&gt;When your app is being deployed, &lt;code&gt;deployer&lt;/code&gt; creates a fresh copy of your app in a folder, prepares the artefacts that are needed to run your app (compiles your CSS and JavaScript files, installs your Composer dependencies) and then symlinks the newly created folder to be picked up by the webserver.&lt;/p&gt;

&lt;p&gt;Using this approach your app is still accessible and useable, while deployer installs your dependencies and builds your frontend assets in the newly created folder.&lt;br&gt;&lt;br&gt;
In contrast, if you install composer dependencies without zero downtime deployments, your app might break for for a couple of seconds an your visitors will see error messages. Not nice.&lt;/p&gt;

&lt;p&gt;Another benefit of deployer is that each deployment is atomic: If the deployed code breaks your app you can rollback to a previous deployment by running &lt;code&gt;dep rollback&lt;/code&gt; in your terminal.&lt;/p&gt;

&lt;p&gt;If you want to learn more about &lt;code&gt;deployer&lt;/code&gt;, I can recommend Loris Leiva's article series &lt;a href="https://lorisleiva.com/deploy-your-laravel-app-from-scratch"&gt;Deploy your Laravel App from Scratch&lt;/a&gt;. Reading the series I've learned to better organize my deployer-file though I've been using &lt;code&gt;deployer&lt;/code&gt; for years now.&lt;/p&gt;

&lt;p&gt;The main focus of &lt;strong&gt;this&lt;/strong&gt; article however is how to trigger a deployment through GitHub Actions. To keep things simple we will be using a basic deployer-file to deploy our demo application. You can find the GitHub repository &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example"&gt;here&lt;/a&gt; and the used deployer file &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/deploy.yaml"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next a short introduction to GitHub Actions.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-github-actions"&gt;
  &lt;/a&gt;
  What is GitHub Actions?&lt;a href="#what-is-github-actions"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; is the continous integration and delivery feature baked into GitHub. With Actions you can run any type of software in reaction to an event that happens in GitHub. An event can be a "git-push", when a pull request is opened, a new issue is created and much more.&lt;/p&gt;

&lt;p&gt;Workflows are at the core of GitHub Actions and they are written in YAML. The most common workflows for programming projects are running tests, running code linters or optimizing image sizes.&lt;br&gt;&lt;br&gt;
On my site I've covered some of these common workflows (see &lt;a href="https://stefanzweifel.io/posts/run-laravel-test-suite-on-github-actions-with-laravel-docker/"&gt;"Run Laravel test suite on GitHub Actions with laravel-docker"&lt;/a&gt; or &lt;a href="https://stefanzweifel.io/posts/run-prettier-or-php-cs-fixer-with-github-actions/"&gt;"Run prettier or php-cs-fixer with GitHub Actions"&lt;/a&gt;) and special ones – like &lt;a href="https://stefanzweifel.io/posts/2021/04/28/auto-merge-dependabot-pull-requests/"&gt;Auto Merging Dependabot Pull Requests&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#why-deploy-your-app-through-github-actions"&gt;
  &lt;/a&gt;
  Why deploy your app through GitHub Actions?&lt;a href="#why-deploy-your-app-through-github-actions"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As mentioned in the beginning, running &lt;code&gt;deployer&lt;/code&gt; on Actions can give more people in your team or your organisation the power to deploy your applications. In simple terms, by moving to GitHub Actions, the execution of the &lt;code&gt;deployer&lt;/code&gt; command is moved from a local terminal to an environment which is accessible through an API.&lt;/p&gt;

&lt;p&gt;If your team works with Slack, you might write a Slack integration to &lt;code&gt;/deploy app prod&lt;/code&gt; from a channel. Or write an Alfred workflow to deploy your side project without starting your terminal. Or write an iOS Shortcut to deploy your app from the go.&lt;/p&gt;

&lt;p&gt;And than there is &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows"&gt;the enormous list of events&lt;/a&gt; that can trigger a workflow in GitHub Actions. The &lt;code&gt;schedule&lt;/code&gt;-trigger allows you to create a nightly deployment of your app. Or listening to the &lt;code&gt;release&lt;/code&gt; event allows you deploy your app when a new release has been tagged. Perfect for when your team is working in sprints.&lt;/p&gt;

&lt;p&gt;I think you get the idea. Moving the deployment process away from your terminal to GitHub itself gives you endless posibilites to trigger a deployment from anywhere.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#when-to-trigger-the-deployment"&gt;
  &lt;/a&gt;
  When to trigger the deployment?&lt;a href="#when-to-trigger-the-deployment"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Before we go any further, we need to answer an important question: &lt;strong&gt;When&lt;/strong&gt; should the deployment for an environment for your application be triggered?&lt;/p&gt;

&lt;p&gt;Should the default branch always be deployed to your &lt;em&gt;staging&lt;/em&gt; environment when a new commit is pushed? Should the &lt;em&gt;production&lt;/em&gt; environment be deployed when a new release is tagged? Is each deployment triggered manually?&lt;/p&gt;

&lt;p&gt;The answer to this question is different from organisation to organisation. For example in my team we deploy manually – meaning we invoked &lt;code&gt;dep deploy&lt;/code&gt; manually from our terminals when we wanted (4-5 times a day). But that's what works for us.&lt;br&gt;&lt;br&gt;
Your team might work in sprints and deploy a new version every other week.&lt;/p&gt;

&lt;p&gt;As hinted in the previous section, GitHub gives us a vast list of events through which a deployment can be triggered. To keep things simple, I've decided to cover the following deploy scenarios in this article:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deploying manually through the GitHub UI and through the GitHub API.&lt;/li&gt;
&lt;li&gt;Deploy an app to production when a new version is tagged and released.&lt;/li&gt;
&lt;li&gt;Deploy an app to staging when a new commit is pushed to GitHub.&lt;/li&gt;
&lt;li&gt;Deploy a nightly build to a test environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those example will cover the basics and are a good starting point to built upon.&lt;/p&gt;

&lt;p&gt;Now – finally – let's dive into the workflows and code.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-deployer-github-action"&gt;
  &lt;/a&gt;
  The Deployer GitHub Action&lt;a href="#the-deployer-github-action"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;All example workflows will use the &lt;a href="https://github.com/deployphp/action"&gt;deployphp/action&lt;/a&gt; GitHub Action. The Action is maintained by the same people who make deployer.&lt;/p&gt;

&lt;p&gt;But before you scroll down and copy and paste the workflows, we need to make preparations. First you need a SSH key, which you need to pass to the deployphp/action. Otherwhise deployer &lt;strong&gt;on GitHub Actions&lt;/strong&gt; will not be able to connect to your server.&lt;/p&gt;

&lt;p&gt;If you have an SSH key: great! If not, follow &lt;a href="https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key"&gt;this tutorial&lt;/a&gt; on how to create a new SSH key. Make sure to update your server so that we can authenticate and connect to the server using the generated SSH key. You can learn more about how to do this in &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server"&gt;this DigitalOcean tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Later, we will use a &lt;code&gt;PRIVATE_KEY&lt;/code&gt; secret in our deployment workflows. This secret holds the SSH private key which will connect GitHub Actions to your server.&lt;br&gt;&lt;br&gt;
To add the secret go to your repository or organisation settings and click on "Secrets" in the sidebar.&lt;br&gt;&lt;br&gt;
Click on "New repository secret", give it the name &lt;code&gt;PRIVATE_KEY&lt;/code&gt; and store the SSH private key as its value (The part with "&lt;code&gt;-----BEGIN RSA PRIVATE KEY-----&lt;/code&gt;").&lt;/p&gt;

&lt;p&gt;Next, we need the &lt;code&gt;KNOWN_HOSTS&lt;/code&gt; value. This will later prevent GitHub Actions from asking you, if you want to connect to your own server. (Without the known_hosts value, the workflow will timeout, as you can't manually interact with the workflow run.&lt;br&gt;&lt;br&gt;
To get this value, execute the following command from your local CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh-keyscan &amp;lt;name_of_your_host (eg. example.com)&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output might look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;name_of_your_host&amp;gt; ssh-rsa AAAABBBCCCDD...

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The name of the server, where your app should be deployed, followed by the &lt;strong&gt;public key&lt;/strong&gt; value. Copy the line to your clipboard which corresponds to the private SSH key you used for &lt;code&gt;PRIVATE_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now add a &lt;code&gt;KNOWN_HOSTS&lt;/code&gt; secret to your repository or organisation like you did before for &lt;code&gt;PRIVATE_KEY&lt;/code&gt;. The value is the copied value from &lt;code&gt;ssh-keyscan&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now we're ready do dive into workflow code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-example-1-deploy-manually"&gt;
  &lt;/a&gt;
  Workflow Example 1: Deploy Manually&lt;a href="#workflow-example-1-deploy-manually"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This first workflow is the simplest of all examples. It can be triggered manually – either through the GitHub web UI or through a HTTP request to the GitHub API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_manual.yml"&gt;Here is the workflow file&lt;/a&gt;. I will go into detail, what each step does below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .github/workflows/deploy_manual.yaml
name: Deploy (Manual)

on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Deploy Environment'
        required: true
        default: 'stag'

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}
          dep: deploy ${{ github.event.inputs.deploy_env }} -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What does this workflow do?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# …
on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Deploy Environment'
        required: true
        default: 'stag'
# …

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First the &lt;code&gt;on&lt;/code&gt;-keyword. Here we tell GitHub to listen to the &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch"&gt;&lt;code&gt;workflow_dispatch&lt;/code&gt;&lt;/a&gt; event which is triggered through a manual process. We set a &lt;code&gt;deploy_env&lt;/code&gt; input variable to target different deploy environments. (The ones you will have &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/deploy.yaml#L15-L22"&gt;set up in your &lt;code&gt;deploy.php&lt;/code&gt; or &lt;code&gt;deploy.yml&lt;/code&gt; file&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# …
jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}
          dep: deploy ${{ github.event.inputs.deploy_env }} -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next the job code. What does this?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We tell GitHub Actions to run the job on a machine running the latest Ubuntu version.&lt;/li&gt;
&lt;li&gt;Our project is cloned to the Linux machine.&lt;/li&gt;
&lt;li&gt;We instruct the &lt;code&gt;shivammathur/setup-php&lt;/code&gt; Action to install PHP 7.4.&lt;/li&gt;
&lt;li&gt;We install the composer dependencies for our project.&lt;/li&gt;
&lt;li&gt;Finally. We tell &lt;code&gt;deployphp/action&lt;/code&gt; to deploy our application to the environment we passed to the workflow in the &lt;code&gt;deploy_env&lt;/code&gt; input variable.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The local CLI equivalent of the code executed by the deployer Action would be &lt;code&gt;dep deploy stag -v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is a basic version of a deploy workflow. The composer dependencies are currently not cached and we don't do anything fancy after the deployment has been successful.&lt;/p&gt;

&lt;p&gt;Before we jump to the next few examples, I want to cover how you can now trigger the deployment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trigger-through-github-ui"&gt;
  &lt;/a&gt;
  Trigger through GitHub UI&lt;a href="#trigger-through-github-ui"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The most straightforward approach to trigger deployment is through github.com.&lt;/p&gt;

&lt;p&gt;Go to the &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/actions"&gt;"Actions" tab&lt;/a&gt; in your repository and click on &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/actions/workflows/deploy_manual.yml"&gt;"Deploy (Manual)"&lt;/a&gt; in the workflows list on the left hand side. A "Run workflow" button should appear.&lt;/p&gt;

&lt;p&gt;Clicking the button gives you the option to change the branch and the "Deploy Environment" value for the workflow run. The default value for the environment is "stag". Change it to &lt;code&gt;prod&lt;/code&gt; if you want to deploy your app to production.&lt;/p&gt;

&lt;p&gt;Click "Run workflow" to start the deployment process.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
        &lt;br&gt;
    The video shows how to trigger the deployment process manually through the GitHub UI.&lt;/p&gt;

&lt;p&gt;After a couple of seconds the deployment run appears on the page.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#trigger-through-api-request"&gt;
  &lt;/a&gt;
  Trigger through API request&lt;a href="#trigger-through-api-request"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A more versatile option is to trigger the deployment by making an API request to the GitHub API. By using the API, you bypass the tedious work of clicking through the github.com and you can integrate the deployment process in more tools (Slack Bot, iOS Shortcut, Alfred Workflow).&lt;br&gt;&lt;br&gt;
You will have even more ideas where the API request could be made. I won't go further here. &lt;sup id="fnref:1: while writing the article, i realized that this is a big topic and i didn't want to blow up the article even further. in a future article i want to share how you can trigger the deployment process through slack/telegram/discord commands."&gt;&lt;a href="#fn:1:%20while%20writing%20the%20article,%20i%20realized%20that%20this%20is%20a%20big%20topic%20and%20i%20didn't%20want%20to%20blow%20up%20the%20article%20even%20further.%20in%20a%20future%20article%20i%20want%20to%20share%20how%20you%20can%20trigger%20the%20deployment%20process%20through%20slack/telegram/discord%20commands."&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;As there are many ways on how to make the HTTP request, I share the CURL version here. Adjust it to your liking if you use Guzzle or any other HTTP library.&lt;/p&gt;

&lt;p&gt;To make the command work, replace the following values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;PRIVATE_ACCESS_TOKEN&lt;/code&gt; with a personal access token with the &lt;code&gt;repo&lt;/code&gt; scope&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;YOUR_ORG&lt;/code&gt; with the organisation name or username of your repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;YOUR_REPOSITORY&lt;/code&gt; with the name of the projects repository
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl \
  -X POST \
  -H "Authorization: token PRIVATE_ACCESS_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/YOUR_ORG/YOUR_REPOSITORY/actions/workflows/deploy_manual.yaml/dispatches \
  -d '{"ref":"main", "inputs": {"deploy_env": "prod"}}'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you want to deploy to staging, update the &lt;code&gt;deploy_env&lt;/code&gt; value to &lt;code&gt;"stag"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tipp:&lt;/strong&gt; If you want to learn more on how to dispatch workflow evens check out &lt;a href="https://docs.github.com/en/rest/reference/actions#create-a-workflow-dispatch-event"&gt;"Create a worfklow dispatch event"&lt;/a&gt; in the GitHub documentation.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#trigger-with-raw-gh-endraw-cli"&gt;
  &lt;/a&gt;
  Trigger with &lt;code&gt;gh&lt;/code&gt;-CLI&lt;a href="#trigger-with-gh-cli"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In addition to the web UI and the GitHub API, the workflow can be triggered by using the &lt;a href="https://cli.github.com/"&gt;GitHub CLI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Execute the following command inside your project folder in your terminal. (You need to be logged-in in &lt;code&gt;gh&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gh workflow run "Deploy (Manual)" -f deploy_env=prod

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;
        &lt;br&gt;
    In this video, I'm triggering the deployment process by calling a composer script which in turns runs the GitHub CLI. After a couple of seconds the deployment run appears in the GitHub UI.&lt;/p&gt;

&lt;p&gt;To make triggering the workflow through the terminal easier, I suggest adding a composer script to your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# composer.json
…
"scripts": {
    "deploy:prod": ["gh workflow run \"Deploy (Manual)\" -f deploy_env=prod"],
    "deploy:stag": ["gh workflow run \"Deploy (Manual)\" -f deploy_env=stag"],
    …
},
…

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then run &lt;code&gt;composer run deploy:prod&lt;/code&gt; or &lt;code&gt;composer run deploy:stag&lt;/code&gt; to trigger the deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-example-2-deploy-to-production-on-new-release"&gt;
  &lt;/a&gt;
  Workflow Example 2: Deploy to Production on new Release&lt;a href="#workflow-example-2-deploy-to-production-on-new-release"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This next workflow example is based on our previous example and uses the same "core" steps to deploy our application (clone, install dependencies, deploy).&lt;/p&gt;

&lt;p&gt;The difference: this workflow will deploy your application to production when a new release has been created in GitHub.&lt;/p&gt;

&lt;p&gt;As before, first &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_release.yml"&gt;the workflow file&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .github/workflows/deploy_release.yml
name: Deploy (Release)

on:
  release:
    types: [released]

jobs:
  deploy:
      name: Deploy Tag to Production
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.4

        - name: Install Dependencies
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

        - name: Deploy
          uses: deployphp/action@master
          with:
            private-key: ${{ secrets.PRIVATE_KEY }}
            known-hosts: ${{ secrets.KNOWN_HOSTS }}
            dep: deploy prod -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The workflow looks almost identical to our basic example. Here is what has changed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  release:
    types: [released]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of listening to the &lt;code&gt;workflow_dispatch&lt;/code&gt;-event we are listening to the &lt;code&gt;release&lt;/code&gt; event. In particual to the &lt;code&gt;released&lt;/code&gt; activity type.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release"&gt;the documentation&lt;/a&gt;, listening to the &lt;code&gt;released&lt;/code&gt; activity type will trigger this workflow &lt;strong&gt;only&lt;/strong&gt; when a &lt;strong&gt;stable&lt;/strong&gt; release has been published.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Deploy
  uses: deployphp/action@master
  with:
    private-key: ${{ secrets.PRIVATE_KEY }}
    known-hosts: ${{ secrets.KNOWN_HOSTS }}
    dep: deploy prod -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the "Deploy" step the only difference to our previous example is that we explicitly set the environment to &lt;code&gt;prod&lt;/code&gt;. There is no variable available to make this dynamic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-example-3-deploy-to-staging-on-push"&gt;
  &lt;/a&gt;
  Workflow Example 3: Deploy to Staging on Push&lt;a href="#workflow-example-3-deploy-to-staging-on-push"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_push.yml"&gt;The following example&lt;/a&gt; is great if you want to have a &lt;em&gt;continous&lt;/em&gt; deployment system.&lt;br&gt;&lt;br&gt;
It will deploy your application to your staging environment when a new commit is made to the default branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .github/workflows/deploy_push.yml
name: Deploy (Push to Branch)

on:
  push:
    branches:
      # You can also change the branch name to `develop`
      - main

jobs:
  deploy:
      name: Deploy staging
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.4

        - name: Install Dependencies
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

        - name: Deploy
          uses: deployphp/action@master
          with:
            private-key: ${{ secrets.PRIVATE_KEY }}
            known-hosts: ${{ secrets.KNOWN_HOSTS }}
            dep: deploy stag -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you might have guessed, not much has changed to the previous examples. The only difference is the event we're listening to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  push:
    branches:
      - main

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The workflow listens to the &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#push"&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; event. To be exact, it listens to all pushes to the &lt;code&gt;main&lt;/code&gt; branch. (Feel free to replace "main" with the branch name that you want to deploy)&lt;/p&gt;

&lt;p&gt;If we wouldn't specify the &lt;code&gt;branches&lt;/code&gt;-modifier, the workflow would not only be triggered when you push to the &lt;code&gt;main&lt;/code&gt;-branch, but when you push and update other branches too. That's not what you want. This will lead to chaos, as GitHub will constantly deploy different versions to &lt;em&gt;staging&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;_ &lt;strong&gt;Note&lt;/strong&gt; _: I do not recommend using this workflow in a repository with a lot of "commit-traffic". If your deployment script takes more than 3-4 minutes to run, and every 5-10 minutes a new commit lands on your default branch, you will quickly run through your GitHub Actions CI minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-example-4-deploy-on-schedule"&gt;
  &lt;/a&gt;
  Workflow Example 4: Deploy on Schedule&lt;a href="#workflow-example-4-deploy-on-schedule"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_schedule.yml"&gt;The next workflow&lt;/a&gt; is not triggered by a manual process or in recation to an event on GitHub, but on schedule.&lt;/p&gt;

&lt;p&gt;Imagine your team has a nightly server, where the latest version of your project is being deployed every night.&lt;br&gt;&lt;br&gt;
Or you provide a demo application to your users, which is being redeployed every 2 to 3 hours to reset the state of the app.&lt;/p&gt;

&lt;p&gt;The schedule feature of GitHub Actions could be helpful here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Deploy (Schedule)

on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  deploy:
      name: Deploy
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.4

        - name: Install Dependencies
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

        - name: Deploy
          uses: deployphp/action@master
          with:
            private-key: ${{ secrets.PRIVATE_KEY }}
            known-hosts: ${{ secrets.KNOWN_HOSTS }}
            dep: deploy nightly --branch=main -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you know by now, the workflow looks almost identical to the other examples. Let's have a closer look.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  schedule:
    - cron: "0 0 * * *"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule"&gt;&lt;code&gt;schedule&lt;/code&gt;&lt;/a&gt; listener accepts a cron expression as input. The example above runs every day on midnight UTC.&lt;br&gt;&lt;br&gt;
If you need help figuring out the right cron syntax for your project I can recommend &lt;a href="https://crontab.guru/"&gt;crontab guru&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Deploy
  uses: deployphp/action@master
  with:
    private-key: ${{ secrets.PRIVATE_KEY }}
    known-hosts: ${{ secrets.KNOWN_HOSTS }}
    dep: deploy nightly --branch=main -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our "Deploy" step I use a different deploy environment: &lt;code&gt;nightly&lt;/code&gt;. I explicitly tell deployer to deploy the &lt;code&gt;main&lt;/code&gt; branch. This isn't strictly necessary, as workflow runs triggered by the scheduler will check out the default branch by default.&lt;br&gt;&lt;br&gt;
Setting the &lt;code&gt;branch&lt;/code&gt; option explicitly gives me more confidence that the right code will be deployed though.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus&lt;a href="#bonus"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now I would like to show you a few bonus features you could add to your workflows. We start with GitHub environments.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#use-github-environments"&gt;
  &lt;/a&gt;
  Use GitHub Environments&lt;a href="#use-github-environments"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/actions/reference/environments"&gt;Environments&lt;/a&gt; are shown in the repository sidebar on github.com and can indicate the deploy status of a project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9dXKjh1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stefanzweifel.io/assets/images/posts/20210524-deployer-on-github-actions/screenshot-github-environments.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9dXKjh1D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://stefanzweifel.io/assets/images/posts/20210524-deployer-on-github-actions/screenshot-github-environments.jpg" alt="Screenshot of the example repository on GitHub. Highlighted is the location of the Environments in the sidebar."&gt;&lt;/a&gt;GitHub Environments can help you to keep track of when a deployment happend.&lt;/p&gt;

&lt;p&gt;The feature isn't new, but got a major overhaul with a recent Actions update. New are environment specific secrets and protection rules. These protection rules allows you to setup a review system, so that another team member has to review the deployment before it goes to production. Or that a certain amount of time has to pass, before a change can be deployed.&lt;/p&gt;

&lt;p&gt;These features (protection rules and secrets) are currently in beta and available to public repositories or for GitHub enterprise organisations.&lt;br&gt;&lt;br&gt;
Environments themselfs however, can be referenced in your workflows and can give you a visual indicator if a deployment has been successful or can give you a list when a specific commit has been deployed. (See &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/deployments"&gt;this list&lt;/a&gt; in the example repository)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_manual_with_environments.yml"&gt;The following workflow&lt;/a&gt; expands on our "manual deployment" workflow and adds 2 environments: "staging" and "production".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .github/workflows/deploy_manual_with_environments.yml
name: Deploy (Manual + GitHub Environments)

on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Deploy Environment'
        required: true
        default: 'stag'

jobs:
  deploy-stag:
    if: github.event.inputs.deploy_env == 'stag'
    name: Deploy staging
    runs-on: ubuntu-latest

    environment:
      name: staging
      url: https://stag.example.com

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}
          dep: deploy ${{ github.event.inputs.deploy_env }} -v

  deploy-prod:
      if: github.event.inputs.deploy_env == 'prod'
      name: Deploy production
      runs-on: ubuntu-latest

      environment:
        name: production
        url: https://example.com

      steps:
        - uses: actions/checkout@v2

        - name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
            php-version: 7.4

        - name: Install Dependencies
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

        - name: Deploy
          uses: deployphp/action@master
          with:
            private-key: ${{ secrets.PRIVATE_KEY }}
            known-hosts: ${{ secrets.KNOWN_HOSTS }}
            dep: deploy ${{ github.event.inputs.deploy_env }} -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, let's dissect the workflow code.&lt;/p&gt;

&lt;p&gt;The main difference to all previous examples is that the code above contains 2 jobs: "deploy-stag" and "deploy-prod". These jobs are very similar. The only change between them is an if-statement and the environment declaration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;deploy-prod:
  if: github.event.inputs.deploy_env == 'prod'
  name: Deploy Production
  runs-on: ubuntu-latest

  environment:
    name: production
    url: https://example.com

  steps:
    - uses: actions/checkout@v2

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first line of each job is the &lt;code&gt;if&lt;/code&gt;-statement. We check if the &lt;code&gt;deploy_env&lt;/code&gt; input value equals to &lt;code&gt;'prod'&lt;/code&gt;. This protects us from running both the staging and production deployment at the same time – as you usually deploy one environment at the time.&lt;/p&gt;

&lt;p&gt;Next comes the important part: the &lt;code&gt;environment&lt;/code&gt; declaration. Here we give the environment its name and a URL. The URL will later be used in the GitHub UI and allows you to quickly jump to your deployed application.&lt;/p&gt;

&lt;p&gt;And that's it. For staging, we check if the &lt;code&gt;deploy_env&lt;/code&gt; value is &lt;code&gt;'stag'&lt;/code&gt; and set the GitHub environment to "staging". For production we change the values accordingly.&lt;/p&gt;

&lt;p&gt;You might ask yourself, why can't we combine these 2 jobs into a single job and make the environment values dynamic? Unfortunately GitHub Actions isn't that flexible and the &lt;code&gt;if&lt;/code&gt;-key word is only available on the job or steps level. (If you find a way to make this more dynamic, let me know!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tipp:&lt;/strong&gt; If you've been experimenting with environments in your GitHub repository and want to get rid of all the past deployments and environments you can use &lt;a href="https://stackblitz.com/edit/github-deployment-clearer?file=index.js"&gt;github-deployment-clearer&lt;/a&gt;. Enter a personal access token, your organisation name and repository name in the code and after a few seconds all deployments and environments will be removed from the repository. (Unfortunately GitHub doesn't have a UI to delete the environments, that's why you have to resort to their API or third-party tools.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-cache-composer-dependencies"&gt;
  &lt;/a&gt;
  Bonus: Cache Composer Dependencies&lt;a href="#bonus-cache-composer-dependencies"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The workflows shown install your projects composer dependencies on every workflow run. To speed things up, I suggest adding the &lt;code&gt;actions/cache&lt;/code&gt;-Action to your workflows.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/actions/cache/blob/main/examples.md#php---composer"&gt;&lt;code&gt;cache&lt;/code&gt;-documentation&lt;/a&gt; has an example on how to use it with composer. Let's apply it to our default workflow. Here is &lt;a href="https://github.com/stefanzweifel/deployer-on-github-actions-example/blob/main/.github/workflows/deploy_manual_with_cache.yml"&gt;our adjusted workflow&lt;/a&gt; to cache composer dependencies when a deployment is manually triggered.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# .github/workflows/deploy_manual_with_cache.yml
name: Deploy (Manual; Cache Composer)

on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Deploy Environment'
        required: true
        default: 'stag'

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Deploy
        uses: deployphp/action@master
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          known-hosts: ${{ secrets.KNOWN_HOSTS }}
          dep: deploy ${{ github.event.inputs.deploy_env }} -v

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What has changed? Before the step that installs our composer dependencies, we added the following 2 steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Get Composer Cache Directory
  id: composer-cache
  run: |
    echo "::set-output name=dir::$(composer config cache-files-dir)"

- uses: actions/cache@v2
  with:
    path: ${{ steps.composer-cache.outputs.dir }}
    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
    restore-keys: |
      ${{ runner.os }}-composer-

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The "Get Composer Cache Directory" step runs a shell command to extract the path to the composer cache directory (duh). On your local machine the value would be &lt;code&gt;~/.composer/cache/files&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
The next step uses the &lt;code&gt;cache&lt;/code&gt;-Action to either restore or cache the files and folders in &lt;code&gt;~/.composer/cache/files&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When the workflow runs for the first time, composer will download the dependencies from packagist.org. When the run finshes successfully, the &lt;code&gt;actions/cache&lt;/code&gt; will kick in and cache the composer dependencies.&lt;/p&gt;

&lt;p&gt;On subsequent workflow runs, where the composer.lock file doesn't change, GitHub Actions will restore the cache and the dependencies will be installed instantly.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonus-sentry-release-tracking"&gt;
  &lt;/a&gt;
  Bonus: Sentry Release Tracking&lt;a href="#bonus-sentry-release-tracking"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Before I let you go, one last bonus section (I promise).&lt;br&gt;&lt;br&gt;
Another benefit of having the deploy process running on GitHub Actions is the access to repo or organisation wide secrets.&lt;/p&gt;

&lt;p&gt;My team and I use these org wide secrets to track our deployments with &lt;a href="https://sentry.io/features/releases/"&gt;Sentry's release feature&lt;/a&gt;. Sentry will send a neat email to all developers who contributed and lets them know that their code made it to production. (In addition, the error tracking is a bit more detailled.)&lt;/p&gt;

&lt;p&gt;The Sentry team published their &lt;a href="https://github.com/getsentry/action-release"&gt;own GitHub Action&lt;/a&gt; to make this super easy. Add the following block at the end of your workflow, replace the values for &lt;code&gt;SENTRY_ORG&lt;/code&gt; and &lt;code&gt;SENTRY_PROJECT&lt;/code&gt; and add your Sentry auth token to your repository or organisation secrets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Create Sentry Release
  uses: getsentry/action-release@v1
  env:
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    SENTRY_ORG: sentry_org_name
    SENTRY_PROJECT: sentry_project_name
  with:
    environment: ${{ github.event.inputs.deploy_host }}
    set_commits: auto

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next time your app is being deployed, you will receive an email notification with a list of the commits that went live.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-use-this-approach-in-my-projects"&gt;
  &lt;/a&gt;
  How I use this approach in my projects&lt;a href="#how-i-use-this-approach-in-my-projects"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Not all my personal projects use deployer or the GitHub Actions deploy method … yet. For a few projects it doesn't make sense to add all this complexity. Many of my side projects are fine to go down for a couple of seconds or minutes when the app is deployed, through &lt;a href="https://forge.laravel.com"&gt;Laravel Forge&lt;/a&gt; for example, as I am the sole user.&lt;/p&gt;

&lt;p&gt;On the projects that do use the GitHub Actions approach, I've settled on using the &lt;code&gt;gh&lt;/code&gt;-CLI to trigger the deployment. (A shell alias or composer script like the mentioned &lt;code&gt;composer run deploy:prod&lt;/code&gt; makes using it more convenient).&lt;br&gt;&lt;br&gt;
To deploy &lt;a href="https://3.screeenly.com"&gt;3.screeenly.com&lt;/a&gt;, I've written an iOS Shortcut and Alfred Workflow that interacts with the GitHub API. (Let me know if you're interested in those scripts)&lt;/p&gt;

&lt;p&gt;At work, my team and I are deciding what the best approach is. For now, we've settled on using the &lt;code&gt;gh&lt;/code&gt;-CLI to deploy our apps. We're currently exploring the idea of adding a deploy command to our Slack channels though. This would allow developers to deploy an application with a simple &lt;code&gt;/deploy prod&lt;/code&gt; in an &lt;code&gt;#ops&lt;/code&gt; channel. (I have no idea how to tackle this problem yet. You know how? Let me now!).&lt;/p&gt;

&lt;p&gt;I think the most important part is, to keep in mind that all this (*gestures at the text above*) adds a lot of complexity to your infrastructure. GitHub Actions could go down or introduce a breaking change that forces you to update the workflows.&lt;/p&gt;

&lt;p&gt;As a final note on this, I would suggest you make sure that you are still able to deploy your application from your local terminal by using the deployer CLI and by running &lt;code&gt;dep deploy prod&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outro-and-personal-opinion"&gt;
  &lt;/a&gt;
  Outro and Personal Opinion&lt;a href="#outro-and-personal-opinion"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Phew! Thanks for reading so far. I hope you learned a thing or two about GitHub Actions or deployments while reading this article.&lt;br&gt;&lt;br&gt;
While researching and testing the workflows in this article I sure did learn a couple of new things.&lt;/p&gt;

&lt;p&gt;If you have any questions, let me know via &lt;a href="https://twitter.com/_stefanzweifel"&gt;Twitter&lt;/a&gt;, through email or by joining the discussion in &lt;a href="https://github.com/stefanzweifel/ama/discussions/categories/articles"&gt;my AMA repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I could spark your interest in GitHub Actions and you would like to automate common tasks in your GitHub repositories I've written on &lt;a href="https://stefanzweifel.io/posts/2021/04/28/auto-merge-dependabot-pull-requests/"&gt;how to auto merge Dependabot PRs&lt;/a&gt; or &lt;a href="https://stefanzweifel.io/posts/run-prettier-or-php-cs-fixer-with-github-actions/"&gt;how to lint and fix your code with php-cs-fixer and prettier&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, if you would like to read more about this topic from me in the future, consider sponsoring me on &lt;a href="https://github.com/sponsors/stefanzweifel?frequency=one-time&amp;amp;sponsor=stefanzweifel"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outlook"&gt;
  &lt;/a&gt;
  Outlook&lt;a href="#outlook"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;I had a lot of fun writing this article. As mentioned, I would like to explore how to properly incorporate the deployment process in tools like Slack, Microsoft Teams, Telegram or whatever chat platform a team is using (eg. "ChatOps").&lt;/p&gt;

&lt;p&gt;As this article is quite long, I decided that I will pack my findings in an accompanianing article … when I'm ready to share more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ&lt;a href="#faq"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-security-implications-of-deploy-apps-in-this-way"&gt;
  &lt;/a&gt;
  What are the security implications of deploy apps in this way?&lt;a href="#what-are-the-security-implications-of-deploy-apps-in-this-way"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;For one, you have to trust GitHub that they keep their Actions infrastructure secure and that no other party can spy on a workflow run.&lt;/p&gt;

&lt;p&gt;Another attack vector could be the way on how you decide to trigger the deployment. If you stick to GitHubs native events like &lt;code&gt;push&lt;/code&gt; or &lt;code&gt;release&lt;/code&gt; you should be safe.&lt;/p&gt;

&lt;p&gt;If you decide to use a deploy workflow that listens to the &lt;code&gt;workflow_dispatch&lt;/code&gt;-event, the risk increases.&lt;br&gt;&lt;br&gt;
If you then decide to trigger the event through API requests through another app (Slack, Alfred, iOS Shortcuts, *insert app name here*), then you have trust these apps that they are not compromised.&lt;/p&gt;

&lt;p&gt;In the end, you and your team have to decide if the switch to deploy your apps through a third-party is better than running a CLI command locally on your machine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-you-not-use-a-single-workflow-to-cover-all-scenarios"&gt;
  &lt;/a&gt;
  Why do you not use a single Workflow to cover all scenarios?&lt;a href="#why-do-you-not-use-a-single-workflow-to-cover-all-scenarios"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I currently like to have workflows that do one thing and are small. This makes debugging or explaining a workflow to others easier.&lt;/p&gt;

&lt;p&gt;Technically you could combine the mentioned example workflows above into one "super" workflow, but you would then have to riddle it with &lt;code&gt;if&lt;/code&gt;-statements to check, wether the step or job in that workflow should be run for a triggered event.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-you-not-have-a-single-workflow-which-runs-your-tests-and-then-deploys-your-app"&gt;
  &lt;/a&gt;
  Why do you not have a single Workflow which runs your tests and then deploys your app?&lt;a href="#why-do-you-not-have-a-single-workflow-which-runs-your-tests-and-then-deploys-your-app"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As mentioned above, I personally prefer to have dedicated workflows for each task. Even if this means, that I waste precious CI minutes.&lt;/p&gt;

&lt;p&gt;However, in the repository which holds this blog, I've started to experiment with creating a single huge workflow, that tests that the site can be built and then triggers the deployment and other subsequent jobs.&lt;/p&gt;

&lt;p&gt;If you think you found &lt;em&gt;the right way&lt;/em&gt; to write workflows or are interested in combining multiple workflows into one: Let me know!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-didnt-you-cover-github-environments-protection-rules-and-required-reviewers-in-depth"&gt;
  &lt;/a&gt;
  Why didn't you cover GitHub Environments protection rules and required reviewers in depth?&lt;a href="#why-didnt-you-cover-github-environments-protection-rules-and-required-reviewers-in-depth"&gt;#&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As of time of writing this article (May 2021) GitHub Environment and protection rules are in beta and available to public repositories or GitHub Enterprise plans.&lt;br&gt;&lt;br&gt;
As I assume not all repositories of my readers are either public or using GitHub Enterprise, I've kept these features out of this article.&lt;/p&gt;

&lt;p&gt;In addition, "Required reviewers", "wait timer" and "deployment branches" are features that do not need to be configured in a workflow file but rather in the UI on github.com.&lt;/p&gt;

&lt;p&gt;I assume once the features are out of beta and available to more users, it will be really easy to – for example – add required reviewers to your application. If you use a workflow that references environments, I assume you have to create/select that environment in the repository settings and add the required reviewers.&lt;/p&gt;

&lt;p&gt;I will update this article accordingly once the feature is made generally available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-github-deploy-keys"&gt;
  &lt;/a&gt;
  What about GitHub Deploy Keys?&lt;a href="#what-about-github-deploy-keys"&gt;#&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The GitHub &lt;a href="https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys"&gt;documentation&lt;/a&gt; mentions "Deploy Keys" as a way to give a server access to repository through a read-only SSH key.&lt;/p&gt;

&lt;p&gt;I haven't used or suggested deploy keys in the article above for the &lt;code&gt;PRIVATE_KEY&lt;/code&gt; secret, as they solve a different problem. Deploy keys are here to allow your servers to download/clone a GitHub repository; but not to allow GitHub Actions to connect to your server through SSH.&lt;/p&gt;

&lt;p&gt;You could technically use the SSH keys you've designated as deploy keys in the &lt;code&gt;PRIVATE_KEY&lt;/code&gt; secret, but I would advise against mixing those keys.&lt;/p&gt;

</description>
      <category>github</category>
      <category>deployer</category>
      <category>deployment</category>
    </item>
    <item>
      <title>New Pattern Matching Feature in Python</title>
      <author>James Briggs</author>
      <pubDate>Mon, 24 May 2021 17:13:01 +0000</pubDate>
      <link>https://dev.to/jamescalam/new-pattern-matching-feature-in-python-1jn8</link>
      <guid>https://dev.to/jamescalam/new-pattern-matching-feature-in-python-1jn8</guid>
      <description>&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2qJavL-VX9Y"&gt;https://www.youtube.com/watch?v=2qJavL-VX9Y&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new structural pattern matching feature arriving to Python 3.10!&lt;/p&gt;

&lt;p&gt;Python 3.10 is beginning to fill-out with plenty of fascinating new features. One of those, in particular, caught my attention - structural pattern matching - or as most of us will know it, switch/case statements.&lt;/p&gt;

&lt;p&gt;Switch-statements have been absent from Python despite being a common feature of most languages. Python is leapfrogging ahead of those languages by introducing the match-case statement as a switch-case v2.0.&lt;/p&gt;

&lt;p&gt;Back in 2006, PEP 3103 was raised, recommending the implementation of a switch-case statement. However, after a poll at PyCon 2007 received no support for the feature, the Python devs dropped it.&lt;/p&gt;

&lt;p&gt;Fast-forward to 2020, and Guido van Rossum, the creator of Python, committed the first documentation showing the new match-statements, which have been named Structural Pattern Matching, as found in PEP 634.&lt;/p&gt;

&lt;p&gt;Let's take a look at how this new logic works.&lt;/p&gt;

&lt;p&gt;Medium Article:&lt;br&gt;
&lt;a href="https://towardsdatascience.com/switch-case-statements-are-coming-to-python-d0caf7b2bfd3"&gt;https://towardsdatascience.com/switch-case-statements-are-coming-to-python-d0caf7b2bfd3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Friend Link (free access):&lt;br&gt;
&lt;a href="https://towardsdatascience.com/switch-case-statements-are-coming-to-python-d0caf7b2bfd3?sk=363e0f7696502647e007f91910b4c817"&gt;https://towardsdatascience.com/switch-case-statements-are-coming-to-python-d0caf7b2bfd3?sk=363e0f7696502647e007f91910b4c817&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>datascience</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
