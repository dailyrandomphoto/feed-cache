<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Implementing Smooth Scroll Using Javascript ‚ö°</title>
      <author>Rohan Kulkarni</author>
      <pubDate>Fri, 16 Jul 2021 07:37:54 +0000</pubDate>
      <link>https://dev.to/rohank_2502/implementing-smooth-scroll-using-javascript-28n3</link>
      <guid>https://dev.to/rohank_2502/implementing-smooth-scroll-using-javascript-28n3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone-today-we-will-be-looking-at-how-to-implement-smooth-scrolling-behavior-using-the-scrollintoview-property"&gt;
  &lt;/a&gt;
  Hello Everyone üëãüèª, today we will be looking at how to implement smooth scrolling behavior using the &lt;strong&gt;scrollIntoView&lt;/strong&gt; property.
&lt;/h2&gt;

&lt;p&gt;Normally for the creation of Navbar, we use this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;nav class="navbar" id="nav--bar"&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#1" class="link--a"&amp;gt;DIV 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#2" class="link--a"&amp;gt;DIV 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#3" class="link--a"&amp;gt;DIV 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But when we click on the element it takes us to the element with the id provided in href. This is how a normal scrolling effect looks like üëáüèª&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" alt="ezgif.com-gif-maker.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-can-we-do-for-a-smooth-scrolling-effect-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So what can we do for a smooth scrolling effect ?&lt;/strong&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML CODE
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;nav class="navbar" id="nav--bar"&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#1" class="link--a"&amp;gt;DIV 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#2" class="link--a"&amp;gt;DIV 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#3" class="link--a"&amp;gt;DIV 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;
    &amp;lt;section id="1"&amp;gt;
        &amp;lt;div class="div div--1"&amp;gt;This is DIV 1&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;section id="2"&amp;gt;
        &amp;lt;div class="div div--2"&amp;gt;This is DIV 2&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;section id="3"&amp;gt;
        &amp;lt;div class="div div--3"&amp;gt;This is DIV 3&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;

    &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#this-code-depends-on-personal-choices-as-this-will-affect-the-design-part"&gt;
  &lt;/a&gt;
  This code depends on personal choices as this will affect the design part!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}
.div--1 {
  background-color: rgb(0, 132, 255);
}
.div--2 {
  background-color: rgb(255, 136, 0);
}
.div--3 {
  background-color: rgb(255, 0, 242);
}
.navbar ul {
  display: flex;
  justify-content: space-around;
  background-color: rgb(179, 230, 245);
  list-style: none;
  padding: 1.5em;
  border-radius: 12px;
  border: 1px solid black;
}
.navbar ul li a {
  background-color: yellow;
  padding: 1em;
  border-radius: 12px;
  border: 1px solid black;
  text-decoration: none;
}
.navbar ul li:hover {
  background-color: orangered;
  cursor: pointer;
}
.navbar {
  width: 90%;
}
section {
  width: 75%;
}
.div {
  margin: 1em;
  border-radius: 12px;
  border: 1px solid black;
  font-size: 5em;
  height: 80vh;
  display: flex;
  align-items: center;
  justify-content: space-around;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#js-code"&gt;
  &lt;/a&gt;
  JS CODE
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-most-important-part-"&gt;
  &lt;/a&gt;
  The Most Important Part !!
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('nav--bar').addEventListener('click', function (e) {
    e.preventDefault();
    const target = e.target;
    if (target.classList.contains('link--a')) {
        const id = target.getAttribute('href').slice(1);
        document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-lets-focus-on-js-code-and-understand-how-each-line-works"&gt;
  &lt;/a&gt;
  Now let's Focus on JS code and understand how each line works!
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We are having this block of code at the top. This says that the document targets the element who is having the id "nav-bar" and adds an event listener on it which will listen to the event (click) on it. And if a click happens on that event then call the function which is having parameter e which will represent the event.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('nav--bar').addEventListener('click', function (e) {
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.The prevent Default function will prevent the auto-scrolling due to the anchor tag. And such help us to implement smooth scrolling. In the target variable, we will store the location at which point the click event happened so we can know that exactly on which link the user clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;e.preventDefault();
const target = e.target;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.This if loop will help us to target only those clicks which are on elements having class "link--a".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (target.classList.contains('link--a')) {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.In variable id we will be saving the value given in href attribute of the element where the event (click) occurred. As we have given "#1" in href we need to cut the '#' and store the remaining value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const id = target.getAttribute('href').slice(1);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.This will now target the element which is having the id the same as the value stored in the id variable and apply the "scrollIntoView" method on it with smooth behavior as we mentioned in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#this-will-give-us-output-like-this"&gt;
  &lt;/a&gt;
  This will give us output like this üëáüèª
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" alt="ezgif.com-gif-maker(1).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-we-have-successfully-implemented-the-smooth-scroll"&gt;
  &lt;/a&gt;
  Great üéâ We have successfully implemented the smooth scroll!
&lt;/h3&gt;

&lt;p&gt;You can check the difference between both these effects will give professional look to your website! &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th&gt;Smooth Scroll&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" alt="ezgif.com-gif-maker.gif"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" alt="ezgif.com-gif-maker(1).gif"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;STAY TUNED FOR MORE üòÑ &lt;br&gt;
GET CONNECTED WITH ME &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/rohan_2502"&gt;Twitter&lt;/a&gt; &lt;br&gt;
 &lt;a href="https://www.linkedin.com/in/rohan-k-2502/"&gt;LinkedIn&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best Makefile for Docker project (M1 Compatible)</title>
      <author>Ayrton</author>
      <pubDate>Fri, 16 Jul 2021 07:13:07 +0000</pubDate>
      <link>https://dev.to/simerca/best-makefile-for-docker-project-m1-compatible-516p</link>
      <guid>https://dev.to/simerca/best-makefile-for-docker-project-m1-compatible-516p</guid>
      <description>&lt;p&gt;Hi !&lt;/p&gt;

&lt;p&gt;Here is the best Makefile ever,&lt;/p&gt;

&lt;p&gt;It's now easy to use Registry Gitlab to push your docker images and use repo name as image name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;REGISTRY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; &lt;span class="nb"&gt;grep &lt;/span&gt;gitlab.com .git/config|sed &lt;span class="s1"&gt;'s/url = https:\/\//registry./g'&lt;/span&gt;|sed &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"s/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;//g"&lt;/span&gt;|xargs&lt;span class="nf"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; git symbolic-ref &lt;span class="nt"&gt;--short&lt;/span&gt; &lt;span class="nt"&gt;-q&lt;/span&gt; HEAD|sed &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;'s/master$$/latest/g'&lt;/span&gt;|sed &lt;span class="s1"&gt;'s/\([a-zA-Z]*\)\//\1-/g'&lt;/span&gt;&lt;span class="nf"&gt;)&lt;/span&gt;

&lt;span class="nl"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .

&lt;span class="nl"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;
    docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; 

&lt;span class="nl"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; 

&lt;span class="nl"&gt;pushm1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker buildx build &lt;span class="nt"&gt;--platform&lt;/span&gt; linux/amd64 &lt;span class="nt"&gt;--push&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .

&lt;span class="nl"&gt;buildm1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker buildx build &lt;span class="nt"&gt;--platform&lt;/span&gt; linux/amd64 &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>devops</category>
    </item>
    <item>
      <title>Microsoft has a brand new emoji set coming to Windows 11</title>
      <author>Madza</author>
      <pubDate>Fri, 16 Jul 2021 07:03:55 +0000</pubDate>
      <link>https://dev.to/madza/microsoft-has-a-brand-new-emoji-set-coming-to-windows-11-5d6k</link>
      <guid>https://dev.to/madza/microsoft-has-a-brand-new-emoji-set-coming-to-windows-11-5d6k</guid>
      <description>&lt;p&gt;Microsoft design team has &lt;a href="https://medium.com/microsoft-design/emotionality-at-work-398182387adc"&gt;announced&lt;/a&gt; a brand new emoji set coming to Windows 11 and Office 365.&lt;/p&gt;

&lt;p&gt;The most fundamental change Microsoft has made is that all the emoji are now 3D designs.&lt;/p&gt;

&lt;p&gt;Microsoft says it wants emoji to be playful, because it believes play is important in the workplace.&lt;/p&gt;

&lt;p&gt;In addition to revamping all of its existing emoji, Microsoft also created new ones to represent the new realities of hybrid work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4hOIrSPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fve64yxpilwccxzckeg2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4hOIrSPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fve64yxpilwccxzckeg2.jpg" alt="Alt"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Share your thoughts! Do you like the new ones more?&lt;/p&gt;

</description>
      <category>news</category>
      <category>microsoft</category>
      <category>windows</category>
      <category>ui</category>
    </item>
    <item>
      <title>AWS CI/CD pipeline: Solving Issues in Program Code</title>
      <author>Salah Elhossiny</author>
      <pubDate>Fri, 16 Jul 2021 06:59:43 +0000</pubDate>
      <link>https://dev.to/salah856/aws-ci-cd-pipeline-solving-issues-in-program-code-ffa</link>
      <guid>https://dev.to/salah856/aws-ci-cd-pipeline-solving-issues-in-program-code-ffa</guid>
      <description>&lt;p&gt;In &lt;a href="https://dev.to/awsmenacommunity/aws-ci-cd-pipeline-with-codeguru-unittest-part-i-i4o"&gt; previous part &lt;/a&gt; , we knew how to setup our environment for CI/CD using AWS series, and CodeGuru. &lt;/p&gt;

&lt;p&gt;Now, Let's check the code. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is the structure of the source code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-src
    -main/java/com/example/concurrencysample
        -BasicCHeckMap.java
        -BasicSynchronization.java
        -Concurrency.java
        -ConcurrencyCheckout.java
        -SingletonRepo.java
        -Util.java
    -test/java/com/example/concurrencysample
        -SingletonRepoTests.java


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;let‚Äôs take a check the SingletonRepo file. SingletonRepo can only have one instance in the program. And sigletonsrepo have one HashMap. let‚Äôs check the putKey() function, which is the core of this workshop.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Concurrency&lt;/span&gt; &lt;span class="nf"&gt;putKey&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;product_code&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;           
    &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Util&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRandomDate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;containsKey&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_code&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_code&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Concurrency&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"test"&lt;/span&gt; &lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;   
&lt;span class="o"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;putKey works is simple. Check that HashMap has a number with containsKey() and if not, save the number with put(). &lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the HashMap already has the same value, don‚Äôt put it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BasicSynchronization calls pukey() of SingletonRepo and inserts a randomly generated number between 0 ~ 2000.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ConcurrencyCheckout is Main class. This class creates 5 BasicSynchronizations and starts 5 threads.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zXX_PY13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125903682-aacacecb-f5ab-45d3-9ba6-e25d760508e7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zXX_PY13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125903682-aacacecb-f5ab-45d3-9ba6-e25d760508e7.png" alt="Screenshot from 2021-07-16 08-40-35"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-what-is-the-problem-with-this-program"&gt;
  &lt;/a&gt;
  SO WHAT IS THE PROBLEM WITH THIS PROGRAM?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This code has a concurrency issue. if it call two PutKey() from two threads at the same time. What will happen?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The number is entered only once, but the call count is increased twice.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HashMap is not thread-safe. The code above is dangerous because get and put don‚Äôt guarantee atomicity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the number of threads is increased and the number of put calls executed simultaneously increases, the result cannot be guaranteed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An error occurs because the same problem appears in the UnitTest being executed. SingletonRepotests, a unit test that is performed, creates 8 threads and raises the count one by one when an input occurs in the HashMap. And after all the work is done, the number of values entered in the HashMap is compared with the number of occurrences. If the values are the same, the number of inputs and the number of HashMaps are the same, so the function worked correctly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, UnitTest will continue to fail because the current code was programmed without considering concurrency. Of course, if you are very lucky, the test may succeed. However, to prevent this, SingletonRepotests performs the same test 100 times.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how do you solve this problem?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can change HashMap to ConcurrentHashMap. ConcurrentHashMap is designed to be thread-safe, so it operates stably in a multi-threaded environment and has slightly better performance than Hashtable and synchronized map. ConcurrentHashMap locks the map when you put it, so you can prevent the same key put at the same time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open the SingletonRepo.java file in Cloud9, then change the HashMap below to ConcurrentHashMap.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.concurrent.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Concurrency&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;ConcurrentHashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Concurrency&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ConcurrentHashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;push the changes again.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m "fix singletonrepo.java"
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And if you check the concurrencysample of Build, you can see that the build was successful. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tBUzJilW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905251-b554def6-9a53-4f87-8206-4ae54d663fed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tBUzJilW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905251-b554def6-9a53-4f87-8206-4ae54d663fed.png" alt="codequality-solve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;let‚Äôs also check the Report. If you select Concurrency-Unittest-Report in Report group of Build, you can see the result passed by 100%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2FbPvdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905288-54a27b2c-6ff4-4b41-8657-1e7f381767ab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2FbPvdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905288-54a27b2c-6ff4-4b41-8657-1e7f381767ab.png" alt="codequality-100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let`s go to CodePipeline : &lt;a href="https://console.aws.amazon.com/codepipeline"&gt;https://console.aws.amazon.com/codepipeline&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Select Pipeline in left menu and click concurrencysample-develop. this pipeline triggerd committing develop branch in concurrencysamle repository. you can find recently successed execution result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-fslOYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905320-9312953c-93cd-4012-a750-89ca67b1ded7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-fslOYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/23625821/125905320-9312953c-93cd-4012-a750-89ca67b1ded7.png" alt="codepipeline-dev-success"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We finished this part. In next part we will handle the pull requests and monitor the process using Codeguru. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>cicd</category>
      <category>cloud</category>
      <category>testing</category>
    </item>
    <item>
      <title>What gives Flutter the edge over its other alternatives?</title>
      <author>Praveen Varma</author>
      <pubDate>Fri, 16 Jul 2021 06:54:41 +0000</pubDate>
      <link>https://dev.to/geekyprawins/what-gives-flutter-the-edge-over-its-other-alternatives-22h7</link>
      <guid>https://dev.to/geekyprawins/what-gives-flutter-the-edge-over-its-other-alternatives-22h7</guid>
      <description>&lt;p&gt;&lt;em&gt;Hey there! In the previous post we have walked through the Introduction of &lt;strong&gt;&lt;a href="https://flutter.dev"&gt;Flutter&lt;/a&gt;&lt;/strong&gt;, incase you haven't read that, you can read it &lt;a href="https://dev.to/geekyprawins/understanding-flutter-a-beginner-s-guide-2l6h"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;br&gt;
Now let's see what makes Flutter, the projected next big thing in Mobile App Development!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--df4pFU3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18r9vvhueh1okb3dtvwp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--df4pFU3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18r9vvhueh1okb3dtvwp.jpg" alt="memeF1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are as of mid-2020, over &lt;strong&gt;50,000&lt;/strong&gt; &lt;em&gt;Flutter&lt;/em&gt; apps on Google Playstore. Over half a million developers use &lt;em&gt;Flutter&lt;/em&gt; every month and how much they love it is evident in forums of &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; and &lt;a href="https://stackoverflow.com"&gt;StackOverflow&lt;/a&gt;. Clearly, Flutter is emerging a winner in the &lt;em&gt;cross-platform app&lt;/em&gt; development space and proving a worthy competitor to &lt;em&gt;React Native&lt;/em&gt;. &lt;br&gt;
In fact, the popularity of &lt;em&gt;Flutter&lt;/em&gt; has soared significantly despite its being such a &lt;strong&gt;young&lt;/strong&gt; framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--swjFSdRO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlm6g87h29jvemz9stm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--swjFSdRO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrlm6g87h29jvemz9stm.jpeg" alt="f2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-unique-is-flutter"&gt;
  &lt;/a&gt;
  &lt;em&gt;How unique is Flutter?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now as I said in the previous post, &lt;em&gt;Flutter&lt;/em&gt; simply compile that &lt;em&gt;Dart&lt;/em&gt; code to native code for these different platforms and that happens with the help of the &lt;em&gt;Flutter SDK&lt;/em&gt; and as a result, you get real apps spit out with &lt;strong&gt;highly optimized high performance&lt;/strong&gt; code that's based on your code but that's not your code itself, instead it's the compiled version of that code and therefore you really ship code that runs on the different platforms and that's optimized and high performant because performance is actually a huge advantage of Flutter apps, Flutter out of the box gives you high performance applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-flutter-advantage"&gt;
  &lt;/a&gt;
  &lt;em&gt;The Flutter advantage&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;It's important to understand that Flutter does not use platform primitives. Now what do I mean with that? We're having our Flutter app and we're targeting iOS and Android. Now if we want to add a button then in Flutter with this UI as Code approach, we do so by adding a RaisedButton.&lt;/p&gt;

&lt;p&gt;Now this is just an instruction in your Flutter code which tells Flutter to render a button in that part of your widget tree.&lt;br&gt;
Now you could think that what happens when the code gets compiled to that native code is that this &lt;code&gt;RaisedButton&lt;/code&gt; is translated to "hey &lt;em&gt;iOS&lt;/em&gt;, please give me your default button", which would be a &lt;code&gt;UI button&lt;/code&gt; element in the iOS development world and for &lt;em&gt;Android&lt;/em&gt;, a &lt;code&gt;widget.button&lt;/code&gt;, that we get these native buttons which are of course part of the native development environments and that's &lt;strong&gt;NOT&lt;/strong&gt; what happens!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0HeqZWfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp32bchqtk9hj20i7wi1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0HeqZWfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xp32bchqtk9hj20i7wi1.jpg" alt="flutter_icon_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead &lt;em&gt;Flutter&lt;/em&gt; has its own implementations and that's really important to understand and to keep in mind, &lt;strong&gt;directly controls every pixel on the screen&lt;/strong&gt;. So Flutter does not compile your code to some native equivalence or native alternatives, instead Flutter ships with its own engine which controls the entire screen, everything the user sees and renders every pixel on its own and that gives Flutter a lot of control and a lot of flexibility, sounds great right?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rRTMFQwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uv0agpybd8ikmwmsiwx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rRTMFQwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4uv0agpybd8ikmwmsiwx.png" alt="9amcr9hg112df5ckybbh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;em&gt;Conclusion&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now you don't have to care too much about that because Flutter does it for you but it's important to be aware of that because that gives Flutter more control and less limitations and therefore, you implicitly, indirectly benefit from that.&lt;br&gt;
You have a good performance, you have a lot of power, a lot of things you can configure, you have full control over how you want to build your user interface!&lt;/p&gt;

&lt;p&gt;Thanks for giving this a read, have a great day!&lt;br&gt;
&lt;a href="https://github.com/geekyprawins"&gt;Praveen Varma&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>ios</category>
      <category>android</category>
      <category>dart</category>
    </item>
    <item>
      <title>Simplify expressjs file with express application generator</title>
      <author>Ali Zulfaqar</author>
      <pubDate>Fri, 16 Jul 2021 06:31:57 +0000</pubDate>
      <link>https://dev.to/alizulfaqar/simplify-expressjs-file-with-express-application-generator-1n1e</link>
      <guid>https://dev.to/alizulfaqar/simplify-expressjs-file-with-express-application-generator-1n1e</guid>
      <description>&lt;p&gt;Streamline express folder structure across all projects&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello and welcome to my 2nd post, this post is to share how you can streamline your files and folder for Express application generator. With Express application generator, you can have your files and folder up in no time. And make sure you have the basic knowledge for setting up backend file and folder such as npm init to make server.js file as this is just a tool to help simplify the process of setting up express files and folder&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation-steps"&gt;
  &lt;/a&gt;
  Installation steps
&lt;/h2&gt;

&lt;p&gt;In the project directory, you can run:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npx-expressgenerator"&gt;
  &lt;/a&gt;
  npx express-generator
&lt;/h3&gt;

&lt;p&gt;and you will have the folder and files as below&lt;br&gt;
 .&lt;br&gt;
‚îú‚îÄ‚îÄ app.js&lt;br&gt;
‚îú‚îÄ‚îÄ bin&lt;br&gt;
‚îÇ   ‚îî‚îÄ‚îÄ www&lt;br&gt;
‚îú‚îÄ‚îÄ package.json&lt;br&gt;
‚îú‚îÄ‚îÄ public&lt;br&gt;
‚îÇ   ‚îú‚îÄ‚îÄ images&lt;br&gt;
‚îÇ   ‚îú‚îÄ‚îÄ javascripts&lt;br&gt;
‚îÇ   ‚îî‚îÄ‚îÄ stylesheets&lt;br&gt;
‚îÇ       ‚îî‚îÄ‚îÄ style.css&lt;br&gt;
‚îú‚îÄ‚îÄ routes&lt;br&gt;
‚îÇ   ‚îú‚îÄ‚îÄ index.js&lt;br&gt;
‚îÇ   ‚îî‚îÄ‚îÄ users.js&lt;br&gt;
‚îî‚îÄ‚îÄ views&lt;br&gt;
    ‚îú‚îÄ‚îÄ error.pug&lt;br&gt;
    ‚îú‚îÄ‚îÄ index.pug&lt;br&gt;
    ‚îî‚îÄ‚îÄ layout.pug&lt;/p&gt;

&lt;p&gt;7 directories, 9 files&lt;/p&gt;

&lt;p&gt;After the files and folder has been created, run below command&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-install"&gt;
  &lt;/a&gt;
  npm install
&lt;/h3&gt;

&lt;p&gt;this will install all require dependency package from package.json &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-start"&gt;
  &lt;/a&gt;
  npm start
&lt;/h3&gt;

&lt;p&gt;to run the express file&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;For anyone who is interested to dive in ExpressJS without headache to create new model, controller and routes. I recommend use express generator to get a grip of how the files and folders are structured. From there you can get familiar on how ExpressJS works&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>3 Ways to Give Better Feedback</title>
      <author>Kenneth Larsen</author>
      <pubDate>Fri, 16 Jul 2021 06:24:16 +0000</pubDate>
      <link>https://dev.to/kennethlarsen/3-ways-to-give-better-feedback-48l6</link>
      <guid>https://dev.to/kennethlarsen/3-ways-to-give-better-feedback-48l6</guid>
      <description>&lt;p&gt;Giving feedback to your peers can be extremely difficult if you do not plan it right. Thankfully, there are a set of tools that can drastically improve those skills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-the-proper-format"&gt;
  &lt;/a&gt;
  1: Use the proper format
&lt;/h2&gt;

&lt;p&gt;"Your pull requests are really annoying to review!" is not feedback that is easy to accept or easy to act on. It is very confronting and blaming and thereby switches the focus away from solving the problem.&lt;/p&gt;

&lt;p&gt;Instead, feedback should follow an observing formula:&lt;/p&gt;

&lt;p&gt;Observation of behaviour + impact of the behaviour + question or request = actionable and specific feedback.&lt;/p&gt;

&lt;p&gt;The formula turns the feedback from something blaming into: "Over the last three weeks, I've noticed that you have created large pull requests without any descriptions or instructions. This more than doubles the review time needed and has led to five production bugs. Can you help me understand why you prefer these large pull requests?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-negative-feedback-should-be-given-with-a-growth-mindset"&gt;
  &lt;/a&gt;
  2: Negative feedback should be given with a growth mindset
&lt;/h2&gt;

&lt;p&gt;To ensure that people can use negative feedback, you must give it with a growth mindset. If the negative feedback does not have the goal of helping your colleague grow in that particular area, then it is not valuable feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-do-not-deliver-it-as-a-script"&gt;
  &lt;/a&gt;
  3: Do not deliver it as a script
&lt;/h2&gt;

&lt;p&gt;It might seem like a good idea to write down the feedback and read it to your colleague, but it will often come off as ungenuine. Feedback is about being present and listening, not delivering a presentation. &lt;/p&gt;

&lt;p&gt;With these three steps, you can easily take your feedback skills to the next level.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;Huston, Therese; Let's Talk: Make Effective Feedback Your Superpower&lt;/p&gt;

&lt;p&gt;Hogan, Lara; Resilient Management&lt;/p&gt;

</description>
      <category>feedback</category>
      <category>management</category>
      <category>leadership</category>
      <category>reviews</category>
    </item>
    <item>
      <title>The 10 most in-demand roles in the Information Security domain</title>
      <author>infosec-jobs.com</author>
      <pubDate>Fri, 16 Jul 2021 06:16:46 +0000</pubDate>
      <link>https://dev.to/infosec_jobscom/the-10-most-in-demand-roles-in-the-information-security-domain-4599</link>
      <guid>https://dev.to/infosec_jobscom/the-10-most-in-demand-roles-in-the-information-security-domain-4599</guid>
      <description>&lt;p&gt;We thought it would be interesting to go deeper into the analytics part of running our InfoSec job board ‚Äì in the most privacy focused way for our users, of course. So here we are now starting to expose some of our aggregated internal job data in a systematic fashion through a simple REST API with a list of generalized job titles that are posted on &lt;a href="https://infosec-jobs.com/"&gt;infosec-jobs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The cool thing with this is that we are able to see what‚Äôs popular in terms of the roles employers are hiring for most often in the Cyber Security space.&lt;/p&gt;

&lt;p&gt;Our ‚Äúmethodology‚Äù here is quite simple: we‚Äôre primarily counting the occurence of job titles over the last 12 months, cleaned and adjusted for certain specialties that some companies like to do, e.g. inventing their own stuff that‚Äôs not being used by anyone else or adding crazy super-specific details to a vacancy title and so on. We also left out many titles with indicators regarding seniority or other requirements as we already have dedicated attributes for these. More on that probably in a future post.&lt;/p&gt;

&lt;p&gt;So here it is, our current (as of June 2021) top list of the ten roles in Information Security with the highest demand from employers on our site:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Security Engineer&lt;/li&gt;
&lt;li&gt;Application Security Engineer&lt;/li&gt;
&lt;li&gt;DevSecOps Engineer&lt;/li&gt;
&lt;li&gt;Cloud Security Architect&lt;/li&gt;
&lt;li&gt;Cloud Security Engineer&lt;/li&gt;
&lt;li&gt;Information Security Engineer&lt;/li&gt;
&lt;li&gt;Cyber Security Analyst&lt;/li&gt;
&lt;li&gt;Product Security Engineer&lt;/li&gt;
&lt;li&gt;Information Security Manager&lt;/li&gt;
&lt;li&gt;Security Analyst&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If your interested in the raw JSON data you can find the endpoint here: &lt;a href="https://infosec-jobs.com/api/list-job-titles/"&gt;https://infosec-jobs.com/api/list-job-titles/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results there are updated every 6 hours, although it won‚Äôt really change that much anytime soon. And if it does we‚Äôll maybe write about it üòâ&lt;/p&gt;

&lt;p&gt;We also use all the job titles from that list for our brand new salaries survey to have a ‚Äústandardized‚Äù selection of positions to choose from and attach salaries to. You can check out the survey ‚Äì and the resulting dataset being released in the public domain ‚Äì here: &lt;a href="https://salaries.infosec-jobs.com/"&gt;https://salaries.infosec-jobs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post appeared first on &lt;a href="https://insights.infosec-jobs.com/the-10-most-in-demand-roles-in-the-information-security-domain/"&gt;https://insights.infosec-jobs.com/the-10-most-in-demand-roles-in-the-information-security-domain/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>insights</category>
      <category>career</category>
      <category>cybersecurity</category>
    </item>
    <item>
      <title>Learn PYTHON in ONE Week!</title>
      <author>SAIFULLAHüáÆüá≥</author>
      <pubDate>Fri, 16 Jul 2021 06:16:30 +0000</pubDate>
      <link>https://dev.to/saifullah/learn-python-in-one-week-1ok4</link>
      <guid>https://dev.to/saifullah/learn-python-in-one-week-1ok4</guid>
      <description>&lt;p&gt;Want to learn one of the most powerful and trending programming language within one week.&lt;/p&gt;

&lt;p&gt;Yes, you read it right you can learn Python within a week if you have dedication you can.&lt;br&gt;
Just follow the below path.&lt;/p&gt;

&lt;p&gt;Here is the path to learn &lt;strong&gt;Python&lt;/strong&gt; in just 1 week.&lt;/p&gt;

&lt;p&gt;So let's start with day by day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-01"&gt;
  &lt;/a&gt;
  DAY 01
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#basic-concepts3-hours"&gt;
  &lt;/a&gt;
  Basic Concepts(3 hours)
&lt;/h1&gt;

&lt;p&gt;Variables&lt;br&gt;
 Display Output(Print command)&lt;br&gt;
 Take user input(input command)&lt;br&gt;
 Conditionals statements&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-02"&gt;
  &lt;/a&gt;
  DAY 02
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#4-basic-concepts3-hours"&gt;
  &lt;/a&gt;
  4 Basic Concepts(3 hours)
&lt;/h1&gt;

&lt;p&gt;List(index, append, remove)&lt;br&gt;
 for loop&lt;br&gt;
 while loop&lt;br&gt;
 function&lt;/p&gt;

&lt;p&gt;you can learn basics from here -- &lt;br&gt;
&lt;a href="https://www.w3schools.com/python/default.asp"&gt;Python Basics&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-03"&gt;
  &lt;/a&gt;
  DAY 03
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#simple-coding-problems5hours"&gt;
  &lt;/a&gt;
  Simple coding problems(5hours)
&lt;/h1&gt;

&lt;p&gt;Convert miles into Kilometers&lt;br&gt;
 Calculate Simple Interest&lt;br&gt;
 Find largest number in the list&lt;br&gt;
 Check a number is  prime or not&lt;br&gt;
 Sum of all digits in a number&lt;br&gt;
 Reverse String (check palindrome)&lt;br&gt;
 Calculate age&lt;br&gt;
 Build a simple Calculator&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-04"&gt;
  &lt;/a&gt;
  DAY 04
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#data-structures3-hours"&gt;
  &lt;/a&gt;
  Data Structures(3 hours)
&lt;/h1&gt;

&lt;p&gt;Stack and Queue&lt;br&gt;
 Dictionary&lt;br&gt;
 Tuples&lt;/p&gt;

&lt;p&gt;you can learn DS from here -- &lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/data-structures/"&gt;Learn Data Structures&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-05"&gt;
  &lt;/a&gt;
  DAY 05
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#oop4-hours"&gt;
  &lt;/a&gt;
  OOP(4 hours)
&lt;/h1&gt;

&lt;p&gt;Object&lt;br&gt;
 Class&lt;br&gt;
 Method and Constructor&lt;br&gt;
 OOP-Inheritance&lt;/p&gt;

&lt;p&gt;for this you can watch YouTube videos&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-06"&gt;
  &lt;/a&gt;
  DAY 06
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#algorithm4-hours"&gt;
  &lt;/a&gt;
  Algorithm(4 hours)
&lt;/h1&gt;

&lt;p&gt;Binary Search&lt;br&gt;
 Bubble Sort&lt;br&gt;
 Selection Sort&lt;/p&gt;

&lt;p&gt;one of the best Algorithm course I came across--&lt;br&gt;
&lt;a href="https://youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O"&gt;Learn Algorithm&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-07"&gt;
  &lt;/a&gt;
  DAY 07
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#projects6-hours"&gt;
  &lt;/a&gt;
  Projects(6 hours)
&lt;/h1&gt;

&lt;p&gt;Build a web Crawler&lt;br&gt;
 or a news aggregator&lt;br&gt;
 or a simple game using pygame&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Voila!!&lt;/strong&gt; You made it you are now &lt;strong&gt;Junior Python developer.&lt;/strong&gt;&lt;br&gt;
So, that's it for now hope you find it useful.&lt;br&gt;
Now its all depends on you.&lt;br&gt;
Best of luck!! &lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to utilise JSDoc comment tags so that Visual Studio Code intellisense works great</title>
      <author>Dharmen Shah</author>
      <pubDate>Fri, 16 Jul 2021 06:09:59 +0000</pubDate>
      <link>https://dev.to/shhdharmen/how-to-utilise-jsdoc-comment-tags-so-that-visual-studio-code-intellisense-works-great-3ho4</link>
      <guid>https://dev.to/shhdharmen/how-to-utilise-jsdoc-comment-tags-so-that-visual-studio-code-intellisense-works-great-3ho4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#types-in-javascript"&gt;
  &lt;/a&gt;
  Types in JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript is a loosely typed and dynamic language. Variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned (and re-assigned) values of all types:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// foo is now a number&lt;/span&gt;
&lt;span class="nx"&gt;foo&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// foo is now a string&lt;/span&gt;
&lt;span class="nx"&gt;foo&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// foo is now a boolean&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#intellisense-in-vs-code"&gt;
  &lt;/a&gt;
  Intellisense in VS Code
&lt;/h2&gt;

&lt;p&gt;Visual Studio Code's intellisense will only work, if it understands the &lt;code&gt;type&lt;/code&gt; of of your code.&lt;/p&gt;

&lt;p&gt;In above example, after you write first line, &lt;code&gt;let foo = 42;&lt;/code&gt; it will show you methods of a number:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HSr3WmCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372660432/JKt16SWHX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSr3WmCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372660432/JKt16SWHX.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what if you assign a JSON, which is going to hold many properties like &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;createdOn&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bSyWUenA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372701424/76Qwg8gIF9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSyWUenA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372701424/76Qwg8gIF9.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's also working fine. But, it's unlikely that your variable is going to hold values with initialization. So, now if you check for blank JSON, intellisense will stop working, because now VS code doesn't know the types.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L-z0Ngbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372713349/nFnAUNqsN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-z0Ngbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372713349/nFnAUNqsN.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Without proper intellisense, we often make typos, call the method which doesn't exist or even try to access the properties of an objects by a random guess.&lt;/p&gt;

&lt;p&gt;To handle such and more complex scenarios, and make sure intellisense works right for those, we will use &lt;a href="https://jsdoc.app/"&gt;JSDoc&lt;/a&gt;'s &lt;code&gt;@param&lt;/code&gt;, &lt;code&gt;@type&lt;/code&gt; and &lt;code&gt;@typedef&lt;/code&gt; block tags.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jsdoc-to-the-rescue"&gt;
  &lt;/a&gt;
  JSDoc to the rescue
&lt;/h2&gt;

&lt;p&gt;JSDoc comes with lots of tags, you can checkout them all on it's website: &lt;a href="https://jsdoc.app/"&gt;https://jsdoc.app/&lt;/a&gt;. But for this article, we are going to focus on below 3 tags:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-param.html"&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-type.html"&gt;&lt;code&gt;@type&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-typedef.html"&gt;&lt;code&gt;@typedef&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#-raw-param-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;@param&lt;/code&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;@param&lt;/code&gt; tag provides the name, type, and description of a function parameter.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;@param&lt;/code&gt; tag requires you to specify the name of the parameter you are documenting. You can also include the parameter's type, enclosed in curly brackets, and a description of the parameter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-param.html#overview"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's look at some examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * @param {string} somebody
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;somebody&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;somebody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After above code, VS code's intellisense will work great whenever you try to call &lt;code&gt;sayHello&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4k4nO8ku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372756661/aJe_pj1jm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4k4nO8ku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372756661/aJe_pj1jm.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can look at more examples at &lt;a href="https://jsdoc.app/tags-param.html#examples"&gt;https://jsdoc.app/tags-param.html#examples&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-type-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;@type&lt;/code&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;@type&lt;/code&gt; tag allows you to provide a type expression identifying the type of value that a symbol may contain, or the type of value returned by a function. You can also include type expressions with many other JSDoc tags, such as the &lt;code&gt;@param&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;A type expression can include the JSDoc namepath to a symbol (for example, &lt;code&gt;myNamespace.MyClass&lt;/code&gt;); a built-in JavaScript type (for example, &lt;code&gt;string&lt;/code&gt;); or a combination of these. You can use any &lt;a href="https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#type-expressions"&gt;Google Closure Compiler type expression&lt;/a&gt;, as well as several other formats that are specific to JSDoc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-type.html#overview"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's take a look at example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @type {Array} */&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For above code, typing &lt;code&gt;foo.&lt;/code&gt; will load all &lt;code&gt;Array&lt;/code&gt;'s properties and methods:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1KTK9wwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372772162/tMU-pXRxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1KTK9wwf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372772162/tMU-pXRxg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More examples at &lt;a href="https://jsdoc.app/tags-type.html#examples"&gt;https://jsdoc.app/tags-type.html#examples&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-typedef-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;@typedef&lt;/code&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;@typedef&lt;/code&gt; tag is useful for documenting custom types, particularly if you wish to refer to them repeatedly. These types can then be used within other tags expecting a type, such as &lt;code&gt;@type&lt;/code&gt; or &lt;code&gt;@param&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jsdoc.app/tags-typedef.html#overview"&gt;Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;This tag is really helpful, it helps us to shape any complex type. Let's take a look at example.&lt;/p&gt;

&lt;p&gt;This example defines a more complex type, an object with several properties, and sets its namepath so it will be displayed along with the class that uses the type. Because the type definition is not actually exposed by the function, it is customary to document the type definition as an inner member.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/toast.js&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * @typedef {Object} Toast
 * @property {string} id
 * @property {boolean} closed - Indicates whether user has close the toast.
 * @property {Date} generatedOn - Indicates when the toast was generated.
 * @property {string} message - toast content.
 * @property {"warn" | "info"} type -  Indicates type of toast.
 * Also useful to show different icons.
 */&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * A function for showing toast
 * @param {Toast} toast - {@link toast} object
 * containing all components of the toast.
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;showToast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the breakdown of above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The first line:

&lt;ol&gt;
&lt;li&gt;We first indicated that we want to create a custom type using &lt;code&gt;@typedef&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;Then we indicated that it's going to be an &lt;code&gt;Object&lt;/code&gt;. You can also create simpler custom type using primitive date types, for example &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;And lastly, we named this type as &lt;code&gt;Toast&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;Now, as &lt;code&gt;Toast&lt;/code&gt; is going to be an &lt;code&gt;Object&lt;/code&gt;, in rest of the comments, we defined what are it's &lt;code&gt;properties&lt;/code&gt; going to be using &lt;code&gt;@property&lt;/code&gt; tag. You can learn more about &lt;code&gt;@property&lt;/code&gt; tag &lt;a href="https://jsdoc.app/tags-property.html"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now if you try to call &lt;code&gt;showToast&lt;/code&gt;, VS code will do it's magic:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxO1B22n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372818836/rFMwqFCUy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxO1B22n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626372818836/rFMwqFCUy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, this is not enough. In practical scenarios, you would be generating &lt;code&gt;Toast&lt;/code&gt;s in different files and calling &lt;code&gt;showToast&lt;/code&gt; from there. You can export and import &lt;code&gt;showToast&lt;/code&gt; in other files, but what about &lt;code&gt;Toast&lt;/code&gt; type definition?&lt;/p&gt;

&lt;p&gt;You can also import type definition the same way you import bindings from another module. But as types are created in comments, you need import them in comments:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/home.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;showToast&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./toast&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * @returns {import("./toast").Toast[]}
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getToasts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allToasts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getToasts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;allToasts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;showToast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just to emphasis, here's how we imported &lt;code&gt;Toast&lt;/code&gt; type definition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * @returns {import("./toast").Toast[]}
 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read more about &lt;code&gt;@typedef&lt;/code&gt; at &lt;a href="https://jsdoc.app/tags-typedef.html"&gt;https://jsdoc.app/tags-typedef.html&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We learned how JSDoc block tags, &lt;code&gt;@param&lt;/code&gt;, &lt;code&gt;@type&lt;/code&gt; and &lt;code&gt;@typedef&lt;/code&gt; can help us to achieve maximum out of VS Code's intellisense and code faster without getting into un-wanted issues.&lt;/p&gt;

&lt;p&gt;That's it! Thanks for reading. Let me know your thoughts and feedbacks in comments section.&lt;/p&gt;

&lt;p&gt;And yes, always believe in yourself üåÖ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CjRdMZ4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626373183525/KRCCwEHxN.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CjRdMZ4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626373183525/KRCCwEHxN.jpeg" alt="joshua-earle-JAwzCW0JpIw-unsplash.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Photo by &lt;a href="https://unsplash.com/@joshuaearle?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Joshua Earle&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/faith?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
&lt;/small&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vscode</category>
      <category>jsdoc</category>
      <category>programming</category>
    </item>
    <item>
      <title>Learning Python-Basic course: Day 17, Summary of the week and Insertion sort.</title>
      <author>Aatmaj</author>
      <pubDate>Fri, 16 Jul 2021 05:44:53 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-basic-course-day-17-summary-of-the-week-and-insertion-sort-4bi0</link>
      <guid>https://dev.to/aatmaj/learning-python-basic-course-day-17-summary-of-the-week-and-insertion-sort-4bi0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-learn-about-the-insertion-sort-code-then-write-a-program-to-change-capital-and-small-cases"&gt;
  &lt;/a&gt;
  ü§üToday we will learn about the insertion sort code, then write a program to change capital and small cases.
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#summary-of-the-week"&gt;
  &lt;/a&gt;
  Summary of the week
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-14-basic-exception-and-error-handling-using-try-except-5f38"&gt;Day 14&lt;/a&gt;- we covered the &lt;code&gt;try&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt; statements, and basic exception handling. Advanced exception handling and types of exceptions, user defined exceptions is for later.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-15-more-about-try-except-1nmj"&gt;Day 15&lt;/a&gt;- We solved some creative questions based on &lt;code&gt;try&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt; and learnt about nesting them. We also saw one really challenging question related to &lt;code&gt;try&lt;/code&gt; &lt;code&gt;except&lt;/code&gt; &lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-15-more-about-try-except-1nmj"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-16-fractal-lists-and-other-questions-1ca6"&gt;Day 16&lt;/a&gt; We solved more questions on lists now with the added power of &lt;code&gt;try&lt;/code&gt; &lt;code&gt;except&lt;/code&gt;. We covered questions like fractal lists, alphabetical order of lists and reversing lists.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#insertion-sort"&gt;
  &lt;/a&gt;
  Insertion sort.
&lt;/h2&gt;

&lt;p&gt;Insertion sort is a simple sorting algorithm. It works similar to the way you sort cards. If you are new to this algorithm, check out &lt;a href="https://www.geeksforgeeks.org/insertion-sort/"&gt;this link&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="c1"&gt;#key = a[i]
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="c1"&gt;#swap
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
Logic-
Set the key equal to the first unsorted value.
Compare the key and the sorted elements.
Move the key to the required position.
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code enclosed in block comments  &lt;code&gt;'''&lt;/code&gt; is block comments. Whenever working in teams, such documentation is of critical. More about it &lt;a href="https://dev.to/aatmaj/document-today-or-repent-tommorrow-1mg8"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For those who are new to Data structures and algorithms, please check out this course on dev.to.-&lt;a href="https://dev.to/ayabouchiha/series/13547"&gt;Data structure &amp;amp; algorithms Series' Articles&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Exercise&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We did the alphabetical ordering yesterday(In case you missed it- &lt;a href="https://dev.to/aatmaj/learning-python-basic-course-day-16-fractal-lists-and-other-questions-1ca6"&gt;here&lt;/a&gt;) Replace the sorted() method used in it with insertion sort. &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/blob/81fab3a1d869f4d75a0caecae1cf2abfbaff31f6/Basic/Day%2017/Exercise%20solutions/Exercise%201.py"&gt;Answer here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Sample question&lt;br&gt;
1) &lt;strong&gt;Capital to Small&lt;/strong&gt; Write a program to turn capital letters into small case and small case to  capital case in a list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Please enter a letter "&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#65=A
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;#65=A, 97=a 
&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;#65=A
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error. Please enter only characters."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Please enter a letter a
Please enter a letter B
Please enter a letter c
Please enter a letter D
A
b
C
d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an example of error handling using &lt;code&gt;if-else&lt;/code&gt; statements.&lt;/p&gt;







&lt;p&gt;‚úåÔ∏èSo friends that's all for now. üòä Hope you all are having fun.üòé Please let me know in the comment section below üëá. And don't forget to like the post if you did. üòç I am open to any suggestions or doubts. ü§† Just post in the comments below or gmail me. üòâ&lt;br&gt;
Thank you allüëç&lt;/p&gt;




&lt;p&gt;One more way to ask any doubts is by forking the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python/tree/main/Basic/Doubts"&gt;repo here&lt;/a&gt; and sending Pull request of your doubt.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•&lt;br&gt;
Next day will begin from TuesdayüìÖ, Monday is reserved for.... &lt;a href="https://dev.to/aatmaj/launching-matlab-mondays-a-crash-course-nb1"&gt;MATLAB MONDAYSüí•&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-me-for-updates-on-github-visit-the-learning-python-repo-made-for-this-course"&gt;
  &lt;/a&gt;
  Follow me for updates on &lt;a href="https://github.com/Aatmaj-Zephyr"&gt;Github&lt;/a&gt;. Visit the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;learning Python repo&lt;/a&gt; made for this course.
&lt;/h3&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>T√¨m hi·ªÉu ƒë·ªãa ch·ªâ cung c·∫•p b·ªô b√†n ƒÉn cao c·∫•p, ch·∫•t l∆∞·ª£ng!</title>
      <author>Showroom H√πng Tu√Ω</author>
      <pubDate>Fri, 16 Jul 2021 04:35:55 +0000</pubDate>
      <link>https://dev.to/showroomhungtuy/tim-hieu-dia-chi-cung-cap-bo-ban-an-cao-cap-chat-luong-760</link>
      <guid>https://dev.to/showroomhungtuy/tim-hieu-dia-chi-cung-cap-bo-ban-an-cao-cap-chat-luong-760</guid>
      <description>&lt;p&gt;&lt;em&gt;C≈©ng gi·ªëng nh∆∞ nh·ªØng kh√¥ng gian n·ªôi th·∫•t kh√°c, vi·ªác ch·ªçn c√°c s·∫£n ph·∫©m n·ªôi ch·∫•t cho ph√≤ng b·∫øp ƒë·∫∑c bi·ªát l√† b√†n ƒÉn c≈©ng c·∫ßn ƒë∆∞·ª£c l·ª±a ch·ªçn m·ªôt c√°ch k·ªπ l∆∞·ª°ng, mu·ªën ƒë∆∞·ª£c nh∆∞ v·∫≠y ch√∫ng ta c·∫ßn t√¨m ƒë∆∞·ª£c m·ªôt ƒë·ªãa ch·ªâ cung c·∫•p uy t√≠n .V·∫≠y hi·ªán nay ƒë√¢u l√† ƒë·ªãa ch·ªâ cung c·∫•p &lt;/em&gt;&lt;em&gt;b·ªô b√†n ƒÉn cao c·∫•p, ch·∫•t l∆∞·ª£ng, v·ª´a ƒë·∫πp l·∫°i c√≥ ƒë∆∞·ª£c ƒë·ªô b·ªÅn t·ªët trong qu√° tr√¨nh s·ª≠ d·ª•ng l√¢u d√†i? H√£y c√πng¬†&lt;/em&gt;&lt;strong&gt;&lt;a href="https://hungtuy.com.vn/noi-that-pc35500.html"&gt;n·ªôi th·∫•t cao c·∫•p&lt;/a&gt;&lt;/strong&gt;&lt;em&gt; H√πng Tu√Ω t√¨m hi·ªÉu ngay trong b√†i vi·∫øt sau ƒë√¢y.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;M·ªôt s·ªë c√°ch l·ª±a ch·ªçn b√†n ƒÉn ph√π h·ª£p v·ªõi cƒÉn b·∫øp&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Khi mua b√†n ƒÉn, r·∫•t nhi·ªÅu ng∆∞·ªùi th∆∞·ªùng l·ª±a ch·ªçn theo c·∫£m t√≠nh. Nh∆∞ng ƒë√¢y l√† c√°ch l·ª±a ch·ªçn ho√†n to√†n sai l·∫ßm. Ch√∫ng ta n√™n mua b·ªô &lt;/span&gt;&lt;strong&gt;&lt;a href="https://hungtuy.com.vn/ban-an-pc20281.html"&gt;b√†n ƒÉn cao c·∫•p&lt;/a&gt;&lt;/strong&gt;&lt;span&gt; d·ª±a v√†o k√≠ch th∆∞·ªõc c·ªßa kh√¥ng gian nh√† b·∫øp. V·ªõi nh·ªØng kh√¥ng gian kh√¥ng qu√° r·ªông ch√∫ng ta kh√¥ng n√™n ch·ªçn nh·ªØng m·∫´u b√†n ƒÉn c√≥ k√≠ch th∆∞·ªõc l·ªõn. B·ªüi nh∆∞ v·∫≠y s·∫Ω khi·∫øn cho cƒÉn b·∫øp tr·ªü n√™n ch·∫≠t ch·ªôi, l√†m ·∫£nh h∆∞·ªüng ƒë·∫øn qu√° tr√¨nh n·∫•u n∆∞·ªõng, di chuy·ªÉn.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--snrgDMSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hungtuy.com.vn/mediacenter/media/images/1498/category/ava/s1000_1000/noi-that-phong-an-cao-cap-01-1590638094.jpg" class="article-body-image-wrapper"&gt;&lt;img alt="N·ªôi th·∫•t ph√≤ng ƒÉn cao c·∫•p nh·∫≠p kh·∫©u ch√¢u √¢u ch√≠nh h√£ng t·∫°i H√† N·ªôi" src="https://res.cloudinary.com/practicaldev/image/fetch/s--snrgDMSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hungtuy.com.vn/mediacenter/media/images/1498/category/ava/s1000_1000/noi-that-phong-an-cao-cap-01-1590638094.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;N√™n l·ª±a ch·ªçn b√†n ƒÉn sao cho ph√π h·ª£p v·ªõi kh√¥ng gian&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;T·ªët nh·∫•t, c√°c b·∫°n n√™n l·ª±a ch·ªçn nh·ªØng b·ªô b√†n ƒÉn c√≥ k√≠ch th∆∞·ªõc v·ª´a t·∫ßm sao cho th·ª´a ra kho·∫£ng 1 m√©t ph√≠a sau c√°c gh·∫ø ng·ªìi ƒë·ªÉ vi·ªác di chuy·ªÉn, sinh ho·∫°t n·∫•u n∆∞·ªõng tr·ªü n√™n d·ªÖ d√†ng h∆°n.&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;ƒê·ªãa ch·ªâ cung c·∫•p b·ªô b√†n ƒÉn cao c·∫•p, ch·∫•t l∆∞·ª£ng&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Hi·ªán nay tr√™n th·ªã tr∆∞·ªùng c√≥ r·∫•t nhi·ªÅu ƒë·ªãa ch·ªâ cung c·∫•p nh·ªØng b·ªô b√†n ƒÉn v·ªõi nhi·ªÅu ki·ªÉu d√°ng, m·∫´u m√£ kh√°c nhau. Tuy nhi√™n ƒë·ªÉ t√¨m ƒë∆∞·ª£c m·ªôt ƒë·ªãa ch·ªâ uy t√≠n th√¨ kh√¥ng ph·∫£i ai c≈©ng bi·∫øt. Th·ª±c t·∫ø cho th·∫•y, hi·ªán nay h√†ng gi·∫£ h√†ng nh√°i ƒëang ƒë∆∞·ª£c tr√† tr·ªôn r·∫•t nhi·ªÅu tr√™n th·ªã tr∆∞·ªùng. B·ªüi v·∫≠y m√† l√†m sao c√≥ th·ªÉ ƒë∆∞·ª£c b·ªô b√†n ƒÉn cao c·∫•p ch·∫•t l∆∞·ª£ng t·ªët ƒëang l√† c√¢u h·ªèi c·ªßa r·∫•t nhi·ªÅu ng∆∞·ªùi.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---T1LVYxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://photo-cms-viettimes.zadn.vn/c720x480/Uploaded/2021/obbcpuo/2019_06_11/vt_hung_tuy2678004_1162019.jpg" class="article-body-image-wrapper"&gt;&lt;img alt="ƒê·∫°i gia&amp;amp;quot; H√πng T√∫y c√≥ ƒë·ª©ng sau An Qu√Ω H∆∞ng trong game Vinaconex?" src="https://res.cloudinary.com/practicaldev/image/fetch/s---T1LVYxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://photo-cms-viettimes.zadn.vn/c720x480/Uploaded/2021/obbcpuo/2019_06_11/vt_hung_tuy2678004_1162019.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;H√πng T√∫y hi·ªán ƒëang l√† ƒë·ªãa ch·ªâ ƒë∆∞·ª£c nhi·ªÅu ng∆∞·ªùi l·ª±a ch·ªçn&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;G·ª£i √Ω cho b·∫°n, hi·ªán nay H√πng T√∫y ƒëang l√† ƒë·ªãa ch·ªâ cung c·∫•p b·ªô b√†n ƒÉn uy t√≠n, ƒë∆∞·ª£c r·∫•t nhi·ªÅu kh√°ch h√†ng ƒë√°nh gi√° cao. M·ªói m·ªôt s·∫£n ph·∫©m t·∫°i H√πng Tu√Ω ƒë·ªÅu ƒë∆∞·ª£c ƒë·∫£m b·∫£o 100% v·ªÅ ch·∫•t l∆∞·ª£ng. V·ªõi nhi·ªÅu nƒÉm trong ngh·ªÅ, H√πng Tu√Ω lu√¥n ƒëem ƒë·∫øn cho ng∆∞·ªùi ti√™u d√πng nh·ªØng s·∫£n ph·∫©m c√≥ ch·∫•t l∆∞·ª£ng t·ªët nh·∫•t. C√πng v·ªõi ƒë√≥, khi mua h√†ng kh√°ch h√†ng s·∫Ω ƒë∆∞·ª£c th·ªèa s·ª©c l·ª±a ch·ªçn nh·ªØng m·∫´u s·∫£n ph·∫©m kh√°c nhau, ƒë∆∞·ª£c mua h√†ng v·ªõi gi√° c·∫°nh tranh c√πng ƒë·ªôi ng≈© nh√¢n vi√™n t∆∞ v·∫•n nhi·ªát t√¨nh. Ch√≠nh v√¨ v·∫≠y m√† H√πng Tu√Ω lu√¥n l√† s·ª± l·ª±a ch·ªçn h√†ng ƒë·∫ßu c·ªßa ƒë√¥ng ƒë·∫£o ng∆∞·ªùi d√πng.&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;L·ªùi k·∫øt&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;span&gt;Ch·∫Øc h·∫≥n, th√¥ng qua b√†i vi·∫øt n√†y c√°c b·∫°n c≈©ng ƒë√£ t√¨m ƒë∆∞·ª£c cho m√¨nh m·ªôt ƒë·ªãa ch·ªâ cung c·∫•p &lt;/span&gt;&lt;strong&gt;&lt;a href="https://www.dailymotion.com/noithatcaocaphungtuy"&gt;b√†n ƒÉn cao c·∫•p nh·∫≠p kh·∫©u&lt;/a&gt; &lt;/strong&gt;&lt;span&gt;ch·∫•t l∆∞·ª£ng. Hy v·ªçng nh·ªØng th√¥ng tin tr√™n h·ªØu √≠ch cho b·∫°n, h√£y tr·ªü th√†nh ng∆∞·ªùi ti√™u d√πng th√¥ng th√°i ƒë·ªÉ c√≥ th·ªÉ ch·ªçn cho gia ƒë√¨nh m√¨nh b·ªô b√†n ƒÉn ƒë·∫πp c√≥ ch·∫•t l∆∞·ª£ng t·ªët nh·∫•t nh√©&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
