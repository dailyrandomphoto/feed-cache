<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Joy Of Empowering Others</title>
      <author>Arit Amana</author>
      <pubDate>Tue, 02 Nov 2021 23:59:22 +0000</pubDate>
      <link>https://dev.to/aritdeveloper/the-joy-of-empowering-others-3kbh</link>
      <guid>https://dev.to/aritdeveloper/the-joy-of-empowering-others-3kbh</guid>
      <description>&lt;p&gt;I’ve had the privilege of speaking at a few events this year. I linked a couple of them below.&lt;/p&gt;

&lt;p&gt;I don’t think I can ever tire of encouraging those who wish to break into software development! Several people who’ve listened to these talks have reached out, sharing how they related to my journey, and the resulting motivation they received. When it comes to tech: the more, the merrier !&lt;/p&gt;

&lt;p&gt;🎙 ThunderNerds - &lt;a href="https://www.thundernerds.io/2021/05/empowering-women-in-tech-with-arit-amana/"&gt;Empowering Women In Tech&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎙 CodeNewbie - &lt;a href="https://www.codenewbie.org/podcast/what-it-s-like-to-break-into-tech-as-a-mother/"&gt;Breaking Into Tech As A Mother&lt;/a&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z23UI1Yf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1202427288811397120/r9CWK7Wg_normal.jpg" alt="Porfirio profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Porfirio
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @burgostampadad
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/aritdeveloper"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/aritdeveloper"&gt;@aritdeveloper&lt;/a&gt; &lt;a href="https://twitter.com/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt; I am a 35 year old father and could relate with &lt;a href="https://twitter.com/aritdeveloper"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/aritdeveloper"&gt;@aritdeveloper&lt;/a&gt; so much. This podcast was very refreshing and put a fire in my butt to not give up and continue pursuing this career. Thank you!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:32 PM - 21 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407043780813938693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407043780813938693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407043780813938693" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFr3KO46--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1151698346546827266/B8KXJG49_normal.jpg" alt="Kelsi Flatland (she/her) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kelsi Flatland (she/her)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @msflatland
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      In particular, I appreciated &lt;a href="https://twitter.com/aritdeveloper"&gt;@aritdeveloper&lt;/a&gt; 's talk and advice on getting started in open source projects. Her specific suggestions for your first contribution are super helpful, such as documenting your local setup and then updating the installation docs for clarity!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:01 PM - 10 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1403064905771614208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1403064905771614208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1403064905771614208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h3&gt;
  &lt;a href="#its-a-wrap"&gt;
  &lt;/a&gt;
  It's A Wrap!
&lt;/h3&gt;

&lt;p&gt;Whew! We wrapped Cycle 2 of my nonprofit &lt;a href="https://ourtimefortech.org"&gt;Our Time For Tech&lt;/a&gt; up at the end of May. I am so proud of our 7 fellows and their accomplishments!&lt;/p&gt;

&lt;p&gt;Our CodeCollab fellows completed the MVP of their ShiftWork app, and &lt;a href="https://us02web.zoom.us/rec/share/2iQMA6qbRTKoXz25phHeiXYOlq30OpVYAVSnquhBR4V_GC2ryUdkSNEOVIEpg1xq.S2rtluXeMkBwfpMS"&gt;demoed it for the tech community&lt;/a&gt; (password: XJE*PnA9).&lt;/p&gt;

&lt;p&gt;Our BetterPrep fellows landed their first-ever dev jobs 🎉 or built skills and fortitude to better weather their job searches.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#im-currently-retroing-the-cycle-2-experience-and-using-what-i-learn-to-plan-for-2022-if-you-know-anyone-that-may-be-interested-in-what-we-offer-invite-them-to-join-the-arit-developer-newsletter-so-they-can-stay-updated-on-future-programs"&gt;
  &lt;/a&gt;
  I’m currently retro-ing the Cycle 2 experience and using what I learn to plan for 2022. If you know anyone that may be interested in what we offer, invite them to join the Arit Developer newsletter so they can stay updated on future programs.
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To enjoy content like this in your inbox, subscribe to the &lt;strong&gt;Arit Developer&lt;/strong&gt; newsletter &lt;a href="https://news.arit.dev"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>career</category>
    </item>
    <item>
      <title>Next.js Portfolio Template</title>
      <author>Lasha Kakabadze</author>
      <pubDate>Tue, 02 Nov 2021 23:29:59 +0000</pubDate>
      <link>https://dev.to/adrinlol/nextjs-portfolio-template-gde</link>
      <guid>https://dev.to/adrinlol/nextjs-portfolio-template-gde</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you're a developer, it's important for you to have a personal portfolio website – especially when you're applying for jobs.&lt;/p&gt;

&lt;p&gt;After a few months of development, I have finally put together a multi-themed website that will greatly increase your chances of getting attention from recruiters.&lt;/p&gt;

&lt;p&gt;Here is a link to my portfolio - &lt;a href="https://www.adrinlol.com/"&gt;https://www.adrinlol.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can download the source code by going here - &lt;a href="https://adrinlol.gumroad.com/l/cHsGL"&gt;https://adrinlol.gumroad.com/l/cHsGL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will find a detailed documentation inside the &lt;code&gt;README&lt;/code&gt; fille on how to setup, make changes and run this website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-the-project"&gt;
  &lt;/a&gt;
  About the project
&lt;/h2&gt;

&lt;p&gt;This template has several API calls, that is handled by the SWR (stale-while-revalidate), the list includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developers.medium.com/"&gt;Medium's API&lt;/a&gt; to display my personal articles in this project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.spotify.com/"&gt;Spotify's API&lt;/a&gt; to show the current track as well as display my top 20 songs of the week. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.github.com/en/rest"&gt;GitHub's API&lt;/a&gt; to highlight most popular of my open-source projects.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#technology-stack"&gt;
  &lt;/a&gt;
  Technology stack
&lt;/h2&gt;

&lt;p&gt;As for the technologies, here is a full list of libraries I'm using for this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Next.js&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;styled-components&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;swr&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;react-transition-group&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lighthouse-results"&gt;
  &lt;/a&gt;
  Lighthouse results
&lt;/h2&gt;

&lt;p&gt;It should come with no surprise that Next.js coupled with SWR is blazing fast, and the results are no surprise.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S996BjVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nc6yr60wfdcyyawmdg2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S996BjVf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nc6yr60wfdcyyawmdg2.PNG" alt="Image description" width="880" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Layer 1 vs. Layer 2</title>
      <author>Waylon Jepsen</author>
      <pubDate>Tue, 02 Nov 2021 23:01:25 +0000</pubDate>
      <link>https://dev.to/0xjepsen/layer-1-vs-layer-2-15kf</link>
      <guid>https://dev.to/0xjepsen/layer-1-vs-layer-2-15kf</guid>
      <description>&lt;p&gt;If you are learning about web3, the chances are that you have heard different projects referred to as being a layer-one project or a layer-two project. Hearing these terms without any prior knowledge or context can be confusing. In this post, I'll explain the differences between layer one and layer two networks and provide examples of both.&lt;/p&gt;

&lt;p&gt;Disclaimer: This is just a brief overview of the mentioned topics and is in no way a complete piece of work on the topic. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layer-1"&gt;
  &lt;/a&gt;
  Layer 1
&lt;/h2&gt;

&lt;p&gt;A layer one network is a network that acts as infrastructure for other projects to build on top of. A public decentralized layer one network's primary characteristic is its consensus mechanism. Different consensus mechanisms provide different levels of speed, security, and throughput. Some examples of layer one networks and their consensus mechanisms are given below. Two common categories of consensus mechanisms are proof of work (PoW) and proof of stake (PoS). Note that these are just two categories and that there are many unique PoS consensus mechanisms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bitcoin.org/en/"&gt;Bitcoin&lt;/a&gt; - Consensus: Proof of work, Native Token: BTC &lt;br&gt;
&lt;a href="https://ethereum.org/en/"&gt;Ethereum&lt;/a&gt; - Consensus: Proof of work (moving to proof of stake in Eth2), Native Token: Eth &lt;br&gt;
&lt;a href="https://www.algorand.com/"&gt;Algorand&lt;/a&gt; - Consensus: Proof of Stake, Native Token: Alg&lt;br&gt;
&lt;a href="https://hedera.com/"&gt;Hedera&lt;/a&gt; - Consensus: Proof of Stake, Native Token: hbar &lt;br&gt;
&lt;a href="https://cardano.org/"&gt;Cardano&lt;/a&gt; - Consensus: Proof of Stake, Native Token: Ada &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qualities-of-layer-one-networks"&gt;
  &lt;/a&gt;
  Qualities of Layer one networks
&lt;/h3&gt;

&lt;p&gt;All layer one networks have a native token that serves as network fuel within the network. You use a network's native token to pay for network services like transactions, file services, and smart contract services. Note that not all layer one networks support the same array of services, although all support transactions. When comparing layer one networks, it is essential to learn about its consensus mechanism and the pros and or con's that it provides the network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#layer-two"&gt;
  &lt;/a&gt;
  Layer Two
&lt;/h2&gt;

&lt;p&gt;Layer 2 networks extend the functionality of their layer 1 counterpart. This can be to increase the layer 1 network’s performance, reduce transaction fees, or increase programmability. For example, on Ethereum, where gas fees can be highly variable and transaction times slow, it is increasingly common for application developers to provide its user the ability to interact with a layer 2 network, like Polygon, to decrease their user’s fees and transaction latency. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qualities-of-layer-two-networks"&gt;
  &lt;/a&gt;
  Qualities of Layer Two Networks
&lt;/h3&gt;

&lt;p&gt;Similar to how Layer 1 networks have different approaches to consensus, each layer 2 network will implement a scaling solution, or means to map transactions back to its layer 1.  For instance, a commonly discussed layer 2 scaling solution is the implementation of zero-knowledge rollups. The idea is that a side-chain performs transaction ordering and processing and submits mathematical proof that they have processed the transactions fairly. Some examples of layer two scaling solutions are the &lt;a href="https://lightning.network/"&gt;Lightning Network&lt;/a&gt;, &lt;a href="https://polygon.technology/"&gt;Polygon&lt;/a&gt;, and &lt;a href="https://starkware.co/product/starknet/"&gt;Starknet&lt;/a&gt;. The majority of scaling layer two solutions depend on cryptographic systems. For resources on the cryptography behind zero knowledge proofs I recommend this &lt;a href="https://www.di.ens.fr/~nitulesc/files/Survey-SNARKs.pdfhttps://www.di.ens.fr/~nitulesc/files/Survey-SNARKs.pdf"&gt;resource&lt;/a&gt;. The watered down version of what is happening, is that a mathematical proof is created by a verifier that some knowledge is correct. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://lightning.network/"&gt;Lightning Network&lt;/a&gt; - &lt;a href="https://lightning.network/lightning-network-technical-summary.pdf"&gt;2-party multi-signature channels&lt;/a&gt;&lt;br&gt;
&lt;a href="https://starkware.co/product/starknet/"&gt;Starknet&lt;/a&gt; - &lt;a href="https://www.di.ens.fr/~nitulesc/files/Survey-SNARKs.pdf"&gt;Zero Knowledge Rollups&lt;/a&gt;&lt;br&gt;
&lt;a href="https://polygon.technology/"&gt;Polygon&lt;/a&gt; - Side Chains &lt;a href="https://docs.ethhub.io/ethereum-roadmap/layer-2-scaling/optimistic_rollups/"&gt;Optimistic Rollups&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note that only layer one 1 with scaling limitations needs scaling solutions. Networks like Algorand and Hedera with high native speeds for scale don't need to scale with layer-2s because they scale at the network layer.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>distributedsystems</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>How to create an Elementor Parallax effect?</title>
      <author>CodeWatchers</author>
      <pubDate>Tue, 02 Nov 2021 23:01:22 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/how-to-create-an-elementor-parallax-effect-3men</link>
      <guid>https://dev.to/codewatchers_en/how-to-create-an-elementor-parallax-effect-3men</guid>
      <description>&lt;p&gt;Nowadays, there are numerous excellent web sites out on the net with awful optical phenomenon scrolling animations wherever the background moves quicker than the foreground parts to convey the depth. From construction firms and promoting agencies, everybody uses this facility to form portfolios and acquire a lot of public attention.&lt;/p&gt;

&lt;p&gt;The parallax impact is beyond any doubt spectacular, and it can really make your website stand out from the gang and lend it a knowledgeable look. And you'll be able to add a parallax effect to your WordPress website using &lt;a href="https://codewatchers.com/en/blog/is-elementor-the-best-free-page-builder-for-wordpress"&gt;Elementor&lt;/a&gt; while not having plenty of professional knowledge?&lt;/p&gt;

&lt;p&gt;Parallax is genuinely an integral feature in Elementor Pro, you can create a parallax effect in the premium version of Elementor, and we will talk about it today. Also, you can create beautiful pages with this feature on the free version of Elementor.&lt;/p&gt;

&lt;p&gt;The parallax privileges are that it looks really cool, and it can also help with user betrothal! If you have the opportunity to do an A/B test, checking if adding a primary parallax effect on your webpage can decrease your bounce rate and boost average time on the page - worth it. The strategic use of parallax is proven to direct visitors right to your call to action. The parallax effect's motion draws the eye, which means a carefully placed button or form can boost your overall conversion rate.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#parallax-effect-on-an-element" class="anchor"&gt;
  &lt;/a&gt;
  Parallax Effect on an Element
&lt;/h3&gt;

&lt;p&gt;Design parallax effects on your webpage has never been more manageable. There's no demand for specialized WordPress themes that compatible with parallax. By Elementor, you can create any kind of effect only by drag and drop webpage builder.&lt;/p&gt;

&lt;p&gt;Decorating your online shop or designing engaging blog layouts, or creating excellent landing pages - Elementor got your back.&lt;/p&gt;

&lt;p&gt;Just follow the steps in this article and start creating your brand new parallax website.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#a-page-with-parallax-in-elementor-pro" class="anchor"&gt;
  &lt;/a&gt;
  A Page With Parallax in Elementor Pro
&lt;/h3&gt;

&lt;p&gt;So let's work on bringing parallax effects to our web pages. First, select "Elementor Full Width" and switch to the Advanced tab. Of course, there must be a few sections on your page because the parallax effect's beauty cannot be felt on a blank page. We have a placeholder section, and you can use any you need.&lt;/p&gt;

&lt;p&gt;To set the effect, go to Advanced &amp;gt; Motion Effects, and turn Scrolling Effects on. Below, you'll see several options for stimulating motion effects that depend on scrolling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TtmBQX6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2020/12/A-Page-With-Parallax-in-Elementor-Pro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TtmBQX6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2020/12/A-Page-With-Parallax-in-Elementor-Pro.png" alt="" width="374" height="1024"&gt;&lt;/a&gt;#### Vertical&lt;/p&gt;

&lt;p&gt;For instance, I'm creating the second section helix at a different speed than the hero compartment. Remember, you have additional settings that you can work on that are applicable for any scrolling effect. In vertical scrolling, you can choose for the Element to place up or down, change the rate visible, and make the impact relative to the viewport or the entire page.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#horizontal" class="anchor"&gt;
  &lt;/a&gt;
  Horizontal
&lt;/h4&gt;

&lt;p&gt;Like we did with vertical scrolling, we can move an image or section horizontally through the display. Your choices here are left or right, speed, and percent visible from the bottom and top.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#transparency" class="anchor"&gt;
  &lt;/a&gt;
  Transparency
&lt;/h4&gt;

&lt;p&gt;You can get a charming fade look using the transparency motion effect. There's also an opening animation right under this area that performs the same thing. Still, the transparency motion impact offers you tons of management over, however, and once it appears. For this option, you'll be able to decide if you wish it to fade in, change state, fade out so in, or fade in and then out. You'll be able to additionally set the full transparency level from one to 10.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#blur" class="anchor"&gt;
  &lt;/a&gt;
  Blur
&lt;/h4&gt;

&lt;p&gt;The Blur motion effect permits you to possess pictures that start indistinct and are available into focus sort of a depth of field shot, begin within the direction and begin to blur as you scroll past it. This looks very cool. Like with transparency effect, blur lets you choose options like fade in or out with different styles.&lt;/p&gt;

&lt;p&gt;These are the immediate effects you'll be looking at. Still, there's plenty more to consider, such as rotation and scale animations, plus many style options, mouse effects, and other impressive effects that will help your website elements pop!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#step-1-add-parallax-on-a-chosen-element" class="anchor"&gt;
  &lt;/a&gt;
  Step 1: Add parallax on a chosen Element
&lt;/h4&gt;

&lt;p&gt;To add some magical parallax effect to your Elementor website, the first thing you need to do is pick an element you want to add it to. This could be anything, such as pictures, text, video, etc.&lt;/p&gt;

&lt;p&gt;Let's start by clicking on the widget and moving to the advanced tab section.&lt;/p&gt;

&lt;p&gt;#### Step 2: Under Motion and Switch to Scrolling Effects&lt;/p&gt;

&lt;p&gt;Once you are on the advanced tab, click the Motion Effect dropdown and then set Scrolling Effects to On. Currently, you'll be able to opt for any of the half-dozen animations that may bring your website to life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w1jBUWza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2020/12/Under-Motion-Effect-Switch-to-Scrolling-Effect.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1jBUWza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codewatchers.com/secure/wp-content/uploads/2020/12/Under-Motion-Effect-Switch-to-Scrolling-Effect.png" alt="" width="602" height="680"&gt;&lt;/a&gt;#### Step 3: change the Animation in step with Your Needs.&lt;/p&gt;

&lt;p&gt;You can change and tweak each impact to induce it just right. Press the pencil icon, then a window will open up with controls.&lt;/p&gt;

&lt;p&gt;You can adjust things like the direction, speed, and viewport for {every} effect, which controls once the Animation begins and ends.&lt;/p&gt;

&lt;p&gt;Besides, you can outline on the Viewport scale what a part of the scroll your effect will start and what role it'll end.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/how-to-create-an-elementor-parallax-effect?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>End-to-end machine learning lifecycle</title>
      <author>Mage</author>
      <pubDate>Tue, 02 Nov 2021 22:46:28 +0000</pubDate>
      <link>https://dev.to/mage_ai/end-to-end-machine-learning-lifecycle-1p0i</link>
      <guid>https://dev.to/mage_ai/end-to-end-machine-learning-lifecycle-1p0i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;A machine learning (ML) project requires collaboration across multiple roles in a business. We’ll introduce the high level steps of what the end-to-end ML lifecycle looks like and how different roles can collaborate to complete the ML project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Introduction&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define problem&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Collect data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Train, evaluate, and improve model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deploy and integrate model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitor model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conclusion&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Machine learning is a powerful tool to help solve different problems in your business. The article &lt;a href="https://www.mage.ai/blog/building-your-first-machine-learning-model"&gt;“Building your first machine learning model”&lt;/a&gt; gives you basic ideas of what it takes to build a machine learning model. In this article, we’ll talk about what the end-to-end machine learning project lifecycle looks like in a real business. The chart below shows the high level steps from project initiation to completion. Completing a ML project requires collaboration across multiple roles, including product manager, product developer, data scientist, and MLOps engineer. Failing to accurately execute on any one of these steps will result in misleading insights or models with no practical value.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZ0Jz-87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej3a5lfvlqasmyyl6anj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZ0Jz-87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ej3a5lfvlqasmyyl6anj.png" alt="Image description" width="574" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#define-problem"&gt;
  &lt;/a&gt;
  Define problem
&lt;/h2&gt;

&lt;p&gt;When talking about machine learning, people usually have high expectations on what it can achieve. Before starting a machine learning project, the product team should collaborate to come up with the problem definition. Here are some questions that should be clarified at this step:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-problem"&gt;
  &lt;/a&gt;
  What’s the problem?
&lt;/h3&gt;

&lt;p&gt;Machine learning can be used to solve various problems (e.g. reduce manual work, rank products, etc). Before starting the project, we need to clearly define the problem and expected outcome. We should think about whether this is a valuable problem to solve and estimate how much value machine learning can bring.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-should-we-measure-the-success-of-the-model"&gt;
  &lt;/a&gt;
  How should we measure the success of the model?
&lt;/h3&gt;

&lt;p&gt;There are different objectives when using machine learning. We should be clear how to measure the success of the model based on different objectives. If we want to use a machine learning model to reduce manual work, we should measure whether the model can give results as well as a human does. If we want to use machine learning to rank products on a website, we can measure whether we get a higher &lt;a href="https://en.wikipedia.org/wiki/Click-through_rate"&gt;click-through rate&lt;/a&gt; after using the model to rank the products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-we-have-enough-data-to-build-the-model"&gt;
  &lt;/a&gt;
  Do we have enough data to build the model?
&lt;/h3&gt;

&lt;p&gt;Now that we have the idea, we need to think about one practical thing: do we have the data? The machine learning model learns from the past data and predicts for the new data. If you don’t have enough data, machine learning won’t be a good choice for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#collect-data"&gt;
  &lt;/a&gt;
  Collect data
&lt;/h2&gt;

&lt;p&gt;No matter what model we want to build, we first need to collect two types of data. The first type of data contains the labels (the target variable we want to predict) or can be used to create the labels. The second type of data can be used to generate features that’ll affect the model predictions. For example, if we want to build a model to predict whether a user will churn. We at least need to get a table which contains data indicating whether the user has churned. In addition, we also want to collect user events to generate more features which can contribute to the model predictions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product developers&lt;/strong&gt; are usually responsible for collecting the data after getting data requirements from data scientists. If you have a good habit of logging the events, then you’ll be relieved when building machine learning models. If you don’t have good logging in your product, start doing it. This data will help you understand your product better even if you don’t have immediate needs for machine learning models. Next, the work can be handed over to &lt;strong&gt;data scientists&lt;/strong&gt; to prepare the data and train the model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prepare-data"&gt;
  &lt;/a&gt;
  Prepare data
&lt;/h2&gt;

&lt;p&gt;Data preparation is one of the most complex steps in the machine learning lifecycle, which is also called “Feature Engineering”. If you don’t have data processing experience and want to learn it, this &lt;a href="https://www.mage.ai/blog/tags/development"&gt;Developer Education&lt;/a&gt; series will be a good resource for you.&lt;/p&gt;

&lt;p&gt;Here are the basic steps of feature engineering:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-labels"&gt;
  &lt;/a&gt;
  Create labels
&lt;/h3&gt;

&lt;p&gt;In machine learning, “label” is the target variable you want to predict with the model. To prepare the data for model training, we need to identify whether we have a label column in our dataset. If there’s no explicit label column in our datasets, we need to create labels first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-features"&gt;
  &lt;/a&gt;
  Create features
&lt;/h3&gt;

&lt;p&gt;Machine learning algorithms learn from the features. Here are some ways to create features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Expand the existing features. For example, you can expand your date feature to “year”, “month”, “day”, and “days since holiday” features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Aggregate the events feature. One example is to count the number of user events over the past 7 days, 30 days, or 90 days. Another example is to count the number of page view events from Google and Facebook respectively.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#impute-encode-and-scale"&gt;
  &lt;/a&gt;
  Impute, encode and scale
&lt;/h3&gt;

&lt;p&gt;After creating labels and features, we need to get our data ready for machine learning algorithms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Impute: The real-world datasets usually have missing values. Machine learning algorithms don’t handle missing values well. Thus, we need to fill in the missing value with data inferred from existing data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encode: Machine learning algorithms require data to be numbers. Thus, we need to convert the text features to numbers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scale: Numbers with larger ranges will have a higher impact on the model output. We need to adjust the values of number columns to fall within similar ranges so that large numbers (such as seconds since epoch) don’t affect the prediction disproportionately as much as smaller values (such as age).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#train-evaluate-and-improve-model"&gt;
  &lt;/a&gt;
  Train, evaluate, and improve model
&lt;/h2&gt;

&lt;p&gt;After data is prepared, we split the dataset into a training set and a test set, select an algorithm, and then start training the model with the training set. We briefly introduced some machine learning algorithms in the &lt;a href="https://m.mage.ai/roadmap-to-ai-ml-sorcerer-supreme-2fc4bdbe89bf"&gt;Fundamentals of being an AI/ML sorcerer supreme&lt;/a&gt; article. We’ll discuss different algorithms in detail in a future blog article.&lt;/p&gt;

&lt;p&gt;After model training completes, we need to evaluate the model’s performance with the test set. We use &lt;a href="https://www.mage.ai/blog/definitive-guide-to-accuracy-precision-recall-for-product-developers"&gt;Precision and Recall&lt;/a&gt; to evaluate a classification model’s performance, and use &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-ml-regression-model-metrics"&gt;Mean Absolute Error and Root Mean Squared Error&lt;/a&gt; to evaluate a regression model’s performance.&lt;/p&gt;

&lt;p&gt;The article &lt;a href="https://www.mage.ai/blog/how-to-improve-the-performance-of-a-machine-learning-(ML)-model"&gt;“How to improve the performance of a machine learning (ML) model”&lt;/a&gt; introduced the strategies for improving models, including comparing multiple algorithms, hyperparameter tuning, and more feature engineering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-and-integrate-model"&gt;
  &lt;/a&gt;
  Deploy and integrate model
&lt;/h2&gt;

&lt;p&gt;Once you’re done with the model training and are satisfied with the model performance, the &lt;strong&gt;data scientist&lt;/strong&gt; can now hand over the model to the &lt;strong&gt;MLOps engineer&lt;/strong&gt; to deploy the model to production. Then the &lt;strong&gt;product developer&lt;/strong&gt; will integrate the model into the product.&lt;/p&gt;

&lt;p&gt;There are generally two ways to integrate models and make predictions: online predictions and offline batch predictions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#online-prediction"&gt;
  &lt;/a&gt;
  Online prediction
&lt;/h3&gt;

&lt;p&gt;For online prediction, we can deploy the model to an online web service and make API calls to the online service to get predictions. This is useful when we need to get real-time predictions, e.g. realtime product ranking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#offline-batch-prediction"&gt;
  &lt;/a&gt;
  Offline batch prediction
&lt;/h3&gt;

&lt;p&gt;For other models, we don’t necessarily need to get real-time predictions. We can use an offline batch prediction job to get predictions for a large amount of data points on a regular basis. These predictions are then stored in a database and can be made available to developers or end users. For example, for the demand forecast model, we can estimate the demand for products on a daily basis for upcoming one year with an offline batch prediction job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experimentation"&gt;
  &lt;/a&gt;
  Experimentation
&lt;/h3&gt;

&lt;p&gt;After integrating the model into production, you can run an experiment to evaluate the model performance with real production traffic. For example, if you build a ranking model for your e-commerce website. You can split the website traffic into 50/50. Half of the users will see the products in the original order (control group). Another half of the users will see products in the ranked order determined by the ranking model (treatment group). We can compare the target metrics (e.g. click-through rate) between the users in the control and the treatment groups.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monitor-model"&gt;
  &lt;/a&gt;
  Monitor model
&lt;/h2&gt;

&lt;p&gt;Congratulations! With the team’s hard work, your model is finally live! You evaluated the model via experimentation and got the expected outcome. Is this everything you need to do for the model? The answer is no. Model performance can degrade over time. It’s important to set up a good monitoring system to make sure the model works correctly in production over time.&lt;/p&gt;

&lt;p&gt;Multiple things could go wrong in production. One of the most common issues is data drift, which means the distribution of the target variable or the input data changes over time. The model- monitoring system should monitor the model performance with production data, detect the data drift issue, and provide feedback for further model improvement (e.g. model retrain). Stay tuned for a future article about model monitoring.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The whole machine learning lifecycle is a lengthy process, which requires expertise across multiple roles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The product team defines the problem.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The product developer collects the data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The data scientist prepares the data and trains the model.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The MLOps engineer deploys the model into production.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The product developer integrates the model into the product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The MLOps engineer sets up the model monitoring system.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you wonder whether there’s a way to simplify the process, &lt;a href="https://www.mage.ai/"&gt;Mage&lt;/a&gt; helps handle all the work from “prepare data” to “monitor model”. Mage also provides suggestions on what type of problems you can solve with ML and what data is needed.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>lifecycle</category>
      <category>ai</category>
    </item>
    <item>
      <title>GitHub Actions autenticando na AWS via OIDC</title>
      <author>Mateus Miranda</author>
      <pubDate>Tue, 02 Nov 2021 22:41:14 +0000</pubDate>
      <link>https://dev.to/mmiranda/github-actions-autenticando-na-aws-via-oidc-2cf</link>
      <guid>https://dev.to/mmiranda/github-actions-autenticando-na-aws-via-oidc-2cf</guid>
      <description>&lt;p&gt;O GitHub recentemente lançou uma funcionalidade para fazer autenticação via OIDC na AWS de dentro dos &lt;em&gt;workflows&lt;/em&gt;, dando a oportunidade de se livrar de uma vez por todas do gerenciamento de um usuário específico para isso.&lt;/p&gt;

&lt;p&gt;Basicamente, a autenticação agora ocorre via OIDC e a única coisa que você precisa para isso é informar qual a &lt;em&gt;role&lt;/em&gt; vai ser utilizada.&lt;/p&gt;

&lt;p&gt;Neste artigo, iremos realizar toda a configuração necessária na AWS via Terraform, e claro, ver como isso funciona.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terraform"&gt;
  &lt;/a&gt;
  Terraform
&lt;/h2&gt;

&lt;p&gt;A configuração via Terraform é relativamente simples e não exige muito conhecimento avançado. &lt;/p&gt;

&lt;p&gt;Vamos começar criando o nosso oidc provider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_openid_connect_provider"&lt;/span&gt; &lt;span class="s2"&gt;"github"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;url&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://token.actions.githubusercontent.com"&lt;/span&gt;
  &lt;span class="nx"&gt;client_id_list&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sts.amazonaws.com"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;thumbprint_list&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"a031c46782e6e6c662c2c87c76da9aa62ccabd8e"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tanto a informação de &lt;em&gt;url&lt;/em&gt; quanto &lt;em&gt;client_id_list&lt;/em&gt; são fornecidas pelo GitHub na própria documentação deles, que você pode ler &lt;a href="https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services"&gt;aqui&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Já o &lt;em&gt;thumbprint_list&lt;/em&gt; foi mais chato de entender pois ele é gerado baseado na chave ssl do certificado da configuração do openid do GitHub. O que importa aqui é: esse valor é baseado na url, então ele é estático e você pode apenas copiar e colar sem medo.&lt;/p&gt;

&lt;p&gt;Mas caso você queira ir fundo nesse tópico, leia um pouco &lt;a href="https://docs.aws.amazon.com/pt_br/IAM/latest/UserGuide/id_roles_providers_create_oidc_verify-thumbprint.html"&gt;Como Obter a impressão digital da CA raiz para um provedor de identidade OpenID Connect&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O próximo passo é criar o nosso policy document, dando permissão para os repositórios fazerem &lt;em&gt;assume role&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_policy_document"&lt;/span&gt; &lt;span class="s2"&gt;"github_actions_assume_role"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;actions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sts:AssumeRoleWithWebIdentity"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;principals&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;type&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Federated"&lt;/span&gt;
      &lt;span class="nx"&gt;identifiers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aws_iam_openid_connect_provider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;test&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"StringEquals"&lt;/span&gt;
      &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"token.actions.githubusercontent.com:aud"&lt;/span&gt;
      &lt;span class="nx"&gt;values&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sts.amazonaws.com"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;test&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"StringLike"&lt;/span&gt;
      &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;
      &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"repo:org1/*:*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"repo:org2/*:*"&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No exemplo acima, qualquer repositório da org1 ou org2 terão permissão &lt;em&gt;sts:AssumeRoleWithWebIdentity&lt;/em&gt; e consequentemente, assumir a nossa role que vamos criar.&lt;/p&gt;

&lt;p&gt;É possível restringir essa permissão para alguns repositórios (e até mesmo branches específicos), para isso basta alterar a sua &lt;em&gt;condition&lt;/em&gt; para:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;    &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;test&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"StringLike"&lt;/span&gt;
      &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"token.actions.githubusercontent.com:sub"&lt;/span&gt;
      &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s2"&gt;"repo:org/meu-repositorio:*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Outro ponto importante a ser notado, é que o valor de &lt;code&gt;token.actions.githubusercontent.com:aud&lt;/code&gt; foi colocado como &lt;code&gt;sts.amazonaws.com&lt;/code&gt; e não como &lt;code&gt;https://github.com/org&lt;/code&gt; como específicado na &lt;a href="https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services"&gt;documentação&lt;/a&gt;. do GitHub.&lt;/p&gt;

&lt;p&gt;Seguindo no nosso tutorial, agora precisamos criar a nossa role de fato e associá-la ao documento previamente criado:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_role"&lt;/span&gt; &lt;span class="s2"&gt;"github_actions"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;               &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"github-actions"&lt;/span&gt;
  &lt;span class="nx"&gt;assume_role_policy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_iam_policy_document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github_actions_assume_role&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora precisamos criar um outro documento de &lt;em&gt;policy&lt;/em&gt;, dessa vez com as permissões que a nossa role terá. &lt;/p&gt;

&lt;p&gt;Neste caso, iremos ter permissão para realizar algumas operações no nosso ECR, respeitando a única regra de que esse repositório tenha uma &lt;em&gt;tag&lt;/em&gt; &lt;code&gt;permit-github-action=true&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_policy_document"&lt;/span&gt; &lt;span class="s2"&gt;"github_actions"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;actions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:BatchGetImage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:BatchCheckLayerAvailability"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:CompleteLayerUpload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:GetDownloadUrlForLayer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:InitiateLayerUpload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:PutImage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"ecr:UploadLayerPart"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;resources&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;test&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"StringEquals"&lt;/span&gt;
      &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aws:ResourceTag/permit-github-action"&lt;/span&gt;

      &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reparem que no nosso exemplo estamos utilizando apenas ECR, mas nada impede que você conceda permissão para outros serviços dentro da AWS: S3, SQS, etc.&lt;/p&gt;

&lt;p&gt;E por fim, precisamos criar a nossa &lt;em&gt;policy&lt;/em&gt; baseada no documento que criamos e depois anexar ela à nossa role:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_policy"&lt;/span&gt; &lt;span class="s2"&gt;"github_actions"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"github-actions"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Grant Github Actions the ability to push to ECR"&lt;/span&gt;
  &lt;span class="nx"&gt;policy&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;aws_iam_policy_document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_iam_role_policy_attachment"&lt;/span&gt; &lt;span class="s2"&gt;"github_actions"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;role&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_iam_role&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
  &lt;span class="nx"&gt;policy_arn&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_iam_policy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;github_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para finalizar o nosso exemplo, vamos criar um repositório e colocar uma &lt;em&gt;tag&lt;/em&gt; nele:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_ecr_repository"&lt;/span&gt; &lt;span class="s2"&gt;"repo"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"meu/repositorio"&lt;/span&gt;
  &lt;span class="nx"&gt;image_tag_mutability&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"IMMUTABLE"&lt;/span&gt;

  &lt;span class="nx"&gt;image_scanning_configuration&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;scan_on_push&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"permit-github-action"&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#github-actions"&gt;
  &lt;/a&gt;
  Github Actions
&lt;/h2&gt;

&lt;p&gt;Basicamente, a configuração do lado do Github Actions é bem simples e não demanda muita mudança se você já está usando via &lt;em&gt;access key&lt;/em&gt; e &lt;em&gt;secret key&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A primeira coisa que você precisa configurar, segundo a própria documentação do GitHub são as permissões:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;id-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;
      &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;read&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E depois, na actions para configurar as credenciais, informar qual a role vai ser utilizada (a que criamos anteriormente via terraform)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Configure AWS credentials&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/configure-aws-credentials@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;role-to-assume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arn:aws:iam::XXXXXXXXXXXX:role/github-actions&lt;/span&gt;
          &lt;span class="na"&gt;aws-region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eu-west-1&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to Amazon ECR&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;login-ecr&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/amazon-ecr-login@v1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aqui você pode ver o conteúdo final do arquivo YAML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Continuous Delivery&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build-and-push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;id-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;write&lt;/span&gt;
      &lt;span class="na"&gt;contents&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;read&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Configure AWS credentials&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/configure-aws-credentials@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;role-to-assume&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;arn:aws:iam::XXXXXXXXXXXX:role/github-actions&lt;/span&gt;
          &lt;span class="na"&gt;aws-region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;eu-west-1&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Login to Amazon ECR&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;login-ecr&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;aws-actions/amazon-ecr-login@v1&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build, tag, and push image to Amazon ECR&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;ECR_REGISTRY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ steps.login-ecr.outputs.registry }}&lt;/span&gt;
          &lt;span class="na"&gt;ECR_REPOSITORY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;meu/repositorio&lt;/span&gt;
          &lt;span class="na"&gt;IMAGE_TAG&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.sha }}&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .&lt;/span&gt;
          &lt;span class="s"&gt;docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Espero que tenham curtido! :)&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>oidc</category>
      <category>ecr</category>
      <category>github</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 02 Nov 2021 22:01:20 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-35fb</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-35fb</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-all-in-the-documentation"&gt;
  &lt;/a&gt;
  It's all in the documentation
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/sgoulas"&gt;@sgoulas&lt;/a&gt;
 built an e-commerce site and kept a detailed development diary over the span of 5 months. Super fascinating and helpful!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sgoulas" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BhUGwn9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---NxA8wsi--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/417615/142b6299-2605-443a-8bb7-a0bb4f6b4839.jpeg" alt="sgoulas"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sgoulas/i-created-an-e-commerce-site-from-scratch-and-kept-a-development-diary-over-the-cource-of-5-months-12mm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I created an e-commerce site from scratch and kept a development diary over the cource of 5 months&lt;/h2&gt;
      &lt;h3&gt;sgoulas ・ Oct 31 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nextjs&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#class-is-in-session"&gt;
  &lt;/a&gt;
  Class is in session
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/mustapha"&gt;@mustapha&lt;/a&gt;
 covers the tools we can use to create classes, how to create objects using classes, and lots more! A solid guide to ES6 classes ⭐️ &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mustapha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TjMto4tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Bz3nRw5I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/174804/95610498-02ee-4f3f-846b-b85ccb539f0a.jpg" alt="mustapha"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mustapha/a-deep-dive-into-es6-classes-2h52" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A deep dive into ES6 Classes&lt;/h2&gt;
      &lt;h3&gt;Mustapha Aouas ・ Oct 26 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#take-care-of-your-own-system"&gt;
  &lt;/a&gt;
  Take care of your own system
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/abdullah_alhariri"&gt;@abdullah_alhariri&lt;/a&gt;
 has some sound advice if you're working on leading a more balanced and impactful developer. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/abdullah_alhariri" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXDuqv0O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PC9874-V--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626291/1313c18a-9fc7-4652-9045-f3256df24c37.jpg" alt="abdullah_alhariri"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abdullah_alhariri/secrets-about-highly-effective-programmers-46ld" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The Secrets behind highly effective programmers&lt;/h2&gt;
      &lt;h3&gt;Abdullah Alhariri ・ Oct 31 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#optimizing-your-linkedin-presence"&gt;
  &lt;/a&gt;
  Optimizing Your Linkedin presence
&lt;/h2&gt;

&lt;p&gt;Like it or not, Linkedin remains an incredibly helpful tool for landing jobs in nearly every field — including software development! If you need to improve the quality of your profile, &lt;a class="mentioned-user" href="https://dev.to/techieeliot"&gt;@techieeliot&lt;/a&gt;
 has some pointers.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/techieeliot" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aahF4KDf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--pT_kgzIe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/138604/7c7f1f48-b550-4c68-91dd-098d2d61cc14.jpg" alt="techieeliot"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/techieeliot/want-to-have-tech-recruiters-find-you-sixteen-important-things-to-remember-4jjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Want to have tech recruiters find you? Sixteen important things to remember
&lt;/h2&gt;
      &lt;h3&gt;Eliot Sanford ・ Oct 28 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#its-not-just-about-writing-code"&gt;
  &lt;/a&gt;
  "It's not just about writing code"
&lt;/h2&gt;

&lt;p&gt;... and other enlightening lessons about your first software development gig, via &lt;a class="mentioned-user" href="https://dev.to/sanspanic"&gt;@sanspanic&lt;/a&gt;
 &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sanspanic" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x0UREqsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AE3vrXc0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/569219/418b7e5f-ad9c-404c-9487-15c568e0b944.png" alt="sanspanic"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sanspanic/5-things-that-might-surprise-you-about-your-first-software-engineering-job-28mj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 Things That Might Surprise You About Your First Software Engineering Job&lt;/h2&gt;
      &lt;h3&gt;Sandra Spanik ・ Oct 28 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#blockchain-learning-by-doing"&gt;
  &lt;/a&gt;
  Blockchain: Learning by doing
&lt;/h2&gt;

&lt;p&gt;The community loved this article about creating blockchain in 60 lines of code by &lt;a class="mentioned-user" href="https://dev.to/freakcdev297"&gt;@freakcdev297&lt;/a&gt;
. Great job!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/freakcdev297" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8NfZCk6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RBN44Pfq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/605458/d78adfc7-1d97-4f09-b2ee-1aeef0f782f8.png" alt="freakcdev297"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/freakcdev297/creating-a-blockchain-in-60-lines-of-javascript-5fka" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating a blockchain in 60 lines of Javascript&lt;/h2&gt;
      &lt;h3&gt;Phu Minh ・ Oct 29 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#blockchain&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#hacktoberfest-lives-on"&gt;
  &lt;/a&gt;
  Hacktoberfest lives on
&lt;/h2&gt;

&lt;p&gt;Hacktoberfest might have ended, but the beauty of contributing to open source is that it's &lt;em&gt;always&lt;/em&gt; the right time to start. &lt;a class="mentioned-user" href="https://dev.to/adiatiayu"&gt;@adiatiayu&lt;/a&gt;
 has some great tips to get you up to speed. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/adiatiayu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sreh2pxW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--t0iR0TAe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/146156/9cf0069e-489f-4a60-9d8e-a49e84cb717b.jpeg" alt="adiatiayu"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/adiatiayu/contributing-to-open-source-101-2dnm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Contributing To Open-Source 101&lt;/h2&gt;
      &lt;h3&gt;Ayu Adiati ・ Oct 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Back to the Future: 🕸 Web3 🕸 </title>
      <author>Maria Antonella 🦋</author>
      <pubDate>Tue, 02 Nov 2021 21:42:53 +0000</pubDate>
      <link>https://dev.to/antoomartini/back-to-the-future-web3-1bi5</link>
      <guid>https://dev.to/antoomartini/back-to-the-future-web3-1bi5</guid>
      <description>&lt;p&gt;Days ago I wanted to start getting into the world of BlockChain and Web3. But to do so, I had to understand some concepts first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-to-know-where-we-are-going-we-must-know-where-we-came-from"&gt;
  &lt;/a&gt;
  ~ To know where we are going, we must know where we came from.
&lt;/h3&gt;

&lt;p&gt;The first thing to know: &lt;strong&gt;&lt;em&gt;The Internet we currently use we have no control of our data.&lt;/em&gt;&lt;/strong&gt; &lt;br&gt;
It is broken and vulnerable. Every time we interact on the Internet, copies of our data are sent to the server of every service provider we use (from Facebook to Instagram, Twitter and any kind of app).&lt;/p&gt;

&lt;p&gt;And every time this happens, we lose control of our data which raises issues of &lt;strong&gt;trust&lt;/strong&gt;. Where is our data? Who is using it? What for? &lt;/p&gt;

&lt;p&gt;And Web3 is here to revolutionize this. But to understand Web3, you have to know where it comes from. &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#back-to-the-future-%F0%9F%95%B8-web1-%F0%9F%95%B8"&gt;
  &lt;/a&gt;
  📝 Back to the Future: 🕸 Web1 🕸
&lt;/h2&gt;

&lt;p&gt;The birth of the WWW in the early 1990s increased the usability of the Internet. Tim Bernes Lee introduced a new standard that allowed to create visually "attractive" pages, with few lines of code, and to navigate the Internet through links, instead of using command line interfaces.&lt;/p&gt;

&lt;p&gt;Here, only content could be consumed. It's information that could be accessed for reading and consuming but without the possibility of interacting. Communication was unidirectional. It included browsers such as Internet Explorer, search engines such as Yahoo Answers and email providers.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#back-to-the-future-%F0%9F%95%B8-web2-%F0%9F%95%B8"&gt;
  &lt;/a&gt;
  📝 Back to the Future: 🕸 Web2 🕸
&lt;/h2&gt;

&lt;p&gt;Applications can be used to read and write simultaneously. There are producers and consumers of information. That is, communication is now bidirectional.&lt;/p&gt;

&lt;p&gt;This web is based on user communities and services that encourage collaboration and agile exchange of information between users of a community or social network, such as Facebook, Twitter and Instagram.&lt;/p&gt;

&lt;p&gt;It is dynamic, interactive, reading and writing, develops collective intelligence and favors collaborative work as was and is Wikipedia, platforms such as YouTube and e-commerce.&lt;br&gt;
But there is always an intermediary: a platform acting as a trusted intermediary between two people who do not know or trust each other.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;While Web2 was a Front-End revolution, Web3 is a Back-end revolution.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#back-to-the-future-%F0%9F%95%B8-web3-%F0%9F%95%B8"&gt;
  &lt;/a&gt;
  📝 Back to the Future: 🕸 Web3 🕸
&lt;/h2&gt;

&lt;p&gt;If we assume that the WWW revolutionized information and that Web2 revolutionized interactions, Web3 has the potential to revolutionize agreements and value exchange.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-frontend-remains-the-same-as-in-web2-but-the-data-structure-in-the-backend-changes"&gt;
  &lt;/a&gt;
  The Front-end remains the same as in Web2, but the data structure, in the Back-end, changes.
&lt;/h4&gt;

&lt;p&gt;In this context, a universal state layer is introduced, reinventing the way data is stored, managed by all nodes in the network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbsUTqDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q6r7ndeomldctkpw1ei.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbsUTqDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4q6r7ndeomldctkpw1ei.jpg" alt="Back to the future: Movie Scene" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This single state layer provides a layer for the Internet without the presence of intermediaries. This enables true &lt;strong&gt;&lt;em&gt;P2P&lt;/em&gt;&lt;/strong&gt; → transactions (in few words, a peer-to-peer network is a network of computers that function simultaneously as clients and servers with respect to the other nodes in the network allowing direct exchange of information between the interconnected computers).&lt;/p&gt;

&lt;p&gt;Agreements are executed with P2P connections with &lt;strong&gt;&lt;em&gt;smart contracts&lt;/em&gt;&lt;/strong&gt;. In this web, anyone can participate in the verification of transactions and be compensated for their contribution with a network token.&lt;/p&gt;

&lt;p&gt;The main structure of this Web3 is represented by a series of blockchain networks or distributed ledgers that are managed by a special application called &lt;strong&gt;&lt;em&gt;"wallet"&lt;/em&gt;&lt;/strong&gt; → (in few words, distributed ledgers is a type of database that is shared, replicated and synchronized between members of a decentralized network recording transactions, such as the exchange of assets or data, between network participants).&lt;/p&gt;

&lt;p&gt;The most important:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;💡 Tokens are to Web3 what websites were to Web1.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a lot of new concepts! But that is all for now. I'm going to share everything I'm learning :)&lt;/p&gt;

</description>
      <category>web3</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Empezando mi propio proyecto</title>
      <author>Julio Contreras</author>
      <pubDate>Tue, 02 Nov 2021 21:25:57 +0000</pubDate>
      <link>https://dev.to/julioacontreras/empezar-tu-propio-proyecto-53b9</link>
      <guid>https://dev.to/julioacontreras/empezar-tu-propio-proyecto-53b9</guid>
      <description>&lt;p&gt;Muchas veces tenemos buenas ideas y no la empezamos porque es muy ambicioso, o porque no tenemos dinero, contactos y principalmente por el miedo de fallar. &lt;/p&gt;

&lt;p&gt;Pues a hora pienso diferente, estoy en un momento de mi vida que veo el fallar como parte del proceso. Claro siempre intentando prever los problemas, pero sabiendo que por más que uno se prepare la tempestad vendrá mas tarde o temprano.&lt;/p&gt;

&lt;p&gt;Actualmente tengo tres ideas de proyecto, entonces pensé en crear una arquitectura que se pueda pivotar sin afectar otras cosas ya desarrolladas.&lt;/p&gt;

&lt;p&gt;Preguntas que me venían:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Como puedo construir un proyecto que se pueda reutilizar por diferentes proyectos?&lt;/strong&gt;&lt;br&gt;
R: Con micro servicios.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Como puedo construir un micro servicio separando la reglas de negocio con la tecnología?&lt;/strong&gt;&lt;br&gt;
R: Arquitectura DDD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Como puedo comunicar mis microservicio de forma rápida?&lt;/strong&gt;&lt;br&gt;
R: Protocolo gRPC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Y para informaciones que no tengo tanga urgencia, como gerencias grandes cuantidad de mensajes de forma distribuida?&lt;/strong&gt;&lt;br&gt;
R: RabbitMQ.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Como puedo multiplicar micro servicios si aumenta mi demanda?&lt;/strong&gt;&lt;br&gt;
R: Docker y Kubernetes.&lt;/p&gt;

&lt;p&gt;Después de pensar mucho, llegue a esta arquitectura, onde cada microservice esta contenido en un Docker, y todo gestionado por el Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X86M83nF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmj1kb0eczx6vbbmitdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X86M83nF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmj1kb0eczx6vbbmitdb.png" alt="Image description" width="880" height="783"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voy a dejar el Kubernetes por ultimo, por a hora me voy a focar en crear los microservicios conversando por una camada intermediaria llamada &lt;a href="https://dev.to/julioacontreras/action-protocol-abstract-layer-to-works-you-microservice-5d4h"&gt;Protocol Action&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Un micro servicio ya esta disponible, dale estrellita y fork, eso me ayuda mucho. :)&lt;br&gt;
&lt;a href="https://github.com/julioacontreras/authenticator-storage"&gt;https://github.com/julioacontreras/authenticator-storage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Por a hora es esto, voy a intentar a medida que ir desarrollando poner código y más posts, si te interesasteis clica en &lt;strong&gt;subscribirte&lt;/strong&gt; y &lt;strong&gt;corazón&lt;/strong&gt; para saber que quieren más contenido como este.&lt;/p&gt;

&lt;p&gt;Pueden entrar en contacto por &lt;a href="https://www.linkedin.com/in/julio-contreras-6579b623/"&gt;linkedin&lt;/a&gt; para cualquier duda o sugestión.&lt;br&gt;
Hasta luego y no dejen sus proyectos para después! 😀&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>microservices</category>
      <category>docker</category>
    </item>
    <item>
      <title>Hawk</title>
      <author>Paulo Medeiros</author>
      <pubDate>Tue, 02 Nov 2021 21:14:19 +0000</pubDate>
      <link>https://dev.to/medpaf/hawk-4hd4</link>
      <guid>https://dev.to/medpaf/hawk-4hd4</guid>
      <description></description>
      <category>python</category>
      <category>opensource</category>
      <category>security</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Accessibility Auditing My Portfolio Site - Part 1</title>
      <author>Abbey Perini</author>
      <pubDate>Tue, 02 Nov 2021 20:51:49 +0000</pubDate>
      <link>https://dev.to/abbeyperini/accessibility-auditing-my-portfolio-site-part-1-2k8k</link>
      <guid>https://dev.to/abbeyperini/accessibility-auditing-my-portfolio-site-part-1-2k8k</guid>
      <description>&lt;p&gt;When I made my portfolio site, I put a lot of effort into following the accessibility standards I knew from &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web"&gt;MDN's Getting Started with the Web guides&lt;/a&gt; and other reading I had done. I felt a 100 Lighthouse score was a good indicator of how I was doing. I wanted to test with a screenreader and do some cross browser testing, but that all fell by the wayside when I got a job. &lt;/p&gt;

&lt;p&gt;After more reading, following more accessibility experts on Twitter, and feedback from other developers (like the reduced motion CSS in &lt;a href="https://dev.to/abbeyperini/a-walkthrough-of-updating-my-portfolio-site-with-netlify-functions-and-the-dev-to-api-dd2#:~:text=After%20the%20presentation"&gt;this article&lt;/a&gt;), I began to suspect I needed to reassess, but didn't know where to start. &lt;/p&gt;

&lt;p&gt;Luckily, I was able to attend &lt;a href="https://www.youtube.com/watch?v=BhUtMZtv-DQ"&gt;Todd Libby's Lunch and Learn&lt;/a&gt;. For a full list of the tools Todd uses for his formal audits, you can watch the Lunch and Learn or the &lt;a href="https://www.youtube.com/watch?v=8R2Zv8Ic0Cc"&gt;livestream where he audits the Virtual Coffee site&lt;/a&gt;, or listen to his &lt;a href="https://virtualcoffee.io/podcast/0402-todd-libby/"&gt;Virtual Coffee podcast episode&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Todd said "No site is 100% accessible, especially as you update it, but we can aim to get close," so let's aim for close. I used 6 of the tools Todd used: &lt;a href="https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh"&gt;WAVE browser extension&lt;/a&gt;, Firefox's accessibility dev tools tab, &lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US"&gt;AXE DevTools extension&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/arc-toolkit/chdkkkccnlfncngelccgbgfmjebmkmce"&gt;ARC dev toolkit for chrome dev tools&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/ibm-equal-access-accessib/lkcagbfjnkomcinoddgooolagloogehp?hl=en-US"&gt;IBM Equal Access Accessibility checker&lt;/a&gt;, and &lt;a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni"&gt;Microsoft Accessibility Insights&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you're just dipping your toe into accessibility, I would say the WAVE extension was the most intuitive and not overwhelming. The IBM Equal Access Ability checker was by far the most thorough and informative, with actual suggestions on how to fix things. The ARC Toolkit came in close second, but the suggestions were less helpful. It links to the &lt;a href="https://www.w3.org/WAI/fundamentals/"&gt;WCAG guidelines&lt;/a&gt;, which can be quite dense and vague. Firefox's accessibility dev tools tab gave me one warning - clickable elements must be focusable and should have interactive semantics, aka test with a keyboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HZwtmzzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqnp4feiwk7jlsrqeb50.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HZwtmzzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqnp4feiwk7jlsrqeb50.png" alt="a screenshot of the full blog page on abbeyperini.dev with the WAVE accessibility extension active" width="880" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#auditing-with-automatic-tools"&gt;
  &lt;/a&gt;
  Auditing with Automatic Tools
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-findings"&gt;
  &lt;/a&gt;
  The Findings
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#landing-page"&gt;
  &lt;/a&gt;
  Landing Page
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;the blank form I have to put in my index page to use Netlify's serverless contact form and spam bot is missing form labels&lt;/li&gt;
&lt;li&gt;no navigation landmark (&lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; or otherwise)&lt;/li&gt;
&lt;li&gt;missing &lt;code&gt;focusable='false'&lt;/code&gt; for the SVG in my button&lt;/li&gt;
&lt;li&gt;warning to test Windows high contrast mode works&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#main-page"&gt;
  &lt;/a&gt;
  Main Page
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;dark mode toggle - empty form label, form element with a visible label and hidden input, the 'for' attribute is not the 'id' of a valid &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, and the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element does not have descriptive text that identifies the expected input&lt;/li&gt;
&lt;li&gt;many PDF accessibility issues!&lt;/li&gt;
&lt;li&gt;verify that the file download mechanism does not cause a keyboard trap &lt;/li&gt;
&lt;li&gt;alt text - 1 was not descriptive enough, 2 were redundant, and 1 was too long&lt;/li&gt;
&lt;li&gt;SVGs - the Github and Chrome SVG images/links I use all have the same id, SVGFocusable attribute is not set on them, and in my skills section, ARC Toolkit recommends adding &lt;code&gt;aria-labelledby&lt;/code&gt; and ids&lt;/li&gt;
&lt;li&gt;verify there is keyboard focusable content that allows you to scroll horizontally (referring to my blog preview component)&lt;/li&gt;
&lt;li&gt;missing methods to bypass blocks of content&lt;/li&gt;
&lt;li&gt;make sure "below" still makes sense without visual context&lt;/li&gt;
&lt;li&gt;My &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; elements do not have labels with accessible names!&lt;/li&gt;
&lt;li&gt;8 warnings to inform the user when an input action will open a new window or change the context&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#blog-page"&gt;
  &lt;/a&gt;
  Blog Page
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;85 empty link warnings - the HTML pulled using the DEV API generates empty links in the headings.&lt;/li&gt;
&lt;li&gt;7 skipped heading level warnings - this was an issue &lt;a href="https://dev.to/abbeyperini/a-walkthrough-of-updating-my-portfolio-site-with-netlify-functions-and-the-dev-to-api-dd2#:~:text=from%20Virtual%20Coffee.-,P.S.,-I%20had%20mentioned"&gt;I knew about&lt;/a&gt; and I honestly thought this would be significantly worse.&lt;/li&gt;
&lt;li&gt;long alt-text warnings&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; warnings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i9-iyyOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0wyatc9u5wpl9kvhxrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9-iyyOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0wyatc9u5wpl9kvhxrm.png" alt="a screenshot of the main page of abbeyperini.dev in light mode with AXE DevTools open" width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got quite a few false positives for color contrast - often "I can't calculate this, so you should check it," because &lt;a href="https://css-tricks.com/understanding-web-accessibility-color-contrast-guidelines-and-ratios/"&gt;color math is hard&lt;/a&gt;. There are also several warnings that I investigated and dismissed. For example, &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; cannot be used to present content, and the &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; added to my site by &lt;code&gt;create-react-app&lt;/code&gt; only contains perfectly accessible "You need to enable JavaScript to run this app." There are some optimistic ones like WAVE's warnings about links to youtube videos - I too wish I could guarantee all the videos I link to have captions.&lt;/p&gt;

&lt;p&gt;ARC Toolkit was unhappy that the alt text for my preview images for my portfolio projects and blog cover images include "gif," "screenshot," and "image." This is something I almost never do because it is redundant, and in these instances, I wanted to highlight that they are images, so I'll be keeping it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manual-testing-is-key"&gt;
  &lt;/a&gt;
  Manual Testing is Key
&lt;/h2&gt;

&lt;p&gt;Todd stressed the importance of manually testing a site using keyboard and a screenreader tool (e.g. Safari voiceover for Mac, NVDA for Windows, or Orca for Linux).&lt;/p&gt;

&lt;p&gt;Based on the automatic tooling testing, I began manual testing focused on a few things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does a keyboard or screenreader hit the blank form?&lt;/li&gt;
&lt;li&gt;How much of a problem is my dark mode toggle?&lt;/li&gt;
&lt;li&gt;Does my blog preview component allow you to scroll horizontally?&lt;/li&gt;
&lt;li&gt;Verifying it is clear you need to click the landing page button and easy to do so.&lt;/li&gt;
&lt;li&gt;Are the PDF downloads, SVGs, and links making traps?&lt;/li&gt;
&lt;li&gt;Do I need to add methods of bypassing blocks of content?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I started my manual testing with Microsoft Accessibility Insights' FastPass tab stops feature, which was cool. It immediately confirmed that my blog preview does not allow you to scroll horizontally using the keyboard and my dark mode toggle is not focusable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUi_IwoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9rj7po1squbgat8swiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUi_IwoW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9rj7po1squbgat8swiw.png" alt="a screenshot of the main page of abbeyperini.dev with the Microsoft Accessibility Insights' FastPass tab stops feature in use" width="880" height="685"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, I moved on to the Microsoft Accessibility Insights' Intelligent Guided Test, which included many tests, some automatic, but mainly instructions for conducting manual tests. My findings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The number of links I have that open new windows without warning is a problem.&lt;/li&gt;
&lt;li&gt;The download file link does not create a keyboard trap.&lt;/li&gt;
&lt;li&gt;I need to add &lt;a href="https://www.w3.org/TR/wai-aria-practices/examples/landmarks/index.html"&gt;Landmark roles&lt;/a&gt; for content not covered by semantic HTML.&lt;/li&gt;
&lt;li&gt;I need to add accessible descriptions to my Github and Chrome links.&lt;/li&gt;
&lt;li&gt;I am pleased to find my skills section SVGs do have accessible names.&lt;/li&gt;
&lt;li&gt;My full blog text fails the reflow test around 350% zoom.&lt;/li&gt;
&lt;li&gt;In horizontal mobile, my blog page switches to horizontal scroll!?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, it's time to try using Safari voiceover.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Neither keyboard or screenreader hit the blank form&lt;/li&gt;
&lt;li&gt;It is clear you need to click the landing page button and easy to do so.&lt;/li&gt;
&lt;li&gt;A screenreader gets trapped in my blog preview component.&lt;/li&gt;
&lt;li&gt;It's not obvious to a screenreader that the blog heading links are clickable.&lt;/li&gt;
&lt;li&gt;I don't think I need to add skip links for my main page, as the nav has buttons to load single components the content isn't that dense.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h2&gt;

&lt;p&gt;My dark mode toggle needs serious help - I need to make it focusable, and add descriptive text. Furthermore, I'll need to test whether adding &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; content adds accessibility and/or takes away functionality.&lt;/p&gt;

&lt;p&gt;I need to make the blog preview component's content focusable so a keyboard user can use it and scroll horizontally. Also, I need to make it obvious to a screenreader that clicking the preview heading opens up a single blog. I'll be researching providing methods of bypassing blocks of content for my full blog page and preventing my blog preview from becoming a horizontal trap.&lt;/p&gt;

&lt;p&gt;I'll be updating all my SVGs with &lt;code&gt;focusable&lt;/code&gt; attributes, &lt;code&gt;aria-labelledby&lt;/code&gt; attributes, and unique ids. I need to add accessible labels to the Github, and Chrome links in my portfolio section and my &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; elements and add landmark roles where necessary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l3Vi4OGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2df1ob8i6a1qe8ss3t64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l3Vi4OGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2df1ob8i6a1qe8ss3t64.png" alt="a screenshot of the main page of abbeyperini.dev with the IBM Equal Access Accessibility checker in use" width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All of my links that open new windows or download files need to warn users that they do that. For those file downloads, I need to develop &lt;a href="https://sfgov.org/developing-accessible-pdfs"&gt;accessible PDFs&lt;/a&gt; either by adding an HTML resume or formatting and tagging the existing download links appropriately.&lt;/p&gt;

&lt;p&gt;I'll be removing the words "click below" from my Old Wall Site blurb because it doesn't even make sense unless you're on mobile.&lt;/p&gt;

&lt;p&gt;My headshot and Old Wall Site screenshots need more descriptive alt-text.&lt;/p&gt;

&lt;p&gt;I would like to stop my full blog page from scrolling horizontally if you turn your phone. I also need to get the full blog page to 400% zoom without causing reflow issues. The IBM tool suggested replacing long alt-text with an &lt;code&gt;aria-describedby&lt;/code&gt; attribute or a &lt;a href="https://www.w3.org/WAI/GL/techniques.htm"&gt;D-link&lt;/a&gt;. I also saw warnings about &lt;a href="https://www.w3.org/TR/WCAG21/#info-and-relationships"&gt;&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tags not being used for paragraph formatting&lt;/a&gt;, using more list elements, and &lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;quoteblock&amp;gt;&lt;/code&gt; tags for quotes. All of this, the skipped blog heading levels, and the empty links in blog headings will require a deep dive into how I format my blogs when I write them, what HTML the DEV API returns, and my styling of it on my site. I already had a feeling I would have to do this and just learned DEV added the ability to add captions to images, so that should help.&lt;/p&gt;

&lt;p&gt;While auditing, I also noticed the button that opens my full blog page needs to be wrapped in an &lt;code&gt;&amp;lt;H1&amp;gt;&lt;/code&gt;, and my &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; styling on my full blog page needs help.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I am actually quite pleased with the results of this audit. I have only two problematic components, and I was very much focused on visual presentation when I built them. Accessible SVGs are very hard, and I got these warnings after I made them more accessible while writing &lt;a href="https://dev.to/abbeyperini/adding-shiba-inu-loading-and-error-svgs-to-my-react-site-lnj#:~:text=A%20note%20on%20SVG%20accessibility"&gt;this blog&lt;/a&gt;. Most of the other problems were news to me, and honestly the alt-text issues show how much I've improved with the practice I've been doing. The blog HTML and CSS issues are not a surprise to me - I've tossed that page together on a short deadline twice now.&lt;/p&gt;

&lt;p&gt;I am very proud I did not have any color contrast, color as meaning, or high contrast mode errors as color is something I focus on with everything I build. I also did a great job of ensuring tab focus is visible and creating parsable, semantic HTML. Finally, thanks to my focus on responsive design, zoom up to 400% doesn't cause reflow issues except on my full blog page.&lt;/p&gt;

&lt;p&gt;Using a screenreader for a few minutes was quite eye opening. At some point, I'll also take Todd's recommendation to try and go a whole day without using a mouse, but that's another blog post.&lt;/p&gt;

&lt;p&gt;Stay tuned for blogs about the updates to fix these issues.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>webdev</category>
      <category>react</category>
      <category>css</category>
    </item>
    <item>
      <title>Join our #DevEdBookClub!</title>
      <author>Megan Sullivan</author>
      <pubDate>Tue, 02 Nov 2021 20:12:02 +0000</pubDate>
      <link>https://dev.to/devedbookclub/join-our-devedbookclub-hfj</link>
      <guid>https://dev.to/devedbookclub/join-our-devedbookclub-hfj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;We're starting a book club, and you're invited!&lt;/strong&gt; Each week, we'll host a Twitter chat on Thursday at 6pm PT to discuss a chapter of &lt;a href="https://link.springer.com/book/10.1007/978-1-4842-7217-6"&gt;Docs for Developers&lt;/a&gt;, starting with Chapter 1 on November 18.&lt;/p&gt;

&lt;p&gt;If you want to read along, you can pick up a copy of &lt;a href="https://link.springer.com/book/10.1007/978-1-4842-7217-6"&gt;Docs for Developers&lt;/a&gt;. Or join us on the day to share your thoughts and experiences! We'll be hosting the chat from the &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub Twitter&lt;/a&gt; account, and we'll use the hashtag &lt;strong&gt;#DevEdBookClub&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Why join? Because &lt;strong&gt;learning is more fun together&lt;/strong&gt;!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZyE1ejF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FC0aoaxacAAkiZo.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDIbtQtf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1298757926790680576/bI2v6ehX_normal.jpg" alt="Megan Sullivan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Megan Sullivan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/meganesulli"&gt;@meganesulli&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Okay y'all, since a bunch of us have picked up Docs for Developers lately, who wants to join me, &lt;a href="https://twitter.com/AishaBlake"&gt;@AishaBlake&lt;/a&gt;, &amp;amp; &lt;a href="https://twitter.com/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt; for a &lt;a href="https://twitter.com/hashtag/TechTwitterBookClub"&gt;#TechTwitterBookClub&lt;/a&gt;?&lt;br&gt;&lt;br&gt;Starting Nov 18, we'll have a weekly Twitter chat to discuss a chapter. Thursdays @ 6pm PT. Let's learn together! 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      01:04 AM - 29 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1453890429309489152" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1453890429309489152" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1453890429309489152" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#how-we-got-here"&gt;
  &lt;/a&gt;
  How We Got Here
&lt;/h2&gt;

&lt;p&gt;Once upon a time on Twitter, a bunch of people all posted that they'd picked up a copy of &lt;strong&gt;Docs for Developers&lt;/strong&gt;. Among them were &lt;a href="https://dev.to/aishablake"&gt;Aisha Blake&lt;/a&gt;, &lt;a href="https://dev.to/coffeecraftcode"&gt;Christina Gorton&lt;/a&gt;, and &lt;a href="https://dev.to/meganesulli"&gt;Megan Sullivan&lt;/a&gt;, who serendipitously ended up in the same thread.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cvlBE_hL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445090284514250765/AoxY_CzQ_normal.jpg" alt="Christina Gorton profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Christina Gorton
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/meganesulli"&gt;@meganesulli&lt;/a&gt; &lt;a href="https://twitter.com/AishaBlake"&gt;@AishaBlake&lt;/a&gt; &lt;a href="https://twitter.com/radiomorillo"&gt;@radiomorillo&lt;/a&gt; &lt;a href="https://twitter.com/wiredferret"&gt;@wiredferret&lt;/a&gt; Did we just start an informal book club? 😆
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:57 PM - 20 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1450914087504957441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1450914087504957441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1450914087504957441" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;They thought it would be fun to talk about the book as a group, to keep themselves accountable and share what they learned.&lt;/p&gt;

&lt;p&gt;Thus, the DevEdBookClub was born!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-participate"&gt;
  &lt;/a&gt;
  How to Participate
&lt;/h2&gt;

&lt;p&gt;If you want to read along with us, here's what you need to do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pick up a copy of &lt;a href="https://link.springer.com/book/10.1007/978-1-4842-7217-6"&gt;Docs for Developers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Before the day of the Twitter chat, read the assigned chapter for the week. Jot down any &lt;strong&gt;quotes&lt;/strong&gt; that stand out to you or &lt;strong&gt;questions&lt;/strong&gt; you have.&lt;/li&gt;
&lt;li&gt;On the day of the Twitter chat, hop onto Twitter between &lt;strong&gt;6pm-7pm PT&lt;/strong&gt;. Check the &lt;a href="https://twitter.com/DevEdBookClub"&gt;@DevEdBookClub Twitter&lt;/a&gt; account for the discussion thread.&lt;/li&gt;
&lt;li&gt;Join the conversation (tag your replies with &lt;strong&gt;#DevEdBookClub&lt;/strong&gt;)! Check out what other participants are saying. Reply with your own thoughts, experiences, or questions. This is a great time to learn from each other and make new friends!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you can't attend during the scheduled time, you can still add to the conversation after the fact. We'd love to hear your thoughts, whenever you have time to share them! We'll also be writing up a quick summary of the conversation here on DEV, for future readers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule"&gt;
  &lt;/a&gt;
  Schedule
&lt;/h2&gt;

&lt;p&gt;Like to plan ahead? Here's when we're currently planning to discuss each chapter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;November 18, 2021: &lt;strong&gt;Chapter 1&lt;/strong&gt; (Understanding your audience)&lt;/li&gt;
&lt;li&gt;November 25: Break for Thanksgiving&lt;/li&gt;
&lt;li&gt;December 2: &lt;strong&gt;Chapter 2&lt;/strong&gt; (Planning your documentation)&lt;/li&gt;
&lt;li&gt;December 9: &lt;strong&gt;Chapter 3&lt;/strong&gt; (Drafting documentation)&lt;/li&gt;
&lt;li&gt;December 16: &lt;strong&gt;Chapter 4&lt;/strong&gt; (Editing documentation)&lt;/li&gt;
&lt;li&gt;December 23: &lt;strong&gt;Chapter 5&lt;/strong&gt; (Integrating code samples)&lt;/li&gt;
&lt;li&gt;December 30: &lt;strong&gt;Chapter 6&lt;/strong&gt; (Adding visual content)&lt;/li&gt;
&lt;li&gt;January 6, 2022: &lt;strong&gt;Chapter 7&lt;/strong&gt; (Publishing documentation)&lt;/li&gt;
&lt;li&gt;January 13: &lt;strong&gt;Chapter 8&lt;/strong&gt; (Gathering and integrating feedback)&lt;/li&gt;
&lt;li&gt;January 20: &lt;strong&gt;Chapter 9&lt;/strong&gt; (Measuring documentation quality)&lt;/li&gt;
&lt;li&gt;January 27: &lt;strong&gt;Chapter 10&lt;/strong&gt; (Organizing documentation)&lt;/li&gt;
&lt;li&gt;February 3: &lt;strong&gt;Chapter 11&lt;/strong&gt; (Maintaining and deprecating documentation)&lt;/li&gt;
&lt;li&gt;February 10: &lt;strong&gt;General Wrap-Up / Final Thoughts&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#have-questions"&gt;
  &lt;/a&gt;
  Have questions?
&lt;/h2&gt;

&lt;p&gt;Leave a comment below, or reach out to us on Twitter!&lt;/p&gt;

&lt;p&gt;See you on November 18!&lt;/p&gt;

</description>
      <category>learning</category>
      <category>books</category>
    </item>
  </channel>
</rss>
