<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Join professionals from RedHat, Polypane &amp; Researchers in Quantum Computing at Git Commit Show</title>
      <author>Saurabh Rai</author>
      <pubDate>Wed, 24 Nov 2021 08:02:23 +0000</pubDate>
      <link>https://dev.to/srbhr/join-professionals-from-redhat-polypane-researchers-in-quantum-computing-at-git-commit-show-b0h</link>
      <guid>https://dev.to/srbhr/join-professionals-from-redhat-polypane-researchers-in-quantum-computing-at-git-commit-show-b0h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#join-us-for-the-3rd-season-of-git-commit-show-live-online-on-27th-amp-28th-november-2021"&gt;
  &lt;/a&gt;
  Join us for the 3rd Season of Git Commit Show LIVE, ONLINE on 27th &amp;amp; 28th November, 2021.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#masterclasses-and-showcases-on-devops-reactjs-web-development-community-engagement-rpa-and-much-more"&gt;
  &lt;/a&gt;
  Masterclasses and Showcases on DevOps, ReactJS, Web Development, Community Engagement, RPA and much more!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://gitcommit.show/"&gt;Git Commit Show&lt;/a&gt;&lt;/strong&gt; is the leading online tech conference where &lt;strong&gt;senior engineers&lt;/strong&gt;, researchers, scientists and professors meet while &lt;strong&gt;being at home&lt;/strong&gt;. A 2-day long, online, 100% free meetup  where senior developers and researchers share their knowledge and breakthrough projects.&lt;br&gt;
Unlike other online conferences, it is fully &lt;strong&gt;interactive&lt;/strong&gt; with opportunities to connect with speakers and fellow attendees &lt;strong&gt;face to face&lt;/strong&gt;. The show &lt;strong&gt;started in 2019&lt;/strong&gt; to provide a better alternative to physical conferences by being open, free and inclusive of people who come from remote locations and modest backgrounds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-it-for-you"&gt;
  &lt;/a&gt;
  What's in it for you‚ùì
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;GROW YOUR NETWORK&lt;/strong&gt; üë´ : Chance of meeting a lot of developers, enthusiasts, researchers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LEARN WHILE BEING AT HOME&lt;/strong&gt; üë©‚Äçüíª: Always wanted to be at a conference, but having troubles while travelling? We've got that covered. 

&lt;ul&gt;
&lt;li&gt;Git Commit Show is purely virtual, and with our platform you can have a face to face meet-up. &lt;/li&gt;
&lt;li&gt;You can ask, cross question and get suggestions on your work from the industry professionals. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;60+ YEARS of COMBINED WORK EXPERIENCE&lt;/strong&gt; üë®‚Äçüè´: The Talks are going to be given by industry professionals who are at the top of their game, working in silence and letting their work do the talking. Some of them include :

&lt;ul&gt;
&lt;li&gt;Maanav Seth : Member of Quantum Computing Group, IIT Roorkee&lt;/li&gt;
&lt;li&gt;Karan Singh :  Senior Principal Architect at &lt;strong&gt;Red Hat&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Kilian Valkhof : &lt;strong&gt;Founder of Polypane&lt;/strong&gt; (Browser for building websites)&lt;/li&gt;
&lt;li&gt;Ken Soh :  Doing amazing work with TagUI &amp;amp; &lt;strong&gt;Robotic Process Animation&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Pachi Parra : Developer Relations &amp;amp; Creator of an online community for Non-Binary &amp;amp; Brazilian Women. &lt;/li&gt;
&lt;li&gt;Hemant Rangan : Author of &lt;strong&gt;Indian Mind at Work&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;And a lot more . . .  &lt;a href="https://gitcommit.show/"&gt;check out our website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EXPAND YOUR KNOWLEDGE IN 2 DAYS&lt;/strong&gt; üë®‚Äçüéì: Come and join us, learn within 2 Days, be a part of this community as an attendee, volunteer or if you want, you can be a speaker as well!
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#apply-here-link"&gt;
  &lt;/a&gt;
  Apply here &lt;a href="http://push.gitcommit.show/"&gt;LINK&lt;/a&gt; üëà
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://push.gitcommit.show/"&gt;Apply&lt;/a&gt; as an Attendee or Volunteer with us for the event. There are a lot of opportunities. &lt;/li&gt;
&lt;li&gt;Join our Growing &lt;a href="https://discord.gg/JFWP8c2gPG"&gt;Discord&lt;/a&gt; and be a part of weekly events &amp;amp; many more. We also have plans for first time speakers to break their fear of public speaking. . . .because fear is a mind-killer! &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#important-dates"&gt;
  &lt;/a&gt;
  Important Dates üìÖ
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event Starts 27th November 2021 (Saturday) (GMT+5:30 or IST)&lt;/li&gt;
&lt;li&gt;Event Ends 28th November 2021 (Saturday) (GMT+5:30 or IST)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqj4YGZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o2hiyg0tka96ysyyx80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqj4YGZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o2hiyg0tka96ysyyx80.png" alt="Image description" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>opensource</category>
      <category>devops</category>
    </item>
    <item>
      <title>Top 10 Ruby on Rails Development Companies to Consider in 2022
</title>
      <author>Rachael Grey</author>
      <pubDate>Wed, 24 Nov 2021 07:29:15 +0000</pubDate>
      <link>https://dev.to/rachaelgrey3/top-10-ruby-on-rails-development-companies-to-consider-in-2022-3d4h</link>
      <guid>https://dev.to/rachaelgrey3/top-10-ruby-on-rails-development-companies-to-consider-in-2022-3d4h</guid>
      <description>&lt;p&gt;It is said that RoR is a trustworthy app for creating eCommerce websites and mobile apps. Ruby on Rails offers enterprises of all sizes and shapes a scalable, fast, marketable, and feature-rich, from startups to multinational enterprises. So to find the best &lt;em&gt;Ruby on Rails development company&lt;/em&gt; that can meet your needs is a no-brainer.&lt;/p&gt;

&lt;p&gt;More firms will go digital by 2022 than ever before. As a result, Ruby on Rails software development resurfaces as a viable possibility for developing apps. In this post, we'll look at the top ten Ruby on Rails application development businesses that provide low-cost, high-quality RoR application development.&lt;/p&gt;

&lt;h2&gt;Top 10 Ruby on Rails Development Company:&lt;/h2&gt;

&lt;p&gt;Here is the list of the top 10 &lt;b&gt;Ruby on Rails development companies&lt;/b&gt; that you should consider for developing your next project:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. &lt;a href="https://www.bacancytechnology.com"&gt;Bacancy Technology&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Bacancy Technology is a top-ranked Ruby on Rails development firm. They are well-known for adhering to the industry's most reliable methods and creating very successful apps. There are 40+ experienced and skilled in-house Ruby specialists who have served clients worldwide and have made a top-notch impression as one of the Ruby on Rails firms in India. Their team consists of coders, designers, Ruby experts, and planners to create the ideal Ruby on Rails web app. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. BoTree Technologies&lt;/b&gt; &lt;br&gt;
BoTree Technologies is a famous Ruby on Rails development company with over ten years of expertise working with over one hundred clients in ten countries. The team consists of more than 30 experts who have built world-class apps for eCommerce, healthcare, logistics, and other industries.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. JetRuby&lt;/b&gt;&lt;br&gt;
JetRuby is one of the most well-known and qualified Ruby on Rails web and mobile app development firms. It is well-known for using disruptive techs to meet client objectives and develop world-class RoR solutions. Their communication is quite effective, and all of their clients are pleased with the level of engagement of their employees. They specialize in providing relevant Ruby on Rails apps to startups, small businesses, and major organizations.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. BairsDev&lt;/b&gt;&lt;br&gt;
Many big companies are choosing BairsDev for developing their top-notch Ruby on Rails products and as a result, it has become one of the best and preferable companies in Latin America. They've worked with startups, huge enterprises, and government firms. They offer complete outsourcing support and product testing through professionally managed units with good clarity.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. Netguru&lt;/b&gt;&lt;br&gt;
Without Netguru, no ranking of the top ten Ruby on Rails development companies for hiring Ruby on Rails experts would be complete. The firm has developed Ruby on Rails apps and solutions for Fortune 500 firms and helped startups and small enterprises scale. The firm has collaborated with many well-known firms to develop solutions that discuss real-world issues. They select the best structures for expanding your web app to match product requirements.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. Selleo&lt;/b&gt;&lt;br&gt;
Selleo has done over 150 projects in its region. They've worked with clients from the USA, the UK, Canada, Australia, and other countries. The company employs 230+ software experts, including Ruby on Rails developers and experts for various products. Selleo is known for improving your company's skills and promoting it to a more technically advanced position in the industry.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;7. Polcode&lt;/b&gt;&lt;br&gt;
Polcode is a globally Ruby on Rails programming firm that has developed over 1300 projects. With a lot of experience, the firm is now providing software development services to over 800 clients worldwide!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;8. Sloboda Studio&lt;/b&gt;&lt;br&gt;
Sloboda Studio has been developing Ruby on Rails web apps for over ten years. They mostly target small to mid-sized companies. Clients from the trading, media, ad tech, and IT industries make up their client support. Sloboda Studio has a wonderful QA and engineering team that works together to create high-quality goods.&lt;/p&gt;

&lt;p&gt;Sloboda is well-known for its expertise in e-commerce and online content management. The organization boasts a staff of RoR professionals that have created products for some of the world's most well-known companies.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;9. CognitiveClouds&lt;/b&gt;&lt;br&gt;
CognitiveCloud is a Ruby on Rails web development company specializing in supporting startups and businesses by developing high-quality RoR apps. They assist early-stage companies by developing solutions that enable them to raise millions of dollars in capital and meet sales targets in a short amount of time.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;10. Shakuro&lt;/b&gt; &lt;br&gt;
Shakuro develops mobile apps and services for e-commerce, art communities, athletics, entertainment, banking, networking sites, and various other internet platforms. Their software remains on phones, and the web pages are famous for always being fast and cutting-edge.&lt;/p&gt;

&lt;p&gt;Before commencing any project, Shakuro's staff researches each company's aims and selects only those projects they believe can make a significant difference. Their best attribute is the layout, with each of their works feeling functional and helpful.&lt;/p&gt;

&lt;p&gt;It's never easy to put together a Ruby on Rails team that's right for your company. You probably won't know where to look unless you're a seasoned recruiter, which is perfectly fine! So I have recommended the top 10 companies to make your search as easy as possible!&lt;/p&gt;

&lt;p&gt;It's ideal if you don't settle for a mediocre RoR app. You'll never have to complain about your product if you choose from the list of these 10 &lt;a href="https://www.bacancytechnology.com/ruby-on-rails-development-company"&gt;Ruby on Rails development company&lt;/a&gt; mentioned here.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdevelopmentcompany</category>
      <category>rubyonrailsdevelopers</category>
    </item>
    <item>
      <title>Quick Overview of CSS</title>
      <author>Ericawanja</author>
      <pubDate>Wed, 24 Nov 2021 07:26:45 +0000</pubDate>
      <link>https://dev.to/ericawanja/quick-overview-of-css-5b71</link>
      <guid>https://dev.to/ericawanja/quick-overview-of-css-5b71</guid>
      <description>&lt;p&gt;Css is an acronym for cascading style is a styling language for HTML documents. It is used to define the appearance of the html elements.&lt;/p&gt;

&lt;p&gt;In other words, we would call it the &lt;em&gt;make up&lt;/em&gt; for the HTML&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/fuJPZBIIqzbt1kAYVc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/fuJPZBIIqzbt1kAYVc/giphy.gif" alt="gif" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-attach-css-to-html"&gt;
  &lt;/a&gt;
  How do you attach CSS TO HTML?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;External css&lt;/strong&gt;&lt;br&gt;
To attach a css file externally, you need to create a separate file, save it with .css extension and attach it on the head section of your html document. &lt;em&gt;Note&lt;/em&gt; that the href attribute is used to define the path to your css file. Thus you must ensure that the pathname is correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"myStylesheet.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--the body--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Internal css&lt;/strong&gt;&lt;br&gt;
When using internal css, the styles are defined inside the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags on the head section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inline-css"&gt;
  &lt;/a&gt;
  Inline css
&lt;/h3&gt;

&lt;p&gt;The styles are defined inside the opening tag of the element as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"color:red;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is the first heading&lt;span class="nt"&gt;&amp;lt;/h&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#selectors"&gt;
  &lt;/a&gt;
  Selectors
&lt;/h2&gt;

&lt;p&gt;Selectors are used to select the code block you want to apply the styles.&lt;br&gt;
syntax;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;They can be divided into five;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. simple selectors&lt;/strong&gt;&lt;br&gt;
They include;&lt;br&gt;
-Element name e.g. &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;span&lt;/code&gt;,  &lt;code&gt;div&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-Id  e.g. &lt;code&gt;#title&lt;/code&gt;, &lt;code&gt;#first-par&lt;/code&gt;. &lt;strong&gt;Note&lt;/strong&gt;: that the id name should start with a &lt;strong&gt;#&lt;/strong&gt; symbol.&lt;br&gt;
e.g;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'first-par'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nf"&gt;#first-par&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-Class selector e.g.  &lt;strong&gt;.title&lt;/strong&gt; Note that the class name is preceded by a dot.&lt;br&gt;
eg;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'par'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nc"&gt;.par&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Combinator selector&lt;/strong&gt;&lt;br&gt;
They indicate relationship between elements. They include&lt;br&gt;
      -&lt;strong&gt;Descendant selector&lt;/strong&gt; e.g.  &lt;code&gt;div p{‚Ä¶..}&lt;/code&gt; selects &lt;em&gt;all the paragraph elements in div&lt;/em&gt;&lt;br&gt;
     -&lt;strong&gt;Child selector (&amp;gt;)&lt;/strong&gt;  e.g. &lt;code&gt;div &amp;gt;p{‚Ä¶‚Ä¶}&lt;/code&gt; &lt;em&gt;selects all the p elements that are children of a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
     -&lt;strong&gt;adjacent sibling ( + )&lt;/strong&gt;  selects an element that is directly after another specific element e.g. &lt;code&gt;div + p{‚Ä¶..}&lt;/code&gt; &lt;em&gt;selects all the paragraph after the div element&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Pseudo-class selector&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They are used to add styles to selectors only after meeting a certain condition&lt;br&gt;
Syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;pseudo-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF00FF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Pseudo-element selector&lt;/strong&gt;&lt;br&gt;
selects only a specific part of an element&lt;br&gt;
Syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;pseudo-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nd"&gt;::first-line&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff0000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-variant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;small-caps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#flex-box-and-grid"&gt;
  &lt;/a&gt;
  Flex box and GRID
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flexbox&lt;/strong&gt; is a one dimensional layout design where you specify if the items should be horizontally or vertically aligned.&lt;br&gt;
References: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout&lt;/a&gt; &lt;br&gt;
&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Grid&lt;/strong&gt; is a two dimension layout design i.e rows and columns.&lt;br&gt;
&lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;https://css-tricks.com/snippets/css/complete-guide-grid/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#transitions"&gt;
  &lt;/a&gt;
  Transitions
&lt;/h2&gt;

&lt;p&gt;Transitions in CSS provide a way to control the speed of a changing property in css.&lt;br&gt;
 For instance, if you increase the width of an object it occurs instantly. However, with transitions you can decrease this speed such that you observe every change as it happens.&lt;br&gt;
Ref:&lt;br&gt;
-&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions&lt;/a&gt;&lt;br&gt;
-&lt;a href="https://www.w3schools.com/css/css3_transitions.asp"&gt;https://www.w3schools.com/css/css3_transitions.asp&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animations"&gt;
  &lt;/a&gt;
  Animations
&lt;/h2&gt;

&lt;p&gt;CSS animations makes it possible to animate different styles without using JavaScript or a library&lt;/p&gt;

&lt;p&gt;Ref:&lt;br&gt;
-&lt;a href="https://www.w3schools.com/css/css3_animations.asp"&gt;https://www.w3schools.com/css/css3_animations.asp&lt;/a&gt;&lt;br&gt;
-&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#responsive-web-design"&gt;
  &lt;/a&gt;
  Responsive web design
&lt;/h2&gt;

&lt;p&gt;Responsiveness is the art of ensuring that a web page looks good in all devices. That is, the  web design should adjust accordingly depending on the screen size, orientation and the platform.&lt;br&gt;
The common ways to achieving responsiveness is use of flexible grids, media queries, and setting the viewport.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/9oIP19hZ9kzKJUmpdU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9oIP19hZ9kzKJUmpdU/giphy.gif" alt="Image description" width="480" height="348"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  MEDIA QUERIES
&lt;/h2&gt;

&lt;p&gt;Media queries specify styles to be applied when certain conditions are meant.&lt;br&gt;
Example;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#breakpoints"&gt;
  &lt;/a&gt;
  Breakpoints
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CSS breakpoints&lt;/strong&gt; are points where the website content responds according to the device width&lt;br&gt;
In the previous example, when the screen is resized to a maximum width of 600px, it will adopt to the given styles. i.e 600px is the breakpoint.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>css</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>HTML 5 and The Legends of the Elements</title>
      <author>Manu Martinez</author>
      <pubDate>Wed, 24 Nov 2021 07:21:58 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/html-5-and-the-legends-of-the-elements-4h82</link>
      <guid>https://dev.to/whitehatdevv/html-5-and-the-legends-of-the-elements-4h82</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hi!&lt;/strong&gt; so far we've been taking small bites of HTML cake but it's time to go further! ready?&lt;br&gt;
*&lt;em&gt;Let's go! üòÅ *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First of all let's go in depth with elements, their &lt;em&gt;attributes&lt;/em&gt;, and ways to format them. Not forgetting that elements are constructed by an initial tag, the content and the closing tag, so we &lt;strong&gt;must always remember&lt;/strong&gt; to close them. However, sometimes, you should not have to close every tag which are called &lt;em&gt;empty elements&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Another point to remember is that tags can be &lt;em&gt;nested&lt;/em&gt; this means that they are inside each other, for example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;lorem &lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;ipsum&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It can be said that an HTML document is composed by &lt;strong&gt;nested tags&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  ATTRIBUTES
&lt;/h2&gt;

&lt;p&gt;In our previous posts we have talked about attributes, but what are these attributes like? To start you should know that :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almost HTML elements can carry attributes, except for empty elements.&lt;/li&gt;
&lt;li&gt;They must always start at the initial tag.&lt;/li&gt;
&lt;li&gt;The values of the attributes must be enclosed in quotation marks.&lt;/li&gt;
&lt;li&gt;It is recommended to use "lowercase" attributes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of attributes can be :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"put here your link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Oh yeah üòä&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#formatting-the-content"&gt;
  &lt;/a&gt;
  FORMATTING THE CONTENT
&lt;/h2&gt;

&lt;p&gt;How my code should look like? How do we do it? Well, HTML allows you to create a real visual format which is easy to understand by anyone. The first step to make your HTML look's perfectly is to highlight the words, with bold, italics, etc... And how does html play with this? Well, through tags! Why else would it be? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-you-have-a-few-tags"&gt;
  &lt;/a&gt;
  HERE YOU HAVE A FEW TAGS:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt; - Bold text
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt; - Important text
&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt; - Italic text
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt; - Emphasized text
&lt;span class="nt"&gt;&amp;lt;mark&amp;gt;&lt;/span&gt; - Marked text
&lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt; - Smaller text
&lt;span class="nt"&gt;&amp;lt;sub&amp;gt;&lt;/span&gt; - Subscript text
&lt;span class="nt"&gt;&amp;lt;sup&amp;gt;&lt;/span&gt; - Superscript text

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-ltstronggt-endraw-vs-raw-ltbgt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;STRONG&amp;gt;&lt;/code&gt; VS &lt;code&gt;&amp;lt;B&amp;gt;&lt;/code&gt; :
&lt;/h3&gt;

&lt;p&gt;The b and strong tags have the same visual meaning, nevertheless google gives always more importance to strong tag because it's above in the HTML hierarchy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ltigt-endraw-vs-raw-ltemgt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;I&amp;gt;&lt;/code&gt; VS &lt;code&gt;&amp;lt;EM&amp;gt;&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;The i and em tag also has the same visual meaning, but  is usually used to describe technical words, and &lt;em&gt; for emphasis some text.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  COMMENTS
&lt;/h3&gt;

&lt;p&gt;Finally, I always like to close talking about comments and documentation, YES üòÜ do not kill me ü§ì, I know every developer hate when they must document their code, but try to figure out what will happen if you want to check your code in the future, I am sure you will no be able to understand anything, comments are really important in a daily routine, you do not only know how to write it, you should know how to understand comments from other developers and how to adapt your code to the team software requirements, look's at this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--------------- comment ---------------------&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oh üòû, this is the end of today's post, but don't worry, I have a little present for you! a cheatsheet with all the tags you need to become a master of HTML, in the following post I will allow to download this cheatsheet. Please do not forget:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You must be your own best version ü•≥.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is a Web API in JS? </title>
      <author>jC-blip-ux</author>
      <pubDate>Wed, 24 Nov 2021 07:05:00 +0000</pubDate>
      <link>https://dev.to/jcblipux/what-is-a-web-api-in-js-jc0</link>
      <guid>https://dev.to/jcblipux/what-is-a-web-api-in-js-jc0</guid>
      <description>&lt;p&gt;A Web API is an ultimate developer goal which can help increase the functionality of the browser, making it more efficient and friendly in its own kind.&lt;br&gt;
The most complex functions and readability can be managed by simplifying with the use of API's.&lt;br&gt;
Easy syntax can be brought into consideration, as it has been a task to work upon complex code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An API?&lt;/strong&gt;&lt;br&gt;
API stands for Application Programming Interface.&lt;br&gt;
It can be considered to be part of either a Web, Browser or Server as mentioned can provide the functionality to a web browser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Web API is an application programming interface for the Web.&lt;/p&gt;

&lt;p&gt;A Browser API can extend the functionality of a web browser.&lt;/p&gt;

&lt;p&gt;A Server API can extend the functionality of a web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Third Party APIs&lt;br&gt;
Third party APIs are not built into your browser. These are also used as an extension and can be downloaded from the web of an already existing platform supporting API's&lt;/p&gt;

&lt;p&gt;To use these APIs, you will have to download the code from the Web.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;YouTube API - Allows you to display videos on a web site.&lt;br&gt;
Twitter API - Allows you to display Tweets on a web site.&lt;br&gt;
Facebook API - Allows you to display Facebook info on a web site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fetch an API from a file&lt;br&gt;
We can come across this with an example, given below:&lt;/p&gt;

&lt;p&gt;A Fetch API Example&lt;br&gt;
The example below fetches a file and displays the content:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch(file)
.then(x =&amp;gt; x.text())
.then(y =&amp;gt; myDisplay(y));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since Fetch is based on async and await, the example above might be easier to understand like this:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function getText(file) {
  let x = await fetch(file);
  let y = await x.text();
  myDisplay(y);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or even bettter: Use understandable names instead of x and y:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function getText(file) {
  let myObject = await fetch(file);
  let myText = await myObject.text();
  myDisplay(myText);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also add API's from our own History!&lt;/p&gt;

&lt;p&gt;The Web History API provides easy methods to access the &lt;code&gt;windows.history&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;window.history&lt;/code&gt; object contains the URLs (Web Sites) visited by the user.&lt;/p&gt;

&lt;p&gt;The History back() Method &lt;/p&gt;

&lt;p&gt;The back() method loads the previous URL in the windows.history list.&lt;/p&gt;

&lt;p&gt;the "back arrow" in your browser can also be used as an alternative.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button onclick="myFunction()"&amp;gt;Go Back&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
function myFunction() {
  window.history.back();
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>What kind of Developer do I want to be?</title>
      <author>Kindred</author>
      <pubDate>Wed, 24 Nov 2021 06:55:20 +0000</pubDate>
      <link>https://dev.to/kvyshh/roadmap-to-learning-what-kind-of-developerprogrammerengineer-you-are-2m2j</link>
      <guid>https://dev.to/kvyshh/roadmap-to-learning-what-kind-of-developerprogrammerengineer-you-are-2m2j</guid>
      <description>&lt;p&gt;Whether you're just starting your journey in the technical field, half way through, or fully integrated, it's always a good practice to step back in your career and ask yourself a few things: &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#were-going-to-assume-at-this-point-youve-made-the-decision-to-pursue-the-life-of-a-developerengineerprogrammer-if-youre-looking-for-a-is-tech-the-right-choice-for-me-article-this-wont-cover-it"&gt;
  &lt;/a&gt;
  (we're going to assume at this point, you've made the decision to pursue the life of a "Developer"/"Engineer"/"Programmer" -- if you're looking for a "Is tech the right choice for me?" article, this won't cover it.)
&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Why am I pursuing this role? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why am I in the role that I'm in now?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Am I still passionate about what I'm pursuing?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Am I still passionate about what I'm doing?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Where do I want to go next?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With these questions and maybe answers in mind, lets consider some options to help you build the best career path for you! &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#i-want-to-mention-that-this-isnt-a-sayalldoall-article-i-wanted-to-create-this-article-to-help-inspire-or-reinspire-people-about-their-career-options-and-path-you-should-continue-to-do-research-about-the-many-titles-developers-hold-and-decide-whats-right-for-you"&gt;
  &lt;/a&gt;
  I want to mention that this isn't a say-all-do-all article, I wanted to create this article to help inspire or re-inspire  people about their career options and path. You should continue to do research about the many titles developers hold, and decide what's right for you.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#the-journey"&gt;
  &lt;/a&gt;
  The Journey
&lt;/h2&gt;

&lt;p&gt;The timeline of an engineer will generally be forever growing as you know may know we are what they call "eternal students". However, at the beginning it falls along these lines, and when you're looking into roles, consider where you are in this timeline.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-1-introductions-to-programming-and-code"&gt;
  &lt;/a&gt;
  Chapter 1: Introductions to programming and code.
&lt;/h4&gt;

&lt;p&gt;This is the start of your journey as a programmer; where you'll learn all the important fundamentals of code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-2-experimenting"&gt;
  &lt;/a&gt;
  Chapter 2: Experimenting
&lt;/h4&gt;

&lt;p&gt;You're at the point where you're trying things out, learning a new language, and discover what you like and dislike.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-3-specialization"&gt;
  &lt;/a&gt;
  Chapter 3: Specialization
&lt;/h4&gt;

&lt;p&gt;Picking a focus area and become an expert in that area.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-4-expanding-building-on-other-skills-andor-more-technicality"&gt;
  &lt;/a&gt;
  Chapter 4: Expanding / Building on other skills and/or more technicality
&lt;/h4&gt;

&lt;p&gt;At this point you know what you want to do and you're looking at the best way to develop things like your leadership skills, communication, business development, or building a &lt;em&gt;new&lt;/em&gt; language&lt;/p&gt;

&lt;p&gt;... and you can keep building from there. The possibilities are endless, it just depends on how much effort, time, and money you're willing to put in.&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-sidebar-on-the-what-it-means-to-be-a-software-engineer-vs-software-developer-vs-programmer"&gt;
  &lt;/a&gt;
  Quick Side-bar on the what it means to be a "Software Engineer" vs "Software Developer" vs "Programmer"
&lt;/h3&gt;

&lt;p&gt;I don't want to go into too much detail about the naming convention of the titles as a "Programmer", but I do want to mention it because I think it's important to acknowledge what it may mean in the professional field. I personally think they can be interchanged.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Programmer&lt;/em&gt;&lt;/strong&gt;: This is someone who knows how to code, They know at least one programming language and know it well enough that they can make things happen by typing the code into their computer.&lt;/p&gt;

&lt;p&gt;Some programmers graduate from a university with a computer science degree and know how to code. They would qualify. Others pick up a book and teach themselves to code on their own. They would qualify too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Developer&lt;/em&gt;&lt;/strong&gt;: When someone talks about a developer, sometimes they use the term to mean something more than programmer. A programmer asks me, ‚Äúwhat should I code?‚Äù or ‚Äúhow do you want me to do it?‚Äù In those cases, I'm making the bigger decisions and the programmer is implementing things.&lt;/p&gt;

&lt;p&gt;Developers have enough experience to have seen problems before and to know what worked and what didn't. With developers you can normally describe a destination, and they design the route they'll take. The difference between a programmer and a developer is one of degree. One is more resourceful than the other. Moving from one to the other requires time, effort, and experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Engineer&lt;/em&gt;&lt;/strong&gt;: Software engineers are a different dynamic altogether, for some. It's because of the ‚Äúengineering‚Äù part of the term.&lt;/p&gt;

&lt;p&gt;To remind you, it doesn't matter where/how software engineers gain their knowledge. It's not suggesting they must have a degree. Engineering is a discipline. It requires that you know a set of knowledge. Engineering requires a level of abstract thinking. We're not just talking about creating a plan before you write code. We're talking about creating mental models of how the parts of a system will work. Models that help you refine your designs.&lt;/p&gt;

&lt;p&gt;Conclusion: At the end of the day, what really matters is what you want to call yourself and what you believe you are. There is no "right" or "wrong" to how you title yourself (so long as you're being honest to yourself). This side-bar was just to touch on some opinions on what the title means to some people in the industry. ‚Äú&lt;strong&gt;&lt;em&gt;Good programmers are good programmers, no matter what special title they have.&lt;/em&gt;&lt;/strong&gt;‚Äù&lt;/p&gt;

&lt;p&gt;-- &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-roadmap-where-to-start"&gt;
  &lt;/a&gt;
  The Roadmap - Where to start.
&lt;/h2&gt;

&lt;p&gt;So if you've done any searching around into different 'developer' titles, you'll quickly realize there are about 100 different tiles you can choose from. Narrowing that down can be daunting when you're first starting out, but the good news is a lot of them can be categorized into larger 'umbrella' role-titles to help your narrow your focus.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-developer"&gt;
  &lt;/a&gt;
  Front-End Developer
&lt;/h3&gt;

&lt;p&gt;Builds websites by converting data to a graphical interface for the user to view and interact with. Their main concerns relate to the presentation layer; they need to have some artistic vision to present the data; this generally implies mastering HTML, CSS, some CSS pre-processor like SAS, and some (mainstream) JavaScript frameworks such as Angular, React or Vue.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Project Management&lt;/li&gt;
&lt;li&gt;Excellent Communication &lt;/li&gt;
&lt;li&gt;Time Management&lt;/li&gt;
&lt;li&gt;Quick/Effective Decision Making&lt;/li&gt;
&lt;li&gt;Working under pressure&lt;/li&gt;
&lt;li&gt;Attention for visual detail&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I like to work with people, whether it's team-members or clients, and being able to bring someones idea to life.&lt;/li&gt;
&lt;li&gt;I work well under pressure and I can handle eyes on me and my work&lt;/li&gt;
&lt;li&gt;When push comes to shove, I can make a yes or no decision on project capabilities, features, and deadlines&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;HTML, CSS, Vanilla JS, jQuery, Content management systems &lt;br&gt;
BONUS: UX/UI Design Skills, Adobe Suite, Branding, Creating Guide Styles&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Front-End Engineer/Developer&lt;/li&gt;
&lt;li&gt;Web Developer/Web Designer&lt;/li&gt;
&lt;li&gt;Front-End Architect&lt;/li&gt;
&lt;li&gt;Presentation Layer Developer&lt;/li&gt;
&lt;li&gt;Interface Developer&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;Mock-up/Storyboard&lt;br&gt;
Receiving a mock-up or storyboard from a client, ux/ui designer, or design team.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPj0QfzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4u93kcqs4a3an4ykpbj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPj0QfzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4u93kcqs4a3an4ykpbj.jpeg" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;br&gt;
Plan of Action&lt;br&gt;
Thinking about the time it will take to build each component; is it going to be one page, multiple pages, what data is this pulling from, what are we consistently changing?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9GYaYpGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsra483qg7qlwdm3j9ql.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9GYaYpGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsra483qg7qlwdm3j9ql.jpeg" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;br&gt;
Building Dynamic Code&lt;br&gt;
Creating code that any developer can read and iterate on. Making the most of re-usable code on multiple pages&lt;br&gt;
HTML&lt;br&gt;
Properly labeling and id-ing items so they can easily be accessed in CSS or through a CSS program&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
&amp;lt;meta name="description" content=""&amp;gt;
&amp;lt;meta name="author" content="Tooplate"&amp;gt;
&amp;lt;title&amp;gt;ArtXibition HTML Event Template&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id="js-preloader" class="js-preloader"&amp;gt;
      &amp;lt;div class="preloader-inner"&amp;gt;
        &amp;lt;span class="dot"&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;div class="dots"&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript&lt;br&gt;
Creating component based elements and styling your code so that it's easily manipulatable and readable. Notice that when you create something you want to be able to think about where and how it can be used else where.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function focusable( element, isTabIndexNotNaN ) {
    var map, mapName, img,
        nodeName = element.nodeName.toLowerCase();
    if ( "area" === nodeName ) {
        map = element.parentNode;
        mapName = map.name;
        if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
            return false;
        }
        img = $( "img[usemap='#" + mapName + "']" )[ 0 ];
        return !!img &amp;amp;&amp;amp; visible( img );
    }
    return ( /input|select|textarea|button|object/.test( nodeName ) ?
        !element.disabled :
        "a" === nodeName ?
            element.href || isTabIndexNotNaN :
            isTabIndexNotNaN) &amp;amp;&amp;amp;
        // the element and all of its ancestors must be visible
        visible( element );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS&lt;br&gt;
Matching the styling to the mock-up while also making it the most dynamic by applying proper class and IDs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;html, body {
  font-family: 'Poppins', sans-serif;
  font-weight: 400;
  background-color: #fff;
  font-size: 16px;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  text-decoration: none !important;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0px;
  margin-bottom: 0px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$97k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$124 (Senior)&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;"Web Developer" is the #1 searched job-title in the development field&lt;/li&gt;
&lt;li&gt;"Front-End Engineer" is the #4 top ranking&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You are not looking to have EXCELLENT communication skills&lt;/li&gt;
&lt;li&gt;Don't enjoy working with a lot of different people&lt;/li&gt;
&lt;li&gt;Crack under pressure&lt;/li&gt;
&lt;li&gt;You are not the most design-oriented person and don't wish to be &lt;/li&gt;
&lt;li&gt;You are not great at managing multiple tasks and deadlines&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#backend-developer"&gt;
  &lt;/a&gt;
  Back-End Developer
&lt;/h3&gt;

&lt;p&gt;Builds the functionality and interactivity of a website, including the elements that allow users to carry out actions like logging in, creating an account, and user data input. Backend developers work implementing the business logic. They have to have knowledge of frameworks, software architecture, design patterns, databases, APIs, interconnectivity, DevOps, etc. They need to be able to manage abstract concepts and complex logic.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Logical and solutions oriented &lt;/li&gt;
&lt;li&gt;Abstract thinking&lt;/li&gt;
&lt;li&gt;Pattern recognition &lt;/li&gt;
&lt;li&gt;Communication with team&lt;/li&gt;
&lt;li&gt;Detail &amp;amp; Security Oriented&lt;/li&gt;
&lt;li&gt;Researcher&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;When I'm given a problem, I like to take a moment to write down solutions and how to get there&lt;/li&gt;
&lt;li&gt;I'm always looking for more interesting ways to solve problems and make it adaptable - its not always about what is the 'shortest'&lt;/li&gt;
&lt;li&gt;I like creating systems for more efficient ways to execute on tasks&lt;/li&gt;
&lt;li&gt;I want to be sure that I have a calculated risk before I go in on something and consult with others&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Python, Java (NOT JS), PHP, MySQL, C, C++, Ruby&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Software Engineer&lt;/li&gt;
&lt;li&gt;Back-end Engineer&lt;/li&gt;
&lt;li&gt;Data Engineer &lt;/li&gt;
&lt;li&gt;SQL/Java/[language] Engineer&lt;/li&gt;
&lt;li&gt;Network Engineer&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;Data from server/website/network&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---u-abTMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiy7p27rd0hi2zxg9upc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---u-abTMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiy7p27rd0hi2zxg9upc.png" alt="Image description" width="880" height="392"&gt;&lt;/a&gt;&lt;br&gt;
Creating a framework for where data comes and goes as well as functionality (what to do with it)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uFqVTUxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nncu15sjel6goxqubyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uFqVTUxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nncu15sjel6goxqubyl.png" alt="Image description" width="880" height="1408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building the code to consider time-space complexity but also be dynamic when needed. Data should be easily accessible by other teams and placing security measures where important data is passed. Commenting to allow other engineers to easily iterate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Job: 
        def __init__(self, start, finish, profit): 
            self.start = start 
            self.finish = finish 
            self.profit = profit 


    # A Binary Search based function to find the latest job 
    # (before current job) that doesn't conflict with current 
    # job. "index" is index of the current job. This function 
    # returns -1 if all jobs before index conflict with it. 
    def binarySearch(job, start_index): 
        # https://en.wikipedia.org/wiki/Binary_search_algorithm

        # Initialize 'lo' and 'hi' for Binary Search 
        lo = 0
        hi = start_index - 1

        # Perform binary Search iteratively 
        while lo &amp;lt;= hi: 
            mid = (lo + hi) // 2
            if job[mid].finish &amp;lt;= job[start_index].start: 
                if job[mid + 1].finish &amp;lt;= job[start_index].start: 
                    lo = mid + 1
                else: 
                    return mid 
            else: 
                hi = mid - 1
        return -1

    # The main function that returns the maximum possible 
    # profit from given array of jobs 
    def schedule(job): 
        # Sort jobs according to start time 
        job = sorted(job, key = lambda j: j.start) 

        # Create an array to store solutions of subproblems. table[i] 
        # stores the profit for jobs till arr[i] (including arr[i]) 
        n = len(job) 
        table = [0 for _ in range(n)] 

        table[0] = job[0].profit; 

        # Fill entries in table[] using recursive property 
        for i in range(1, n): 

            # Find profit including the current job 
            inclProf = job[i].profit 
            l = binarySearch(job, i) 
            if (l != -1): 
                inclProf += table[l]; 

            # Store maximum of including and excluding 
            table[i] = max(inclProf, table[i - 1]) 

        return table[n-1] 

    # Driver code to test above function 
    job = [Job(1, 2, 50), Job(3, 5, 20), 
        Job(6, 19, 100), Job(2, 100, 200)] 
    print("Optimal profit is"), 
    print(schedule(job))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$117k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$154k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Back end development can be offered as an independent service in the form of BaaS&lt;/li&gt;
&lt;li&gt;The backend web developer should understand the goals of the website and come up with effective solutions which also means understand the front-end well&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You generally give up after a few attempts at a problem&lt;/li&gt;
&lt;li&gt;You are quick to asking someone else for the answer before researching on your own&lt;/li&gt;
&lt;li&gt;You are more reactive and less risk-accessing &lt;/li&gt;
&lt;li&gt;You have don't like looking at data and working with algorithms&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#fullstack-developer"&gt;
  &lt;/a&gt;
  FullStack Developer
&lt;/h3&gt;

&lt;p&gt;Is able to work on both the front end and back end portions of an application or website. A full stack developer has specialized knowledge of all stages of software development, including server, network, and hosting environment; relational and non-relational databases; interacting with APIs; user interface and user experience; quality assurance; security; customer and business needs. Being a full stack developer means taking a holistic view‚Ää‚Äî‚Ääcomparing the pros and cons of both back-end and front-end before determining where the logic should sit.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Flexibility and adaptability&lt;/li&gt;
&lt;li&gt;Very big team player and/or team leader&lt;/li&gt;
&lt;li&gt;Strategic thinking&lt;/li&gt;
&lt;li&gt;Communication skills are stellar &lt;/li&gt;
&lt;li&gt;Creativity &lt;/li&gt;
&lt;li&gt;Analytical &lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I can work well in most environments, whether it's internal or external&lt;/li&gt;
&lt;li&gt;I enjoy when something looks great, but also works great.&lt;/li&gt;
&lt;li&gt;I enjoy challenges and am determined to solve them in the most efficient way&lt;/li&gt;
&lt;li&gt;I like to plan things out to the detail and can communicate what I am capable of doing and not capable of doing to my team&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Front-end Languages and Frameworks (HTML, CSS, JS), Backend Technologies and Frameworks (Python, Ruby, SQL)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;FullStack Developer&lt;/li&gt;
&lt;li&gt;Solutions Engineer&lt;/li&gt;
&lt;li&gt;FullStack QA Engineer&lt;/li&gt;
&lt;li&gt;Software Developer&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Lr0wDvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csrr7ypj1mheyk2c7vf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Lr0wDvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csrr7ypj1mheyk2c7vf4.png" alt="Image description" width="880" height="720"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$96k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$128k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;As a full stack engineer you have a lot of opportunity to grow and decide if you want to stay full stack or go into something more specific&lt;/li&gt;
&lt;li&gt;You are a highly sought after hire currently because of your ability to do both front and back end.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You don't really enjoy doing both design/creative work and data manipulation&lt;/li&gt;
&lt;li&gt;You don't like working with multiple teams&lt;/li&gt;
&lt;li&gt;You don't have great time management or like to work on a more leisure schedule&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#mobile-ios-andor-android-developer"&gt;
  &lt;/a&gt;
  Mobile iOS and/or Android Developer
&lt;/h3&gt;

&lt;p&gt;Builds apps for mobile devices, including iOS and Android. A mobile developer might use Java, Swift, and Objective-C. Mobile developers can be conditionally called the front-end developer, since they mostly works with the app‚Äôs interface. However, they also play the role as the back-end developer when it comes to more complex builds that require internet connection and server communication - so in general, they stick to the Mobile Developer title.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Business knowledge&lt;/li&gt;
&lt;li&gt;Agile Methodology&lt;/li&gt;
&lt;li&gt;Collaborative&lt;/li&gt;
&lt;li&gt;Creative&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I really enjoy the idea of having technology be mobile and making it functional&lt;/li&gt;
&lt;li&gt;I like to think about the way people use their phones and how certain apps are ran&lt;/li&gt;
&lt;li&gt;Before I go into something, I like to do more research on my audience and who might be looking at my work&lt;/li&gt;
&lt;li&gt;I take feed back well and work very well independently and on cross-functional teams&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Linux/Unix, Phython, Perl, Shell Scripting, Java, C#, Swift, ORACLE, Apache, iOS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design: UX/UI&lt;/li&gt;
&lt;li&gt;BONUS: Business Research, Business Development, Analytics&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Mobile App Developer&lt;/li&gt;
&lt;li&gt;App Developer&lt;/li&gt;
&lt;li&gt;iOS Engineer&lt;/li&gt;
&lt;li&gt;Android Engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ang-jxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbzt2c0zgobd8avvlful.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ang-jxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbzt2c0zgobd8avvlful.png" alt="Image description" width="640" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$94k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$115k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;There will always be a high demand for Mobile App Devs and their skill set is very specific to the Mobile environment. That being said, if you can do it you won't be out of work or find it hard to get work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You aren't on your phone a lot&lt;/li&gt;
&lt;li&gt;Don't use a lot of Apps&lt;/li&gt;
&lt;li&gt;Don't have an interest in mobile apps&lt;/li&gt;
&lt;li&gt;Don't want to think about internet on phones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I built this with the intention of helping people understand more about some of the most common titles as a Developer to help make better developers. I hope this was helpful.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Understanding the OOPs paradigm in JavaScript.</title>
      <author>Swastik Yadav</author>
      <pubDate>Wed, 24 Nov 2021 06:50:53 +0000</pubDate>
      <link>https://dev.to/swastikyadav/understanding-the-oops-paradigm-in-javascript-3mn2</link>
      <guid>https://dev.to/swastikyadav/understanding-the-oops-paradigm-in-javascript-3mn2</guid>
      <description>&lt;p&gt;Hello Everyone,&lt;/p&gt;

&lt;p&gt;In this post we will explore the &lt;strong&gt;object oriented programming&lt;/strong&gt; paradigm in JavaScript. OOP is a paradigm where everything is managed with objects.&lt;/p&gt;

&lt;p&gt;There are four ways to work with objects in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Factory way of creating objects.&lt;/li&gt;
&lt;li&gt;Prototypal way of creating objects.&lt;/li&gt;
&lt;li&gt;Pseudo Classical pattern of creating objects.&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best way to work with objects are classes. We will learn exactly how classes works. Let's explore each method one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#factory-way-of-creating-objects"&gt;
  &lt;/a&gt;
  Factory way of creating objects
&lt;/h2&gt;

&lt;p&gt;Let's say we need to create multiple students object. With factory way, we don't manually need to create objects for all of them. We create a constructor function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;creteStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next whenever we need to create a student, we just have to call the above function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rahul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 95%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This was the factory way of creating objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prototypal-way-of-creating-objects"&gt;
  &lt;/a&gt;
  Prototypal way of creating objects
&lt;/h2&gt;

&lt;p&gt;When a property is not found in an object, it looks for it down in the prototypal chain. This is the &lt;strong&gt;prototypal nature of object&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZ_-WpVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vndfpiuiza8qhvfxyorl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZ_-WpVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vndfpiuiza8qhvfxyorl.png" alt="prototypal-chain" width="700" height="287"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's create object the prototypal way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create object using &lt;strong&gt;Object.create()&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure to use &lt;strong&gt;this&lt;/strong&gt; in the method.&lt;/li&gt;
&lt;li&gt;Make sure to return object.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;studentMethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;studentMethod&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 99%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Object.create takes an object as parameter and puts that parameter into dunder-proto. For example in the above code snippet percentage method is added in dunder proto, it is not in the main object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pseudo-classical-pattern-of-creating-objects"&gt;
  &lt;/a&gt;
  Pseudo Classical pattern of creating objects
&lt;/h2&gt;

&lt;p&gt;Pseudo classical pattern uses the &lt;strong&gt;new&lt;/strong&gt; keyword with constructor function to create objects. The new keyword does 3 things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creates a new object implicitly, named &lt;strong&gt;this&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Puts the new object (this) in function prototype.&lt;/li&gt;
&lt;li&gt;Implicitly returns obj (this).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When we use &lt;strong&gt;new&lt;/strong&gt; keyword, methods from prototype goes to dunder-proto.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;this = {}&lt;/li&gt;
&lt;li&gt;this.&lt;strong&gt;proto&lt;/strong&gt; = createStudent.prototype&lt;/li&gt;
&lt;li&gt;return obj (this)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 100%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;new&lt;/strong&gt; keyword implicitly creates the object, sets the method to dunder-proto, and implicitly returns the object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h2&gt;

&lt;p&gt;Classes are a syntactic sugar to create objects. In the last example we added the percentage method to CreateStudent.prototype manually. With classes all that is done automatically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;new&lt;/strong&gt; keyword calls the constructor and implicitly creates and returns the &lt;strong&gt;this&lt;/strong&gt; object.&lt;/li&gt;
&lt;li&gt;Classes accepts only methods (functions).&lt;/li&gt;
&lt;li&gt;You will find the methods in the dunder-proto of the object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 89%&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, that's how we create objects with classes. Enumerable flag for class methods are by default set to false, because we don't want methods in &lt;a href="https://dev.to/swastikyadav/difference-between-forof-and-forin-loop-in-javascript-j2o"&gt;&lt;strong&gt;for...in&lt;/strong&gt;&lt;/a&gt; loop result.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class-inheritance"&gt;
  &lt;/a&gt;
  Class Inheritance
&lt;/h3&gt;

&lt;p&gt;Class inheritance is a way to create new functionality on top of existing one. Let's say we have an Animal class and a Rabbit class based on Animal class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Animal Class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; runs with speed &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; stands still.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My animal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Rabbit Class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; hides!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;White Rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit runs with speed 5.&lt;/span&gt;
&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit hides!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rabbit class does not have run method but it can access it from Animal.prototype as we have extended Rabbit class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNJ6TMWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890qhketv765opew69ah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNJ6TMWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890qhketv765opew69ah.png" alt="class-extend" width="700" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-super-keyword"&gt;
  &lt;/a&gt;
  The Super keyword
&lt;/h3&gt;

&lt;p&gt;The super keyword allows us to call parent method and constructor in our extended class.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;super.method(...)&lt;/strong&gt; calls a parent method.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;super(...)&lt;/strong&gt; calls parent constructor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// calls the parent constructor&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; hides`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// calls stop method of parent&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;White Rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit runs with speed 5.&lt;/span&gt;
&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit stands still. White Rabbit hides!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet, Rabbit class defines a stop method which calls the stop method of Animal with super.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-static-method"&gt;
  &lt;/a&gt;
  The static method
&lt;/h3&gt;

&lt;p&gt;We can also assign a method to the class itself, not to its "prototype". Such methods are called static methods. They are prepended by &lt;strong&gt;static&lt;/strong&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;staticMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;staticMethod&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Static methods are used for functionality that belongs to the class "as a whole". It does not relate to a concrete class instance.&lt;/p&gt;

&lt;p&gt;Static properties and methods are inherited. For class B extends A the prototype of the &lt;strong&gt;class B itself points to A: B.[[Prototype]] = A&lt;/strong&gt;. So if a field is not found in B, the search continues in A.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#private-and-protected-properties-and-methods"&gt;
  &lt;/a&gt;
  Private and protected properties and methods
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Protected&lt;/strong&gt; fields starts with &lt;strong&gt;_&lt;/strong&gt;. Protected field should only be accessible from its class and classes inheriting from it. Protected field is not supported at the language level.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private&lt;/strong&gt; fields starts with &lt;strong&gt;#&lt;/strong&gt;. Private field should only be accessibe from inside the class.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CoffeeMachine&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;power&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;power&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;power&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CoffeeMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Error - Private method cannot be accessed outside of the class.&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 0;&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 0;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Private method #waterAmount is only accessible inside the class itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-this-keyword"&gt;
  &lt;/a&gt;
  The this keyword
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;this&lt;/strong&gt; keyword refers to the object it belongs to. There are four rules to identify, where the this keyword is refering.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;fn() -&amp;gt; window&lt;/li&gt;
&lt;li&gt;obj.fn() -&amp;gt; this referes to obj. If any function is using &lt;strong&gt;this&lt;/strong&gt; then &lt;strong&gt;this&lt;/strong&gt; becomes the object at left of (.).&lt;/li&gt;
&lt;li&gt;bind, call, apply -&amp;gt; "this" value is specified.&lt;/li&gt;
&lt;li&gt;new keyword creates and returns this implicitly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;"this"&lt;/strong&gt; changes at runtime.&lt;/p&gt;




&lt;p&gt;üôå Support by joining my weekly Newsletter.&lt;/p&gt;

&lt;p&gt;That's it for this post. I hope you found it helpful, if so, please do share and subscribe to my &lt;a href="https://www.getrevue.co/profile/8020lessons"&gt;8020 Newsletter&lt;/a&gt; where I share epic weekly content on building your skillset.&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to escape Tutorial Hell (Short Post)</title>
      <author>Jebarson Ponraj</author>
      <pubDate>Wed, 24 Nov 2021 06:45:55 +0000</pubDate>
      <link>https://dev.to/jebarsonponraj/how-to-escape-tutorial-hell-short-post-3p85</link>
      <guid>https://dev.to/jebarsonponraj/how-to-escape-tutorial-hell-short-post-3p85</guid>
      <description>&lt;p&gt;Please bear me my english and my grammar might not be good because I'm new to blogging in fact this is my first blog post okay so let's get started.&lt;/p&gt;

&lt;p&gt;Have you ever started a project and went completely off like you feel you don't know nothing but you might have watched a lot of tutorials then you are in the Tutorial Hell! Don't worry it's common because every programmers experienced this at least once in their lifetime.&lt;/p&gt;

&lt;p&gt;So what is tutorial hell? In simple words tutorial hell is when you started learning programming you started to watch tutorials either from youtube or from a course in udemy you blindly follow the instructor in that video like you do whatever he types and whatever he do on his screen you just simply copy everything what he do and at the end of the day you feel like you've learned something but when you try to do some projects you'll feel like you don't know how to do it so again you watch a tutorial on how to do that and it keeps on going it's like an infinite loop ‚àû. For example you want to learn how to ride a bicycle if you just watching others riding bicycle you will not learn how to ride it you should practice riding it that's the only way you can learn similarly this applies in programming too you should practice and get your hands dirty.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do This&lt;/strong&gt;&lt;br&gt;
Then how can I escape from this I know what you are thinking. I would say that you should not watch tutorials in the beginning tutorials are great way to learn programming you can watch a tutorial and whatever the instructor do in that tutorial you do it along with him at first then you try to do it on your own or just add more features to that you can also do some projects it might be any thing a simple calculator or a simple clock whatever it is you just do it on your own and if you struck at some point you just google it or watch it on that particular part and sometimes you won't find the exact code or tutorial but you can get a similar video or code so you will try to modify it to work on your project and this is the way you will learn programming or coding.&lt;/p&gt;

&lt;p&gt;Currently I'm also in the tutorial hell I don't want anyone to struck in this hell like me but now I'm trying to overcome this by doing some own projects.&lt;/p&gt;

&lt;p&gt;Remember what you read today to not repeat the same mistakes.&lt;/p&gt;

&lt;p&gt;Thank you for reading my post.If you have any doubt feel free to discuss in the comment section.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorialhell</category>
      <category>programming</category>
      <category>help</category>
    </item>
    <item>
      <title>RudderStack‚Äôs Licensing Explained</title>
      <author>RudderStack</author>
      <pubDate>Wed, 24 Nov 2021 06:39:20 +0000</pubDate>
      <link>https://dev.to/rudderstack/rudderstacks-licensing-explained-1pg0</link>
      <guid>https://dev.to/rudderstack/rudderstacks-licensing-explained-1pg0</guid>
      <description>&lt;p&gt;Software licensing can be a tricky subject, especially when you are a commercial company building an open-source product like RudderStack.&lt;/p&gt;

&lt;p&gt;We want to build RudderStack into a strong company, and we keep some of our features under our enterprise license to help with that. We also want to build the best product and distribute it in the most effective fashion, and that is under an open-source license. We have to balance which parts of our software should be under our enterprise license and which should be under open source licenses.&lt;/p&gt;

&lt;p&gt;From a customer's viewpoint, we see how this could be confusing. In this post, we'll explain how our software is licensed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#agpl30"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.gnu.org/licenses/agpl-3.0.en.html/"&gt;AGPL-3.0&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The core of RudderStack - the components that make up our Event Stream feature - is open source. It is in our¬†&lt;a href="https://github.com/rudderlabs/rudder-server/"&gt;rudder-server&lt;/a&gt;¬†repository.&lt;/p&gt;

&lt;p&gt;We are the only open source customer event streaming software available (at least that we've been able to find). We have more than 2,000 stars on GitHub and approximately 300 open source users.&lt;/p&gt;

&lt;p&gt;A simplified explanation of the AGPL-3.0 license is that you can use and modify rudder-server however you want, but if you distribute it in any way - including offering it as SaaS - you have to make all of the source code for the derivative software available under the AGPL-3.0 license.&lt;/p&gt;

&lt;p&gt;The AGPL-3.0 license provides us the most protection against competition while still being open source. That's the reason we have our core functionality,¬†rudder-server, under it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-mit-license"&gt;
  &lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/MIT/"&gt;The MIT License&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;A majority of RudderStack's third-party destination integrations live in the¬†&lt;a href="https://github.com/rudderlabs/rudder-transformer/"&gt;rudder-transformer&lt;/a&gt;¬†repository. They are open source as well, licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Almost all of our SDKs and instrumentation repos for tooling and utilities are open source too. We also have some of our data modeling repos - for use-cases like customer journey analysis and sessionization for data residing in your data warehouse - open sourced under the MIT license. You can find all these repos in our¬†&lt;a href="https://github.com/rudderlabs/"&gt;GitHub organization&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A simplified explanation of the MIT License is that you can do whatever you want with the source code - including distributing and commercializing it - as long as you include the original copyright and license in any copy of the derivative software that you distribute.&lt;/p&gt;

&lt;p&gt;The MIT License provides us very little protection from competition, but it allows a lot of flexibility and freedom for the developers using our code. That's the reason we have our non-core functionality - things that¬†&lt;em&gt;would not&lt;/em&gt;¬†make sense for us to distribute or commercialize on their own - under it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We have a few repositories that are forked from other repos and are under their licenses. Most are under the¬†Apache-2.0¬†license, but there are a few under various other licenses based on where they are forked from.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#enterprise-license"&gt;
  &lt;/a&gt;
  Enterprise License
&lt;/h2&gt;

&lt;p&gt;All of our Pro and Enterprise features are under our enterprise license. The source code for this software isn't publicly available and is a closed source, but any of our Enterprise customers that request it are given access to these repositories. So, even though our enterprise license is a closed source license, the repositories are code available for all our Enterprise customers.&lt;/p&gt;

&lt;p&gt;Features licensed under our enterprise license include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Warehouse Actions&lt;/li&gt;
&lt;li&gt;  Cloud Extract&lt;/li&gt;
&lt;li&gt;  Transformations&lt;/li&gt;
&lt;li&gt;  Event Replay&lt;/li&gt;
&lt;li&gt;  SSO (Single Sign-On)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A simplified explanation of our enterprise license is that you can only use the software under it as we specify. You can only use it in your RudderStack instance and only if you are an Enterprise customer. If you build anything on top of it or spin up your own instance, you cannot distribute or commercialize it and are not allowed to use it if you aren't an Enterprise customer.&lt;/p&gt;

&lt;p&gt;Our enterprise license provides us the highest level of protection from competition, but we try our best to keep our software transparent and the source code easy to access by making it source available to Enterprise customers. That's the reason we have our core, differentiated functionality - things that¬†&lt;em&gt;would&lt;/em&gt;¬†make a lot of sense to distribute or commercialize on their own - under it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#licensing-can-be-confusing-we-hope-this-helped"&gt;
  &lt;/a&gt;
  Licensing can be Confusing. We Hope This Helped.
&lt;/h2&gt;

&lt;p&gt;Hopefully, this post helps clarify RudderStack's licensing. Open core products like ours frequently end up with complicated licensing that changes over time. We're trying to avoid that by being intentional with how we license our software components and limiting the number of licenses we use, so customers and contributors don't have to deal with that complexity.&lt;/p&gt;

&lt;p&gt;If better licensing options are available in the future, we will consider changing to them. As of today, this licensing configuration is the best we have found for our software and our business, and we will hopefully stick with it for a long time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign up for Free and Start Sending Data
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.¬†&lt;a href="https://app.rudderlabs.com/signup?type=freetrial/"&gt;Get started&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>cdp</category>
      <category>dataengineering</category>
      <category>rudderstack</category>
      <category>privacy</category>
    </item>
    <item>
      <title>How to prevent Lambda Cold Starts using Serverless Framework?</title>
      <author>Shivang Chauhan</author>
      <pubDate>Wed, 24 Nov 2021 06:37:44 +0000</pubDate>
      <link>https://dev.to/shivangchauhan7/how-to-prevent-lambda-cold-starts-using-serverless-framework-m44</link>
      <guid>https://dev.to/shivangchauhan7/how-to-prevent-lambda-cold-starts-using-serverless-framework-m44</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-aws-lambda-cold-starts"&gt;
  &lt;/a&gt;
  What are AWS Lambda Cold Starts?
&lt;/h2&gt;

&lt;p&gt;Whenever we call a lambda function it doesn't just start instantly if you haven't called it recently, it takes time before it starts executing the code, this happens because AWS shuts down the container responsible for executing the code inside our lambda function if it's not called for some time then, so the time taken to start up a new container before executing the code inside the lambda function is called a cold start or we can say that it is the delay before actual code execution starts inside our lambda function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-deal-with-cold-starts"&gt;
  &lt;/a&gt;
  How to deal with Cold Starts?
&lt;/h2&gt;

&lt;p&gt;If we are using AWS Serverless framework then there is a plugin called &lt;code&gt;serverless-plugin-warmup&lt;/code&gt; it is a third party NPM (Node package module) which polls the lambda function of our choice, this way that lambda function stays warm and AWS doesn't drop off the container where it executes the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-plugin"&gt;
  &lt;/a&gt;
  Setting up the plugin
&lt;/h2&gt;

&lt;p&gt;Let's go through each step which is required to setup this warmup plugin for your lambda functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; serverless-plugin-warmup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First thing is to install this plugin in the root directory of your project, we are adding this package as a dev dependency.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#import-the-plugin-in-serverlessyml-file"&gt;
  &lt;/a&gt;
  Import the plugin in &lt;em&gt;serverless.yml&lt;/em&gt; file
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;serverless-plugin-warmup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-warmup-plugin-configuration"&gt;
  &lt;/a&gt;
  Adding warmup plugin configuration
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;custom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;warmup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;folderName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;.warmup'&lt;/span&gt;
      &lt;span class="na"&gt;memorySize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;warmer-default&lt;/span&gt;
      &lt;span class="na"&gt;events&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rate(2 minutes)&lt;/span&gt;
      &lt;span class="na"&gt;package&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;individually&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;patterns&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;!../**'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;!../../**'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./**&lt;/span&gt;
      &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;
      &lt;span class="na"&gt;concurrency&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;custom&lt;/code&gt; - We need to define all our warmers in &lt;code&gt;custom&lt;/code&gt; section of our &lt;em&gt;serverless.yml&lt;/em&gt; file, here we are setting the default warmer configuration.&lt;br&gt;
&lt;code&gt;folderName&lt;/code&gt; - This is the name of the folder where our warmer temporary files will be stored for deploying them to AWS.&lt;br&gt;
&lt;code&gt;memorySize&lt;/code&gt; - Memory size we want to give to our warmer function.&lt;br&gt;
&lt;code&gt;name&lt;/code&gt; - Name of the warmer lambda function.&lt;br&gt;
&lt;code&gt;events&lt;/code&gt; - This is the setting which will determine when to call or in what interval to call the lambda functions to make them warm through the warmer lambda, so here we are scheduling it for every 2 minutes.&lt;br&gt;
&lt;code&gt;package&lt;/code&gt; - This is just to exclude and include the package.&lt;br&gt;
&lt;code&gt;timeout&lt;/code&gt; - Every time our warmer lambda calls other Lambda functions to make them warm, this is the number of seconds it will wait before exiting the function.&lt;br&gt;
&lt;code&gt;concurrency&lt;/code&gt; - Number of parallel calls made to our lambda function for warming them up.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#enable-warmup-for-the-lambda-function"&gt;
  &lt;/a&gt;
  Enable warmup for the lambda function
&lt;/h3&gt;

&lt;p&gt;Now we are ready to enable this warmup setting for our lambda function, here is how we can do it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;warmup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;enabled&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can just add this section to any of our lambda function which we want to warm using our warmer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#updating-our-lambda-function-to-handle-warmup-call"&gt;
  &lt;/a&gt;
  Updating our lambda function to handle warmup call
&lt;/h2&gt;

&lt;p&gt;Now we need to update the lambda function which we are warming up using the warmup plugin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;identifyImg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;serverless-plugin-warmup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;WarmUP - Lambda is warm!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lambda is warm!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//rest of the code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are just checking if this lambda got called by the warmup lambda, if that is the case we are just returning from it and exiting the lambda execution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#takeaway"&gt;
  &lt;/a&gt;
  Takeaway
&lt;/h2&gt;

&lt;p&gt;This is one of the way we can deal with lambda cold starts or prevent it, but there are many other ways to do this as well, like optimising our code, avoiding http/https calls inside our lambda functions, using provisional concurrency and many more.&lt;br&gt;
Here is the official documentation for this warmup plugin &lt;a href="https://www.npmjs.com/package/serverless-plugin-warmup"&gt;Serverless WarmUp Plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out more:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devswisdom.com/what-is-aws-artifact/"&gt;Learn about AWS Artifact&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devswisdom.com/extract-text-with-aws-textract-using-aws-step-functions/"&gt;AWS Textract and Step Functions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devswisdom.com/aws-cognito-pricing-and-features-2021/"&gt;AWS Cognito Pricing, Features&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devswisdom.com/javascript-math-floor-math-ceil-and-math-round/"&gt;Understand Math functions in Javascript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why Twilio Acquired Segment</title>
      <author>RudderStack</author>
      <pubDate>Wed, 24 Nov 2021 06:36:15 +0000</pubDate>
      <link>https://dev.to/rudderstack/why-twilio-acquired-segment-m7d</link>
      <guid>https://dev.to/rudderstack/why-twilio-acquired-segment-m7d</guid>
      <description>&lt;p&gt;Congratulations to the team at¬†Segment¬†for their massive acquisition by Twilio. From being founded in 2012 to getting acquired in 2020 (for billions) is a huge success and a testament to their team's outstanding execution.&lt;/p&gt;

&lt;p&gt;When Segment initially released¬†&lt;code&gt;analytics.js&lt;/code&gt;, it was criticized for being only marginally better than a tag manager but developers on HackerNews¬†&lt;a href="https://news.ycombinator.com/item?id=4912076/"&gt;loved the idea&lt;/a&gt;. Hence, Segment's success is also a testament to the power of the developer community on HN---hats off to everyone who supported the project, especially in the early days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#twilio-amp-segment"&gt;
  &lt;/a&gt;
  Twilio &amp;amp; Segment
&lt;/h2&gt;

&lt;p&gt;Segment recently¬†&lt;a href="https://segment.com/blog/customer-data-platform/"&gt;published a CDP report&lt;/a&gt;¬†where they shared some data around top destinations. Interestingly, the SMS &amp;amp; push category was in a distant 11th place, with only 13% of businesses leveraging those types of connections. Even more interesting is that companies like Braze &amp;amp; Customer.IO were listed within the SMS and push category, but not Twilio.&lt;/p&gt;

&lt;p&gt;In fact, Twilio was not even a top destination for Segment, which means there is very little overlap between buyers of Segment and Twilio. Or, to put it differently, people who buy Twilio don't have a significant need for Segment and vice-versa. Twilio didn't acquire to resell Segment to their existing customer base.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-why-twilio"&gt;
  &lt;/a&gt;
  So, Why Twilio?
&lt;/h2&gt;

&lt;p&gt;To a lot of people, Twilio was a surprise acquirer. Many expected Segment to be picked off by one of the usual suspects like Adobe or Salesforce. We believe a few reasons are underpinning this as a true¬†&lt;em&gt;strategic&lt;/em&gt;¬†acquisition.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-to-application-stack"&gt;
  &lt;/a&gt;
  API to Application Stack
&lt;/h3&gt;

&lt;p&gt;Twilio's Sendgrid acquisition gives us a few hints into what's happening here. Twilio was built as a platform providing telecom services over an API, and other companies build applications on top of their APIs.&lt;/p&gt;

&lt;p&gt;While Twilio has a near-complete monopoly on this API business, it is still a low-margin business where most of the money goes to gateways, providers, etc. Plus, the gateways like bandwidth.com started to compete by getting into the API business themselves.&lt;/p&gt;

&lt;p&gt;The result has been aggressive discounting, which makes it hard to compete. So, while Twilio may have the best developer tools, the nature of the core product (low margin telecom) means that customers will naturally price shop as they scale and the offering becomes more commoditized. To move away from the low-margin API business Twilio needs to go higher up the stack and build¬†&lt;em&gt;applications&lt;/em&gt;¬†to move away from the low-margin API business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#endtoend-marketing-cloud"&gt;
  &lt;/a&gt;
  End-to-End Marketing Cloud
&lt;/h3&gt;

&lt;p&gt;The demand for messaging in marketing automation products has grown significantly and is only growing, so it is natural for Twilio to go after the marketing use case.&lt;/p&gt;

&lt;p&gt;They already owned the SMS/push channel, and their Sendgrid acquisition covered the email channel. In full form, though, the marketing use case requires data collection and audience building in addition to messaging.&lt;/p&gt;

&lt;p&gt;The Segment acquisition gives Twilio the missing half of the equation and will allow them to build a unified marketing platform. Perhaps most importantly, Twilio has the ability to reinvent significant pieces of the marketing cloud as API-first, which would give them a foot in the door to the market currently owned by Adobe, which has a $250 billion market cap.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-sandwich"&gt;
  &lt;/a&gt;
  The Sandwich
&lt;/h3&gt;

&lt;p&gt;This is probably the most interesting impact of the acquisition: instead of sitting towards the¬†&lt;em&gt;end&lt;/em&gt;¬†of the stack as an API endpoint, Twilio has bought a seat in the extreme¬†&lt;em&gt;front seat&lt;/em&gt;¬†of the stack. Not only will this give them significant insight into what is being used effectively in the market amongst a plethora of tools, but it could potentially enable Twilio to build/buy the important verticals that are considered indispensable but are missing from their stack. This could--- and should---make some of the Segment's partners wary.&lt;/p&gt;

&lt;p&gt;This isn't a new dynamic, as many companies in the ecosystem have already developed a healthy distrust of Segment, and now Twilio, along with their roadmaps and product ambitions. Amplitude and Braze are examples of the many products sitting downstream of Segment that will now feel the increasing pressure of "the sandwich." As a result, we wouldn't be surprised if Twilio continues to add more of the "missing middle" components of the marketing stack, most likely through acquisitions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ambitious-jeff"&gt;
  &lt;/a&gt;
  Ambitious Jeff
&lt;/h3&gt;

&lt;p&gt;Jeff is now interested in building a truly iconic business such as Salesforce, and Wall Street has given him the checkbook to do M&amp;amp;A. Twilio's stock price has rapidly climbed from $100 to $300 in the last 6 months.&lt;/p&gt;

&lt;p&gt;We have heard that Segment is at approximately $150M ARR, and given Twilio's current EV/ARR multiple of approximately 25x, Twilio will add about $3B-5B in market capitalization, making this a solid acquisition in terms of the basic exchange of value.&lt;/p&gt;

&lt;p&gt;Moreover, Twilio's margins in their core business are arguably lower than Segment. We have also observed that Segment is struggling to make the transition to both enterprises as well as build a product beyond the pipe that has meaningful traction. All in all, we believe this is a win for both parties involved. Jeff is well on his way to building a once-in-a-lifetime business.&lt;/p&gt;

&lt;p&gt;So once again,¬†congratulations to Segment¬†and everyone involved. We have a huge amount of respect for what their team has accomplished and for such a smart acquisition by Twilio.&lt;/p&gt;

&lt;p&gt;Also, not to state the obvious, but if you're interested in an¬†&lt;a href="http://www.rudderstack.com/"&gt;open-source alternative to Segment&lt;/a&gt;, we'd love to talk. üôÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-free-and-start-sending-data"&gt;
  &lt;/a&gt;
  Sign up for Free and Start Sending Data
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT, and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.¬†&lt;a href="https://app.rudderlabs.com/signup?type=freetrial/"&gt;Get started&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>segment</category>
      <category>acquisition</category>
      <category>cdp</category>
    </item>
    <item>
      <title>Nick Salzano- Technology and its Impacts on Sports Industry's Marketing </title>
      <author>Nicholas Salzano</author>
      <pubDate>Wed, 24 Nov 2021 06:29:06 +0000</pubDate>
      <link>https://dev.to/nicholassalzano_/nick-salzano-technology-and-its-impacts-on-sports-industrys-marketing-826</link>
      <guid>https://dev.to/nicholassalzano_/nick-salzano-technology-and-its-impacts-on-sports-industrys-marketing-826</guid>
      <description>&lt;p&gt;Nick Salzano, a marketer from the USA, has deliberately explained the impacts of Technology on the sports industry's marketing efforts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-salzano.com/"&gt;Nick Salzano&lt;/a&gt; Digital time has worked on significant cycles in an assortment of sectors throughout the globe. The games business is the same, with innovation-driven administrations upsetting important parts of correspondence, specifically advertising. &lt;/p&gt;

&lt;p&gt;These days, convincing efforts, promotions, and general correspondence uses innovation to guarantee that fans and clients are by and large appropriately adjusted and designated regardless of how they decide to lock in. &lt;/p&gt;

&lt;p&gt;This takes sports advertising to a unique degree of viability, improving how sports and their allies cooperate.&lt;/p&gt;

&lt;p&gt;Artificial Intelligence is being utilized wherever in the games business; regardless of whether it's for evaluating individual player exhibitions, following competitors well being, or doing the math for significant exploring occasions, there is no lack of AI impact in sports. Moreover, regarding drawing in fans, the chat-bot innovation set forward by AI assumes a significant part. &lt;/p&gt;

&lt;p&gt;Here, sports brands, associations, and establishments can dive more deeply into their allies by giving positive virtual encounters which answer fans various forms of feedback. For instance, with regards to games, fans get customized notices through chat-bots on everything from ticket drops to game-day convention and significantly more. &lt;/p&gt;

&lt;p&gt;These menial helpers impart an increased feeling of dependability and commitment in fans no matter how you look at it while additionally making client support processes more advantageous. &lt;/p&gt;

&lt;p&gt;Inside the previous decade, sports inclusion has progressed significantly. It is presently normal to see fans observing live games with the assistance of a real-time feature that conveys all the activity directly to their cell phone. This sort of sports seeing permits individuals tune into high-profile rivalries regardless of their actual area. &lt;/p&gt;

&lt;p&gt;Nick Salzano says, the rising prevalence of this pattern implies that advertising strategies likewise need to consider live streaming watchers rather than conventional TV customers. &lt;/p&gt;

&lt;p&gt;According to Nick Salzano, Social media campaigns additionally spin out of control in the games business. As cell phone innovation keeps on propelling, significant play-makers in sports are focusing on versatile clients above whatever else. &lt;/p&gt;

&lt;p&gt;This implies that brands are setting up their administrations to incorporate convincing tales about groups and players that get individuals talking. Here, top competitors are additionally highlighted in essential missions to command crowd notice rapidly. &lt;/p&gt;

&lt;p&gt;All things considered, when online media is utilized successfully, it even can build deals.&lt;/p&gt;

&lt;p&gt;For instance, on Instagram, cooperating with a broad client base is just conceivable with countless adherents. Along these lines, if sports brands need to extend their impact, it isn't enough to use portable innovation; they should likewise look to the procedures behind online media advertising. &lt;/p&gt;

&lt;p&gt;Many committed avid supporters are likewise eager games bettors. Setting bets in sports groups and players has a method of improving the game-day experience. &lt;/p&gt;

&lt;p&gt;Major sports-books in the business know this, and that is why showcasing strategies have moved as a rule to on the web and portable missions. To fit with the digital times, driving brands in sports wagering are utilizing innovation for their potential benefit, executing offers, for example, joining rewards or advancements to draw in new and existing clients. &lt;/p&gt;

&lt;p&gt;The primary part of promoting sports is the associations, associations, and substances that are straightforwardly engaged with the actual business. Sports advertising gives a unique chance to organizations, like associations and groups, to have many people watching them work on an everyday premise. &lt;/p&gt;

&lt;p&gt;Associations and brands gain public openness through their quality on organization and digital TV and the holds of being a fan. Think about all of the guerrilla promoting that associations and groups can achieve through selling fan products and making their logos wearable and apparent to the majority. &lt;/p&gt;

&lt;p&gt;Nick Salzano explains, social researchers contend that the ties one structures in their childhood are more grounded than those shaped sometime down the road and harder to shed. Sports advertisers comprehend the significance of acquiring young fans and how this brand mindfulness can proceed forever. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Also explore this blog:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://dev.to/nicholassalzano_/nicholas-salzano-explaining-marketing-myths-that-you-should-need-to-know-55ah"&gt;Marketing Myths that you Should Need to Know&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Publicizing of associations and groups is incorporated in occasions like the World Cup and NCAA Tournament. Occasions like these frequently weighed down with supports (well cover those underneath) are standard approaches to grandstand various groups, individual players, and up the game's ante to draw the consideration of more watchers. &lt;/p&gt;

&lt;p&gt;The capacity of associations and groups to advance themselves through occasions, media inclusion, and hence the accompanying armies of fans sets out gigantic independence from the rat race for these elements to acquire income through such outlets as TV bargains and the deals of tickets and product. &lt;/p&gt;

&lt;p&gt;There are no indications of the fascination of the universe with sports dialling back at any point shortly, and the field of sports advertising will keep on having many chances for promoting experts to bounce in and try things out. &lt;/p&gt;

&lt;p&gt;Sports broadcasting offers freedom to chip away at a wide range of sides of a flourishing industry and will give another arrangement of difficulties for experienced advertisers who haven't been given a chance to sports any idea ahead of time. &lt;/p&gt;

&lt;p&gt;Twitter, alongside numerous Facebook and Instagram, has situated itself as an essential source to every one of the vast people inside the games promoting market: associations, groups, gamers, fans, and donning exercises journalists. &lt;/p&gt;

&lt;p&gt;Twitter considers basic and brief availability to sports data on a smoothed out stage. &lt;/p&gt;

&lt;p&gt;It has become a typical method for group records to transfer constant computer game reports on Twitter. Considering hashtags, gifs, and general media material, data just as delight is winding up being considered a more significant amount of precisely the same thing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/NicholasSalzan_"&gt;Nick Salzano&lt;/a&gt; says, consolidating social media sites programs into your business image missions would give your advertisers power. It has allowed the games area to wind up being instilled directly into people's daily existence. &lt;/p&gt;

&lt;p&gt;When your image accomplishes this, you are accomplishing something beyond customary web-based publicizing. However, you are likewise setting an enduring and fruitful picture of your vision and administrations to individuals. &lt;/p&gt;

&lt;p&gt;It is usual for proficient competitors to have particular web-based media sites autonomous from their gatherings accounts. Fans can follow their favored competitors just as they associate with them in techniques like never under any circumstance previously. &lt;/p&gt;

&lt;p&gt;This can also help adapt proficient competitors, who are celebrated as optimal creatures, just as make them more appealing to the everyday person.&lt;/p&gt;

</description>
      <category>nickakanicholassalzano</category>
      <category>nicksalzano</category>
      <category>nicholassalzano</category>
      <category>nicksalzanonewyork</category>
    </item>
  </channel>
</rss>
