<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>WILL PYTHON EVER RULE THE WORLD?</title>
      <author>Rocky</author>
      <pubDate>Tue, 13 Jul 2021 05:01:21 +0000</pubDate>
      <link>https://dev.to/codelivly/will-python-ever-rule-the-world-3ma0</link>
      <guid>https://dev.to/codelivly/will-python-ever-rule-the-world-3ma0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Will python rule the world&lt;/strong&gt;&lt;span&gt;&lt;span&gt;: As you know that there are a lot of programming languages are available.Certain languages solve certain problems but all languages cannot solve all  the problems  but here  Python comes .According to the experts of programming languages , &lt;/span&gt;&lt;a href="https://www.codelivly.com/what-is-python-basis-of-python-explained/"&gt;&lt;span&gt;Python&lt;/span&gt;&lt;/a&gt;&lt;span&gt; will be the future of Programming if it continued gaining popularity at this pace  seeming the future of programming languages .As Python has many benefits as explained below . In the article  below I am going to tell that “Will Python Programming Ever Rule the Programming World” or what are the reasons that Python can become the leading future programming language . &lt;/span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/will-python-ever-rule-the-world/"&gt;&lt;span&gt;READ More&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Enforce Husky Pre-Commit With ESLint &amp; Prettier In Monorepo</title>
      <author>Usman Khalil</author>
      <pubDate>Tue, 13 Jul 2021 04:25:17 +0000</pubDate>
      <link>https://dev.to/monfernape/enforce-husky-pre-commit-with-eslint-prettier-in-monorepo-55jc</link>
      <guid>https://dev.to/monfernape/enforce-husky-pre-commit-with-eslint-prettier-in-monorepo-55jc</guid>
      <description>&lt;p&gt;Okay, this kept me frustrated for a whole week because I suck at configurations at many levels. But thankfully, I've now closed my 16 chrome tabs and writing this out to make sure you don't have to face the same exact problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;When different developers work on the same codebase, it becomes necessary to enforce some rules to keep code in check. ESLint and Prettier go hand in hand for this purpose in most of JS projects and integration support is widely available. &lt;/p&gt;

&lt;p&gt;Finally husky is library that allows us trigger actions before committing or pushing. It provides git hooks for this purpose. I'll navigate it to in a minute.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem Statement
&lt;/h2&gt;

&lt;p&gt;The problem that I faced here was that my project was built like a monorepo. It has frontend, backend and library folders in it. In order to use husky git hooks, they are to be placed in the directory where git is placed.&lt;/p&gt;

&lt;p&gt;But then again, for husky to work, it needs to utilize package.json file. This issue had me rolling for days. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;I'll navigate step by step from installing husky to committing the code. This might takes quite a few commands, so please bear with me.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-husky"&gt;
  &lt;/a&gt;
  Installing husky
&lt;/h4&gt;

&lt;p&gt;In the root folder of the repo where git resides, run following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx husky install
npx husky add .husky/pre-commit "npm test"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a &lt;code&gt;.husky&lt;/code&gt; folder in the root directory with &lt;code&gt;pre-commit&lt;/code&gt; file in it. This file would have a single command npm test in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npm test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's leave it for now and move to next step.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-linters"&gt;
  &lt;/a&gt;
  Installing Linters
&lt;/h4&gt;

&lt;p&gt;Go to your frontend project and install eslint, husky and prettier with the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install husky lint-staged eslint-plugin-prettier eslint-config-prettier --save-dev
npm install --save-dev --save-exact prettier
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--save-dev&lt;/code&gt; keeps these libraries in &lt;code&gt;devDependencies&lt;/code&gt; because they won't be used in production and are here for development only.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-linters"&gt;
  &lt;/a&gt;
  Configuring Linters:
&lt;/h3&gt;

&lt;p&gt;We'll be creating few files to let our linters know how they would be working across the project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;.estlintignore&lt;/code&gt; and &lt;code&gt;.prettierignore&lt;/code&gt; files and place the following code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;build
node_modules
.github
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will inform our linters not to look into files in the above mentioned directories&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now we'll be adding few configurations for estlint. Create a file &lt;code&gt;.eslintrc.js&lt;/code&gt; with this code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    env: {
        browser: true,
        es6: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:react/recommended',
        'plugin:react-hooks/recommended',
        'plugin:prettier/recommended',
        'plugin:jsx-a11y/strict',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 2018,
        sourceType: 'module',
    },
    plugins: ['react', 'jsx-a11y', '@typescript-eslint'],
    rules: {
        'react-hooks/exhaustive-deps': 'error',
        'no-var': 'error',
        'brace-style': 'error',
        'prefer-template': 'error',
        radix: 'error',
        'space-before-blocks': 'error',
        'import/prefer-default-export': 'off',
    },
    overrides: [
        {
            files: [
                '**/*.test.js',
                '**/*.test.jsx',
                '**/*.test.tsx',
                '**/*.spec.js',
                '**/*.spec.jsx',
                '**/*.spec.tsx',
            ],
            env: {
                jest: true,
            },
        },
    ],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And finally the configuration for prettier. Add a file &lt;code&gt;.prettierrc.js&lt;/code&gt; and put the following code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
    printWidth: 100,
    tabWidth: 2,
    singleQuote: true,
    semi: true,
    trailingComma: 'all',
    arrowParens: "always",
    overrides: [
        {
            files: '*.{js,jsx,tsx,ts,scss,json,html}',
            options: {
                tabWidth: 4,
            },
        },
    ],
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#setting-up-packagejson"&gt;
  &lt;/a&gt;
  Setting Up Package.json
&lt;/h4&gt;

&lt;p&gt;We're almost there and now we'll have to add few scripts to package.json. I'll guide you about their purpose along the way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the following line in the scripts section:
&lt;code&gt;"prepare": "cd .. &amp;amp;&amp;amp; husky install frontend/.husky"&lt;/code&gt;
&lt;code&gt;npm prepare&lt;/code&gt; command runs before we commit our code. What essentially we're doing here is that we are moving out of frontend directory and installing husky in the front-end. &lt;/li&gt;
&lt;li&gt;Now we need to add our linting configuration governed by &lt;code&gt;lint-staged&lt;/code&gt;. Place the following code after scripts section:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"lint-staged": {
        "*.{js,ts,tsx, jsx}": [
            "eslint --quiet --fix"
        ],
        "*.{json,md,html,js,jsx,ts,tsx}": [
            "prettier --write"
        ]
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We've written the extensions of the files eslint and prettier would be amending.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Finally, we'll be adding a script that would invoke linting. Add this line in your scripts:&lt;br&gt;
&lt;code&gt;"lint-front": "lint-staged"&lt;/code&gt;&lt;br&gt;
Running &lt;code&gt;npm run lint-front&lt;/code&gt; would trigger linting our application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's just inform our husky to run &lt;code&gt;npm run lint-front&lt;/code&gt; before commit. Go to the husky folder in the project root and replace pre-commit file with this code:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

cd frontend
npm run lint-frontend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything followed correctly, making a commit would trigger linting. That's the end of it. Hope this helps someone. If you are still having issue, do mention the comments. I'd be more than happy to help.&lt;/p&gt;

</description>
      <category>git</category>
      <category>react</category>
    </item>
    <item>
      <title>Amazon S3 - Introduction Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 13 Jul 2021 04:22:02 +0000</pubDate>
      <link>https://dev.to/this-is-learning/amazon-s3-introduction-hands-on-42di</link>
      <guid>https://dev.to/this-is-learning/amazon-s3-introduction-hands-on-42di</guid>
      <description>&lt;p&gt;We studied about AWS S3 in the last tutorial now we study how we can add, delete objects in our S3 bucket. Lets move right into it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go the AWS Console Dashboard search for S3 and select it.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0g_OFKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nj7n4e3vtgpnn9hfda49.png" alt="s3 search"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This will land you on the S3 console. Select create bucket on it&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dw3FR6r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssbizxuotvlku7emtfv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dw3FR6r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssbizxuotvlku7emtfv8.png" alt="S3-2"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select Bucket name and bucket region, remember bucket name has to be unique. Although AWS S3 is a global service but buckets belong to a specific region. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't change the block all public access setting its about permissions and we will study about permissions to a bucket later on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hD0Zy-dD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs7cdvta6cgxiv0jr2m3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hD0Zy-dD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs7cdvta6cgxiv0jr2m3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then there is bucket versioning if this is enabled we can version our objects. So that the old data is not lost. We disable it for now. To keep this tutorial simple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add tags as you want you can add tags to identify what this bucket is for. Lets learn about encryption and advanced settings later on. Click create bucket.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ3pTaW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2g02ik94wzysrrig80h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJ3pTaW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2g02ik94wzysrrig80h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now let us upload some assets on this bucket. To upload click on the bucket. You will se an upload button, click it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ot19XLQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxjmn38852d97bxh0jp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ot19XLQs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hyxjmn38852d97bxh0jp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5q-nrUXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74vw5b4yloo7y10bwqa2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5q-nrUXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74vw5b4yloo7y10bwqa2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here you can add files by clicking the add files button. After that select a file and click upload.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wS3Yh5Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1brofwyq1ggfvrkmqjyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wS3Yh5Gs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1brofwyq1ggfvrkmqjyw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rPRPaYUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqme7j5h66w87motsx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rPRPaYUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1sqme7j5h66w87motsx8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will see the following screen. Once upload is completed click close. We have uploaded a file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjBo0hkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo4ee986395yq6ikfx8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjBo0hkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qo4ee986395yq6ikfx8t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the S3 object. Click on the object URL. You will se an access denied page. So how we see the contents of our page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yCJrzW0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cwppnknk8rcyty92eeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCJrzW0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7cwppnknk8rcyty92eeu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On top there is an open button click on it and you can see the contents of the file. So, why does this link works and the earlier one didn't because when we click the open button at the top we are given a url that has no security and has some params which bypass the security. By default all our S# objects are not public. So a public url does not work we have to assign permissions to S3 objects by bucket permissions which we will check later on.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvehMpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv4zjg2zvj6fcbq0qqiw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFkXMse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pajltq95yp14u17cy6mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzFkXMse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pajltq95yp14u17cy6mo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's delete this object. Go to the bucket select the object and click delete.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6hgQfDbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwco4rt4j67otkzdd2wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6hgQfDbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwco4rt4j67otkzdd2wb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Type permanently delete to delete the object and click delete objects. Click close on next screen after deletion is completed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qEo4mkms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o6sfat96ivp23152wd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEo4mkms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o6sfat96ivp23152wd4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ruyzxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd98vpbqsvs6s1y2d5wy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ruyzxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd98vpbqsvs6s1y2d5wy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now our bucket is empty. This is it for this tutorial.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8PIKfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jktq7yt8iqute05kz9d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oW8PIKfl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jktq7yt8iqute05kz9d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We added and deleted objects in AWS S3 in the next section we will study about permissions and bucket versioning.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>JavaScript Question #Day 2</title>
      <author>Sooraj S</author>
      <pubDate>Tue, 13 Jul 2021 04:09:15 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-2-102j</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-2-102j</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;0 1 2&lt;/code&gt; and &lt;code&gt;0 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;0 1 2&lt;/code&gt; and &lt;code&gt;3 3 3&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;3 3 3&lt;/code&gt; and &lt;code&gt;0 1 2&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;p&gt;Because of the event queue in JavaScript, the &lt;code&gt;setTimeout&lt;/code&gt; callback function is called &lt;em&gt;after&lt;/em&gt; the loop has been executed. Since the variable &lt;code&gt;i&lt;/code&gt; in the first loop was declared using the &lt;code&gt;var&lt;/code&gt; keyword, this value was global. During the loop, we incremented the value of &lt;code&gt;i&lt;/code&gt; by &lt;code&gt;1&lt;/code&gt; each time, using the unary operator &lt;code&gt;++&lt;/code&gt;. By the time the &lt;code&gt;setTimeout&lt;/code&gt; callback function was invoked, &lt;code&gt;i&lt;/code&gt; was equal to &lt;code&gt;3&lt;/code&gt; in the first example.&lt;/p&gt;

&lt;p&gt;In the second loop, the variable &lt;code&gt;i&lt;/code&gt; was declared using the &lt;code&gt;let&lt;/code&gt; keyword: variables declared with the &lt;code&gt;let&lt;/code&gt; (and &lt;code&gt;const&lt;/code&gt;) keyword are block-scoped (a block is anything between &lt;code&gt;{ }&lt;/code&gt;). During each iteration, &lt;code&gt;i&lt;/code&gt; will have a new value, and each value is scoped inside the loop.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>webdev</category>
    </item>
    <item>
      <title>JavaScript questions #Day 1</title>
      <author>Sooraj S</author>
      <pubDate>Tue, 13 Jul 2021 03:57:16 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-questions-day-1-48oh</link>
      <guid>https://dev.to/soorajs98/javascript-questions-day-1-48oh</guid>
      <description>&lt;p&gt;&lt;strong&gt;1.  What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lydia&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A: Lydia and undefined&lt;br&gt;
B: Lydia and ReferenceError&lt;br&gt;
C: ReferenceError and 21&lt;br&gt;
D: undefined and ReferenceError&lt;/p&gt;

&lt;p&gt;Within the function, we first declare the name variable with the var keyword. This means that the variable gets hoisted (memory space is set up during the creation phase) with the default value of undefined, until we actually get to the line where we define the variable. We haven't defined the variable yet on the line where we try to log the name variable, so it still holds the value of undefined.&lt;/p&gt;

&lt;p&gt;Variables with the let keyword (and const) are hoisted, but unlike var, don't get initialized. They are not accessible before the line we declare (initialize) them. This is called the "temporal dead zone". When we try to access the variables before they are declared, JavaScript throws a ReferenceError.So answer is D.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>🎯How To Stay Focused While Coding?</title>
      <author>Chetan Atrawalkar👉CA.</author>
      <pubDate>Tue, 13 Jul 2021 03:43:44 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/how-to-stay-focused-while-coding-538b</link>
      <guid>https://dev.to/chetan_atrawalkar/how-to-stay-focused-while-coding-538b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLOO_NuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2n81chytk3vnd4na6q61.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLOO_NuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2n81chytk3vnd4na6q61.gif" alt="Stay focused"&gt;&lt;/a&gt;&lt;br&gt;
Every developers loves to code. It is one of the most basic parts of the job but many developer struggle with focusing and staying on task. Here's some tips to help for stay focused while coding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Keep Your Desk Clean&lt;/strong&gt;&lt;br&gt;
There are a number of benefits that come from keeping a clean desk.&lt;br&gt;
• Improve mental stability&lt;br&gt;
• Increase productivity&lt;br&gt;
• More likely to sleep better&lt;br&gt;
• Improve focus&lt;br&gt;
• Reduce stress&lt;br&gt;
• Clean desk equals fewer sick days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Learn To Manage Stress&lt;/strong&gt;&lt;br&gt;
Everyone experiences stress at daily lives. However, It's important to learn manage stress and it's more helpful to improve their health and mood, And everyone knows good mood good productivity. As well as help to boosting their immune system. &lt;br&gt;
&lt;strong&gt;👇For More Tips check post👇&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/chetan_atrawalkar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yhrzVZep--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xRKSv-Yz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/655054/eab1b96a-fcd5-459c-81a6-8bc334e62b19.gif" alt="chetan_atrawalkar"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/chetan_atrawalkar/how-to-avoid-stress-during-coding-56f1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🤔How to avoid stress during coding? &lt;/h2&gt;
      &lt;h3&gt;Chetan Atrawalkar👉CA. ・ Jun 26 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. Practice Meditation And Mindfulness&lt;/strong&gt; &lt;br&gt;
Meditation and Mindfulness can help programmers to stay focus and reduce stress, and help create new neuronal pathways in the brain. Meditating can change the structure and function of the brain through relaxation, which can:&lt;/p&gt;

&lt;p&gt;• Reduce stress, anxiety, and depression&lt;br&gt;
• Increase focus and learning concentration&lt;br&gt;
• Improve memory and attention span&lt;br&gt;
• Build stronger immune system and greater physical or psychological resilience&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Listen Music When You Work&lt;/strong&gt;&lt;br&gt;
Music can help to keep the brain alert and prevent it from switching off.&lt;br&gt;
Music can also be a motivator. If someone listens to epic soundtracks while working, they might be inspired to complete a big project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Separate Your Code And Your Life&lt;/strong&gt;&lt;br&gt;
When your coding life is balanced, you will feel happier and more productive.&lt;br&gt;
There are many reasons why separating your code and your life is so important.&lt;br&gt;
• To maintain your mental health.&lt;br&gt;
• Separating your personal life from your coding life can also increase your work productivity.&lt;br&gt;
• More Relaxation and Less Burnout.&lt;br&gt;
• Never Miss Out Memorable Moments of Life.&lt;br&gt;
• Improve Overall Health and Well-being&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Turn Off Social Media Notification&lt;/strong&gt;&lt;br&gt;
If your work does not require you to be online on social media platforms because while working social media notification distract you. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🤔What Do You Think?&lt;/strong&gt;&lt;br&gt;
I hope you like this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;😎Keep Focused And Just Code It!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>career</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Writing an Assembler in Rust, and How I'm Redoing the Lexer</title>
      <author>Ashton Scott Snapp</author>
      <pubDate>Tue, 13 Jul 2021 02:33:14 +0000</pubDate>
      <link>https://dev.to/ashtonsnapp/writing-an-assembler-in-rust-and-how-i-m-redoing-the-lexer-51eb</link>
      <guid>https://dev.to/ashtonsnapp/writing-an-assembler-in-rust-and-how-i-m-redoing-the-lexer-51eb</guid>
      <description>&lt;p&gt;I've continued work on the assembler I've been working on. I finished the Lexer, got it to compile, ran it, tested it, and found that the lexer just did not work. Luckily, I found a crate called &lt;code&gt;logos&lt;/code&gt; that helps you make a fast lexer, which I'm using in order to re-do the lexer.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AshtonSnapp"&gt;
        AshtonSnapp
      &lt;/a&gt; / &lt;a href="https://github.com/AshtonSnapp/chasm"&gt;
        chasm
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Official Cellia Cross-Assembler for Modern Computers
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
chasm&lt;/h1&gt;
&lt;p&gt;The Official Cellia Cross-Assembler for Modern Computers&lt;/p&gt;
&lt;h2&gt;
Building chasm&lt;/h2&gt;
&lt;p&gt;Clone this repository to your local machine, &lt;code&gt;cd&lt;/code&gt; into the chasm directory, and run &lt;code&gt;cargo build&lt;/code&gt;. Simple!&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AshtonSnapp/chasm"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;As of right now, I am writing some callback functions. Specifically, I'm writing the one responsible for handling character immediates (immediate in the sense that the processor doesn't have to fetch an address then fetch the value from that address, it just has to fetch the value). This is being done via a giant match statement. Here's basically what the code for this function looks like right now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;Lexer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;u8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lex&lt;/span&gt;&lt;span class="nf"&gt;.slice&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;poss_char&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;slice&lt;/span&gt;&lt;span class="nf"&gt;.len&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c"&gt;// Welcome to hell.&lt;/span&gt;

    &lt;span class="k"&gt;match&lt;/span&gt; &lt;span class="n"&gt;poss_char&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x00&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x01&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x02&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x03&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x04&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x05&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x06&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x07&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x08&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x09&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x0F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x10&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x11&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x12&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x13&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x14&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x15&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x16&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x17&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x18&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x19&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x1F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x20&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x21&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x22&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x23&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x24&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x25&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x26&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x27&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x28&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x29&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x2F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x30&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x31&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x32&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x33&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x34&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x35&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x36&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x37&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x38&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x39&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;62&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x3F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x40&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x41&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x42&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x43&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x44&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x45&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x46&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x47&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x48&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x49&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x4F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;79&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x50&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x51&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x52&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x53&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x54&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x55&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x56&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x57&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;87&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x58&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x59&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;93&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x5F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x60&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x61&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x62&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x63&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x64&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x65&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x66&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x67&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x68&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;104&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x69&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;107&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;108&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;109&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x6F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x70&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;112&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x71&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;113&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x72&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;114&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x73&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x74&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;116&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x75&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;117&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x76&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;118&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x77&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x78&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x79&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7A&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7B&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7C&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;124&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7D&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7E&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;126&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\x7F&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="mi"&gt;_&lt;/span&gt; &lt;span class="k"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;(())&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes. I had to write all of that. Because I can't really guarantee that whoever's using the assembler has Unicode support in their program. That whole function was painful to write. At least now, all I have to write in terms of callback functions are the ones for character escape sequences, strings, addresses, immediates, identifiers (labels and symbols), and actual instruction mnemonics. (Also, need to stop trying to &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;S&lt;/code&gt; while using a browser)&lt;/p&gt;

</description>
      <category>rust</category>
      <category>assembler</category>
    </item>
    <item>
      <title>Responsive Login Form Create using HTML &amp; CSS</title>
      <author>freelancer soyel</author>
      <pubDate>Tue, 13 Jul 2021 01:56:32 +0000</pubDate>
      <link>https://dev.to/mirsoyel/responsive-login-form-create-using-html-css-2949</link>
      <guid>https://dev.to/mirsoyel/responsive-login-form-create-using-html-css-2949</guid>
      <description>&lt;p&gt;Hello readers, today in this vdieo we will learn how to create Responsive login form using HTML and CSS. You easily create this login form using HTML &amp;amp; CSS by follow these tutorials and steps. You will build this awesome login form design by just following this video tutorial or these steps which i given bellow. In addition, common HTML and CSS programming codes have been used. It is designed in a completely modern way.&lt;/p&gt;

&lt;p&gt;Some information about this login form&lt;/p&gt;

&lt;p&gt;This Login form design, which uses beautiful colors &amp;amp; image has gained the best of beauty. On this design, there is show on full web page. there are left side two images and right side login form with avator icon.&lt;/p&gt;

&lt;p&gt;You can copy the codes from the given boxes or download the code files from the given link but I recommend you to download the source code files instead of copying codes. &lt;a href="https://codecary.com/responsive-login-form-design-using-css/"&gt;Click here to download code files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML CODE:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img class="wave" src="https://i.postimg.cc/sDG8zyXM/wave.png"&amp;gt;
&amp;lt;div class="container"&amp;gt;
  &amp;lt;div class="img"&amp;gt;
    &amp;lt;img src="https://svgshare.com/i/JcM.svg"&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class="login-content"&amp;gt;
    &amp;lt;form action="index.html"&amp;gt;
      &amp;lt;img src="https://svgshare.com/i/Jcf.svg"&amp;gt;
      &amp;lt;h2 class="title"&amp;gt;Welcome&amp;lt;/h2&amp;gt;
      &amp;lt;div class="input-div one"&amp;gt;
        &amp;lt;div class="i"&amp;gt;
          &amp;lt;i class="fas fa-user"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="div"&amp;gt;
          &amp;lt;h5&amp;gt;Username&amp;lt;/h5&amp;gt;
          &amp;lt;input type="text" class="input"&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class="input-div pass"&amp;gt;
        &amp;lt;div class="i"&amp;gt;
          &amp;lt;i class="fas fa-lock"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="div"&amp;gt;
          &amp;lt;h5&amp;gt;Password&amp;lt;/h5&amp;gt;
          &amp;lt;input type="password" class="input"&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;a href="#"&amp;gt;Forgot Password?&amp;lt;/a&amp;gt;
      &amp;lt;input type="submit" class="btn" value="Login"&amp;gt;
    &amp;lt;/form&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;CSS CODE:&lt;/p&gt;

&lt;p&gt;body {&lt;br&gt;
  font-family: "Poppins", sans-serif;&lt;br&gt;
  overflow: hidden;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.wave {&lt;br&gt;
  position: fixed;&lt;br&gt;
  bottom: 0;&lt;br&gt;
  left: 0;&lt;br&gt;
  height: 100%;&lt;br&gt;
  z-index: -1;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.container {&lt;br&gt;
  width: 100vw;&lt;br&gt;
  height: 100vh;&lt;br&gt;
  display: grid;&lt;br&gt;
  grid-template-columns: repeat(2, 1fr);&lt;br&gt;
  grid-gap: 7rem;&lt;br&gt;
  padding: 0 2rem;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.img {&lt;br&gt;
  display: flex;&lt;br&gt;
  justify-content: flex-end;&lt;br&gt;
  align-items: center;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.login-content {&lt;br&gt;
  display: flex;&lt;br&gt;
  justify-content: flex-start;&lt;br&gt;
  align-items: center;&lt;br&gt;
  text-align: center;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.img img {&lt;br&gt;
  width: 500px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;form {&lt;br&gt;
  width: 360px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.login-content img {&lt;br&gt;
  height: 100px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.login-content h2 {&lt;br&gt;
  margin: 15px 0;&lt;br&gt;
  color: #333;&lt;br&gt;
  text-transform: uppercase;&lt;br&gt;
  font-size: 2.9rem;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.login-content .input-div {&lt;br&gt;
  position: relative;&lt;br&gt;
  display: grid;&lt;br&gt;
  grid-template-columns: 7% 93%;&lt;br&gt;
  margin: 25px 0;&lt;br&gt;
  padding: 5px 0;&lt;br&gt;
  border-bottom: 2px solid #d9d9d9;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.login-content .input-div.one {&lt;br&gt;
  margin-top: 0;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.i {&lt;br&gt;
  color: #d9d9d9;&lt;br&gt;
  display: flex;&lt;br&gt;
  justify-content: center;&lt;br&gt;
  align-items: center;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.i i {&lt;br&gt;
  transition: 0.3s;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div &amp;gt; div {&lt;br&gt;
  position: relative;&lt;br&gt;
  height: 45px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div &amp;gt; div &amp;gt; h5 {&lt;br&gt;
  position: absolute;&lt;br&gt;
  left: 10px;&lt;br&gt;
  top: 50%;&lt;br&gt;
  transform: translateY(-50%);&lt;br&gt;
  color: #999;&lt;br&gt;
  font-size: 18px;&lt;br&gt;
  transition: 0.3s;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div:before,&lt;br&gt;
.input-div:after {&lt;br&gt;
  content: "";&lt;br&gt;
  position: absolute;&lt;br&gt;
  bottom: -2px;&lt;br&gt;
  width: 0%;&lt;br&gt;
  height: 2px;&lt;br&gt;
  background-color: #38d39f;&lt;br&gt;
  transition: 0.4s;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div:before {&lt;br&gt;
  right: 50%;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div:after {&lt;br&gt;
  left: 50%;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div.focus:before,&lt;br&gt;
.input-div.focus:after {&lt;br&gt;
  width: 50%;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div.focus &amp;gt; div &amp;gt; h5 {&lt;br&gt;
  top: -5px;&lt;br&gt;
  font-size: 15px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div.focus &amp;gt; .i &amp;gt; i {&lt;br&gt;
  color: #38d39f;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div &amp;gt; div &amp;gt; input {&lt;br&gt;
  position: absolute;&lt;br&gt;
  left: 0;&lt;br&gt;
  top: 0;&lt;br&gt;
  width: 100%;&lt;br&gt;
  height: 100%;&lt;br&gt;
  border: none;&lt;br&gt;
  outline: none;&lt;br&gt;
  background: none;&lt;br&gt;
  padding: 0.5rem 0.7rem;&lt;br&gt;
  font-size: 1.2rem;&lt;br&gt;
  color: #555;&lt;br&gt;
  font-family: "poppins", sans-serif;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.input-div.pass {&lt;br&gt;
  margin-bottom: 4px;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;a {&lt;br&gt;
  display: block;&lt;br&gt;
  text-align: right;&lt;br&gt;
  text-decoration: none;&lt;br&gt;
  color: #999;&lt;br&gt;
  font-size: 0.9rem;&lt;br&gt;
  transition: 0.3s;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;a:hover {&lt;br&gt;
  color: #38d39f;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;.btn {&lt;br&gt;
  display: block;&lt;br&gt;
  width: 100%;&lt;br&gt;
  height: 50px;&lt;br&gt;
  border-radius: 25px;&lt;br&gt;
  outline: none;&lt;br&gt;
  border: none;&lt;br&gt;
  background-image: linear-gradient(to right, #32be8f, #38d39f, #32be8f);&lt;br&gt;
  background-size: 200%;&lt;br&gt;
  font-size: 1.2rem;&lt;br&gt;
  color: #fff;&lt;br&gt;
  font-family: "Poppins", sans-serif;&lt;br&gt;
  text-transform: uppercase;&lt;br&gt;
  margin: 1rem 0;&lt;br&gt;
  cursor: pointer;&lt;br&gt;
  transition: 0.5s;&lt;br&gt;
}&lt;br&gt;
.btn:hover {&lt;br&gt;
  background-position: right;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;@media screen and (max-width: 1050px) {&lt;br&gt;
  .container {&lt;br&gt;
    grid-gap: 5rem;&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;@media screen and (max-width: 1000px) {&lt;br&gt;
  form {&lt;br&gt;
    width: 290px;&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;.login-content h2 {&lt;br&gt;
    font-size: 2.4rem;&lt;br&gt;
    margin: 8px 0;&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;.img img {&lt;br&gt;
    width: 400px;&lt;br&gt;
  }&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;@media screen and (max-width: 900px) {&lt;br&gt;
  .container {&lt;br&gt;
    grid-template-columns: 1fr;&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;.img {&lt;br&gt;
    display: none;&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;.wave {&lt;br&gt;
    display: none;&lt;br&gt;
  }&lt;/p&gt;

&lt;p&gt;.login-content {&lt;br&gt;
    justify-content: center;&lt;br&gt;
  }&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>loginform</category>
      <category>form</category>
    </item>
    <item>
      <title>It's my Birthday! Ask Me Anything about GitHub, DevOps, Azure DevOps (Live Q&amp;A)</title>
      <author>Davide 'CoderDave' Benvegnù</author>
      <pubDate>Tue, 13 Jul 2021 01:38:50 +0000</pubDate>
      <link>https://dev.to/n3wt0n/it-s-my-birthday-ask-me-anything-about-github-devops-azure-devops-live-q-a-29df</link>
      <guid>https://dev.to/n3wt0n/it-s-my-birthday-ask-me-anything-about-github-devops-azure-devops-live-q-a-29df</guid>
      <description>&lt;p&gt;Hey folks, &lt;strong&gt;it's my Birthday&lt;/strong&gt;! 🥳&lt;/p&gt;

&lt;p&gt;To celebrate, I will host a live &lt;em&gt;Q&amp;amp;A&lt;/em&gt;/&lt;em&gt;Ask Me Anything&lt;/em&gt; next Thursday morning (Wednesday evening for the US folks) (&lt;strong&gt;&lt;em&gt;see below the time schedule&lt;/em&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;Got any questions about &lt;strong&gt;DevOps&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, &lt;strong&gt;Azure DevOps&lt;/strong&gt;, and/or ME?&lt;/p&gt;

&lt;p&gt;Join me for this live Q&amp;amp;A and I will try and answer all your questions!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/a9cpkf7ZMeA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/a9cpkf7ZMeA"&gt;Link to the video: https://youtu.be/a9cpkf7ZMeA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prepare your questions&lt;/strong&gt;, and I hope to see y'all live so we can celebrate together! And if you can't make it, &lt;strong&gt;post your questions or comments down below&lt;/strong&gt; so I can address them during the live!&lt;/p&gt;

&lt;p&gt;Thanks so very much again for your support and see y'all there!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#time-of-the-live"&gt;
  &lt;/a&gt;
  TIME OF THE LIVE:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Thursday, July 15, 10.00 am UTC+8&lt;/li&gt;
&lt;li&gt;Thursday, July 15, 7.30 am IST&lt;/li&gt;
&lt;li&gt;Thursday, July 15, 2.00 am UTC&lt;/li&gt;
&lt;li&gt;Wednesday, July 14, 10.00 pm ET&lt;/li&gt;
&lt;li&gt;Wednesday, July 14, 7.00 pm PT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
🌐 &lt;a href="https://coderdave.io"&gt;CoderDave.io Website&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CoderDave"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/a9cpkf7ZMeA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>devops</category>
      <category>github</category>
      <category>azuredevops</category>
      <category>live</category>
    </item>
    <item>
      <title>Data Engineering Roadmap For 2021 - 12 Steps To Help You Go From 0 To Data Engineering</title>
      <author>SeattleDataGuy</author>
      <pubDate>Tue, 13 Jul 2021 01:26:57 +0000</pubDate>
      <link>https://dev.to/seattledataguy/data-engineering-roadmap-for-2021-12-steps-to-help-you-go-from-0-to-data-engineering-2l7e</link>
      <guid>https://dev.to/seattledataguy/data-engineering-roadmap-for-2021-12-steps-to-help-you-go-from-0-to-data-engineering-2l7e</guid>
      <description>&lt;p&gt;Maybe it's the 6 figure salaries, the opportunity to work with cool technology or people are finally learning that data engineering is where everything starts in the data field.&lt;/p&gt;

&lt;p&gt;Whatever the reason, people are noticing.&lt;/p&gt;

&lt;p&gt;VCs are investing in data storage and ingestion platforms and &lt;a href="https://seattledataguy.substack.com/p/are-companies-hiring-fewer-data-scientists"&gt;companies are interviewing more data engineers&lt;/a&gt; compared to previous years.&lt;/p&gt;

&lt;p&gt;But how does one become a data engineer? If you were to Google data engineering roadmap, then you would find a very large image of an overwhelming roadmap that has been going around Linkedin for the past few weeks with over a decade of learning.&lt;/p&gt;

&lt;p&gt;It's too much.&lt;/p&gt;

&lt;p&gt;So in this article, we will provide the steps of how you can go from 0 to data engineer with a combination of free courses as well as paid that can help you gain the skills you need to be a data engineer.&lt;/p&gt;

&lt;p&gt;But before diving into that, let's make sure you know what a data engineer is.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-data-engineering"&gt;
  &lt;/a&gt;
  What Is Data Engineering
&lt;/h3&gt;

&lt;p&gt;Data engineers move, remodel, and manage data sets from 10s if not 100s of internal company applications so analysts and data scientists don't need to spend their time constantly pulling data sets.&lt;/p&gt;

&lt;p&gt;They may also create a core layer of data that lets different data sources connect to it to get more information or context.&lt;/p&gt;

&lt;p&gt;These specialists are usually the first people to handle data. They process the data so it's useful for everyone, not just the systems that store it.&lt;/p&gt;

&lt;p&gt;There are obvious reasons to become a data engineer --- like a high salary and numerous opportunities due to limited competition within the job market --- but we're not focusing on those today. Instead, consider the following thoughts, which are a bit more relevant to the job description.&lt;/p&gt;

&lt;p&gt;Now before going to far on this data engineering roadmap. We need to answer a very important question.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#0-is-data-engineering-for%C2%A0you"&gt;
  &lt;/a&gt;
  0. Is Data Engineering For You?
&lt;/h3&gt;

&lt;p&gt;For that, I have put together a video that may help you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nqc1aj08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w15sdic2k8m0nnqe5u8l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nqc1aj08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w15sdic2k8m0nnqe5u8l.jpeg" alt="data engineering"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=jpzDA90EuQ8"&gt;Watch The Video Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will hopefully provide you some context on data engineering and if you would want to do it in the future.&lt;/p&gt;

&lt;p&gt;If you're still here, then let's break down the roadmap to become a data engineer.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-building-your-basesql-coding%C2%A0linux"&gt;
  &lt;/a&gt;
  1. Building Your Base(SQL, Coding, Linux)
&lt;/h3&gt;

&lt;p&gt;Before getting deep into data engineering specifics you need a solid base.&lt;/p&gt;

&lt;p&gt;It can be tempting to start learning some of the concepts and skills that are further along the lines of distributed computing or streaming. But that's like learning words and sentences before you learn what letters are.&lt;/p&gt;

&lt;p&gt;That's why you need to start with SQL, programming, and some form of server/Linux basics.&lt;/p&gt;

&lt;p&gt;You need to be able to speak to computers in their language and these three skills will help you understand how to communicate with computers from various layers.&lt;/p&gt;

&lt;p&gt;Building this solid foundation will ensure that you reduce your future learning curves because to interact with many of the other technical components, you will need to understand some form of programming language or command line basics.&lt;/p&gt;

&lt;p&gt;Also, learning the basics in terms of servers such as SFTP, firewalls, PGP, and other technical components will go a long way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.khanacademy.org/computing/computer-programming/sql"&gt;SQL Cours On Khan Academy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=k9TUPpGqYTo&amp;amp;list=PL-osiE80TeTskrapNbzXhwoFUiLCjGgY7&amp;amp;index=2"&gt;Python On Youtube&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.udemy.com/course/linux-tutorials/?ranMID=39197&amp;amp;ranEAID=GjbDpcHcs4w&amp;amp;ranSiteID=GjbDpcHcs4w-grM2QfFWOqVeKgCDDX12Fw&amp;amp;LSNPUBID=GjbDpcHcs4w&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt;Linux On Udemy&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#2-try-building-your-first-project%E2%80%8A%E2%80%8Abuilding-a-flask%C2%A0api"&gt;
  &lt;/a&gt;
  2. Try Building Your First Project --- Building A Flask API
&lt;/h3&gt;

&lt;p&gt;You will need to interact with APIs on a daily basis if you become a data engineer. Either to automate processes or pull data.&lt;/p&gt;

&lt;p&gt;In that way, building an API is a great first project because it will force you to use several layers of technology.&lt;/p&gt;

&lt;p&gt;You will need to understand concepts like ports, HTTP requests, coding, command line, and if you really want to make it interesting, maybe even play around with the cloud by spinning up a VM to run your API off of.\&lt;br&gt;
But that's a stretch goal. Let's start easy.&lt;/p&gt;

&lt;p&gt;Flask is a great python library that you can quickly spin up an API in no time. But I don't expect you to just know how to build your first API.&lt;/p&gt;

&lt;p&gt;I like &lt;a href="https://medium.com/u/8b318225c16a"&gt;freeCodeCamp&lt;/a&gt;'s Flask tutorial. Now, this is focused on building a site, but you can still use this tutorial to build out a lot of the backend infrastructure.&lt;/p&gt;

&lt;p&gt;So for this project, you can follow along with freeCodeCamp and then try to add in your own end-points for your &lt;a href="https://www.youtube.com/watch?v=Z1RJmh_OqeA"&gt;Flask API Project.&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-learn-about-data-warehousing-and-data-pipelinesetls-elts-and%C2%A0els"&gt;
  &lt;/a&gt;
  3. Learn About Data Warehousing And Data Pipelines(ETLs, ELTs, and ELs)
&lt;/h3&gt;

&lt;p&gt;When you look at the skill sets of data engineers, software engineers, and data scientists, there is a lot of cross-over.&lt;/p&gt;

&lt;p&gt;All three tend to use Python, both data scientists and data engineers tend to use SQL pretty heavily and all three rely to some degree on some understanding of Linux.&lt;/p&gt;

&lt;p&gt;So what differentiates data engineers?&lt;/p&gt;

&lt;p&gt;One of the big differentiators is the focus on data warehouses and data pipelines.&lt;/p&gt;

&lt;p&gt;But what are these?&lt;/p&gt;

&lt;p&gt;Data warehouses and data pipelines. At least to start.&lt;/p&gt;

&lt;p&gt;Data warehouses and data pipelines are concepts that data engineers need to understand. They are the bread and butter of any good DE.&lt;/p&gt;

&lt;p&gt;Luckily there are tons of resources that cover these concepts. But let's start with the granddaddy of all data warehousing resources. &lt;a href="https://aatinegar.com/wp-content/uploads/2016/05/Kimball_The-Data-Warehouse-Toolkit-3rd-Edition.pdf"&gt;Kimball's Data Warehouse Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a book written by one of the people who built much of the foundation for data warehouses. There is a lot of history there, but we won't go into that now.&lt;/p&gt;

&lt;p&gt;If you need to go the paid route because otherwise, you won't take learning seriously. Then check out &lt;a href="https://bit.ly/3wg94E2"&gt;The Basics To Data Warehousing Udemy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These combined should cover most of the conceptual basics.&lt;/p&gt;

&lt;p&gt;Of course, now we need to apply it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-build-your-second-project%E2%80%8A%E2%80%8Aapplying-coding-and-data-warehousing"&gt;
  &lt;/a&gt;
  4. Build Your Second Project --- Applying Coding And Data Warehousing
&lt;/h3&gt;

&lt;p&gt;Now that you have learned about data pipelines and data warehouses, it would be a great idea to apply this knowledge.&lt;/p&gt;

&lt;p&gt;So let's build your second project, to solidify that knowledge. Let's aim to implement these 4 concepts below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Scrape an online data source&lt;/li&gt;
&lt;li&gt;  Store encrypted data into SFTP&lt;/li&gt;
&lt;li&gt;  Create dimensional model&lt;/li&gt;
&lt;li&gt;  Pull data from SFTP and load into Data Warehouse(Don't worry too much about Workflows just yet)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, this will bring many of the skills you have learned together. Whether it be learning about PGP encryption, SFTP, or data modeling.&lt;/p&gt;

&lt;p&gt;All of which will improve your overall skillsets and provide some form of the final project.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5a-learn-about%C2%A0testing"&gt;
  &lt;/a&gt;
  5a. Learn About Testing
&lt;/h3&gt;

&lt;p&gt;Testing.&lt;/p&gt;

&lt;p&gt;You may have never even learned about testing in school or maybe you had that one course that had one unit for one week that just started to touch the surface of testing.&lt;/p&gt;

&lt;p&gt;Now in a world where QA engineers are few are far between and testing is just part of the CI/CD process.&lt;/p&gt;

&lt;p&gt;You need to know how to write test cases.&lt;/p&gt;

&lt;p&gt;You need to know the difference between unit tests and integration tests.&lt;/p&gt;

&lt;p&gt;To do so, Udemy has a great course on test-driven development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/unit-testing-and-tdd-in-python/?ranMID=39197&amp;amp;ranEAID=GjbDpcHcs4w&amp;amp;ranSiteID=GjbDpcHcs4w-KudpdnnpEA3QyjbxvMhcRg&amp;amp;LSNPUBID=GjbDpcHcs4w&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt;Check out TDD Course Like Unit TDD For Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W02dlLwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/578dd6ybqf6nv9wqmdi7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W02dlLwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/578dd6ybqf6nv9wqmdi7.png" alt="testing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=eAPmXQ0dC7Q"&gt;Or if you want a free version you can use this Youtube tutorial&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5b-airflow-and%C2%A0docker"&gt;
  &lt;/a&gt;
  5b. Airflow And Docker
&lt;/h3&gt;

&lt;p&gt;You will notice I have 2 step 5s. Well, that's because we are getting to the point where order matters a little less. Steps 6, 7, 8, and so on. Could probably get a little jumbled and you would be fine.&lt;/p&gt;

&lt;p&gt;At this point, you should have a solid enough base that any new technology that comes your way shouldn't have the same learning curve.&lt;/p&gt;

&lt;p&gt;That's why for this second step 5 I suggest you learn Airflow + Docker.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because you can apply both well together. Also, I really enjoy &lt;a href="https://www.youtube.com/watch?v=AHMm1wfGuHE"&gt;Tuan Vu's Playlist&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#subscribe-to-my-mailing-list-for-community-updates-and%C2%A0freebies"&gt;
  &lt;/a&gt;
  ✉️ &lt;a href="https://seattledataguy.substack.com/p/scaling-a-data-analytics-team-for"&gt;Subscribe to my Mailing List For Community Updates And Freebies&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-cloud-and%C2%A0nosql"&gt;
  &lt;/a&gt;
  6. Cloud and NoSQL
&lt;/h3&gt;

&lt;p&gt;At this point, you have probably already done a little on the Cloud and maybe even played around with a NoSQL database.&lt;/p&gt;

&lt;p&gt;But, let's round out that knowledge.&lt;/p&gt;

&lt;p&gt;How? Well, there are a few great options when it comes to rounding out knowledge. For example, now I think it would be a good time to take a certificate program.&lt;/p&gt;

&lt;p&gt;I don't often find certificates useful until you have some experience because I find certificates often help fill in the gaps of knowledge on a particular topic.&lt;/p&gt;

&lt;p&gt;One great certificate for data engineers is the &lt;a href="https://www.coursera.org/professional-certificates/gcp-data-engineering?ranMID=40328&amp;amp;ranEAID=GjbDpcHcs4w&amp;amp;ranSiteID=GjbDpcHcs4w-RRA2EvkPrSS.DRJYOcp3YQ&amp;amp;siteID=GjbDpcHcs4w-RRA2EvkPrSS.DRJYOcp3YQ&amp;amp;utm_content=10&amp;amp;utm_medium=partners&amp;amp;utm_source=linkshare&amp;amp;utm_campaign=GjbDpcHcs4w"&gt;Google Data Engineer Certificate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As for NoSQL check out &lt;a href="https://medium.com/u/8b318225c16a"&gt;freeCodeCamp&lt;/a&gt;'s video on &lt;a href="https://www.youtube.com/watch?v=4cWkVbC2bNE&amp;amp;t=1s"&gt;database systems&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-streaming-and-distributed-systems"&gt;
  &lt;/a&gt;
  7. Streaming And Distributed Systems
&lt;/h3&gt;

&lt;p&gt;There are so many ways to process data in the modern world. More importantly, using more complex systems such as streaming or distributed systems is so much easier than it's ever been.&lt;/p&gt;

&lt;p&gt;You can spin up a fully managed service on AWS or GCP and you're off to the races. No need to spin up 5 other services just to try to wrangle and manage your streaming system.&lt;/p&gt;

&lt;p&gt;So, let's find some courses on this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/u/f28a432ce853"&gt;Andreas Kretz&lt;/a&gt; for example has a why video on &lt;a href="https://www.youtube.com/watch?v=hf5isv0gdUU"&gt;Spark and Kafka&lt;/a&gt; thats a great primer before you jump into taking courses.&lt;/p&gt;

&lt;p&gt;Once you have a good idea of Kafka and why you should learn it. Take, really, any of &lt;a href="https://medium.com/u/a34f6d8b7618"&gt;Frank Kane&lt;/a&gt;'s courses. &lt;a href="https://www.udemy.com/course/taming-big-data-with-apache-spark-hands-on/?ranMID=39197&amp;amp;ranEAID=GjbDpcHcs4w&amp;amp;ranSiteID=GjbDpcHcs4w-9Qd1UEq.pK04u1cGU4WhjQ&amp;amp;LSNPUBID=GjbDpcHcs4w&amp;amp;utm_source=aff-campaign&amp;amp;utm_medium=udemyads"&gt;He has done a great job producing a whole host of courses that discuss Spark, Kafka and Hadoop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, if you need an example of someone using a streaming component. Check out StartDataEngineering.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.startdataengineering.com/post/data-engineering-project-for-beginners-stream-edition/"&gt;&lt;strong&gt;Data Engineering Project: Stream Edition&lt;/strong&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-start-studying-for-interviews"&gt;
  &lt;/a&gt;
  8. Start Studying for Interviews
&lt;/h3&gt;

&lt;p&gt;At some point, you need to go out into the real world and attempt to interview.&lt;/p&gt;

&lt;p&gt;For that, I have put together a data engineering interview guide. This guide helps breakdown what you will need to study and provides the questions so you don't have to waste time Googling.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://betterprogramming.pub/the-data-engineering-interview-study-guide-6f09420dd972"&gt;&lt;strong&gt;The Data Engineering Interview Study Guide&lt;/strong&gt;\&lt;br&gt;
*For your FAANG and other technical interviews*betterprogramming.pub&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-build-your-third%C2%A0project"&gt;
  &lt;/a&gt;
  9. Build Your Third Project
&lt;/h3&gt;

&lt;p&gt;At this point in your learning, you should have a broad knowledge of skills.&lt;/p&gt;

&lt;p&gt;You should know about distributed systems, streaming, programing, APIs and so much more.&lt;/p&gt;

&lt;p&gt;So now take all of that knowledge and apply it.&lt;/p&gt;

&lt;p&gt;But to what?&lt;/p&gt;

&lt;p&gt;Well, I put together a video where I discuss &lt;a href="https://www.youtube.com/watch?v=385mKftVr3I"&gt;5 different examples of projects that are real&lt;/a&gt;, that exist. You can find links to them on the video. There are tons of great examples of people using tons of technologies to build data engineering projects.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10learn-enough-uiux-and-dashboarding"&gt;
  &lt;/a&gt;
  10.Learn &lt;strong&gt;Enough&lt;/strong&gt; UI/UX and Dashboarding
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://medium.com/u/498aec590e1b"&gt;Taras Bakusevych&lt;/a&gt; still has my favorite article in terms of how to design a dashboard. The way it's broken down, even with the cliche "10 rules" title, really helps you understand how to develop a dashboard.&lt;/p&gt;

&lt;p&gt;Honestly, the article below has a course worth of info condensed into ten points.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://uxplanet.org/10-rules-for-better-dashboard-design-ef68189d734c"&gt;&lt;strong&gt;10 rules for better dashboard design&lt;/strong&gt;\&lt;br&gt;
*Practical guide*uxplanet.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Truthfully, UI/UX isn't always necessary for data engineers. However, for some of you out there, you will fall in love with designing dashboards and displaying data.&lt;/p&gt;

&lt;p&gt;And in general, there will always be a need to at least build a good enough dashboard. So take a moment to learn this skill.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#11-pick-your%C2%A0own"&gt;
  &lt;/a&gt;
  11. Pick Your Own
&lt;/h3&gt;

&lt;p&gt;At this point in your learning, you have probably found areas you enjoy. Maybe you liked distributed computing or putting together an API.&lt;/p&gt;

&lt;p&gt;Dig into that.&lt;/p&gt;

&lt;p&gt;Figure out what you enjoy learning about and learn more.&lt;/p&gt;

&lt;p&gt;Technology is great that way in the sense that it is an overflowing set of learnings. There is always more to dig into always concepts, technologies, design practices that you know nothing about.&lt;/p&gt;

&lt;p&gt;So go learn.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#12-give-yourself-room-to%C2%A0grow"&gt;
  &lt;/a&gt;
  12. Give Yourself Room To Grow
&lt;/h3&gt;

&lt;p&gt;Learning is a process and it should be both fun and frustrating.&lt;/p&gt;

&lt;p&gt;So let it be that way.&lt;/p&gt;

&lt;p&gt;When you get stuck, don't beat yourself up. Revel in the moment. Because once you solve that problem, its gone.&lt;/p&gt;

&lt;p&gt;You get a brief moment of excitement and dopamine for solving the riddle, but then there is just another riddle to solve.&lt;/p&gt;

&lt;p&gt;Another bug to fix.&lt;/p&gt;

&lt;p&gt;If you've gotten this far in your learning, then you have probably gotten past the "Hello World" phase. But if you recall, there was something magical about the first time you got code to run.&lt;/p&gt;

&lt;p&gt;So don't rush.&lt;/p&gt;

&lt;p&gt;And Good Luck!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#readwatch-these%C2%A0next"&gt;
  &lt;/a&gt;
  Read/Watch These Next
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://betterprogramming.pub/the-data-science-interview-study-guide-c3824cb76c2e"&gt;&lt;strong&gt;Data Science Interview Study Guide&lt;/strong&gt;&lt;/a&gt;\
&lt;em&gt;121 resources to help you land your data science dream job&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.youtube.com/watch?v=lGzh-QendJc"&gt;&lt;strong&gt;How I Went From Analyst To Data Engineer&lt;/strong&gt;&lt;/a&gt;\
&lt;em&gt;How to become a data engineer --- and know if it's right for you&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.youtube.com/watch?v=ZK-5yS7jJC8&amp;amp;t=1s"&gt;How To Start A Consulting Business As A Consultant&lt;/a&gt;\
&lt;em&gt;Getting Your First Client&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#subscribe-to-my-mailing-list-for-community-updates-and%C2%A0freebies"&gt;
  &lt;/a&gt;
  ✉️ &lt;a href="https://seattledataguy.substack.com/p/scaling-a-data-analytics-team-for"&gt;Subscribe to my Mailing List For Community Updates And Freebies&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This article does contain affiliate links that provide me a small fee. Generally these are the udemy and coursera links.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About Me
&lt;/h3&gt;

&lt;p&gt;I have spent my career focused on all forms of data. I have focused on developing algorithms to detect fraud, reduce patient readmission and redesign insurance provider policy to help reduce the overall cost of healthcare. I have also helped develop analytics for marketing and IT operations in order to optimize limited resources such as employees and budget. I privately consults on data science and engineering problems both solo as well as with a company called Acheron Analytics. I have experience both working hands-on with technical problems as well as helping leadership teams develop strategies to maximize their data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connect-with-me-on-social%C2%A0network"&gt;
  &lt;/a&gt;
  Connect with Me on Social Network
&lt;/h3&gt;

&lt;p&gt;✅ YouTube:&lt;a href="https://www.youtube.com/channel/UCmLGJ3VYBcfRaWbP6JLJcpA"&gt;https://www.youtube.com/channel/SeattleDataGuy&lt;/a&gt;\&lt;br&gt;
✅ Website: &lt;a href="https://www.theseattledataguy.com/"&gt;https://www.theseattledataguy.com/&lt;/a&gt;\&lt;br&gt;
✅ LinkedIn: &lt;a href="https://www.linkedin.com/company/18129251"&gt;https://www.linkedin.com/company/18129251&lt;/a&gt;\&lt;br&gt;
✅ Personal Linkedin: &lt;a href="https://www.linkedin.com/in/benjaminrogojan/"&gt;https://www.linkedin.com/in/benjaminrogojan/&lt;/a&gt;\&lt;br&gt;
✅ FaceBook: &lt;a href="https://www.facebook.com/SeattleDataGuy"&gt;https://www.facebook.com/SeattleDataGu&lt;/a&gt;y&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>database</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Getting Quicker Feedback In Pull Requests On GitHub (or others)</title>
      <author>Vivek Ranjan</author>
      <pubDate>Tue, 13 Jul 2021 00:34:07 +0000</pubDate>
      <link>https://dev.to/bcosynot/getting-quicker-feedback-in-pull-requests-on-github-or-others-2fm7</link>
      <guid>https://dev.to/bcosynot/getting-quicker-feedback-in-pull-requests-on-github-or-others-2fm7</guid>
      <description>&lt;p&gt;Pull requests (PRs) are great for maintaining code quality, spreading knowledge about the codebase across a team, and learning through each other's work.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But&lt;/em&gt;, they can be disruptive to the team's overall productivity because both the author and reviewers have to context switch to provide feedback or respond to feedback.&lt;/p&gt;

&lt;p&gt;Over the last few years, I have implemented a few practices in my workflow that has helped me get faster and better feedback in my PRs.&lt;/p&gt;

&lt;p&gt;Making it easier to review your pull requests has multiple benefits:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You get quicker feedback from your colleagues - helping you finish your tasks faster 🚀&lt;/li&gt;
&lt;li&gt;You get more interesting feedback, improving your code and learning 🧠&lt;/li&gt;
&lt;li&gt;Makes you more likable because you made their job easier 🤗&lt;/li&gt;
&lt;li&gt;Less context switching helps you save your mental energy 💪&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's jump in!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-%F0%9F%97%A3-talk-through-your-ideas-with-a-colleague-before-you-start-coding"&gt;
  &lt;/a&gt;
  1. 🗣 Talk through your ideas with a colleague before you start coding
&lt;/h3&gt;

&lt;p&gt;This helps you get feedback before you even start coding.&lt;/p&gt;

&lt;p&gt;You certainly do not have to do this if your changes are going to be pretty straightforward.&lt;/p&gt;

&lt;p&gt;But, if you are making changes that require design decisions on your part, talk to a colleague about your ideas. Get their feedback over a quick voice chat before you jump into coding.&lt;/p&gt;

&lt;p&gt;Upon talking, you might realize that your original idea wasn't the optimal solution, or your colleague might suggest a tweak that would make things better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-keep-it-small"&gt;
  &lt;/a&gt;
  2. 🐜 Keep it small
&lt;/h3&gt;

&lt;p&gt;Keep the list of changes in your PR as small as possible because large PRs&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;are overwhelming to look at&lt;/li&gt;
&lt;li&gt;force the reviewer to hold a lot of context about all the code that has been touched&lt;/li&gt;
&lt;li&gt;and make it difficult for the reviewer to figure out what they should focus on at any given time&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can keep your PRs smaller by breaking down your task into smaller subtasks and staggering them.&lt;/p&gt;

&lt;p&gt;If you are coding away faster than those small PRs are getting reviewed, you can chain them, so the destination of your next PR is always pointing to the branch before it. A linked-list of PRs, if you will. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-lint-format-and-run-static-analysis-before-pushing"&gt;
  &lt;/a&gt;
  3. 🤖 Lint, format and run static analysis before pushing
&lt;/h3&gt;

&lt;p&gt;Take advantage of code formatting tools and standards to automate the trivial and boring stuff.&lt;/p&gt;

&lt;p&gt;You should make them part of your CI/CD workflow and add them to your code editor, for quicker feedback. With automated feedback in your code editor, you can take care of any issues that might arise, as they come up.&lt;/p&gt;

&lt;p&gt;SonarLint and other linters are great examples of this, they should ideally be added to your code editor or local "watch" builds so they throw warnings and issues as you code away.&lt;/p&gt;

&lt;p&gt;This helps you write great code, but also saves your teammates' time they would have spent pointing out those issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-%F0%9F%96%BC-provide-screenshots-or-videos-for-ui-changes"&gt;
  &lt;/a&gt;
  4. 🖼 Provide screenshots or videos for UI changes
&lt;/h3&gt;

&lt;p&gt;If your changes affect the user interface in any way then do attach some screenshots to the pull request. This provides some useful context to the reviewers and also gives them more confidence in your changes. &lt;/p&gt;

&lt;p&gt;They can also catch some minor issues you might have missed - that's a great advantage of having another pair of eyes on your work!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-call-out-important-or-interesting-changes"&gt;
  &lt;/a&gt;
  5. 📌 Call out important or interesting changes
&lt;/h3&gt;

&lt;p&gt;Some parts of your changes maybe more interesting or important than the others. Call them out in the form of inline comments on the PR.&lt;/p&gt;

&lt;p&gt;This will help reviewers understand where to better direct their attention and time.&lt;/p&gt;

&lt;p&gt;If you are feeling generous, you could even call out the trivial parts of your changes so they know to spend less time on those parts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-explain-expected-behavior-through-comments"&gt;
  &lt;/a&gt;
  6. 💬 Explain expected behavior through comments
&lt;/h3&gt;

&lt;p&gt;I don't like leaving comments in code about what the code is doing because they can get outdated.&lt;/p&gt;

&lt;p&gt;But, inline comments in PRs are useful for the duration of the PR and can be a great spot to let reviewers know the expected functionality for a piece of code. That can help them verify if expectations match reality.&lt;/p&gt;

&lt;p&gt;Of course your tests also help prove this, but tests are not always comprehensive or correct.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-%F0%9F%91%81-go-through-it-by-yourself"&gt;
  &lt;/a&gt;
  7. 👁 Go through it by yourself
&lt;/h3&gt;

&lt;p&gt;Go through your PR yourself. The PR user interface can help you notice things you might have missed in your code editor and fix them before someone else calls it out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-anticipate-feedback-and-requests-for-changes"&gt;
  &lt;/a&gt;
  8. 🔮 Anticipate feedback and requests for changes
&lt;/h3&gt;

&lt;p&gt;After working with a team for a while you tend to get a sense of the types of feedback others might provide or the types of changes they might request.&lt;/p&gt;

&lt;p&gt;Anticipate that feedback and either incorporate them into your code or leave comments justifying why you are doing things "your way" instead of "their way".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-%F0%9F%8F%B7-tag-issue-numberids-in-title-or-description"&gt;
  &lt;/a&gt;
  9. 🏷 Tag issue number/IDs in title or description
&lt;/h3&gt;

&lt;p&gt;PR systems usually recognize issue numbers or IDs if they are preceded by # or a project identifier. They also tend to create links to those issues or expand them to include the title/name of that issues.&lt;/p&gt;

&lt;p&gt;It's a small thing but makes it easier for the reviewer to get more context on the changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-take-long-discussions-offline"&gt;
  &lt;/a&gt;
  10. 📞 Take long discussions offline
&lt;/h3&gt;

&lt;p&gt;If you see a discussion thread going past 4-5 comments, discuss it more in-person or over a quick call.&lt;/p&gt;

&lt;p&gt;Async discussions like that tend to take more time, are more disruptive to both your workflows, and can be lacking in nuance. Talking about it can help get the issue resolved more quickly with better understanding of each other.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-some-of-your-tips-and-practices"&gt;
  &lt;/a&gt;
  What are some of your tips and practices?
&lt;/h3&gt;

&lt;p&gt;These are some of the practices I have implemented and found helpful in my personal workflow. Is there anything else I should be trying? What have you found helpful?&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>github</category>
      <category>codequality</category>
      <category>codereview</category>
    </item>
    <item>
      <title>Evolving From Dev to CEO w/ Stephen Magill</title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 13 Jul 2021 00:16:33 +0000</pubDate>
      <link>https://dev.to/linearb/evolving-from-dev-to-ceo-w-stephen-magill-8n3</link>
      <guid>https://dev.to/linearb/evolving-from-dev-to-ceo-w-stephen-magill-8n3</guid>
      <description>&lt;p&gt;The most prolific companies of our time are run by former developers. &lt;/p&gt;

&lt;p&gt;That’s why on this week's episode of &lt;a href="https://devinterrupted.com/podcast/evolving-from-dev-to-ceo/"&gt;Dev Interrupted&lt;/a&gt; we bring in former-developer-turned-CEO, Stephen Magill of Muse.dev, to chat about what it takes to make the jump from developer to business leader.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2nFKZF3l9Ir2LcvlHzaqJ6"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Why more companies are being led by former developers&lt;/li&gt;
&lt;li&gt;The pros and cons of having a technical vs communication background&lt;/li&gt;
&lt;li&gt;What Stephen wishes he knew before taking on a leadership role&lt;/li&gt;
&lt;li&gt;Great advice for developers who aspire to become business leaders&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ceo</category>
      <category>devops</category>
      <category>leadership</category>
      <category>culture</category>
    </item>
  </channel>
</rss>
