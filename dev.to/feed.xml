<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Python's Collections Module: defaultdict</title>
      <author>Kathan Vakharia</author>
      <pubDate>Fri, 18 Jun 2021 16:46:33 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/python-s-collections-module-defaultdict-52ol</link>
      <guid>https://dev.to/kathanvakharia/python-s-collections-module-defaultdict-52ol</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;It won't surprise you if I tell you it is also a &lt;code&gt;dict&lt;/code&gt; subclass :) &lt;/p&gt;

&lt;p&gt;&lt;code&gt;defaultdict&lt;/code&gt; container type eliminates the chances to get &lt;em&gt;KeyErrors&lt;/em&gt; in case of normal dictionaries while accessing non existent keys.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U1Oob5Ky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9xtcoi8yko4i6u7jkr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U1Oob5Ky--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9xtcoi8yko4i6u7jkr3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see how &lt;code&gt;defaultdict&lt;/code&gt; works,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#importing-defaultdict"&gt;
  &lt;/a&gt;
  Importing defaultdict
&lt;/h3&gt;

&lt;p&gt;Importing &lt;code&gt;defaultdict&lt;/code&gt; is same as in case of &lt;code&gt;Counter&lt;/code&gt; , just make sure about the capitalization.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yqox7krv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxkupqv681ujvilz0wd9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yqox7krv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxkupqv681ujvilz0wd9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before, we move ahead don't forget it is a dictionary internally so we can leverage all the methods of built-in &lt;code&gt;dict&lt;/code&gt; class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-defaultdict-endraw-to-provide-default-values-for-nonexistent-keys"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;defaultdict&lt;/code&gt; to provide default values for non-existent keys
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMCC7Rd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikkipc2wwj8xiq0g0hkc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMCC7Rd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikkipc2wwj8xiq0g0hkc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
We can simplify the above process using a &lt;strong&gt;lambda&lt;/strong&gt; function.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wMVaYT19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6fdlbmheftviz9slktz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wMVaYT19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6fdlbmheftviz9slktz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ü¶ú Moreover, we can also pass the &lt;em&gt;builtin&lt;/em&gt; constructor functions as &lt;code&gt;default_factory&lt;/code&gt; argument.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, I have passed &lt;code&gt;list&lt;/code&gt; which means the default value for any key will be output of &lt;code&gt;list()&lt;/code&gt; ‚û°Ô∏è empty list&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDn7uPuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kndccl8lr662z3fewoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDn7uPuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kndccl8lr662z3fewoa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's all for the &lt;code&gt;defaultdict&lt;/code&gt; container. I hope you are enjoying the series :) If so, leave a like and please comment down below if I've commited any mistake(s)!&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>collections</category>
    </item>
    <item>
      <title>Tracking Infrastructure Costs for Startups</title>
      <author>Ben Schaechter</author>
      <pubDate>Fri, 18 Jun 2021 16:35:09 +0000</pubDate>
      <link>https://dev.to/bensign/tracking-infrastructure-costs-for-startups-pi1</link>
      <guid>https://dev.to/bensign/tracking-infrastructure-costs-for-startups-pi1</guid>
      <description>&lt;p&gt;As cloud infrastructure service offerings have grown from a small set of services like virtual machines, object storage and networking primitives to an √† la carte menu of hundreds of services, maintaining visibility into what services you're using and paying for can be a job in and of itself. As a startup you are rightfully focused on finding product market fit. However very soon after you achieve product market fit, margins start to become important. The sooner you start tending to cloud costs the easier it will be to get under control when the time comes. This post is meant to give a quick overview of how to think about cloud costs when you're just getting up and running as a startup.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cost-metrics-should-be-a-company-kpi"&gt;
  &lt;/a&gt;
  Cost Metrics Should be a Company KPI
&lt;/h2&gt;

&lt;p&gt;As you're navigating to finding product market fit you're typically tracking metrics that are customer focused. Depending on the nature of the company, you may be looking at the number of new user registrations, active user engagement metrics or revenue being generated. Typically, companies will also take a look at technical KPIs like performance of the application and the number of bugs/exceptions that are being raised.&lt;/p&gt;

&lt;p&gt;However, one often-forgotten metric that startups fail to track is cloud costs. This is primarily because usage-based infrastructure providers make this information particularly hard to find and track. Startups are usually granted credits from providers like AWS, GCP, Azure and DigitalOcean and forget about them until they expire and are suddenly faced with frantically unpacking their surprise bill. By tracking cost metrics from day 1, you can avoid these scenarios and always know how your infrastructure spend is trending.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-using-cost-allocation-tags-early"&gt;
  &lt;/a&gt;
  Start Using Cost Allocation Tags Early
&lt;/h2&gt;

&lt;p&gt;Instituting certain early behaviors in your organization can save you a lot of time and effort down the line and probably the easiest one to do is leveraging cost allocation tags. Using tags allows you to group infrastructure together by function (i.e. front-end vs back-end), environment (i.e. staging vs production) or even developer (i.e. Molly vs Brian) on your team. By applying tags to your infrastructure, you can see not only how much your infrastructure is trending in aggregate but also see how it is trending by each tag you apply.&lt;/p&gt;

&lt;p&gt;Cost Allocation Tags cost nothing and are usually pretty easy to apply. In the same way you think about writing unit tests, you should consider applying cost allocation tags as a general best-practice behavior. Just like with unit test, the earlier you get started with cost allocation tags the easier it becomes to manage over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-infrastructure-guardrails"&gt;
  &lt;/a&gt;
  Implement Infrastructure Guardrails
&lt;/h2&gt;

&lt;p&gt;Infrastructure providers typically make it incredibly easy for you to provision resources: you can create some new virtual machines in a few clicks on consoles, create backups for storage volumes with the flip of a switch and easily push new files to an object storage as often as you'd like. What we've found from looking at aggregated, anonymized data is that the vast majority of customers have not put into place very basic guardrails that could keep costs in check - mostly from just not knowing these exist.&lt;/p&gt;

&lt;p&gt;Some easy guardrail examples to implement include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implementing lifecycle policies on ECR repos to prevent a backlog of unused legacy images.&lt;/li&gt;
&lt;li&gt;Using intelligent tiering on S3 Buckets to pay less money for assets which are no longer accessed.&lt;/li&gt;
&lt;li&gt;Purchasing Savings Plans and Reserved Instances for instances you know will be used consistently.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These guardrails typically take very little time for customers to enable but most people don't think about them. They also can have major consequences for saving money that adds up every single month.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outsource-your-cost-monitoring"&gt;
  &lt;/a&gt;
  Outsource your cost monitoring
&lt;/h2&gt;

&lt;p&gt;When you're a startup, your focus should be on your business. Spending time having to learn AWS cost APIs and getting them implemented in the manner you want can easily be an entire engineer's time. As your startup grows to have finance and management counterparts who are curious about costs and accounting for them properly, the asks become bespoke and it takes significant engineering time to get cost data organized and delivered to them that's better spent being outsourced.&lt;/p&gt;

&lt;p&gt;In the same way you look to third parties like Sentry for exception handling rather than rolling your own, sourcing cost monitoring solutions is likely your best bet. &lt;a href="https://vantage.sh/"&gt;Vantage&lt;/a&gt; offers a free tier to all startups with less than $2,500 per month in cloud infrastructure costs. You can get up and running in a few minutes and invite team-members to your Vantage account to share reports with others ‚Äî which is a lot better than getting them on the AWS Console itself.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>startup</category>
    </item>
    <item>
      <title>The 9 AWS Serverless Databases ALL App Developers &amp; Software Engineers Should Know About üë®‚Äçüíªüí≠
</title>
      <author>Brian H. Hough</author>
      <pubDate>Fri, 18 Jun 2021 15:43:54 +0000</pubDate>
      <link>https://dev.to/aws-builders/the-9-aws-serverless-databases-all-app-developers-software-engineers-should-know-about-2i3k</link>
      <guid>https://dev.to/aws-builders/the-9-aws-serverless-databases-all-app-developers-software-engineers-should-know-about-2i3k</guid>
      <description>&lt;p&gt;Here's all you need to know about the 9 different AWS Databases and their use cases that EVERY app developer and software engineer should know about üë®‚Äçüíªüí≠&lt;/p&gt;

&lt;p&gt;Last week on Friday, I was invited by WhizLabs to give a webinar on &lt;strong&gt;&lt;code&gt;"AWS Databases Demystified With Their Use Cases"&lt;/code&gt;&lt;/strong&gt; in the launch of their #100DaysOfCloud. In episode 6 of the Tech Stack Playbook podcast, I'm covering an in-depth overview of the 9 AWS serverless databases developers should know about, architecture diagrams of how they work, how they can be used in production, and 2 live demos of DynamoDB and RDS.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a glance at what you‚Äôll learn in this episode:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=4bukN5cVv14"&gt;00:00&lt;/a&gt; Webinar Primer&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=378"&gt;06:18&lt;/a&gt; Overview of a Database&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=457"&gt;07:37&lt;/a&gt; Brief history of serverless Databases&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=576"&gt;09:36&lt;/a&gt; Walkthrough of 9 AWS Databases and their use cases + how to get started with your own apps&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=1848"&gt;30:48&lt;/a&gt; How to set up a DynamoDB table and query your data&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=2162"&gt;36:02&lt;/a&gt; How to spin up an RDS instance in a VPC and manage/update this database with MySQL Workbench&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=3792"&gt;1:03:12&lt;/a&gt; Q&amp;amp;A + Quiz Time!&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=4699"&gt;1:18:19&lt;/a&gt; Conclusion&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4bukN5cVv14"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brief-history-of-serverless-databases"&gt;
  &lt;/a&gt;
  Brief History of Serverless Databases
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I see data as the energy flowing through a home while databases are the electrical grid system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So specifically, data can be the users‚Äô information that could be a username, a password, song, title, author, anything. You can create role-based permissions and share certain types of data with specific groups. Data is the mechanism powering user interactions. The databases define what the users can do in their accounts and in other accounts within the system. And then, data can also determine the rules supporting your software system, and this can be back-end logic.&lt;/p&gt;

&lt;p&gt;This can explain how the system shares data with users, how they get recommendations, for example on a platform like Netflix. See how you get recommendations for the movies you watch! So when we think about front-end and back-end data, now everything is moving towards full-stack.&lt;/p&gt;

&lt;p&gt;This trend has been visible all throughout the history of databases, as you will see here:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1d-physical-databases"&gt;
  &lt;/a&gt;
  1D: Physical Databases
&lt;/h3&gt;

&lt;p&gt;The history of databases goes way back to the abacus. That‚Äôs a physical database where the limitation was that you‚Äôre limited to the data that the system itself can process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2d-server-databases"&gt;
  &lt;/a&gt;
  2D: Server Databases
&lt;/h3&gt;

&lt;p&gt;In the next data dimension, we see that server databases are limited to specific devices that you have to manage, you have to maintain, and you have to patch it to provide updates. There‚Äôs a lot of effort that has to be put into it, so it is cost-intensive, requires skilled professionals at both hardware and software, and can take time away from the important development work you probably need to be doing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3d-serverless-databases"&gt;
  &lt;/a&gt;
  3D: Serverless Databases
&lt;/h3&gt;

&lt;p&gt;This is when we move towards a three-dimensional space of serverless databases. Here, the users can scale their own databases from an operating system and an internet connection. This is the ecosystem AWS has created for developers, for example, a whole ecosystem behind serverless technologies ‚Äì such as, Virtual Private Cloud (VPC) and Elastic Cloud Compute (EC2).&lt;/p&gt;

&lt;p&gt;Now you are able to compute network servers, but you don‚Äôt have to manage them because they‚Äôre managed by other large facilities, managing a ton of different technologies and servers that you‚Äôre using every day. So AWS databases can help you manage and permit your own servers, you can now borrow compute from someone else.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4d-datadriven-development"&gt;
  &lt;/a&gt;
  4D: Data-driven Development
&lt;/h3&gt;

&lt;p&gt;The future is moving rapidly towards prioritizing data-driven development, where it‚Äôll not just be enough to make an app or software, but you will also have to create a data model and manage the data amongst your users.&lt;/p&gt;

&lt;p&gt;Artificial intelligence and machine learning technologies like AWS' SageMaker, DeepComposer, and more provide next generation capacities to turn data into predictive engines. This allows software to anticipate patterns, predict risks or irregularities, and "see" into the future based on the data flowing into the system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-walkthrough-of-9-aws-databases-amp-their-use-cases"&gt;
  &lt;/a&gt;
  A Walkthrough of 9 AWS Databases &amp;amp; Their Use Cases
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#relational-database-service-rds"&gt;
  &lt;/a&gt;
  Relational Database Service (RDS)
&lt;/h3&gt;

&lt;p&gt;Relational Database Service (RDS) is quick to create the framework for a relational AWS database, using a number of different engines. The available DB engines are Aurora from Amazon, PostgreSQL, MySQL, MariaDB, Oracle, and SQL Server. They‚Äôre extremely cost-efficient and highly scalable while maintaining top security. So they allow you to offload read traffic, create and connect to the database within seconds. You can run RDS with a VPC, serverless. Brian efficiently taught the attendees how to create a database using MySQL Workbench and gave some amazing tips for beginners. If you wish to learn more, visit xyz.com.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  DynamoDB
&lt;/h3&gt;

&lt;p&gt;DynamoDB is one of the most popular AWS database use cases that is a really fast, flexible, no SQL database. It lets you use a primary key to index items and have unique identifiers for all the elements in the database. It offers high performance and availability with single-digit latency. Top companies like Lyft, Airbnb, Capital One, Samsung, and Toyota use this AWS database. DynamoDB is accurately designed for application developers who can scale up and down based on their need to create interactive websites, mobile apps, microservices, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elasticache"&gt;
  &lt;/a&gt;
  Elasticache
&lt;/h3&gt;

&lt;p&gt;Elasticache is used for deploying and scaling in-memory data stores. This can happen serverless, using caching rather than just normal, non-performant loading. Caching is really helpful for improving performance and response time ‚Äì operations happening under a millisecond. As an AWS database use case, it offers fully managed Redis and Memcached. As this AWS database is an in-memory data store, it provides low latency and high elasticity for companies like Airbnb, Tinder, or The Pokemon Company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#neptune"&gt;
  &lt;/a&gt;
  Neptune
&lt;/h3&gt;

&lt;p&gt;Neptune is a fully managed service for graph databases. Graph databases are interrelations between users and the data that users generate for our system. This AWS database simply offers the potential to map how users interact, work together, or maybe share information amongst each other. This building of knowledge graphs and identity graphs is very similar to the operating model of Netflix. Let‚Äôs say that you‚Äôre watching a lot of documentaries, maybe about history, then you‚Äôre going to be recommended more documentaries about history, because other people who also watch historical documentaries, might like this specific segment. So using this AWS database use case, you can also create something like identity graphs and start doing pattern detection. Apache Tinkerpop and Gremlin are two services that can work with Neptune, and help you build a graph database architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#redshift"&gt;
  &lt;/a&gt;
  Redshift
&lt;/h3&gt;

&lt;p&gt;Redshift is a relational database management system that is lightning fast and can optimize data at a high scale. With this AWB database, you can implement data encryption and compression as well. Redshift leverages three times better price-performance with high-end AWS designed-hardware. With the help of AWS Nitro Systems, data compression can be accelerated. It is the most widely used cloud data warehouse for combining exabytes of semi-structured and structured data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quantum-ledger-database-qldb"&gt;
  &lt;/a&gt;
  Quantum Ledger Database (QLDB)
&lt;/h3&gt;

&lt;p&gt;One of the most important AWS databases, QLDB is a fully managed serverless database. It has the potential to automatically scale up to support the user‚Äôs demands. As per your own terms, you can also monitor the metrics. It uses PartiQL, a SQL-compatible query language that provides 2-3x faster execution than the common blockchain frameworks. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managed-blockchain"&gt;
  &lt;/a&gt;
  Managed Blockchain
&lt;/h3&gt;

&lt;p&gt;In a managed blockchain, data is stored in a fully managed ledger database but it is not centralized and is distributed among the series of nodes. Hyperledger Fabric or Ethereum makes it easier to join public networks or create and manage private networks. Adding new nodes and members is very easy with this AWS database, while it is highly scalable and secure. The security of transactions is maintained through traceability across the blockchain network as it stores changelogs for the entire history of events. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentdb"&gt;
  &lt;/a&gt;
  DocumentDB
&lt;/h3&gt;

&lt;p&gt;If you‚Äôre interested in leveraging MongoDB for high scalability and availability, then DocumentDB is a great AWS database use case for that. It uses JSON-like data to process millions of requests per second and offers 15 low latency read replicas over three availability zones, within seconds or minutes. And you can scale up very quickly and also have very high availability, up to 99.99%. For instance, you have a MongoDB shell setup and it connects to the DocumentDB cluster with a few instances that are happening within a virtual private cloud. And they‚Äôre all happening within an AWS region. This is highly professional and will allow you to leverage MongoDB services, right within AWS. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keyspaces"&gt;
  &lt;/a&gt;
  Keyspaces
&lt;/h3&gt;

&lt;p&gt;Keyspaces is a serverless database with Apache Cassandra, which is a distributed, wide-column store, no SQL database management system. This AWS database offers a management system for huge amounts of data with no single point of failure. So you never have to worry about servers anymore, or provisioning or patching, that you are usually concerned with while managing servers in-house. Now you can build apps with low latency that can process data incredibly fast. And you can run Cassandra app codes right from AWS, which is almost like a talk-to-type skill.&lt;/p&gt;

&lt;p&gt;Check out the full recording below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4bukN5cVv14"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-user-brianhhough-"&gt;
  &lt;/a&gt;
  &lt;div class="ltag__user ltag__user__id__259541"&gt;
  
    .ltag__user__id__259541 .follow-action-button {
      background-color: #0015b8 !important;
      color: #fdf9f3 !important;
      border-color: #0015b8 !important;
    }
  
    &lt;a href="/brianhhough" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rY9IPqa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2kYQV_P---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/259541/2f6a1717-f422-4f36-92d2-295d4b0150db.png" alt="brianhhough image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/brianhhough"&gt;Brian H. Hough&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/brianhhough"&gt;I'm a branding strategist, UI/UX designer and software engineer with a passion for innovation. As an AWS Community Builder &amp;amp; 4x Global Hackathon Winner, I love sharing how tech can change the world.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/h2&gt;

&lt;p&gt;If you got value from this article, please LIKE üëè, COMMENT üìù, and SHARE ‚Ü©Ô∏è this post with your network, as well as FOLLOW üì≤ my &lt;a href="https://twitter.com/brianhhough"&gt;Twitter&lt;/a&gt;, &lt;a href="https://instagram.com/brianhhough"&gt;Instagram&lt;/a&gt; and &lt;a href="https://linkedin.com/in/brianhhough"&gt;LinkedIn&lt;/a&gt; accounts for further insights on technology, innovation, and our digital world.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>serverless</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>The 9 AWS Serverless Databases ALL App Developers &amp; Software Engineers Should Know About üë®‚Äçüíªüí≠</title>
      <author>Brian H. Hough</author>
      <pubDate>Fri, 18 Jun 2021 15:41:36 +0000</pubDate>
      <link>https://dev.to/brianhhough/the-9-aws-serverless-databases-all-app-developers-software-engineers-should-know-about-nhl</link>
      <guid>https://dev.to/brianhhough/the-9-aws-serverless-databases-all-app-developers-software-engineers-should-know-about-nhl</guid>
      <description>&lt;p&gt;Here's all you need to know about the 9 different AWS Databases and their use cases that EVERY app developer and software engineer should know about üë®‚Äçüíªüí≠&lt;/p&gt;

&lt;p&gt;Last week on Friday, I was invited by WhizLabs to give a webinar on &lt;strong&gt;&lt;code&gt;"AWS Databases Demystified With Their Use Cases"&lt;/code&gt;&lt;/strong&gt; in the launch of their #100DaysOfCloud. In episode 6 of the Tech Stack Playbook podcast, I'm covering an in-depth overview of the 9 AWS serverless databases developers should know about, architecture diagrams of how they work, how they can be used in production, and 2 live demos of DynamoDB and RDS.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a glance at what you‚Äôll learn in this episode:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=4bukN5cVv14"&gt;00:00&lt;/a&gt; Webinar Primer&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=378"&gt;06:18&lt;/a&gt; Overview of a Database&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=457"&gt;07:37&lt;/a&gt; Brief history of serverless Databases&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=576"&gt;09:36&lt;/a&gt; Walkthrough of 9 AWS Databases and their use cases + how to get started with your own apps&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=1848"&gt;30:48&lt;/a&gt; How to set up a DynamoDB table and query your data&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=2162"&gt;36:02&lt;/a&gt; How to spin up an RDS instance in a VPC and manage/update this database with MySQL Workbench&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=3792"&gt;1:03:12&lt;/a&gt; Q&amp;amp;A + Quiz Time!&lt;br&gt;
&lt;a href="https://youtu.be/4bukN5cVv14?t=4699"&gt;1:18:19&lt;/a&gt; Conclusion&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4bukN5cVv14"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brief-history-of-serverless-databases"&gt;
  &lt;/a&gt;
  Brief History of Serverless Databases
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I see data as the energy flowing through a home while databases are the electrical grid system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So specifically, data can be the users‚Äô information that could be a username, a password, song, title, author, anything. You can create role-based permissions and share certain types of data with specific groups. Data is the mechanism powering user interactions. The databases define what the users can do in their accounts and in other accounts within the system. And then, data can also determine the rules supporting your software system, and this can be back-end logic.&lt;/p&gt;

&lt;p&gt;This can explain how the system shares data with users, how they get recommendations, for example on a platform like Netflix. See how you get recommendations for the movies you watch! So when we think about front-end and back-end data, now everything is moving towards full-stack.&lt;/p&gt;

&lt;p&gt;This trend has been visible all throughout the history of databases, as you will see here:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1d-physical-databases"&gt;
  &lt;/a&gt;
  1D: Physical Databases
&lt;/h3&gt;

&lt;p&gt;The history of databases goes way back to the abacus. That‚Äôs a physical database where the limitation was that you‚Äôre limited to the data that the system itself can process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2d-server-databases"&gt;
  &lt;/a&gt;
  2D: Server Databases
&lt;/h3&gt;

&lt;p&gt;In the next data dimension, we see that server databases are limited to specific devices that you have to manage, you have to maintain, and you have to patch it to provide updates. There‚Äôs a lot of effort that has to be put into it, so it is cost-intensive, requires skilled professionals at both hardware and software, and can take time away from the important development work you probably need to be doing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3d-serverless-databases"&gt;
  &lt;/a&gt;
  3D: Serverless Databases
&lt;/h3&gt;

&lt;p&gt;This is when we move towards a three-dimensional space of serverless databases. Here, the users can scale their own databases from an operating system and an internet connection. This is the ecosystem AWS has created for developers, for example, a whole ecosystem behind serverless technologies ‚Äì such as, Virtual Private Cloud (VPC) and Elastic Cloud Compute (EC2).&lt;/p&gt;

&lt;p&gt;Now you are able to compute network servers, but you don‚Äôt have to manage them because they‚Äôre managed by other large facilities, managing a ton of different technologies and servers that you‚Äôre using every day. So AWS databases can help you manage and permit your own servers, you can now borrow compute from someone else.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4d-datadriven-development"&gt;
  &lt;/a&gt;
  4D: Data-driven Development
&lt;/h3&gt;

&lt;p&gt;The future is moving rapidly towards prioritizing data-driven development, where it‚Äôll not just be enough to make an app or software, but you will also have to create a data model and manage the data amongst your users.&lt;/p&gt;

&lt;p&gt;Artificial intelligence and machine learning technologies like AWS' SageMaker, DeepComposer, and more provide next generation capacities to turn data into predictive engines. This allows software to anticipate patterns, predict risks or irregularities, and "see" into the future based on the data flowing into the system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-walkthrough-of-9-aws-databases-amp-their-use-cases"&gt;
  &lt;/a&gt;
  A Walkthrough of 9 AWS Databases &amp;amp; Their Use Cases
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#relational-database-service-rds"&gt;
  &lt;/a&gt;
  Relational Database Service (RDS)
&lt;/h3&gt;

&lt;p&gt;Relational Database Service (RDS) is quick to create the framework for a relational AWS database, using a number of different engines. The available DB engines are Aurora from Amazon, PostgreSQL, MySQL, MariaDB, Oracle, and SQL Server. They‚Äôre extremely cost-efficient and highly scalable while maintaining top security. So they allow you to offload read traffic, create and connect to the database within seconds. You can run RDS with a VPC, serverless. Brian efficiently taught the attendees how to create a database using MySQL Workbench and gave some amazing tips for beginners. If you wish to learn more, visit xyz.com.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  DynamoDB
&lt;/h3&gt;

&lt;p&gt;DynamoDB is one of the most popular AWS database use cases that is a really fast, flexible, no SQL database. It lets you use a primary key to index items and have unique identifiers for all the elements in the database. It offers high performance and availability with single-digit latency. Top companies like Lyft, Airbnb, Capital One, Samsung, and Toyota use this AWS database. DynamoDB is accurately designed for application developers who can scale up and down based on their need to create interactive websites, mobile apps, microservices, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elasticache"&gt;
  &lt;/a&gt;
  Elasticache
&lt;/h3&gt;

&lt;p&gt;Elasticache is used for deploying and scaling in-memory data stores. This can happen serverless, using caching rather than just normal, non-performant loading. Caching is really helpful for improving performance and response time ‚Äì operations happening under a millisecond. As an AWS database use case, it offers fully managed Redis and Memcached. As this AWS database is an in-memory data store, it provides low latency and high elasticity for companies like Airbnb, Tinder, or The Pokemon Company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#neptune"&gt;
  &lt;/a&gt;
  Neptune
&lt;/h3&gt;

&lt;p&gt;Neptune is a fully managed service for graph databases. Graph databases are interrelations between users and the data that users generate for our system. This AWS database simply offers the potential to map how users interact, work together, or maybe share information amongst each other. This building of knowledge graphs and identity graphs is very similar to the operating model of Netflix. Let‚Äôs say that you‚Äôre watching a lot of documentaries, maybe about history, then you‚Äôre going to be recommended more documentaries about history, because other people who also watch historical documentaries, might like this specific segment. So using this AWS database use case, you can also create something like identity graphs and start doing pattern detection. Apache Tinkerpop and Gremlin are two services that can work with Neptune, and help you build a graph database architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#redshift"&gt;
  &lt;/a&gt;
  Redshift
&lt;/h3&gt;

&lt;p&gt;Redshift is a relational database management system that is lightning fast and can optimize data at a high scale. With this AWB database, you can implement data encryption and compression as well. Redshift leverages three times better price-performance with high-end AWS designed-hardware. With the help of AWS Nitro Systems, data compression can be accelerated. It is the most widely used cloud data warehouse for combining exabytes of semi-structured and structured data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quantum-ledger-database-qldb"&gt;
  &lt;/a&gt;
  Quantum Ledger Database (QLDB)
&lt;/h3&gt;

&lt;p&gt;One of the most important AWS databases, QLDB is a fully managed serverless database. It has the potential to automatically scale up to support the user‚Äôs demands. As per your own terms, you can also monitor the metrics. It uses PartiQL, a SQL-compatible query language that provides 2-3x faster execution than the common blockchain frameworks. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managed-blockchain"&gt;
  &lt;/a&gt;
  Managed Blockchain
&lt;/h3&gt;

&lt;p&gt;In a managed blockchain, data is stored in a fully managed ledger database but it is not centralized and is distributed among the series of nodes. Hyperledger Fabric or Ethereum makes it easier to join public networks or create and manage private networks. Adding new nodes and members is very easy with this AWS database, while it is highly scalable and secure. The security of transactions is maintained through traceability across the blockchain network as it stores changelogs for the entire history of events. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentdb"&gt;
  &lt;/a&gt;
  DocumentDB
&lt;/h3&gt;

&lt;p&gt;If you‚Äôre interested in leveraging MongoDB for high scalability and availability, then DocumentDB is a great AWS database use case for that. It uses JSON-like data to process millions of requests per second and offers 15 low latency read replicas over three availability zones, within seconds or minutes. And you can scale up very quickly and also have very high availability, up to 99.99%. For instance, you have a MongoDB shell setup and it connects to the DocumentDB cluster with a few instances that are happening within a virtual private cloud. And they‚Äôre all happening within an AWS region. This is highly professional and will allow you to leverage MongoDB services, right within AWS. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keyspaces"&gt;
  &lt;/a&gt;
  Keyspaces
&lt;/h3&gt;

&lt;p&gt;Keyspaces is a serverless database with Apache Cassandra, which is a distributed, wide-column store, no SQL database management system. This AWS database offers a management system for huge amounts of data with no single point of failure. So you never have to worry about servers anymore, or provisioning or patching, that you are usually concerned with while managing servers in-house. Now you can build apps with low latency that can process data incredibly fast. And you can run Cassandra app codes right from AWS, which is almost like a talk-to-type skill.&lt;/p&gt;

&lt;p&gt;Check out the full recording below:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4bukN5cVv14"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-user-brianhhough-"&gt;
  &lt;/a&gt;
  &lt;div class="ltag__user ltag__user__id__259541"&gt;
  
    .ltag__user__id__259541 .follow-action-button {
      background-color: #0015b8 !important;
      color: #fdf9f3 !important;
      border-color: #0015b8 !important;
    }
  
    &lt;a href="/brianhhough" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rY9IPqa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2kYQV_P---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/259541/2f6a1717-f422-4f36-92d2-295d4b0150db.png" alt="brianhhough image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/brianhhough"&gt;Brian H. Hough&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/brianhhough"&gt;I'm a branding strategist, UI/UX designer and software engineer with a passion for innovation. As an AWS Community Builder &amp;amp; 4x Global Hackathon Winner, I love sharing how tech can change the world.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/h2&gt;

&lt;p&gt;If you got value from this article, please LIKE üëè, COMMENT üìù, and SHARE ‚Ü©Ô∏è this post with your network, as well as FOLLOW üì≤ my &lt;a href="https://twitter.com/brianhhough"&gt;Twitter&lt;/a&gt;, &lt;a href="https://instagram.com/brianhhough"&gt;Instagram&lt;/a&gt; and &lt;a href="https://linkedin.com/in/brianhhough"&gt;LinkedIn&lt;/a&gt; accounts for further insights on technology, innovation, and our digital world.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>database</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>4 Websites You Can Publish Your Static Projects ü§©ü§©</title>
      <author>Musa Yazlƒ±k</author>
      <pubDate>Fri, 18 Jun 2021 15:31:18 +0000</pubDate>
      <link>https://dev.to/musayazlik/4-websites-you-can-publish-your-static-projects-4pe3</link>
      <guid>https://dev.to/musayazlik/4-websites-you-can-publish-your-static-projects-4pe3</guid>
      <description>&lt;p&gt;You make a static project (not a database operation) and you want to go live and publish it on a host. First of all, you need to buy a domain and host, right? No longer needed. In this article, I will tell you how you can get your static projects live without buying a host and domain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heroku-both-static-projects-and-dynamic-projects"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; (Both static projects and dynamic projects)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WQKU4wa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/bkailok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WQKU4wa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/bkailok.png" alt="Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I want to start with the first most popular heroku. Heroku is a partially free cloud-based platform service. What does it mean? One of the biggest reasons why Heroku is popular is that it supports not only static projects, but also projects that you create dynamically. In other words, it is a platform where you can publish your pros that you have prepared in programming languages such as php, node, java. Since I do mostly static works, I do not use this site excessively. But I published a project of mine on this site. You can take a look at it by clicking &lt;a href="https://bootstrap5offcanvas.herokuapp.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#netlify"&gt;
  &lt;/a&gt;
  &lt;a href="https://netlify.com/"&gt;Netlify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FvGtOOiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/gbq5sso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FvGtOOiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/gbq5sso.png" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another site is Netlify. On this site, you can only publish your static projects. It is simpler and easier to use than heroku. It pulls project files from storage services such as github, gitlab and bitbucket. It provides a partially free service on this site. The only downside is that it gives a monthly traffic quota of 100gb for the free package and asks for $20 for an additional 100gb. You can click &lt;a href="https://www.netlify.com/pricing/"&gt;here&lt;/a&gt; to get more detailed information about Netlify‚Äôs free and paid packages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vercel"&gt;
  &lt;/a&gt;
  &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--930PlH5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/iajqgfv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--930PlH5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/iajqgfv.png" alt="Vercel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vercel also offers a similar service for netlify. The only difference is that it offers the clone template service for free. Creating a next.js project stored on Github takes only 10 seconds in vercel. I love this feature of Vercel.üòÅ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#surge"&gt;
  &lt;/a&gt;
  &lt;a href="https://surge.sh/"&gt;Surge&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3-AK60MN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/eo3raw2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-AK60MN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.hizliresim.com/eo3raw2.png" alt="surge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes. We have arrived at our last site, surge. My favorite part of this site is that there is no need to register. You can push your project directly without leaving the terminal environment, and your project is directly transferred to the server environment and gives you a domain. It doesn‚Äôt take you 5 seconds to transfer your project to the server environment. I am using surge to see how the project I have made instantly looks on mobile. Then I enter the url given to me from the phone. In its free package, it provides unlimited publishing, a limited number of projects (I couldn‚Äôt find out how many) and simple ssl. You can view the features of the paid package by clicking here. But I know you‚Äôll stop looking when I tell you the price is $30 a month. üòÇ&lt;/p&gt;

&lt;p&gt;In this article, I told you about the sites where you can publish your static projects without a host or domain, completely free of charge. I hope it was useful content. See you in my next blog post‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.musayazlik.com/"&gt;You can follow my personal site for more content.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>static</category>
      <category>popular</category>
      <category>project</category>
      <category>websites</category>
    </item>
    <item>
      <title>What is a Coding Playlist?</title>
      <author>Kaylan Stock</author>
      <pubDate>Fri, 18 Jun 2021 15:27:37 +0000</pubDate>
      <link>https://dev.to/harperdb/what-is-a-coding-playlist-5cc5</link>
      <guid>https://dev.to/harperdb/what-is-a-coding-playlist-5cc5</guid>
      <description>&lt;p&gt;What is your favorite music to work to? OR do you prefer no music at all because you need quiet to focus on whatever it is that you are working on? Do you like music with words when you‚Äôre relaxing, but music with no words when you are trying to meet a deadline at work? At HarperDB, we have a wide range of music tastes spanning from classical, hip hop, reggae, and even as one of our devs put it: ‚Äúsilence with my frustrations...‚Äù ü§£. If you ever wish you had other developer‚Äôs suggestions for music to code and work to, you are not alone!&lt;/p&gt;

&lt;p&gt;So that is why we created  &lt;a href="https://harperdb.io/company/harperdb-coding-tunes/"&gt;‚ÄúHarperDB‚Äôs Coding Tunes‚Äù&lt;/a&gt;, a Spotify playlist with hand-picked jams from every developer on our team. We feel the pain of needing the perfect tune to have on hand when compiling your code or working through a nasty bug. No one wants to spend extra time trying to sift through the millions of playlists on your music app to find just the right vibe, so we went ahead and did it for you. &lt;/p&gt;

&lt;p&gt;Each month we will be releasing a new coding playlist, and we will keep past months‚Äô playlists live so if you fall in love with one you won‚Äôt have to worry about losing it. I will also be chatting with one of our fearless developers on how music moves them and  &lt;a href="https://harperdb.io/company/harperdb-coding-tunes/#meet_developer"&gt;posting it on our playlist landing page&lt;/a&gt;. With this interview, they share a bit about the music and artists that help get them through the workday. So if you haven‚Äôt already,  &lt;a href="https://open.spotify.com/user/x7c6mrh7m3db6jua7b0n8gyf1?si=cad26bbd00664437"&gt;follow the HarperDB Spotify&lt;/a&gt;  and check out the current playlists available here. &lt;/p&gt;

&lt;p&gt;You can also like the playlists to save them for later AND we even have an option to  &lt;a href="https://harperdb.io/company/harperdb-coding-tunes/#subscribe_spotify"&gt;subscribe here &lt;/a&gt; if you want to know every time the newest playlist of the month has been released. Finally, if you have some coding tunes you want to submit for the next month‚Äôs playlist, you can email us at  &lt;a href="//mailto:music2code2@harperdb.io"&gt;music2code2@harperdb.io&lt;/a&gt;. üôÇ  Our entire team would love to hear your recommendations and find out what music moves YOU, our rad HarperDB community. So don‚Äôt be shy, go &lt;a href="https://open.spotify.com/playlist/1ne9dpaZmepjKpwjWXaRuz?si=13dee1951f854520"&gt;throw on the June playlist right now&lt;/a&gt; and code away! &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>webdev</category>
      <category>music</category>
    </item>
    <item>
      <title>Creating a Calculator using Java AWT</title>
      <author>ROHIT KUMAR</author>
      <pubDate>Fri, 18 Jun 2021 15:11:48 +0000</pubDate>
      <link>https://dev.to/rohitku62348336/creating-a-calculator-using-java-awt-16ll</link>
      <guid>https://dev.to/rohitku62348336/creating-a-calculator-using-java-awt-16ll</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VlNQMt7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f52tpnamg4dmf75xg6p4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VlNQMt7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f52tpnamg4dmf75xg6p4.png" alt="OUTPUT"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-this-java-tutorial"&gt;
  &lt;/a&gt;
  In this Java tutorial,
&lt;/h3&gt;

&lt;p&gt;We will learn how to build a simple calculator using Java AWT. This calculator has some simple functionality like all the basic mathematical operations and some special &lt;em&gt;addon features&lt;/em&gt; , we will see as we follow&lt;br&gt;
&lt;strong&gt;So let‚Äôs get started&lt;/strong&gt;&lt;br&gt;
FIRST of all small description on &lt;a href="https://www.javatpoint.com/java-awt"&gt;AWT&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;AWT&lt;/strong&gt;&lt;em&gt;(Abstract Window Toolkit)&lt;/em&gt; is an API that helps in building GUI &lt;em&gt;(Graphical User Interface)&lt;/em&gt; based java applications. &lt;code&gt;GUI&lt;/code&gt; helps in user interactions using some graphics. It primarily consists of a set of classes and methods that are required for creating and managing the GUI in a simplified manner such as &lt;code&gt;buttons&lt;/code&gt;,&lt;code&gt;windows&lt;/code&gt;,&lt;code&gt;frame&lt;/code&gt;,&lt;code&gt;textfield&lt;/code&gt;,&lt;code&gt;RadioButton&lt;/code&gt; &lt;code&gt;etc&lt;/code&gt;&lt;br&gt;
I have provided the &lt;strong&gt;Java code&lt;/strong&gt; for the calculator which uses &lt;code&gt;Action listener interface&lt;/code&gt; for EventHandling.&lt;br&gt;
And yes its not an applet code, which is deprecated&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.awt.event.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;  
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyCalc&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;WindowAdapter&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;ActionListener&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt; 
  &lt;span class="nc"&gt;Frame&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;span class="nc"&gt;Label&lt;/span&gt; &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;xd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;MyCalc&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;  
  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Frame&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MY CALCULATOR"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// INSTANTIATING COMPONENETS &lt;/span&gt;
&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Label&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; 
&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBackground&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LIGHT_GRAY&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;


&lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;340&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;340&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;340&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"9"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;410&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+/-"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;410&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;410&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"back"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
 &lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;340&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"="&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;245&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;410&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"CE"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBounds&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;


&lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
&lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 

&lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addActionListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addWindowListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//ADDING TO FRAME   &lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setSize&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setVisible&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt; 
                     &lt;span class="c1"&gt;//FOR CLOSING THE WINDOW&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;windowClosing&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;WindowEvent&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;actionPerformed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ActionEvent&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; 
  &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                        &lt;span class="c1"&gt;//NUMBER BUTTON &lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
 &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b3&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b5&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b6&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b7&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b8&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b9&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"9"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bpts&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;//ADD DECIMAL PTS&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bneg&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;//FOR NEGATIVE&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;// FOR  BACKSPACE&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;()-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;StringIndexOutOfBoundsException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;//AIRTHMETIC BUTTON&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;                     &lt;span class="c1"&gt;//FOR ADDITION&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bsub&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;                    &lt;span class="c1"&gt;//FOR SUBTRACTION&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bmult&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;                   &lt;span class="c1"&gt;//FOR MULTIPLICATION&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bdiv&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;                   &lt;span class="c1"&gt;//FOR DIVISION&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bmod&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;                  &lt;span class="c1"&gt;//FOR MOD/REMAINDER&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
                         &lt;span class="c1"&gt;//RESULT BUTTON&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;          
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ENTER NUMBER FIRST "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;    
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xd&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
                        &lt;span class="c1"&gt;//FOR CLEARING THE LABEL and Memory&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;xd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt; 

&lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="c1"&gt;//MAIN METHOD where objects of MyCalc is instantaiated&lt;/span&gt;
 &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[]){&lt;/span&gt;  
       &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;MyCalc&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
   &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;SO what I did is just implemented &lt;code&gt;ActionListener&lt;/code&gt;interface in our &lt;code&gt;MyCalc&lt;/code&gt; class and in its constructor i Register the AWT components with the Listener and done EventHandling using &lt;code&gt;actionPerformed&lt;/code&gt; method.&lt;br&gt;
OUR all the logic part in written in this &lt;code&gt;actionPerformed&lt;/code&gt; function only which we will see below:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#logic-part"&gt;
  &lt;/a&gt;
  LOGIC PART
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#1for-numeric-button"&gt;
  &lt;/a&gt;
  1.FOR NUMERIC BUTTON
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;b1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;//b1 for number 1&lt;/span&gt;
 &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;// 1 will merged at the end of the previous value&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;when any of the numeric button pressed &lt;br&gt;
whatever value in label &lt;code&gt;l1&lt;/code&gt; will be stored in a variable &lt;code&gt;zt&lt;/code&gt; and then concatenated with the corresponding number and  and then displayed in the label &lt;code&gt;l1&lt;/code&gt;&lt;br&gt;
 for NEGATIVE and DECIMAL PTS Button we did it similarly&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2for-airthmetic-button"&gt;
  &lt;/a&gt;
  2.FOR AIRTHMETIC BUTTON
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;badd&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;//FOR ADDITION&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
  &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 1 for the adddition&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;NOW  here we store the value of label &lt;code&gt;l1&lt;/code&gt; into a variable &lt;code&gt;num1&lt;/code&gt; after converting into double type which will be technically &lt;strong&gt;1st number&lt;/strong&gt;&lt;br&gt;
and then and set label &lt;code&gt;l1&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;we will just use a &lt;code&gt;check&lt;/code&gt; variable for getting that this particular airthmetic button(here &lt;code&gt;+&lt;/code&gt;) was clicked so we can do this operation in our &lt;code&gt;=&lt;/code&gt; button&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3for-equals-button"&gt;
  &lt;/a&gt;
  3.FOR EQUALS BUTTON
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bcalc&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;          
    &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;xd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;    
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valueOf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xd&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;NOW again store the value of &lt;code&gt;l1&lt;/code&gt; into &lt;code&gt;num2&lt;/code&gt; variable which will be techincally &lt;strong&gt;2nd number&lt;/strong&gt;&lt;br&gt;
and then check the value of variable &lt;code&gt;check&lt;/code&gt; and then do corresponding  operation and after that display result in label &lt;code&gt;l1&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4for-clear-button"&gt;
  &lt;/a&gt;
  4.FOR CLEAR BUTTON
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bclr&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;xd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;here updated all the variable we use to its Default value &lt;code&gt;0&lt;/code&gt;&lt;br&gt;
and set label &lt;code&gt;l1&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; so that we can start our new calculation afterward&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#5for-backspace-button"&gt;
  &lt;/a&gt;
  5.FOR BACKSPACE BUTTON
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSource&lt;/span&gt;&lt;span class="o"&gt;()==&lt;/span&gt;&lt;span class="n"&gt;bback&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;// FOR  BACKSPACE&lt;/span&gt;
  &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;zt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;()-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;StringIndexOutOfBoundsException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;
  &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;here just updates the value in &lt;code&gt;l1&lt;/code&gt; by removing last digits using &lt;code&gt;substring&lt;/code&gt; function&lt;br&gt;
and handled one &lt;code&gt;StringIndexOutOfBoundsException&lt;/code&gt; which occur when our value in &lt;code&gt;label&lt;/code&gt; is null and still pressing &lt;code&gt;back&lt;/code&gt; Button&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#6special-addons-feature"&gt;
  &lt;/a&gt;
  6.SPECIAL ADDONS FEATURE
&lt;/h4&gt;

&lt;p&gt;what I did is just handled one execption in &lt;em&gt;EQUAL&lt;/em&gt; and all &lt;em&gt;AIRTHMETIC&lt;/em&gt; Buttons and printed a desired message according to situtation&lt;br&gt;
inside &lt;em&gt;AIRTHMETIC BUTTONS&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NumberFormatException&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Invalid Format"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;inside &lt;em&gt;EQUALS BUTTON&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseDouble&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getText&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ENTER NUMBER FIRST "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;when we was converting the value into the double value, BUT label &lt;code&gt;l1&lt;/code&gt; has &lt;code&gt;null&lt;/code&gt; value &lt;em&gt;(i.e. label is empty)&lt;/em&gt; and we still pressed these button then it will generate &lt;code&gt;NumberFormatException&lt;/code&gt; execption&lt;br&gt;
hence we catch it and printed desired message&lt;br&gt;
 For eg:&lt;br&gt;
If I click&lt;code&gt;1&lt;/code&gt; then &lt;code&gt;+&lt;/code&gt; and then i click &lt;code&gt;-&lt;/code&gt; instead of some other numeric button, hence this an invalid format, and when &lt;code&gt;-&lt;/code&gt;was clicked at that time &lt;code&gt;label&lt;/code&gt; was &lt;code&gt;null&lt;/code&gt; hence execption generated so just handled it and printed &lt;code&gt;invalid format&lt;/code&gt; in&lt;code&gt;label&lt;/code&gt;&lt;br&gt;
SIMILARLY, whenever &lt;code&gt;label&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;,and  &lt;code&gt;=&lt;/code&gt; will be clicked  just &lt;code&gt;ENTER NUMBER FIRST&lt;/code&gt; will be displayed inside &lt;code&gt;label&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With this, we come to an end of this Java AWT Tutorial.&lt;br&gt;
So just go through the code and try it. If you have any difficulty in understanding or using the code, then you ask by &lt;em&gt;commenting below&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

&lt;p&gt;You can follow me on:&lt;br&gt;
&lt;a href="https://twitter.com/ROHITKU62348336"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/rohit-kumar-4104201bb/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>guiapplication</category>
    </item>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 18th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 18 Jun 2021 15:11:19 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-18th-june-2021-34d1</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-18th-june-2021-34d1</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-astro"&gt;
  &lt;/a&gt;
  1. Astro
&lt;/h3&gt;

&lt;p&gt;Astro is a fresh but familiar approach to building websites. Astro combines decades of proven performance best practices with the DX improvements of the component-oriented era. Use your favorite JavaScript framework and automatically ship the bare-minimum amount of JavaScript‚Äîby default.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/snowpackjs"&gt;
        snowpackjs
      &lt;/a&gt; / &lt;a href="https://github.com/snowpackjs/astro"&gt;
        astro
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üöÄüßë‚ÄçüöÄ Keep your eyes to the skies, astronauts!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/snowpackjs/astro/blob/main/assets/social/banner.png?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zijhH0SU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/snowpackjs/astro/raw/main/assets/social/banner.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Astro&lt;/strong&gt; is a &lt;em&gt;fresh but familiar&lt;/em&gt; approach to building websites. Astro combines decades of proven performance best practices with the DX improvements of the component-oriented era. Use your favorite JavaScript framework and automatically ship the bare-minimum amount of JavaScript‚Äîby default.&lt;/p&gt;
&lt;p&gt;Learn more: &lt;a href="https://astro.build/blog/introducing-astro" rel="nofollow"&gt;https://astro.build/blog/introducing-astro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Project Status&lt;/h2&gt;
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;Astro is still an early beta, missing features and bugs are to be expected!&lt;/strong&gt; If you can stomach it, then Astro-built sites are production ready and several production websites built with Astro already exist in the wild. We will update this note once we get closer to a stable, v1.0 release.&lt;/p&gt;
&lt;h2&gt;
üîß Quick Start&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Astro is built with &lt;a href="https://nodejs.org/api/esm.html" rel="nofollow"&gt;ESM modules&lt;/a&gt; which are not supported in older version of Node.js. The minimum supported version is &lt;strong&gt;14.15.1&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; create your project&lt;/span&gt;
mkdir new-project-directory
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; new-project-directory
npm init astro
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install your dependencies&lt;/span&gt;
npm install
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; start the dev server and open your browser&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/snowpackjs/astro"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-supercookie"&gt;
  &lt;/a&gt;
  2. Supercookie
&lt;/h3&gt;

&lt;p&gt;Supercookie uses favicons to assign a unique identifier to website visitors. Unlike traditional tracking methods, this ID can be stored almost persistently and cannot be easily cleared by the user.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jonasstrehle"&gt;
        jonasstrehle
      &lt;/a&gt; / &lt;a href="https://github.com/jonasstrehle/supercookie"&gt;
        supercookie
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚ö†Ô∏è Browser fingerprinting via favicon!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://supercookie.me" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/25f77dc7469b5d23b89dca133caa1d9fab693c521c1ed8a813e534f16f7f5522/687474703a2f2f7375706572636f6f6b69652e6d652f66617669636f6e2e69636f" alt="supercookie" width="100"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://supercookie.me/workwise" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/addf32360f5db5f8c7df1790eef5a589167d1ba9b571c0076430dee3e626e300/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63732d7375706572636f6f6b69652e6d652d626c7565" alt="Documentation"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://supercookie.me" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/aed513e66a23738c138bf7ea440b77744692277eed902b740b04fc9e46e00e03/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f646f776e5f6d6573736167653d646f776e2675705f636f6c6f723d677265656e2675705f6d6573736167653d6f6e6c696e652675726c3d68747470732533412532462532467375706572636f6f6b69652e6d65" alt="Website Status"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/jonasstrehle/supercookie"&gt;
    &lt;img src="https://camo.githubusercontent.com/bfd76a530bfd3d78825b38dbf3a5217287d723c46ce52e2b93f1a61ed66bc1ce/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a6f6e617373747265686c652f7375706572636f6f6b6965" alt="License"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://supercookie.me" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/942e0da483f75969b70a6de8ee6a292e40b41fadd4f31937a8fe21a89f54d63c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e3f6c6162656c3d46696e6765727072696e74732671756572793d696e6465782675726c3d68747470733a2f2f7375706572636f6f6b69652e6d652f61706926636f6c6f723d79656c6c6f77" alt="Fingerprint index"&gt;
  &lt;/a&gt;
  &lt;a href="https://supercookie.me" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/9ae03bc8e302b45fef0fab3159e3fc79f9bf295478e407cd8860f33eedd0d3e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e3f6c6162656c3d43757272656e742532307265646972656374732671756572793d626974732675726c3d68747470733a2f2f7375706572636f6f6b69652e6d652f61706926636f6c6f723d79656c6c6f77" alt="N Redirects"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supercookie&lt;/strong&gt; uses favicons to assign a unique identifier to website visitors.&lt;br&gt;
Unlike traditional tracking methods, this ID can be stored almost persistently and cannot be easily cleared by the user.&lt;/p&gt;
&lt;p&gt;The tracking method works even in the browser's incognito mode and is not cleared by flushing the cache, closing the browser or restarting the operating system, using a VPN or installing AdBlockers. üçø &lt;a href="https://supercookie.me" rel="nofollow"&gt;Live demo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;h3&gt;
üí≠ Inspiration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Paper by Scientists at University of Illinois, Chicago: &lt;a href="https://www.cs.uic.edu/~polakis/papers/solomos-ndss21.pdf" rel="nofollow"&gt;www.cs.uic.edu&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Article by heise: &lt;a href="https://heise.de/-5027814" rel="nofollow"&gt;heise.de&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7be57ca62e0caafac7b0208db4796b8cf043234e51069979401bacdfef12da3c/68747470733a2f2f656d6f6a6970656469612d75732e73332e6475616c737461636b2e75732d776573742d312e616d617a6f6e6177732e636f6d2f7468756d62732f36302f6170706c652f3237312f706c61636172645f31666161372e706e67"&gt;&lt;img alt="ü™ß" width="27" src="https://camo.githubusercontent.com/7be57ca62e0caafac7b0208db4796b8cf043234e51069979401bacdfef12da3c/68747470733a2f2f656d6f6a6970656469612d75732e73332e6475616c737461636b2e75732d776573742d312e616d617a6f6e6177732e636f6d2f7468756d62732f36302f6170706c652f3237312f706c61636172645f31666161372e706e67"&gt;&lt;/a&gt; Purpose&lt;/h3&gt;
&lt;p&gt;This repository is for &lt;strong&gt;educational&lt;/strong&gt; and &lt;strong&gt;demonstration purposes&lt;/strong&gt; only!&lt;/p&gt;
&lt;p&gt;The demo of "supercookie" as well as the publication of the source code of this repository is intended to draw attention to the problem of tracking possibilities using favicons.&lt;/p&gt;
&lt;p&gt;üìï &lt;a href="https://supercookie.me/workwise" rel="nofollow"&gt;Full documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;h3&gt;
üîß Docker&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;requirements&lt;/strong&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/548a186b08e91254a5a2368587d561e061d047e034c95109237a917e652f02f4/68747470733a2f2f646f63732e646f636b65722e636f6d2f66617669636f6e2e69636f"&gt;&lt;img src="https://camo.githubusercontent.com/548a186b08e91254a5a2368587d561e061d047e034c95109237a917e652f02f4/68747470733a2f2f646f63732e646f636b65722e636f6d2f66617669636f6e2e69636f" width="12"&gt;&lt;/a&gt; &lt;a href="https://docs.docker.com/get-docker/" rel="nofollow"&gt;Docker daemon&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone repository&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/jonasstrehle/supercookie&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Update .env file in &lt;a href="https://github.com/jonasstrehle/supercookie/blob/main/server/.env"&gt;supercookie/server/.env&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;HOST_MAIN=yourdomain.com &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;or localhost:10080&lt;/span&gt;
PORT_MAIN=10080
HOST_DEMO=demo.yourdomain.com &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;or localhost:10081&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jonasstrehle/supercookie"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-directus"&gt;
  &lt;/a&gt;
  3. Directus
&lt;/h3&gt;

&lt;p&gt;Directus wraps any SQL database with a real-time GraphQL+REST API and an intuitive app for non-technical users.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/directus"&gt;
        directus
      &lt;/a&gt; / &lt;a href="https://github.com/directus/directus"&gt;
        directus
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Open-Source Data Platform üê∞  ‚Äî Directus wraps any SQL database with a real-time GraphQL+REST API and an intuitive app for non-technical users.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/522079/89687381-23943700-d8ce-11ea-9a4d-ae3eae136423.png"&gt;&lt;img width="400" alt="Logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dm39TUlY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/522079/89687381-23943700-d8ce-11ea-9a4d-ae3eae136423.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;
üê∞ Introduction&lt;/h2&gt;
&lt;p&gt;Directus is a real-time API and App dashboard for managing SQL database content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Free &amp;amp; open-source.&lt;/strong&gt; No artificial limitations, vendor lock-in, or hidden pricing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;REST &amp;amp; GraphQL API.&lt;/strong&gt; Instantly adds a blazingly fast Node.js API layer to your database.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Manage pure SQL.&lt;/strong&gt; Works with existing SQL databases, or helps build new architectures from scratch.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Choose your database.&lt;/strong&gt; Supports PostgreSQL, MySQL, SQLite, OracleDB, MariaDB and MS-SQL.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Allows self-hosting.&lt;/strong&gt; Choose your hosting and infrastructure, run locally, or deeply integrate on-premises.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Completely extensible.&lt;/strong&gt; Built to white-label, it is easy to customize our modular platform.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A modern dashboard.&lt;/strong&gt; A Vue.js Admin App so safe and intuitive, non-technical users require no training.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://directus.io" rel="nofollow"&gt;Learn more about Directus on our website.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;
üöß Release Candidate&lt;/h2&gt;
&lt;p&gt;This is &lt;em&gt;pre-release&lt;/em&gt; software. While we're providing migrations between versions, changes may occur at any time, and
certain features might be missing or broken. You can follow along with
&lt;a href="https://github.com/directus/directus/issues"&gt;the issue&lt;/a&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/directus/directus"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-tinycon"&gt;
  &lt;/a&gt;
  4. Tinycon
&lt;/h3&gt;

&lt;p&gt;A small library for manipulating the favicon, in particular adding alert bubbles and changing images.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tommoor"&gt;
        tommoor
      &lt;/a&gt; / &lt;a href="https://github.com/tommoor/tinycon"&gt;
        tinycon
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A small library for manipulating the favicon, in particular adding alert bubbles and changing images. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Tinycon&lt;/h1&gt;
&lt;p&gt;A small library for manipulating the favicon, in particular adding alert bubbles and changing images. Tinycon gracefully falls back to a number in title approach for browsers that don't support canvas or dynamic favicons.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/tommoor/tinycon/blob/master/examples/screenshot.png?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--90B_ZyWh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/tommoor/tinycon/raw/master/examples/screenshot.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://tommoor.github.com/tinycon/"&gt;See the Live Demo here.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Tinycon adds a single object to the global namespace and does not require initialization.&lt;/p&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;p&gt;Install with your favorite package manager.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install tinycon --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;yarn add tinycon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Basic Usage&lt;/h3&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-v"&gt;Tinycon&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;setBubble&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Options&lt;/h3&gt;
&lt;p&gt;Tinycon can take a range of options to customize the look&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;width: the width of the alert bubble&lt;/li&gt;
&lt;li&gt;height: the height of the alert bubble&lt;/li&gt;
&lt;li&gt;font: a css string to use for the fontface (recommended to leave this)&lt;/li&gt;
&lt;li&gt;color: the foreground font color&lt;/li&gt;
&lt;li&gt;background: the alert bubble background color&lt;/li&gt;
&lt;li&gt;fallback: should we fallback to a number in brackets for browsers that don't support canvas/dynamic favicons? Boolean, or use the string 'force'‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tommoor/tinycon"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-handsfree"&gt;
  &lt;/a&gt;
  5. Handsfree
&lt;/h3&gt;

&lt;p&gt;Quickly integrate face, hand, and/or pose tracking to your frontend projects in a snap&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/MIDIBlocks"&gt;
        MIDIBlocks
      &lt;/a&gt; / &lt;a href="https://github.com/MIDIBlocks/handsfree"&gt;
        handsfree
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Quickly integrate face, hand, and/or pose tracking to your frontend projects in a snap ‚ú®üëå
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;p&gt;&lt;a href="https://handsfree.js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b5e5e7bea4b6cff6fa2476524397a9ab2fd52f585022028602b87fd1a41c660d/68747470733a2f2f6d65646961322e67697068792e636f6d2f6d656469612f4242636e535531494a3574705162775844492f67697068792e676966" alt="handsfree.js.org" title="handsfree.js.org"&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;p&gt;Quickly integrate face, hand, and/or pose tracking to your frontend projects in a snap ‚ú®üëå&lt;/p&gt;
  &lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/07f1f7b0ae253b149a45a4cfffa15c4ae39d98148efeafe6acf09056c3c31835/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/07f1f7b0ae253b149a45a4cfffa15c4ae39d98148efeafe6acf09056c3c31835/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/011a52f68f441a5b22f8b35d7b5c97030315bb42a6b010817b7a17836c011146/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/011a52f68f441a5b22f8b35d7b5c97030315bb42a6b010817b7a17836c011146/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9a5c7d8051de74063635b3686890abd9d8797c03533d510d2488c09a0a4f7e2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9a5c7d8051de74063635b3686890abd9d8797c03533d510d2488c09a0a4f7e2c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de5eb89a7ba52abfe1feefa846f6a8071252737b3cebae391e1d0d095c190295/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de5eb89a7ba52abfe1feefa846f6a8071252737b3cebae391e1d0d095c190295/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/62dfba4a8d3c49d969cd5647b9b2219cc32d3f4147e4a67b6d505626172f8f4c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d7261772f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/62dfba4a8d3c49d969cd5647b9b2219cc32d3f4147e4a67b6d505626172f8f4c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d7261772f68616e6473667265656a732f68616e6473667265652e737667"&gt;&lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;Powered by:&lt;/p&gt;
  &lt;p&gt;
    &lt;a href="https://mediapipe.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/581334265f51b4e08116db484ccf6765af4c02678b30c7cd313ab39263758722/68747470733a2f2f692e696d6775722e636f6d2f564753575972432e706e67" height="30"&gt;&lt;/a&gt;
    ¬†¬†¬†
    &lt;a href="https://github.com/tensorflow/tfjs-models/"&gt;&lt;img src="https://camo.githubusercontent.com/57af1e8e2c14859598a557f0ff0d9f95548e1b05883284de5e5819df3c7414e5/68747470733a2f2f692e696d6775722e636f6d2f5a3550556967332e706e67" height="30"&gt;&lt;/a&gt;
    ¬†¬†¬†
    &lt;a href="https://github.com/jeeliz/jeelizWeboji"&gt;&lt;img width="100" src="https://camo.githubusercontent.com/7f752db387a681bef9dbe6bcb7c635276dde7569058da431c15de8af093213ff/68747470733a2f2f6a65656c697a2e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031382f30312f4c4f474f5f4a45454c495a5f424c55452e706e67"&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;

&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;

&lt;div&gt;
  &lt;h2&gt;
Explore the interactive docs at: &lt;a href="https://handsfree.js.org" rel="nofollow"&gt;Handsfree.js.org&lt;/a&gt;
&lt;/h2&gt;
  &lt;p&gt;Or try it right away with the serverless boilerplates in &lt;code&gt;/boilerplate/&lt;/code&gt;!&lt;/p&gt;
&lt;/div&gt;



&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;

&lt;h1&gt;
Contents&lt;/h1&gt;
&lt;p&gt;This repo is broken into 3 main parts: The actual library itself found in &lt;code&gt;/src/&lt;/code&gt;, the documentation for it in &lt;code&gt;/docs/&lt;/code&gt;, and the Handsfree Browser Extension in &lt;code&gt;/extension/&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Handsfree.js
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/MIDIBlocks/handsfree/master/#installing-from-cdn"&gt;Quickstart with CDN&lt;/a&gt; (fastest way to get started)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/MIDIBlocks/handsfree/master/#installing-from-npm"&gt;Quickstart with NPM&lt;/a&gt; (requires server or bundler)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MIDIBlocks/handsfree/master/#local-development"&gt;Development guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MIDIBlocks/handsfree/master/#the-handsfree-browser-extension"&gt;Handsfree Browser Extension&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;br&gt;

&lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h1&gt;
Quickstart&lt;/h1&gt;
&lt;h2&gt;
Installing from CDN&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: models loaded from the CDN may load slower on the initial page load, but should load much faster once cached by the browser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This option is great if you don't have or need a server, or if you're prototyping on a &lt;a href="https://codepen.io/MIDIBlocks/pen/mdrwYzM" rel="nofollow"&gt;site like CodePen&lt;/a&gt;. You can also &lt;a href="https://github.com/MIDIBlocks/handsfree/archive/master.zip"&gt;just download this repo&lt;/a&gt; and work with one‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/MIDIBlocks/handsfree"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-nano-stores"&gt;
  &lt;/a&gt;
  6. Nano Stores
&lt;/h3&gt;

&lt;p&gt;A tiny (152 bytes) state manager for React/Preact/Vue/Svelte with many atomic tree-shakable stores&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ai"&gt;
        ai
      &lt;/a&gt; / &lt;a href="https://github.com/ai/nanostores"&gt;
        nanostores
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tiny (152 bytes) state manager for React/Preact/Vue/Svelte with many atomic tree-shakable stores
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Nano Stores&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/84178f3da1237407ae11b12377a1c585152f9de993c695e9c0adf5e59e7b3c80/68747470733a2f2f6c6f6775782e696f2f6272616e64696e672f6c6f676f747970652e737667"&gt;&lt;img width="95" height="148" title="Logux logotype" src="https://camo.githubusercontent.com/84178f3da1237407ae11b12377a1c585152f9de993c695e9c0adf5e59e7b3c80/68747470733a2f2f6c6f6775782e696f2f6272616e64696e672f6c6f676f747970652e737667"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A tiny state manager for &lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Preact&lt;/strong&gt;, &lt;strong&gt;Vue&lt;/strong&gt;, &lt;strong&gt;Svelte&lt;/strong&gt;
and vanilla JS. It¬†uses¬†&lt;strong&gt;many¬†atomic¬†stores&lt;/strong&gt;¬†and¬†direct manipulation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Small.&lt;/strong&gt; between 152 and 459 bytes (minified and gzipped)
Zero dependencies. It uses &lt;a href="https://github.com/ai/size-limit"&gt;Size Limit&lt;/a&gt; to control size.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast.&lt;/strong&gt; With small atomic and derived stores, you do not need to call
the selector function for all components on every store change.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tree Shakable.&lt;/strong&gt; The chunk contains only stores used by components
in the chunk.&lt;/li&gt;
&lt;li&gt;Was designed to move logic from components to stores. Already has &lt;strong&gt;router&lt;/strong&gt;
and &lt;strong&gt;persistent&lt;/strong&gt; stores.&lt;/li&gt;
&lt;li&gt;It has good &lt;strong&gt;TypeScript&lt;/strong&gt; support.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// store/users.ts&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;createStore&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;getValue&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'nanostores'&lt;/span&gt;
&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;users&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createStore&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;User&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-s1"&gt;users&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;set&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;

&lt;span class="pl-k"&gt;export&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;addUser&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;user&lt;/span&gt;: &lt;span class="pl-smi"&gt;User&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-s1"&gt;users&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;set&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;...&lt;span class="pl-en"&gt;getValue&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ai/nanostores"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-react-flip-toolkit"&gt;
  &lt;/a&gt;
  7. React Flip Toolkit
&lt;/h3&gt;

&lt;p&gt;A lightweight magic-move library for configurable layout transitions&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/aholachek"&gt;
        aholachek
      &lt;/a&gt; / &lt;a href="https://github.com/aholachek/react-flip-toolkit"&gt;
        react-flip-toolkit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A lightweight magic-move library for configurable layout transitions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://codepen.io/aholachek/pen/ERRpEj" rel="nofollow"&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8sn-GcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/./example-assets/rft-logo.gif" width="500px" alt="react-flip-toolkit animated logo"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bundlephobia.com/result?p=react-flip-toolkit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/beeafdef6f2295b6df7de444756594080c2a405baed72eaea45759ffc66a9e58/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d666c69702d746f6f6c6b6974" alt="Minified &amp;amp; Gzipped size"&gt;&lt;/a&gt;
&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/adfdd272e3973d8c2634b0c4189f8dacb5f60677533b0ccb6e478e81aee31a2c/68747470733a2f2f62616467656e2e6e65742f6e706d2f6c6963656e73652f72656163742d666c69702d746f6f6c6b6974" alt="MIT license"&gt;&lt;/a&gt;
&lt;a href="https://npmjs.org/package/react-flip-toolkit" title="View this project on npm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1302fd2b7503ae9a7a2e9b93f13cba1b8fde961245efc031fcc633a119624b46/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72656163742d666c69702d746f6f6c6b6974" alt="npm version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comparison with other React FLIP libraries&lt;/strong&gt;&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/joshwcomeau/react-flip-move"&gt;&lt;code&gt;react-flip-move&lt;/code&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/berzniz/react-overdrive"&gt;&lt;code&gt;react-overdrive&lt;/code&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;react-flip-toolkit&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Animate position&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Animate scale&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Animate opacity&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#nested-scale-transforms"&gt;Animate parent's size without warping children&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Use real FLIP instead of cloning &amp;amp; crossfading&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://codesandbox.io/s/react-flip-toolkit-spring-settings-explorer-vjrsh" rel="nofollow"&gt;Use springs for animations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Support spring-based stagger effects&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/packages/flip-toolkit"&gt;Usable with frameworks other than React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚ùå&lt;/td&gt;
&lt;td&gt;‚úÖ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Quick start&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install react-flip-toolkit&lt;/code&gt; or &lt;code&gt;yarn add react-flip-toolkit&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Wrap all animated children with a single &lt;code&gt;Flipper&lt;/code&gt; component that has a &lt;code&gt;flipKey&lt;/code&gt; prop that changes every time animations should happen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wrap elements that should be animated with &lt;code&gt;Flipped&lt;/code&gt; components that have a &lt;code&gt;flipId&lt;/code&gt; prop matching them across renders.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#forkable-examples"&gt;Forkable Examples&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#simple-example-an-expanding-div"&gt;Simple Example: An Expanding Div&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#simple-example-two-divs"&gt;Simple Example: Two Divs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#simple-example-list-shuffle"&gt;Simple Example: List Shuffle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#list-transitions"&gt;List Transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#stagger-effects"&gt;Stagger Effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#spring-customizations"&gt;Spring Customizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#nested-scale-transforms"&gt;Nested Scale Transforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#route-based-animations-with-react-router"&gt;Route-based Animations With React Router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aholachek/react-flip-toolkit/master/#more-examples"&gt;More examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/aholachek/react-flip-toolkit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-flicking"&gt;
  &lt;/a&gt;
  8. Flicking
&lt;/h3&gt;

&lt;p&gt;Reliable, flexible and extendable carousel.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/naver"&gt;
        naver
      &lt;/a&gt; / &lt;a href="https://github.com/naver/egjs-flicking"&gt;
        egjs-flicking
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üé† ‚ôªÔ∏è Everyday 30 million people experience. It's reliable, flexible and extendable carousel.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/731d6a04b61c3c3da2b0a9368cdf6e39a35c33d7e89b26679aba3ef4005e9514/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f666c69636b696e672e737667"&gt;&lt;img width="800" alt="Flicking Logo" src="https://camo.githubusercontent.com/731d6a04b61c3c3da2b0a9368cdf6e39a35c33d7e89b26679aba3ef4005e9514/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f666c69636b696e672e737667"&gt;&lt;/a&gt;&lt;br&gt;
  &lt;a href="https://naver.github.io/egjs-flicking/" rel="nofollow"&gt;@egjs/flicking&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/@egjs/flicking" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97a921b39717473fcf992c58eaebd5410c6f4004ee0b812f00d468b940338fe0/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4065676a732f666c69636b696e672e7376673f7374796c653d666c61742d73717561726526636f6c6f723d303037616363266c6162656c3d76657273696f6e266c6f676f3d4e504d" alt="version"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@egjs/flicking" rel="nofollow"&gt;&lt;img alt="npm bundle size (scoped)" src="https://camo.githubusercontent.com/98517c5753e19d81ce80c4bfb49c6a35ad1a46381e3b8dc27a6a15a7b3a64c71/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f4065676a732f666c69636b696e672e7376673f7374796c653d666c61742d737175617265266c6162656c3d254630253946253932254245253230677a697070656426636f6c6f723d303037616363"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/naver/egjs-flicking" rel="nofollow"&gt;&lt;img alt="Travis (.org)" src="https://camo.githubusercontent.com/cedc32d8d1f2f9c48bdaabe36f1cdece2e8fdd69774ef8d6d36d4bef80394412/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6e617665722f65676a732d666c69636b696e672e7376673f7374796c653d666c61742d737175617265266c6162656c3d6275696c64266c6f676f3d7472617669732532306369"&gt;&lt;/a&gt;
  &lt;a href="https://coveralls.io/github/naver/egjs-flicking?branch=master&amp;amp;style=flat-square" rel="nofollow"&gt;&lt;img alt="Coveralls github" src="https://camo.githubusercontent.com/c8f1a59172a0c38187337a683070465428225d7de56d8a9ef0c8de26b3dc59e9/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6e617665722f65676a732d666c69636b696e672e7376673f7374796c653d666c61742d737175617265266c6162656c3d254532253943253835253230636f766572616765"&gt;&lt;/a&gt;
  &lt;a href="https://deepscan.io/dashboard#view=project&amp;amp;tid=3998&amp;amp;pid=5802&amp;amp;bid=46086" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2c25a1a9c063f1bb03928bfb68f3e1c1e6417f406e41c11e8c34664db75c63be/68747470733a2f2f646565707363616e2e696f2f6170692f7465616d732f333939382f70726f6a656374732f353830322f6272616e636865732f34363038362f62616467652f67726164652e737667" alt="DeepScan grade"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/graphs/commit-activity"&gt;
&lt;img alt="GitHub commit activity" src="https://camo.githubusercontent.com/cfd48950c61ac1b305a601ac8b21dfab0f072e769e062974e4f55bba86588877/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f6e617665722f65676a732d666c69636b696e672e7376673f636f6c6f723d303843453544266c6162656c3d254532254143253836253230636f6d6d697473267374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@egjs/flicking" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33e1972486316a099f7ffc49a937a75cc86f5a7b3a6daad69a47ca56c3bad286/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f4065676a732f666c69636b696e672e7376673f7374796c653d666c61742d737175617265266c6162656c3d254532254143253837253230646f776e6c6f61647326636f6c6f723d303843453544" alt="npm downloads per month"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/graphs/contributors"&gt;&lt;img alt="GitHub contributors" src="https://camo.githubusercontent.com/6c3a96511cc19bbb854a641d6cc18fe1c1bbb38a4a653256d67e06756c0120bd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6e617665722f65676a732d666c69636b696e672e7376673f6c6162656c3d254630253946253931254135253230636f6e7472696275746f7273267374796c653d666c61742d73717561726526636f6c6f723d303843453544"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/LICENSE"&gt;&lt;img alt="GitHub" src="https://camo.githubusercontent.com/3d10a2e7a2676367d0ed525605cd70b138ebe59ed8cdfc2925ba8c7697af056b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e617665722f65676a732d666c69636b696e672e7376673f7374796c653d666c61742d737175617265266c6162656c3d2546302539462539332539432532306c6963656e736526636f6c6f723d303843453544"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/ngx-flicking/README.md"&gt;&lt;img alt="Angular" src="https://camo.githubusercontent.com/1e0e9a39d79dafcb26b0131c826516f5bcdb8594f58b59576b8aa9c56b39806e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d416e67756c6172267374796c653d666c61742d737175617265266c6f676f3d416e67756c617226636f6c6f723d646430303331"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/react-flicking/README.md"&gt;&lt;img alt="React" src="https://camo.githubusercontent.com/5a119cd5af075f39590329025738ac15174d59b4140d7c9b10d02961f52fe9b2/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d5265616374267374796c653d666c61742d737175617265266c6f676f3d5265616374266c6f676f436f6c6f723d776869746526636f6c6f723d363164616662"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/vue-flicking/README.md"&gt;&lt;img alt="Vue" src="https://camo.githubusercontent.com/8e6543678aed6f7501fc946e7850e7a51eda762a77645765cb7bf5080f9d07ff/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d567565267374796c653d666c61742d737175617265266c6f676f3d5675652e6a73266c6f676f436f6c6f723d776869746526636f6c6f723d343262383833"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/preact-flicking/README.md"&gt;&lt;img alt="Vue" src="https://camo.githubusercontent.com/a098d2f86245465fea9ffaa45f1c0fa9ec98dd54fe0bf7729f3e07f80b525bc9/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d507265616374267374796c653d666c61742d737175617265266c6f676f3d507265616374266c6f676f436f6c6f723d776869746526636f6c6f723d363733616238"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a52083b4eb5946d38327cb3fea07b81d336001c2c44ac5c2d70e38c7cae584d9/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d5479706553637269707426636f6c6f723d323934453830267374796c653d666c61742d737175617265266c6f676f3d74797065736372697074"&gt;&lt;img src="https://camo.githubusercontent.com/a52083b4eb5946d38327cb3fea07b81d336001c2c44ac5c2d70e38c7cae584d9/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d266d6573736167653d5479706553637269707426636f6c6f723d323934453830267374796c653d666c61742d737175617265266c6f676f3d74797065736372697074"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="https://naver.github.io/egjs-flicking/" rel="nofollow"&gt;Demo&lt;/a&gt; / &lt;a href="https://naver.github.io/egjs-flicking/docs/api/Flicking" rel="nofollow"&gt;Documentation&lt;/a&gt; / &lt;a href="https://naver.github.io/egjs/" rel="nofollow"&gt;&lt;img height="20" src="https://camo.githubusercontent.com/0c879c67b012638dfdbc4aa1808c50bb0d70265171ccbf52887a9245ccaa9e5f/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732f696d672f6c6f676f2e737667"&gt; Other components&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;
  &lt;b&gt;Everyday 30 million people experience. It's reliable, flexible and extendable carousel.&lt;/b&gt;&lt;br&gt;üì±üíªüñ•
&lt;/p&gt;

&lt;p&gt;
  &lt;b&gt;Supported Frameworks&lt;/b&gt;&lt;br&gt;
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/ngx-flicking/README.md"&gt;&lt;img width="45" src="https://camo.githubusercontent.com/68393f6cffa05b7d10453df7187218cb47b91e2aa1f8b41af65c2107e05ddf1d/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f616e67756c61722e737667" alt="AngularJS"&gt;&lt;/a&gt;¬†¬†
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/react-flicking/README.md"&gt;&lt;img width="45" src="https://camo.githubusercontent.com/4016cdb375e7f3d94614c3085c3912d0dca5cd62c0c68f198e0bac6e1eb5f02b/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f72656163742e737667" alt="React"&gt;&lt;/a&gt;¬†¬†
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/vue-flicking/README.md"&gt;&lt;img width="45" src="https://camo.githubusercontent.com/6777ae338f72d042bc538061eb5bdac1437210c348c9daf21baabdabe0b62c20/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f7675652e737667" alt="Vue.js"&gt;&lt;/a&gt;¬†¬†
  &lt;a href="https://github.com/naver/egjs-flicking/blob/master/packages/preact-flicking/README.md"&gt;&lt;img width="45" src="https://camo.githubusercontent.com/913c6d63b8c446fc22a5da06d9316f9e2eff72fcfe9f4da6aeed86fbe53a1a07/68747470733a2f2f6e617665722e6769746875622e696f2f65676a732d666c69636b696e672f696d616765732f7072656163742e737667" alt="Preact"&gt;&lt;/a&gt;
&lt;/p&gt;




&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://codepen.io/egjs/pen/vqYyPO" rel="nofollow"&gt;&lt;img width="240" src="https://res.cloudinary.com/practicaldev/image/fetch/s--80Fg8xU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/26213435/59833703-a2a07600-9381-11e9-8d3e-b1d2af8b1b96.gif" alt="iPhone demo"&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://codepen.io/woodneck/pen/ydNvYy" rel="nofollow"&gt;&lt;img width="240" src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9UizkZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/26213435/59832836-cf538e00-937f-11e9-9e65-ec43c1bde5de.gif" alt="Music app demo"&gt;&lt;/a&gt;&lt;/td&gt;
      &lt;td rowspan="2"&gt;&lt;a href="https://codepen.io/egjs/full/MMYQRE" rel="nofollow"&gt;&lt;img width="480" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HJUZBJG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/26213435/59832834-cf538e00-937f-11e9-8f3a-97e806bb37b1.gif" alt="Full page demo"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td colspan="2"&gt;&lt;a href="https://codepen.io/egjs/pen/vqYjrr" rel="nofollow"&gt;&lt;img width="480" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m7rZPN4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/26213435/59832835-cf538e00-937f-11e9-99a5-10f24da4c242.gif" alt="Parallax demo"&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h6&gt;
  üñ±Ô∏èClick each images to see its source or check our &lt;a href="https://naver.github.io/egjs-flicking/" rel="nofollow"&gt;full demos&lt;/a&gt;.
&lt;/h6&gt;

&lt;h2&gt;
‚ú® Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use it in a framework you like.
&lt;ul&gt;
&lt;li&gt;We supports all major JS frameworks like React, Vue, Angular&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;SSR(Server Side Rendering) ready

&lt;ul&gt;
&lt;li&gt;You can use Flicking at your favorite SSR frameworks like &lt;a href="https://nextjs.org/" rel="nofollow"&gt;Next.js&lt;/a&gt; or &lt;a href="https://nuxtjs.org/" rel="nofollow"&gt;Nuxt.js&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Circular(Loop) Mode&lt;/li&gt;
&lt;li&gt;Ready-to-use plugins you can grab right away.

&lt;ul&gt;
&lt;li&gt;Autoplay, Fade effect, Parallax effect, ...&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Restore state like position and active slide with &lt;a href="https://naver.github.io/egjs-persist/" rel="nofollow"&gt;persist&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You can make native-scroll like UI with &lt;code&gt;bound&lt;/code&gt; and &lt;code&gt;moveType: freeScroll&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Supports both Desktop &amp;amp; Mobile&lt;/li&gt;
&lt;li&gt;Rich API&lt;/li&gt;
&lt;li&gt;Supports IE9+ with the polyfill

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cdn.jsdelivr.net/npm/es6-promise@latest/dist/es6-promise.auto.js" rel="nofollow"&gt;es6-polyfill&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
‚öôÔ∏è Installation&lt;/h2&gt;

&lt;h4&gt;
npm&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ npm install --save @egjs/flicking&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
CDN&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;jsDelivr: &lt;a href="https://cdn.jsdelivr.net/npm/@egjs/flicking/dist/" rel="nofollow"&gt;https://cdn.jsdelivr.net/npm/@egjs/flicking/dist/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;unpkg: &lt;a href="https://unpkg.com/@egjs/flicking/dist/" rel="nofollow"&gt;https://unpkg.com/@egjs/flicking/dist/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;cdnjs: &lt;a href="https://cdnjs.com/libraries/egjs-flicking" rel="nofollow"&gt;https://cdnjs.com/libraries/egjs-flicking&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
üèÉ Quick Start&lt;/h2&gt;
&lt;h4&gt;
HTML&lt;/h4&gt;
&lt;p&gt;Flicking requires minimal structure to initialize properly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You don't‚Ä¶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/naver/egjs-flicking"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-ultimate-backend"&gt;
  &lt;/a&gt;
  9. Ultimate Backend
&lt;/h3&gt;

&lt;p&gt;Multi tenant SaaS starter kit with cqrs graphql microservice architecture, apollo federation, event source and authentication&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/juicycleff"&gt;
        juicycleff
      &lt;/a&gt; / &lt;a href="https://github.com/juicycleff/ultimate-backend"&gt;
        ultimate-backend
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Multi tenant SaaS starter kit with cqrs graphql microservice architecture, apollo federation, event source and authentication
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ULTIMATE BACKEND
&lt;/h1&gt;
&lt;p&gt;  
  (WIP): This is an enterprise scale advanced microservice pattern with GraphQL API and GRPC Microservices, based on Domain (DDD) using the command query responsibility segregation (CQRS) design pattern.
  Want to ask &lt;a href="https://join.slack.com/t/ultimate-backend/shared_invite/zt-gd6kuuh2-B665Di4cRLqzVqXvhbmrHg" rel="nofollow"&gt;Rex Isaac Raphael&lt;/a&gt; questions, join the slack channel :)
&lt;/p&gt;  
      
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/22e8fb64a5faadb4b74d924572c71eb6a4bbbd5a92d36e6392d9641801898388/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f756c74696d6174652d6261636b656e642f74696572732f73706f6e736f722f62616467652e7376673f6c6162656c3d73706f6e736f7226636f6c6f723d627269676874677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/22e8fb64a5faadb4b74d924572c71eb6a4bbbd5a92d36e6392d9641801898388/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f756c74696d6174652d6261636b656e642f74696572732f73706f6e736f722f62616467652e7376673f6c6162656c3d73706f6e736f7226636f6c6f723d627269676874677265656e"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/github/license/juicycleff/ultimate-backend?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cbd817b45fea865689815595e8d9fe7f2eaf18b893c182218a2817174fc73f97/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a75696379636c6566662f756c74696d6174652d6261636b656e643f7374796c653d666c61742d737175617265" alt="License"&gt;&lt;/a&gt;  
&lt;a href="https://img.shields.io/snyk/vulnerabilities/github/juicycleff/ultimate-backend?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f554d838198952b83511b9be958b5a69709ec7b68027ff75436979bc0ed531e0/68747470733a2f2f696d672e736869656c64732e696f2f736e796b2f76756c6e65726162696c69746965732f6769746875622f6a75696379636c6566662f756c74696d6174652d6261636b656e643f7374796c653d666c61742d737175617265" alt="Snyk"&gt;&lt;/a&gt;  
&lt;a href="https://img.shields.io/github/languages/code-size/juicycleff/ultimate-backend?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2dc136f280f3ba4826fc37efaf723111b106598d5410ed3390f239b95bbd57dd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f6a75696379636c6566662f756c74696d6174652d6261636b656e643f7374796c653d666c61742d737175617265" alt="Code Size"&gt;&lt;/a&gt;  
&lt;a href="https://img.shields.io/github/package-json/v/juicycleff/ultimate-backend?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cbb8f4ada71e690a02e0f52577f5216ae91bb4aea5838b7102af478de6e7afb4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7061636b6167652d6a736f6e2f762f6a75696379636c6566662f756c74696d6174652d6261636b656e643f7374796c653d666c61742d737175617265" alt="Version"&gt;&lt;/a&gt;  
&lt;a href="https://img.shields.io/github/languages/top/juicycleff/ultimate-backend?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73ecb1900b457c199f1514abe7209803d6a3ba6064457c325e6c767edc176e27/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f6a75696379636c6566662f756c74696d6174652d6261636b656e643f7374796c653d666c61742d737175617265" alt="Top Language"&gt;&lt;/a&gt;  
&lt;a href="https://img.shields.io/codacy/grade/dc460840375d4ac995f5647a5ed10179?style=flat-square" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a70931851d2a9a3f7654f07d72fe3b0ca18c9382c9fbe6ffaa71ab675f1fada/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f67726164652f64633436303834303337356434616339393566353634376135656431303137393f7374796c653d666c61742d737175617265" alt="Top Language"&gt;&lt;/a&gt;  
&lt;/p&gt;  
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;This should be the go to backend base for your next scalable project. This is a proof of concept project designed to be extremely slim and scalable, with distributed data request and process handling, built from the ground up for production use. It comes with Multi-Tenancy SaaS support, following different multi-tenancy database strategy as well as different resolver patterns&lt;br&gt;
to identify your tenants. The goal is to give your next big project that extra leap to awesomeness. To get started read the instructions below. With support for both &lt;a href="https://eventstore.org" rel="nofollow"&gt;Event Store&lt;/a&gt; and &lt;a href="https://nats.io" rel="nofollow"&gt;NATS Streaming&lt;/a&gt; for event streaming and Kafka comming soon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Seeing alot of clone of the‚Ä¶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/juicycleff/ultimate-backend"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-recast"&gt;
  &lt;/a&gt;
  10. recast
&lt;/h3&gt;

&lt;p&gt;JavaScript syntax tree transformer, nondestructive pretty-printer, and automatic source map generator&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/benjamn"&gt;
        benjamn
      &lt;/a&gt; / &lt;a href="https://github.com/benjamn/recast"&gt;
        recast
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      JavaScript syntax tree transformer, nondestructive pretty-printer, and automatic source map generator
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
recast, &lt;em&gt;v&lt;/em&gt;. &lt;a rel="noopener noreferrer" href="https://github.com/benjamn/recast/workflows/CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--to6C7AlP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/benjamn/recast/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/benjamn/recast?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/benjamn/recast"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;to give (a metal object) a different form by melting it down and reshaping it.&lt;/li&gt;
&lt;li&gt;to form, fashion, or arrange again.&lt;/li&gt;
&lt;li&gt;to remodel or reconstruct (a literary work, document, sentence, etc.).&lt;/li&gt;
&lt;li&gt;to supply (a theater or opera work) with a new cast.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;From NPM:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install recast
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From GitHub:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;cd path/to/node_modules
git clone git://github.com/benjamn/recast.git
cd recast
npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Import style&lt;/h2&gt;
&lt;p&gt;Recast is designed to be imported using &lt;strong&gt;named&lt;/strong&gt; imports:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;parse&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;print&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"recast"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;print&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;parse&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;source&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;code&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-c1"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-s1"&gt;recast&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"recast"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;recast&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;print&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;recast&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;parse&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;source&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;code&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;If you're using CommonJS:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; parse&lt;span class="pl-kos"&gt;,&lt;/span&gt; print &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"recast"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;print&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;parse&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;source&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/benjamn/recast"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +4,250 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +1,145 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +965 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;JavaScript Questions&lt;/a&gt; +736 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vercel/next.js"&gt;Next.js&lt;/a&gt; +729 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;React Virtual Cool&lt;/a&gt; +252%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mechaniac/Map-of-Javascript"&gt;Map of JavaScript&lt;/a&gt; +55%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joe-bell/plaiceholder"&gt;Plaiceholder&lt;/a&gt; +36%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/millionjs/million"&gt;Million&lt;/a&gt; +31%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +30%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +11,307 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +7,045 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +5,265 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +4,679 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +2,855 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +282%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +165%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +50%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joe-bell/plaiceholder"&gt;Plaiceholder&lt;/a&gt; +46%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite&lt;/a&gt; +41%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Getting posts of BitClout User</title>
      <author>Aditya Chaudharyüë®‚Äçüíª</author>
      <pubDate>Fri, 18 Jun 2021 14:57:52 +0000</pubDate>
      <link>https://dev.to/itsaditya/getting-posts-of-bitclout-user-3h83</link>
      <guid>https://dev.to/itsaditya/getting-posts-of-bitclout-user-3h83</guid>
      <description>&lt;p&gt;Just like the twitter API that gives tweet content and other information about tweets of users, BitClout API also offers the same feature but additionally, it also provides much more information about user's posts!&lt;/p&gt;

&lt;p&gt;You can fetch any user's N number of posts through username. All you need is to make a POST request to &lt;code&gt;https://bitclout.com/api/v0/get-posts-for-public-key&lt;/code&gt;&lt;br&gt;
Below is a python code that fetches desired number of posts of any user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getPostsOfUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numberOfPosts&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"PublicKeyBase58Check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"ReaderPublicKeyBase58Check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;"BC1YLhBLE1834FBJbQ9JU23JbPanNYMkUsdpJZrFVqNGsCe7YadYiUg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"NumToFetch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;numberOfPosts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;#here ReaderPublicKeyBase58Check means the reader of the post. You can leave it as it is or just use your own public key. 
&lt;/span&gt;  &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://bitclout.com/api/v0/get-posts-for-public-key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"postsOfUser.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"w"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"ItsAditya"&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getPostsOfUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If on execution of the above code prints response code 200, a new file named &lt;code&gt;postsOfUser.json&lt;/code&gt; will be created that contains 20 posts by that user (Reclouts included)&lt;br&gt;
The response JSON file looks like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"Posts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"PostHashHex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"b15caa1e109bcb4544acb2864e583b41db12e70790b435eac8ec45b875b4066b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"PosterPublicKeyBase58Check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"BC1YLhBLE1834FBJbQ9JU23JbPanNYMkUsdpJZrFVqNGsCe7YadYiUg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ParentStakeID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"One interesting fact as stated by @ElonTusk is that the money was transferred to @PR12M which can be read as Prism which is a US based surveillance program&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;Read more here: https://en.wikipedia.org/wiki/PRISM_(surveillance_program)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ImageURLs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"RecloutedPostEntryResponse"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"PostHashHex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"8693d28eff9c5833173a33ac2bdea4ffaa7c3fc682fd6033d6837d78fbd4105d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"PosterPublicKeyBase58Check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"BC1YLhBLE1834FBJbQ9JU23JbPanNYMkUsdpJZrFVqNGsCe7YadYiUg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ParentStakeID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"The compromised accounts who had lost money few days ago due to the &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;hacks&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; received their money back &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;d83d&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;dc40&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;Maybe all this was done just to teach a lesson? &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;d83e&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;dd14 "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ImageURLs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"RecloutedPostEntryResponse"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"CreatorBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StakeMultipleBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TimestampNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1623937618272511376&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"IsHidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ConfirmationBlockHeight"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;34779&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"InMempool"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StakeEntry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalPostStake"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"StakeList"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StakeEntryStats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeOwedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalCreatorEarningsNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalFeesBurnedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"TotalPostStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ProfileEntryResponse"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"PublicKeyBase58Check"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"BC1YLhBLE1834FBJbQ9JU23JbPanNYMkUsdpJZrFVqNGsCe7YadYiUg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"Username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ItsAditya"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"Description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17 year young | Programmer | Illustrator&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;Founder: @DevsClout&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;Dev @knowyourclout  &lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;27a1&lt;/span&gt;&lt;span class="se"&gt;\u&lt;/span&gt;&lt;span class="s2"&gt;fe0f @GlobalClout&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;Discord: https://discord.gg/ggvtTje "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"IsHidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"IsReserved"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"IsVerified"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"Comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"Posts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"CoinEntry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"CreatorBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"BitCloutLockedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50542099887&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"NumberOfHolders"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;263&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"CoinsInCirculationNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;36972965086&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"CoinWatermarkNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;38212986918&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"CoinPriceBitCloutNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4101005003&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"StakeMultipleBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"StakeEntryStats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeOwedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"TotalCreatorEarningsNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"TotalFeesBurnedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"TotalPostStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"UsersThatHODL"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"Comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"LikeCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"DiamondCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"PostEntryReaderState"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"LikedByReader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"DiamondLevelBestowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"RecloutedByReader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"RecloutPostHashHex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"InGlobalFeed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"IsPinned"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"PostExtraData"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"CommentCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"RecloutCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"QuoteRecloutCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ParentPosts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"DiamondsFromSender"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"CreatorBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"StakeMultipleBasisPoints"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"TimestampNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1623939733768805958&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"IsHidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ConfirmationBlockHeight"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;34783&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"InMempool"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"StakeEntry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalPostStake"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"StakeList"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"StakeEntryStats"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalStakeOwedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalCreatorEarningsNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalFeesBurnedNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"TotalPostStakeNanos"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ProfileEntryResponse"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"Comments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"LikeCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"DiamondCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"PostEntryReaderState"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"LikedByReader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"DiamondLevelBestowed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"RecloutedByReader"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"RecloutPostHashHex"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"InGlobalFeed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"IsPinned"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"PostExtraData"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"CommentCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"RecloutCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"QuoteRecloutCount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"ParentPosts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"DiamondsFromSender"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you like the article don't forget to let us know in the comments or maybe give a shout to &lt;a href="https://bitclout.com/u/DevsClout"&gt;DevsClout&lt;/a&gt; ? You can also join DevsClout &lt;a href="https://discord.gg/4tCW2C8WhQ"&gt;discord server&lt;/a&gt; to chat with more devs who are building awesome projects on BitClout! We would love to hear back from you!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Juneteenth: Reflecting and Celebrating Black Lives</title>
      <author>dev.to staff</author>
      <pubDate>Fri, 18 Jun 2021 14:30:46 +0000</pubDate>
      <link>https://dev.to/devteam/juneteenth-reflecting-and-celebrating-black-lives-205p</link>
      <guid>https://dev.to/devteam/juneteenth-reflecting-and-celebrating-black-lives-205p</guid>
      <description>&lt;p&gt;Today, June 19th 2021, is the 156th Juneteenth celebration in the United States. We would like to take a moment as a community to honor the historical origins of this important milestone towards the freedom of Black people, reflect on the progress we still need to make, and (crucially) amplify Black joy._&lt;/p&gt;

&lt;p&gt;Information technology can be a force for progress‚Äî But it so often amplifies prejudice, biases and oppression. So if you ask "What does this have to do with software development?", the answer is "Where do we start?". Our industry is building the future, and if we do not learn about our human history or pay a microscope on inequities around us, what are we even doing?&lt;/p&gt;

&lt;p&gt;Last year on June 19th, we shared a post that includes some of the history behind Juneteenth: Black Independence Day in the United States. If you're wondering what Juneteenth is all about (which might especially be the case if you're not located in the U.S.!), we recommend you take a look at it as a starting point.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bgwIhvJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--1M1qt9Sp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/1/f451a206-11c8-4e3d-8936-143d0a7e65bb.png" alt="ben image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/celebrating-juneteenth-11cd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Celebrating Juneteenth&lt;/h2&gt;
      &lt;h3&gt;Ben Halpern „Éª Jun 19 '20 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#blacklivesmatter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#meta&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;This year, we wanted to share some ideas for celebrating Juneteenth &lt;em&gt;worldwide&lt;/em&gt; ‚Äî specifically for software developers. Because &lt;em&gt;it is our responsibility as technologists to support Black freedom, joy, and genius as we build the future together.&lt;/em&gt;&lt;/strong&gt; &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#learn-about-the-organizations-dismantling-our-racist-systems"&gt;
  &lt;/a&gt;
  Learn about the organizations dismantling our racist systems
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/KaraAJC/awesome-accomplice"&gt;Awesome Accomplice&lt;/a&gt; by DEV community member @karaaj is a great place to start...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/karaajc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxezLcxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--P0xJmN83--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/18119/af2bb3bb-6b16-44da-9a9f-82a2addcd47c.jpg" alt="karaajc image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/karaajc/contribute-to-awesome-accomplice-27la" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Contribute to Awesome Accomplice&lt;/h2&gt;
      &lt;h3&gt;Kara Carrell „Éª Jun 21 '20 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#blacklivesmatter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#contributorswanted&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sideprojects&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#read-the-real-narratives-of-formerly-enslaved-people"&gt;
  &lt;/a&gt;
  Read the real narratives of formerly enslaved people
&lt;/h3&gt;

&lt;p&gt;Thank you to community member &lt;a class="mentioned-user" href="https://dev.to/lethargilistic"&gt;@lethargilistic&lt;/a&gt;
 for pointing us here!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/lethargilistic"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mJrJt6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Fap6gtAE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/38892/b4e60502-88cd-48cc-8c63-64657bb6caa7.png" alt="lethargilistic profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/lethargilistic"&gt;
        &lt;span class="comment-username"&gt;Mike Overby&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/lethargilistic/comment/10i9o" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 19 '20
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;My preferred way to celebrate Juneteenth is to &lt;a href="https://www.loc.gov/collections/slave-narratives-from-the-federal-writers-project-1936-to-1938/about-this-collection/" rel="nofollow"&gt;read some of the narratives of former slaves&lt;/a&gt;. The US government collected thousands of them. Enslaved people were people, and the best way to understand their humanity is to read their life stories in their own words.&lt;/p&gt;

&lt;p&gt;In this one, a former slave recounts being informed of his freedom. It's also a great example of the immediate success of lies behind the former Confederacy's &lt;a href="https://en.wikipedia.org/wiki/Lost_Cause_of_the_Confederacy" rel="nofollow"&gt;Lost Cause myth&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Fko-DhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uotqerno53qh7pf6o3m1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSWDwJ0g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8Fko-DhF--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uotqerno53qh7pf6o3m1.png" alt="Lots of old people lake me say dat dey was happy in slavery, and dat dey had de worst tribulations after freedom, but I knows dey didn't have no white master and overseer lak we all had on our place. Dey both dead now I reckon, and dey no use talking 'bout de dead, but I know I been gone long ago iffen dat white man Saunder didn't lose his hold on me. It was de fourth day of June in 1865 I begins to live, and gwine take de picture of dat old man in de big black hat and long whiskers, setting on de gallery and talking kind to us, clean into my grave wid me. No, bess God, I ain't never seen no more black boys bleeding all up and down de back under a cat o' nine tails, and I never go by no cabin and hear no poor nigger groaning, all wrapped up in a lardy sheet no more! I hear my chillun read about General Lee, and I know he was a good man. I didn't know nothing about him den, but I know now he wasn't fighting for dat kind of white folks. Maybe dey dat kind sill yet, but dey don't show it up no more, and I got lots of white friends too. All my chillun and grandchillun been to school, and dey git along good, and I know we living in a better world, what dey ain't nobody &amp;quot;cussing fire to my black heart!&amp;quot; I sho' thank de good Lawd I got to see it."&gt;&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#attend-juneteenthconf"&gt;
  &lt;/a&gt;
  Attend JuneteenthConf
&lt;/h3&gt;

&lt;p&gt;... A free and virtual conference made for Black people in tech. Inn the words of JuneteenthConf's organizers, the conference &lt;em&gt;"celebrates Black Excellence and promotes community for Black people who are severely underrepresented, overlooked, and underutilized in the tech industry."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;June 19th. Register &lt;a href="http://juneteenthconf.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-inspired-by-black-technologists"&gt;
  &lt;/a&gt;
  Get inspired by Black technologists
&lt;/h3&gt;

&lt;p&gt;Because honoring Black History shouldn't be confined to one month per year.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thepracticaldev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zg3sT9Js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vHKcEiTe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/3/13d3b32a-d381-4549-b95e-ec665768ce8f.png" alt="thepracticaldev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/tell-us-about-the-black-technologists-that-inspire-you-2m7b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Tell us about the Black technologists that inspire you! &lt;/h2&gt;
      &lt;h3&gt;dev.to staff „Éª Feb 1 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#blackhistorymonth&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inspiration&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;We would love to hear how you plan to commemorate Juneteenth this year in the comments below ‚ù§Ô∏è &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blacklivesmatter"&gt;
  &lt;/a&gt;
  &lt;a href="//dev.to/t/blacklivesmatter"&gt;#BlackLivesMatter&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>blacklivesmatter</category>
      <category>juneteenth</category>
    </item>
    <item>
      <title>Version Name x Version Code no Android</title>
      <author>Felipe Moreno Borges</author>
      <pubDate>Fri, 18 Jun 2021 14:23:26 +0000</pubDate>
      <link>https://dev.to/devcapu/version-name-x-version-code-no-android-1pdi</link>
      <guid>https://dev.to/devcapu/version-name-x-version-code-no-android-1pdi</guid>
      <description>&lt;p&gt;Ao publicar um aplicativo na &lt;a href="https://play.google.com/store/?utm_source=latam_Med&amp;amp;utm_medium=hasem&amp;amp;utm_content=Jul1520&amp;amp;utm_campaign=Evergreen&amp;amp;pcampaignid=MKT-FDR-latam-br-1002290-Med-hasem-py-Evergreen-Jul1520-Text_Search_BKWS-41905086&amp;amp;gclid=CjwKCAjwiLGGBhAqEiwAgq3q_jRFkiDhXwnrqv1IfwAcy4Ur5CDjbEkFEV_vUKluTr3ENtkCEjudtBoCgSUQAvD_BwE&amp;amp;gclsrc=aw.ds"&gt;Play Store&lt;/a&gt; √© obrigat√≥rio o uso de versionamento. J√° que o projeto se encontra no dispositivo do usu√°rio, caso ocorra alguma falha, n√≥s como desenvolvedores podemos pedir a vers√£o do aplicativo para o usu√°rio e verificar as mudan√ßas que foram feitas naquela vers√£o e corrigi-la.&lt;/p&gt;

&lt;p&gt;Para definir a vers√£o, n√≥s podemos ir em &lt;code&gt;build.gradle&lt;/code&gt; (o do m√≥dulo) e l√° encontraremos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="n"&gt;defaultConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="c1"&gt;//C√≥digo acima omitido...&lt;/span&gt;
       &lt;span class="n"&gt;versionCode&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
       &lt;span class="n"&gt;versionName&lt;/span&gt; &lt;span class="s"&gt;"1.0.0"&lt;/span&gt;
             &lt;span class="c1"&gt;//C√≥digo abaixo omitido...&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aqui n√≥s podemos ver duas configura√ß√µes relacionadas a vers√£o do app e n√≥s &lt;strong&gt;sempre&lt;/strong&gt; precisamos definir valores pra ambos, &lt;code&gt;versionCode&lt;/code&gt;e &lt;code&gt;versionName&lt;/code&gt; . Mas o que esses valores querem dizer? E por que tem dois? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#version-code"&gt;
  &lt;/a&gt;
  Version Code
&lt;/h3&gt;

&lt;p&gt;Um n√∫mero positivo que usamos pra definir se uma vers√£o √© maior que outra vers√£o. Quanto maior o n√∫mero, mais recente √© a vers√£o. Esse n√∫mero n√£o √© mostrado (e nem deveria ser) para os usu√°rios. N√≥s definimos ele usando o &lt;code&gt;versionCode&lt;/code&gt; . Voc√™ √© livre pra definir qualquer valor pra ele, desde que o n√∫mero seja maior que a vers√£o antecessora. Voc√™ n√£o consegue instalar uma vers√£o menor do que a que j√° estiver no dispositivo e tamb√©m n√£o pode fazer upload pra Play Store de uma vers√£o que j√° tenha sido usada.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#version-name"&gt;
  &lt;/a&gt;
  Version Name
&lt;/h3&gt;

&lt;p&gt;A &lt;code&gt;versionName&lt;/code&gt; √© a vers√£o que √© mostrada aos usu√°rios. Pode ser tanto uma uma string diretamente ou uma refer√™ncia pra uma string. Esse atributo n√£o tem outra fun√ß√£o que n√£o seja ser mostrada para o usu√°rio. Uma recomenda√ß√£o √© o uso do &lt;a href="https://semver.org/lang/pt-BR/"&gt;versionamento sem√¢ntico&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b%C3%B4nus-play-console-version"&gt;
  &lt;/a&gt;
  B√¥nus: Play Console version
&lt;/h3&gt;

&lt;p&gt;Ao fazermos upload de uma nova vers√£o no Google Play Console, tamb√©m √© necess√°rio informar um nome pra vers√£o. Esse nome n√£o √© mostrado para os usu√°rios. Apenas √© usado dentro da pr√≥pria plataforma. Com essa vers√£o,  fica mais f√°cil de identificar em qual passo essa vers√£o est√° (teste interno, teste aberto, produ√ß√£o, etc). Uma recomenda√ß√£o √© que voc√™ use o mesmo valor que foi usado no &lt;code&gt;versionName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6a1ixoxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm6xiz7znqawvir96ydv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6a1ixoxS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm6xiz7znqawvir96ydv.png" alt="Screen Shot 2021-06-17 at 23.34.02"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Refer√™ncias:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.android.com/studio/publish/versioning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gabrielleearnshaw.medium.com/versioning-mobile-app-releases-like-a-pro-25137766150a"&gt;Versioning mobile app releases like a pro&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://semver.org"&gt;Semantic Versioning 2.0.0&lt;/a&gt;&lt;/p&gt;

</description>
      <category>android</category>
      <category>release</category>
    </item>
    <item>
      <title>Creating Production-Ready Containers -  Advanced Techniques</title>
      <author>Martin Wimpress</author>
      <pubDate>Fri, 18 Jun 2021 14:00:05 +0000</pubDate>
      <link>https://dev.to/wimpress/creating-production-ready-containers-advanced-techniques-4jm3</link>
      <guid>https://dev.to/wimpress/creating-production-ready-containers-advanced-techniques-4jm3</guid>
      <description>&lt;p&gt;Creating production-ready containers for use in commercial-grade apps can be a far cry from the "get started with Node.js and Docker"-type of tutorials that are common around the Internet. Those guides are great for introducing all the advantages of Docker containers in modern cloud-native development, but creating a container that passes muster in a large-scale application in production is a different story. &lt;/p&gt;

&lt;p&gt;For production-ready containers, there are three key things you want to optimise for when creating a container:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Image Size üì¶&lt;/li&gt;
&lt;li&gt;Build Speed üê¢&lt;/li&gt;
&lt;li&gt;Security üîê&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Image size and build speed ensure that your containers can move through CI/CD and test pipelines easily and efficiently. Security is obviously critical in today's software supply chain, and containers have their own set of security issues. Thankfully, reducing container image size actually can alleviate some security issues in containers. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/wimpress/creating-production-ready-containers-the-basics-3k6f"&gt;In my Basics article&lt;/a&gt;, I showed you some easy techniques to improve your &lt;code&gt;Dockerfile&lt;/code&gt; using a sample "Hello World" Node.js application.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/wimpress" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nU18E0zK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bNUXjsWS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642284/1eda70cb-1f75-46a1-aa07-15333a0450dd.png" alt="wimpress image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/wimpress/creating-production-ready-containers-the-basics-3k6f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating Production-Ready Containers - The Basics&lt;/h2&gt;
      &lt;h3&gt;Martin Wimpress „Éª Jun 3 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;These basics address all three optimisations, though they only scratch the surface. &lt;/p&gt;

&lt;p&gt;Let's look at some more advanced techniques for Container Optimisation.&lt;/p&gt;




&lt;p&gt;Keen readers who make it to the end of the article will unlock a bonus! üéÅ&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#alpine-images"&gt;
  &lt;/a&gt;
  Alpine Images
&lt;/h2&gt;

&lt;p&gt;The very first thing you'll encounter when looking for techniques to create smaller containers is &lt;a href="https://alpinelinux.org/"&gt;Alpine Linux&lt;/a&gt;. Alpine Linux is an open source project whose goal is to create a bare-bones ü¶¥ version of Linux that lets developers "build from the ground up." &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-transitioning-to-alpine-can-be-an-easy-way-to-get-a-smaller-container"&gt;
  &lt;/a&gt;
  Pros: Transitioning to Alpine can be an easy way to get a smaller container
&lt;/h3&gt;

&lt;p&gt;Reducing image size with Alpine can be incredibly simple - under the right circumstances. For some apps, it's as easy as changing the base image in your &lt;code&gt;Dockerfile&lt;/code&gt;: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#from"&gt;
  &lt;/a&gt;
  FROM
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16.2.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#to"&gt;
  &lt;/a&gt;
  TO
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16.2.0-alpine&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;When we build the new image, we see that the old image was 856MB and the new one is 114MB üéâ&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REPOSITORY          TAG     IMAGE ID        CREATED         SIZE
cotw-node-alpine    latest  2cc7b4a7b09c    2 minutes ago   114MB
cotw-node           latest  873fb9fca53a    3 days ago      856MB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Easy, right? Not so fast.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cons-using-alpine-images-can-lead-to-build-problems-now-and-in-the-future"&gt;
  &lt;/a&gt;
  Cons: Using Alpine images can lead to build problems, now and in the future
&lt;/h3&gt;

&lt;p&gt;There are some not so obvious gotchas with using Alpine images that don't crop up in our super simple example application, such as: &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#you-have-to-install-everything"&gt;
  &lt;/a&gt;
  You have to install everything
&lt;/h4&gt;

&lt;p&gt;Those tiny base images have to sacrifice something, right? Alpine users will be installing everything they need, right down to time-zone data or development tools. You won't need your development tools for your production image, most likely, but for most developers, the thought of a server without &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;vim&lt;/code&gt; is a bridge too far.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#different-compilers-and-package-managers"&gt;
  &lt;/a&gt;
  Different compilers and package managers
&lt;/h4&gt;

&lt;p&gt;You'll also be installing any dependencies with the Alpine Package Keeper tool (&lt;code&gt;apk&lt;/code&gt;) instead of the more familiar &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;rpm&lt;/code&gt;. The differences are small, but can trip up unsuspecting developers. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#fewer-examples-less-documentation"&gt;
  &lt;/a&gt;
  Fewer examples; less documentation
&lt;/h4&gt;

&lt;p&gt;Finally, while Alpine has been around for nine-plus years, it is and likely always will be a smaller and more specialised user base than established Linux distributions such as Ubuntu and Debian. To wit, at the time of this writing the &lt;code&gt;alpine&lt;/code&gt; tag on StackOverflow has just &lt;a href="https://stackoverflow.com/questions/tagged/alpine"&gt;1,280 questions&lt;/a&gt;, compared with &lt;a href="https://stackoverflow.com/questions/tagged/ubuntu"&gt;over 54,000 for Ubuntu&lt;/a&gt;. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#multistage-builds"&gt;
  &lt;/a&gt;
  Multi-stage builds
&lt;/h2&gt;

&lt;p&gt;The next tactic you are likely to encounter when searching for ways to reduce Docker image sizes is multi-stage üèó builds. This tactic, &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/"&gt;recommended by Docker and many in the Docker community&lt;/a&gt;, is essentially building the image twice. The first set of commands builds your base application image, all things included. The second set of commands builds an image off of that base image, taking only what's needed and leaving out anything that's not. &lt;/p&gt;

&lt;p&gt;With a multi-stage build, our &lt;code&gt;Dockerfile&lt;/code&gt; would look like this. Notice the two &lt;code&gt;FROM&lt;/code&gt; statements. The first builds the application image; the second copies the necessary files from that image into the second, more production-ready version.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16.2.0-alpine as builder&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; package*.json ./&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm ci
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; app.js ./&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:16.2.0-alpine&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=builder /usr/src/app .&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 3000&lt;/span&gt;
&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="s"&gt; node&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["node","app.js"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#pros-dev-and-prod-images-can-be-built-separately"&gt;
  &lt;/a&gt;
  Pros: Dev and Prod images can be built separately
&lt;/h3&gt;

&lt;p&gt;When combined with &lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt;, this approach gives developers a flexible development environment while reducing bloat in the production images. You can simply use your initial image for dev/test and the final version for productions. Multi-stage builds work especially well for Go containers, significantly reducing image size, but also work well for static Node.js and React-type applications. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cons-added-complexity-usecase-specific"&gt;
  &lt;/a&gt;
  Cons: Added complexity; use-case specific
&lt;/h3&gt;

&lt;p&gt;Multi-stage builds are still relatively new üå± on the scene. For most developers still new to containers, knowing what to copy over to the final production image and what to leave behind is a major barrier to entry. Further, this pattern can run into challenges. &lt;/p&gt;

&lt;p&gt;Since we're already using an Alpine image, the size savings are relatively minor for our "Hello World" example. You'd expect to see greater gains in a full-blown React or Vue application.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REPOSITORY            TAG     IMAGE ID      CREATED        SIZE
cotw-node-multistage  latest  52bc33d14a87  3 minutes ago  114MB
cotw-node-alpine      latest  2cc7b4a7b09c  4 days ago     114MB
cotw-node             latest  873fb9fca53a  7 days ago     856MB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#development-tools-and-distroless"&gt;
  &lt;/a&gt;
  Development tools and Distroless
&lt;/h2&gt;

&lt;p&gt;There are several tools - and new ones emerging every day - that look to bypass or automate &lt;code&gt;Dockerfile&lt;/code&gt; authoring to make image creation easier. &lt;a href="https://buildpacks.io/"&gt;&lt;em&gt;Buildpacks&lt;/em&gt;&lt;/a&gt; are the most mature of these technologies, and can be used through tools like &lt;a href="https://buildpacks.io/docs/tools/pack/"&gt;Pack&lt;/a&gt; or &lt;a href="https://www.waypointproject.io/plugins/pack"&gt;Waypoint&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;There are builder options from multiple sources - Heroku, Google, and Paketo are common favourites - and each gives you a slightly different developer experience and final image when used.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pack build cotw-node-bp-google &lt;span class="nt"&gt;--builder&lt;/span&gt; gcr.io/buildpacks/builder:v1
&lt;span class="nv"&gt;$ &lt;/span&gt;pack build cotw-node-bp-heroku &lt;span class="nt"&gt;--builder&lt;/span&gt; heroku/buildpacks:18
&lt;span class="nv"&gt;$ &lt;/span&gt;pack build cotw-node-bp-pb-base &lt;span class="nt"&gt;--builder&lt;/span&gt; paketobuildpacks/builder:base
&lt;span class="nv"&gt;$ &lt;/span&gt;pack build cotw-node-bp-pb-full &lt;span class="nt"&gt;--builder&lt;/span&gt; paketobuildpacks/builder:full
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#pros-when-they-work-they-work"&gt;
  &lt;/a&gt;
  Pros: When they work, they work
&lt;/h3&gt;

&lt;p&gt;In certain instances, Buildpacks can take the pain out of &lt;code&gt;Dockerfile&lt;/code&gt; authoring and just create container images of your application with no fuss. The pack tool is looking for "app-like" files in your source directory, and automatically figuring out what kind of application is there and how to containerize it. In the case of our Node sample, it sees &lt;code&gt;package.json&lt;/code&gt; and correctly assumes we have a Node.js application.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cons-when-they-dont"&gt;
  &lt;/a&gt;
  Cons: When they don't‚Ä¶
&lt;/h3&gt;

&lt;p&gt;Given the relative newness of this approach for Docker containers, there are a lot of gotchas with Buildpacks. Non-standard applications or operating systems can struggle, and we've had issues running them successfully on the new Silicon Macbook Pros. The resulting images vary a lot - we saw a range of 200MB to 800MB in our examples - and the results tend to be lower than what you'd get with other techniques. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#automate-it-with-dockerslim"&gt;
  &lt;/a&gt;
  Automate it with DockerSlim
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://dockersl.im"&gt;DockerSlim&lt;/a&gt; open source project was created by &lt;a href="https://slim.ai"&gt;Slim.AI&lt;/a&gt; CTO &lt;a href="https://twitter.com/kcqon"&gt;Kyle Quest&lt;/a&gt; in 2015 as a way to automate container optimisation. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker-slim"&gt;
        docker-slim
      &lt;/a&gt; / &lt;a href="https://github.com/docker-slim/docker-slim"&gt;
        docker-slim
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      DockerSlim (docker-slim): Don't change anything in your Docker container image and minify it by up to 30x (and for compiled languages even more) making it secure too! (free and open source)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/docker-slim/docker-slim/master/assets/images/dslim/DockerSlimLogo1Big.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gA0iS9hh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/docker-slim/docker-slim/master/assets/images/dslim/DockerSlimLogo1Big.png" alt="DSLIM1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/docker-slim/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b018f50edf4d2cd030f4ebcfac5f4cd28235d53385eeff7472f831516d1d4a88/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="Gitter chat"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/9tDyxYS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9726a22cdc1539c17bdbdf7d1920b75825499b03d8a28c7b4916bd8304d3ac/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d63686174266d6573736167653d6f6e253230646973636f726426636f6c6f723d373338394438267374796c653d666f722d7468652d6261646765" alt="Discord chat"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/DockerSlim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5959e8f03e7b7c9f15a9fa267a0ee46821e55837e6becc3515401e54fc70dab8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f6c6c6f772d6f6e253230747769747465722d2532333144413146322e7376673f7374796c653d666f722d7468652d6261646765266c6f676f436f6c6f723d7768697465" alt="Follow"&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCy7RHjJlaBhpCCbChrd8POA?sub_confirmation=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/598c78f4e374db546402736ffdfdd9b7607500135657107d43e38199e8fa3a37/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d596f75547562652d7265643f7374796c653d666f722d7468652d6261646765266c6f676f3d796f7574756265266c6f676f436f6c6f723d7768697465" alt="Youtube"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/docker-slim/docker-slim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74f2ef92071cb14abb7a28c9422d8c9b450ec7ec7aa63a899a43ac43f76577f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d3930386138353f6c6f676f3d676974706f64267374796c653d666f722d7468652d6261646765" alt="Gitpod ready-to-code"&gt;&lt;/a&gt;
&lt;a href="https://github.com/docker-slim/docker-slim#installation"&gt;&lt;img src="https://camo.githubusercontent.com/72af5a9821d6e001c5ef434dfafa73c8e99e3bf02408399dc181e57f72b52cc3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d646f636b65722d2d736c696d2d626c75653f7374796c653d666f722d7468652d6261646765" alt="Download DockerSlim"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Optimize Your Experience with Containers. Make Your Containers Better, Smaller, More Secure and Do Less to Get There (free and open source!)&lt;/h1&gt;
&lt;p&gt;Don't change anything in your Docker container image and minify it by up to 30x making it secure too! Optimizing images isn't the only thing it can do though. It can also help you understand and author better container images.&lt;/p&gt;
&lt;p&gt;Keep doing what you are doing. No need to change anything. Use the base image you want. Use the package manager you want. Don't worry about hand optimizing your Dockerfile. You shouldn't have to throw away your tools and your workflow to have small container images.&lt;/p&gt;
&lt;p&gt;Don't worry about manually creating Seccomp and AppArmor security profiles. You shouldn't have to become an expert in Linux syscalls, Seccomp and AppArmor to have secure containers. Even if you do know enough about it wasting time reverse engineering your application behavior‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/docker-slim/docker-slim"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Simply download and run &lt;code&gt;docker-slim build &amp;lt;myimage&amp;gt;&lt;/code&gt; and DockerSlim will examine the image, rebuild it with only the required dependencies, and give you a new image that can be run just like the original. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-its-automatic"&gt;
  &lt;/a&gt;
  Pros: It's automatic
&lt;/h3&gt;

&lt;p&gt;DockerSlim means you can work with whatever base image you'd like (say, Ubuntu or Debian) and let DockerSlim worry about removing unnecessary tools and files en route to production. The best part is that DockerSlim can be used alongside any of these other techniques. Once tested, it can be integrated into your CI/CD pipeline for automatic container minification, and the reduction in size leads to faster build times and better security. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cons-steep-learning-curve"&gt;
  &lt;/a&gt;
  Cons: Steep learning curve
&lt;/h3&gt;

&lt;p&gt;As with any open-source software, DockerSlim can take some time to get working, especially for non-trivial applications. It works best for web-style applications, micro-services and APIs that have defined HTTP/HTTPS ports which the sensor can find and use to observe the container internals. &lt;/p&gt;

&lt;p&gt;For best results, spend some time getting to know the various command flags available to tune your image, and &lt;a href="https://github.com/docker-slim/examples"&gt;take a look at the examples for whatever framework you're using&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker-slim"&gt;
        docker-slim
      &lt;/a&gt; / &lt;a href="https://github.com/docker-slim/examples"&gt;
        examples
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Minified application examples with different languages and stacks for DockerSlim
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#connecting-with-dockerslim"&gt;
  &lt;/a&gt;
  Connecting with DockerSlim
&lt;/h2&gt;

&lt;p&gt;There's an &lt;a href="https://discord.gg/9tDyxYS"&gt;active DockerSlim Discord channel&lt;/a&gt; full of experts who can help you triage issues as they arise. &lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://dev.to/wimpress/"&gt;me here on dev.to&lt;/a&gt;, the &lt;a href="https://twitch.tv/SlimDevOps"&gt;SlimDevOps Twitch üì° channel&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCdGG73JYGHfQO3n_gjdP-oQ"&gt;SlimDevOps YouTube üì∫ channel&lt;/a&gt; where I'll be doing more deep-dives into container optimisation using DockerSlim and the Slim.AI platform in future posts and live-streams. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exclusive-slimai-early-access"&gt;
  &lt;/a&gt;
  Exclusive Slim.AI early access
&lt;/h2&gt;

&lt;p&gt;And, if you got to the end of this article dear reader, then here is a bonus for you; an &lt;a href="https://slim.ai/blog/closed-beta-signup.html"&gt;&lt;em&gt;early access invite to the Slim.AI private beta&lt;/em&gt;&lt;/a&gt; üôÇ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Image credit: &lt;a href="https://unsplash.com/@exdigy"&gt;Dominik L√ºckmann&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>linux</category>
      <category>dockerslim</category>
    </item>
  </channel>
</rss>
