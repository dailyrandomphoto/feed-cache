<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I got my first job with the help of DevCommunity‚òÑÔ∏è</title>
      <author>krishna kakade</author>
      <pubDate>Mon, 26 Apr 2021 12:57:09 +0000</pubDate>
      <link>https://dev.to/krishnakakade/how-i-got-my-first-job-with-the-help-of-devcommunity-1e6j</link>
      <guid>https://dev.to/krishnakakade/how-i-got-my-first-job-with-the-help-of-devcommunity-1e6j</guid>
      <description>&lt;p&gt;Firstly helloüòäüëã all hope you're doing good and taking care of yourself. It's been a while I haven't written anything so in this article I will describe the story of how I got my first job.&lt;br&gt;
&lt;em&gt;Contents&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Background Story&lt;/li&gt;
&lt;li&gt;How the dev community helped me and some tips
Let's Start 
&lt;strong&gt;Background Story&lt;/strong&gt;
As I am a final year computer science graduate student in this phase of life you need to decide whether you're going to do a job or you're going for higher studies in my case since the sophomore year of my degree I started doing things that are going to help me to get a job but honestly I like being a student in this student phase you can experiment on so many things and also you don't have to worry about so many things like future and all you just need to do studies and learning new things/building new things as per interest and then rest this is it but things change as we grow. and also I like to do research on things and I also did some research kind of work here &lt;a href="https://krishnakakade.medium.com/movable-food-chamber-on-mars-deep-space-food-challenge-by-nasa-b4b76b987c8c?source=your_stories_page-------------------------------------"&gt;Basic Research Work&lt;/a&gt; 
because the research thing I thought about higher studies in some well known foreign universities but because of COVID and some financial reasons that thing I put on hold but in future 
at some point in my life, I will try to do research that can help humanity.
And then honestly I saw many students doing internships in the final semester I got many opportunities but I rejected those things because I wanted to experiment with the things and I did my overall reaction for my this decision is in between neutral.
after this thing, I took small steps towards getting a job those things I will explain in the upcoming paragraph.
&lt;strong&gt;How DevCommunity helped me to get a job&lt;/strong&gt;
Firstly I applied to 4-5 good companies with help of their careers section few startups also my resume got selected I given interviews also but in some cases in coding sections and in some case they rejected me because they are searching for experienced candidates.
Then I thought I am having 40credits in my dev account then I created the one listed below is an example of that 5 credit per listing
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNKW1ZKr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1v4j458otbg6suozokq.png" alt="Alt Text"&gt;
then for the next two-three days, I haven't got any response and then two companies contacted me then I gave an interview of one company after doing all the like interviews and stuff they said we need a more experienced candidate.
and then another company contacted me I was given first interview this time the interviewers and company folks are so helpful and kind also then said we will give you one coding assignment complete that and let us know then and then i completed that exercise and then directly they offered me the job as a &lt;em&gt;Jr FullStack developer&lt;/em&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XyDZgr7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmi0aggnl7ump2kt77ze.png" alt="Alt Text"&gt;
Soon I am going to join this company that's good news in these tough times.
all the details of the company will reflect on Linkedin soon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Some Tips&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you're going to apply for a dev job then build a project document your learnings on the blogs build something cool and contribute to the opensource projects and apply through careers sites or LinkedIn. 
and in the job we are going to use reactjs/meteor js/node/express/MongoDB
This is my new chapter of life.
stay safe take care
Thank you mother/grandmother and relatives and Devcommunity.
that's all I did have a great day:).
&lt;img src="https://i.giphy.com/media/QLvRBqfLXCphu/giphy.gif" alt=""&gt;
Note:- I know everyone is missing those trips vacations those happy times with family older grandparents i miss that too because of covid I can't go there I will go to meet my grandparents after and then Dalai lama(Hopefully as soon as possible) these are personal topics I am sharing hereüòä.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>advice</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>165+ Developer Resources I Discovered in 2020-2021</title>
      <author>Gedalya Krycer</author>
      <pubDate>Mon, 26 Apr 2021 12:56:03 +0000</pubDate>
      <link>https://dev.to/gedalyakrycer/165-developer-resources-i-discovered-in-2020-2021-6ma</link>
      <guid>https://dev.to/gedalyakrycer/165-developer-resources-i-discovered-in-2020-2021-6ma</guid>
      <description>&lt;p&gt;Since starting to actively code in 2020, I have come across many helpful resources.&lt;/p&gt;

&lt;p&gt;Some I have completed and others I still have in the queue. Hopefully, they will be helpful to you as well! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#resource-types"&gt;
  &lt;/a&gt;
  Resource Types
&lt;/h4&gt;

&lt;p&gt;üéì = Complete course on a subject(s) &lt;br&gt;
üß∞ = Tool that makes development easier &lt;br&gt;
üßê = Single article or video on a subject(s)&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources-lists"&gt;
  &lt;/a&gt;
  Resources Lists
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#-html"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#htmlSection"&gt;HTML&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-css"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#cssSection"&gt;CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javascript"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#jsSection"&gt;JavaScript&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-react"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#reactSection"&gt;React&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-wordpress"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#wpSection"&gt;WordPress&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-git-amp-cli"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#gitSection"&gt;Git &amp;amp; CLI&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-hosting"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#hostingSection"&gt;Hosting&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-optimizations"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#optimizeSection"&gt;Optimizations&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-databases"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#databaseSection"&gt;Databases&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-misc-web-dev"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#miscSection"&gt;MISC Web Dev&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-career"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#careerSection"&gt;Career&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-design"&gt;
  &lt;/a&gt;
  ‚Ä¢ &lt;a href="#designSection"&gt;Design&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-resources"&gt;
  &lt;/a&gt;
  HTML Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://moz.com/learn/seo/alt-text"&gt;Alt Text&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Loved how it gave examples of what good alt text looks like.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.techonthenet.com/html/elements/doctype_tag.php"&gt;HTML: &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; tag&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Especially helpful when I was first learning HTML syntax&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.w3schools.com/html/html5_semantic_elements.asp"&gt;W3S HTML5 Semantic Elements&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great quick intro to why everything shouldn't be in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element"&gt;MDN HTML elements reference&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ready to go to the next level? This guide goes even deeper in the many HTML elements.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.opera.com/articles/new-structural-elements-in-html5/"&gt;New Structural Elements in HTML5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This guide really helped me understand elements like &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://websitesetup.org/html5-periodical-table/"&gt;HTML5 Periodical Table&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love how interactive, yet simplified this approach is to learning the elements.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="https://javascript.info/script-async-defer"&gt;Scripts: async, defer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This taught me different ways to load JS into html files, drastically improving performance.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learn.shayhowe.com/html-css/"&gt;Learn to Code HTML &amp;amp; CSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Took this course to prepare for the bootcamp. Great intro to HTML.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learn.shayhowe.com/advanced-html-css/"&gt;Learn to Code Advanced HTML &amp;amp; CSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I really enjoyed the above beginner course and looking forward to taking this one.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=4HuAnM6b2d8"&gt;Derek Banas Handlebars Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Not technically HTML, but it sure helps you write it efficiently. Looking forward to viewing this tutorial.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href="https://metatags.io/"&gt;metatags.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of my favorite generators for creating meta tags for multiple social media platforms.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/a-complete-guide-to-links-and-buttons/"&gt;A Complete Guide to Links and Buttons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Using the right tool for the right job is never more apparent in this deep-dive comparison article.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getwaves.io"&gt;getwaves.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Love this tool! Generate svg waves, to create curved separations for page sections!&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-resources"&gt;
  &lt;/a&gt;
  CSS Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/"&gt;Bootstrap Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Even if I am not using the framework I love using their documentation for inspiration on common web components.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/specifics-on-css-specificity/"&gt;Specifics on CSS Specificity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great breakdown by CSS-Tricks and has nice graphic examples at the end.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.w3schools.com/css/css3_box-sizing.asp"&gt;CSS Box Sizing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very easy to approach example of how the box-model works.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.creativebloq.com/advice/tips-for-css-animation"&gt;12 tips for amazing CSS animation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This has so many good tips on creating cool animations and making sure they are performant.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;a href="https://designcode.io/css-layout-and-animations"&gt;CSS Layout and Animations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't taken this one yet, but can't wait to do so. The course designs are top notch.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9iEwigam3gTjU_7IA3W2WZA"&gt;Net Ninja SASS Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was my first course on SASS and still refer back to it from time to time.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Zz6eOVaaelI"&gt;Learn Sass In 20 Minutes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is great for a first primer into what SASS is.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@andrew_barnes/bem-and-sass-a-perfect-match-5e48d9bc3894"&gt;BEM and SASS: A Perfect Match&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This blew my mind when introduced how BEM and SASS could be used together.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;&lt;a href="http://getbem.com/"&gt;getbem.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This gives an overview from the creators of the popular naming convention.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/bem-101/"&gt;CSS-Tricks BEM 101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love the button examples that this article gives on how to use BEM.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;&lt;a href="https://sparkbox.com/foundry/bem_by_example"&gt;BEM by Example &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This explanation on BEM is really good, but I especially like how they have a short and full versions of the article.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display"&gt;MDN Display Docs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything you could ever want to know about the powerful &lt;code&gt;display&lt;/code&gt; property.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/a-couple-of-use-cases-for-calc/"&gt;A Couple of Use Cases for Calc()&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;calc()&lt;/code&gt; is one of the more powerful features in CSS and this article shows some great use cases for it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://cssgrid.io"&gt;Wes Bos CSS Grid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;You can't argue with free and that Wes Bos is one of the best teachers out there for development.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;&lt;a href="https://flexbox.io"&gt;Wes Bos Flexbox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;See above, but this time for Flexbox&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cssmatic.com"&gt;CSSmatic&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of powerful css generators for gradients, border radius, noise texture and box shadows.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/almanac/properties/p/position/"&gt;CSS Tricks Position&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could have access to only one resource for the &lt;code&gt;position&lt;/code&gt; property, this would be it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;&lt;a href="https://caniuse.com"&gt;Can I Use?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This site lets you know the browser support for every property out there.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;&lt;a href="https://yoksel.github.io/flex-cheatsheet/"&gt;yoksel Flex Cheatsheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love the layout and way it lets you visually preview the flexbox properties.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;&lt;a href="https://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048"&gt;The 30 CSS Selectors You Must Memorize&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;When I feel like getting into the weeds of CSS selectors, (sorry BEM) this is the article I refer back to.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;&lt;a href="http://csslint.net"&gt;CSS Lint&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool will check your code and highlight any errors.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;&lt;a href="https://systemfontstack.com"&gt;System Font Stack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Predefined font fallback stacks that can be plugged into a project.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;&lt;a href="https://neumorphism.io/#c0b5b5"&gt;Neumorphism.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool makes elements look like they are just under the surface of the page.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/advanced-css-and-sass/"&gt;Advanced CSS and Sass: Flexbox, Grid, Animations and More!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bought this amazing course on Udemy but haven't gotten a chance to take it yet...one day soon though!&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-scroll-shadows.now.sh/?bgColor=9d80d6&amp;amp;shadowColor=222222&amp;amp;pxSize=15"&gt;CSS Scroll Shadows&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool generates shadows that appear based on scroll position with just CSS!&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-resources"&gt;
  &lt;/a&gt;
  JavaScript Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;&lt;a href="https://javascript.info"&gt;javascript.info&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of the complete and well explained overview of JS.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codebeautify.org/jsvalidate"&gt;Code Beautify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Before getting into ESlint, I really liked this tool to make sure my JS was all kosher.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/javascript-truthy-falsy/"&gt;Truthy and Falsy: When All is Not Equal in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article is a great refernce for all the instances that a value might be considered true or false.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/8aGhZQkoFbQ"&gt;What the heck is the event loop anyway?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I have not watched this yet, but looking forward to it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=s9wW2PpJsmQ"&gt;JavaScript Loops&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could only watch one video to understand common JS loops, this would be the one.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.tutorialrepublic.com/javascript-tutorial/javascript-loops.php"&gt;JavaScript Loops&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could only read one article to understand common JS loops, this would be the one.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript/modules/learn-javascript-introduction/cheatsheet"&gt;Codecademy JS Cheatsheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Totally free and a nice collection of common JS elements and concepts.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"&gt;MDN JS String&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything I'd ever want to know about strings and where to use them.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@debbie.obrien/json-parse-v-json-stringify-4b9d104c78d0"&gt;JSON Parse v JSON Stringify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;These JSON functions confused me to no end. This article really helped explain the differences.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.google.com/speed/libraries#jquery"&gt;Google Hosted Library jQuery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bookmark this link. :) It has the latest jQuery cdn script at all time.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/public-apis/public-apis/"&gt;Public APIs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great list of public APIs that you can use projects today!&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dmitripavlutin.com/javascript-event-delegation/"&gt;Javascript Event Delegation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome visual representation of what events are and how event delegation works.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const ‚Äì What's the Difference?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great introduction to the different variable types (and why &lt;code&gt;var&lt;/code&gt; is trash.)&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dmitripavlutin.com/differences-between-arrow-and-regular-functions/"&gt;5 Differences Between Arrow and Regular Functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love how this demystifies how the two function types are used.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course - Part 1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Discover how to select elements in the DOM to be used with JS&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=mPd2aJXCZ2g"&gt;JavaScript DOM Crash Course - Part 2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn the basics of how to traverse the DOM.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=wK2cBMcDTss"&gt;JavaScript DOM Crash Course - Part 3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn how to attach attach events to DOM elements.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=i37KVt_IcXw"&gt;JavaScript DOM Crash Course - Part 4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Build a small project based on the last 3 videos.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;Introduction to the DOM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great resource on the DOM, this quick article will get you up and running.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jx2TTZk3IGWKSbtugYdrlu"&gt;Asynchronous Javascript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I forgot I bookmarked this until now. This an awesome free course by the Net Ninja.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codewars.com/kata/54c27a33fb7da0db0100040e/train/javascript"&gt;Code Wars Kata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This awesomely themed training tool lets you practice your sweet Javascript skills.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/event-bubbling-javascript/"&gt;What Is Event Bubbling in JavaScript?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great resource on what event bubbling is and how to take advantage of it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/javascript-event-delegation-is-easier-than-you-think/"&gt;JavaScript Event Delegation is Easier than You Think&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn how to trigger and listen to events correctly.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.quirksmode.org/js/events_properties.html#target"&gt;Which HTML element is the target of the event?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Find out which element was interacted with.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Love the design of this site and it does a thorough job of explaining scope.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/til-js/different-ways-of-writing-a-function-in-javascript-part-i-80d9a9e0138b"&gt;Different ways of writing a function in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Quick article on how to write a "Function Declaration" function.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.softauthor.com/javascript-image-slider-slideshow-carousel/"&gt;JavaScript Image Slider for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This teaches how to build a simple image slider with Vanilla JS.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;td&gt;&lt;a href="https://testingjavascript.com"&gt;Learn the smart, efficient way to test any JavaScript application.&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I have not taken this one yet, but looking forward to it‚Äîas it is such an important subject!&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass/"&gt;JavaScript Algorithms and Data Structures Masterclass&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I am not a fan of algorithms, but that is why I have this course bookmarked!&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/ajax-basics-2"&gt;AJAX Basics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything you ever wanted to know about making AJAX requests to a web server.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.taniarascia.com/how-to-connect-to-an-api-with-javascript/"&gt;How to Connect to an API with JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article really helped me understand how API calls can be used in projects.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.taniarascia.com/how-to-use-json-data-with-php-or-javascript/"&gt;JSON Tutorial: Request API Data with JavaScript or PHP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It's so interesting to see how PHP and JavaScript handle JSON differently.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;&lt;a href="https://barnabas.hashnode.dev/basics-of-javascript-reduce-method-ckdk81c6402y7zzs1f13p4x7t"&gt;Basics Of JavaScript Reduce Method&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This short article does such a great job of breaking down this powerful JS method.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.logrocket.com/axios-or-fetch-api/#:~:text=To%20send%20data%2C%20fetch(),set%20in%20the%20options%20object"&gt;Axios or fetch(): Which should you use? &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I tend to reach for Axios, but this article does a great job explaining both.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Learn JavaScript  Start &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I took this 30-hour course and it is amazing. Does a great job explaining the basics.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;&lt;a href="https://validatejs.org"&gt;validatejs.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great tool to use on sign-up and login forms to make sure the user data is correct.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=ymmtEgp0Tuc"&gt;HTML5 Canvas Tutorial for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;As a designer, this is one I am very excited about diving into.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-resources"&gt;
  &lt;/a&gt;
  React Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ihatetomatoes.net/wp-content/uploads/2017/01/react-cheat-sheet-v1.pdf"&gt;React Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Quick and easy to skim cheat sheet on common React patterns and pieces.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;&lt;a href="https://advancedreact.com"&gt;Fullstack Advanced  React &amp;amp; GraphQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Little pricer then Udemy, but no one teaches like Wes Bos. Hopefully will be able to purchase this one soon.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React Developer Tools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This lets you view props, components, renders and more right in Chrome DevTools&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react-icons.github.io/react-icons/"&gt;React Icons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of my favorite icon packages, because it has almost every major icon library out there.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/react-the-complete-guide-incl-redux/"&gt;React - The Complete Guide (incl Hooks, React Router, Redux)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of my favorite courses and has prepared me so much to code in React.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;81&lt;/td&gt;
&lt;td&gt;&lt;a href="https://daveceddia.com/usereducer-hook-examples/"&gt;Examples of the useReducer Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article / video breaks down a very cool hook lets you get a "Redux-like" store without downloading the library.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mdxjs.com/getting-started"&gt;MDX Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This syntax combines JSX and Markdown in one!&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactfordesigners.com"&gt;React For Designers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This features some great courses and beginner projects for getting started in React.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/react-bootstrap/react-router-bootstrap"&gt;React Router Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get the power of React Router navigation and the stylings of Bootstrap mixed into one.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nfl/react-helmet"&gt;React Helmet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I really want to learn this package. It lets you add SEO meta tags to different "React Pages"&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;td&gt;&lt;a href="https://web.dev/code-splitting-suspense/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Code splitting with React.lazy and Suspense&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This really works! After implementing on my website my performance scores improved.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react.rocks/tag/Validation"&gt;33 Validation Examples&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome collection of form validation and demo code for React.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.reddit.com/r/learnjavascript/comments/ifqa03/37_reactjs_basics_useref_hook/"&gt;37 ReactJS basics useRef Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful video on how to work with the React hook &lt;code&gt;useRef&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/react-validation"&gt;npm react-validation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Robust package to set up form validation. Need to dive deeper one day to learn all it can do.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/formsy/formsy-react/"&gt;Formsy React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This package lets you build custom forms and it takes care of the validation for you.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;91&lt;/td&gt;
&lt;td&gt;&lt;a href="//styled-components.com"&gt;Styled Componets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A favorite with React users, allowing you to create CSS focused custom components.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@ttennant/react-inline-styles-and-media-queries-using-a-custom-react-hook-e76fa9ec89f6"&gt;React inline styles and media queries using a custom React Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article helped me mimic responsive styling within the JSX environment.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react-bootstrap.github.io/getting-started/introduction/"&gt;React Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really good documentation on using bootstrap with React.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=3zoIigieur0"&gt;React Redux Using Hooks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Work with the modern Hook syntax for Redux. This saved me so much time!&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/37755997/why-cant-i-directly-modify-a-components-state-really"&gt;Why can't I directly modify a component's state, really?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This explains so well why you must use &lt;code&gt;setState&lt;/code&gt; for changing state in class components.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.bitsrc.io/react-communication-between-components-c0cfccfa996a"&gt;React: Communication Between Components&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great deep dive into how React components pass data to one another.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-identify-and-resolve-wasted-renders-in-react-cc4b1e910d10/"&gt;How to identify and resolve wasted renders in React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Performance is everything and this teaches how to work with renders correctly.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactjs.org/docs/components-and-props.html"&gt;Components and Props&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the core and most visited pages in the React Documentation for me.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@samueldinesh/setting-up-redux-devtools-a-simple-guide-3b386a6254fa"&gt;Setting Up Redux DevTools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Redux DevTools is not the most straightforward thing for me to set up, but this helped explain the process well.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.reddit.com/r/learnjavascript/comments/ipfikv/stuck_with_learning_react_redux_i_am_making_a/?utm_source=share&amp;amp;utm_medium=ios_app&amp;amp;utm_name=iossmf"&gt;React Redux Easy Peasy Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't watched this beginner course on Redux yet, but heard good things.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.gatsbyjs.org/"&gt;Gatsby JS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;So excited to work with this static site generator very soon.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/mern-stack-front-to-back/"&gt;MERN Stack Front To Back&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Purchased this course but have not taken it yet. Very excited to do so soon as it covers so much.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/react-native-the-practical-guide/"&gt;React Native The Practical Guide&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;In the middle of taking this now and love all the detail it goes into.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wordpress-resources"&gt;
  &lt;/a&gt;
  WordPress Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=-h7gOJbIpmo"&gt;How to Create a Custom WordPress Theme - Full Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wonderful introduction to custom theming in WordPress.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLC5E59DD6D84D34DC"&gt;WordPress Basics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;All the videos are very well broken out.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLriKzYyLb28nUFbe0Y9d-19uVkOnhYxFE"&gt;WordPress 101 for Beginner Developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great playlist on the basics of WordPress.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLriKzYyLb28kpEnFFi9_vJWPf5-_7d3rX"&gt;Create a Premium WordPress Theme&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't taken this one, but there are a lot of helpful video topics in this playlist.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLLnpHn493BHGACfv4rC29kJamYMtw34D9"&gt;Customizing WordPress&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really helpful playlist on advanced WordPress theme topics.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/wordpress-intermediate/"&gt;WordPress Intermediate Skills&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I like that this course covers working with a server as well.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OriRDlUbAFg"&gt;How to install WordPress on your local computer with MAMP (Mac)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This video taught me how to work with WordPress locally on my machine.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;&lt;a href="https://wphierarchy.com/"&gt;wphierarchy.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This website does a great job in explaining all the different file types in WordPress and their importance levels.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.wordpress.org/themes/basics/including-css-javascript/"&gt;Including CSS &amp;amp; JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Documentation on using CSS &amp;amp; JS in WordPress.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#git-amp-cli-resources"&gt;
  &lt;/a&gt;
  Git &amp;amp; CLI Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows"&gt;Comparing Git Workflows&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was so helpful in understanding there are different Git workflows for each team need.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;&lt;a href="https://commandlinepoweruser.com/"&gt;Command Line Power User&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to become a true terminal master with this course.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learngitbranching.js.org/"&gt;Learn Git Branching&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This interactive course was so helpful in understanding how branching worked.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=oFYyTZwMyAg"&gt;GITHUB PULL REQUEST, Branching, Merging &amp;amp; Team Workflow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great overview of how it looks to work with a team in a Git workflow.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;&lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Mastering Markdown&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a great resource for seeing common Markdown syntax and upgrading Git README&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-the-add-and-commit-commands-in-Git"&gt;Mastering Markdown&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Super helpful when I first started using Git for version control.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;119&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactsensei.com/basic-git-commands/"&gt;Basic Git Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great cheat sheet on common git commands.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;&lt;a href="https://guides.github.com/activities/hello-world/"&gt;GitHub Guide Hello World&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get started with Github with this very user friendly guide.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;&lt;a href="http://rogerdudler.github.io/git-guide/"&gt;Git Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very visual approach for common Git commands.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;122&lt;/td&gt;
&lt;td&gt;&lt;a href="https://shortcode.dev/git-cheatsheet#git-cheatsheet"&gt;Short Code Git Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Searchable cheatsheet&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/articles/command-line-commands"&gt;List of Command Line Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome list by Codecademy on many CLI terminal commands.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hosting-resources"&gt;
  &lt;/a&gt;
  Hosting Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;124&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.netlify.com/products/build/"&gt;Netlify Build&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome Netlify process to trigger builds to the live site once a specific branch is updated.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;125&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLzlG0L9jlhEPMR8haUPkxj2hJ_3jh5qa6"&gt;Netlify Tutorials&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free course to get up and running with Netlify hosting&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=6ElQ689HRcY"&gt;Simple Contact Form Submission With Netlify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Easy tutorial on how to set up Netlify as the mail server.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=6r9NJDHiJwA"&gt;PHPStorm FTP Server Connection to Remote Host &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Tutorial on how to connect with SFTP or FTP with PHPStorm. (It makes it a joy compared to VS Code)&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#optimization-resources"&gt;
  &lt;/a&gt;
  Optimization Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/front-end-web-optimization-workflow"&gt;Front End Web Optimization Workflow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to take this one and learn about CDNs and optimizing assets&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;td&gt;&lt;a href="https://yoast.com/rel-canonical/"&gt;&lt;code&gt;rel=canonical&lt;/code&gt;: the ultimate guide&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a good description of what Canonical urls are and where to use them.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;130&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading"&gt;MDN Lazy Loading&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great place to start to learn how Lazy loading works.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;td&gt;&lt;a href="https://hackernoon.com/seo-web-development-tutorial-for-beginners-7273308b6448"&gt;SEO Web Development Tutorial for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome intro for what SEO is and how to approach it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;&lt;a href="https://moz.com/learn/seo/page-speed"&gt;MOZ Page Speed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This shows a bunch of areas to check for poor page speeds.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;133&lt;/td&gt;
&lt;td&gt;&lt;a href="https://remysharp.com/2015/10/14/the-art-of-debugging"&gt;The Art of Debugging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fascinating deep dive on the process of debugging a website and tools to help.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#databases-resources"&gt;
  &lt;/a&gt;
  Databases Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;134&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/introduction-to-mongoose-for-mongodb-d2a7aa593c57"&gt;Introduction to Mongoose for MongoDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article thoroughly explains what MongoDB is and why it is essential to use Mongoose with it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;135&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@atingenkay/restful-routes-what-are-they-8fe221521bb"&gt;Restful Routes, What are they?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I did not fully understand RESTful API calls until reading this.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;136&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"&gt;HTTP response status codes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Code 418 is the best. ;)&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;137&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.passportjs.org/docs/"&gt;Passport&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great tool to use for full-stack user authentication&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#misc-web-dev-resources"&gt;
  &lt;/a&gt;
  MISC Web Dev Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;138&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OdQtww8ZfEw"&gt;Working with Code Written by Someone Else&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wonderful tips in how to explore a new codebase.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.tablesgenerator.com/markdown_tables"&gt;Markdown Table Generator&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is how I made the tables in this post ;)&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;&lt;a href="https://facebook.github.io/jest/"&gt;Jest&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the industry testing frameworks used for test driven development.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;141&lt;/td&gt;
&lt;td&gt;&lt;a href="https://get.foundation/emails.html"&gt;Foundation for Emails&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This framework makes it easy to code responsive HTML emails.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;142&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLR_ZJO3q73HalAe5sRs7ByjHvptmbflsL"&gt;Zurb Foundation for Email Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great course for the above email framework.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/dotenv"&gt;NPM dotenv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This package lets you secure sensitive information like API keys within projects.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;144&lt;/td&gt;
&lt;td&gt;&lt;a href="https://typing.io/"&gt;typing.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I used this before the bootcamp to practice typing code faster.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;145&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.google.com/maps/documentation/"&gt;Google Maps Platform Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Api documentation for using Google Maps in projects.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;146&lt;/td&gt;
&lt;td&gt;&lt;a href="https://auth0.com/blog/what-is-and-how-does-single-sign-on-work/"&gt;What Is and How Does Single Sign-On Authentication Work?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was so helpful in helping me understand at a high-level how SSO works&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;147&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.searchenginejournal.com/subdomains-vs-subfolders-seo/239795/#close"&gt;Subdomains vs. Subfolders: Which Is Better for SEO &amp;amp; Why?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very interesting article on how to structure loosely related web content.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;148&lt;/td&gt;
&lt;td&gt;&lt;a href="https://favicon.io/favicon-generator/"&gt;favicon.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is my favorite Favicon generator (small icon in browser tab) and has a great interface.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;149&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wesbos/eslint-config-wesbos"&gt;Wes Bos Eslint Config&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Download the settings that Wes Bos uses for linting his code.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.emmet.io/cheat-sheet/"&gt;Emmet Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Super helpful reference to common Emmet commands in multiple languages&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;151&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.jetbrains.com/phpstorm/documentation/"&gt;Learn Jetbrains PHPStorm IDE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This became my favorite IDE and love all their resources on how to use it correctly.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;152&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=yc3J2TGreBo"&gt;Agile Scrum Development Process and How UI/UX Design Fit In&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really good overview of how Agile workflows are set up.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#career-resources"&gt;
  &lt;/a&gt;
  Career Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@archie4321/the-golden-guide-to-landing-a-developer-position-c78ad34a965f"&gt;The Golden Guide to Landing a Developer Position&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An incredible guide on preparing hiring material like resumes to interviewing with examples.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;154&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.coursera.org/learn/learning-how-to-learn?action=enroll"&gt;Learn How To Learn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to take this one and learn how to be a better "learner".&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;155&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.glassdoor.com/blog/common-interview-questions/"&gt;Glassdoor Common Interview Questions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of 50 questions that can be asked in interviews&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;156&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.themuse.com/advice/how-to-tackle-something-you-have-no-idea-how-to-do"&gt;How to Tackle Something You Have No Idea How to Do&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of my favorite articles and I often refer back to it for motivation.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;157&lt;/td&gt;
&lt;td&gt;&lt;a href="https://coding-bootcamp-whiteboarding-algorithms.readthedocs-hosted.com/en/latest/modules/practicing-for-the-whiteboarding-interview/"&gt;Practice for the Whiteboarding Interview&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful links and guide to doing a Whiteboarding interview.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;158&lt;/td&gt;
&lt;td&gt;&lt;a href="https://m.youtube.com/watch?v=XKu_SEDAykw&amp;amp;feature=youtu.be"&gt;How to: Work at Google ‚Äî Example Coding/Engineering Interview&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very interesting to see the level of interviewing at Google.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;159&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.jobscan.co/"&gt;jobscan.co&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful site that optimizes cover letters and resumes.&lt;/td&gt;
&lt;td&gt;üß∞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#design-resources"&gt;
  &lt;/a&gt;
  Design Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/rapid-website-prototyping"&gt;Rapid Website Prototyping&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learning how to quickly mockup feature ideas and this covers many important areas of how to do it.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;161&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/tracks/ux-design"&gt;Tree House UX Design&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This course covers so many important UX subjects and how to think through design.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;162&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtube.com/playlist?list=PLXC_gcsKLD6n7p6tHPBxsKjN5hA_quaPI"&gt;Flux Free Web Design Course 2020&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the best free courses in the basics of Web Design.&lt;/td&gt;
&lt;td&gt;üéì&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;163&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=H18PvAKtkSY&amp;amp;list=PLxjRS2tWLJdE-FS4tpsfyjN3eF_XxkbAY&amp;amp;index=11"&gt;Build it in Figma: Design a responsive website&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This video goes deep into using auto layout in Figma.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;164&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=rfAdJYLRVqI&amp;amp;list=PLxjRS2tWLJdE-FS4tpsfyjN3eF_XxkbAY&amp;amp;index=9"&gt;In the file: A look into building selection colors and OpenType&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't seen this one yet, but can't wait to go through it.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;165&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=TkKm87Crfns"&gt;In the File: Making data-informed design decisions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a fascinating webinar on how big brands take data into account when creating designs or making changes.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;166&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=8RFDPC_Fsnc"&gt;In the File: Developer and designer, working together to build design systems&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another one I can't wait to watch. Truly effective teams have clear communication between design and development early in the process.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;167&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/WPRD8_L6hf0"&gt;Build it in Figma: Design a responsive website navigation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;There are many design tidbits and Figma tricks backed into this one.&lt;/td&gt;
&lt;td&gt;üßê&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to üîù&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nice-job-making-it-to-the-end"&gt;
  &lt;/a&gt;
  Nice job making it to the end!
&lt;/h3&gt;

&lt;p&gt;Here is a happy dance Gif to celebrate upgrading your sweet skills!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DTK4dbnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/CFSn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DTK4dbnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/CFSn.gif" alt="Napoleon Dynomite Happy Dance"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Thumbnail designed with &lt;a href="https://www.adobe.com/"&gt;photoshop&lt;/a&gt; and &lt;a href="https://unsplash.com/photos/w7ZyuGYNpRQ"&gt;unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>6 Python Tips &amp; Tricks that no One Teaches üöÄüêç</title>
      <author>Daniel Diaz</author>
      <pubDate>Mon, 26 Apr 2021 12:46:00 +0000</pubDate>
      <link>https://dev.to/worldindev/6-python-tips-tricks-that-no-one-teaches-4j73</link>
      <guid>https://dev.to/worldindev/6-python-tips-tricks-that-no-one-teaches-4j73</guid>
      <description>&lt;p&gt;Python is currently the most used programming language in the world, and the unique reason is that Python developers are happy building software with it.&lt;/p&gt;

&lt;p&gt;Its easy syntax, an extensive amount of libraries, and fast learning curve have gained the hearth of both beginners and experienced developers.&lt;/p&gt;

&lt;p&gt;So today I'll share 6 of the best Python tricks that are not usually taught. üòÉ&lt;/p&gt;

&lt;p&gt;All the examples are on this &lt;a href="https://worldindev.ck.page"&gt;Github repo&lt;/a&gt;, available after subscribing, so be sure to take a look at them.&lt;/p&gt;

&lt;p&gt;--&amp;gt; Access and Download the source code of this article &lt;a href="https://worldindev.ck.page"&gt;here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;¬†&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  üéâ Giveaway ‚ö°
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
To enter you have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;üëç React to this post&lt;/li&gt;
&lt;li&gt;‚úâÔ∏è Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; &amp;lt;-- Very important&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¬†&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#select-a-random-element-from-a-sequence"&gt;
  &lt;/a&gt;
  Select a random element from a sequence
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;random&lt;/code&gt; package from the standard library has a lot of useful functions. But &lt;code&gt;random.choice(seq)&lt;/code&gt; is a particularly useful one.&lt;/p&gt;

&lt;p&gt;It allows you to pick a random element from an indexable sequence, for example, &lt;code&gt;lists&lt;/code&gt;, &lt;code&gt;tuples&lt;/code&gt;, or even &lt;code&gt;strings&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"go"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Random item
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#practical-example"&gt;
  &lt;/a&gt;
  Practical example
&lt;/h3&gt;

&lt;p&gt;A book picker function that receives a sequence of books gets a random choice, removes the item from the list, and returns the choice as a string&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# We import only the function we need
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;book_picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;book_choice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"You picked &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;book_choice&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="n"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Harry potter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Don Quixote"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Learn Python by Daniel Diaz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Dracula"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Random choice
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;books&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Remaining books
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#limitations-and-exceptions"&gt;
  &lt;/a&gt;
  Limitations and Exceptions
&lt;/h3&gt;

&lt;p&gt;If you try to use &lt;code&gt;random.choice(seq)&lt;/code&gt; in a non-indexable sequence, for example, &lt;code&gt;dictionaries&lt;/code&gt;, &lt;code&gt;sets&lt;/code&gt;, and &lt;code&gt;numeric types&lt;/code&gt;, Python will raise an Error.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# With Dictionary
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
&lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Jhon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Ben"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Diana"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_scores&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Key error
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Also if the sequence is empty Python will raise an &lt;code&gt;IndexError&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# With an empty sequence
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
&lt;span class="n"&gt;empty_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;empty_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Index error
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#unpacking-elements-with-raw-endraw-"&gt;
  &lt;/a&gt;
  Unpacking elements with &lt;code&gt;*&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Sometimes we need to print the elements of an iterable separated by a space, and the most common solution I've seen is&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 1 2 3 5 7 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Although this solves the problem, the code isn't that &lt;strong&gt;pythonic&lt;/strong&gt;. There is a simpler solution using the unpacking operator "*"&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;my_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;mylist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# 1 2 3 5 7 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;As you can see the unpack operator is always set at the left of an iterable, and it tells Python:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Assign each element from this iterable to the desired tuple or list &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Remember that an iterable is any sequence we can iterate over with a for loop. If you want to check if a data type is iterable, use the &lt;code&gt;iter()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is a string"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Str Iterable object
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"this"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="c1"&gt;# List iterable object
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# Raises an error
# Integers can't be iterated
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#using-unpacking-with-variables"&gt;
  &lt;/a&gt;
  Using unpacking with variables
&lt;/h3&gt;

&lt;p&gt;Probably after you know the power of the unpacking operator, you would like to use it to store data in variables. So let's see how to do it&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Let's learn Python"&lt;/span&gt;

&lt;span class="c1"&gt;# We want to assign the unpacked result in var1
&lt;/span&gt;&lt;span class="n"&gt;var1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# ['L', 'e', 't', "'", 's', ' ', 'l', 'e', 'a', 'r', 'n', ' ', 'P', 'y', 't', 'h', 'o', 'n']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;[*iterable]&lt;/code&gt; part may look confusing so let me explain it. &lt;/p&gt;

&lt;p&gt;When we unpack an iterable python needs some data structure to store each element of that iterable, therefore we are creating a list (&lt;code&gt;[]&lt;/code&gt;) outside the &lt;code&gt;*&lt;/code&gt; operator.&lt;/p&gt;

&lt;p&gt;If we try to get the type of a variable resulting from the &lt;code&gt;*&lt;/code&gt; operator we get&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;another_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The * operator"&lt;/span&gt;

&lt;span class="c1"&gt;# Using a list outside the unpacking
&lt;/span&gt;&lt;span class="n"&gt;var2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;another_str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# List
&lt;/span&gt;
&lt;span class="c1"&gt;# Using a tuple
# Tuples ends with a comma
&lt;/span&gt;&lt;span class="n"&gt;var3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;another_str&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;# Tuple
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Of course, if you try to unpack without a list or tuple outside, you'll get a &lt;code&gt;SyntaxError&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;bad_variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="s"&gt;"Bad String"&lt;/span&gt;
&lt;span class="c1"&gt;# Syntax error
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Unpacking has much more uses, and I could do an exclusive article about it. üòÄ&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-raw-set-endraw-to-optimize-operations"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;set&lt;/code&gt; to optimize operations
&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href="https://docs.python.org/3/library/functions.html#func-set"&gt;python documentation&lt;/a&gt;, the &lt;code&gt;set(iterable)&lt;/code&gt; class creates a set object from an iterable.&lt;/p&gt;

&lt;p&gt;As some of you may know a set is an unordered data structure, (therefore non-indexable) and one of its characteristics is that doesn't allow duplicated items.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#practical-example"&gt;
  &lt;/a&gt;
  Practical example
&lt;/h3&gt;

&lt;p&gt;Function that removes duplicates, and returns a sorted list.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;eliminate_duplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""
    Returns a sorted list, without duplicates
    """&lt;/span&gt; 
    &lt;span class="n"&gt;new_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 

    &lt;span class="n"&gt;new_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_list&lt;/span&gt;

&lt;span class="n"&gt;list1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;eliminate_duplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#view-attrs-and-methods-of-a-class-without-exiting-the-editor"&gt;
  &lt;/a&gt;
  View attrs and methods of a class without exiting the editor
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;dir()&lt;/code&gt; function returns the attributes and methods of a class. We can use this useful trick to list all the definitions inside a class type.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; 
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"A string"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# ['__add__', .....,'upper', 'zfill']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For example, if we were looking for a string method that will convert our string into uppercase, and we are just too lazy to open the browser, we just run the &lt;code&gt;dir&lt;/code&gt; function with a string as an argument and search for the right method&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#practical-example"&gt;
  &lt;/a&gt;
  Practical example
&lt;/h3&gt;

&lt;p&gt;The best approach we can get from &lt;code&gt;dir&lt;/code&gt; is when using 3rd party packages, we can get all the info we need from a class without exiting the terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;


&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# ['__class__', '__delattr__', .... 'setup']
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#slices-operations"&gt;
  &lt;/a&gt;
  Slices Operations
&lt;/h2&gt;

&lt;p&gt;A slice is nothing but a way of accessing certain parts of a sequence. In python, slices allow us to do multiple tricks.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#reversing-sequences"&gt;
  &lt;/a&gt;
  Reversing sequences
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Reversing lists
&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Fun"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"is"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Programming"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# ['Programming', 'is', 'Fun']
&lt;/span&gt;
&lt;span class="c1"&gt;# Reversing strings
&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Dog running on the park"&lt;/span&gt;

&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# krap eht no gninnur goD
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#practical-example"&gt;
  &lt;/a&gt;
  Practical example
&lt;/h2&gt;

&lt;p&gt;Function that returns a sequence until the given index&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cutoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Sorry the index is bigger than the sequence"&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"This is a long description of a blog post about Python and technology"&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cutoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# This is a long 
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cutoff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# Sorry the index is bigger than the sequence
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#call-a-debugger-in-10-letters"&gt;
  &lt;/a&gt;
  Call a debugger in 10 letters
&lt;/h2&gt;

&lt;p&gt;The function &lt;code&gt;breakpoint&lt;/code&gt; is available from python 3.6+. This will call a session of &lt;code&gt;pdb.set_trace()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It may sound like a pure convenience (And maybe it does) but for me is a really short and elegant way of calling a debugger&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;n_odds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Check for the value of i in each iteration
&lt;/span&gt;    &lt;span class="n"&gt;breakpoint&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# Bad condition
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;n_odds&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_odds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miUiHVJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dx7ddspcdj2d16g6mpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miUiHVJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dx7ddspcdj2d16g6mpu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, you learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To choose a random element from a sequence&lt;/li&gt;
&lt;li&gt;To unpack elements with  &lt;code&gt;*&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;The ability of sets to deleting duplicates efficiently&lt;/li&gt;
&lt;li&gt;How to search for methods and variables without exiting the code editor&lt;/li&gt;
&lt;li&gt;The diverse uses of python slices&lt;/li&gt;
&lt;li&gt;How to call a debugger with the function &lt;code&gt;breakpoint&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Please consider supporting me on &lt;a href="https://ko-fi.com/daniel1404"&gt;Ko-fi&lt;/a&gt;. You would help me to continue building these tutorials!.&lt;br&gt;
&lt;a href="https://ko-fi.com/Y8Y03P8P1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FKanlt08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ko-fi.com/img/githubbutton_sm.svg" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have any feedback please, let me know in the comments!&lt;/p&gt;



&lt;p&gt;Read also:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xnkyVuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0F4scheH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/60416eff-f1ff-4a29-a5c9-2a13df7845c8.jpeg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/worldindev/5-css-tricks-tips-that-you-should-know-giveaway-4d0d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 CSS Tricks &amp;amp; Tips That You Should Know üöÄ + Giveaway &lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani „Éª Apr 20 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xnkyVuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0F4scheH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/60416eff-f1ff-4a29-a5c9-2a13df7845c8.jpeg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/worldindev/8-javascript-tips-tricks-that-no-one-teaches-24g1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches üöÄ + Giveaway&lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani „Éª Apr  6 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is VS Code Johnny‚ùì ü§î</title>
      <author>Daniel Krupnyy</author>
      <pubDate>Mon, 26 Apr 2021 12:41:01 +0000</pubDate>
      <link>https://dev.to/danielkrupnyy/what-is-vs-code-johnny-41p0</link>
      <guid>https://dev.to/danielkrupnyy/what-is-vs-code-johnny-41p0</guid>
      <description>&lt;p&gt;Hello comrades! üëã&lt;/p&gt;

&lt;p&gt;I decided to show off. And I'll show you my VS Code setup. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/R2tImHqP1t5AzFBuzH/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/R2tImHqP1t5AzFBuzH/giphy.gif" alt="img"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#first-of-all-the-theme"&gt;
  &lt;/a&gt;
  First of all the theme
&lt;/h1&gt;

&lt;p&gt;I have been using the &lt;a href="https://marketplace.visualstudio.com/items?itemName=morgan-codes.morgan-codes-vscode-theme"&gt;morgan.codes&lt;/a&gt; theme for a long time. But recently I changed it. I've always liked green and found my favorite in this style - &lt;a href="https://marketplace.visualstudio.com/items?itemName=eckertalex.borealis"&gt;Borealis Theme&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEAqM70C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619281730/notepadnowastoreapp_j4ipxa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEAqM70C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619281730/notepadnowastoreapp_j4ipxa.jpg" alt="my theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also I prefer to use &lt;a href="https://marketplace.visualstudio.com/items?itemName=jaredkent.laserwave"&gt;LaserWave&lt;/a&gt; and &lt;a href="https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2"&gt;Cobalt2&lt;/a&gt; and &lt;a href="https://marketplace.visualstudio.com/items?itemName=Yummygum.city-lights-theme"&gt;City Lights&lt;/a&gt; themes.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icons-are-also-important"&gt;
  &lt;/a&gt;
  Icons are also important
&lt;/h1&gt;

&lt;p&gt;Favorite the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons"&gt;Material Icons&lt;/a&gt; of course:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FLr7I4GK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619283393/16_Notepad_1_ettwbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FLr7I4GK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619283393/16_Notepad_1_ettwbs.png" alt="my icons"&gt;&lt;/a&gt;&lt;br&gt;
And &lt;a href="https://marketplace.visualstudio.com/items?itemName=Yummygum.city-lights-icon-vsc"&gt;City Lights icons&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#font"&gt;
  &lt;/a&gt;
  Font
&lt;/h1&gt;

&lt;p&gt;Top 3: &lt;a href="https://www.nerdfonts.com/font-downloads"&gt;Agave Nerd Font&lt;/a&gt;, &lt;a href="https://github.com/tonsky/FiraCode"&gt;Fira Code&lt;/a&gt;, &lt;a href="https://rubjo.github.io/victor-mono/"&gt;Operator Mono&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UUHA0_11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619283820/customize-notepad_yj7ov2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UUHA0_11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/danilnotorious/image/upload/v1619283820/customize-notepad_yj7ov2.png" alt="my fonts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#extensions-maybe"&gt;
  &lt;/a&gt;
  Extensions maybe
&lt;/h1&gt;

&lt;p&gt;Nothing special. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/baPIkfAo0Iv5K/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/baPIkfAo0Iv5K/giphy.gif" alt="extensions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Except: &lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager"&gt;Project manager&lt;/a&gt;, &lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.disableligatures"&gt;Disable Ligatures&lt;/a&gt;, &lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost"&gt;Import Cost&lt;/a&gt;, &lt;a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced"&gt;Markdown Preview Enhanced&lt;/a&gt;, &lt;a href="https://marketplace.visualstudio.com/items?itemName=slevesque.vscode-multiclip"&gt;Multiple clipboards&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;So, what does your VS Code setup look like? üßê&lt;br&gt;
Drop it in the comments üëá&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>QRcode maker in Python</title>
      <author>Aditya Kumar</author>
      <pubDate>Mon, 26 Apr 2021 12:38:52 +0000</pubDate>
      <link>https://dev.to/aditya57/qrcode-maker-in-python-3al9</link>
      <guid>https://dev.to/aditya57/qrcode-maker-in-python-3al9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#qrcode-maker-in-python"&gt;
  &lt;/a&gt;
  Qrcode maker in Python
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  -----------------------
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#requirement"&gt;
  &lt;/a&gt;
  *Requirement
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Python (3.9.4)&lt;/li&gt;
&lt;li&gt;Python modules

&lt;ul&gt;
&lt;li&gt;PyQRCode&lt;/li&gt;
&lt;li&gt;pypng&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h4&gt;
  &lt;a href="#whats-qrcode"&gt;
  &lt;/a&gt;
  *What's Qrcode
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#qrcode-a-qr-code-is-a-type-of-matrix-barcode-invented-in-1994-by-the-japanese-automotive-company-denso-wave-a-barcode-is-a-machinereadable-optical-label-that-contains-information-about-the-item-to-which-it-is-attached"&gt;
  &lt;/a&gt;
  Qrcode: A QR code is a type of matrix barcode invented in 1994 by the Japanese automotive company Denso Wave. A barcode is a machine-readable optical label that contains information about the item to which it is attached.
&lt;/h5&gt;




&lt;h4&gt;
  &lt;a href="#install-modules"&gt;
  &lt;/a&gt;
  *Install modules
&lt;/h4&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pyqrcode"&gt;
  &lt;/a&gt;
  PyQRCode
&lt;/h5&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows:
&lt;/h5&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install PyQRCode
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#mac"&gt;
  &lt;/a&gt;
  Mac:
&lt;/h5&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m pip install PyQRCode
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux:
&lt;/h5&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m pip install PyQRCode
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pypng"&gt;
  &lt;/a&gt;
  pypng
&lt;/h5&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows:
&lt;/h5&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install pypng
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#mac"&gt;
  &lt;/a&gt;
  Mac:
&lt;/h5&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m pip install pypng
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h5&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux:
&lt;/h5&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 -m pip install pypng
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h4&gt;
  &lt;a href="#lets-start-coding"&gt;
  &lt;/a&gt;
  *Let's start coding!
&lt;/h4&gt;

&lt;p&gt;¬†&lt;br&gt;
import modules:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pyqrcode
from pyqrcode import QRCode
import png
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now little code:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;info = input("Info: ")
qr = pyqrcode.create(info)
qr.png('Qr.png', scale = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h4&gt;
  &lt;a href="#tryit"&gt;
  &lt;/a&gt;
  *Tryit
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zOWa7f9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsc31ofu56u78rh62ort.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOWa7f9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsc31ofu56u78rh62ort.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h5&gt;

&lt;p&gt;Scan it and tell me in Discussion:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzcDgqex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zhnw9rfb643tng6ipl5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzcDgqex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zhnw9rfb643tng6ipl5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--stXrdmfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56gj3xr7amtp9x1euoux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--stXrdmfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/56gj3xr7amtp9x1euoux.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks
&lt;/h2&gt;

</description>
      <category>python</category>
      <category>qrcode</category>
      <category>pyqrcode</category>
    </item>
    <item>
      <title>LINUX KERNEL: Researchers from University of Minnesota had no bad intentions- lift ban</title>
      <author>manish srivastava</author>
      <pubDate>Mon, 26 Apr 2021 12:22:39 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/linux-kernel-researchers-from-university-of-minnesota-had-no-bad-intentions-uplift-ban-433e</link>
      <guid>https://dev.to/manishfoodtechs/linux-kernel-researchers-from-university-of-minnesota-had-no-bad-intentions-uplift-ban-433e</guid>
      <description>&lt;p&gt;The University of Minnesota has been banned from contributing to the Linux kernel by one of its maintainers after researchers from the school apparently knowingly submitted code with security flaws.&lt;/p&gt;

&lt;p&gt;This is my personal view after reading their open letter to Linux kernel community. I believe Linux kernel community can look into this matter with a warning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Matter:&lt;/strong&gt;&lt;br&gt;
Earlier this year, two researchers from the university released a paper detailing how they had submitted known security vulnerabilities to the Linux kernel in order to show how potentially malicious code could get through the approval process. &lt;br&gt;
Link of paper: &lt;a href="https://github.com/QiushiWu/QiushiWu.github.io/blob/main/papers/OpenSourceInsecurity.pdf"&gt;https://github.com/QiushiWu/QiushiWu.github.io/blob/main/papers/OpenSourceInsecurity.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, after another student from the university submitted code that reportedly does nothing, kernel maintainer and Linux Foundation fellow Greg Kroah-Hartman has released a statement calling for all kernel maintainers to reject any code submissions from anyone using a umn.edu email address.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;I have been meaning to do this for a while, but recent events have
finally forced me to do so.

Commits from @umn.edu addresses have been found to be submitted in "bad
faith" to try to test the kernel community's ability to review "known
malicious" changes.  The result of these submissions can be found in a
paper published at the 42nd IEEE Symposium on Security and Privacy
entitled, "Open Source Insecurity: Stealthily Introducing
Vulnerabilities via Hypocrite Commits" written by Qiushi Wu (University
of Minnesota) and Kangjie Lu (University of Minnesota).

[....]

but they should be aware that future submissions from anyone
with a umn.edu address should be by default-rejected unless otherwise
determined to actually be a valid fix (i.e. they provide proof and you
can verify it, but really, why waste your time doing that extra work?)

thanks,

greg k-h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read full mail here:&lt;br&gt;
&lt;a href="https://lore.kernel.org/lkml/20210421130105.1226686-1-gregkh@linuxfoundation.org/"&gt;https://lore.kernel.org/lkml/20210421130105.1226686-1-gregkh@linuxfoundation.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a statement meant to clarify the study, the researchers said they intended to bring attention to issues with the submission process ‚Äî mainly, the fact that bugs, including ones that were potentially maliciously crafted, could slip through. Kernel developer Laura Abbot countered this in a blog post, saying that the possibility of bugs slipping through is well-known in the open-source software community. In what appears to be a private message, the person who submitted the reportedly nonfunctional code called Kroah-Hartman‚Äôs accusations that the code was known to be invalid ‚Äúwild‚Äù and ‚Äúbordering on slander.‚Äù&lt;/p&gt;

&lt;p&gt;It‚Äôs unclear if that submission ‚Äî which kicked off the current controversy ‚Äî was actually part of a research project. The person who submitted it did so with their umn.edu email address, while the patches submitted in the study were done through random Gmail addresses, and the submitter claimed that the faulty code was created by a tool. Kroah-Hartman‚Äôs response basically said that he found it unlikely that a tool had created the code, and, given the research, he couldn‚Äôt trust that the patch was made in good faith either way.&lt;/p&gt;

&lt;p&gt;The university open letter to community:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;April 24, 2021
An open letter to the Linux community

Dear Community Members:

We sincerely apologize for any harm our research group did to the
Linux kernel community. Our goal was to identify issues with the
patching process and ways to address them, and we are very sorry that
the method used in the ‚Äúhypocrite commits‚Äù paper was inappropriate. As
many observers have pointed out to us, we made a mistake by not
finding a way to consult with the community and obtain permission
before running this study; we did that because we knew we could not
ask the maintainers of Linux for permission, or they would be on the
lookout for the hypocrite patches. While our goal was to improve the
security of Linux, we now understand that it was hurtful to the
community to make it a subject of our research, and to waste its
effort reviewing these patches without its knowledge or permission.

We just want you to know that we would never intentionally hurt the
Linux kernel community and never introduce security vulnerabilities.
Our work was conducted with the best of intentions and is all about
finding and fixing security vulnerabilities.

The ‚Äúhypocrite commits‚Äù work was carried out in August 2020; it aimed
to improve the security of the patching process in Linux. As part of
the project, we studied potential issues with the patching process of
Linux, including causes of the issues and suggestions for addressing
them.
* This work did not introduce vulnerabilities into the Linux code. The
three incorrect patches were discussed and stopped during exchanges in
a Linux message board, and never committed to the code. We reported
the findings and our conclusions (excluding the incorrect patches) of
the work to the Linux community before paper submission, collected
their feedback, and included them in the paper.
* All the other 190 patches being reverted and re-evaluated were
submitted as part of other projects and as a service to the community;
they are not related to the ‚Äúhypocrite commits‚Äù paper.
* These 190 patches were in response to real bugs in the code and all
correct--as far as we can discern--when we submitted them.
* We understand the desire of the community to gain access to and
examine the three incorrect patches. Doing so would reveal the
identity of members of the community who responded to these patches on
the message board. Therefore, we are working to obtain their consent
before revealing these patches.
* Our recent patches in April 2021 are not part of the ‚Äúhypocrite
commits‚Äù paper either. We had been conducting a new project that aims
to automatically identify bugs introduced by other patches (not from
us). Our patches were prepared and submitted to fix the identified
bugs to follow the rules of Responsible Disclosure, and we are happy
to share details of this newer project with the Linux community.

We are a research group whose members devote their careers to
improving the Linux kernel. We have been working on finding and
patching vulnerabilities in Linux for the past five years. The past
observations with the patching process had motivated us to also study
and address issues with the patching process itself. This current
incident has caused a great deal of anger in the Linux community
toward us, the research group, and the University of Minnesota. We
apologize unconditionally for what we now recognize was a breach of
the shared trust in the open source community and seek forgiveness for
our missteps.

We seek to rebuild the relationship with the Linux Foundation and the
Linux community from a place of humility to create a foundation from
which, we hope, we can once again contribute to our shared goal of
improving the quality and security of Linux software. We will work
with our department as they develop new training and support for
faculty and students seeking to conduct research on open source
projects, peer-production sites, and other online communities.  We are
committed to following best practices for collaborative research by
consulting with community leaders and members about the nature of our
research projects, and ensuring that our work meets not only the
requirements of the IRB but also the expectations that the community
has articulated to us in the wake of this incident.

While this issue has been painful for us as well, and we are genuinely
sorry for the extra work that the Linux kernel community has
undertaken, we have learned some important lessons about research with
the open source community from this incident. We can and will do
better, and we believe we have much to contribute in the future, and
will work hard to regain your trust.


Sincerely,


Kangjie Lu, Qiushi Wu, and Aditya Pakki
University of Minnesota
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Link:&lt;br&gt;
&lt;a href="https://lore.kernel.org/lkml/CAK8KejpUVLxmqp026JY7x5GzHU2YJLPU8SzTZUNXU2OXC70ZQQ@mail.gmail.com/"&gt;https://lore.kernel.org/lkml/CAK8KejpUVLxmqp026JY7x5GzHU2YJLPU8SzTZUNXU2OXC70ZQQ@mail.gmail.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.google.com/amp/s/www.theverge.com/platform/amp/2021/4/22/22398156/university-minnesota-linux-kernal-ban-research"&gt;https://www.google.com/amp/s/www.theverge.com/platform/amp/2021/4/22/22398156/university-minnesota-linux-kernal-ban-research&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>devops</category>
      <category>opensource</category>
      <category>news</category>
    </item>
    <item>
      <title>JS interview in 2 minutes / Higher Order Functions</title>
      <author>Nikita Kozlov</author>
      <pubDate>Mon, 26 Apr 2021 10:52:48 +0000</pubDate>
      <link>https://dev.to/kozlovzxc/js-interview-in-2-minutes-higher-order-functions-38kb</link>
      <guid>https://dev.to/kozlovzxc/js-interview-in-2-minutes-higher-order-functions-38kb</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;br&gt;
Explain Higher Order Functions in javascript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick answer:&lt;/strong&gt;&lt;br&gt;
These are functions that return other functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Longer answer:&lt;/strong&gt;&lt;br&gt;
In JavaScript, you can return objects of any type as a result of the function. This means you can create a function that will return a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;higherFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;regularFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;higherFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// won't print anything&lt;/span&gt;
&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Hello world!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also try to create even more nested functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Hello world!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can pass functions to a function that will execute functions in some specific order.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
    &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Got&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Got 22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And more other fun ways to use functions ü§™&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real-life example:&lt;/strong&gt;&lt;br&gt;
Some frameworks (&lt;a href="https://angular.io/api/core/Component"&gt;angular&lt;/a&gt;) and libraries (&lt;a href="https://mobx.js.org/enabling-decorators.html#enabling-decorators-"&gt;MobX&lt;/a&gt;) heavily rely on decorators, but decorators are no more than Higher Order Functions themselves.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;logDecorator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Invoked &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; with args &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Do nothing, but just show param:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wrappedTmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;logDecorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;wrappedTmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Invoked tmp with args Hello world!&lt;/span&gt;
&lt;span class="c1"&gt;// Do nothing, but just show param: Hello world!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some other libraries (&lt;a href="https://rxjs.dev/"&gt;RxJs&lt;/a&gt;) may use it as configurable helpers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// These functions can by provided by a library itself&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removePunctuation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;0-9a-zA-Z &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// pipe is a Higher Order Function that returns a function, which will apply all functions one by one&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;removePunctuation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;qwe-qwe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// QWEQWE HELLO WORLD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Older posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-value-vs-reference-5a8k"&gt;JS interview in 2 minutes / value vs reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-vs-1f58"&gt;JS interview in 2 minutes / == vs ===&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Btw, I will post more fun stuff here and on &lt;a href="https://twitter.com/kozlovzxc"&gt;Twitter&lt;/a&gt;. Let's be friends üëã&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Convolution in 1 dimension</title>
      <author>Ambarish Ganguly</author>
      <pubDate>Mon, 26 Apr 2021 10:48:58 +0000</pubDate>
      <link>https://dev.to/ambarishg/convolution-in-1-dimension-42l9</link>
      <guid>https://dev.to/ambarishg/convolution-in-1-dimension-42l9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#basics"&gt;
  &lt;/a&gt;
  Basics
&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;Convolutional&lt;/strong&gt; block is one of the basic building blocks used in deep learning. We go in-depth with Convolution in 1 dimension and understand the basics of convolution, strides, and padding. We explain visually and also through PyTorch code to verify our concepts.   &lt;/p&gt;

&lt;p&gt;The Kernel takes an Input and provides an output which is sometimes referred to as  a &lt;code&gt;feature map&lt;/code&gt;   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wHnbjtPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cao5kxt96zowgh1kjwn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wHnbjtPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cao5kxt96zowgh1kjwn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Kernel is made up of many things . This is a very simplified picture of the things it has . The weights , biases , strides and padding are some of them   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qKIGMPwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awd103mfeb2bxq02vcxx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qKIGMPwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awd103mfeb2bxq02vcxx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#kernel-size-1-stride-1"&gt;
  &lt;/a&gt;
  Kernel Size =  1 , Stride = 1
&lt;/h1&gt;

&lt;p&gt;Here the size of the kernel is 1. It has a single weight and bias.               &lt;/p&gt;

&lt;p&gt;Input is [ 2, 3, 4 ]    &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Stride is 1&lt;/code&gt;, therefore the kernel moves 1 slot after every operation.&lt;/p&gt;

&lt;p&gt;Outputs are    &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;2 * weight +  bias
&lt;/li&gt;
&lt;li&gt;3 * weight +  bias . The kernel moves 1 slot and operates on 3
&lt;/li&gt;
&lt;li&gt;4 * weight +  bias. The kernel moves 1 slot and operates on 4
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NghN0Iho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ryyg64gs3ho46f7gggg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NghN0Iho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ryyg64gs3ho46f7gggg.png" alt="image"&gt;&lt;/a&gt;    &lt;/p&gt;

&lt;p&gt;We implemented this in Pytorch and obtained the same result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conv1d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

&lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tensor&lt;/span&gt;&lt;span class="p"&gt;([[[&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;3.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;4.&lt;/span&gt;&lt;span class="p"&gt;,]]])&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#kernel-size-2-stride-1"&gt;
  &lt;/a&gt;
  Kernel Size =  2 , Stride = 1
&lt;/h1&gt;

&lt;p&gt;Here the size of the kernel is 2. It has &lt;strong&gt;2 weights&lt;/strong&gt; and bias.   &lt;/p&gt;

&lt;p&gt;Input is [ 2, 3, 4 ]&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 1&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The weights w0 and w1 operate on inputs 2, 3. This provides the output 2 * w0 + 3 * w1 +  bias           &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 2&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The weights w0 and w1 operate on inputs 3, 4. This provides the output 3 * w0 + 4 * w1 +  bias   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOjt_sPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cidd5y3rkwa29c710myt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOjt_sPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cidd5y3rkwa29c710myt.png" alt="image"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;p&gt;We implemented this in Pytorch and obtained the same result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conv1d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt;

&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; 
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; 

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#kernel-size-2-stride-2"&gt;
  &lt;/a&gt;
  Kernel Size =  2 , Stride = 2
&lt;/h1&gt;

&lt;p&gt;Here the size of the kernel is 2. It has &lt;strong&gt;2 weights&lt;/strong&gt; and bias.   &lt;/p&gt;

&lt;p&gt;Input is [ 2, 3, 4 ]&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 1&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The weights w0 and w1 operate on inputs 2, 3. This provides the output 2 * w0 + 3 * w1 +  bias           &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 2&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The kernel moves &lt;strong&gt;2&lt;/strong&gt; slots. Therefore, the kernel cannot operate on 4.    &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D8S2O8wT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fxf50byzy2ujynf59fo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D8S2O8wT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fxf50byzy2ujynf59fo.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conv1d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt;

&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; 

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#kernel-size-2-stride-2-padding-1"&gt;
  &lt;/a&gt;
  Kernel Size =  2 , Stride = 2 , Padding = 1
&lt;/h1&gt;

&lt;p&gt;Here the size of the kernel is 2. It has &lt;strong&gt;2 weights&lt;/strong&gt; and bias.&lt;/p&gt;

&lt;p&gt;With padding = 1, the kernel has zeros on both sides of the input as you can see in the figure  &lt;/p&gt;

&lt;p&gt;Input is [ 2, 3, 4 ]&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 1&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The weights w0 and w1 operate on inputs 0, 2. This provides the output 0 * w0 + 2 * w1 +  bias           &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Step 2&lt;/code&gt;:&lt;br&gt;&lt;br&gt;
The kernel moves &lt;strong&gt;2&lt;/strong&gt; slots. &lt;br&gt;
The weights w0 and w1 operate on inputs 3, 4. This provides the output 3 * w0 + 4 * w1 +  bias &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VAYqVwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkejb1yjvag15mknnio4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VAYqVwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkejb1yjvag15mknnio4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Conv1d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;out_channels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bias&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#kaggle-notebook-link"&gt;
  &lt;/a&gt;
  Kaggle notebook link
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.kaggle.com/ambarish/conv1d-deep-dive"&gt;Convolution in 1 dimension deep dive&lt;/a&gt;&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>pytorch</category>
    </item>
    <item>
      <title>A painless guide to understanding CSS positioning</title>
      <author>Peter</author>
      <pubDate>Mon, 26 Apr 2021 10:30:25 +0000</pubDate>
      <link>https://dev.to/peterlunch/a-painless-guide-to-understanding-css-positioning-2nbh</link>
      <guid>https://dev.to/peterlunch/a-painless-guide-to-understanding-css-positioning-2nbh</guid>
      <description>&lt;p&gt;Developing an understanding of the CSS position property is important if you want to become really good at CSS. However, it can be one of the more frustrating experiences for a beginner.&lt;/p&gt;

&lt;p&gt;In building my &lt;a href="https://www.peterlynch.dev/"&gt;Developer portfolio&lt;/a&gt; I found I didn‚Äôt really understand the CSS position property, I just randomly tried different combinations of positions together until I got something I was kind of happy with. But, most of the time it was just garbage and it had me pulling what little hair I have left out.&lt;/p&gt;

&lt;p&gt;In this article, I am going to try and save you the pain of not knowing what you are doing with the position property. You are going to learn how each of the values of the CSS position properties work, so you can get really good at CSS.&lt;/p&gt;

&lt;p&gt;To understand the position property and the values associated we first need to make sure we understand how elements are positioned on a webpage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flow-layout"&gt;
  &lt;/a&gt;
  Flow Layout
&lt;/h2&gt;

&lt;p&gt;The way elements are positioned on a page is called the normal flow, or flow layout. It is the way elements are displayed on a page by default. Basically the flow is the set of all elements on your page working together and each one knows about all the others.&lt;/p&gt;

&lt;p&gt;Now, CSS treats each HTML element as its own box, you might have heard of this referred to as the box model. Block-level items (things like headings, paragraphs or divs) by default start on a new line while inline items (images or spans) sit within the surrounding content on the same line. The default layout of elements in this way is called the normal flow of a document, but CSS offers us a powerful tool in the position property to override the normal flow.&lt;/p&gt;

&lt;p&gt;Let's see what the position property does.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#position-property"&gt;
  &lt;/a&gt;
  Position Property
&lt;/h2&gt;

&lt;p&gt;The CSS position property sets how an element is positioned in a document. We can use it to determine how we want to position individual elements based on the values you give the position property.&lt;/p&gt;

&lt;p&gt;The position property takes five values.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Static
2. Relative
3. Absolute
4. Fixed
5. Sticky
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We are going to cover all 5 of these values, but before we do we need to understand the placement properties and how they affect positioning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#placement-properties"&gt;
  &lt;/a&gt;
  Placement Properties
&lt;/h2&gt;

&lt;p&gt;By itself the position property doesn‚Äôt do much. We need to use the placement properties (just what I call them not the official name) to tell the document exactly where the element should be placed. There are four main properties to do just that.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Top
2. Left
3. Right
4. Bottom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Each of these properties define how much the element's position should be adjusted from its default and in which direction it should be adjusted. When we look at the position values below and the examples it will become more clear how these work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#position-property-values"&gt;
  &lt;/a&gt;
  Position Property Values
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#static-positioning"&gt;
  &lt;/a&gt;
  Static Positioning
&lt;/h3&gt;

&lt;p&gt;Static positioning is the default value for the position property. That is the elements on the page appear in the order expected by normal flow. The placement properties &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; do not affect an element that has &lt;code&gt;position: static&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It can often be useful to set the position property to static even though it is the default value. An example of when you might want to do this is when you want to override a position value you have set elsewhere.&lt;/p&gt;

&lt;p&gt;Let‚Äôs look at an example to see that &lt;code&gt;position static&lt;/code&gt; has no effect on the element with this property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-original"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-original"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-original"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we have three &lt;code&gt;divs&lt;/code&gt; each in a parent container with the class &lt;code&gt;box-original&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's add &lt;code&gt;position: static&lt;/code&gt; to the div with the class &lt;code&gt;box-2&lt;/code&gt;and give it box some values for &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box-2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;static&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;mediumpurple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is the result of the changes we have made.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/xxgMXdE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Did you see that even though we have used the position property and the placement values that it has no effect on the element? You now know that the &lt;code&gt;static&lt;/code&gt; value is the default and that the placement values do not affect elements with &lt;code&gt;position: static&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let‚Äôs look at the first value that does affect the position of an element in the flow of the document.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relative-positioning"&gt;
  &lt;/a&gt;
  Relative Positioning
&lt;/h2&gt;

&lt;p&gt;Relative position means that an element is positioned relative to its original position in the normal flow. By setting an element to just have position: relative nothing will happen. We will need to use the placement properties to change how the element is positioned relative to its original position.&lt;/p&gt;

&lt;p&gt;Basically when you set a HTML element to position: relative, it will remain in the flow of the layout. But, by using the placement properties you can move the element around. Let‚Äôs look at an example to cement your understanding of the relative position.&lt;/p&gt;

&lt;p&gt;We are going to replace the position: static with position: relative.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box-2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;mediumpurple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of the change is below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/NWdoaVQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can see that the purple square element has been positioned relative to where it was initially positioned the grey square. In the example above it is 10px from the top and 10px from left of where it was originally meant to be positioned in the normal flow. However, the element remains in the normal flow of the document and the offset is applied relative to its original position. Make sure to remember this as we move on to the other position values.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#absolute-positioning"&gt;
  &lt;/a&gt;
  Absolute Positioning
&lt;/h3&gt;

&lt;p&gt;Absolute positioned elements are removed from the normal document flow, and the space that the element was originally occupying is no longer reserved for that element. I like to remember it by saying it is 'absolutely not there'.&lt;/p&gt;

&lt;p&gt;When the element is given &lt;code&gt;position: absolute&lt;/code&gt; all other elements behave as if that element is no longer in the document. Therefore, there is no space reserved for that element in the page layout. This can then be a really powerful tool for moving HTML elements around.&lt;/p&gt;

&lt;p&gt;An important point and something that stumped me when I was learning is that an element with &lt;code&gt;position: absolute&lt;/code&gt; is positioned &lt;strong&gt;relative&lt;/strong&gt; to its closest positional ancestor. What this means is that for absolute positioning to work, the parent element must have a position property value other than the default of &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is a crucial point to take note of, because if the closest parent element does not have a position property, the element with the absolute position will position relative to the next parent element that has a position property value. If there is no element with a position property value the element will be positioned relative to the html or viewport element. Not knowing this is what can cause so much pain when trying to position elements in the document.&lt;/p&gt;

&lt;p&gt;We can move the absolute positioned element around just like any other CSS position property by using the placement properties. Using the &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; properties, you determine where the element will be placed relative to the first parent element in the hierarchy that has a position property other than the default &lt;code&gt;position: static&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's get back to our example. We are now going to change the position property of the second box element to &lt;code&gt;position: absolute&lt;/code&gt;. Before we look at the change and the result, check the previous pen to see what the position of the &lt;code&gt;parent-box&lt;/code&gt; element is.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box-2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;mediumpurple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The results of the changes are below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/dyNaZye?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here you will see that no space was created in the document for the element. In fact the space has collapsed and the other elements are acting like it isn't even on the page. This is because the element is now positioned relative to the parent-box element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fixed-positioning"&gt;
  &lt;/a&gt;
  Fixed positioning
&lt;/h3&gt;

&lt;p&gt;Fixed positioning works like &lt;code&gt;absolute&lt;/code&gt; positioning in that it is removed from the normal document flow, and the space that element was originally occupying is no longer reserved for that element.&lt;/p&gt;

&lt;p&gt;Fixed positioned elements are positioned relative to the &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Viewport"&gt;viewport&lt;/a&gt;. What this means is that when you scroll down the page, the element remains in its original location on the page. This is often used for &lt;a href="https://peterlunch.com/how-to-create-responsive-gaming-style-navbar/"&gt;navigation bars&lt;/a&gt;, which no matter where the users scrolls on the page always remain visible at the top of the page.&lt;/p&gt;

&lt;p&gt;We are going to change the position of box-2 from &lt;code&gt;position: absolute&lt;/code&gt; to &lt;code&gt;position: fixed&lt;/code&gt;. We are also going to change the value of the &lt;code&gt;top&lt;/code&gt; property to 0 and remove the &lt;code&gt;left&lt;/code&gt; properties value. We have also added some more boxes to show you the effect as you scroll.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.box-2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;mediumpurple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The results of the changes are below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/mdRvqOo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As you can see from the example the purple box element is now fixed at the top of the page, much like a&lt;a href="https://peterlunch.com/creating-a-simple-sticky-navbar-with-css-and-html/"&gt;navigation bar we've built in the past&lt;/a&gt;. This is because we have set the position property to &lt;code&gt;fixed&lt;/code&gt; and set it 0 from the &lt;code&gt;top&lt;/code&gt; of the page.&lt;/p&gt;

&lt;p&gt;When using the CSS position property with a &lt;code&gt;fixed&lt;/code&gt; value it‚Äôs important to note that it takes up the viewport space you specify the whole time the user is on the page. This can affect a users experience especially on mobile devices where screen space is limited. So ensure you are thinking about how you use it across all devices with your media queries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sticky-positioning"&gt;
  &lt;/a&gt;
  Sticky Positioning
&lt;/h3&gt;

&lt;p&gt;The sticky positioning value is positioned according to the normal flow of the document, yet it is also a mix of both position &lt;code&gt;relative&lt;/code&gt; and position &lt;code&gt;fixed&lt;/code&gt;. What I mean by this is that it behaves as a relatively positioned element until the page reaches a set scroll point then it will behave as a &lt;code&gt;fixed&lt;/code&gt; position element.&lt;/p&gt;

&lt;p&gt;Let‚Äôs look at  a new example below to see that when the element reaches a position on the page it changes to a &lt;code&gt;fixed&lt;/code&gt; position element. We are going to give the &lt;code&gt;dd&lt;/code&gt; tag the position value &lt;code&gt;sticky&lt;/code&gt; and the property &lt;code&gt;top&lt;/code&gt; with a value of &lt;code&gt;3px&lt;/code&gt; meaning it will be 3px from the top of the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;dt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#007FFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sticky&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try scrolling through the result below to see how sticky works.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/GRrzyKp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In the example above you can see that the &lt;code&gt;dd&lt;/code&gt; tags (the lines in blue) stick until we reach the point of the next &lt;code&gt;dd&lt;/code&gt; tag. Once we reach that point the next &lt;code&gt;dd&lt;/code&gt; tag becomes the sticky element. So, the &lt;code&gt;dd&lt;/code&gt; elements are positioned in the normal flow of the page, but when you reach its position when scrolling, its position becomes fixed. It sticks to that position and stays there as you scroll until the next &lt;code&gt;dd&lt;/code&gt; tag takes the fixed position.&lt;/p&gt;

&lt;p&gt;Be careful with the &lt;code&gt;sticky&lt;/code&gt; positioned property as it is not yet &lt;a href="https://caniuse.com/css-sticky"&gt;universally supported&lt;/a&gt; by all browsers at the time of writing this (those pesky IE users). You can always check if something is support by checking out &lt;a href="https://caniuse.com/"&gt;caniuse.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--krKGELPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwq1aw2phjanbvrx86lu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--krKGELPZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwq1aw2phjanbvrx86lu.png" alt="browser support for sticky position property"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-does-zindex-fit-in"&gt;
  &lt;/a&gt;
  Where does Z-index fit in
&lt;/h3&gt;

&lt;p&gt;Z-index is a CSS property that let‚Äôs you set the z-order of a positioned element. This means that any element that you set with a position property value other than &lt;code&gt;static&lt;/code&gt; can be positioned along the z-index plane.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7noRiUXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61ayi8ehkdfz1wbyggw4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7noRiUXT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61ayi8ehkdfz1wbyggw4.png" alt="x, y, z plane highlighting z-index"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;&lt;small&gt;&lt;small&gt;The 3D plane of X, Y and Z - Source: &lt;a href="https://brilliant.org/wiki/3d-coordinate-geometry-equation-of-a-plane/"&gt;Brilliant&lt;/a&gt;.&lt;/small&gt;&lt;/small&gt;&lt;/center&gt;

&lt;p&gt;Basically the z-index lets you have control over how these elements are ordered and therefore how they overlap each other. Essentially, it is you deciding which elements should appear at the front and which should appear at the back.&lt;/p&gt;

&lt;p&gt;Elements with higher value z-index properties are displayed in front of elements with lower value z-index properties.&lt;/p&gt;

&lt;p&gt;Let's look at an example below, I am going to show you the HTML order to show you that if we use z-index the order doesn't matter we can determine their position from front to back.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box box-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;z-index:4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box box-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;z-index:1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box box-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;z-index:2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box box-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;z-index:5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box box-5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;z-index:3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We then give each the &lt;code&gt;box&lt;/code&gt; class a position of &lt;code&gt;fixed&lt;/code&gt; which now allows us to change the z-index of each of the box elements. The results of doing so are below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pin0s/embed/MWJLrKG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As you can see from the results, the higher &lt;code&gt;z-index&lt;/code&gt; elements are in the front and the lower ones are at the back.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To summarize what we‚Äôve learned. The CSS position property is a powerful tool that lets you change the normal flow of a document, by determining how elements should be placed on a page.&lt;/p&gt;

&lt;p&gt;You have five position properties to work with.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static&lt;/li&gt;
&lt;li&gt;Relative&lt;/li&gt;
&lt;li&gt;Absolute&lt;/li&gt;
&lt;li&gt;Fixed&lt;/li&gt;
&lt;li&gt;Sticky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You set the position of the element by using the &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; properties and by specifying how far away from that point the element should be.&lt;/p&gt;

&lt;p&gt;You can also set the position of the element on the z-index if you have given it a position property value other than the default &lt;code&gt;static&lt;/code&gt;. The higher the values are displayed in the front and the lower values are displayed in the back.&lt;/p&gt;

&lt;p&gt;The best way to get better at CSS position property is to play around with it. Give the pens I used here a try and play around with each property by giving them different values or changing the parent elements.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you got value out of this post, I'd really appreciate if you checkout some of my other content on my &lt;a href="https://peterlunch.com/"&gt;website&lt;/a&gt; or follow me on &lt;a href="https://twitter.com/thelynchpinau"&gt;twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>20 Amazing Software and Services to grab for Free with Student Email Account</title>
      <author>Aarruuu</author>
      <pubDate>Mon, 26 Apr 2021 10:17:53 +0000</pubDate>
      <link>https://dev.to/aarruuu/20-amazing-software-and-services-to-grab-for-free-with-student-email-account-3a7p</link>
      <guid>https://dev.to/aarruuu/20-amazing-software-and-services-to-grab-for-free-with-student-email-account-3a7p</guid>
      <description>&lt;p&gt;I am sharing an aggregated list of the best software and services you can get for Free with a student email account. By a student email account, I actually mean an email account with a .edu domain.&lt;/p&gt;

&lt;p&gt;If you have that, you'd amazed at the list of things you're entitled to.&lt;/p&gt;

&lt;p&gt;Here's what you can get:&lt;/p&gt;

&lt;p&gt;-GitHub Student Developer Pack (Including Free Domains, webhosting, amazing software services, Email servers and what not)&lt;/p&gt;

&lt;p&gt;-Free Microsoft Office 365 (Including Microsoft Word, Excel, PowerPoint, OneNote)&lt;/p&gt;

&lt;p&gt;-Free .me domain for 1 year from Namecheap (with Free SSL certificate)&lt;/p&gt;

&lt;p&gt;-Notion App Premium (Popular Note Taking app)&lt;/p&gt;

&lt;p&gt;-eSurveyCreator survey software (Survey creation and distribution app)&lt;/p&gt;

&lt;p&gt;-AutoCad and Maya3d (Free for life time)&lt;/p&gt;

&lt;p&gt;-Free LucidChart service (Popular Flowchart service)&lt;/p&gt;

&lt;p&gt;-Free JetBrains software (IDE platform)&lt;/p&gt;

&lt;p&gt;-Google Suite for Education (Your school / university needs to enroll)&lt;/p&gt;

&lt;p&gt;-Microsoft Imagine Student Portal (Includes Visual Studio, Xamarin, Free Microsoft Azure etc.)&lt;/p&gt;

&lt;p&gt;-Last Pass Premium account (Valid for 6 months)&lt;/p&gt;

&lt;p&gt;-Shapr3d designing and modeling service (For creating professional 3d models)&lt;/p&gt;

&lt;p&gt;-Gliffy subscription (Popular diagram software to draw your ideas)&lt;/p&gt;

&lt;p&gt;-Free Autodesk Sketchbook (Popular Sketching software free for 3 years)&lt;/p&gt;

&lt;p&gt;-Portfolio Box Pro (Online service for creating professional portfolios)&lt;/p&gt;

&lt;p&gt;-Lumion Pro (World's best 3d rendering software for architects)&lt;/p&gt;

&lt;p&gt;-Tableau Desktop and Prep Builder (1 year Free subscription to both software)&lt;/p&gt;

&lt;p&gt;-Invision App (Premium Product Design app for free)&lt;br&gt;
Basecamp account (Popular Project management and Team collaboration software)&lt;/p&gt;

&lt;p&gt;-Amazon Prime Student (Mega discounts and Deals on Amazon)&lt;/p&gt;

&lt;p&gt;Link to all these services can be found in the source mentioned below. Do share your experiences with these giveaways with us.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.thewebjob.in/"&gt;https://www.thewebjob.in/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A Must-Read History Lesson For Devs: "The Eternal Mainframe"</title>
      <author>Daniel Ziltener</author>
      <pubDate>Mon, 26 Apr 2021 10:01:16 +0000</pubDate>
      <link>https://dev.to/zilti/a-must-read-history-lesson-for-devs-the-eternal-mainframe-18h8</link>
      <guid>https://dev.to/zilti/a-must-read-history-lesson-for-devs-the-eternal-mainframe-18h8</guid>
      <description>&lt;p&gt;Many younger developers run from hype to hype and are completely imprinted on their marketing overlords. The dev community grew too quickly to be contained by its own culture and history, as it - in my opinion - should have been. Because there are important lessons to be learned from the past that spans decades. "The Cloud" isn't a 21st century invention. Neither are "thin clients" and having all your data in said cloud. One of the best articles about this is the essay "The Eternal Mainframe"by Rudolf Winestock.&lt;/p&gt;

&lt;p&gt;I'd love to make dev.to aware of this piece of writing and like to hear your opinions on it!&lt;/p&gt;

&lt;p&gt;You can &lt;a href="http://www.winestockwebdesign.com/Essays/Eternal_Mainframe.html"&gt;find it here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>history</category>
      <category>watercooler</category>
      <category>cloud</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>
Gitaly at Scalingo: Explaining the complete redesign of how we host your application git repositories</title>
      <author>√âtienne M.</author>
      <pubDate>Mon, 26 Apr 2021 09:46:28 +0000</pubDate>
      <link>https://dev.to/etiennem/gitaly-at-scalingo-explaining-the-complete-redesign-of-how-we-host-your-application-git-repositories-4550</link>
      <guid>https://dev.to/etiennem/gitaly-at-scalingo-explaining-the-complete-redesign-of-how-we-host-your-application-git-repositories-4550</guid>
      <description>&lt;p&gt;Do you want to learn about Gitaly, the open-source solution to host Git repositories created by GitLab?&lt;/p&gt;

&lt;p&gt;To give a bit of context, I work for the cloud hosting platform Scalingo. &lt;a href="http://scalingo.com/"&gt;Scalingo&lt;/a&gt; is a European Platform as a Service and we host git repositories from a lot of users.&lt;/p&gt;

&lt;p&gt;We thought that the process we used can help other developers and this is why we wrote this article.&lt;/p&gt;

&lt;p&gt;In this article I will share the reasons behind this redesign (bye bye NFS), the choice we made (good morning Gitaly), and how we implemented Gitaly.&lt;/p&gt;

&lt;p&gt;Let‚Äôs get our hands dirty!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gitaly"&gt;
  &lt;/a&gt;
  What is Gitaly?
&lt;/h2&gt;

&lt;p&gt;Gitaly is an open-source solution developed by GitLab. It provides high-level RPC access to Git repositories. It is obviously used by GitLab to read and write Git data.&lt;/p&gt;

&lt;p&gt;You can learn more about it on &lt;a href="https://docs.gitlab.com/ee/administration/gitaly/"&gt;GitLab Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-gitaly-works"&gt;
  &lt;/a&gt;
  How Does Gitaly Works
&lt;/h2&gt;

&lt;p&gt;Gitaly offers a couple of components: Praefect and Gitaly.&lt;/p&gt;

&lt;p&gt;Gitaly is a daemon which runs on all nodes intended to store the Git repositories data (no more NFS!). It offers a high level Git API with gRPC. This high level API is also interesting so that our operators do not need to understand too much of Git internal working. They would be able to work with some high level API calls.&lt;/p&gt;

&lt;p&gt;Praefect is intended at distributing the incoming connections to the Gitaly nodes. It detects a Gitaly node failure to be able to dispatch the connections to healthy nodes. It also ensures a repository is replicated on all Gitaly nodes. This is the component responsible of the high availability. It is really important for Scalingo to ensure all components are highly available!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-we-proceed-to-choose-gitaly-and-how-can-this-help-you-to-choose-a-technology"&gt;
  &lt;/a&gt;
  How did we proceed to choose Gitaly and how can this help you to choose a technology?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#our-infrastructure-before-gitaly"&gt;
  &lt;/a&gt;
  Our infrastructure before Gitaly
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8NOTP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqsfffy0bobgxkynx64w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8NOTP4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqsfffy0bobgxkynx64w.png" alt="Scalingo Architecture with NFS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code of all applications hosted on Scalingo is on a NFS shared folder. This folder is shared among all the builders.&lt;/p&gt;

&lt;p&gt;This architecture may lead to various problems. For example, a problem may arise if multiple deployments are triggered on an application in a short time interval. Under some race condition, we may unmount the NFS folder in the middle of the second deployment.&lt;/p&gt;

&lt;p&gt;But NFS was also known at Scalingo to imply other issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance issues&lt;/li&gt;
&lt;li&gt;Network latency for file access&lt;/li&gt;
&lt;li&gt;Process reading the files may end up in an uninterruptible sleep&lt;/li&gt;
&lt;li&gt;Etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make a long story short: NFS was used in various places in Scalingo infancy. We are slowly moving away from it everywhere possible. And Git repositories hosting is one of the last bastions using NFS at Scalingo.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-criteria-we-used-to-choose-and-how-this-can-help-you"&gt;
  &lt;/a&gt;
  The criteria we used to choose and how this can help you
&lt;/h3&gt;

&lt;p&gt;From what we read, we are not alone trying to find a good solution for repositories hosting. Especially, the most well known source code hosting company communicated about this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub announced the creation of a home made solution named Spokes to get rid of NFS.&lt;/li&gt;
&lt;li&gt;GitLab released the open source software Gitaly to manage their repositories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also explored other options such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating the current software to be more up-to-date and easier to maintain, and get rid of NFS by using an object storage for the storage.&lt;/li&gt;
&lt;li&gt;Using Git Ketch which used to be in use at Google.&lt;/li&gt;
&lt;li&gt;Using Stemma to manage the Git repositories and implement our own logic for automatic failover.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We further investigated, and compared various criteria that you can discover in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECasdXgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xls3krjtooaubqnnqys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECasdXgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xls3krjtooaubqnnqys.png" alt="Criteria for Choosing the Best Solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These criteria range from all the Git features we need (push, reupload and fetch) to more fuzzy criteria such as the perceived complexity of a solution or our perceived confidence in the solution.&lt;/p&gt;

&lt;p&gt;Out of those criteria we always give our best to understand the time that is necessary to implement the solution.&lt;/p&gt;

&lt;p&gt;We eventually settled on Gitaly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They developed it to get rid of NFS, just like us \o/&lt;/li&gt;
&lt;li&gt;Horizontally scalable: one can easily add more storage capacity by adding new nodes to the cluster.&lt;/li&gt;
&lt;li&gt;Prevents write errors.&lt;/li&gt;
&lt;li&gt;Highly available: with NFS, a server outage leads to a downtime for all the deployments on the platform. In the Gitaly world, the server is more resilient to failure.&lt;/li&gt;
&lt;li&gt;The Gitaly project is open source with a license allowing us to use it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#our-infrastructure-with-gitaly"&gt;
  &lt;/a&gt;
  Our infrastructure with Gitaly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umlms15e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e5iv7oooctbyl6wpqh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umlms15e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3e5iv7oooctbyl6wpqh.png" alt="How does Gitaly work at Scalingo?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As seen on this figure, the new architecture uses Praefect and Gitaly for the Git repositories storage. It also includes a new software developed internally called Git Repository Core.&lt;/p&gt;

&lt;p&gt;This software acts as a router: it receives incoming SSH connection coming from the &lt;code&gt;git push scalingo master&lt;/code&gt; command issued by a customer, and direct it either to the NFS repository storage or to the Gitaly storage. &lt;/p&gt;

&lt;p&gt;This was a strong requisite for us so that we could release this feature using the canary release pattern: release Gitaly backend for a small share of our customers and increase the share of customers using it over time.&lt;/p&gt;

&lt;p&gt;It is also in charge of triggering the deployment of the code hosted on Gitaly.&lt;/p&gt;

&lt;p&gt;With it‚Äôs central place, Git Repository Core allows us to intercept the Git traffic, and potentially filter it. We plan to add more security features, but also convenient ones for people deploying their application using this Git integration. For instance, adding the ability to customize the main branch name (e.g. main rather than the default master branch).&lt;/p&gt;

&lt;p&gt;On a more internal perspective, Git Repository Core allows us to develop administrative endpoint to ease the work from the operator in their day-to-day work.&lt;/p&gt;

&lt;p&gt;All elements on the figure are duplicated to improve the resiliency to server failures.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Gitaly is an open-source solution that offers a new way to handle git repositories.&lt;/p&gt;

&lt;p&gt;For us it was a big change and this will help us to handle our current growth. &lt;/p&gt;

&lt;p&gt;If you want to read the full article or discover &lt;a href="https://scalingo.com/"&gt;Scalingo&lt;/a&gt; we invite you to read it &lt;a href="https://scalingo.com/blog/gitaly-at-scalingo"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>devops</category>
      <category>hosting</category>
      <category>infrastructure</category>
    </item>
  </channel>
</rss>
