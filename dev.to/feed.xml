<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Let's optimize JavaScript - Password Generator</title>
      <author>Keff</author>
      <pubDate>Thu, 26 Aug 2021 09:46:27 +0000</pubDate>
      <link>https://dev.to/nombrekeff/i-created-one-of-the-fastests-node-js-password-generators-without-knowing-16ll</link>
      <guid>https://dev.to/nombrekeff/i-created-one-of-the-fastests-node-js-password-generators-without-knowing-16ll</guid>
      <description>&lt;p&gt;Holy crap, I was searching through Github explore, when I found a password generator (&lt;a href="https://github.com/omgovich/omgopass"&gt;omgopass&lt;/a&gt;), that supposedly was quite a lot faster that other alternatives. 600 times faster than &lt;a href="https://www.npmjs.com/package/password-generator"&gt;&lt;code&gt;password-generator&lt;/code&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#this-is-the-benchmark-raw-omgopass-endraw-shows"&gt;
  &lt;/a&gt;
  This is the benchmark &lt;code&gt;omgopass&lt;/code&gt; shows:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J1J-A8TT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alwpeyf073o5i4rnirlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1J-A8TT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alwpeyf073o5i4rnirlo.png" alt="Original omgopass Benchmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After seeing this I remembered I did a password generator a couple weeks back, and did not perform any benchmarks, so I decided to test my approach with this other libraries. &lt;/p&gt;

&lt;p&gt;To my surprise it did fairly well, scoring second place in the same benchmark as shown above. Quite good for not even trying. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%C2%A0benchmark-with-my-pass-generator-raw-passgenny-endraw-"&gt;
  &lt;/a&gt;
   Benchmark with my pass generator (&lt;a href="https://github.com/nombrekeff/pass-genny"&gt;&lt;code&gt;passGenny&lt;/code&gt;&lt;/a&gt;):
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VYQ1EOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjhq73acnomolt1lrgm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VYQ1EOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjhq73acnomolt1lrgm6.png" alt="Benchmark with passGenny"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#considerations"&gt;
  &lt;/a&gt;
  Considerations
&lt;/h3&gt;

&lt;p&gt;This benchmark is not a reflection of the quality of the library or the skills of the developers, to really be sure a load more tests and benchmarks should be done. &lt;/p&gt;

&lt;p&gt;Also, features vary from one library to the other, ones are readable, ones are not. Some use crypto for random, some not.&lt;/p&gt;

&lt;p&gt;With that being said,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0lets-make-passgenny-faster"&gt;
  &lt;/a&gt;
   Let's make &lt;strong&gt;passGenny&lt;/strong&gt; faster
&lt;/h3&gt;

&lt;p&gt;I decided to give it a go, and try optimizing it, let's see the original code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;upperCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcdefghijklmnopqrstuvwxyz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;symbolsChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;gt;[]{}=?()&amp;amp;%$#@!¡?¿*_-.:;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;numbersString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0123456789&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;readable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;updateOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;upperCaseChars&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbolsChars&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbersString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What this class does is, from a set of options, it will generate passwords. It does this by combining all characters allowed (by the options) into a single array, then we iterate over the length of the password (defined by options), and get a random character from that array.&lt;/p&gt;

&lt;p&gt;Simple enough right? Now, I think we could optimize this quite a bit, shall we?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimization-1"&gt;
  &lt;/a&gt;
  Optimization 1
&lt;/h3&gt;

&lt;p&gt;Okay, the first thing I noticed is, in &lt;code&gt;_getCharactersForOptions&lt;/code&gt;, I'm using arrays to hold the valid characters. Using the spread operator to append them into the &lt;code&gt;combinedCaracters&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;This is kinda redundant as we could be using string all the way through. And concatenating a string is way cheaper that combining arrays. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-see-what-we-could-change"&gt;
  &lt;/a&gt;
  Let's see what we could change.
&lt;/h4&gt;

&lt;p&gt;First we need to change how we store the characters, we don't need to split them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;upperCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcdefghijklmnopqrstuvwxyz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;symbolsChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;gt;[]{}=?()&amp;amp;%$#@!¡?¿*_-.:;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;numbersString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0123456789&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// ... more code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great, now let's modify the &lt;code&gt;_getCharactersForOptions&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PasswordGenerator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;upperCaseChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbolsChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbersString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how we now return a string, instead of an array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-see-how-this-does-in-the-benchmark"&gt;
  &lt;/a&gt;
  Let's see how this does in the benchmark
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q28JkC8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2feork2avqgekuk9t9gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q28JkC8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2feork2avqgekuk9t9gm.png" alt="Benchmark with passGenny with one level of optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Damn, I did not expect that big of a change, it almost doubled.&lt;/p&gt;

&lt;p&gt;As you can see, in this particular case, strings perform a lot better than arrays.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#but-wait"&gt;
  &lt;/a&gt;
  BUT WAIT
&lt;/h4&gt;

&lt;p&gt;I think I can optimize this even more, you might have noticed, that the result of &lt;code&gt;_getCharactersForOptions&lt;/code&gt; will always be the same with the same options. Meaning we don't need to concatenate the string on each password, we only need to generate them if the options change.&lt;/p&gt;

&lt;p&gt;We could approach this in a couple of ways, using memoization (possibly better), creating a proxy around the object or the simple approach I will show you next. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimization-2"&gt;
  &lt;/a&gt;
  Optimization 2
&lt;/h3&gt;

&lt;p&gt;What I will do is, make options private and force people to change options using &lt;code&gt;updateOptions&lt;/code&gt; method. This will allow me to mark if options have changed.&lt;/p&gt;

&lt;p&gt;Let's see the complete example, and I will break it down afterwards:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;upperCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcdefghijklmnopqrstuvwxyz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;symbolsChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;gt;[]{}=?()&amp;amp;%$#@!¡?¿*_-.:;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;numbersString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0123456789&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="nx"&gt;randomFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;readable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;randomFn&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;mathRandom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_combinedCharacters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_optionsChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;updateOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newOptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_optionsChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)]);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;_getCharactersForOptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// If options have not changed, we can return the previoulsy combined characters&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_optionsChanged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_combinedCharacters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lowerCaseChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;upperCaseChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbolsChars&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;PasswordGeneratorFast1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numbersString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Update and mark options as not changed&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_combinedCharacters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;combinedCaracters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_optionsChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_combinedCharacters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;We add &lt;code&gt;_optionsChanged&lt;/code&gt;, indicates whether the options have changed since the last time &lt;code&gt;_getCharactersForOptions&lt;/code&gt; was called.&lt;/li&gt;
&lt;li&gt;We store the last combined character in &lt;code&gt;_combinedCharacters&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We modify &lt;code&gt;_getCharactersForOptions&lt;/code&gt;, so that if options have not changed, we return the last generated &lt;code&gt;_combinedCharacters&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We change &lt;code&gt;password +=&lt;/code&gt; with &lt;code&gt;password.concat()&lt;/code&gt; (&lt;em&gt;in my tests, it concat performed better that +=&lt;/em&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it, let's see how that did:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9nV9HI31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9qhk7dagak8fs9724qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9nV9HI31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9qhk7dagak8fs9724qt.png" alt="Benchmark with passGenny with two levels of optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressive if you ask me, we made &lt;strong&gt;passGenny&lt;/strong&gt; more that twice as fast, scoring first by quite a bit of margin. If we phrase it as &lt;strong&gt;omgovich&lt;/strong&gt; did, &lt;code&gt;passGenny&lt;/code&gt; is 2,444 times faster than &lt;a href="https://www.npmjs.com/package/password-generator"&gt;password-generator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-take-from-this"&gt;
  &lt;/a&gt;
  What to take from this?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keeping it simple can equate to performant&lt;/li&gt;
&lt;li&gt;Don't use arrays if you don't need to&lt;/li&gt;
&lt;li&gt;Check if operations are needed to be performed every time&lt;/li&gt;
&lt;li&gt;If you need performance, sometimes the smaller things make the biggest difference&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;PD: I'm no performance expert, so I might be missing some important thing, please let me know If I missed something or I misinterpreted the results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Have a great day!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>performance</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 5 Front End Development Tools for Faster Development!</title>
      <author>Aakash Raghunathan</author>
      <pubDate>Thu, 26 Aug 2021 09:44:50 +0000</pubDate>
      <link>https://dev.to/dronahq/top-5-front-end-development-tools-for-faster-development-4fe4</link>
      <guid>https://dev.to/dronahq/top-5-front-end-development-tools-for-faster-development-4fe4</guid>
      <description>&lt;p&gt;Back in the day, development used to be a challenging task that took months of designing, prototyping, coding, and testing to build a functional website/app that was just satisfactory. Take a look at Amazon’s website when it was first built:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VfjyUHcg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image4_7cKAF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VfjyUHcg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image4_7cKAF.png" alt="Amazon Website - 1994"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seems ridiculous right? We’ve definitely come a long way since then, and are able to leverage powerful technology to build some genuinely amazing web applications! My favorite one during the lockdown definitely being &lt;a href="https://imissmycafe.com/"&gt;this site&lt;/a&gt; to listen to songs in the background during my long WFH sessions. But while web development has definitely become more powerful and flexible, has it really become easy to use?&lt;/p&gt;

&lt;p&gt;To build any web application that lives up to today’s standards - you need to build responsive designs that work well across multiple devices, create a beautiful UI/UX to capture the attention of your audience, follow the latest security standards and protocols, and much more! What’s more? There are tons of options to choose from and you no longer know what to work with! Should you just use the simple tried and tested HTML + CSS + JS combo? Should you try out new frameworks like React, Angular, Vue? Heck, &lt;a href="https://careerkarma.com/blog/how-many-coding-languages-are-there/"&gt;there are more than 700 languages&lt;/a&gt; available to build and develop projects in, with more getting added each day!&lt;/p&gt;

&lt;p&gt;In my opinion, some important factors to consider when choosing a framework include - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How good is the community support? Can I easily find help for my problems along the way?&lt;/li&gt;
&lt;li&gt;How flexible is it? Can I build my app to work across all devices (Android/IOS/Web)? Can I easily integrate it with all 3rd party services &amp;amp; databases?&lt;/li&gt;
&lt;li&gt;Are there reusable components that will help me build my app as soon as possible rather than having to waste time building each and every element of the app?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is important to get a good grasp of the above factors so that you can choose the right framework. &lt;/p&gt;

&lt;p&gt;To help you navigate through this humongous heap of tools available today - I’ve listed down five of my favorite tools, in no particular order, to kickstart your web development journey and get your web app running in no time!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-chrome-devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.chrome.com/docs/devtools/"&gt;1. Chrome DevTools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RYQw2qlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image6_Z1UO8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYQw2qlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image6_Z1UO8.png" alt="chrome-tools-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chrome DevTools is a popular web development tool that lets you edit web pages directly from the Google Chrome browser and quickly detect problems in order to build better websites. It allows you to easily edit your HTML &amp;amp; CSS code or debug JavaScript code in a real-time environment, all while viewing a thorough performance analysis of your website!&lt;/p&gt;

&lt;p&gt;It also has a number of other notable features, such as the ability to quickly identify run-time performance issues using the ‘Timeline', the ability to test the responsiveness of a website using the ‘Device Mode', the ability to debug JavaScript using breakpoints using the ‘Sources Panel’, and so on. Since it is directly developed and maintained by Google, this tool is one of the most widely used and a reliable one too, the only drawback being you will need the Chrome browser to use it. Follow the &lt;a href="https://www.youtube.com/user/GoogleDevelopers"&gt;Google Developers Youtube Channel&lt;/a&gt; to stay up to date on what’s happening in and around the development space!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider-before-choosing-this-tool"&gt;
  &lt;/a&gt;
  What to consider before choosing this tool?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Best to debug your HTML + JavaScript web apps&lt;/li&gt;
&lt;li&gt;Can emulate mobile devices to debug in mobile view&lt;/li&gt;
&lt;li&gt;Comprehensive performance analysis to easily spot bottlenecks&lt;/li&gt;
&lt;li&gt;Show current HTML DOM objects interactively, can edit and see changes real-time&lt;/li&gt;
&lt;li&gt;High memory &amp;amp; CPU usage may cause problems in your system

&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-sass"&gt;
  &lt;/a&gt;
  &lt;a href="https://sass-lang.com/"&gt;2. Sass&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--guXgj7R2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image1_5oFud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--guXgj7R2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image1_5oFud.png" alt="sass-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sass, or Syntactically Awesome Style Sheets, is a popular CSS extension language that is used all around the world. What Sass does is enhance the functionality of CSS by allowing for variables, inline imports, inheritance, and easier nesting, among other things. One key benefit to note is that it is fully compatible with all CSS versions, allowing developers to use any existing CSS library. Meanwhile, before you can use Sass, you must install and configure it on your project. After you've installed it, you can use the sass command to compile your Sass to CSS.&lt;/p&gt;

&lt;p&gt;CSS is a popular and amazing framework but has its own drawbacks, the major one being to repeat extensive lines of code repeatedly to get the results you want. Sass helps eliminate this! It’s also open-source and has awesome community support!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider-before-choosing-this-tool"&gt;
  &lt;/a&gt;
  What to consider before choosing this tool?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Write clean, easy &amp;amp; efficient CSS&lt;/li&gt;
&lt;li&gt;Compatible with all versions of CSS and you can use any available CSS libraries&lt;/li&gt;
&lt;li&gt;Provides nesting to use nested syntax and has useful functions like color manipulation, math functions and more&lt;/li&gt;
&lt;li&gt;Has a learning curve to learn new features present in preprocessor before using it&lt;/li&gt;
&lt;li&gt;Using Sass may cause you to lose some benefits of using the built-in inspector element feature of some browsers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-angularjs"&gt;
  &lt;/a&gt;
  &lt;a href="https://angularjs.org/"&gt;3. AngularJS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4-msOh0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image5_Y6XMG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4-msOh0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image5_Y6XMG.png" alt="angular-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've had any experience with Front-End development, you've almost certainly heard about AngularJS. Let's start with the fact that it's an open-source front-end web framework developed by Google. It allows you extend your application’s HTML syntax, enabling it to create more dynamic and feature-rich websites!&lt;/p&gt;

&lt;p&gt;AngularJS has a number of useful features, including Data Binding, Controllers, Directives, Reusable Components, and more but the project has its critics too. Some feel that AngularJS leads to a messy, non-separated code, but that fact remains that it has one of the largest communities and is the framework of choice for many developers!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider-before-choosing-this-tool"&gt;
  &lt;/a&gt;
  What to consider before choosing this tool?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Two-way data binding to ensure that changes made to view are displayed in model instantly and vice versa&lt;/li&gt;
&lt;li&gt;Supports caching and many other processes to reduce CPU burden and improve server performance&lt;/li&gt;
&lt;li&gt;DOM manipulation is not needed, saving time and efforts of developers&lt;/li&gt;
&lt;li&gt;Excellent, highly active community support&lt;/li&gt;
&lt;li&gt;High learning curve to adapt completely to the framework &amp;amp; limited documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-bootstrap"&gt;
  &lt;/a&gt;
  &lt;a href="https://getbootstrap.com/"&gt;4. Bootstrap&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B4fVb5fQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image2_Hr9Tc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B4fVb5fQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image2_Hr9Tc.png" alt="bootstrap-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you start building frontend applications on a regular basis, you'll find that certain patterns emerge. You might have to type in the same styling for a container multiple times, or one menu that you use multiple times. This repetition can get quite annoying but is exactly the problem Bootstrap solves.&lt;/p&gt;

&lt;p&gt;Bootstrap is a UI Framework built by Twitter that overcomes these issues by abstracting common aspects into reusable modules, allowing developers to quickly and easily build the pieces of new applications. It comes with tools to create modal objects, add JavaScript plugins, and a slew of other features that can drastically reduce the amount of code and time required to complete your project. If you’re interested to work with Bootstrap, you should also consider checking out &lt;a href="https://bootstrapstudio.io/"&gt;Bootstrap Studio&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider-before-choosing-this-tool"&gt;
  &lt;/a&gt;
  What to consider before choosing this tool?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Responsive Grid system to easily create page layouts &lt;/li&gt;
&lt;li&gt;Easy to learn and use if you’re proficient with CSS, a basic skill for almost all web developers today&lt;/li&gt;
&lt;li&gt;Can be a bit heavy and cause slow loading times, battery drain issues. Files generated are large in size. &lt;/li&gt;
&lt;li&gt;Every Bootstrap website looks similar, difficult to make it stand out&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-dronahq"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.dronahq.com/"&gt;5. DronaHQ&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2NQ-5Epr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image3_XXKi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2NQ-5Epr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dronamobilepublic.s3.amazonaws.com/DRONA5_Team1632/content/app/images/public/image3_XXKi1.png" alt="dronahq-logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking to quickly design a web or mobile app or internal tool, then a biased recommendation from me would definitely be DronaHQ! We have tailored our tool to help you design your project as soon as possible while taking care of all the needs of your audience. Why DronaHQ?&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#responsive-designs"&gt;
  &lt;/a&gt;
  Responsive Designs
&lt;/h4&gt;

&lt;p&gt;Build once, and your project will be “automagically” optimized for desktops, tablets &amp;amp; mobiles! This will ensure your web /mobile app can be accessed by a large number of people with minimal effort. Watch &lt;a href="https://www.youtube.com/watch?v=fOAitkRl86U"&gt;this video&lt;/a&gt; to see how easy it is to build responsive designs using DronaHQ!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reusableready-ui-components"&gt;
  &lt;/a&gt;
  Reusable/Ready UI Components
&lt;/h4&gt;

&lt;p&gt;Design your projects faster than ever with our ready UI components! All you have to do is drag them onto your screen, set up its properties, connect it to some data, and finally set up some actions. We have an ever-growing marketplace with all the controls you can possibly think of!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#custom-ui-components"&gt;
  &lt;/a&gt;
  Custom UI Components
&lt;/h4&gt;

&lt;p&gt;Not satisfied with the ready components available? You can create your own custom controls using our control designer to make the controls look &amp;amp; function exactly the way you want it to! What’s more? Controls created once can be published and used across all your apps!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#event-handlers"&gt;
  &lt;/a&gt;
  Event Handlers
&lt;/h4&gt;

&lt;p&gt;Typically, If you’re building a web-based application on javascript, you would use event handling classes for common events like onclick, keydown, onload and others. DronaHQ provides a quick &amp;amp; robust way to listen and handle app events in your app. Just select the control for which you want to add an event for, and click on the lightning icon on top right. &lt;a href="https://youtu.be/zykvGI1-lRk"&gt;Click here&lt;/a&gt; for a complete tutorial showcasing how to configure these event handlers and utilize them like a pro!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#action-flows"&gt;
  &lt;/a&gt;
  Action Flows
&lt;/h4&gt;

&lt;p&gt;Power up your app with our Front-end action flows! With a single tap, you can set up powerful actions to configure certain front-end aspects like setting values, display toasts, navigate to screen, or even perform server-side operations like querying databases and sending push notifications! You can &lt;a href="https://www.dronahq.com/introducing-action-flows-the-frontend-logic-builder/"&gt;visit this page&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#focus-on-what-matters"&gt;
  &lt;/a&gt;
  Focus on What Matters
&lt;/h4&gt;

&lt;p&gt;Authentication, Login, Deployment, Hosting, Embedding and Security Protocols are all taken care of from our end. Just focus on designing your core app and don’t waste time re-inventing the wheel!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#custommade-for-you"&gt;
  &lt;/a&gt;
  Custom-made For You
&lt;/h4&gt;

&lt;p&gt;Are you a developer? Insert code blocks and write custom javascript wherever you want, build custom controls using our control designer to use it across all your apps, and a lot more! Are you not that comfortable with code? Just drag &amp;amp; drop from our ever-growing array of controls, or use our &lt;a href="https://www.dronahq.com/templates/"&gt;ready templates&lt;/a&gt; and set up your application in no time!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#integrate-anywhere"&gt;
  &lt;/a&gt;
  Integrate anywhere
&lt;/h4&gt;

&lt;p&gt;Use our &lt;a href="https://www.dronahq.com/integrations/"&gt;ready integrations&lt;/a&gt; to connect to any database or third-party apps like MySQL, MongoDB, Shopify, Slack, and more! The app you want isn’t supported? You can still connect to it manually using our REST API connector!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-consider-before-choosing-this-tool"&gt;
  &lt;/a&gt;
  What to consider before choosing this tool?
&lt;/h3&gt;

&lt;p&gt;While I love DronaHQ and genuinely feel it’s an amazing tool, I’d be lying if I said it is the best tool for all use-cases. If you’re looking to build some sort of an internal tool like admin panels, customer portals, sales dashboards, custom CRM, forms, approval queues, and more then this is definitely the right tool. With ready templates, reusable components, ready third-party integrations, you can get your app up and running in minutes!&lt;/p&gt;

&lt;p&gt;But if you’re looking to build heavy customer-facing websites, large e-commerce sites, or high animations or transitions, some sort of a gaming platform, then although it is still possible with DronaHQ, there are better choices available to help you with your task! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For heavy customer-facing products, you would want to customize each &amp;amp; every aspect to track and integrate deeply, you should try out some of the other tools mentioned above which gives you pre-built components and the ability to customise to gain deeper product intelligence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For E-commerce sites, you would probably need good inventory management controls, the ability to promote and run ads, SEO optimization, and extensive event tracking to understand your customer persona. You should check out &lt;a href="https://www.shopify.com/"&gt;Shopify&lt;/a&gt; if you have such a use case!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For gaming platforms, you would want to add a lot of custom animation, character scripts, and a lot more. DronaHQ is definitely not the right platform for this, you should check out &lt;a href="https://unity.com/"&gt;Unity&lt;/a&gt; or &lt;a href="https://www.unrealengine.com/en-US/"&gt;Unreal&lt;/a&gt; if you’re interested in something like this.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up…
&lt;/h2&gt;

&lt;p&gt;That concludes our list! As you probably know by now, Front-end Development is no longer restricted to only HTML, CSS &amp;amp; JavaScript. Proven libraries, ready-to-use code, and modern collaboration tools (like Git) - all this can improve your workflow providing more options when it comes to complex development tasks. Technology has advanced a lot over the years, and it’s time to start utilizing more powerful platforms to make our workflows easier rather than being held back by “Traditional Development”. &lt;/p&gt;

&lt;p&gt;What next? To build a fully functional web application, you also need a good back-end to serve the app you just made. Luckily, with &lt;a href="https://www.dronahq.com/"&gt;DronaHQ&lt;/a&gt;, you can directly integrate with any of your databases to get your app running in no time! If you’re still curious to explore top back-end solutions, here’s an &lt;a href="https://www.geeksforgeeks.org/top-7-programming-languages-for-backend-web-development/"&gt;awesome list&lt;/a&gt; to get you started.&lt;/p&gt;

&lt;p&gt;Now that you have an idea of what tools are shaping up the industry currently, you can start to level up your Front-end Development skills and enter the space yourself! Already started your journey? Let me know what are your favorite tools and why you love them!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tools</category>
      <category>frontend</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to add a license to a GitHub repository in less than 2 minutes ✨</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Thu, 26 Aug 2021 09:42:48 +0000</pubDate>
      <link>https://dev.to/avneesh0612/how-to-add-a-license-to-a-github-repository-in-less-than-2-minutes-3mg4</link>
      <guid>https://dev.to/avneesh0612/how-to-add-a-license-to-a-github-repository-in-less-than-2-minutes-3mg4</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;You should add a license to your open-source projects for making it easier for people to contribute and many hackathons like the ones organized by Hashnode need a license.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-license"&gt;
  &lt;/a&gt;
  Adding the license
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to the repository you want to add the license to and click on Add file&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1sePeVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966602935/bLSSSPG0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1sePeVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966602935/bLSSSPG0Y.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now click on Create new file. You will be directed to a page like this&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k6sOsXE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966899567/te7BPbLGo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6sOsXE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966899567/te7BPbLGo.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type License as the name of the file and you should see Choose a license template button in the left corner.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YM1TK2Nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966978377/hzJq8_wyE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YM1TK2Nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629966978377/hzJq8_wyE.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now choose any License you need from the options given.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r9s23bOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967110027/GDlMTFHZe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r9s23bOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967110027/GDlMTFHZe.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MIT is one of the most famous licenses, So I am gonna choose that&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can add the two details you are asked for there.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3RhDCOSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967236301/MkJqdtXTk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3RhDCOSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967236301/MkJqdtXTk.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can either create a new branch and commit the file but I am going to commit it directly to the main branch for simplicity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5mq2dRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967358126/BQrBSLlHk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5mq2dRD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967358126/BQrBSLlHk.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have added a license to your repository 🎉.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0Y7LDFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967422477/VknqHbxp7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0Y7LDFd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967422477/VknqHbxp7.gif" alt="YayCongratsGIF.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can add it to your Readme as well. Here is a sample of how it is added in many repositories -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;## 📝 License

Copyright © 2021 [Avneesh Agarwal](https://github.com/avneesh0612). &amp;lt;br /&amp;gt;
This project is [MIT](https://github.com/avneesh0612/next-progress-bar/blob/main/LICENSE) licensed.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will look like this in your readme&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---cGRA2Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967732952/Mcxn8hqMc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---cGRA2Q2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629967732952/Mcxn8hqMc.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh0612.hashnode.dev/git-and-github-crash-course"&gt;Git and GitHub Crash course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;All socials&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>mit</category>
      <category>license</category>
    </item>
    <item>
      <title>Type Narrowing in TypeScript</title>
      <author>Maina Wycliffe</author>
      <pubDate>Thu, 26 Aug 2021 09:41:32 +0000</pubDate>
      <link>https://dev.to/this-is-learning/type-narrowing-in-typescript-3bdp</link>
      <guid>https://dev.to/this-is-learning/type-narrowing-in-typescript-3bdp</guid>
      <description>&lt;p&gt;In the spirit of my last few articles, where we have looked into &lt;a href="https://mainawycliffe.dev/blog/template-literal-types-in-typescript"&gt;Template Literal Types&lt;/a&gt; and &lt;a href="https://mainawycliffe.dev/blog/types-and-mocking-typescript"&gt;Types and Mocking&lt;/a&gt;, we are going to dissect another topic in typescript involving types. In this article, we are going to learn various ways you can narrow types. Type narrowing is the process of moving a type from a less precise type to a more precise type.&lt;/p&gt;

&lt;p&gt;Let's start with a simple function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above function can either take a number or a string. Let's say we want to perform different actions based upon whether &lt;code&gt;input&lt;/code&gt; is a number or a string. In this case, we will use Javascripts type guards to check if it's a string or number, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// do something with the string&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input is a string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// do something with number&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input is a number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#type-guards"&gt;
  &lt;/a&gt;
  Type Guards
&lt;/h2&gt;

&lt;p&gt;In the above example, we used Javascripts type guards to narrow the type of &lt;code&gt;input&lt;/code&gt; to either number or string. Type guards are used to check if a variable is of a certain type, i.e. &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, etc. When a type guard is used, Typescript expects that variable to be of that type. It will automatically type check its usage based on that information.&lt;/p&gt;

&lt;p&gt;Here is a list of Javascripts type guards available: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#string"&gt;
  &lt;/a&gt;
  string
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with string value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#number"&gt;
  &lt;/a&gt;
  number
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with number value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bigint"&gt;
  &lt;/a&gt;
  bigint
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bigint&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with bigint value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#boolean"&gt;
  &lt;/a&gt;
  boolean
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;boolean&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with boolean value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#symbol"&gt;
  &lt;/a&gt;
  symbol
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;symbol&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with symbol value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#undefined"&gt;
  &lt;/a&gt;
  undefined
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with undefined value&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#object"&gt;
  &lt;/a&gt;
  object
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(typeof param === "object") {
  // do something with object value
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#function"&gt;
  &lt;/a&gt;
  function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with the function&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#truthiness-narrowing"&gt;
  &lt;/a&gt;
  Truthiness Narrowing
&lt;/h2&gt;

&lt;p&gt;In this type of narrowing, we check whether a variable is &lt;strong&gt;truthy&lt;/strong&gt; before using it. When a variable is truthy, typescript will automatically remove the possibility of that variable being &lt;strong&gt;falsy&lt;/strong&gt; i.e. &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, etc, within the conditional check. &lt;/p&gt;

&lt;p&gt;Take for instance the following example, where a function &lt;strong&gt;someFunction&lt;/strong&gt; below takes an &lt;code&gt;input&lt;/code&gt;, whose type is either a string or undefined (i.e. optional).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "string"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By checking whether &lt;code&gt;input&lt;/code&gt; *&lt;strong&gt;*is truthy, the type of **x&lt;/strong&gt; becomes a string otherwise it's &lt;strong&gt;undefined&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#equality-narrowing"&gt;
  &lt;/a&gt;
  Equality Narrowing
&lt;/h2&gt;

&lt;p&gt;If two variables are equal, then the types of both variables must be the same. If one variable is of an imprecise type (i.e. &lt;code&gt;unknown&lt;/code&gt;, &lt;code&gt;any&lt;/code&gt; etc.) and is equal to another variable of a precise type, then typescript will use that information to narrow the type of the first variable.&lt;/p&gt;

&lt;p&gt;Take the following function, which takes two parameters: &lt;strong&gt;x&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt;, with &lt;strong&gt;x&lt;/strong&gt; being either a &lt;strong&gt;string&lt;/strong&gt; or a &lt;strong&gt;number&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt; being a &lt;strong&gt;number&lt;/strong&gt;. When the value of &lt;strong&gt;x&lt;/strong&gt; is equal to the value of &lt;strong&gt;y&lt;/strong&gt;, then the type of &lt;strong&gt;x&lt;/strong&gt; is inferred to be a &lt;strong&gt;number&lt;/strong&gt; and otherwise a &lt;strong&gt;string&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// narrowed to number&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// number&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// this is not narrowed&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// number or string&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#discriminated-unions"&gt;
  &lt;/a&gt;
  Discriminated Unions
&lt;/h2&gt;

&lt;p&gt;In this approach, you create an object, with a literal member that can be used to discriminate between two different unions. Let's take an example of a function that calculates the square of different shapes - Rectangle and Circle. We will start by defining the type of Rectangle and Circle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reactangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the above types, the objects will each have the literal field of shape, which can either be a &lt;code&gt;circle&lt;/code&gt; or &lt;code&gt;rectangle&lt;/code&gt;. We can use the shape field within our function to calculate area, that would accept a union of &lt;code&gt;Rectangle&lt;/code&gt; and &lt;code&gt;Circle&lt;/code&gt;, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reactangle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// you can only access the properties of reactangle and not circle&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Area of reactangle: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// you can only access the properties of circle and not reactangle&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Area of circle: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the &lt;code&gt;shape&lt;/code&gt; field is a rectangle, you only have access to properties available in the &lt;code&gt;Rectangle&lt;/code&gt; type, that is &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;shape&lt;/code&gt;. The same applies to when &lt;code&gt;shape&lt;/code&gt; field is a circle, typescript will only allow you to access &lt;code&gt;radius&lt;/code&gt; and &lt;code&gt;circle&lt;/code&gt; and will throw an error otherwise.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/type-narrowing-jswcw?view=editor"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-in-operator-for-narrowing"&gt;
  &lt;/a&gt;
  Using the in Operator for Narrowing
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;in&lt;/code&gt; operator is used to determine if an object has a property with a name in it. It's used in the format of &lt;code&gt;"property" in object&lt;/code&gt; where &lt;code&gt;property&lt;/code&gt; is the name of the property you want to check if it exists inside the &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the example above, we used discriminated unions to distinguish between a Circle and Rectangle. We can also use the &lt;code&gt;in&lt;/code&gt; operator to achieve the same, but this time we will be checking if a shape contains certain properties i.e. &lt;code&gt;radius&lt;/code&gt; for &lt;code&gt;Circle&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; for &lt;code&gt;Rectangle&lt;/code&gt;, and the results would be the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Reactangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Reactangle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;radius&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// now you can access radius from shape&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Area of circle: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// any attempt to access height or width will result to an error&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Property 'width' does not exist on type 'Circle'.&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Error: Property 'height' does not exist on type 'Circle'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// now you can access height and width from the shape object&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Area of reactangle: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// any attempt to access raidus would result to an error&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Error: Property 'radius' does not exist on type 'Reactangle'.ts&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-assignment-narrowing"&gt;
  &lt;/a&gt;
  Using Assignment Narrowing
&lt;/h2&gt;

&lt;p&gt;In this type of narrowing, typescript will narrow the type of a variable once it's assigned a value. Take a variable x of union type of either &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;, if we assign it a &lt;code&gt;number&lt;/code&gt;, the type becomes a &lt;code&gt;number&lt;/code&gt; and if we assign it a &lt;code&gt;string&lt;/code&gt;, the type changes to a string instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "number"&lt;/span&gt;

&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;something&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "string"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a detailed example at Code Sandbox:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/type-narrowing-jswcw?module=assignmentNarrowing.ts&amp;amp;view=editor"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-instanceof-for-narrowing"&gt;
  &lt;/a&gt;
  Using instanceof for Narrowing
&lt;/h2&gt;

&lt;p&gt;Javascripts' &lt;code&gt;instanceof&lt;/code&gt; operator is used to check if a value is an instance of a certain class. It's used in the format of &lt;code&gt;value instanceof value2&lt;/code&gt; and returns a boolean. When you check if a value is an &lt;code&gt;instanceof&lt;/code&gt; a class, Typescript will assign that type to the variable, thereby narrowing the type. &lt;/p&gt;

&lt;p&gt;Take the following example, where a function takes in a date, which can be either a string or a Date. If it's a Date, we want to convert it to a string and if it's a string, we will return it as is. We can use instanceof to check if it's an instance of a Date and convert it to string, as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;dateToString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// The type now is Date and you can access Date methods&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we learned various ways we can narrow types, from type guards to discriminated unions. In our next article, we will learn how we can build our own type guards using type predicates.&lt;/p&gt;

&lt;p&gt;If you found this article informative and would like to keep learning, visit my new series on Typescript - &lt;a href="https://mainawycliffe.dev/blog/tags/a-byte-of-typescript"&gt;A Byte of Typescript&lt;/a&gt;. A Byte of Typescript is a new series that I will be publishing on a regular basis to help you demystify Typescript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mainawycliffe/discussion/discussions/15"&gt; Discuss this Article&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Control Google Meet With Expressions/Gestures</title>
      <author>Ritabrata Das</author>
      <pubDate>Thu, 26 Aug 2021 09:41:15 +0000</pubDate>
      <link>https://dev.to/nitdgplug/control-google-meet-with-expressions-gestures-21oo</link>
      <guid>https://dev.to/nitdgplug/control-google-meet-with-expressions-gestures-21oo</guid>
      <description>&lt;p&gt;With the advancements made in the field of modern day machine-learning technologies, it has become quite easy and flexible to develop models and applications based on this domain. So, you might have a perception that the realm of Machine Learning requires complex algorithms and huge expert knowledge for it's projects. &lt;/p&gt;

&lt;p&gt;However, in the recent times, it has been quite easy to develop them as most of the standard algorithms and models are made available on the Internet in the form of web-applications. In this project, we will be using &lt;strong&gt;Teachable Machine&lt;/strong&gt;, along with &lt;strong&gt;Tensorflow.js&lt;/strong&gt; to control the basic actions in &lt;strong&gt;Google Meet&lt;/strong&gt; such as muting, switching off your video and a special action, which will be revealed in the later course of the article.         &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJDJBNh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74r6ivwuiroq1bgx4i33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJDJBNh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74r6ivwuiroq1bgx4i33.png" alt="Screenshot_77"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teachablemachine"&gt;
  &lt;/a&gt;
  Teachable-Machine
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Teachable Machine&lt;/strong&gt; is an online web-application, created by &lt;strong&gt;Google Creative Labs&lt;/strong&gt; that facilitates &lt;strong&gt;easy and fast creation of machine learning models&lt;/strong&gt; that is accessible to everyone on the net. It is flexible as it makes use of &lt;strong&gt;pre-existing files&lt;/strong&gt; or even &lt;strong&gt;capture live examples&lt;/strong&gt;, which will be recorded as instances, on the basis of which references will be made. You can even make a choice to use your models entirely &lt;strong&gt;on-device&lt;/strong&gt;, without any webcam or microphone data being conveyed outside your system. &lt;br&gt;
The advantage is that you train your computer to recognize your &lt;strong&gt;images, sounds, and poses&lt;/strong&gt; of your personal choice, without writing any complicated and long machine learning code. Then, you can use your model in your own &lt;strong&gt;projects, applications, websites and even more&lt;/strong&gt;. It is powered by &lt;strong&gt;Tensorflow.js&lt;/strong&gt;, which is an open-source library, created by &lt;strong&gt;Google&lt;/strong&gt; for the purpose of Machine-Learning.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Well, at the most, what you require is the basic knowledge of &lt;strong&gt;Vanilla JavaScript&lt;/strong&gt;, a webcam, an Internet connection and the passion to learn something new. Then, follow the below steps and get your own functional model developed in front of your eyes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-project"&gt;
  &lt;/a&gt;
  The Project
&lt;/h2&gt;

&lt;p&gt;The project is in the form of a chrome browser-extension, which basically controls all the actions on Google Meet. The article has been divided into the following subtopics to facilitate your understanding:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-training-your-model"&gt;
  &lt;/a&gt;
  Step 1: Training your Model
&lt;/h3&gt;

&lt;p&gt;The first step involves &lt;strong&gt;creating the basic models on Teachable Machine&lt;/strong&gt;. The model can be either any &lt;strong&gt;image, body pose or sound of your choice&lt;/strong&gt;. In this project, we have decided to utilize the &lt;strong&gt;basic image model&lt;/strong&gt; for training our computer. However, you can also use body poses and speech to train your model otherwise. &lt;strong&gt;Make sure the images, poses or sounds that you wish to implement are quite unnatural and can be performed accurately.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, to start with, head over to the &lt;a href="https://teachablemachine.withgoogle.com/"&gt;Teachable Machine&lt;/a&gt; site and click on &lt;strong&gt;Get Started&lt;/strong&gt;. You can further access it from the hamburger  menu at the top-left corner of the homepage. You will get the following page:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gAQiRh7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmg5sbegmoeim8odk30r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gAQiRh7j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmg5sbegmoeim8odk30r.png" alt="Screenshot_2021-08-07_15-45-06"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will now get the options for creating your model online to train your machine. There are three different projects namely &lt;strong&gt;Image Project, Audio Project and Pose Project&lt;/strong&gt;. For our model, we have used the &lt;strong&gt;Pose Project&lt;/strong&gt; for it's implementation. You can also import your previously saved models from your &lt;strong&gt;Google Drive or local file system&lt;/strong&gt; if you want to use a model which was created beforehand and you wish to reuse and modify it. If you want a new model, just click on &lt;strong&gt;Pose Project&lt;/strong&gt;. Then, the site will redirect you to your project destination: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MJfnRaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6vljtdzwbz6neq7l2gk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MJfnRaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m6vljtdzwbz6neq7l2gk.png" alt="abc"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, you have to record your images in the form of &lt;strong&gt;"classes"&lt;/strong&gt;. The images can be &lt;strong&gt;captured live via webcam&lt;/strong&gt;, or can be &lt;strong&gt;uploaded from the local file system&lt;/strong&gt; as well. The image samples of a particular class should be &lt;strong&gt;same and repetitive&lt;/strong&gt; in nature, while the image samples used in various classes should be &lt;strong&gt;different&lt;/strong&gt; so that the class can be defined more accurately and can be recognized with ease.&lt;/p&gt;

&lt;p&gt;It is advisable to record &lt;strong&gt;at least 50 to 60 images&lt;/strong&gt; for increasing the accuracy threshold of the recorded class. In order to record live instances, grant permission to your webcam and press the &lt;strong&gt;Hold to Record&lt;/strong&gt; button to capture your live images. &lt;/p&gt;

&lt;p&gt;If you want a free tutorial on how to record your model in the form of images, you can head over to the &lt;a href="https://teachablemachine.withgoogle.com/v1/"&gt;Teachable Machine Tutorial&lt;/a&gt; and click on &lt;strong&gt;"Let's Go"&lt;/strong&gt; for a live demo practice.&lt;/p&gt;

&lt;p&gt;You can change the &lt;strong&gt;labels&lt;/strong&gt; of the classes according to your wish. In this project, we have made use of three classes namely: &lt;strong&gt;Audio&lt;/strong&gt;,&lt;strong&gt;Video&lt;/strong&gt; and &lt;strong&gt;Escape&lt;/strong&gt;, which are recorded live via webcam. The images in these classes can be specific &lt;strong&gt;hand gestures ,facial expressions or particular objects&lt;/strong&gt;, which can be identified and recognized by the machine easily. &lt;br&gt;
In order to add more than two classes, click on &lt;strong&gt;Add Class&lt;/strong&gt;. After recording the image samples for the respective classes, it is time to train and export your model.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-2-exporting-your-model"&gt;
  &lt;/a&gt;
  Step 2: Exporting your Model
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uQlW42CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzl31obq3b7r3grmk5no.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uQlW42CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzl31obq3b7r3grmk5no.png" alt="Screenshot_2021-08-07_16-59-46"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After, you have created your respective classes, click on &lt;strong&gt;Train Model&lt;/strong&gt;, which will train your machine to recognize the content of the images, which will be used in our upcoming projects. Teachable Machine mainly uses &lt;strong&gt;pattern recognition algorithms&lt;/strong&gt; and involves the usage of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Statistical Techniques&lt;/li&gt;
&lt;li&gt;Structural Techniques&lt;/li&gt;
&lt;li&gt;Template Matching&lt;/li&gt;
&lt;li&gt;Neural Network Approach&lt;/li&gt;
&lt;li&gt;Fuzzy Model&lt;/li&gt;
&lt;li&gt;Hybrid Models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After your model has been trained, you can &lt;strong&gt;preview your model&lt;/strong&gt; before exporting it. This helps you to test the model before implementing it in your projects. Just perform the poses according to the images set by you and check whether the machine can identify them or not. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83wZS8Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1oo8kbt57ew1xsxkehb6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83wZS8Pe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1oo8kbt57ew1xsxkehb6.gif" alt="ezgif.com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When your model has been prepared, click on &lt;strong&gt;Export Model&lt;/strong&gt; and export the model in the form of &lt;strong&gt;Tensorflow.js&lt;/strong&gt;. Click on &lt;strong&gt;Upload my model&lt;/strong&gt;, which will publish your model online and it will generate an &lt;strong&gt;URL&lt;/strong&gt; , where your model will be hosted by Teachable Machine for free. You can also download it in the form of &lt;strong&gt;Tensorflow&lt;/strong&gt; or &lt;strong&gt;Tensorflow Lite&lt;/strong&gt; for local uses. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The model used in the project is live at:&lt;/strong&gt; &lt;a href="https://teachablemachine.withgoogle.com/models/fDdI9WGhO/"&gt;Project Model&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-3-preparing-the-manifestjson"&gt;
  &lt;/a&gt;
  Step 3: Preparing the Manifest.json
&lt;/h3&gt;

&lt;p&gt;The next step involves creating a &lt;strong&gt;Chrome browser extension&lt;/strong&gt; to render the following model to the Google Meet URL. So, we have to create the &lt;strong&gt;manifest.json&lt;/strong&gt; file in the browser directory which will be loaded in the browser. So let's have a look at the json file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gmeet_Controller&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;An extension to control Google Meet Actions using hand/facial gestures.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;permissions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;activeTab&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;storage&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;tabs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;notifications&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;manifest_version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;content_scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;matches&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://meet.google.com/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/tf.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/teachablemachine-pose.min.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/background.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can set the &lt;strong&gt;name&lt;/strong&gt;, &lt;strong&gt;description&lt;/strong&gt; and &lt;strong&gt;version&lt;/strong&gt; according to your choice, which is basically the information which will be displayed when you will load the extension on to the browser. You can also store &lt;strong&gt;icons&lt;/strong&gt; in a separate directory in your extension directory and render them on to the browser. The URL needs to be specified in &lt;strong&gt;"matches"&lt;/strong&gt; under &lt;strong&gt;content scripts&lt;/strong&gt;. You can set &lt;strong&gt;permissions&lt;/strong&gt; as well, if you do not want the extension to have unnecessary access to your system storage, notifications etc.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-4-linking-your-models-to-google-meet"&gt;
  &lt;/a&gt;
  Step 4: Linking your models to Google Meet
&lt;/h3&gt;

&lt;p&gt;Now create a separate directory to store the javascript files (here &lt;strong&gt;src&lt;/strong&gt;), which will render the functionality of the extension. Download the latest and updated version of &lt;a href="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs/dist/tf.min.js"&gt;tf.min.js&lt;/a&gt; and &lt;a href="https://cdn.jsdelivr.net/npm/@teachablemachine/pose@0.8.3/dist/teachablemachine-pose.min.js"&gt;teachablemachine-pose.min.js&lt;/a&gt;, and place them in the directory. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: This project can also be accomplished using npm and yarn packages such as "@teachablemachine/pose" and "@tensorflow/tfjs" or using their CDNs. However, we have used Vanilla JS to make the project simple and beginner-friendly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After importing, it is now time to frame the &lt;strong&gt;background.js&lt;/strong&gt;. First, declare a constant variable named URL which will contain the model URL that was generated by Teachable Machine.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://teachablemachine.withgoogle.com/models/&amp;lt;MODEL_ID&amp;gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Use your own personalized model here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then you have to write the basic Javascript to adjust the frame &lt;strong&gt;height and width&lt;/strong&gt; of the webcam, &lt;strong&gt;request access from the webcam&lt;/strong&gt; and keep on &lt;strong&gt;updating the webcam frame&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;labelContainer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxPredictions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;modelURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;model.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;metadataURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;metadata.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;tmPose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modelURL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;metadataURL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;maxPredictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTotalClasses&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;flip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nx"&gt;webcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;tmPose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Webcam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;flip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webcam-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we have to write the functions to identify the event on the webcam, compare it with the classes of the models and if the event's probability is more than the threshold probability then the function gets executed.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audioButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.VfPpkd-Bz112c-LgbsSe.yHy1rc.eT1oJ.tWDL4c.uaILN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;audioButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HNeRed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;audioButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;videoButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.VfPpkd-Bz112c-LgbsSe.yHy1rc.eT1oJ.tWDL4c.uaILN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;videoButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HNeRed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;videoButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.VfPpkd-Bz112c-LgbsSe.yHy1rc.eT1oJ.tWDL4c.uaILN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.VfPpkd-Bz112c-LgbsSe.yHy1rc.eT1oJ.tWDL4c.uaILN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Button0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HNeRed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Button0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Button1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;HNeRed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Button1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;pose&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posenetOutput&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;estimatePose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prediction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posenetOutput&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;predictionsArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Video&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Escape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;Escape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webcamContainer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;webcamContainer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webcam-container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webcamContainer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Open &lt;strong&gt;Google Chrome&lt;/strong&gt;, and type &lt;strong&gt;"chrome://extensions"&lt;/strong&gt;, to navigate to the &lt;strong&gt;Extensions&lt;/strong&gt; window. Now toggle on the &lt;strong&gt;Developer mode&lt;/strong&gt;, and click on &lt;strong&gt;Load unpacked&lt;/strong&gt;. Then open the file directory where your &lt;strong&gt;manifest.json&lt;/strong&gt; is stored. The extension is now ready to work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can have your own personalized model working on your system!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;Here you can have a short look at the working model of the project: &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;p&gt;You can further refer to the following documentation and tutorials to know more about the libraries and technologies:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://teachablemachine.withgoogle.com/"&gt;Teachable Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tensorflow.org/js"&gt;Tensorflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/"&gt;How to make a Browser Extension?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Credits:&lt;/strong&gt; &lt;a href="https://github.com/arjusmoon860"&gt;Arju S. Moon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the github repository for the above project here:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/RitabrataDas343"&gt;
        RitabrataDas343
      &lt;/a&gt; / &lt;a href="https://github.com/RitabrataDas343/GMeet_Controller"&gt;
        GMeet_Controller
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a browser extension used for controlling Google Meet using hand/facial expressions.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;This article has been written and established by: &lt;/p&gt;

&lt;div class="ltag__user ltag__user__id__601613"&gt;
  
    .ltag__user__id__601613 .follow-action-button {
      background-color: #1ff4e6 !important;
      color: #000000 !important;
      border-color: #1ff4e6 !important;
    }
  
    &lt;a href="/ritabratadas343" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwGj0EY2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vdOZIKYW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/601613/5a060c1f-483b-41fe-9649-27586bc13fd1.jpeg" alt="ritabratadas343 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/ritabratadas343"&gt;Ritabrata Das&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/ritabratadas343"&gt;Open-Source Fanatic || Full-Stack Developer || Graphic Designer || C.P. Enthusiast || CTF Player&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;center&gt;&lt;b&gt;and&lt;/b&gt;&lt;/center&gt;

&lt;div class="ltag__user ltag__user__id__601717"&gt;
  
    .ltag__user__id__601717 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/deucaleon18" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AiG8DNmh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--KEVpLBYW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/601717/ac894415-7fe0-47af-b8ba-959cf9e0aec2.jpeg" alt="deucaleon18 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/deucaleon18"&gt;Shubham Shantam Raju&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/deucaleon18"&gt;A sophomore interested in web development(MERN stack) and competitive programming(C++).&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;center&gt;&lt;b&gt;Hope you have found this article resourceful. &lt;/b&gt;&lt;/center&gt;

&lt;p&gt;Have a go through the following links to know more about us and keep yourself updated with the latest stuff:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nitdgplug.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k9DEKAEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GLUG_Website-FCC624%3Fstyle%3Dfor-the-badge%26logo%3Dlinux%26logoColor%3Dblack" alt="Linux"&gt; &lt;/a&gt; &lt;a href="https://www.facebook.com/nitdgplug/"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LV0nePHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Facebook-%25231877F2.svg%3Fstyle%3Dfor-the-badge%26logo%3DFacebook%26logoColor%3Dwhite" alt="Facebook"&gt; &lt;/a&gt; &lt;a href="https://www.instagram.com/nitdgplug/"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDpKh0DO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Instagram-%2523E4405F.svg%3Fstyle%3Dfor-the-badge%26logo%3DInstagram%26logoColor%3Dwhite" alt="Instagram"&gt; &lt;/a&gt; &lt;a href="https://www.linkedin.com/company/lugnitdgp/"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YCmLcFAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/linkedin-%25230077B5.svg%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite" alt="LinkedIn"&gt; &lt;/a&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
Do drop a &lt;b&gt;like&lt;/b&gt; to the post and &lt;b&gt;comment&lt;/b&gt; down below if you have liked the idea and are interested in exploring the domain of Machine-Learning along with us. Any kind of suggestions and propositions are appreciated.  
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#may-the-source-be-with-you"&gt;
  &lt;/a&gt;
  &lt;center&gt;&lt;strong&gt;May The Source Be With You! 🐧❤️&lt;/strong&gt;&lt;/center&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAg2ZVR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sZInPlPk--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cplzcsry6s5r8m1pale8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAg2ZVR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sZInPlPk--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/cplzcsry6s5r8m1pale8.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>machinelearning</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A hands-on introduction to deep reinforcement learning using Unity ML-Agents</title>
      <author>Joy</author>
      <pubDate>Thu, 26 Aug 2021 09:21:48 +0000</pubDate>
      <link>https://dev.to/joooyz/a-hands-on-introduction-to-deep-reinforcement-learning-using-unity-ml-agents-4f8i</link>
      <guid>https://dev.to/joooyz/a-hands-on-introduction-to-deep-reinforcement-learning-using-unity-ml-agents-4f8i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;⚠ Note: this series is still a work in progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#purpose"&gt;
  &lt;/a&gt;
  Purpose
&lt;/h2&gt;

&lt;p&gt;There are plenty of great reinforcement learning (RL) courses out there. Just to name a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://deepmind.com/learning-resources/-introduction-reinforcement-learning-david-silver"&gt;Introduction to Reinforcement Learning by David Silver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spinningup.openai.com/en/latest/"&gt;Spinning Up by OpenAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/specializations/reinforcement-learning"&gt;Reinforcement Learning Specialization by University of Alberta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But if you're anything like me, you might prefer a 'learning by doing' approach. With hands-on experience upfront, it may be easier for you to grasp the theory and math behind the algorithms later.&lt;/p&gt;

&lt;p&gt;In this series, I'll walk you through how to use &lt;a href="https://unity.com/products/machine-learning-agents"&gt;Unity ML-Agents&lt;/a&gt; to build a volleyball environment and train agents to play in it using deep RL. For a bit of fun and extra incentive, you'll be able to submit your trained agent to the &lt;a href="https://github.com/CoderOneHQ/ultimate-volleyball"&gt;Ultimate Volleyball leaderboard&lt;/a&gt; and have it compete against other agents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--52lWUlSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lr2zmstgz4f1ppihy8g5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--52lWUlSw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lr2zmstgz4f1ppihy8g5.gif" alt="Ultimate Volleyball"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-mlagents"&gt;
  &lt;/a&gt;
  Why ML-Agents?
&lt;/h2&gt;

&lt;p&gt;ML-Agents is an add-on for Unity (a game development platform). &lt;/p&gt;

&lt;p&gt;It lets us design a complex physics-rich environment without needing to build any of the physics simulation logic ourselves. It also lets us experiment with state-of-the-art RL algorithms without having to set up any boilerplate code or install additional libraries. The nice graphics and interface are a plus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-very-brief-overview-of-reinforcement-learning"&gt;
  &lt;/a&gt;
  A (very brief) overview of reinforcement learning
&lt;/h2&gt;

&lt;p&gt;In a nutshell, think about how you might teach a dog a new trick, like telling it to sit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If it performs the trick correctly (it sits), you’ll &lt;strong&gt;reward&lt;/strong&gt; it with a treat (&lt;em&gt;positive feedback&lt;/em&gt;) ✔️&lt;/li&gt;
&lt;li&gt;If it doesn’t sit correctly, it doesn’t get a treat (&lt;em&gt;negative feedback&lt;/em&gt;) ❌&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By continuing to do things that lead to positive outcomes, the dog will learn to sit when it hears the command in order to get its treat. Reinforcement learning is a subdomain of machine learning which involves training an ‘&lt;strong&gt;agent&lt;/strong&gt;’ (&lt;em&gt;the dog&lt;/em&gt;) to learn the correct sequences of &lt;strong&gt;actions&lt;/strong&gt; to take (&lt;em&gt;sitting&lt;/em&gt;) on its &lt;strong&gt;environment&lt;/strong&gt; (&lt;em&gt;in response to the command ‘sit’&lt;/em&gt;) in order to maximize its &lt;strong&gt;reward&lt;/strong&gt; (&lt;em&gt;getting a treat&lt;/em&gt;). &lt;/p&gt;

&lt;p&gt;This can be illustrated more formally as:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--okObq8DS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1zs6o1jtkn5ccfxgnwr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okObq8DS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1zs6o1jtkn5ccfxgnwr.png" alt="Sutton and Barto"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="http://incompleteideas.net/book/bookdraft2017nov5.pdf"&gt;Sutton &amp;amp; Barto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more on the theory, check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lilianweng.github.io/lil-log/2018/02/19/a-long-peek-into-reinforcement-learning.html"&gt;A (Long) Peek into Reinforcement Learning by Lilian Weng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.stanford.edu/class/psych209/Readings/SuttonBartoIPRLBook2ndEd.pdf"&gt;Reinforcement Learning: An Introduction by Sutton &amp;amp; Barto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sections"&gt;
  &lt;/a&gt;
  Sections
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Part 1: &lt;a href="https://www.gocoder.one/blog/introduction-to-unity-ml-agents"&gt;Getting started with Unity ML-Agents&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Part 2: Building the volleyball RL environment &lt;em&gt;(Coming soon)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Part 3: Adding an agent and selecting observations &lt;em&gt;(Coming soon)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Part 4: Training an agent using PPO &lt;em&gt;(Coming soon)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This series is up-to-date with ML-Agents Release 18&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>unity3d</category>
      <category>machinelearning</category>
      <category>deeplearning</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 15, Complete guide to the fractions module</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 26 Aug 2021 08:17:05 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-15-complete-guide-to-the-fractions-module-4ki8</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-15-complete-guide-to-the-fractions-module-4ki8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-is-your-complete-guide-to-fractions-in-python"&gt;
  &lt;/a&gt;
  Today is your complete guide to fractions in Python
&lt;/h2&gt;




&lt;blockquote&gt;
&lt;p&gt;The fractions module provides support for rational number arithmetic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The fractions module is yet another inbuilt module in Python. This module is very useful when we deal with floating numbers. This module converts floating numbers to more understandable fractions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expressing-numbers-as-fractions"&gt;
  &lt;/a&gt;
  Expressing numbers as fractions.
&lt;/h3&gt;

&lt;p&gt;Every number can be represented as a fraction. &lt;em&gt;(Well any number with finite decimal places at least)&lt;/em&gt; Sometimes converting a number into fractions makes it easier to understand and easier to comprehend. This is also useful when you require to use rational arithmetic over floating point arithmetic for various mathematical or scientific work.&lt;/p&gt;

&lt;p&gt;We can see how to use this module from the example shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;
&lt;span class="c1"&gt;# import the fractions module
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib&lt;/span&gt;&lt;span class="se"&gt;\f&lt;/span&gt;&lt;span class="s"&gt;ractions.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;156&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;__new__&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Fraction(%s, 0)'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;numerator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;fr.Fraction()&lt;/code&gt; converts a floating number into a fraction object. The print function automatically converts the fraction object into a readable format.&lt;br&gt;
When the denominator is zero, a &lt;code&gt;ZeroDivisionError&lt;/code&gt; is returned&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#here-is-another-example-which-i-have-copied-from-the-official-documentation-and-annotated-it-with-comments-to-make-it-understandable"&gt;
  &lt;/a&gt;
  Here is another example, which I have &lt;em&gt;copied&lt;/em&gt; from the official documentation and &lt;em&gt;annotated it with comments&lt;/em&gt; to make it understandable.
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;
&lt;span class="c1"&gt;# Import the `Fraction` part of the fraction module.
# from fractions import * will also work
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# make a fraction with numerator 16, denominator 10 and 
# reduce it to the lowest form
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# single numbers are represented as over denominator 1
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# empty parenthesis indicates zero
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'3/7'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# convert from a more readable string to a fraction format
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' -3/7 '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# whitespaces do not matter
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'1.414213 &lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="s"&gt;'''
Convert the floating value into a fraction with denominator as a power of 10


If the &lt;/span&gt;&lt;span class="se"&gt;\t\n&lt;/span&gt;&lt;span class="s"&gt; wouldn't have been there, the result would have been as follows
&amp;gt;&amp;gt;&amp;gt; fr.Fraction(1.414213)
Fraction(6369049139822511, 4503599627370496)
'''&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1414213&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'-.125'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# -.125 is interpreted as -0.125
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'7e-6'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Fraction constructor can take parameters in the exponential form also
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;2.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# convert 2.25 into fractions
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s"&gt;'''
 Error!!!
The fractions module interprets 1.1 as something else. The only way to get around this is to use the decimal module
Fraction(2476979795053773, 2251799813685248)
&amp;gt;&amp;gt;&amp;gt; from decimal import Decimal
#import the decimal module
&amp;gt;&amp;gt;&amp;gt; Fraction(Decimal('1.1'))
# convert decimal into fraction.
Fraction(11, 10)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#operations-on-fractions"&gt;
  &lt;/a&gt;
  Operations on fractions.
&lt;/h1&gt;

&lt;p&gt;Operating on fractions is just like operating on real numbers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Don't do this mistake of case insensitivity.
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;'fraction'&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numerator&lt;/span&gt;
&lt;span class="c1"&gt;#return the numerator of the fraction
&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;denominator&lt;/span&gt;
&lt;span class="c1"&gt;# return the denominator of the fraction.
&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.56724389811345e-16&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.3975424859373686j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#methods-in-the-fractions-module"&gt;
  &lt;/a&gt;
  Methods in the fractions module.
&lt;/h1&gt;

&lt;p&gt;The fractions module does contain a few useful methods as shown below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;as_integer_ratio()&lt;/code&gt; This returns a tuple two integers, whose ratio is equal to the Fraction in such a way that the denominator is positive.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_integer_ratio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# don't do this mistake.
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="s"&gt;'fractions'&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="s"&gt;'as_integer_ratio'&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_integer_ratio&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;limit_denominator()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;3.141596372&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;7074246125143851&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2251799813685248&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit_denominator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;311&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit_denominator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit_denominator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10390475&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3307387&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Functions to round of the fractions. There are various functions to round off the fractions as shown below.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;fractions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fr&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;3.141596372&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__round__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__round__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#round upto 3 digits.
&lt;/span&gt;&lt;span class="n"&gt;Fraction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1571&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__floor__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__ceil__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;That's all for now. You might want to check out the &lt;a href="https://docs.python.org/3/library/fractions.html"&gt;official documentation of the fractions module&lt;/a&gt; too!&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Dynamic terraform deployments using DevOps replace tokens</title>
      <author>Marcel.L</author>
      <pubDate>Thu, 26 Aug 2021 07:36:30 +0000</pubDate>
      <link>https://dev.to/pwd9000/dynamic-terraform-deployments-using-devops-replace-tokens-5aeb</link>
      <guid>https://dev.to/pwd9000/dynamic-terraform-deployments-using-devops-replace-tokens-5aeb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#replace-tokens"&gt;
  &lt;/a&gt;
  Replace tokens
&lt;/h2&gt;

&lt;p&gt;Replace tokens is a DevOps extension that can be installed into your DevOps Organisation from the Azure DevOps &lt;a href="https://marketplace.visualstudio.com/items?itemName=qetza.replacetokens"&gt;marketplace&lt;/a&gt;, simply put it is an Azure Pipelines extension that replace tokens in files with variable values. Today we will look at how we can use this Devops extension working with a terraform HCL code base, to dynamically deploy infrastructure hosted on Azure based on environments defined as variables in DevOps using terraform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-replace-tokens"&gt;
  &lt;/a&gt;
  Installing Replace Tokens
&lt;/h2&gt;

&lt;p&gt;Before we can use replace tokens we have to install it into our Devops Organisation from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=qetza.replacetokens"&gt;marketplace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go to DevOps Organisation Settings and select the &lt;strong&gt;Extensions&lt;/strong&gt; tab followed by &lt;strong&gt;Browse marketplace&lt;/strong&gt; and search for &lt;strong&gt;Replace tokens&lt;/strong&gt;. In addition also install the terraform extension called &lt;strong&gt;Terraform&lt;/strong&gt; by Microsoft DevLabs as we will use this later on to use terraform tasks in our DevOps pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJ7PDY8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/ado_task.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJ7PDY8m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/ado_task.png" alt="ado_task"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-layout-and-objective"&gt;
  &lt;/a&gt;
  Project layout and objective
&lt;/h2&gt;

&lt;p&gt;For this tutorial we will write a simple terraform configuration that will deploy a resource group, but we will use the &lt;strong&gt;replace tokens task&lt;/strong&gt; to manipulate our configuration file to deploy 3 different resource groups based on environment. For example &lt;code&gt;Infra-dev-Rg&lt;/code&gt;, &lt;code&gt;Infra-uat-Rg&lt;/code&gt; and &lt;code&gt;Infra-prod-Rg&lt;/code&gt;. I have set up a new project in my organisation called &lt;strong&gt;DynamicTerraform&lt;/strong&gt;, I also created a repository called &lt;strong&gt;Infrastructure&lt;/strong&gt;. Inside of my repository I have created the following paths:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;\terraform-azurerm-resourcegroup&lt;/code&gt; This location will be my root path used to store the main terraform configuration files which will be used to deploy a simple resource group.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;\terraform-azurerm-resourcegroup\pipelines&lt;/code&gt; This location will be used to store and configure yaml deployment pipelines for the resources in my root path.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;\terraform-azurerm-resourcegroup\pipelines\variables&lt;/code&gt; This location will be used to store and configure yaml variable template files used for my pipelines.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any additional future resources can be created in new root paths e.g.: &lt;code&gt;\terraform-azurerm-resourceX&lt;/code&gt;, &lt;code&gt;\terraform-azurerm-resourceY&lt;/code&gt;, &lt;code&gt;\terraform-azurerm-resourceZ&lt;/code&gt; etc... For this tutorial we will just be using &lt;code&gt;\terraform-azurerm-resourcegroup&lt;/code&gt; to deploy a simple resource groups dynamically based on environments for &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;uat&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miad6DKI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/rep_layout.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miad6DKI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/rep_layout.png" alt="rep_layout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terraform-configuration"&gt;
  &lt;/a&gt;
  Terraform Configuration
&lt;/h2&gt;

&lt;p&gt;As a pre-req I have also pre-created an Azure DevOps &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&amp;amp;tabs=yaml#create-a-service-connection"&gt;service connection&lt;/a&gt; that will be used to allow my pipelines to access Azure via the terraform task we installed earlier, and I also pre-created an Azure storage account which will act as my terraform &lt;a href="https://www.terraform.io/docs/language/settings/backends/azurerm.html"&gt;backend&lt;/a&gt; to safely store my terraform state files in.&lt;/p&gt;

&lt;p&gt;Under my repo path: &lt;code&gt;\terraform-azurerm-resourcegroup\&lt;/code&gt;, I have created the following three terraform files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;main.tf&lt;/strong&gt; (Main terraform configuration file)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/main.tf&lt;/span&gt;

   &lt;span class="c1"&gt;##################################################&lt;/span&gt;
   &lt;span class="c1"&gt;# Terraform Config                               #&lt;/span&gt;
   &lt;span class="c1"&gt;##################################################&lt;/span&gt;
   &lt;span class="nx"&gt;terraform&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;required_version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;gt;= ~{terraformVersion}~"&lt;/span&gt;

     &lt;span class="nx"&gt;backend&lt;/span&gt; &lt;span class="s2"&gt;"azurerm"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;resource_group_name&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~{terraformBackendRG}~"&lt;/span&gt;
       &lt;span class="nx"&gt;storage_account_name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~{terraformBackendSA}~"&lt;/span&gt;
       &lt;span class="nx"&gt;container_name&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"tfstate"&lt;/span&gt;
       &lt;span class="nx"&gt;key&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"infra_~{environment}~_rg.tfstate"&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;

     &lt;span class="nx"&gt;required_providers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;azurerm&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hashicorp/azurerm"&lt;/span&gt;
         &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 2.73"&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"azurerm"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
     &lt;span class="nx"&gt;skip_provider_registration&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;##################################################&lt;/span&gt;
   &lt;span class="c1"&gt;# RESOURCES                                      #&lt;/span&gt;
   &lt;span class="c1"&gt;##################################################&lt;/span&gt;
   &lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"azurerm_resource_group"&lt;/span&gt; &lt;span class="s2"&gt;"resource_group"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;name&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource_group_name&lt;/span&gt;
     &lt;span class="nx"&gt;location&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;
     &lt;span class="nx"&gt;tags&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you look at the our terraform configuration you will notice the following values: &lt;code&gt;~{terraformVersion}~&lt;/code&gt;, &lt;code&gt;~{terraformBackendRG}~&lt;/code&gt;, &lt;code&gt;~{terraformBackendSA}~&lt;/code&gt; and &lt;code&gt;~{environment}~&lt;/code&gt;, we will be dynamically changing the values inside of &lt;code&gt;~{ }~&lt;/code&gt; with values from our pipeline variable file later on in this tutorial using &lt;strong&gt;replace tokens&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;variables.tf&lt;/strong&gt; (Terraform variable definition file)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/variables.tf&lt;/span&gt;

   &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"resource_group_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;type&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
     &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Specifies the name of the resource group that will be created."&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"location"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;type&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
     &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"The location/region where Azure resource will be created."&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"tags"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;type&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
     &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Specifies a map of tags to be applied to the resources created."&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;resourcegroup.auto.tfvars&lt;/strong&gt; (Terraform variables which will be dynamically changed by replace tokens task)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/resourcegroup.auto.tfvars&lt;/span&gt;

   &lt;span class="nx"&gt;resource_group_name&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Infra-~{environment}~-Rg"&lt;/span&gt;
   &lt;span class="nx"&gt;location&lt;/span&gt;            &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~{location}~"&lt;/span&gt;
   &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;terraformDeployment&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"true"&lt;/span&gt;
     &lt;span class="nx"&gt;Environment&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~{environment}~"&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Again, if you look at the our &lt;strong&gt;TFVARS&lt;/strong&gt; configuration file you will notice the following values: &lt;code&gt;~{environment}~&lt;/code&gt; and &lt;code&gt;~{location}~&lt;/code&gt;, we will be dynamically changing the values inside of &lt;code&gt;~{ }~&lt;/code&gt; with values from our pipeline variable file later on in this tutorial using &lt;strong&gt;replace tokens&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#devops-pipeline-variable-file"&gt;
  &lt;/a&gt;
  DevOps Pipeline Variable file
&lt;/h2&gt;

&lt;p&gt;Under my repo path: &lt;code&gt;\terraform-azurerm-resourcegroup\pipelines\variables&lt;/code&gt;, I have created the following four yaml variable template files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;common_vars.yml&lt;/strong&gt; (Declares variables that will be used in all pipelines).
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/variables/common_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="c1"&gt;#Terraform Config + backend&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraformVersion&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;1.0.5'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraformBackendRG&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;TF-Core-Rg'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;terraformBackendSA&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;tfcorebackendsa'&lt;/span&gt;

     &lt;span class="c1"&gt;#Variables used for service connection&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureServiceConnection&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;TF-Terraform-SP'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rootDirName&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;terraform-azurerm-resourcegroup'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;dev_vars.yml&lt;/strong&gt; (Declares variables that will be used in DEV specific pipeline).
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/variables/dev_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="c1"&gt;#Development Variables&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;environment&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dev'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;location&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;uksouth'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;uat_vars.yml&lt;/strong&gt; (Declares variables that will be used in UAT specific pipeline).
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/variables/uat_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="c1"&gt;#UAT Variables&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;environment&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;uat'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;location&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;uksouth'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;prod_vars.yml&lt;/strong&gt; (Declares variables that will be used in PROD specific pipeline).
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/variables/prod_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="c1"&gt;#Production Variables&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;environment&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;prod'&lt;/span&gt;

     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;location&lt;/span&gt;
       &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;ukwest'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You will notice that the variable &lt;strong&gt;names&lt;/strong&gt; in each yaml template are aligned with the values used on the terraform configuration files earlier: &lt;code&gt;~{environment}~&lt;/code&gt;, &lt;code&gt;~{location}~&lt;/code&gt;, &lt;code&gt;~{terraformBackendRG}~&lt;/code&gt;, &lt;code&gt;~{terraformBackendSA}~&lt;/code&gt;. Also note that our production variable file has a different location specified: &lt;code&gt;ukwest&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#devops-pipeline"&gt;
  &lt;/a&gt;
  DevOps Pipeline
&lt;/h2&gt;

&lt;p&gt;Under my repo path: &lt;code&gt;\terraform-azurerm-resourcegroup\pipelines\&lt;/code&gt;, I have created the following three yaml pipelines (one for each environment):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;dev_deployment.yml&lt;/strong&gt; (Deploy dev RG)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/dev_deployment.yml&lt;/span&gt;

   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment-Dev-RG-$(Rev:rr)&lt;/span&gt;
   &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;

   &lt;span class="c1"&gt;### ADO variable group linked to SSH secure vars ###&lt;/span&gt;
   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/common_vars.yml&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/dev_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_DEPLOY_DEV_RG&lt;/span&gt;
       &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy Dev ResourceGroup&lt;/span&gt;
       &lt;span class="na"&gt;dependsOn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
       &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_Deploy_Dev_Rg&lt;/span&gt;
           &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform - Dev - RG&lt;/span&gt;
           &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Azure Pipelines&lt;/span&gt;
             &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;windows-latest&lt;/span&gt;
           &lt;span class="na"&gt;workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
           &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Infra-Dev&lt;/span&gt;
           &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
               &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                 &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;

                   &lt;span class="c1"&gt;### Install Terraform Version from commom_vars&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformInstaller@0&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;terraformVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ variables.terraformVersion }}&lt;/span&gt;

                   &lt;span class="c1"&gt;### replace tokens in tf and tfvars.&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;qetza.replacetokens.replacetokens-task.replacetokens@3&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Replace&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tokens&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tfvars&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tf'&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;rootDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)'&lt;/span&gt;
                       &lt;span class="na"&gt;targetFiles&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tf&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tfvars&lt;/span&gt;
                             &lt;span class="s"&gt;encoding: 'utf-8'&lt;/span&gt;
                       &lt;span class="na"&gt;actionOnMissing&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;warn'&lt;/span&gt;
                       &lt;span class="na"&gt;keepToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
                       &lt;span class="na"&gt;tokenPrefix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;~{'&lt;/span&gt;
                       &lt;span class="na"&gt;tokenSuffix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;}~'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Init&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendServiceArm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmResourceGroupName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendRG&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmStorageAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendSA&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmContainerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;tfstate'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Infra_${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.environment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}_rg.tfstate'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Plan&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;plan'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;commandOptions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--out=$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/plan.tfplan'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Apply&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Apply&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;apply'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;uat_deployment.yml&lt;/strong&gt; (Deploy uat RG)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/uat_deployment.yml&lt;/span&gt;

   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment-UAT-RG-$(Rev:rr)&lt;/span&gt;
   &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;

   &lt;span class="c1"&gt;### ADO variable group linked to SSH secure vars ###&lt;/span&gt;
   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/common_vars.yml&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/uat_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_DEPLOY_UAT_RG&lt;/span&gt;
       &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy Uat ResourceGroup&lt;/span&gt;
       &lt;span class="na"&gt;dependsOn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
       &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_Deploy_Uat_Rg&lt;/span&gt;
           &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform - Uat - RG&lt;/span&gt;
           &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Azure Pipelines&lt;/span&gt;
             &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;windows-latest&lt;/span&gt;
           &lt;span class="na"&gt;workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
           &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Infra-Uat&lt;/span&gt;
           &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
               &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                 &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;

                   &lt;span class="c1"&gt;### Install Terraform Version from commom_vars&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformInstaller@0&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;terraformVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ variables.terraformVersion }}&lt;/span&gt;

                   &lt;span class="c1"&gt;### replace tokens in tf and tfvars.&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;qetza.replacetokens.replacetokens-task.replacetokens@3&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Replace&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tokens&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tfvars&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tf'&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;rootDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)'&lt;/span&gt;
                       &lt;span class="na"&gt;targetFiles&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tf&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tfvars&lt;/span&gt;
                             &lt;span class="s"&gt;encoding: 'utf-8'&lt;/span&gt;
                       &lt;span class="na"&gt;actionOnMissing&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;warn'&lt;/span&gt;
                       &lt;span class="na"&gt;keepToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
                       &lt;span class="na"&gt;tokenPrefix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;~{'&lt;/span&gt;
                       &lt;span class="na"&gt;tokenSuffix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;}~'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Init&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendServiceArm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmResourceGroupName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendRG&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmStorageAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendSA&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmContainerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;tfstate'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Infra_${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.environment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}_rg.tfstate'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Plan&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;plan'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;commandOptions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--out=$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/plan.tfplan'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Apply&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Apply&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;apply'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;prod_deployment.yml&lt;/strong&gt; (Deploy prod RG)
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;   &lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/prod_deployment.yml&lt;/span&gt;

   &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment-Prod-RG-$(Rev:rr)&lt;/span&gt;
   &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;none&lt;/span&gt;

   &lt;span class="c1"&gt;### ADO variable group linked to SSH secure vars ###&lt;/span&gt;
   &lt;span class="na"&gt;variables&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/common_vars.yml&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;variables/prod_vars.yml&lt;/span&gt;

   &lt;span class="na"&gt;stages&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
     &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_DEPLOY_PROD_RG&lt;/span&gt;
       &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deploy Prod ResourceGroup&lt;/span&gt;
       &lt;span class="na"&gt;dependsOn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
       &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
         &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;deployment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TF_Deploy_Prod_Rg&lt;/span&gt;
           &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform - Prod - RG&lt;/span&gt;
           &lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Azure Pipelines&lt;/span&gt;
             &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;windows-latest&lt;/span&gt;
           &lt;span class="na"&gt;workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;clean&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
           &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Infra-Prod&lt;/span&gt;
           &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
             &lt;span class="na"&gt;runOnce&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
               &lt;span class="na"&gt;deploy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                 &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;

                   &lt;span class="c1"&gt;### Install Terraform Version from commom_vars&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformInstaller@0&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;terraformVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ variables.terraformVersion }}&lt;/span&gt;

                   &lt;span class="c1"&gt;### replace tokens in tf and tfvars.&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;qetza.replacetokens.replacetokens-task.replacetokens@3&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Replace&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tokens&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tfvars&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tf'&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;rootDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)'&lt;/span&gt;
                       &lt;span class="na"&gt;targetFiles&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tf&lt;/span&gt;
                         &lt;span class="s"&gt;${{ variables.rootDirName }}\*.tfvars&lt;/span&gt;
                             &lt;span class="s"&gt;encoding: 'utf-8'&lt;/span&gt;
                       &lt;span class="na"&gt;actionOnMissing&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;warn'&lt;/span&gt;
                       &lt;span class="na"&gt;keepToken&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
                       &lt;span class="na"&gt;tokenPrefix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;~{'&lt;/span&gt;
                       &lt;span class="na"&gt;tokenSuffix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;}~'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Init&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Init&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;init'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendServiceArm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmResourceGroupName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendRG&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmStorageAccountName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.terraformBackendSA&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmContainerName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;tfstate'&lt;/span&gt;
                       &lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Infra_${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.environment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}_rg.tfstate'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Plan&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Plan&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;plan'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;commandOptions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;--out=$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/plan.tfplan'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;

                   &lt;span class="c1"&gt;### Terraform Apply&lt;/span&gt;
                   &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformTaskV2@2&lt;/span&gt;
                     &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Terraform Apply&lt;/span&gt;
                     &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                       &lt;span class="na"&gt;provider&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;azurerm'&lt;/span&gt;
                       &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;apply'&lt;/span&gt;
                       &lt;span class="na"&gt;workingDirectory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(System.DefaultWorkingDirectory)/${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.rootDirName&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
                       &lt;span class="na"&gt;environmentServiceNameAzureRM&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.AzureServiceConnection&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we can configure each pipeline, which will consume its own corresponding variable template file as well as a common variable template file, but use the same terraform configuration code to dynamically deploy the same resource group but each having its own state file, name and tags dynamically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tzXvVrwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/pipelines.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tzXvVrwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/pipelines.png" alt="pipelines"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also remember to set the environments in Azure DevOps as shown on each of our yaml pipelines e.g.:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/dev_deployment.yml#L21-L21&lt;/span&gt;

&lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Infra-Dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQOO8Tf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/environments.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQOO8Tf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/environments.png" alt="environments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After each pipeline has been run, you will notice that our terraform configuration was dynamically changed each time with the &lt;strong&gt;replace tokens task&lt;/strong&gt;, replacing the values on our &lt;strong&gt;TF&lt;/strong&gt; and &lt;strong&gt;TFVARS&lt;/strong&gt; files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9TSNoUU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/replace_token.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9TSNoUU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/replace_token.png" alt="replace_token"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll also see the each resource group have been dynamically created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wL26jO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/rg_dep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wL26jO1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/rg_dep.png" alt="rg_dep"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Remember we changed prod to be in the UK West region on our variable template file for prod.&lt;/p&gt;

&lt;p&gt;Also note that each of the deployments have their own unique state file based on the environment as depicted on each of the yaml pipelines and declared in the variable files e.g.:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code/terraform-azurerm-resourcegroup/pipelines/dev_deployment.yml#L58-L58&lt;/span&gt;

&lt;span class="na"&gt;backendAzureRmKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Infra_${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;variables.environment&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}_rg.tfstate'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nQu-n3ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/state.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nQu-n3ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/DevOps-Replace-Tokens/assets/state.png" alt="state"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/DevOps-Replace-Tokens/code"&gt;Github&lt;/a&gt; page. ❤️&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__620034"&gt;
  
    .ltag__user__id__620034 .follow-action-button {
      background-color: #0cbb58 !important;
      color: #000000 !important;
      border-color: #0cbb58 !important;
    }
  
    &lt;a href="/pwd9000" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Amb4rEJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L_SDLOmq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620034/93be2c72-3a13-478e-8af1-a4bedc1b2331.jpeg" alt="pwd9000 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pwd9000"&gt;Marcel.L&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pwd9000"&gt;Cloud Solutions Architect and DevOps enthusiast.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Creating a Helm Chart for Grafana</title>
      <author>Suraj Warbhe</author>
      <pubDate>Thu, 26 Aug 2021 07:32:45 +0000</pubDate>
      <link>https://dev.to/surajwarbhe/creating-a-helm-chart-for-grafana-3055</link>
      <guid>https://dev.to/surajwarbhe/creating-a-helm-chart-for-grafana-3055</guid>
      <description>&lt;h1&gt;
  &lt;a href="#whats-minikube-"&gt;
  &lt;/a&gt;
  What's Minikube ?
&lt;/h1&gt;

&lt;p&gt;minikube is a tool that lets you run Kubernetes locally. minikube runs a single-node Kubernetes cluster on your personal computer (including Windows, macOS and Linux PCs) so that you can try out Kubernetes, or for daily development work.&lt;/p&gt;

&lt;p&gt;🔸 Start the Minikube&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube start --vm-driver=none
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Our single node cluster is ready to use so run the below command to check the minikube status&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 you will get output such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1\minikube status
minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Setup has been completed...&lt;/strong&gt;&lt;br&gt;
But before creating it, let's try to understand &lt;strong&gt;Helm&lt;/strong&gt; and &lt;strong&gt;Grafana&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#whats-grafana-"&gt;
  &lt;/a&gt;
  What's Grafana ?
&lt;/h1&gt;

&lt;p&gt;Grafana is a multi-platform open source analytics and interactive visualization web application. It provides charts, graphs, and alerts for the web when connected to supported data sources and End users can create complex monitoring dashboards using interactive query builders. Grafana is divided into a front end and back end, written in TypeScript and Go, respectively.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-helm"&gt;
  &lt;/a&gt;
  What is Helm?
&lt;/h1&gt;

&lt;p&gt;In simple terms, Helm is a package manager for Kubernetes. Helm is the K8s equivalent of yum or apt. Helm deploys charts, which you can think of as a packaged application. It is a collection of all your versioned, per-configured application resources which can be deployed as one unit. You can then deploy another version of the chart with a different set of configuration.&lt;/p&gt;

&lt;p&gt;Helm helps in three key ways:&lt;br&gt;
🔷 Improves productivity&lt;br&gt;
🔷 Reduces the complexity of deployments of micro services&lt;br&gt;
🔷 Enables the adaptation of cloud native applications&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#why-we-need-helms"&gt;
  &lt;/a&gt;
  Why we need Helms?
&lt;/h1&gt;

&lt;p&gt;Writing and maintaining Kubernetes YAML manifests for all the required Kubernetes objects can be a time-consuming and tedious task. For the simplest of deployments, you would need at least 3 YAML manifests with duplicated and hard-coded values. Helm simplifies this process and creates a single package that can be advertised to your cluster.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-are-charts"&gt;
  &lt;/a&gt;
  What are Charts?
&lt;/h1&gt;

&lt;p&gt;In Kubernetes, we package all the running resources in a zip file known as the chart. A Helm chart can contain any number of Kubernetes objects, all of which are deployed as part of the chart. &lt;strong&gt;A Helm chart will usually contain at least a Deployment and a Service, but it can also contain an Ingress, Persistent Volume Claims, or any other Kubernetes object.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#installing-helm"&gt;
  &lt;/a&gt;
  Installing Helm
&lt;/h1&gt;

&lt;p&gt;🔷 Helm had the client-server architecture till version 2, We have to need to install a server-side program Tiller in the Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;🔷 In version 3 helm provides more facilities i.e. install helm on the client-side only. It provides more security than version 2. We can install helm in Mac, Windows, and Linux.&lt;/p&gt;

&lt;p&gt;🔷 The URL where you can download helm according to your operating system. &lt;a href="https://github.com/helm/helm/releases"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔷 In windows after downloading the helm, we got a zip file,&lt;br&gt;
Extract the zip and go to folder that will come after extracting&lt;/p&gt;

&lt;p&gt;🔷 Copy the path and add it into the environment variable because in the command line everywhere we can do access helm.&lt;/p&gt;

&lt;p&gt;🔷 To check the helm installation run the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 you will get output such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1&amp;gt;helm version
version.BuildInfo{Version:"v3.6.3", GitCommit:"d506314abfb5d21419df8c7e7e68012379db2354", GitTreeState:"clean", GoVersion:"go1.16.5"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After successfully done the installation part, let’s create a chart for Grafana.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#create-a-helm-chart"&gt;
  &lt;/a&gt;
  Create a Helm Chart
&lt;/h1&gt;

&lt;p&gt;let's create a new Helm Chart from the scratch. Helm created a bunch of files for you that are usually important for a production-ready service in Kubernetes. To concentrate on the most important parts, we can remove a lot of the created files. Let’s go through the only required files for this example.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ejBxD0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7p9BafMf--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bg2vbgdbu7687novaki.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ejBxD0f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7p9BafMf--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bg2vbgdbu7687novaki.jpg" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔸 Create a Helm Chart for Grafana.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir grafana
cd grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 But here we need a project file that is called Chart.yaml and contains all the metadata information.&lt;br&gt;
🔸 So, create this file. Also, C should be capital in the Chart.yaml.&lt;br&gt;
&lt;strong&gt;For Windows:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;notepad Chart.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;For Linux:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vim Chart.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Write the below code inside Chart.yaml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: v1
name: Grafana
description: A Helm chart to setup Grafana
type: application
version: 0.1.0
appVersion: 0.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Make a templates folder inside grafana and go inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir templates
cd templates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 You can use my image to download Docker image of Grafana.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/repository/docker/surajwarbhe/grafana"&gt;https://hub.docker.com/repository/docker/surajwarbhe/grafana&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;🔸 Use below command to pull my docker image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker push surajwarbhe/grafana:v1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Use this command to create a code of the deployment.yaml file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl create deployment grafana --image=surajwarbhe/grafana:v1 --dry-run -o yaml &amp;gt; deployment.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 The output should be similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1\grafana\templates&amp;gt;kubectl create deployment grafana --image=surajwarbhe/grafana:v1 --dry-run -o yaml &amp;gt; deployment.yaml
W0826 09:59:25.756492    1640 helpers.go:535] --dry-run is deprecated and can be replaced with --dry-run=client.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Go outside the grafana directory and install the helm chart.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd 
helm install grafana grafana/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Here grafana is the name of Helm Chart and grafana/ is the path of the chart.&lt;br&gt;
💠 After running above command, the output should be similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1&amp;gt;helm install grafana grafana/
NAME: grafana
LAST DEPLOYED: Thur Aug 26 10:25:45 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Now again go inside grafana/templates and use the below command to create a code of the service.yaml file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd grafana/templates/
kubectl expose deployment grafana --port=3000 --type=NodePort --dry-run -o yaml &amp;gt; service.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 The output should be similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1\grafana\templates&amp;gt;kubectl expose deployment grafana --port=3000 --type=NodePort --dry-run -o yaml &amp;gt; service.yaml
W0826 10:03:55.911918    6892 helpers.go:535] --dry-run is deprecated and can be replaced with --dry-run=client.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 After it, run the below command for exposing the grafana pod.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f service.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 To ensure your pod is working well with the below commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods
kubectl get deployment
kubectl get svc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 After running these commands, the output should be similar to the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp2gbEA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/file/d/1P7aZ-sBT_NxjsOpOj7TuENWYoxH6q5cA/view%3Fusp%3Dsharing" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp2gbEA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/file/d/1P7aZ-sBT_NxjsOpOj7TuENWYoxH6q5cA/view%3Fusp%3Dsharing" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔸 You can check the list of the helm you have using the &lt;strong&gt;helm list&lt;/strong&gt; command. Now we can check the pods in which slaves are running in the Kubernetes cluster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Asus_1&amp;gt;helm list
NAME            NAMESPACE       REVISION        UPDATED                                         STATUS          CHART                   APP VERSION
grafana         default         1               2021-08-25 09:38:04.967518153 -0400 -0400       deployed        Grafana-0.1.0           0.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 After running the command pick the port number that has been exposed Grafana service. And also run one more command if you run a single node cluster minikube.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;minikube ip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's check that Grafana is working fine or not. For this, you have to take the &lt;code&gt;minikube_ip&lt;/code&gt; and &lt;code&gt;port no.&lt;/code&gt; of your pod.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;eg. 192.168.99.102:30147&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;💠 After browsing it, login page will pop up. So login with by-default username and password admin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_0yjuyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75n32wtzyfmf668o5fvi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_0yjuyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75n32wtzyfmf668o5fvi.png" alt="192.168.56.1 - Google Chrome 26-08-2021 10_13_32 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔸 After logging you will get the page for changing the username and password, So you can if you want.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#packing-resources-inside-the-helm-chart"&gt;
  &lt;/a&gt;
  Packing resources inside the Helm Chart.
&lt;/h1&gt;

&lt;p&gt;So helm chart ready inside the grafana/ directory, but we can’t publish it as it is. Firstly, we have to create a package for this helm chart.&lt;/p&gt;

&lt;p&gt;🔸 Create one directory named charts. Make sure this directory should be inside grafana directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir charts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔸 Now, run the following command to packages the chart and store it inside the charts/ directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm package C:\Users\Asus_1\grafana -d charts\
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💠 you will get output something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Successfully packaged chart and saved it to: charts/Grafana-0.1.0.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Creating an index.yaml file&lt;/strong&gt;&lt;br&gt;
For every Helm repository, we must require an &lt;code&gt;index.yaml&lt;/code&gt; file. The &lt;code&gt;index.yaml&lt;/code&gt; file contains the information about the chart that is present inside the current repository/directory.&lt;/p&gt;

&lt;p&gt;🔸 For generating &lt;code&gt;index.yaml&lt;/code&gt; file inside charts/ directory, run following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo index charts/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#pushing-the-charts-in-the-github-repository"&gt;
  &lt;/a&gt;
  Pushing the charts in the GitHub repository
&lt;/h1&gt;

&lt;p&gt;🔸 Create a new repository in GitHub and upload charts/ source code into the GitHub repository.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ot48-yZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vkcabyxqibcevcdy2u7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ot48-yZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vkcabyxqibcevcdy2u7.png" alt="surajwarbhe_grafana - Google Chrome 26-08-2021 10_20_11 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hosting-chart-using-github-pages"&gt;
  &lt;/a&gt;
  Hosting Chart using Github Pages
&lt;/h1&gt;

&lt;p&gt;🔸 We must require a URL where we had hosted our helm chart for publishing the Helm chart on &lt;a href="//artifacthub.io/."&gt;artifacthub.io/.&lt;/a&gt; 🔸 One of the ways to host the charts is using GitHub pages.&lt;br&gt;
🔸 So, we will first host our charts using GitHub pages.&lt;br&gt;
🔸 Go to the settings of your &lt;code&gt;Github&lt;/code&gt; repository and go down where you can see the GitHub Pages section.&lt;br&gt;
🔸 Select &lt;code&gt;main&lt;/code&gt; as a branch and click on save.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8oiYVJgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2mgkgewnuz5ifpvpq7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8oiYVJgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2mgkgewnuz5ifpvpq7r.png" alt="surajwarbhe_grafana - Google Chrome 26-08-2021 10_22_45 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#publishing-helm-chart-on-artifact-hub"&gt;
  &lt;/a&gt;
  Publishing helm chart on artifact hub
&lt;/h1&gt;

&lt;p&gt;🔸 Go to this URL &lt;a href="//artifacthub.io/"&gt;artifacthub.io/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laIsNuQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A0aR2MQF1N12Wpy8rb5F81Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laIsNuQi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/875/1%2A0aR2MQF1N12Wpy8rb5F81Q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔸 Sign in with your account if you have otherwise you have to need to create an account.&lt;/p&gt;

&lt;p&gt;🔸 After signed in successfully, In the right top corner click on the face you have seen.&lt;/p&gt;

&lt;p&gt;🔸 Now click on &lt;code&gt;profile icon &amp;gt; control Panel&amp;gt; Add repository.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Make sure your repository's url should be like &lt;code&gt;https://username.github.io/repository_name/chart/&lt;/code&gt; when you're adding repository in &lt;code&gt;ArtifactHub&lt;/code&gt;. Otherwise, it can create some issues related to url.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kYEbuB_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4wnbl3xuocr69dp70ne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kYEbuB_t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4wnbl3xuocr69dp70ne.png" alt="surajwarbhe_grafana - Google Chrome 26-08-2021 10_26_17 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔸 After giving the required information to your Helm repository, click on &lt;code&gt;Add&lt;/code&gt;. if you had provided the right information then it will create a Helm repository.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3KbPLs_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmb9ff1lep6wivr7yacw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3KbPLs_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmb9ff1lep6wivr7yacw.png" alt="surajwarbhe_grafana - Google Chrome 26-08-2021 10_26_25 AM"&gt;&lt;/a&gt;&lt;br&gt;
So, we had successfully published our Helm chart to the ArtifactHub.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this tutorial, you created a helm chart for installing GRAFANA and How to upload our repository on ArtifactHub.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep learning keep sharing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Thank You&lt;/strong&gt; &lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>github</category>
      <category>devops</category>
    </item>
    <item>
      <title>The one and only SEO checklist you will ever need</title>
      <author>Kars van Iersel</author>
      <pubDate>Thu, 26 Aug 2021 07:11:35 +0000</pubDate>
      <link>https://dev.to/karsvaniersel/the-one-and-only-seo-checklist-you-will-ever-need-34k3</link>
      <guid>https://dev.to/karsvaniersel/the-one-and-only-seo-checklist-you-will-ever-need-34k3</guid>
      <description>&lt;p&gt;If you are an SEO newbie or have some experience but would like to get a step-by-step SEO guide on how to avoid common website promotion mistakes, here's a list of SEO tasks based on best practices that you should take into account when creating and optimising your websites.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;So you got your fancy website or blog up and running, but now you need to rank high in Google. The question is always how do I make sure I rank so that my pages get found by Google? Well Look no further, I've compiled a complete step-by-step SEO checklist of SEO tasks based on the best practices. I guarantee you that you will see results if you can check all of them!&lt;/p&gt;

&lt;p&gt;I'm currently working on a Notion board with an actionable checklist that you guys can duplicate and use! I will update this post once I'm done with that. Consider checking back on this page for the Notion link, or follow me on Twitter or subscribe to my newsletter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-keyword-research"&gt;
  &lt;/a&gt;
  1. Keyword research 🔬
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#analyse-competitor-keywords"&gt;
  &lt;/a&gt;
  Analyse competitor keywords
&lt;/h3&gt;

&lt;p&gt;To begin the process of gathering keywords for your website, start by researching a competitor's page that ranks well in search engines. This is because these pages may contain highly valuable keywords already proven to work on Google and other search engines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://moz.com/seo-competitor-analysis"&gt;The Guide to SEO Competitor Analysis by Moz&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.semrush.com/blog/how-to-do-seo-competitive-analysis/"&gt;How to Do an SEO Competitive Analysis by SEMrush&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://ahrefs.com/blog/competitive-analysis/"&gt;How to Do an SEO Competitor Analysis [Template Included] by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.advancedwebranking.com/seo-competitor-analysis/"&gt;Your Essential Guide to Crushing Competition [w/ Template] by Advanced Web Ranking&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://databox.com/seo-competitive-analysis-tips-and-tools"&gt;The SEO Competitive Analysis Tools &amp;amp; Tips 100+ Marketers Rely On Most by Databox&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#collect-core-keywords"&gt;
  &lt;/a&gt;
  Collect core keywords
&lt;/h3&gt;

&lt;p&gt;A semantic core of a website is the collection of keywords that describes what you're selling and helps gain top search results. You describe your website by these core keywords.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://ahrefs.com/blog/keyword-research/"&gt;How to Do Keyword Research for SEO by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://moz.com/keyword-research-guide"&gt;The SEO Keyword Research Master Guide by Moz&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.semrush.com/blog/keyword-research-guide-for-seo/"&gt;The 2021 Keyword Research Guide for SEO by SEMrush&lt;/a&gt; 
&lt;a href="https://www.searchenginejournal.com/keyword-research-seo-beginners-guide/379386/"&gt;- How to Do Keyword Research for SEO: A Step-by-Step Guide by Search Engine Journal
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://mangools.com/blog/keyword-research/"&gt;Keyword research for SEO by Mangools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://backlinko.com/keyword-research"&gt;Keyword Research: The Definitive Guide (2021) by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://ftf.agency/keyword-research-now/"&gt;How To Do Keyword Research in 2020 by Nick Eubank&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.semrush.com/academy/courses/keyword-research-course-with-greg-gifford"&gt;Keyword Research Course with Greg Gifford by SEMrush&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=ek0yCkmfVuM"&gt;Keyword Research for SEO Today: Guide, Steps, Tips, Tools, Mistakes and more! by Crawling Mondays&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#keyword-mapping"&gt;
  &lt;/a&gt;
  Keyword mapping
&lt;/h3&gt;

&lt;p&gt;Keyword mapping is the process of breaking down a list of keywords into semantic clusters that allows you to distribute them between your site's pages. This can help avoid keyword cannibalization, which occurs when several pages on one website compete for the same words in search results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://riseatseven.com/blog/keyword-mapping-guide/"&gt;A beginner’s guide to keyword mapping (with template)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.semrush.com/blog/guide-keyword-mapping-improve-seo-content/"&gt;A Four-Step Guide on Keyword Mapping To Improve Your SEO and Content Strategy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.digitalthirdcoast.com/blog/create-successful-keyword-mapping-strategy"&gt;How to Create a Successful Keyword Mapping Strategy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.aleydasolis.com/en/search-engine-optimization/keyword-mapping-cheatsheet/"&gt;The Keywords Mapping Cheatsheet For Different Types of Sites [with a Google Sheets Included] &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.searchenginejournal.com/keyword-mapping-seo-success/388082/"&gt;How to Leverage Keyword Mapping for SEO Success&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-onpage-seo-optimisation"&gt;
  &lt;/a&gt;
  2. On-page SEO optimisation 📈
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#install-a-web-analytics-tool-and-set-up-your-goals"&gt;
  &lt;/a&gt;
  Install a web analytics tool and set up your goals
&lt;/h3&gt;

&lt;p&gt;Web analytics tools track how many visitors your website is receiving and what these users are doing on the site. To measure performance, you need to set goals for different user actions (such as registrations or transactions). Goals help define marketing strategies by identifying key objectives that can be adjusted over time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://moz.com/blog/smart-seo-goals"&gt;How Do You Set Smart SEO Goals for Your Team/Agency/Project? by Moz
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://databox.com/how-to-set-seo-goals"&gt;How to Set SEO Goals for Your Team (That Actually Drive Action) by Elise Dopson
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kevin-indig.com/blog/the-roi-of-seo-how-to-predict-traffic-and-revenue/"&gt;The ROI of SEO – how to predict traffic and revenue by Kevin Indig
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.searchenginejournal.com/set-achieve-realistic-seo-goals/288839/"&gt;How to Set &amp;amp; Achieve Realistic SEO Goals by Search Engine Journal&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.botify.com/blog/seo-okrs"&gt;OKRs for SEO: How to Set SEO Goals That Increase Your Value &amp;amp; Get You Greater Investment by Botify
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#add-your-website-to-google-search-console"&gt;
  &lt;/a&gt;
  Add your website to Google Search Console
&lt;/h3&gt;

&lt;p&gt;Google Search Console is a free tool that tracks website rankings and helps reveal indexed pages. It also shows errors on the site, which can give insight into how to improve it for search engines to rank it higher.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://search.google.com/search-console/about"&gt;Google Search Console Coverage, URL Inspection &amp;amp; Crawl Stats Reports by Google
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://search.google.com/search-console/about"&gt;Google Search Console Performance Report by Google&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#register-a-local-business-on-google-maps"&gt;
  &lt;/a&gt;
  Register a local business on Google Maps
&lt;/h3&gt;

&lt;p&gt;Google Maps is a useful tool for finding local businesses. To show up on Google Maps, you must complete the registration process by filling out all necessary information and verifying that your business exists in real life. Doing so will boost your visibility within search results relevant to users of certain areas, which should lead to increased website traffic from people looking at those specific regions who are interested in what you're selling!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.google.com/business/"&gt;Google My Business by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.brightlocal.com/free-local-seo-tools/"&gt;BrightLocal's Free Local SEO Tools: Local Listings Health Scanner, Local Search Results Checker, and more! by BrightLocal&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gsuite.google.com/marketplace/app/%F0%9F%A4%96_postamatic/460920737213"&gt;Postamatic: Build your Google My Business Posts, Q + As, and manage GMB Reviews via the Google My Business API by Two Octobers + AgencyAutomaters&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-a-logical-site-structure"&gt;
  &lt;/a&gt;
  Create a logical site structure
&lt;/h3&gt;

&lt;p&gt;The structure of the website is what determines how easy it is to find all pages on a site. Organizing each section, subsection, and page in an open-ended way makes it easier for bots that search engines use to crawl through your site and index every single one of its pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://ahrefs.com/blog/internal-links-for-seo/"&gt;Internal Links for SEO: An Actionable Guide by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kevin-indig.com/blog/internal-linking-the-full-guide-to-internal-link-axioms/"&gt;Internal Linking for SEO: best practices, strategies, axioms by Kevin Indig&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.semrush.com/blog/internal-links-guide-to-building-strategy-that-works/"&gt;Internal Links: A Guide to Building a Strategy that Works by SEMrush&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://backlinko.com/hub/seo/internal-links"&gt;Internal Linking Guide by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sitebulb.com/resources/guides/internal-link-optimisation-for-seo/"&gt;Internal Link Optimisation for SEO by Sitebulb&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yoast.com/internal-linking-for-seo-why-and-how/"&gt;Internal linking for SEO: Why and how? by Yoast&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#secure-the-website-by-migrating-it-to-https"&gt;
  &lt;/a&gt;
  Secure the website by migrating it to HTTPS
&lt;/h3&gt;

&lt;p&gt;HTTPS protocol is an extension of the HTTP developed for safe communication. It's needed to maintain site security so no information such as visitor actions or their contact details are retrievable. The presence of this HTTPS has been influential in Google search rankings since 2014, and its influence on these rankings will likely grow over time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#define-the-preferred-domain-www-or-nonwww"&gt;
  &lt;/a&gt;
  Define the preferred domain (www or non-www)
&lt;/h3&gt;

&lt;p&gt;Search engines will see example.com and example.com as separate pages, so defining the preferred domain is useful in avoiding page duplication since it allows you to specify which one should be indexed by search engines first if both are found on a website's link list or sitemap file for instance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-robotstxt-file"&gt;
  &lt;/a&gt;
  Create a robots.txt file
&lt;/h3&gt;

&lt;p&gt;When building a website, the robots.txt file is used to tell search engine crawlers which pages are and aren't indexed on our site. For example, we wouldn't want any sensitive information or internal documents being crawled as it could cause damage if they were viewed publicly; therefore, these specific pages should be blocked from access by bots for them not to appear on Google Search results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-an-xml-sitemap"&gt;
  &lt;/a&gt;
  Create an XML sitemap
&lt;/h3&gt;

&lt;p&gt;The sitemap.xml file is a document in the Extensible Markup Language (XML) that lists all of your website's URLs to help search engine robots index them faster. Sitemaps are used on websites where content changes frequently or has lots of pages and helps Google find those quickly so their users can have better browsing experiences with minimal time waiting for results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/docs/advanced/sitemaps/overview"&gt;Learn about sitemaps by Google&lt;/a&gt; 
&lt;a href="https://backlinko.com/hub/seo/sitemaps"&gt;XML Sitemaps by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oncrawl.com/oncrawl-seo-thoughts/optimize-xml-sitemap/"&gt;How to Optimize Your XML Sitemap to Improve Your SEO by OnCrawl
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.semrush.com/blog/xml-sitemap/"&gt;How to Create an XML Sitemap: Tips &amp;amp; Best Practices by SEMRush&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.searchenginejournal.com/xml-sitemap-best-practices/237649/"&gt;How to Optimize XML Sitemaps: 13 SEO Best Practices by Search Engine Journal&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#set-a-language-with-hreflang-attribute"&gt;
  &lt;/a&gt;
  Set a language with .hreflang attribute
&lt;/h3&gt;

&lt;p&gt;The hreflang attribute is used to define a website's language or regional URL in case the site has translated versions. This tells Google what URLs to display for specific regions and which version of your content they should index during crawls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/docs/advanced/crawling/managing-multi-regional-sites"&gt;Managing multi-regional and multilingual sites by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.onely.com/blog/ultimate-guide-to-international-seo/"&gt;The Ultimate Guide to International SEO by Onely&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.slideshare.net/aleydasolis/international-seo-for-ecommerce-websites-sejlive-sejesummit"&gt;International SEO for E-Commerce Websites by Aleyda Solis&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.semrush.com/blog/7-ways-to-fail-at-international-seo/"&gt;7 Ways to Fail at International SEO by Aleyda Solis&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.aleydasolis.com/en/search-engine-optimization/avoiding-hreflang-issues-by-following-a-6-steps-implementation-process/"&gt;An Hreflang Implementation Guide: How to add and Implement Hreflang Tags by Aleyda Solis&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-seofriendly-urls"&gt;
  &lt;/a&gt;
  Create SEO-friendly URLs
&lt;/h3&gt;

&lt;p&gt;The SEO-friendly URL is more readable and includes keywords that are recognized by search engine robots. This has a positive effect on the page’s ranking because it helps both users and bots understand what they can find on this webpage quickly. For example: /seo-checklist vs. /xn-sEoChecKListeX123534098/. /seo-checklist/ is the type of friendly URL you want to aim for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-breadcrumb-navigation"&gt;
  &lt;/a&gt;
  Use breadcrumb navigation
&lt;/h3&gt;

&lt;p&gt;Breadcrumbs show a user how they moved around between the pages on your website so that he/she does not get lost. They are also helpful to search engines as it clarifies the hierarchy of all webpages, and can be shown in snippets within SERPs (Search Engine Results Pages).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-your-seo-with-userfriendly-interlinking"&gt;
  &lt;/a&gt;
  Improve your SEO with user-friendly interlinking
&lt;/h3&gt;

&lt;p&gt;The purpose of internal links is to make a website more navigable and structured. They can direct the user towards other parts of the site, establish information hierarchy by pointing out what content comes first or last in an article, spread link weight across pages that are related so it does not all rest on one page alone (this enhances search engine optimization), and ultimately give your online presence authority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://ahrefs.com/blog/internal-links-for-seo/"&gt;Internal Links for SEO: An Actionable Guide by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.kevin-indig.com/blog/internal-linking-the-full-guide-to-internal-link-axioms/"&gt;Internal Linking for SEO: best practices, strategies, axioms by Kevin Indig&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.semrush.com/blog/internal-links-guide-to-building-strategy-that-works/"&gt;Internal Links: A Guide to Building a Strategy that Works by SEMrush&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://backlinko.com/hub/seo/internal-links"&gt;Internal Linking Guide by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sitebulb.com/resources/guides/internal-link-optimisation-for-seo/"&gt;Internal Link Optimisation for SEO by Sitebulb&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yoast.com/internal-linking-for-seo-why-and-how/"&gt;Internal linking for SEO: Why and how? by Yoast&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#check-http-status-codes"&gt;
  &lt;/a&gt;
  Check HTTP status codes
&lt;/h3&gt;

&lt;p&gt;When a web browser requests information from the server, it receives an HTTP status code in response. These codes are divided into classes and tell browsers if everything goes well or not; they let you know whether all pages of your website function as expected. Search engines may lower rankings for websites with many incorrect responses that have wrong status codes since this signals to them there is something suspicious going on at these sites--they're probably trying to hide their low-quality content by sending back fake statuses instead of real ones!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-canonical-urls"&gt;
  &lt;/a&gt;
  Use Canonical URLs
&lt;/h3&gt;

&lt;p&gt;Duplicate content is a problem for websites that want to appear unique in search engines. A canonical tag tells robots which page they should index and rank higher, so you can avoid the penalty of duplicate pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-the-markup-validity-of-web-documents-in-html"&gt;
  &lt;/a&gt;
  Check the markup validity of web documents in HTML
&lt;/h3&gt;

&lt;p&gt;The validity of your website's HTML code is extremely important in terms of search engine optimization. If it contains a lot of errors, such as deprecated tags or misspelled words, then this can damage how well the website ranks on Google and other major search engines.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fix-broken-links"&gt;
  &lt;/a&gt;
  Fix broken links
&lt;/h3&gt;

&lt;p&gt;Broken links are detrimental to the user experience, and as a result, they can hurt your website's signals that search engine robots look at. When non-working links discourage users from exploring further on your site, it means an error for search engines. If there is a great number of such errors, then this tells them you have low-quality content which will affect their overall rankings in results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mind-the-number-of-outbound-links"&gt;
  &lt;/a&gt;
  Mind the number of outbound links
&lt;/h3&gt;

&lt;p&gt;If a website has too many irrelevant links, search engines may consider it spam. For this reason, the site's rankings in search results might plummet significantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-404-error-page"&gt;
  &lt;/a&gt;
  Create a 404 error page
&lt;/h3&gt;

&lt;p&gt;Non-existing pages can occur when a page is redirected, deleted, renamed. All such non-existent pages should be sent to the 404 status code which will inform users what happened and how they need to overcome it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-the-page-load-speed"&gt;
  &lt;/a&gt;
  Improve the page load speed
&lt;/h3&gt;

&lt;p&gt;One of the most influential Google ranking factors is page load speed. It refers to how long it takes for a webpage's content and images to show up after loading on the website, which can dramatically impact whether users choose your site or another one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://web.dev/vitals/"&gt;Core Web Vitals by web.dev
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://builtvisible.com/googles-page-experience-update-and-core-web-vitals-everything-you-need-to-know/"&gt;Google’s Page Experience Update and Core Web Vitals: Everything you need to know by Builtvisible
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kinsta.com/learn/page-speed/"&gt;A Beginner’s Guide to Website Speed Optimization by Kinsta
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://seosly.com/google-page-experience-audit/"&gt;Google Page Experience Audit (15 Steps + Free Audit Template) by Olga Zarzeczna
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hallanalysis.com/2020/10/27/optimizing-for-performance-in-seo-and-speed/"&gt;Optimizing For Performance in SEO and Speed by Joe Hall&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-mobile-optimisation"&gt;
  &lt;/a&gt;
  3. Mobile optimisation 📱
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-a-responsive-version-of-your-website"&gt;
  &lt;/a&gt;
  Create a responsive version of your website
&lt;/h3&gt;

&lt;p&gt;Most of the traffic these days comes from mobile devices. Roughly 60/70% of web visitors, visit your website on a mobile device. That is why Google started using a Mobile-first type of indexing. This means that Google cares more about your mobile site than your desktop version. Making sure your website works great on mobile is one of the most important factors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/mobile-sites"&gt;Mobile Optimization Guidelines by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/mobile-sites/mobile-first-indexing"&gt;Mobile-first indexing best practices by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://backlinko.com/mobile-seo-guide"&gt;Mobile SEO: The Definitive Guide by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.slideshare.net/aleydasolis/mobile-first-seo-at-wceu"&gt;Mobile First SEO by Aleyda Solis&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yoast.com/mobile-seo-ultimate-guide/"&gt;Mobile SEO: The ultimate guide by Yoast&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://trafficthinktank.com/preparing-for-googles-mobile-only-index/"&gt;Preparing for Google’s Mobile-Only Index by Patrick Hathaway&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.semrush.com/academy/courses/mobile-seo-course-with-greg-gifford"&gt;Mobile SEO Course with Greg Gifford by SEMRush&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-content-strategy"&gt;
  &lt;/a&gt;
  4. Content strategy ✏️
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#write-unique-titles-for-each-page"&gt;
  &lt;/a&gt;
  Write unique titles for each page
&lt;/h3&gt;

&lt;p&gt;The title tag is the essential part of web page coding that determines a website's ranking on search engine result pages (SERPs). While it only takes up to 70 characters, being able to optimize your titles can make or break you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-unique-meta-descriptions-for-each-page"&gt;
  &lt;/a&gt;
  Write unique meta descriptions for each page
&lt;/h3&gt;

&lt;p&gt;Meta descriptions are snippets of content that appear in the search engines as a preview of your page. They're also an opportunity for you to tell users what they'll find on your site and whether it's relevant to their query or intent about landing pages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/docs/guides/search-gallery"&gt;Google's Search Gallery by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://moz.com/learn/seo/serp-features"&gt;What is a SERP Feature? Appearance, description and obtainability﻿ by Moz&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://komarketing.com/blog/understanding-google-serp-features-complete-guide/"&gt;Understanding Google SERP Features in 2021: The Complete Guide by Komarketing&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ignitevisibility.com/serp-features/"&gt;Ultimate Guide to Google SERP Features by John E Lincoln
&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.rankranger.com/google-serp-features-guide"&gt;Visual Guide to Google SERP Features by RankRanger&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.accuranker.com/blog/how-you-can-use-serp-features-to-boost-traffic"&gt;How You Can Use SERP Features to Boost Traffic by Accuranker&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#optimise-htags"&gt;
  &lt;/a&gt;
  Optimise H-tags
&lt;/h3&gt;

&lt;p&gt;The HTML headings in a website are important because they give search engines an indication of what the page is about. There are six different levels to choose from, all with varying degrees of importance when it comes to SEO (search engine optimization). Keywords should be distributed evenly throughout each level as this will show Google which keywords deserve more weight than others and allow them to rank accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-alt-tags-on-every-image"&gt;
  &lt;/a&gt;
  Use alt tags on every image
&lt;/h3&gt;

&lt;p&gt;The alt attribute or alt tag is an HTML attribute for a text that describes an image in detail. It must be placed directly in the image tag and not as a separate link like title tags. Alt tags help search engines quickly get a better understanding of what’s illustrated on an image, users who might otherwise have difficulty viewing images, especially those with disabilities because it will read out to them what's described on each picture that has this feature which also helps people understand why they should click into something if pictures are explaining how things work instead of just words alone whereas screen readers use these descriptions when images aren't displayed at all due to technical difficulties, etc...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/docs/advanced/guidelines/google-images"&gt;Google Images best practices by Google&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.searchenginejournal.com/on-page-seo/image-optimization/"&gt;11 Important Image SEO Tips You Need to Know by Search Engine Journal&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ahrefs.com/blog/image-seo/"&gt;Image SEO: 12 Actionable Tips (for More Organic Traffic) by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.contentkingapp.com/academy/image-seo/"&gt;Image SEO: the Ultimate Guide by ContentKing&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.iloveseo.net/how-to-optimize-your-ecommerce-for-google-images-and-visual-search/"&gt;How to optimize your Ecommerce for Google Images and Visual Search by Gianluca Fiorelli&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#optimise-content-both-for-crawlers-and-people"&gt;
  &lt;/a&gt;
  Optimise content both for crawlers and people
&lt;/h3&gt;

&lt;p&gt;Search engine robots have the user's best interest in mind. They like it when content is original and valuable, which means that keywords should be included naturally in a piece of writing instead of being stuffed into sentences just to tick boxes on an SEO checklist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/search/docs/advanced/crawling/large-site-managing-crawl-budget"&gt;Large site owner's guide to managing your crawl budget by Google
&lt;/a&gt;  - &lt;a href="https://www.contentkingapp.com/academy/crawl-budget/"&gt;Crawl budget explained by ContentKing&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.onely.com/blog/ultimate-guide-crawl-budget/"&gt;The Ultimate Guide to Crawl Budget Optimization by Onely&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yoast.com/crawl-budget-optimization/"&gt;How to optimize your crawl budget by Yoast&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.deepcrawl.com/blog/best-practice/optimize-crawl-budget-tips-examples/"&gt;An SEO’s Guide to Crawl Budget Optimisation by Deepcrawl&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.botify.com/blog/crawl-budget-optimization"&gt;All About Crawl Budget Optimization (&amp;amp; How One Site Used It to Double Organic Traffic in Under 3 Months) by Botify&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.searchenginejournal.com/technical-seo/crawl-budget/"&gt;7 Tips to Optimize Crawl Budget for SEO by Search Engine Journal&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#create-fresh-content"&gt;
  &lt;/a&gt;
  Create fresh content
&lt;/h3&gt;

&lt;p&gt;As a website owner, it is important to look at your user intent and demand so that you can meet their expectations. You need eye-catching content with relevant information for the reader to attract them as they surf through various websites online.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#develop-a-content-plan"&gt;
  &lt;/a&gt;
  Develop a content plan
&lt;/h3&gt;

&lt;p&gt;The content plan is a list of pieces that will be published on the site to help it rank higher. The updates play an important role because they work alongside SEO and make sure what's being shared online isn't just about promotion but also relevant information for users. It helps streamline the publication process by keeping track of upcoming web pages so there aren’t any delays or overlaps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-a-blog-to-your-website"&gt;
  &lt;/a&gt;
  Add a blog to your website
&lt;/h3&gt;

&lt;p&gt;Using a blog to attract, engage and convert users is important for any marketing strategy. Blogs are also an overlooked way of improving your website's search engine rankings (SERP).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-offpage-seo-optimisation"&gt;
  &lt;/a&gt;
  5. Off-page SEO optimisation 🚀
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#check-quantity-and-quality-of-sites-backlinks"&gt;
  &lt;/a&gt;
  Check quantity and quality of site's backlinks
&lt;/h3&gt;

&lt;p&gt;Backlinks from different web sources to our website play a significant role in how the site ranks on search engine results. It's important to have both quantity and quality backlinks when it comes to SEO, since having too much of one or not enough of another will impact your link profile negatively.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analyse-your-competitors-backlinks"&gt;
  &lt;/a&gt;
  Analyse your competitors' backlinks
&lt;/h3&gt;

&lt;p&gt;To understand what a backlink profile should look like, it's important to research competitors that rank highly in the SERPs.&lt;/p&gt;

&lt;p&gt;Competitor research is an integral part of a link-building strategy. Analyzing competitor backlinks helps you get insight into how your website can improve its ranking on Google search results pages. It also enables you to see exactly where opponents are gaining all their links and learn from them so that your site doesn't make similar mistakes when trying to gain rankings yourself!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-link-building-strategy"&gt;
  &lt;/a&gt;
  Create a link building strategy
&lt;/h3&gt;

&lt;p&gt;A link-building strategy is a process of prioritizing your website's links to help you get more backlinks and compete with top-ranking competitors. This may depend on how many backlinks you currently have, along with those from high competition sites'&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://moz.com/beginners-guide-to-link-building"&gt;The Beginner's Guide to Link Building by Moz&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ahrefs.com/blog/link-building/"&gt;The Beginner’s Guide to Link Building by Ahrefs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://backlinko.com/link-building"&gt;Link Building for SEO: The Definitive Guide (2021) by Backlinko&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://smart.linkresearchtools.com/linkthing/link-building/golden-rules-link-building"&gt;7 Golden Rules of Link Building for 2021 and beyond by Christoph Cemper&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mangools.com/blog/link-building-techniques-checklist/"&gt;60+ link building techniques checklist [2021 update] by Paddy Moogan&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.aira.net/link-building-book/"&gt;The Link Building Book by Gisele Navarro&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#collaborate-with-websites-by-sharing-relevant-content-within-the-industry-or-niche"&gt;
  &lt;/a&gt;
  Collaborate with websites by sharing relevant content within the industry or niche
&lt;/h3&gt;

&lt;p&gt;One of the most important factors to consider when looking for backlinks is if your host website has a related topic. If it does, then you should exchange guest posts with them because they would be more valuable than on an authoritative site unrelated to yours. That means you should do exchanges and write guest blogs at resources popular in your targeted niche!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://neomam.com/blog/link-prospecting/"&gt;How to Find Sites That Will Want to Link to Your Content by Gisele Navarro&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#participate-in-niche-forum-discussions-and-answer-the-questions"&gt;
  &lt;/a&gt;
  Participate in niche forum discussions and answer the questions
&lt;/h3&gt;

&lt;p&gt;Users who are potentially interested in some product or service often search for relevant forums where they can find fresh information and reviews. Participation on the forum creates content, which helps websites rank higher in Google's results pages as well as increasing traffic to a website. Q&amp;amp;A platforms (Yahoo Answers, Quora) not only provide interesting answers about different topics but also help increase brand awareness and attract targeted users back to your site.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#encourage-users-to-write-reviews-about-your-product-or-service"&gt;
  &lt;/a&gt;
  Encourage users to write reviews about your product or service
&lt;/h3&gt;

&lt;p&gt;You can choose to use a review aggregator, where the user's opinion about services/products is shared and it will impact your decision whether or not you should try out that service/product. Search engines evaluate mentions of reviews for websites impacted by local SEO in particular.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-images-videos-and-documents-for-website-promotion"&gt;
  &lt;/a&gt;
  Use images, videos, and documents for website promotion
&lt;/h3&gt;

&lt;p&gt;With the growing number of tools to create shareable multimedia content, businesses need to understand how these media can be best optimized and integrated into their overall SEO strategy. We will look at some common types of sharable files as well as a few tips on optimizing them properly to maximize search visibility. The key to efficient use lies in maximizing search visibility with proper optimizations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-social-media-strategy"&gt;
  &lt;/a&gt;
  6. Social media strategy 🧑🏾‍🤝‍🧑🏾
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#learn-the-social-signals-model-of-your-industry"&gt;
  &lt;/a&gt;
  Learn the social signals model of your industry
&lt;/h3&gt;

&lt;p&gt;Social media shares increase the visibility of a page and its user engagement metrics which leads to an increase in the SERP ranking. Before starting any social media campaign, define what sort of content will strike a chord for your particular business segment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aim-to-create-viral-content"&gt;
  &lt;/a&gt;
  Aim to create viral content
&lt;/h3&gt;

&lt;p&gt;To drive additional traffic to your website, you should grow a strong social account on Facebook, Twitter, and Pinterest. Social accounts can help increase search engine rankings by engaging in positive interactions with the users who share links for relevant content that matches what is listed under "content."&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-social-media-buttons-to-your-website"&gt;
  &lt;/a&gt;
  Add social media buttons to your website
&lt;/h3&gt;

&lt;p&gt;The fact that you have influential accounts on Twitter, Facebook, and Pinterest will inevitably attract a lot of people to your website. These platforms are also great for increasing the search engine rankings of your site!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-the-open-graph-protocol-for-social-media-posts"&gt;
  &lt;/a&gt;
  Use the Open Graph protocol for social media posts
&lt;/h3&gt;

&lt;p&gt;Interested in learning how to share your content with the world via social media? Open Graph is a protocol that allows you to control the way it looks when shared on Facebook. It is a meta tags structure for each post headline, description, and preview so that they attract more clicks and shares!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this post can help you a bit! I will keep this post updated when I find newer or better links that are relevant to these steps. Consider following me on Twitter or subscribing to my newsletter in order to stay up to date!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Use MongoDB With Laravel</title>
      <author>Shahed Nasser</author>
      <pubDate>Thu, 26 Aug 2021 06:49:39 +0000</pubDate>
      <link>https://dev.to/shahednasser/how-to-use-mongodb-with-laravel-4n6o</link>
      <guid>https://dev.to/shahednasser/how-to-use-mongodb-with-laravel-4n6o</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://blog.shahednasser.com/how-to-use-mongodb-with-laravel/"&gt;my personal blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel.com"&gt;Laravel&lt;/a&gt; is a popular PHP framework that has been around for a long time now. With Laravel, you can easily build web apps, APIs, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com"&gt;MongoDB&lt;/a&gt; is a popular NoSQL database that has also been popular for a while now. With MongoDB, you can build databases that are collections of JSON-like documents.&lt;/p&gt;

&lt;p&gt;Laravel is usually used with relational databases like MySQL and provides easy interfaces, facades, and methods to access, insert, update and delete the data in it.&lt;/p&gt;

&lt;p&gt;Laravel does not come with native support for MongoDB. In order to use MongoDB with Laravel, some configurations and libraries are required to successfully integrate the two.&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll learn how to integrate MongoDB with Laravel. We'll create a simple blog with authentication and posts management.&lt;/p&gt;

&lt;p&gt;You can find the code for this tutorial on &lt;a href="https://github.com/shahednasser/laravel-mongodb-tutorial"&gt;this GitHub Repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#required"&gt;
  &lt;/a&gt;
  Required
&lt;/h3&gt;

&lt;p&gt;Before going through the tutorial, make sure you have the following installed on your machine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.php.net/downloads.php"&gt;PHP&lt;/a&gt; &amp;gt;= 7.3&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getcomposer.org/download/"&gt;Composer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mongodb.com/try/download/community"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, you need to install &lt;a href="https://docs.mongodb.com/drivers/php/"&gt;MongoDB's PHP extension&lt;/a&gt;. You can do so with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pecl install mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're running on a Mac OS with Apple M1 and you get an error about &lt;code&gt;pcre2.h&lt;/code&gt;, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cp /opt/homebrew/Cellar/pcre2/10.36/include/pcre2.h /opt/homebrew/Cellar/php\@7.*/7.*.*/include/php/ext/pcre/pcre2.h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where &lt;code&gt;7.*&lt;/code&gt; and &lt;code&gt;7.*.*&lt;/code&gt; depend on your PHP version installed.&lt;/p&gt;

&lt;p&gt;These dependencies are essential for development. So, make sure you have them all installed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optional"&gt;
  &lt;/a&gt;
  Optional
&lt;/h3&gt;

&lt;p&gt;The following are not required, but are optional to be able to follow with the article:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.shahednasser.com/use-mingo-to-easily-manage-your-mongodb-databases/"&gt;Mingo&lt;/a&gt;, a software that allows you to easily manage and view the MongoDB databases on a server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-laravel-website"&gt;
  &lt;/a&gt;
  Create Laravel Website
&lt;/h2&gt;

&lt;p&gt;In your terminal, run the following command to create a new Laravel website:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer create-project laravel/laravel laravel-mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, change to the directory of the website you just created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd laravel-mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try to start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything is ok, the website will be available at &lt;code&gt;localhost:8000&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-integration-library"&gt;
  &lt;/a&gt;
  Install Integration Library
&lt;/h2&gt;

&lt;p&gt;In order to integrate MongoDB with Laravel, we need to use the package &lt;a href="https://github.com/jenssegers/laravel-mongodb"&gt;jenssegers/mongodb&lt;/a&gt;. So, we'll install it with Composer:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require jenssegers/mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configure-the-connection"&gt;
  &lt;/a&gt;
  Configure the Connection
&lt;/h2&gt;

&lt;p&gt;After installing the library, we need to configure the connection to our MongoDB server.&lt;/p&gt;

&lt;p&gt;Make sure that your MongoDB server is running. Then, go to &lt;code&gt;.env&lt;/code&gt; in your Laravel project and update the following keys:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DB_CONNECTION=mongodb
DB_HOST=127.0.0.1
DB_PORT=27017
DB_DATABASE=blog
DB_USERNAME=
DB_PASSWORD=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we're using the default values for &lt;code&gt;DB_HOST&lt;/code&gt; and &lt;code&gt;DB_PORT&lt;/code&gt; for a local MongoDB server.&lt;/p&gt;

&lt;p&gt;Make sure to add &lt;code&gt;DB_USERNAME&lt;/code&gt; and &lt;code&gt;DB_PASSWORD&lt;/code&gt; based on your MongoDB username and password. If you don't have any, then you can leave it empty.&lt;/p&gt;

&lt;p&gt;Next, open &lt;code&gt;config/database.php&lt;/code&gt; and add the following inside the array of the &lt;code&gt;connections&lt;/code&gt; key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'connections' =&amp;gt; [
    ....,
    'mongodb' =&amp;gt; [
      'driver' =&amp;gt; 'mongodb',
      'host' =&amp;gt; env('DB_HOST', '127.0.0.1'),
      'port' =&amp;gt; env('DB_PORT', 27017),
      'database' =&amp;gt; env('DB_DATABASE', 'blog'),
      'username' =&amp;gt; env('DB_USERNAME', ''),
      'password' =&amp;gt; env('DB_PASSWORD', '')
    ],
],
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all that we need to do to create the connection between MongoDB and Laravel.&lt;/p&gt;

&lt;p&gt;To test it out, we can migrate the default migrations that come with a Laravel project and see if the database will be created in MongoDB:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the connection was done correctly, the migrations will run successfully with no errors.&lt;/p&gt;

&lt;p&gt;To check that the database and collections have been created successfully, you can go to your MongoDB server whether by using the command line/terminal or using a GUI like &lt;a href="https://blog.shahednasser.com/use-mingo-to-easily-manage-your-mongodb-databases/"&gt;Mingo&lt;/a&gt;. You'll see that the database has been created successfully with the necessary collections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-the-models"&gt;
  &lt;/a&gt;
  Change the Models
&lt;/h2&gt;

&lt;p&gt;By default, Laravel uses &lt;a href="https://laravel.com/docs/8.x/eloquent"&gt;Eloquent&lt;/a&gt; for all its models. As Eloquent does not support MongoDB, we need to change the class that our models extend. The class is provided from the package &lt;code&gt;jenssegers/mongodb&lt;/code&gt; that we installed earlier. It allows us to use our models and access data just like we would when using MySQL or other supported databases.&lt;/p&gt;

&lt;p&gt;Currently, we only have one model, which is the &lt;code&gt;User&lt;/code&gt; model. Go to &lt;code&gt;app/Models/User.php&lt;/code&gt; and change the class it extends by changing the &lt;code&gt;Authenticatable&lt;/code&gt; class used at the beginning of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Jenssegers\Mongodb\Auth\User as Authenticatable;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the &lt;code&gt;User&lt;/code&gt; is a model that can undergo authentication like registering and logging in, it should extend &lt;code&gt;Jenssegers\Mongodb\Auth\User&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The next change we need to make is related to casting dates. In order to use dates as Carbon objects, add the following inside the &lt;code&gt;User&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; /**
   * The attributes that should be cast to native types.
   *
   * @var array
   */
protected $dates = ['email_verified_at'];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all that is required to make a model compatible with both Laravel's Eloquent and MongoDB. We'll see in the next sections how we can access, add, modify and delete the data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-authentication"&gt;
  &lt;/a&gt;
  Add Authentication
&lt;/h2&gt;

&lt;p&gt;We'll add authentication to our website to allow users to register and log in. To do this and save time on creating the authentication forms and routes, we'll use &lt;a href="https://laravel.com/docs/8.x/starter-kits#laravel-breeze"&gt;Laravel's Breeze&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Breeze provides sleek-looking authentication forms using &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; and &lt;a href="https://alpinejs.dev"&gt;AlpineJS&lt;/a&gt;. You don't need to know either to go through the tutorial.&lt;/p&gt;

&lt;p&gt;The next few parts of the tutorial that are related to installing and configuring Breeze are optional. If you're not interested in following this part of the tutorial you can skip it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-breeze"&gt;
  &lt;/a&gt;
  Install Breeze
&lt;/h3&gt;

&lt;p&gt;First, we'll install Breeze:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan breeze:install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we need to install the required NPM dependencies and compile the Breeze assets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install &amp;amp;&amp;amp; npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! Now, we'll have nice-looking authentication forms and routes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-authentication"&gt;
  &lt;/a&gt;
  Testing Authentication
&lt;/h3&gt;

&lt;p&gt;Start the server if it isn't already started and go to &lt;code&gt;localhost:8000/register&lt;/code&gt;. You'll see a registration form that includes the basic user fields required by default in Laravel.&lt;/p&gt;

&lt;p&gt;Try creating a user. You'll then be redirected to &lt;code&gt;localhost:8000/dashboard&lt;/code&gt;, which is the default in Breeze.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-default-route"&gt;
  &lt;/a&gt;
  Changing Default Route
&lt;/h3&gt;

&lt;p&gt;By default, Breeze redirects authenticated users to the route &lt;code&gt;/dashboard&lt;/code&gt;. We'll change it to the home page.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;routes/web.php&lt;/code&gt; and change the content to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/', [PostController::class, 'home'])-&amp;gt;middleware(['auth'])-&amp;gt;name('home');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, when the user goes to &lt;code&gt;localhost:8000&lt;/code&gt; and they're not logged in, they will be redirected to the sign-in form. If they're logged in, they can access the blog.&lt;/p&gt;

&lt;p&gt;Next, create the controller that will handle this request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:controller PostController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the controller, add the following method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function home() {
    return view('home');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will just return the view &lt;code&gt;home&lt;/code&gt;. This view is actually now named &lt;code&gt;dashboard.blade.php&lt;/code&gt; and it's in &lt;code&gt;resources/views&lt;/code&gt;. So, rename it to &lt;code&gt;home.blade.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, change the link for the home page in the navigation by replacing &lt;code&gt;route('dashboard')&lt;/code&gt; in &lt;code&gt;resources/views/layouts/navigation.blade.php&lt;/code&gt; with &lt;code&gt;route('home')&lt;/code&gt; everywhere it's used. Additionally, replace texts that have &lt;code&gt;Dashboard&lt;/code&gt; in them with &lt;code&gt;Home&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, change the route that should be redirected to when the user is authenticated in &lt;code&gt;app/Providers/RouteServiceProvider.php&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public const HOME = '/';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to access the website on &lt;code&gt;localhost:8000&lt;/code&gt;, if you're still logged in you'll see the page we saw earlier after signing up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-crud-operations"&gt;
  &lt;/a&gt;
  Implement CRUD Operations
&lt;/h2&gt;

&lt;p&gt;In this section, we'll see how to create a new model that's compatible with MongoDB and perform Create, Read, Update and Delete (CRUD) operations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-migration"&gt;
  &lt;/a&gt;
  Create the Migration
&lt;/h3&gt;

&lt;p&gt;First, create the migration which will create a new &lt;code&gt;posts&lt;/code&gt; collection in the database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:migration create_posts_table
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the migration file &lt;code&gt;database/migration/YEAR_MONTH_DAY_TIME_create_posts_table&lt;/code&gt;, where &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY&lt;/code&gt;, and &lt;code&gt;TIME&lt;/code&gt; depend on when you create this migration.&lt;/p&gt;

&lt;p&gt;Open the file and inside the &lt;code&gt;up&lt;/code&gt; method, change the code to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Schema::create('posts', function (Blueprint $table) {
      $table-&amp;gt;id();
      $table-&amp;gt;string('title');
      $table-&amp;gt;longText('content');
      $table-&amp;gt;foreignId('user_id')-&amp;gt;constrained('users')-&amp;gt;cascadeOnDelete()-&amp;gt;cascadeOnUpdate();
      $table-&amp;gt;timestamps();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a collection where documents inside will have the fields &lt;code&gt;_id&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt; which will act as a foreign key towards the &lt;code&gt;users&lt;/code&gt; table, and timestamps fields like &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Run the following to execute the migration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add a new collection &lt;code&gt;posts&lt;/code&gt; in your database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-model"&gt;
  &lt;/a&gt;
  Create the Model
&lt;/h3&gt;

&lt;p&gt;Next, we'll create the &lt;code&gt;Post&lt;/code&gt; model for the &lt;code&gt;posts&lt;/code&gt; table. Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:model Post
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we did with the &lt;code&gt;User&lt;/code&gt; model, we need to change the class the model extends. For &lt;code&gt;User&lt;/code&gt;, we used &lt;code&gt;Jenssegers\Mongodb\Auth\User&lt;/code&gt; as the model was authenticatable.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Post&lt;/code&gt; model is not authenticatable. So, it will just extend the class &lt;code&gt;Jenssegers\Mongodb\Eloquent\Model&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;At the beginning of &lt;code&gt;app/Models/Post.php&lt;/code&gt; change the class &lt;code&gt;Model&lt;/code&gt; used to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Jenssegers\Mongodb\Eloquent\Model;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the class, add the following to define the model's fields:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;protected $fillable = [
    'title',
    'content',
    'user_id'
];

protected $dates = ['created_at', 'updated_at'];

public function user () {
    return $this-&amp;gt;belongsTo(User::class);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have set the fillable fields to be &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt;, and &lt;code&gt;user_id&lt;/code&gt;. We've also set the dates to be &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;. Finally, we've added a &lt;code&gt;belongsTo&lt;/code&gt; relationship between &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#show-posts"&gt;
  &lt;/a&gt;
  Show Posts
&lt;/h3&gt;

&lt;p&gt;We'll add a blade component that will be used to display posts. Create the file &lt;code&gt;resources/views/components/post.blade.php&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white overflow-hidden shadow-sm sm:rounded-lg"&amp;gt;
 &amp;lt;div class="p-6 bg-white border-b border-gray-200"&amp;gt;
   &amp;lt;h1 class="text-xl md:text-2xl"&amp;gt;{{ $post['title']}}&amp;lt;/h1&amp;gt;
   &amp;lt;p class="my-2"&amp;gt;{{ $post['content'] }}&amp;lt;/p&amp;gt;
   &amp;lt;small class="text-gray-500"&amp;gt;{{ $post['user']['name'] }} - {{ $post['created_at'] }}&amp;lt;/small&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're just showing the title, content, name of the user, and the date the post is created.&lt;/p&gt;

&lt;p&gt;Next, we'll change the home page to display all posts, if there are any.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;resources/views/home.blade.php&lt;/code&gt; and change the content to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;x-app-layout&amp;gt;
  &amp;lt;x-slot name="header"&amp;gt;
    &amp;lt;h2 class="font-semibold text-xl text-gray-800 leading-tight"&amp;gt;
      {{ __('Home') }}
    &amp;lt;/h2&amp;gt;
  &amp;lt;/x-slot&amp;gt;

  &amp;lt;div class="py-12"&amp;gt;
    &amp;lt;div class="max-w-7xl mx-auto sm:px-6 lg:px-8"&amp;gt;
      @empty($posts)
        &amp;lt;div class="bg-white overflow-hidden shadow-sm sm:rounded-lg"&amp;gt;
          &amp;lt;div class="p-6 bg-white border-b border-gray-200"&amp;gt;
            There are no posts
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      @endempty

      @foreach ($posts as $post)
        @component('components.post', ['post' =&amp;gt; $post])
        @endcomponent
      @endforeach
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/x-app-layout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, if there are any posts, they'll be each displayed as cards. If there aren't any, the message "There are no posts" will be shown.&lt;/p&gt;

&lt;p&gt;Finally, we need to pass the &lt;code&gt;$posts&lt;/code&gt; variable from the controller to the view. Change the &lt;code&gt;home&lt;/code&gt; method to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function home() {
    $posts = Post::with(['user'])-&amp;gt;get();
    return view('home', ['posts' =&amp;gt; $posts-&amp;gt;toArray()]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are able to read data from our MongoDB database the same way we would with the MySQL database, using the same Eloquent methods.&lt;/p&gt;

&lt;p&gt;If you try opening the blog now, you'll see that the message "there are no posts is showing."&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-and-update-a-post"&gt;
  &lt;/a&gt;
  Create and Update a Post
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Create Post&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We'll create a form that allows the logged-in user to create a post.&lt;/p&gt;

&lt;p&gt;First, add the route in &lt;code&gt;web/routes.php&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/posts/create', [PostController::class, 'createForm'])-&amp;gt;middleware(['auth'])-&amp;gt;name('post.form');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, add the &lt;code&gt;createForm&lt;/code&gt; method in &lt;code&gt;PostController&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function createForm() {
    return view('post_form');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, create the view file &lt;code&gt;resources/view/post_form.blade.php&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;x-app-layout&amp;gt;
 &amp;lt;x-slot name="header"&amp;gt;
   &amp;lt;h2 class="font-semibold text-xl text-gray-800 leading-tight"&amp;gt;
     {{ isset($post) ? __('Edit Post') :__('Create Post') }}
   &amp;lt;/h2&amp;gt;
 &amp;lt;/x-slot&amp;gt;

 &amp;lt;div class="py-12"&amp;gt;
   &amp;lt;div class="max-w-7xl mx-auto sm:px-6 lg:px-8"&amp;gt;
    &amp;lt;div class="bg-white overflow-hidden shadow-sm sm:rounded-lg"&amp;gt;
     &amp;lt;div class="p-6 bg-white border-b border-gray-200"&amp;gt;

      &amp;lt;!-- Session Status --&amp;gt;

      &amp;lt;x-auth-session-status class="mb-4" :status="session('status')" /&amp;gt;

      &amp;lt;!-- Validation Errors --&amp;gt;

      &amp;lt;x-auth-validation-errors class="mb-4" :errors="$errors" /&amp;gt;

      &amp;lt;form method="POST" action="{{ route('post.save') }}"&amp;gt;
       @csrf
       @if (isset($post))
        &amp;lt;input type="hidden" name="id" value="{{ $post-&amp;gt;_id }}" /&amp;gt;
       @endif
       &amp;lt;div&amp;gt;
        &amp;lt;x-label for="title" :value="__('Title')" /&amp;gt;
        &amp;lt;x-input id="title" class="block mt-1 w-full" type="text" name="title" :value="old('title') ?: (isset($post) ? $post-&amp;gt;title : '')" required autofocus /&amp;gt;
       &amp;lt;/div&amp;gt;
       &amp;lt;div class="mt-3"&amp;gt;
        &amp;lt;x-label for="content" :value="__('Content')" /&amp;gt;
        &amp;lt;textarea id="content" name="content" class="block mt-1 w-full rounded-md shadow-sm border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" rows="5"&amp;gt;{{ old('content') ?: (isset($post) ? $post-&amp;gt;content : '') }}&amp;lt;/textarea&amp;gt;
       &amp;lt;/div&amp;gt;
       &amp;lt;div class="flex items-center justify-end mt-4"&amp;gt;
        &amp;lt;x-button&amp;gt;
          {{ __('Save') }}
        &amp;lt;/x-button&amp;gt;
       &amp;lt;/div&amp;gt;
      &amp;lt;/form&amp;gt;
     &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
   &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/x-app-layout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we're making the form ready for editing as well (which we'll go over later). The form has 2 fields, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our form is now ready, the last thing we need to do is add a link to it in the navigation bar. In &lt;code&gt;resources/views/layouts/navigation.blade.php&lt;/code&gt; add the following under the link for "Home":&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;x-nav-link :href="route('post.form')" :active="request()-&amp;gt;routeIs('post.form')"&amp;gt;
     {{ __('Create Post') }}
 &amp;lt;/x-nav-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you go on the website now, you'll see a new link in the navigation bar for "Create Post".&lt;/p&gt;

&lt;p&gt;Go to that page. You'll see the form we created which has the 2 fields we mentioned.&lt;/p&gt;

&lt;p&gt;Next, we need to implement the post method that will handle saving the post.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;routes/web.php&lt;/code&gt;, add the following new route:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::post('/posts/create', [PostController::class, 'save'])-&amp;gt;middleware(['auth'])-&amp;gt;name('post.save');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, add the &lt;code&gt;save&lt;/code&gt; method in &lt;code&gt;PostController&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function save(Request $request) {

    Validator::validate($request-&amp;gt;all(), [
      'id' =&amp;gt; 'nullable|exists:posts,_id',
      'title' =&amp;gt; 'required|min:1',
      'content' =&amp;gt; 'required|min:1'
    ]);

    /** @var User $user */
    $user = Auth::user();
    $id = $request-&amp;gt;get('id');

    if ($id) {
      $post = Post::query()-&amp;gt;find($id);
      if ($post-&amp;gt;user-&amp;gt;_id !== $user-&amp;gt;_id) {
        return redirect()-&amp;gt;route('home');
      }
    } else {
      $post = new Post();
      $post-&amp;gt;user()-&amp;gt;associate($user);
    }

    $post-&amp;gt;title = $request-&amp;gt;get('title');
    $post-&amp;gt;content = $request-&amp;gt;get('content');

    $post-&amp;gt;save();

    return redirect()-&amp;gt;route('home');
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this method, we're first validating the fields that are required, which are &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt;. We're also validating &lt;code&gt;id&lt;/code&gt; which will be passed only when the post is being edited. So, it can be nullable, but when it's available, it should exist in the &lt;code&gt;posts&lt;/code&gt; collection in the field &lt;code&gt;_id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Suggested Read: &lt;a href="https://blog.shahednasser.com/beginners-guide-to-validation-in-laravel/"&gt;Beginner’s Guide to Validation in Laravel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, if the post is being edited, we're validating that the user editing this post is actually the user that created it. The post's user can be easily accessed through the relationship we defined in the class.&lt;/p&gt;

&lt;p&gt;Finally, we're creating or updating the post, setting the title, content, and user creating it. Then, we redirect back home.&lt;/p&gt;

&lt;p&gt;You can now try adding a post. Open the form and enter a title and content, then click Save. If everything is done correctly, you'll be redirected to the home page and you can see the new post added.&lt;/p&gt;

&lt;p&gt;You can also check on your MongoDB server if the new post has been added successfully.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edit Post&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As mentioned earlier, the form is ready to be used for editing a post.&lt;/p&gt;

&lt;p&gt;We'll add an edit button for posts that will allow the user to edit a post.&lt;/p&gt;

&lt;p&gt;First, create the file &lt;code&gt;resources/views/components/edit.blade.php&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"&amp;gt;
 &amp;lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component is just an edit icon from &lt;a href="https://heroicons.com"&gt;Heroicons&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, we'll use this icon to add an edit button. Change &lt;code&gt;resources/views/components/post.blade.php&lt;/code&gt; to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bg-white overflow-hidden shadow-sm sm:rounded-lg"&amp;gt;
 &amp;lt;div class="p-6 bg-white border-b border-gray-200"&amp;gt;
   &amp;lt;h1 class="text-xl md:text-2xl"&amp;gt;{{ $post['title']}}&amp;lt;/h1&amp;gt;
   &amp;lt;p class="my-2"&amp;gt;{{ $post['content'] }}&amp;lt;/p&amp;gt;
   &amp;lt;small class="text-gray-500"&amp;gt;{{ $post['user']['name'] }} - {{ $post['created_at'] }}&amp;lt;/small&amp;gt;
   @if(\Auth::user()-&amp;gt;_id === $post['user']['_id'])
    &amp;lt;a href="{{ route('post.edit.form', ['id' =&amp;gt; $post['_id']]) }}" class="inline-block align-middle pb-1 text-decoration-none text-gray-600"&amp;gt;
     @component('components.edit')
     @endcomponent
    &amp;lt;/a&amp;gt;
   @endif
 &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add the link to edit the post only when the post belongs to the current user.&lt;/p&gt;

&lt;p&gt;Next, add a new route to go to the form and edit the post:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/posts/{id}/edit', [PostController::class, 'editForm'])-&amp;gt;middleware(['auth'])-&amp;gt;name('post.edit.form');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, add the method &lt;code&gt;editForm&lt;/code&gt; in &lt;code&gt;PostController&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function editForm(Request $request, $id) {
    $post = Post::query()-&amp;gt;find($id);
    if (!$post) {
      return redirect()-&amp;gt;route('home');
    }
    return view('post_form', ['post' =&amp;gt; $post]);
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all we need to add to be able to edit a post. Try opening the website and clicking on the edit icon for any of the posts. It will take you to the same post form, but with the values filled.&lt;/p&gt;

&lt;p&gt;Try making edits to the post and click save. You'll be redirected to the home page and you can see the post has been updated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delete-post"&gt;
  &lt;/a&gt;
  Delete Post
&lt;/h3&gt;

&lt;p&gt;The last thing we need to add is the ability to delete a post.&lt;/p&gt;

&lt;p&gt;Create the file &lt;code&gt;resources/views/components/delete.blade.php&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"&amp;gt;
 &amp;lt;path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" /&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to the edit button, we're creating a component for a delete icon to use for the button.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;resources/views/components/post.blade.php&lt;/code&gt; add the following after the edit link:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form method="POST" action="{{ route('post.delete') }}" class="inline-block align-middle"&amp;gt;
    @csrf
    &amp;lt;input type="hidden" name="id" value="{{ $post['_id'] }}" /&amp;gt;
    &amp;lt;button type="submit" class="border-0 bg-transparent text-red-400"&amp;gt;
        @component('components.delete')
        @endcomponent
    &amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, add a new route in &lt;code&gt;routes/web.php&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::post('/posts/delete', [PostController::class, 'delete'])-&amp;gt;middleware(['auth'])-&amp;gt;name('post.delete');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, create the &lt;code&gt;delete&lt;/code&gt; method in &lt;code&gt;PostController&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function delete(Request $request) {
    Validator::validate($request-&amp;gt;all(), [
      'id' =&amp;gt; 'exists:posts,_id'
    ]);

    $post = Post::query()-&amp;gt;find($request-&amp;gt;get('id'));
    $post-&amp;gt;delete();

    return redirect()-&amp;gt;route('home');
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we're validating that the ID is sent in the request and that it's a post that exists. Then, we're deleting the post.&lt;/p&gt;

&lt;p&gt;Notice how to delete we can use the same eloquent methods we use in Laravel.&lt;/p&gt;

&lt;p&gt;For simplicity, we're omitting the validation check to make sure that the post belongs to the logged-in user.&lt;/p&gt;

&lt;p&gt;Go to the home page now. You'll see a delete icon next to each post. Try clicking on one of them. You'll be redirected back to the home page and the post will be deleted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we were able to connect a Laravel website to a MongoDB server. As we saw, the integration is simple and seamless.&lt;/p&gt;

&lt;p&gt;Even with the integration, you can use Eloquent models like you would when using other supported databases.&lt;/p&gt;

&lt;p&gt;More can be done with &lt;code&gt;jenssegers/mongodb&lt;/code&gt; package. You can try adding to the website we created a search bar or advanced search with filters. Make sure to check out the documentation of the package, as well.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>mongodb</category>
      <category>php</category>
      <category>tutorial</category>
    </item>
    <item>
      <title> PE featured in LA WEEKLY </title>
      <author>perpetual . education</author>
      <pubDate>Thu, 26 Aug 2021 06:24:27 +0000</pubDate>
      <link>https://dev.to/perpetual_edu/pe-featured-in-la-weekly-4n7a</link>
      <guid>https://dev.to/perpetual_edu/pe-featured-in-la-weekly-4n7a</guid>
      <description>&lt;p&gt;(from the article)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-something-new-perpetual-education-is-the-best-online-programming-and-design-school"&gt;
  &lt;/a&gt;
  Try Something New: Perpetual Education Is The Best Online Programming And Design School
&lt;/h2&gt;

&lt;p&gt;One of the more exciting new schools in this space is &lt;a href="https://perpetual.education"&gt;Perpetual Education&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Perpetual Education popped in 2021, right here in Los Angeles. They believe that the future will require designers with a broader knowledge and understanding of the entire design process.&lt;/p&gt;

&lt;p&gt;Their flagship course, “Design for The Web” (DFTW) is a 6-month online design and programming mentorship. DFTW combines the best parts of a stepped college curriculum, boot camp pace, flexibility of a MOOC, and one-on-one meetings with the instructor.&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;




&lt;p&gt;Read the whole thing here: &lt;a href="https://www.laweekly.com/best-online-programming-and-design-school"&gt;https://www.laweekly.com/best-online-programming-and-design-school&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
