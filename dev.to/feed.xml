<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make teams more productive (WDS #3)</title>
      <author>Blake Campbell</author>
      <pubDate>Fri, 11 Jun 2021 15:35:54 +0000</pubDate>
      <link>https://dev.to/blaketweeted/how-to-make-teams-more-productive-wds-3-4aco</link>
      <guid>https://dev.to/blaketweeted/how-to-make-teams-more-productive-wds-3-4aco</guid>
      <description>&lt;p&gt;Disclaimer this is 100% satire. For fun on a Friday (Web Dev Satire #3)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everyone-wants-to-be-more-productive"&gt;
  &lt;/a&gt;
  Everyone wants to be more productive
&lt;/h2&gt;




&lt;p&gt;Managers might try to block off time to focus on coding or keep you out of meetings. This is the worst way to have a productive team. &lt;/p&gt;

&lt;p&gt;Here's an outline for any manager trying to squeeze some more code out of developers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#more-meetings"&gt;
  &lt;/a&gt;
  More Meetings
&lt;/h3&gt;

&lt;p&gt;I'm not just talking about more meetings, though that is part of it. We want meetings with no clear goal and scattered no more than two hours apart. This ensures that developers are hyper-focused for that two-hour gap. &lt;/p&gt;

&lt;p&gt;The less clear the meeting is, the better. Developers are natural problem solvers. Help them work out those muscles with practice. Title your sessions vaguely "Afternoon Debug" or "Productive Morning meeting."&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#code-fast"&gt;
  &lt;/a&gt;
  Code fast
&lt;/h3&gt;

&lt;p&gt;This is what we are after, a short, sweet code. It makes sense that we need short-sweet time to accomplish our goals. Why write tests or dig into details of the code? Developers don't make mistakes.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#switch-systems-slowly-and-often"&gt;
  &lt;/a&gt;
  Switch Systems Slowly and often
&lt;/h3&gt;

&lt;p&gt;Change is good as long as it's drawn out. If you're using Slack, switch to Microsoft Teams. Make sure you don't do this all at once. It should be a month or two processes where developers need to respond to messages in both at any given time.&lt;/p&gt;

&lt;p&gt;While doing this, transfer other internal systems. Shock and awe your developers with the amount of unnecessary change.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIKHQQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjy84c00lqj3kjzh2dp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIKHQQjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjy84c00lqj3kjzh2dp9.png" alt="Screen Shot 2021-06-11 at 11.21.06 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is the ideal workday. You make not like it, but this is peak performance.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In case it isn't clear by now, this is satire! Happy Friday, and keep coding! :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to Level Up Your React Conditionals</title>
      <author>Reed Barger</author>
      <pubDate>Fri, 11 Jun 2021 15:23:16 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-4of6</link>
      <guid>https://dev.to/reedbarger/how-to-level-up-your-react-conditionals-4of6</guid>
      <description>&lt;p&gt;Do you write conditionals correctly within your React applications?&lt;/p&gt;

&lt;p&gt;Good conditionals are an essential part of any React application. We use conditionals to show or hide elements or components in our applications.&lt;/p&gt;

&lt;p&gt;In short – to be an effective React developer, you must know how to write good conditionals.&lt;/p&gt;

&lt;p&gt;Let's go over all of the major patterns you need to know to write clean, concise conditionals, plus what anti-patterns you should avoid.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-your-own-copy%E2%80%AC"&gt;
  &lt;/a&gt;
  Want Your Own Copy?‬ 📄
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/react-conditionals-2021"&gt;Download the cheatsheet in PDF format here&lt;/a&gt;&lt;/strong&gt; (it takes 5 seconds).&lt;/p&gt;

&lt;p&gt;Here are some quick wins from grabbing the downloadable version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Quick reference guide to review however and whenever&lt;/li&gt;
&lt;li&gt;  Tons of copyable code snippets for easy reuse&lt;/li&gt;
&lt;li&gt;  Read this massive guide wherever suits you best. On the train, at your desk, standing in line... anywhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's a ton of great stuff to cover, so let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-use-ifstatements-primarily-no-need-for-else-or-elseif"&gt;
  &lt;/a&gt;
  1. Use if-statements primarily. No need for else or else-if.
&lt;/h2&gt;

&lt;p&gt;Let's start with the most basic type of conditional in React. If we have data, we want to display it. If not, we want to show nothing.&lt;/p&gt;

&lt;p&gt;Simple! How would we write that?&lt;/p&gt;

&lt;p&gt;Let's say we are fetching an array of posts data from an API. When it is fetching the data, &lt;code&gt;posts&lt;/code&gt; has a value of &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can check for that value with a simple if-statement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// posts === undefined at first&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason this pattern works is that we are returning early. If it meets the condition (if &lt;code&gt;!posts&lt;/code&gt; is has a boolean value of &lt;code&gt;true&lt;/code&gt;), we display nothing in our component by returning &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If statements also work when you have multiple conditions that you want to check for.&lt;/p&gt;

&lt;p&gt;For example, if you want to check for loading and error states before you display your data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we can reuse the if-statement and do not have to write if-else or if-else-if, which cuts down on the code that we have to write and is still just as readable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-use-the-ternary-operator-to-write-conditionals-in-your-jsx"&gt;
  &lt;/a&gt;
  2. Use the ternary operator to write conditionals in your JSX
&lt;/h2&gt;

&lt;p&gt;If-statements are great when we want to exit early and display nothing or a totally different component.&lt;/p&gt;

&lt;p&gt;However, what if we don't want to write a conditional separate from our returned JSX, but directly within it?&lt;/p&gt;

&lt;p&gt;In React, we must include expressions (something that resolves to a value), not statements within our JSX.&lt;/p&gt;

&lt;p&gt;This is why we must write conditionals in our JSX only with ternaries and not if-statements.&lt;/p&gt;

&lt;p&gt;For example, if we wanted to display one nested component on a mobile-sized screen and another on a larger screen, a ternary would be a perfect choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most developers think this the only pattern they can leverage when it comes to using ternaries.&lt;/p&gt;

&lt;p&gt;In fact, you don't have to clutter your component tree by including all of these ternaries directly in your returned JSX.&lt;/p&gt;

&lt;p&gt;Since ternaries resolve to a value, remember that you can assign the result of a ternary to a variable, which you can then use where you like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ChatComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isMobile&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MobileChat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chat&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sidebar&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ChatComponent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-no-else-condition-use-the-ampamp-and-operator"&gt;
  &lt;/a&gt;
  3. No else condition? Use the &amp;amp;&amp;amp; (and) operator
&lt;/h2&gt;

&lt;p&gt;In many cases, you will want to use a ternary in your JSX, but will realize that if that condition is not met, you don't want to display anything.&lt;/p&gt;

&lt;p&gt;This ternary would look like the following: &lt;code&gt;condition ? &amp;lt;Component /&amp;gt; : null&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you don't have an else condition, use the &amp;amp;&amp;amp; operator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PostFeed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;hasFinished&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;have&lt;/span&gt; &lt;span class="nx"&gt;reached&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-switch-statements-for-multiple-conditions"&gt;
  &lt;/a&gt;
  4. Switch statements for multiple conditions
&lt;/h2&gt;

&lt;p&gt;What if we are in a situation where have many different conditions, more than just one or two?&lt;/p&gt;

&lt;p&gt;We could certainly write multiple if-statements, but all of these if statements, as we've seen earlier, go above our returned JSX.&lt;/p&gt;

&lt;p&gt;Too many if-statements can clutter our components. How do we make our code cleaner?&lt;/p&gt;

&lt;p&gt;We can often extract multiple conditions to a separate component which contains a switch statement.&lt;/p&gt;

&lt;p&gt;For example, we have a Menu component that we can toggle and display different tabs.&lt;/p&gt;

&lt;p&gt;We have tabs that can display user, chat, and room data as you see below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setMenu&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MenuItem&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleMenu&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Toggle&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;menu&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Users&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Chats&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Rooms&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are using a dedicated MenuItem component with a switch statement, our parent Menu component is not cluttered by conditional logic and we can easily see what component will be displayed given the &lt;code&gt;menu&lt;/code&gt; state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-want-conditionals-as-components-try-jsx-control-statements"&gt;
  &lt;/a&gt;
  5. Want conditionals as components? Try JSX Control Statements
&lt;/h2&gt;

&lt;p&gt;It's greatly beneficial to be able to use plain JavaScript within our React components. But if you want even more declarative and straightforward conditionals, check out the React library JSX control statements.&lt;/p&gt;

&lt;p&gt;You can bring it into your React projects by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; babel-plugin-jsx-control-statements
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Additionally, you can list it in your .babelrc file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"plugins"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jsx-control-statements"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a Babel plugin that allows you to use React components directly within your JSX to write very easy to understand conditionals.&lt;/p&gt;

&lt;p&gt;The best way to understand the use of such a library is by taking a look at an example. Let's rewrite one of our previous examples with the help of JSX control statements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Choose&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;When&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isError&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/When&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Otherwise&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PostList&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Otherwise&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Choose&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that there's no if or ternary statement in sight and we have a very readable component structure.&lt;/p&gt;

&lt;p&gt;Give JSX control statements a try in your next React project and see if a library like this is for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next
&lt;/h2&gt;

&lt;p&gt;I hope this guide gave you some helpful patterns to write great React conditionals.&lt;/p&gt;

&lt;p&gt;If you want a copy of this cheatsheet to keep for learning purposes, you can &lt;a href="http://bit.ly/react-conditionals-2021"&gt;download a complete PDF version of this cheatsheet here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also check out these ultimate resources, made to take your React skills to the next level, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-for-beginners-2021/"&gt;React for beginners: The complete guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/fetch-data-in-react/"&gt;How to fetch data in React from front to back&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://reactbootcamp.com/react-app-node-backend/"&gt;How to build fullstack apps in React with Node&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Contributing To Open Source - Getting Started</title>
      <author>Vicky Koblinski</author>
      <pubDate>Fri, 11 Jun 2021 15:18:47 +0000</pubDate>
      <link>https://dev.to/vickykoblinski/contributing-to-open-source-getting-started-2o19</link>
      <guid>https://dev.to/vickykoblinski/contributing-to-open-source-getting-started-2o19</guid>
      <description>&lt;p&gt;Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most large open source projects have steep learning curves which can be off-putting for the first-time contributor. However, there are a lot of opportunities to get started and thrive, even if you’ve never contributed to an open source project before. &lt;/p&gt;

&lt;p&gt;Open source is incredibly valuable. Where would the Linux kernel be without the 13,500 developers and 1,300 companies that have contributed since 2005? And what of the thousands of projects built on its back?&lt;/p&gt;

&lt;p&gt;These days, every project you start is built using packages and building blocks from those who came before you. You can stand on the shoulders of giants. The wheel has already been invented, and it’s more reliable and battle-tested than anything you could build in-house. Open source software has been essential for developers, companies, and, ideally, consumers.&lt;/p&gt;

&lt;p&gt;However, there would be no giants, no blocks, no wheels without communities, contributors, and passionate people to drive these projects forward. These are ordinary people doing extraordinary things. &lt;/p&gt;

&lt;p&gt;Although the main objective of open source is to create accessible and valuable software for everyone to build off of, contributors can find a plethora of personal benefits from contributing. You will sharpen your technical skills, nurture your interpersonal communication skills, and practice giving and receiving feedback. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-culture"&gt;
  &lt;/a&gt;
  The Culture
&lt;/h2&gt;

&lt;p&gt;Okay, so you’ve decided you want to become a contributor but you’re not convinced that you’ve got what it takes. You’re feeling quite intimidated actually. That’s okay. You’ve never done this before. Every contributor has had a first contribution and open source projects tend to culture empathy, patience, and understanding.&lt;/p&gt;

&lt;p&gt;In my experience, successful open source projects have maintainers and communities that are the friendliest on the planet. They are excited and enthusiastic about someone wanting to contribute. Often they’ll be active on Twitter, Slack, Discord, and/or another platform that you can join and speak directly with the maintainers and other contributors. Many large open source communities even have their own community guidelines that boil down to “Don’t be a jerk”. These communities welcome new contributors with open arms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-the-right-fit"&gt;
  &lt;/a&gt;
  Finding the Right Fit
&lt;/h2&gt;

&lt;p&gt;One of the best ways to find an open source project to work on is to look to open source software that you already use. Tools, packages, frameworks, or languages that you work with regularly and enjoy using could be great candidates. To find out if the project is open source, check its license and if it accepts contributions. It’s also important to check that the project is actively maintained. Are the pull-requests sitting dormant or are the maintainers providing feedback? Are the issues getting acknowledged or are they sitting there stale?&lt;/p&gt;

&lt;p&gt;If that approach doesn’t work for you, try using GitHub to explore. I recommend starting your contribution journey with languages and frameworks that you’re familiar with. It’ll be difficult enough to get up to speed on the codebase, but if you’re already familiar with a framework’s best practices and typical layout, you’ll have a more successful time hitting the ground running.&lt;/p&gt;

&lt;p&gt;GitHub has excellent search capabilities to find open source projects that are actively seeking out new contributors. By searching for the right tags and filtering by languages you know best, you can quickly find new issues that beg for assistance. Some great tags to search for are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/contributions-welcome"&gt;contributions-welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/contributions-welcome"&gt;good-first-issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/topics/hacktoberfest"&gt;hacktoberfest&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/topics/beginner-friendly"&gt;beginner-friendly&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/good-first-bug"&gt;good-first-bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/easy"&gt;easy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/low-hanging-fruit"&gt;low-hanging-fruit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/topics/first-timers-only"&gt;first-timers-only&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub also suggests projects you may like based on the people and repositories that you have starred, follow, or watch. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-first-contribution"&gt;
  &lt;/a&gt;
  Your First Contribution
&lt;/h2&gt;

&lt;p&gt;Once you find an issue that you feel confident in tackling in an active project that has a culture you feel comfortable in, it’s time to get your hands dirty! The first thing you will want to do is to “claim” the ticket. It’s a bad idea to run off and solve the problem without communicating your intentions to the maintainers. Instead, reply to the ticket in question by volunteering yourself for the task. This allows the maintainers and other contributors to know this ticket is being actively worked on and the maintainers may have requests, suggestions, or guidance to help solve the problem.&lt;/p&gt;

&lt;p&gt;Start small. Pick tickets that are easy and have the smallest contribution and code changes when you first start. Not only will this enable you to slowly get familiar with the codebase, but it will also build your confidence and credibility before you try taking on harder tasks. &lt;/p&gt;

&lt;p&gt;After you have picked up a ticket and think you have finished it, do your research before you open your first pull-request. Carefully read the documentation, code, and discussions related to this ticket to get the best understanding of how to handle the problem. If you’re stuck, reach out to the community and ask for guidance, clarification, or mentorship. &lt;/p&gt;

&lt;p&gt;Once you feel confident that you’ve solved the problem, it’s time to submit a PR. Look in the project for a &lt;strong&gt;CONTRIBUTORS.md&lt;/strong&gt; file--most open source projects on GitHub will likely have this within their project. This file will contain instructions on how this project would like PRs to be submitted by contributors. They may request strict branch naming conventions, PR titles, documentation or tests, comments, or other things in pull-requests. GitHub also has a &lt;a href="https://opensource.guide/how-to-contribute/#a-checklist-before-you-contribute"&gt;great checklist&lt;/a&gt; on what to check for before you open your pull-request. &lt;/p&gt;

&lt;p&gt;Create the PR and follow the PR template if the project has one. Be sure to link back to the original ticket. The maintainer may request changes or want to have a discussion about your changes. It’s normal to have a back-and-forth before a PR is accepted. Work with the maintainer until your PR is ready to be accepted.&lt;/p&gt;

&lt;p&gt;Once your PR passes the maintainer’s review, they will merge your code in. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations!&lt;/strong&gt; You’re an open source contributor!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-an-open-source-project-maintainer-release-wants-to-support-you"&gt;
  &lt;/a&gt;
  Are You An Open Source Project Maintainer? Release Wants To Support You!
&lt;/h3&gt;

&lt;p&gt;Open source projects benefit dramatically from Ephemeral Environments on every pull-request. We love open source and are dedicated to giving back. Contact us to find out how we can help fuel your rocket through preview environments and help put confidence in contributor’s PRs.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>contributorswanted</category>
      <category>github</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Button Animation Using HTML CSS &amp; JS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 11 Jun 2021 15:16:51 +0000</pubDate>
      <link>https://dev.to/nikhil27b/button-animation-using-html-css-js-1824</link>
      <guid>https://dev.to/nikhil27b/button-animation-using-html-css-js-1824</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Button Loading Animation with HTML &amp;amp; JS. This is simple Loading Button Animation using JavaScript after a button click I added setTimeout Function to removed the loader class. If you find this useful in a post like and save this post also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/qBrJaqy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Creating an API that runs Selenium via AWS Lambda</title>
      <author>Jaira Encio</author>
      <pubDate>Fri, 11 Jun 2021 15:06:37 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/creating-an-api-that-runs-selenium-via-aws-lambda-3ck3</link>
      <guid>https://dev.to/awscommunity-asean/creating-an-api-that-runs-selenium-via-aws-lambda-3ck3</guid>
      <description>&lt;p&gt;Being an automation tester, my job is to automate everything. As I was running my test script via terminal I realised that I’m the only who can execute the scripts I made. What if someone wants to run it? like the Devs, Project Manager, etc. It would be a tedious task to clone my repo, install libraries, and run the script. So I decided that maybe I can store my test script inside a serverless machine and make it accessible via API request.&lt;/p&gt;

&lt;p&gt;I experimented with various AWS resources such as creating my own lambda function, checking features of API gateway, Codepipeline, etc. After several attempts, I was finally able to run my script inside. And then I just researched how to access my lambda via API.&lt;/p&gt;

&lt;p&gt;This will result in higher production and time savings. Engineers may focus on vital work because automated testing does not require human interaction. This is like a portable testing device that anyone could execute. With fast test execution, developers get testing reports in an instant, so whenever a failure occurs, they will react to it quickly. Test automation will make it easier to update programs quickly. As a result, automated testing leads to increased team responsiveness, improved user experience, and increased customer satisfaction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create 2 Lambda layers that has selenium and chromedriver libraries&lt;/li&gt;
&lt;li&gt;Include created lambda layers in serverless.yml of lambda then deploy&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#creating-selenium-lambda-layer"&gt;
  &lt;/a&gt;
  Creating Selenium Lambda Layer
&lt;/h1&gt;

&lt;p&gt;Place libraries in &lt;code&gt;python/lib/python3.6/site-packages/&lt;/code&gt; to include them in a layer.&lt;/p&gt;

&lt;p&gt;Download Selenium to layer directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip3.6 install -t selenium/python/lib/python3.6/site-packages selenium==3.8.0
$ cd selenium
$ zip -r python.zip python/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once finished, Create lambda layer then upload zip file&lt;/p&gt;

&lt;p&gt;1. Go to AWS Console Lambda/Layers&lt;br&gt;
2. Click Create Layer&lt;br&gt;
3. Input the following in the layer configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Name: selenium
Description: Selenium 3.8.0 layer
Upload zip file created: python.zip
Compatible runtimes: Python 3.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m_lj9ba4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mr9wh1spgyxib4qznm12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_lj9ba4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mr9wh1spgyxib4qznm12.png" alt="selenium-layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4. Click Create&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%C2%A0creating-chromedriver-lambda-layer"&gt;
  &lt;/a&gt;
   Creating Chromedriver Lambda layer
&lt;/h1&gt;

&lt;p&gt;Download chrome driver&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir -p chromedriver
$ cd chromedriver
$ curl -SL https://chromedriver.storage.googleapis.com/2.37/chromedriver_linux64.zip &amp;gt; chromedriver.zip
$ unzip chromedriver.zip
$ rm chromedriver.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Download chrome binary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl -SL https://github.com/adieuadieu/serverless-chrome/releases/download/v1.0.0-41/stable-headless-chromium-amazonlinux-2017-03.zip &amp;gt; headless-chromium.zip
$ unzip headless-chromium.zip
$ rm headless-chromium.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Compress driver and binary&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ls
chromedriver headless-chromium
$ zip -r chromedriver.zip chromedriver headless-chromium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once finished, Create lambda layer then upload zip file&lt;/p&gt;

&lt;p&gt;1. Go to AWS Console Lambda/Layers&lt;br&gt;
2. Click Create Layer&lt;br&gt;
3. Input the following in the layer configuration&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Name: chromedriver
Description: chrome driver and binary layer
Upload zip file created: chromedriver.zip
Compatible runtimes: Python 3.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdKA_0za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfzv2ba6oa6lnf0m5akv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdKA_0za--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vfzv2ba6oa6lnf0m5akv.png" alt="chrome-layer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4. Click Create&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%C2%A0creating-lambda-function"&gt;
  &lt;/a&gt;
   Creating Lambda Function
&lt;/h1&gt;

&lt;p&gt;To ensure that your function code has access to libraries included in layers, Lambda runtimes include paths in the '/opt' directory.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0file-structure"&gt;
  &lt;/a&gt;
   File Structure
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;── /lambda/            # lambda function
  ├── /handler.py      # source code of lambda function 
  └── /serverless.yaml # serverless config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0code"&gt;
  &lt;/a&gt;
   Code
&lt;/h3&gt;

&lt;p&gt;Copy the code below to &lt;code&gt;/lambda/handler.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from selenium import webdriver
from selenium.webdriver.chrome.options import Options

def main(event, context):
    options = Options()
    options.binary_location = '/opt/headless-chromium'
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--single-process')
    options.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome('/opt/chromedriver',chrome_options=options)
    driver.get('https://www.google.com/')

    driver.close();
    driver.quit();

    response = {
        "statusCode": 200,
        "body": "Selenium Headless Chrome Initialized"
    }

    return response
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the code below to &lt;code&gt;/lambda/serverless.yaml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service: selenium-lambda

provider:
  name: aws
  runtime: python3.6
  region: ap-southeast-2
  timeout: 900

functions:
  main:
    memorySize: 1000
    handler: handler.main
    events:
      - http:
          path: test
          method: get

    layers:
      - arn:aws:lambda:ap-southeast-2:{}:layer:chromedriver:2
      - arn:aws:lambda:ap-southeast-2:{}:layer:selenium:2

resources:
  Resources:
    ApiGatewayRestApi:
      Properties:
        BinaryMediaTypes:
          - "*/*"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0deploy-lambda-function"&gt;
  &lt;/a&gt;
   Deploy Lambda Function
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;/lambda&lt;/code&gt; directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sls deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0output"&gt;
  &lt;/a&gt;
   Output
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Serverless: Stack update finished...
Service Information
service: selenium-lambda
stage: dev
region: ap-southeast-2
stack: selenium-lambda-dev
api keys:
  None
endpoints:
  GET - https://{name}.execute-api.ap-southeast-2.amazonaws.com/dev/test
functions:
  main: selenium-lambda-dev-main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r1WgXQny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngj9rtk6v7pq5cc30kl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1WgXQny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngj9rtk6v7pq5cc30kl8.png" alt="output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should get same response as below when accessing API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
"statusCode": 200,
"body": "Selenium Headless Chrome Initialized"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This deployment automatically creates cloudformation stack and s3 bucket.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>lambda</category>
      <category>selenium</category>
    </item>
    <item>
      <title>Helm Charts Testing</title>
      <author>Chirag Modi</author>
      <pubDate>Fri, 11 Jun 2021 15:04:33 +0000</pubDate>
      <link>https://dev.to/chiragdm/helm-charts-testing-4de2</link>
      <guid>https://dev.to/chiragdm/helm-charts-testing-4de2</guid>
      <description>&lt;p&gt;&lt;strong&gt;Tools to use for Helm Chart Testing during Development to Release&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-3Jhl4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvV-hnNm2VAEshpQ1bqS24g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-3Jhl4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvV-hnNm2VAEshpQ1bqS24g.png" alt="Helm Chart Testing during Development to Release"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://helm.sh/"&gt;Helm Chart&lt;/a&gt;&lt;/strong&gt; is a package management software to write Kubernetes templates and package it as a chart with all its dependencies. A single chart can be used to deploy nginx, memcache or any full stack web application. You can deploy any application chart just by running the following command.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm install my-release bitnami/nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#scope"&gt;
  &lt;/a&gt;
  Scope
&lt;/h2&gt;

&lt;p&gt;This article does not cover detailed information about Helm Chart development instead Helm chart has very good documentation which you can go through to learn more about it.&lt;/p&gt;

&lt;p&gt;I am going to cover how to test helm charts as part of development and what different types of testing tools can be used to test charts from unit tests to integration tests.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#helm-chart-development-not-a-pleasant-experience"&gt;
  &lt;/a&gt;
  Helm Chart Development — Not a pleasant Experience
&lt;/h2&gt;

&lt;p&gt;Helm Chart is written in go templates and writing those templates to render Kubernetes manifests is a painful experience. There is no good debugger support available and errors are clueless so sometimes you need to spend hours to fix minor indentation related issues. Helm provides a debug flag while rendering templates though it does not pinpoint the exact line where the error is in the code so it’s difficult to find issues. I hope to have better tools available in the future for helm chart development to make developers’ lives easy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GkSvhctl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2At_56kOrA6PQmKdQD" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GkSvhctl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2At_56kOrA6PQmKdQD" alt="Photo by Ryan Snaadt on Unsplash"&gt;&lt;/a&gt;&lt;em&gt;Photo by Ryan Snaadt on Unsplash&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#are-your-chart-templates-correct-"&gt;
  &lt;/a&gt;
  Are your chart templates correct ?
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, Helm Chart templates use go templates so as part of development you need to be sure of syntactical errors so you don’t get last minute surprises when you release your chart.&lt;/p&gt;

&lt;p&gt;Helm provides a lint command which finds and reports all these issues related to templates so you can execute this command frequently to find compile time errors as part of your development.&lt;/p&gt;

&lt;p&gt;Here is a helm chart deployment template with errors.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Helm lint&lt;/strong&gt; will report the following issues which were expected.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart helm lint .
==&amp;gt; Linting .
[INFO] Chart.yaml: icon is recommended

[ERROR] templates/: parse error at (mychart/templates/deployment.yaml:19): function “Values” not defined

[ERROR] templates/: template: mychart/templates/deployment.yaml:7:16: executing “mychart/templates/deployment.yaml” at &amp;lt;include “namespace” .&amp;gt;: error calling include: template: no template “namespace” associated with template “gotpl”

Error: 1 chart(s) linted, 1 chart(s) failed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;I know this is a very simple example but good enough for understating how lint works.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#validate-against-kubernetes-manifests"&gt;
  &lt;/a&gt;
  Validate against Kubernetes Manifests
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Helm template&lt;/strong&gt; is the command you can use to render/generate Kubernetes manifests/templates out of your helm chart templates.&lt;/p&gt;

&lt;p&gt;There is a command &lt;strong&gt;Helm install&lt;/strong&gt; to install/deploy charts to Kubernetes cluster. Internally, It  first executes helm template command and then deploys generated template output to the cluster.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm template . &amp;gt; deployment.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#are-your-kubernetes-manifests-valid-"&gt;
  &lt;/a&gt;
  Are your  Kubernetes Manifests Valid ?
&lt;/h3&gt;

&lt;p&gt;If you make mistakes while developing a chart then it might be possible that the generated Kubernetes Manifests generate errors when applied to  the Kubernetes cluster but I want to know about those errors before deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.kubeval.com/"&gt;Kubeval&lt;/a&gt;&lt;/strong&gt; is the tool to rescue. It’s a tool to validate your generated manifests against official Kubernetes specification and reports issues if any.&lt;/p&gt;

&lt;p&gt;Can you spot any issue in this Deployment template ?&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Run kubeval against this deployment manifest and look at the issues.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart kubeval deployment.yaml

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — selector: selector is required

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — containerPort: containerPort is required

WARN — mychart/templates/deployment.yaml contains an invalid Deployment (myservice.nginx-deployment) — spec.replicas: Invalid type. Expected: [integer,null], given: string

##### This is the output if it was valid deployment #####
PASS — mychart/templates/deployment.yaml contains a valid Deployment (myservice.nginx-deployment)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Additionally you can specify Kubernetes version against which you want to validate generated templates using option* “ — kubernetes-version v1.20.4”*&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#custom-validations-against-kubernetes-manifests"&gt;
  &lt;/a&gt;
  Custom Validations against Kubernetes Manifests
&lt;/h3&gt;

&lt;p&gt;Let’s say I have the following simple requirements.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Containers should not run as root.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docker images should come from my org repository.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can address this by implementing an admission controller in Kubernetes when resources get deployed to the cluster but would it not be nice if we can apply this custom validation before deployment ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.conftest.dev/"&gt;Conftest&lt;/a&gt;&lt;/strong&gt; is a framework which allows you to write rules using &lt;strong&gt;&lt;a href="https://www.openpolicyagent.org/docs/latest/policy-language/"&gt;OPA policies&lt;/a&gt;&lt;/strong&gt; and run it against the Kubernetes manifests.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Run these custom rules against deployment manifests using conftest which will report issues based on configured rules.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart conftest test — policy . deployment.yaml

FAIL — deployment.yaml — main — Containers must not run as root
FAIL — deployment.yaml — main — image ‘nginx’ doesn’t come from myorg.com repository

2 tests, 0 passed, 0 warnings, 2 failures, 0 exceptions
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can write any custom policies for all your resources which you can execute against Kubernetes manifests before deployment. That’s Pretty Cool.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#schema-validations-for-custom-values"&gt;
  &lt;/a&gt;
  Schema Validations for Custom Values
&lt;/h2&gt;

&lt;p&gt;As I explained, you can verify Kubernetes manifests using Kubeval and Conftest tools but when you are creating a helm chart then you need to allow your users who are using the chart to add some custom values for any new feature. you need to validate that those custom values are in correct format to be consumed by the chart otherwise it will fail chart rendering which is a very difficult task to debug. how can we apply the first level of defense to make sure provided custom values are in correct format otherwise error it out with proper validation message.&lt;/p&gt;

&lt;p&gt;Helm Chart provides &lt;strong&gt;&lt;a href="https://helm.sh/docs/topics/charts/#schema-files"&gt;Schema Validation&lt;/a&gt;&lt;/strong&gt; feature for which you need to provide a schema file in a chart containing rules for all your custom values. It validates this schema validation first before executing any of these commands.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;helm lint&lt;/li&gt;
&lt;li&gt;helm template&lt;/li&gt;
&lt;li&gt;helm install&lt;/li&gt;
&lt;li&gt;helm upgrade&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are a few of the use cases using custom values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Users should be able to specify memory and cpu requirements.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Some users want to specify different log locations for application logs.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Users want to supply environment *variables&lt;/em&gt; for the application container.*&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s implement the first use case where if the user specifies custom values for memory and cpu then it will take it otherwise set default values.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Here is &lt;strong&gt;values.schema.json&lt;/strong&gt; file to validate against custom values.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;This is custom-values.yaml which users can provide while consuming the chart.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;As the user has provided wrong custom values, it should fail.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ mychart helm template . -f custom-values.yaml

Error: values don’t meet the specifications of the schema(s) in the following chart(s):
mychart:
- memory: Does not match pattern ‘^[0–9.]+[M|G]i$’
- cpu: Does not match pattern ‘^[0–9.]+m*$’
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can do any type of validation as long as it’s supported by json schema specifications though the only condition is you should have all json schema rules available in file named values.schema.json in your chart.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unit-testing"&gt;
  &lt;/a&gt;
  Unit Testing
&lt;/h2&gt;

&lt;p&gt;Like any other programming language, Unit tests are the first which developers should consider in the early stage of development. I see a scarcity of good unit testing frameworks available for Helm Charts.&lt;/p&gt;

&lt;p&gt;There is a unit test framework &lt;strong&gt;&lt;a href="https://github.com/quintush/helm-unittest"&gt;helm-unittest&lt;/a&gt;&lt;/strong&gt;. It is a very nice framework for unit testing and lots of active deployment is going on so one should definitely go for it.&lt;/p&gt;

&lt;p&gt;There is another hacky way of testing Helm charts which is a mix of unit tests and regression tests.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Idea is very simple. you need to add a binding file containing custom values for each new feature you are implementing in helm chart and generate fixture file out of it using helm template command. You need to commit binding and it’s fixture file in the repository. Now create a simple shell script to be executed in CI which will create a fixture file out of a binding file on the fly against your changes in chart and compare it with existing fixture file. you just fail the test if there is difference in fixture files then you need to either fix your helm chart or update the existing fixture file if it’s expected behavior.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Testing using fixtures is very helpful in code refactoring and also can be considered for unit tests while writing new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integration-tests-using-kubetest"&gt;
  &lt;/a&gt;
  Integration Tests using Kubetest
&lt;/h2&gt;

&lt;p&gt;Till now, we have tested helm chart templates and Kubernetes manifests using different tools but we did not verify anything by actually deploying Kubernetes manifests in the Kubernetes cluster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-do-we-need-integration-tests-"&gt;
  &lt;/a&gt;
  Why do we need integration tests ?
&lt;/h3&gt;

&lt;p&gt;I have mentioned a few of the use cases which can only be verified by deploying resources in a cluster.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;I have mounted the volume as writable which I want to verify by creating a file in volume.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;There are some custom resources which I want to verify.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;I want to verify the health-check of the internal load balancer created as part of Kubernetes service creation.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many tools available but I really liked &lt;strong&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/"&gt;Kubetest&lt;/a&gt;&lt;/strong&gt; which is a pytest plugin. Kubetest makes it easy to write integration tests by providing abstraction on top of Kubernetes client.&lt;/p&gt;

&lt;p&gt;It provides many helper functions so you don’t need to write complex code using Kubernetes client unless it’s absolutely necessary.&lt;/p&gt;

&lt;p&gt;It’s very intuitive and fun to write integration tests using Kubetest. I was tempted to skip not putting any example code here because it is  self explanatory once you look at this &lt;strong&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/examples.html"&gt;example&lt;/a&gt;&lt;/strong&gt; code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I have covered the basics about helm charts, various tools we can use for different types of testing including unit test and integration tests during the lifecycle from development to releasing the helm charts. &lt;/p&gt;

&lt;p&gt;Don’t miss out to look at my &lt;strong&gt;&lt;a href="https://github.com/chiragdm/helm-chart-testing"&gt;github&lt;/a&gt;&lt;/strong&gt; I have used as an example through out the article if anything is not clear.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed it. Cheers !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://helm.sh/"&gt;https://helm.sh/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kubeval.com/"&gt;https://www.kubeval.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.conftest.dev/"&gt;https://www.conftest.dev/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openpolicyagent.org/docs/latest/policy-language/"&gt;https://www.openpolicyagent.org/docs/latest/policy-language/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://helm.sh/docs/topics/charts/#schema-files"&gt;https://helm.sh/docs/topics/charts/#schema-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quintush/helm-unittest"&gt;https://github.com/quintush/helm-unittest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kubetest.readthedocs.io/en/latest/"&gt;https://kubetest.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chiragdm/helm-chart-testing"&gt;https://github.com/chiragdm/helm-chart-testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>helm</category>
      <category>kubernetes</category>
      <category>unittesting</category>
      <category>integrationtesting</category>
    </item>
    <item>
      <title>We live in Savage with a better hair cut</title>
      <author>ROHIT KANYAL</author>
      <pubDate>Fri, 11 Jun 2021 14:59:20 +0000</pubDate>
      <link>https://dev.to/rohitkanyal/we-live-in-savage-with-a-better-hair-cut-1lda</link>
      <guid>https://dev.to/rohitkanyal/we-live-in-savage-with-a-better-hair-cut-1lda</guid>
      <description>&lt;p&gt;When the Dr. Singh start giving speech about what going on there In society anything become like it is normal thing to do burn people just to feel safe it is that much simple.&lt;br&gt;
This is so much true but it can't put in next Gen kid mind without making them feel bad about there previous gen.&lt;br&gt;
What I see is that, We all need some way to show and tell real thing to child without giving them something to rebel current situation rather make a steady change in society, where we want to see both gen live in peace without blaming any gen.&lt;br&gt;
That work is efficiently done by the maker of Sweet tooth.&lt;br&gt;
So what I see it more then Entertainment it psychological way to give awareness to people &lt;br&gt;
in war's we give signal that attack is coming but now we need to give message to show them what possibly solution there is no solution simple just giving them a signal is something wrong we need to give them proper solution with reason there are many miss use of message so there should be a way to understand real thing.&lt;br&gt;
You need to help people with good reason if not it is totally misunderstanding which will cause more damage then real problem in future gen.&lt;/p&gt;

&lt;p&gt;There is one movie which give amazing insight what is going to be next big problem as society which is anime&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%C9%A2%E1%B4%87%C9%B4%E1%B4%8F%E1%B4%84%C9%AA%E1%B4%85%E1%B4%80%CA%9F-%E1%B4%8F%CA%80%C9%A2%E1%B4%80%C9%B4"&gt;
  &lt;/a&gt;
  ɢᴇɴᴏᴄɪᴅᴀʟ ᴏʀɢᴀɴ
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ILvzHAq368Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>sweettoothquotes</category>
    </item>
    <item>
      <title>Roll your own URL shortener using Netlify Redirects.</title>
      <author>Sunny Golovine</author>
      <pubDate>Fri, 11 Jun 2021 14:12:52 +0000</pubDate>
      <link>https://dev.to/sgolovine/roll-your-own-url-shortener-using-netlify-redirects-3k3h</link>
      <guid>https://dev.to/sgolovine/roll-your-own-url-shortener-using-netlify-redirects-3k3h</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: I am not affiliated with Netlify&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;Earlier this week I had a problem. I had just spun a self hosted instance of Plausible Analytics and I wanted to create some campaigns for my personal website to track where users were coming from on the internet, whether clicking on links in my post, social media bio's, etc. The problem is in creating my campaigns, my URL's all ended up looking something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://mydomain.com?utm_source=dev.to&amp;amp;utm_medium=post&amp;amp;utm_campaign=post-click-throughs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not a great look if the service doesn't shorten the URL's. I wanted a solution where I wasn't reliant on other services to clean up my URL's.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;What I needed here was a URL shortened that would shorten that hideously long looking URL into a shorter one, I had some spare domain names that were redirecting to my main domain so I decided to take &lt;code&gt;sunny.gg&lt;/code&gt; and convert it into a URL shortener.&lt;/p&gt;

&lt;p&gt;In my case I wasn't shortening URL's all the time so having a static solution where you couldn't create new URL's on the fly was acceptable, all I needed was the ability to shorten a set of long URL's into pretty short ones, and then share those around.&lt;/p&gt;

&lt;p&gt;To achieve this I used Netlify and their redirects ability. Create a project that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/app/index.html
/netlify.toml
/package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can populate your &lt;code&gt;/app/index.html&lt;/code&gt; as you see fit, it doesn't really matter in this case, just a bare HTML file will do. The netlify.toml file is where things get interesting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[build]&lt;/span&gt;
  &lt;span class="py"&gt;base&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;
  &lt;span class="py"&gt;publish&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"app/"&lt;/span&gt;
  &lt;span class="py"&gt;build&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"echo 'no build command'"&lt;/span&gt;


&lt;span class="c"&gt;# Primary redirect&lt;/span&gt;
&lt;span class="err"&gt;[[&lt;/span&gt; &lt;span class="err"&gt;redirects&lt;/span&gt; &lt;span class="err"&gt;]]&lt;/span&gt;
  &lt;span class="py"&gt;from&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;
  &lt;span class="py"&gt;to&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://yourmainwebsite.com"&lt;/span&gt;
  &lt;span class="py"&gt;status&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt;

&lt;span class="c"&gt;# Add as many of these as needed&lt;/span&gt;
&lt;span class="err"&gt;[[&lt;/span&gt; &lt;span class="err"&gt;redirects&lt;/span&gt; &lt;span class="err"&gt;]]&lt;/span&gt;
  &lt;span class="py"&gt;from&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/some-pretty-url"&lt;/span&gt;
  &lt;span class="py"&gt;to&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://mydomain.com?utm_source=dev.to&amp;amp;utm_medium=post&amp;amp;utm_campaign=post-click-throughs"&lt;/span&gt;
  &lt;span class="py"&gt;status&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt;

&lt;span class="err"&gt;[[&lt;/span&gt; &lt;span class="err"&gt;redirects&lt;/span&gt; &lt;span class="err"&gt;]]&lt;/span&gt;
  &lt;span class="py"&gt;from&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/foo"&lt;/span&gt;
  &lt;span class="py"&gt;to&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://mydomain.com/bar?utm_source=dev.to&amp;amp;utm_campaign=bar"&lt;/span&gt;
  &lt;span class="py"&gt;status&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thought somewhat of a crude solution, though I found it to work quite well, you can see it in action with my post footer on this post.&lt;/p&gt;




&lt;p&gt;If you like this post, check out some of my other posts on &lt;a href="https://sunny.sh/post"&gt;my blog&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>netlify</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 11th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 11 Jun 2021 14:00:56 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-june-2021-772</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-11th-june-2021-772</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-slides"&gt;
  &lt;/a&gt;
  1. Slides
&lt;/h3&gt;

&lt;p&gt;Terminal based presentation tool&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/maaslalani"&gt;
        maaslalani
      &lt;/a&gt; / &lt;a href="https://github.com/maaslalani/slides"&gt;
        slides
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Terminal based presentation tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Slides&lt;/h1&gt;
&lt;p&gt;Slides in your terminal.&lt;/p&gt;
&lt;h5&gt;
Credits&lt;/h5&gt;
&lt;p&gt;This project is heavily inspired by &lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;&lt;code&gt;lookatme&lt;/code&gt;&lt;/a&gt;
&lt;code&gt;slides&lt;/code&gt; is a more minimal version of &lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;&lt;code&gt;lookatme&lt;/code&gt;&lt;/a&gt; and written in Go.&lt;/p&gt;
&lt;h3&gt;
Demo&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/maaslalani/slides/main/../assets/demo.gif?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--09WFOAtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/maaslalani/slides/main/../assets/demo.gif%3Fraw%3Dtrue" alt="slides"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;go get github.com/maaslalani/slides
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Usage&lt;/h3&gt;
&lt;p&gt;Create a simple markdown file that contains your slides:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;# Welcome to Slides
A terminal based presentation tool

---

## Everything is markdown
In fact, this entire presentation is a markdown file.

---

## Everything happens in your terminal
Create slides and present them without ever leaving your terminal.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checkout the &lt;a href="https://raw.githubusercontent.com/maaslalani/slides/main/./examples"&gt;example slides&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then, to present, run:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;slides presentation.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You are also able to pass in slides through &lt;code&gt;stdin&lt;/code&gt;, this allows you to &lt;code&gt;curl&lt;/code&gt; and present remote files:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;curl https://example.com/slides.md | slides
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the next slide with any of the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;space&lt;/li&gt;
&lt;li&gt;right&lt;/li&gt;
&lt;li&gt;down&lt;/li&gt;
&lt;li&gt;enter&lt;/li&gt;
&lt;li&gt;n&lt;/li&gt;
&lt;li&gt;k&lt;/li&gt;
&lt;li&gt;l&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go to the previous slide with any of the following keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;left&lt;/li&gt;
&lt;li&gt;up&lt;/li&gt;
&lt;li&gt;p&lt;/li&gt;
&lt;li&gt;h&lt;/li&gt;
&lt;li&gt;j&lt;/li&gt;
&lt;/ul&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/maaslalani/slides"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-million"&gt;
  &lt;/a&gt;
  2. million
&lt;/h3&gt;

&lt;p&gt;&amp;lt;1kb virtual DOM - it's fast! Current Virtual DOM implementations are inadequate—Ranging from overcomplicated to abandoned, most are unusable without sacrificing raw performance and size. Million aims to fix this, providing a library-agnostic Virtual DOM to serve as the core for Javascript libraries.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/millionjs"&gt;
        millionjs
      &lt;/a&gt; / &lt;a href="https://github.com/millionjs/million"&gt;
        million
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🌈 &amp;lt;1kb virtual DOM - it's fast!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/millionjs/million/main/.github/assets/logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6OAZPmDv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/millionjs/million/main/.github/assets/logo.svg" height="60" alt="Million Logo"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h3&gt;
&amp;lt;1kb virtual DOM - it's fast!&lt;/h3&gt;
&lt;p&gt;Current Virtual DOM implementations are inadequate—Ranging from overcomplicated to abandoned, most are unusable without sacrificing raw performance and size. Million aims to fix this, providing a library-agnostic Virtual DOM to serve as the core for Javascript libraries.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://img.shields.io/github/workflow/status/millionjs/million" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0009800b9e366aeab1ad9ea77c4cba4532428f3fd02b56ae8a992e23ef1ac7ac/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d696c6c696f6e6a732f6d696c6c696f6e2f43493f636f6c6f723d464439333336266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265266c6162656c3d6275696c64" alt="CI"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb4372d96cc2a6d35676752263cb932fe0355a26ac139c9ec590e407af0ad0a8/68747470733a2f2f62616467656e2e6e65742f626164676573697a652f62726f746c692f68747470732f756e706b672e636f6d2f6d696c6c696f6e3f7374796c653d666c61742d737175617265266c6162656c3d73697a6526636f6c6f723d413034413943266c6162656c436f6c6f723d303030"&gt;&lt;img src="https://camo.githubusercontent.com/eb4372d96cc2a6d35676752263cb932fe0355a26ac139c9ec590e407af0ad0a8/68747470733a2f2f62616467656e2e6e65742f626164676573697a652f62726f746c692f68747470732f756e706b672e636f6d2f6d696c6c696f6e3f7374796c653d666c61742d737175617265266c6162656c3d73697a6526636f6c6f723d413034413943266c6162656c436f6c6f723d303030" alt="Code Size"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/million" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0edb167656b877289455cc3b78d32a35c386d958687c5ca998718d22257897f1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d696c6c696f6e3f7374796c653d666c61742d73717561726526636f6c6f723d344538324545266c6162656c436f6c6f723d303030" alt="NPM Version"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9881d867ea2e6845ec6156b8fbe26e063704168ce4bf26068e30b89965c2063b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6d696c6c696f6e6a732f6d696c6c696f6e3f636f6c6f723d334346354542266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/9881d867ea2e6845ec6156b8fbe26e063704168ce4bf26068e30b89965c2063b/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f6d696c6c696f6e6a732f6d696c6c696f6e3f636f6c6f723d334346354542266c6162656c436f6c6f723d303030267374796c653d666c61742d737175617265" alt="Code Coverage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://million.js.org" rel="nofollow"&gt;&lt;strong&gt;→ Check out the Million documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installing Million&lt;/h2&gt;
&lt;p&gt;Million doesn't require build tools by default, but it is highly recommended you use NPM to install.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install million&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Hello World Example&lt;/h2&gt;
&lt;p&gt;Below is an extremely simple implementation of a Hello World page using Million.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;createElement&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;patch&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'million'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Initialize app&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;app&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createElement&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-en"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'div'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;'app'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;'Hello World'&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-smi"&gt;document&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;body&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;appendChild&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// Patch content&lt;/span&gt;
&lt;span class="pl-en"&gt;patch&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;app&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;m&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'div'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-s"&gt;'app'&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/millionjs/million"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-haunted"&gt;
  &lt;/a&gt;
  3. Haunted
&lt;/h3&gt;

&lt;p&gt;React's Hooks API implemented for web components&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matthewp"&gt;
        matthewp
      &lt;/a&gt; / &lt;a href="https://github.com/matthewp/haunted"&gt;
        haunted
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      React's Hooks API implemented for web components 👻
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Haunted 🦇 🎃
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://npm.im/haunted" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e3ca092f03e58dd0063235cdc22ebaf3cb8156d71b1298e0d007144d81402a0/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f6861756e746564" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://npm.im/haunted" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/84c9ef8b1de2d9884d086a625025a38fb22807e9972143e0e4ff996108e39e63/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6861756e746564" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React's Hooks API but for standard web components and &lt;a href="https://lit-html.polymer-project.org/" rel="nofollow"&gt;lit-html&lt;/a&gt; or &lt;a href="https://codepen.io/WebReflection/pen/pxXrdy?editors=0010" rel="nofollow"&gt;hyperHTML&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt; &lt;span class="pl-c1"&gt;lang&lt;/span&gt;="&lt;span class="pl-s"&gt;en&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;my-counter&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;my-counter&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;

  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;module&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;html&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://unpkg.com/lit-html/lit-html.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;component&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;useState&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://unpkg.com/haunted/haunted.js'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

    &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-v"&gt;Counter&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
      &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;setCount&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;useState&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-en"&gt;html&lt;/span&gt;&lt;span class="pl-s"&gt;`&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;="&lt;span class="pl-s"&gt;count&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-kos"&gt;${&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;div&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;="&lt;span class="pl-s"&gt;button&lt;/span&gt;" &lt;span class="pl-c1"&gt;@click&lt;/span&gt;=&lt;span class="pl-s1"&gt;&lt;span class="pl-kos"&gt;${&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-s1"&gt;setCount&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt; &lt;span class="pl-c1"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;          Increment&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;button&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;      `&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-kos"&gt;}&lt;/span&gt;

    &lt;span class="pl-s1"&gt;customElements&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;define&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'my-counter'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;component&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-v"&gt;Counter&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;html&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;p&gt;A starter app is available on &lt;a href="https://codesandbox.io/s/github/matthewp/haunted-starter-app/tree/master/" rel="nofollow"&gt;codesandbox&lt;/a&gt; and also can be cloned from &lt;a href="https://github.com/matthewp/haunted-starter-app"&gt;this repo&lt;/a&gt;. This app…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matthewp/haunted"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-react-cool-virtual"&gt;
  &lt;/a&gt;
  4. React Cool Virtual
&lt;/h3&gt;

&lt;p&gt;A tiny React hook for rendering large datasets like a breeze.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wellyshen"&gt;
        wellyshen
      &lt;/a&gt; / &lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;
        react-cool-virtual
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      😎 ♻️ A tiny React hook for rendering large datasets like a breeze.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://github.com/wellyshen/react-cool-virtual/blob/master/README.md" title="React Cool Virtual"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zg6eUDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wellyshen/react-cool-virtual/raw/master/images/logo.svg" alt="React Cool Virtual"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;A tiny React hook for rendering large datasets like a breeze.&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9053dd775cde9dfdb29bb920adefc0f46f21eb879e159377d3381833f9592893/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d636f6f6c2d7669727475616c3f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca301625f96a5911005ac20f63971d03c1f1e2dd5baaa7a590cdfeeacea0ec5b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d636f6f6c2d7669727475616c3f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-cool-virtual" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f0ae183fcc7f3893a5b8f1100bf47ce1302ccaf067422186140e97aee04355c6/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d636f6f6c2d7669727475616c3f6c6162656c3d677a697025323073697a65267374796c653d666c61742d737175617265" alt="gzip size"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/60f4e6a9ba8683a8303d97cab7693a1d022cc822a729ebeb434e801ce870eb67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d312d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
Features &lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
♻️ Renders millions of items with highly performant way, using &lt;a href="https://developers.google.com/web/updates/2016/07/infinite-scroller" rel="nofollow"&gt;DOM recycling&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🎣 Easy to use, based on React &lt;a href="https://reactjs.org/docs/hooks-custom.html#using-a-custom-hook" rel="nofollow"&gt;hook&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;💅🏼 Apply styles without hassle, just &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#basic-usage"&gt;few setups&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🧱 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#fixed-size"&gt;fixed&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#variable-size"&gt;variable&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#dynamic-size"&gt;dynamic&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#real-time-resize"&gt;real-time&lt;/a&gt; heights/widths.&lt;/li&gt;
&lt;li&gt;
🖥 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#responsive-web-design-rwd"&gt;responsive web design (RWD)&lt;/a&gt; for better UX.&lt;/li&gt;
&lt;li&gt;
📌 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#sticky-headers"&gt;sticky headers&lt;/a&gt; for building on-trend lists.&lt;/li&gt;
&lt;li&gt;
🚚 Built-ins &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#infinite-scroll"&gt;load more callback&lt;/a&gt; for you to deal with infinite scroll + &lt;a href="https://uxdesign.cc/what-you-should-know-about-skeleton-screens-a820c45a571a" rel="nofollow"&gt;skeleton screens&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🖱 Imperative &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#scroll-to-offsetitems"&gt;scroll-to methods&lt;/a&gt; for offset, items, and alignment.&lt;/li&gt;
&lt;li&gt;
🛹 Out-of-the-box &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#smooth-scrolling"&gt;smooth scrolling&lt;/a&gt; and the effect is DIY-able.&lt;/li&gt;
&lt;li&gt;
💬 It's possible to implement &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#sticking-to-bottom"&gt;stick to bottom&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#pre-pending-items"&gt;pre-pending items&lt;/a&gt; for chat/feeds.&lt;/li&gt;
&lt;li&gt;
⛳ Provides &lt;code&gt;isScrolling&lt;/code&gt; indicator to you for UI placeholders or &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#use-isscrolling-indicator"&gt;performance optimization&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🗄️ Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#server-side-rendering-ssr"&gt;server-side rendering (SSR)&lt;/a&gt; for a fast &lt;a href="https://developers.google.com/web/updates/2019/02/rendering-on-the-web#server-rendering" rel="nofollow"&gt;FP + FCP&lt;/a&gt; and better &lt;a href="https://developers.google.com/web/updates/2019/02/rendering-on-the-web#server-rendering" rel="nofollow"&gt;SEO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
📜 Supports &lt;a href="https://raw.githubusercontent.com/wellyshen/react-cool-virtual/master/#working-in-typescript"&gt;TypeScript&lt;/a&gt; type…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wellyshen/react-cool-virtual"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-windmill-ui"&gt;
  &lt;/a&gt;
  5. Windmill UI
&lt;/h3&gt;

&lt;p&gt;The component library for fast and accessible development of gorgeous interfaces.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/estevanmaito"&gt;
        estevanmaito
      &lt;/a&gt; / &lt;a href="https://github.com/estevanmaito/windmill-react-ui"&gt;
        windmill-react-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🧩 The component library for fast and accessible development of gorgeous interfaces.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Windmill React UI&lt;/h1&gt;
&lt;p&gt;The component library for fast and accessible development of gorgeous interfaces.&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://codecov.io/gh/estevanmaito/windmill-react-ui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a5bd9c8caa03ef358f02ede9390b6d4907d0a3a24b1f394c543f6fd8edf4420/68747470733a2f2f636f6465636f762e696f2f67682f6573746576616e6d6169746f2f77696e646d696c6c2d72656163742d75692f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/estevanmaito/windmill-react-ui/workflows/Build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yQ81UqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/estevanmaito/windmill-react-ui/workflows/Build/badge.svg" alt="Build"&gt;&lt;/a&gt;
  &lt;a href="https://www.npmjs.com/package/@windmill/react-ui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abd9bff35f09b1266882516ec43213b1f7ef1d8295addc0e071642e8c8ae771f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4077696e646d696c6c2f72656163742d7569" alt="npm"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/estevanmaito/windmill-react-ui/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/ac7c0e9d1cce610f4457ef0a553787a65854e26dcc72a9c954af10807a92bf90/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6573746576616e6d6169746f2f77696e646d696c6c2d72656163742d7569" alt="MIT License"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Projects using it: &lt;a href="https://github.com/estevanmaito/windmill-dashboard-react"&gt;Windmill Dashboard React&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Mission&lt;/h2&gt;
&lt;p&gt;Be the most accessible it can be out of the box and the fastest way to production.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://windmillui.com/react-ui" rel="nofollow"&gt;Go to docs to see complete, live examples&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
🚀 Usage&lt;/h2&gt;
&lt;p&gt;Install&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm i &lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Inside &lt;code&gt;tailwind.config.js&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;windmill&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui/config'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;
&lt;span class="pl-smi"&gt;module&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;exports&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;windmill&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;purge&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;theme&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;extend&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;variants&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;plugins&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then place &lt;code&gt;Windmill&lt;/code&gt; at the root of your project (the order doesn't matter, as long as your application is inside).&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// index.js&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-dom'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;App&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'./App'&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;Windmill&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;a class="mentioned-user" href="https://dev.to/windmill"&gt;@windmill&lt;/a&gt;
/react-ui'&lt;/span&gt;
&lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;render&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Windmill&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;App&lt;/span&gt; &lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Windmill&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/estevanmaito/windmill-react-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-minitypescript"&gt;
  &lt;/a&gt;
  6. mini-typescript
&lt;/h3&gt;

&lt;p&gt;A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sandersn"&gt;
        sandersn
      &lt;/a&gt; / &lt;a href="https://github.com/sandersn/mini-typescript"&gt;
        mini-typescript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
mini-typescript&lt;/h1&gt;
&lt;p&gt;A miniature model of the Typescript compiler, intended to teach the structure of the real Typescript compiler&lt;/p&gt;
&lt;p&gt;I started this project as part of reading &lt;a href="https://www.cs.princeton.edu/~appel/modern/ml/" rel="nofollow"&gt;Modern Compiler Implementation in ML&lt;/a&gt; because I wanted to learn more about compiler backends. When I started building the example compiler I found I disagreed with the implementation of nearly everything in the &lt;em&gt;frontend&lt;/em&gt;. So I wrote my own, and found that I had just written &lt;a href="https://github.com/sandersn/minits"&gt;a small Typescript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I realised a small Typescript would be useful to others who want to learn how the Typescript compiler works. So I rewrote it in Typescript and added some exercises to let you practise with it. The resulting compiler covers a tiny slice of Typescript: just &lt;code&gt;var&lt;/code&gt; declarations, assignments and numeric literals. The only two types are &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
Limitations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;This is an example of the way that Typescript's compiler does things…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sandersn/mini-typescript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-pinia"&gt;
  &lt;/a&gt;
  7. Pinia
&lt;/h3&gt;

&lt;p&gt;Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/posva"&gt;
        posva
      &lt;/a&gt; / &lt;a href="https://github.com/posva/pinia"&gt;
        pinia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://pinia.esm.dev" rel="nofollow"&gt;
    &lt;img width="180" src="https://camo.githubusercontent.com/6ef810688cb6b9312dd3bbf7e0262f65076ec7b22d779760768a44b30906902b/68747470733a2f2f70696e69612e65736d2e6465762f6c6f676f2e737667" alt="Pinia logo"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://npmjs.com/package/pinia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/88cc30835e26cc461e01ac26522a0c9089bdc6699ae3ab2284b69ff331bc64c0/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f70696e69612f6e657874" alt="npm package"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/posva/pinia/actions/workflows/test.yml?query=branch%3Av2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--84dP_r_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/posva/pinia/workflows/test/badge.svg%3Fbranch%3Dv2" alt="build status"&gt;&lt;/a&gt;
  &lt;a href="https://codecov.io/github/posva/pinia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b01a3ad99dd5840fc1dde834f3b85cfc3e70511c6ccaaf8c3ce28e8964d18c8e/68747470733a2f2f62616467656e2e6e65742f636f6465636f762f632f6769746875622f706f7376612f70696e69612f7632" alt="code coverage"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;
Pinia&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Intuitive, type safe and flexible Store for Vue&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
💡 Intuitive&lt;/li&gt;
&lt;li&gt;
🔑 Type Safe&lt;/li&gt;
&lt;li&gt;
⚙️ Devtools support&lt;/li&gt;
&lt;li&gt;
🔌 Extensible&lt;/li&gt;
&lt;li&gt;
🏗 Modular by design&lt;/li&gt;
&lt;li&gt;
📦 Extremely light&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pinia works both for Vue 2.x and Vue 3.x and you are currently on the branch that supports Vue 3.x. &lt;strong&gt;If you are looking for the version compatible with Vue 2.x, check the &lt;a href="https://github.com/posva/pinia/tree/v1"&gt;&lt;code&gt;v1&lt;/code&gt; branch&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pinia is is the most similar English pronunciation of the word &lt;em&gt;pineapple&lt;/em&gt; in Spanish: &lt;em&gt;piña&lt;/em&gt;. A pineapple is in reality a group of individual flowers that join together to create a multiple fruit. Similar to stores, each one is born individually, but they are all connected at the end. It's also a delicious tropical fruit indigenous to South America.&lt;/p&gt;
&lt;h2&gt;
👉 &lt;a href="https://j4qzw.csb.app/" rel="nofollow"&gt;Demo on CodeSandbox&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
Help me keep working on this project 💚
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sponsors/posva"&gt;Become a Sponsor on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paypal.me/posva" rel="nofollow"&gt;One-time donation via PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
Gold Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://passionatepeople.io/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/d4506da3296fff8628dc29f238616e289ed1a19fcb218ad7d3c801a23d8ccf81/68747470733a2f2f696d67322e73746f7279626c6f6b2e636f6d2f30783230302f66696c746572733a3a666f726d61742877656270292f662f38363338372f782f346366366137306138632f6c6f676f2d77686974652d746578742e737667" height="72px" alt="Passionate People"&gt;
  &lt;/a&gt;
  &lt;a href="https://vuejobs.com/?utm_source=vuerouter&amp;amp;utm_campaign=sponsor" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTWr7bYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/posva/pinia/v2/docs/public/sponsors/vuejobs.png" height="72px" alt="VueJobs"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h4&gt;
Silver Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://www.vuemastery.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/144a5c7a2403372a50942d89733c8588a886803cea66e7f1fd7c48d191c07f56/68747470733a2f2f7777772e7675656d6173746572792e636f6d2f696d616765732f7675656d6173746572792e737667" height="42px" alt="Vue Mastery"&gt;
  &lt;/a&gt;
  &lt;a href="https://vuetifyjs.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/357f56184da9de32ccc85e38e79836b6431abacb53d2119abff708966d528657/68747470733a2f2f63646e2e767565746966796a732e636f6d2f646f63732f696d616765732f6c6f676f732f767565746966792d6c6f676f2d6c696768742d746578742e737667" alt="Vuetify" height="42px"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codestream.com/?utm_source=github&amp;amp;utm_campaign=vuerouter&amp;amp;utm_medium=banner" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/fdc458a37453371083e7a6a7881bff676e15282d4b16b79154d0cf24b3c091cf/68747470733a2f2f616c742d696d616765732e636f646573747265616d2e636f6d2f636f646573747265616d5f6c6f676f5f767565726f757465722e706e67" alt="CodeStream" height="42px"&gt;
  &lt;/a&gt;
  &lt;a href="https://birdeatsbug.com/?utm_source=vuerouter&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=silver" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/51de316d55eed3be60052c5fd6f541aaabc5f41ede7c7129de4701884dc5d9a6/68747470733a2f2f7374617469632e62697264656174736275672e636f6d2f67656e6572616c2f626972642d6c6f676f747970652d3135307832372e737667" alt="Bird Eats bug" height="42px"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h4&gt;
Bronze Sponsors&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://storyblok.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/158f5c597e91da997e32ae58c61c5e093b13bd82b7838e523d10350eb04f6b76/68747470733a2f2f612e73746f7279626c6f6b2e636f6d2f662f35313337362f33383536783832342f666561343464353261392f636f6c6f7265642d66756c6c2e706e67" alt="Storyblok" height="32px"&gt;
  &lt;/a&gt;
  &lt;a href="https://nuxtjs.org" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/26d3cf009b5897ff0881919fe49e827444c849541284763b685d49a2a2fc6323/68747470733a2f2f6e7578746a732e6f72672f6c6f676f732f6e7578746a732d7479706f2d77686974652e737667" alt="NuxtJS" height="32px"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
FAQ&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/posva/pinia"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-squoosh"&gt;
  &lt;/a&gt;
  8. Squoosh
&lt;/h3&gt;

&lt;p&gt;Make images smaller using best-in-class codecs, right in the browser.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GoogleChromeLabs"&gt;
        GoogleChromeLabs
      &lt;/a&gt; / &lt;a href="https://github.com/GoogleChromeLabs/squoosh"&gt;
        squoosh
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Make images smaller using best-in-class codecs, right in the browser.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://squoosh.app" rel="nofollow"&gt;Squoosh&lt;/a&gt;!&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://squoosh.app" rel="nofollow"&gt;Squoosh&lt;/a&gt; is an image compression web app that allows you to dive into the advanced options provided
by various image compressors.&lt;/p&gt;
&lt;h1&gt;
API &amp;amp; CLI&lt;/h1&gt;
&lt;p&gt;Squoosh now has &lt;a href="https://github.com/GoogleChromeLabs/squoosh/tree/dev/libsquoosh"&gt;an API&lt;/a&gt; and &lt;a href="https://github.com/GoogleChromeLabs/squoosh/tree/dev/cli"&gt;a CLI&lt;/a&gt; that allows you to compress many images at once.&lt;/p&gt;
&lt;h1&gt;
Privacy&lt;/h1&gt;
&lt;p&gt;Google Analytics is used to record the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://support.google.com/analytics/answer/6004245?ref_topic=2919631" rel="nofollow"&gt;Basic visit data&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Before and after image size once an image is downloaded. These values are rounded to the nearest
kilobyte.&lt;/li&gt;
&lt;li&gt;If install is available, when Squoosh is installed, and what method was used to install Squoosh.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Image compression is handled locally; no additional data is sent to the server.&lt;/p&gt;
&lt;h1&gt;
Building locally&lt;/h1&gt;
&lt;p&gt;Clone the repo, and:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install
npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;You can run the development server with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm run dev&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GoogleChromeLabs/squoosh"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-map-of-javascript"&gt;
  &lt;/a&gt;
  9. Map of javascript
&lt;/h3&gt;

&lt;p&gt;Javascript on one sheet. (and one for algorithms)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mechaniac"&gt;
        mechaniac
      &lt;/a&gt; / &lt;a href="https://github.com/mechaniac/Map-of-Javascript"&gt;
        Map-of-Javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Javascript on one sheet. (and one for algorithms)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
map of javascript&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/Javascript_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fqHtAGIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/Javascript_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;data structures and alogrithms
&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/algorithms_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_JXff5Ns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/algorithms_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTML and CSS and DOM interaction
&lt;a rel="noopener noreferrer" href="https://github.com/mechaniac/javaScript_cheatSheet/blob/main/HTML_CSS_01.jpg?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_4RAbCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mechaniac/javaScript_cheatSheet/raw/main/HTML_CSS_01.jpg%3Fraw%3Dtrue" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mechaniac/Map-of-Javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-cssgram"&gt;
  &lt;/a&gt;
  10. CSSgram
&lt;/h3&gt;

&lt;p&gt;CSSGram is an Instagram filter library written in Sass and CSS.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/una"&gt;
        una
      &lt;/a&gt; / &lt;a href="https://github.com/una/CSSgram"&gt;
        CSSgram
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      CSS library for Instagram filters
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/438b85cd0a1eb1c20cdb3b02b8dcfa2cbe6b5ed95599bbfd13ed5587f516ae3d/687474703a2f2f756e612e696d2f4353536772616d2f696d672f6373736772616d2d6c6f676f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/438b85cd0a1eb1c20cdb3b02b8dcfa2cbe6b5ed95599bbfd13ed5587f516ae3d/687474703a2f2f756e612e696d2f4353536772616d2f696d672f6373736772616d2d6c6f676f2e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CSSgram&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cdnjs.com/libraries/cssgram" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b84d1ea3bcdd903d75dc350914d4be0d83fe7e670818e2542142b93f22abe76/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f6373736772616d2e737667" alt="CDNJS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSSGram is an Instagram filter library written in Sass and CSS.&lt;/p&gt;
&lt;h2&gt;
What is This?&lt;/h2&gt;
&lt;p&gt;Simply put, CSSgram is a library for editing your images with Instagram-like filters directly using CSS. What we're doing is adding filters to the images, as well as applying color and/or gradient overlays via various blending techniques to mimic filter effects. This means &lt;em&gt;less manual image processing&lt;/em&gt; and more fun filter effects on the web!&lt;/p&gt;
&lt;p&gt;We're using pseudo-elements (i.e. &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt;) to create the filter effects, so you must apply these filters on a containing element (i.e. not a &lt;em&gt;replaced element&lt;/em&gt; like &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;). The recommendation is to wrap your images in a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; tag. More about the tag &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Browser Support&lt;/h2&gt;
&lt;p&gt;This library uses &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/filter" rel="nofollow"&gt;CSS Filters&lt;/a&gt; and &lt;a href="https://css-tricks.com/basics-css-blend-modes/" rel="nofollow"&gt;CSS Blend Modes&lt;/a&gt;. These features are supported in the following browsers:&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/b4f81b98c0134da8baa7f6f0baef1de19b4f4abad6b9a3e385c7ee77bbcca790/687474703a2f2f692e696d6775722e636f6d2f4e6a49566d524f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b4f81b98c0134da8baa7f6f0baef1de19b4f4abad6b9a3e385c7ee77bbcca790/687474703a2f2f692e696d6775722e636f6d2f4e6a49566d524f2e706e67" width="48px" height="48px" alt="Chrome logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/37429ee0cb738f5c99542d342dbea5c292be4031f22591d916b71d4e7673282b/687474703a2f2f692e696d6775722e636f6d2f6f316d355263512e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/37429ee0cb738f5c99542d342dbea5c292be4031f22591d916b71d4e7673282b/687474703a2f2f692e696d6775722e636f6d2f6f316d355263512e706e67" width="48px" height="48px" alt="Firefox logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/638c765156da63771c04eda6ef717555566acda0ddaa1886e698c415d457e7a5/687474703a2f2f692e696d6775722e636f6d2f305235776871632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/638c765156da63771c04eda6ef717555566acda0ddaa1886e698c415d457e7a5/687474703a2f2f692e696d6775722e636f6d2f305235776871632e706e67" width="48px" height="48px" alt="Internet Explorer logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9028affececb1b44a4257634ffb8f41d403c93bddf7518e0b7ee51cfa20164c3/687474703a2f2f692e696d6775722e636f6d2f6b513165374d6b2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9028affececb1b44a4257634ffb8f41d403c93bddf7518e0b7ee51cfa20164c3/687474703a2f2f692e696d6775722e636f6d2f6b513165374d6b2e706e67" width="45px" height="45px" alt="Edge logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/739acc86a4e79575351f9f0efad962a6b46e597fa40140c6b393349defb63909/687474703a2f2f692e696d6775722e636f6d2f46534a4238424c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/739acc86a4e79575351f9f0efad962a6b46e597fa40140c6b393349defb63909/687474703a2f2f692e696d6775722e636f6d2f46534a4238424c2e706e67" width="48px" height="48px" alt="Opera logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1bf2bf2016ed3bd36768af9d37aff2c7b50ec5317440e02d93a595313d086b4f/687474703a2f2f692e696d6775722e636f6d2f794c77463234492e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/1bf2bf2016ed3bd36768af9d37aff2c7b50ec5317440e02d93a595313d086b4f/687474703a2f2f692e696d6775722e636f6d2f794c77463234492e706e67" width="48px" height="48px" alt="Safari logo"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;43+ ✔
&lt;/td&gt;
&lt;td&gt;38+ ✔
&lt;/td&gt;
&lt;td&gt;Nope ✘&lt;/td&gt;
&lt;td&gt;13 ✔
&lt;/td&gt;
&lt;td&gt;32+ ✔
&lt;/td&gt;
&lt;td&gt;8+ ✔
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/una/CSSgram"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,934 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +2,106 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/electron/electron"&gt;Electron&lt;/a&gt; +1,706 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +1,442 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +1,148 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/remorses/vitro"&gt;Vitro&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alwinn1977/react-simple-flowchart"&gt;react-simple-flowchart&lt;/a&gt; +19%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +18%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +13%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +12%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +7,202 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,806 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,594 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +3,148 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,120 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +380%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +169%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/observablehq/plot"&gt;Observable Plot&lt;/a&gt; +47%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appwrite/appwrite"&gt;Appwrite&lt;/a&gt; +40%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sinclairzx81/hammer"&gt;Hammer&lt;/a&gt; +39%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Learn React and Redux-Saga By Building Netflix</title>
      <author>Hiep Le</author>
      <pubDate>Fri, 11 Jun 2021 13:55:03 +0000</pubDate>
      <link>https://dev.to/hieptl/learn-react-and-redux-saga-by-building-netflix-28hf</link>
      <guid>https://dev.to/hieptl/learn-react-and-redux-saga-by-building-netflix-28hf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCZt_fGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phbevvg6q36s5qxf20ax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCZt_fGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phbevvg6q36s5qxf20ax.png" alt="learn-react-by-building-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm Hiep. I work as a full-time software engineer. Most of my open-source projects are focused on one thing - to help people learn 📚. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before moving on with this part, you should follow the first part and the second part in this series:&lt;/p&gt;

&lt;p&gt;The first part - &lt;strong&gt;Learn React By Building Netflix&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/netflix-clone"&gt;https://github.com/hieptl/netflix-clone&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dev.to: &lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second part - &lt;strong&gt;Learn Redux by Building Netflix&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-clone-with-redux"&gt;https://github.com/hieptl/netflix-clone/tree/main/advanced/netflix-clone-with-redux&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dev.to: &lt;a href="https://dev.to/hieptl/learn-redux-by-building-netflix-4dem"&gt;https://dev.to/hieptl/learn-redux-by-building-netflix-4dem&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The repository helps you learn Redux Saga by buiding Netflix. It means that you are learning Redux Saga by building a real-life project. I will explain concepts in detail. This post is the fourth part in my series and it is suitable for beginners.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you feel the repository is useful, please help me share the post and give me Github ⭐. It will make me feel motivation to work even harder. I will try to make many open sources and share to the community.&lt;/p&gt;

&lt;p&gt;I also created some series that help you improve your practical skills: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Master Design Patterns by Building Real Projects - Javascript.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects"&gt;https://github.com/hieptl/master-javascript-design-patterns-by-building-real-projects&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Blog: &lt;a href="https://dev.to/hieptl/series/13039"&gt;https://dev.to/hieptl/series/13039&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Preface&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;This course will help you to learn Redux-Saga by building Netflix. It means that you are learning by doing a real-life project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;a href="#how-to-run-the-project"&gt;How to Run the Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#live-demo"&gt;Live Demo.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#introduction-about-the-creator"&gt;Introduction about the Creator.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#greenwich-university"&gt;      Greenwich University.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#hitachi-vantara-vietnam"&gt;      Hitachi Vantara Vietnam.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#prequisites"&gt;Prequisites.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#softwares"&gt;      Softwares.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#technical-skills"&gt;      Technical Skills.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#materials"&gt;      Materials.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="#purposes-of-the-course"&gt;Purposes of the Course.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#final-project"&gt;      Final Project.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#job"&gt;      Job.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="#what-is-redux-middleware"&gt;Redux Middleware.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.1&lt;/td&gt;
&lt;td&gt;&lt;a href="#what-is-redux-saga"&gt;      What is Redux Saga.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.2&lt;/td&gt;
&lt;td&gt;&lt;a href="#the-architecture-of-redux-middleware"&gt;      The Architecture of Redux Middleware.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.3&lt;/td&gt;
&lt;td&gt;&lt;a href="#why"&gt;      Why.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.4&lt;/td&gt;
&lt;td&gt;&lt;a href="#when"&gt;      When.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.5&lt;/td&gt;
&lt;td&gt;&lt;a href="#how"&gt;      How.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="#build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;Build Login Feature By Using Redux and Redux Saga - Netflix&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="#summary"&gt;Summary.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="#useful-resources-to-learn-react"&gt;Useful Resources to Learn React.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="#references"&gt;References.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#table-of-images"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Images.&lt;/strong&gt;
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Topics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure1"&gt;Figure 1: Redux Middleware - Architecture.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure2"&gt;Figure 2: Login Page - Netflix.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="#figure3"&gt;Figure 3: The Final Result.&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="how-to-run-the-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#0-how-to-run-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;0. How to Run the Project.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Clone the project by using git clone or download the zip file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Open "terminal" / "cmd" / "gitbash" and change directory to "netflix-clone" and run "npm install" to install dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Run "npm start" to run the fron-end project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="live-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-live-demo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Live Demo.&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kkiqq.csb.app/login"&gt;https://kkiqq.csb.app/login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Username: &lt;a href="mailto:demo@gmail.com"&gt;demo@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Password: 123456&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="introduction-about-the-creator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-introduction-about-the-creator"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Introduction about the Creator.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="greenwich-university"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-greenwich-university"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.1. Greenwich University.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Valedictorian.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GPA 4.0 / 4.0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Machine Learning paper - Recommendation System - IEEE/ICACT2020.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Co-Founder / Mentor IT club.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="hitachi-vantara-vietnam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-hitachi-vantara-vietnam"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.2. Hitachi Vantara Vietnam.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Employee of the year.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Second prize - innovation contest.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Techlead - HN branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of CoE Leaders (Center of Excellence).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="prequisites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prequisites"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Prequisites.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="softwares"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-softwares"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.1. Softwares.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install NodeJS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An IDE or a text editor (VSCode, Intellij, Webstorm, etc).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="technical-skills"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-technical-skills"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.2. Technical Skills.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic programming skill.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic HTML, CSS, JS skills.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="materials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-materials"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.3. Materials.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Html, css, js (source code) was prepared because I want to focus on React and share knowledge about React. Building html and css from scratch would take a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;README.md (the md file will contain everything about the course).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix data will be used to import to Firebase. In this course, we use Firebase as our back-end service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="purposes-of-the-course"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-purposes-of-the-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Purposes of the Course.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a id="final-project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-final-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.1. Final Project.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The course would help you have understanding about React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You could build the final project with end-to-end solution (front-end solution using React and back-end solution using Firebase).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="job"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-job"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.2. Job.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;After finishing the course, you could get a job with fresher / junior position.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="what-is-redux-middleware"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-redux-middleware"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Redux Middleware&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;It provides a third-party extension point between dispatching an action, and the moment it reaches the reducer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="what-is-redux-saga"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#51-what-is-redux-saga"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.1. What is Redux Saga&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;redux-saga is a library that aims to make application side effects (i.e. asynchronous things like data fetching and impure things like accessing the browser cache) easier to manage, more efficient to execute, easy to test, and better at handling failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The mental model is that a saga is like a separate thread in your application that's solely responsible for side effects. redux-saga is a redux middleware, which means this thread can be started, paused and cancelled from the main application with normal redux actions, it has access to the full redux application state and it can dispatch redux actions as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="the-architecture-of-redux-middleware"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#52-the-architecture-of-redux-middlware"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.2. The Architecture of Redux Middlware&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a id="figure1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svpPsS2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgfava2ri7jttg4idnji.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svpPsS2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgfava2ri7jttg4idnji.gif" alt="redux-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1. Redux Middleware - Architecture.&lt;/p&gt;

&lt;p&gt;&lt;a id="why"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#53-why"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.3. Why&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With a plain basic Redux store, you can only do simple synchronous updates by dispatching an action. Middleware extends the store's abilities, and lets you write async logic that interacts with the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redux-saga are the recommended middleware for basic Redux side effects logic, including complex synchronous logic that needs access to the store, and simple async logic like AJAX requests.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="when"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#54-when"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.4. When&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can do synchronous updates by dispatching an action. In some cases, you need to perform asynchronous actions. It is time to use Redux Middleware. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="how"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#55-how"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.5. How&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Firstly, we need to understand the flow first. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The components will get state from the store. Whenever the state is changed, the components will be re-rendered.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The components will dispatch actions to tell the reducers update the state in the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the case, we want to dispatch some asynchronous actions. The middleware will perform some side effects and get then pass the result to the reducers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The reducers will take the responsibility to update the state. It will be used to return the latest state. In fact, we will not dispatch actions in the reducers. It is an anti-patten, we should avoid that.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to integrate Redux Saga in our Netflix application, please follow the below steps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: define the actions including the actions and the action's types. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: define the reducers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: define the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 4: Import redux-saga and apply middleware to the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 5: Use the store in our application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6: Let our components get the state from the store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 7: Let our components dispatch the actions to the store.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-build-login-feature-by-using-redux-and-redux-saga-netflix"&gt;
  &lt;/a&gt;
  6. Build Login Feature by Using Redux and Redux Saga - Netflix.
&lt;/h2&gt;

&lt;p&gt;&lt;a id="figure2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvfPiQpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29z5cdnnsyzmb3k0f4dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvfPiQpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/29z5cdnnsyzmb3k0f4dw.png" alt="reduc-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2. Login Page - Netflix.&lt;/p&gt;

&lt;p&gt;In the first part of the series, we built the login feature by using pure React. In this part, we will refactor the code and re-build the login feature with supporting from Redux-Saga.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 1: Install the Redux-Saga by running &lt;strong&gt;npm install redux-saga&lt;/strong&gt; or &lt;strong&gt;yarn add redux-saga&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 2: Create &lt;strong&gt;services&lt;/strong&gt; folder. The folder will be used to contain files which interact with the back-end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 3: Create &lt;strong&gt;LoginService.js&lt;/strong&gt; file in &lt;strong&gt;services&lt;/strong&gt; folder. &lt;strong&gt;LoginService&lt;/strong&gt; is used to perform auth feature.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import firebase authentication.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../firebase/firebase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firebaseAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;signInWithEmailAndPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Step 4: Create &lt;strong&gt;LoginActionTypes.js&lt;/strong&gt; in &lt;strong&gt;actions&lt;/strong&gt; folder. The file will specify action's types for the login reducer such as login action, etc.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LOGIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LOGIN&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Step 5: Create &lt;strong&gt;sagas&lt;/strong&gt; folder. The folder will be used to store different sagas in the application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 6: Create &lt;strong&gt;LoginSaga.js&lt;/strong&gt; inside &lt;strong&gt;sagas&lt;/strong&gt; folder.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;takeLatest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux-saga/effects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import action types.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../actions/LoadingActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../actions/LoginActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import login service.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginService&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../services/LoginService&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// show loading indicator.&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SHOW_LOADING&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="c1"&gt;// call login service.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userCredentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;loginService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userCredentials&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Signed in user: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userCredentials&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// hide loading indicator.&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loadingActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HIDE_LOADING&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;takeLatest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1st NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In saga file, we define functions as generator functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each saga function will be associated with an action. For this reason, the function accepts &lt;strong&gt;action&lt;/strong&gt; as parameter. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;put&lt;/strong&gt; is used to dispatch other actions in redux-saga. In this case, we dispatch &lt;strong&gt;SHOW_LOADING&lt;/strong&gt; ans &lt;strong&gt;HIDE_LOADING&lt;/strong&gt; actions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;call(fn, ...args)&lt;/strong&gt; creates an Effect description that instructs the middleware to call the function fn with args as arguments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As mentioned before, each saga function should be associated with an action. We associate the &lt;strong&gt;login&lt;/strong&gt; function with &lt;strong&gt;loginActionTypes.LOGIN&lt;/strong&gt; action.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;takeLatest&lt;/strong&gt; gets the response of the latest request that was fired&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 7: In fact, we could have many sagas in our application. The best practice is to combine all sagas into a root saga. Create &lt;strong&gt;index.js&lt;/strong&gt; file in &lt;strong&gt;sagas&lt;/strong&gt; folder. The &lt;strong&gt;index.js&lt;/strong&gt; file is used to combine all sagas.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux-saga/effects&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import sagas.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;loginSaga&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./LoginSaga&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;loginSaga&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2nd NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;all&lt;/strong&gt;: is used to execute different sagas in parallel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We are importing different sagas from different files and combine them into a single root saga.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 8: Update &lt;strong&gt;store.js&lt;/strong&gt; with the following code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import create store&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyMiddleware&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redux&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import root reducer.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reducers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import redux saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;createSagaMiddleware&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redux-saga&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import root saga.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;rootSaga&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./sagas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;applyMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;sagaMiddleware&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rootSaga&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;3rd NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;applyMiddleware&lt;/strong&gt;: is used to apply middleware to the store. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;createSagaMiddleware&lt;/strong&gt;: is used to define saga middleware.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We need to import the root saga and it will be the parameter of &lt;strong&gt;sagaMiddleware.run&lt;/strong&gt; function.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Step 9: In &lt;strong&gt;LoginForm.js&lt;/strong&gt;, we should perform auth feature by dispatching the login action.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import react.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import useDispatch to dispach an action to the store.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// import action tyoes.&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../actions/LoginActionTypes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * create LoginForm component.
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// create email and password state to store user's credentials.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// create dispatch object to dispatch an action to the store.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDispatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * handle event when the user clicks on "Login" button.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// call firebase authentication service.&lt;/span&gt;
    &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update email state when the user inputs the email field.
   * @param {*} e - synthetic event to get the latest email's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onEmailChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get email value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update email state.&lt;/span&gt;
    &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedEmail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * update password state when the user input the password field.
   * @param {*} e - synthetic event to get the latest password's value.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// get password value.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// update password state.&lt;/span&gt;
    &lt;span class="nx"&gt;setPassword&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatedPassword&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input mb-16&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Email or phone number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onEmailChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
            &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onPasswordChanged&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__submit-btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__options&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Remember&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__need-help&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Need&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__footer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://assets.nflxext.com/ffe/siteui/login/images/FB-f-Logo__blue_57.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fb&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__new-to-nl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;New&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Netflix&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__sign-up&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;up&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;login-body__google_captcha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="kr"&gt;protected&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;Google&lt;/span&gt; &lt;span class="nx"&gt;reCAPTCHA&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;ensure&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;re not a
            bot.
            &amp;lt;span className="login-body__learn-more"&amp;gt;Learn more.&amp;lt;/span&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
// export LoginForm component.
export default LoginForm;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;4th NOTE&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We import &lt;strong&gt;useDispatch&lt;/strong&gt; to dispatch action to the store. &lt;/li&gt;
&lt;/ul&gt;


&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;loginActionTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After dispatching the login action, the login function in &lt;strong&gt;LoginSaga&lt;/strong&gt; will be executed to perform side effects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After running the code, your result should be like this. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a id="figure3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---00RdJrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtpos5g4l7wvmv5f8y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---00RdJrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtpos5g4l7wvmv5f8y6.png" alt="reduc-middleware-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3. The Final Result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a id="summary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Summary&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can do synchronous updates by dispatching an action. In some cases, you need to perform asynchronous actions. It is time to use Redux Middleware. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redux-saga are the recommended middleware for basic Redux side effects logic, including complex synchronous logic that needs access to the store, and simple async logic like AJAX requests.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;applyMiddleware&lt;/strong&gt; is used to apply middleware to the store. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In fact, we can apply multiple middlewares.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you so much for taking the course. I hope that you could understand about Redux and you can build many real-life projects by using React (as front-end) and Firebase (as back-end) in order to solve many problems and make our life become better.&lt;/p&gt;

&lt;p&gt;&lt;a id="useful-resources-to-learn-react"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources-to-learn-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Useful Resources to Learn React.&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a id="references"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  &lt;strong&gt;References&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;[1]. &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;https://reactjs.org/docs/getting-started.html&lt;/a&gt;.&lt;br&gt;
[2]. &lt;a href="https://firebase.google.com/docs/database"&gt;https://firebase.google.com/docs/database&lt;/a&gt;.&lt;br&gt;
[3]. &lt;a href="https://firebase.google.com/docs/auth/web/password-auth"&gt;https://firebase.google.com/docs/auth/web/password-auth&lt;/a&gt;.&lt;br&gt;
[4]. &lt;a href="https://firebase.google.com/docs/hosting"&gt;https://firebase.google.com/docs/hosting&lt;/a&gt;.&lt;br&gt;
[5]. &lt;a href="https://redux.js.org/"&gt;https://redux.js.org/&lt;/a&gt;&lt;br&gt;
[6]. &lt;a href="https://redux-saga.js.org/"&gt;https://redux-saga.js.org/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>less code (words frequency)</title>
      <author>Konstantinos Blatsoukas</author>
      <pubDate>Fri, 11 Jun 2021 13:53:34 +0000</pubDate>
      <link>https://dev.to/konstantinosblatsoukasrepo/less-code-words-frequency-11kp</link>
      <guid>https://dev.to/konstantinosblatsoukasrepo/less-code-words-frequency-11kp</guid>
      <description>&lt;p&gt;A blog that solves a programming puzzle (&lt;em&gt;words frequency&lt;/em&gt; kata) in three ways.&lt;br&gt;
The goal is first to write a correct program, then at each solution&lt;br&gt;
to reduce the total lines of the program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-kata"&gt;
  &lt;/a&gt;
  The kata
&lt;/h2&gt;

&lt;p&gt;The problem has as an input a string with characters and as an output a map&lt;br&gt;
that the key is a character and a value how many times this character appeared.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inputoutput-example"&gt;
  &lt;/a&gt;
  input/output example
&lt;/h3&gt;

&lt;p&gt;input: "aaabb"&lt;br&gt;
output: {a: 3, b: 2} // in java map the keys are the a, b and the corresponding values 3, 2&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#method-signature"&gt;
  &lt;/a&gt;
  method signature
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;computeFrequencies&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution-1-no-use-of-functional-java"&gt;
  &lt;/a&gt;
  Solution 1 (no use of functional java)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;computeFrequenciesV1&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;containsKey&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;oldValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;oldValue&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;solution explanation&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Map instantiation (1 line)&lt;/li&gt;
&lt;li&gt;classic for loop with index (1 line)&lt;/li&gt;
&lt;li&gt;get the current character (1 line)&lt;/li&gt;
&lt;li&gt;check if the character if it is contained in the map (with if statement) (1 line)
if it is get the previous counter value and increase it
(!! notice the ++ as prefix if you write it as suffix the counter will not increase the number)
and put the new value in the map (2 lines)&lt;/li&gt;
&lt;li&gt;else, put the new character with the value 1 (3 lines, else and curly brace included)&lt;/li&gt;
&lt;li&gt;for termination (1 line)&lt;/li&gt;
&lt;li&gt;finally, return map (1 line)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;solution total lines&lt;/strong&gt;: 11&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-2-with-functional-java"&gt;
  &lt;/a&gt;
  Solution 2 (with functional java)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;computeFrequenciesV2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compute&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;solution explanation&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Map instantiation (1 line)&lt;/li&gt;
&lt;li&gt;classic for loop with index (1 line)&lt;/li&gt;
&lt;li&gt;get the current character (1 line)&lt;/li&gt;
&lt;li&gt;at this line compute method is used (magic happens here!).
compute method has two arguments:
The first is the key of the map.
The second is a function (or BiFunction) with the key and the value.
If there is a value that value increased and this is the new value for the key (character).
Otherwise, the value (counter) is initialized to 1. (1 line!!)
&lt;strong&gt;1 line instead of 6 of the first solution&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;curly brace (1 line)&lt;/li&gt;
&lt;li&gt;finally, return map (1 line)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;solution total lines&lt;/strong&gt;: 6 from 11, not bad and still readable I think&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-3-only-functional-java"&gt;
  &lt;/a&gt;
  Solution 3 (only functional java)
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Long&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;computeFrequenciesV3&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;chars&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;mapToObj&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;groupingBy&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Collectors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;counting&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;solution explanation&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;with chars method we get an IntStream&lt;/li&gt;
&lt;li&gt;with mapToObj we map the int value to char&lt;/li&gt;
&lt;li&gt;finally, by using the collect method with the groupingBy
we get the map that we want!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;solution total lines&lt;/strong&gt;: 3, we have a winner!&lt;/p&gt;

&lt;p&gt;groupingBy explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;takes two arguments, the first specifies the key of group (e.g. c -&amp;gt; c).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;for example (in our case): "aaabb"&lt;br&gt;
the keys will be: a, b two groups in total&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the second is the action that is performed in the group.
In the specific kata the action is to count (e.g. Collectors.counting())
the elements of the group.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;for example (in our case): "aaabb"&lt;br&gt;
the group with "a" we count three elements,&lt;br&gt;
while in the "b" group we count two element.&lt;/p&gt;

&lt;p&gt;If you haven't specified an action you will had a map with two keys and values:&lt;/p&gt;

&lt;p&gt;key: 'a'&lt;br&gt;
value: ['a', 'a', 'a']&lt;/p&gt;

&lt;p&gt;key: "b"&lt;br&gt;
value: ['a', 'a']&lt;/p&gt;

&lt;p&gt;the action operates in the lists (the reduction step).&lt;/p&gt;

</description>
      <category>java</category>
    </item>
    <item>
      <title>Tips to build an awesome portfolio</title>
      <author>Krowser Web Services </author>
      <pubDate>Fri, 11 Jun 2021 13:52:28 +0000</pubDate>
      <link>https://dev.to/krowser/tips-to-build-an-awesome-portfolio-595</link>
      <guid>https://dev.to/krowser/tips-to-build-an-awesome-portfolio-595</guid>
      <description>&lt;p&gt;I've often heard students pursuing their degrees saying, "I wish I could have learned this". When applying for a job, companies have a brief look at your portfolio. Not only companies but also universities providing courses post-graduation have look at an individual's portfolio. Hence, it is essential to focus on your portfolio and build one which will stand out from the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn new skills and build projects&lt;/strong&gt;&lt;br&gt;
Continuous learning is the minimum requirement for success in any field. Keep learning new skills at regular intervals. Suppose you're interested in web development or app development then start with its basics, build some basic projects and go for advanced learning and build advanced projects. As you see yourself progressing, start building projects which are based on real-life problem-solving. If you're stuck somewhere never hesitate to ask for help. You'll grow as you keep learning by making mistakes and improving. For learning new tech skills you can refer Udemy, Coursera, Udacity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apply for internships&lt;/strong&gt;&lt;br&gt;
Experience matters a lot&lt;br&gt;
After learning some skills and building personal projects it's time for working on some ongoing projects. You can start applying for internships in companies. Internships are the best way to gain industry experience. You might have to appear for an interview and some test rounds. Internships can be paid and unpaid depending upon the companies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start Freelancing&lt;/strong&gt;&lt;br&gt;
As a developer, you can start freelancing. As a student, it will help to generate extra revenue and help you to enhance your skills. Start with small projects, build them properly. Once you're confident enough then go for building medium and advanced-level projects. Freelancing will definitely add value to the portfolio. Projects built as a freelancer shows your confidence and proficiency in that skill.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Write blogs&lt;/strong&gt;&lt;br&gt;
Along with outstanding coding skills a developer must have good writing skills. Being a content write gives you an additional advantage over other candidates. Writing blogs is really good practice. Content writing is an amazing mind exercise.&lt;br&gt;
Writing content is a test of your creativity. Writing a weekly blog will enhance your writing skills and help you to maintain a blog page. Maintaining a blog page is a really helpful and add-on for a portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publish research paper&lt;/strong&gt;&lt;br&gt;
If you're in college and doing some kind of research on some project or topic you should publish your own research paper. If you're applying for further studies in some top universities then this is really helpful. This is an extra point which will attract universities and companies. Your portfolio will look diverse and will stand out from the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join a social service committee&lt;/strong&gt;&lt;br&gt;
Joining a social service committee shows your concern towards society. You're not secluded in your own world, instead, it shows that you're also bothered about your society. This becomes helpful for future studies when you're applying to some top universities. If they have a look at your portfolio then the social service factor is advantageous.&lt;/p&gt;

&lt;p&gt;Hence, I would end this post by saying there are a lot of other factors, but these are the ones that I found to be prominent. If you some other factors then please do share them. Please do put down your thoughts in the comment section below.&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>python</category>
    </item>
  </channel>
</rss>
