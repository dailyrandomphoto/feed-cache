<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Artificial Intelligence Project for Beginners</title>
      <author>Jack </author>
      <pubDate>Tue, 27 Jul 2021 11:55:57 +0000</pubDate>
      <link>https://dev.to/codingninjaz/artificial-intelligence-project-for-beginners-3ed9</link>
      <guid>https://dev.to/codingninjaz/artificial-intelligence-project-for-beginners-3ed9</guid>
      <description>&lt;p&gt;&lt;span&gt;In this guide, we’ll be walking through 8 fun machine learning projects for beginners. Projects are some of the best investments of your time. You’ll enjoy learning, stay motivated, and make faster progress.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You see, no amount of theory can replace hands-on practice. Textbooks and lessons can lull you into a false belief of mastery because the material is there in front of you. But once you try to apply it, you might find that it’s harder than it looks.&lt;/p&gt;
&lt;p&gt;Projects help you improve your applied ML skills quickly while giving you the chance to explore an interesting topic.&lt;/p&gt;
&lt;p&gt;Plus, you can add projects into your portfolio, making it easier to land a job, find cool career opportunities, and even negotiate a higher salary.&lt;/p&gt;
&lt;p&gt;Here are 8 fun machine learning projects for beginners. You can complete any of them in a single weekend, or expand them into longer projects if you enjoy them.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Please Visit Originally Published To read More&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;b&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI project for beginners&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>AI Project For Beginners</title>
      <author>Bikaah324</author>
      <pubDate>Tue, 27 Jul 2021 11:34:17 +0000</pubDate>
      <link>https://dev.to/coderzways/ai-project-for-beginners-2gd2</link>
      <guid>https://dev.to/coderzways/ai-project-for-beginners-2gd2</guid>
      <description>&lt;p&gt;&lt;span&gt;In this guide, we’ll be walking through 8 fun machine learning projects for beginners. Projects are some of the best investments of your time. You’ll enjoy learning, stay motivated, and make faster progress.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;You see, no amount of theory can replace hands-on practice. Textbooks and lessons can lull you into a false belief of mastery because the material is there in front of you. But once you try to apply it, you might find that it’s harder than it looks.&lt;/p&gt;
&lt;p&gt;Projects help you improve your applied ML skills quickly while giving you the chance to explore an interesting topic.&lt;/p&gt;
&lt;p&gt;Plus, you can add projects into your portfolio, making it easier to land a job, find cool career opportunities, and even negotiate a higher salary.&lt;/p&gt;
&lt;p&gt;Here are 8 fun machine learning projects for beginners. You can complete any of them in a single weekend, or expand them into longer projects if you enjoy them.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Please Visit Originally Published To read More&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;b&gt;Originally Published&lt;/b&gt;: &lt;/span&gt;&lt;b&gt;&lt;a href="https://bit.ly/3zEccM7"&gt;&lt;span&gt;AI project for beginners&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>10 Must-Have IntelliJ Plugins to Improve Your Productivity</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 27 Jul 2021 11:28:48 +0000</pubDate>
      <link>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</link>
      <guid>https://dev.to/alexomeyer/10-must-have-intellij-plugins-to-improve-your-productivity-2pjg</guid>
      <description>&lt;p&gt;Many of you loved my list with the &lt;strong&gt;&lt;a href="https://dev.to/alexomeyer/10-must-have-vs-code-extensions-to-improve-your-productivity-4goe"&gt;10 Must-Have VS Code Extensions to boost developer productivity&lt;/a&gt;&lt;/strong&gt; so I asked devs who use IntelliJ IDEA: what are your favourite plugins to ship quality code fast? Here are 10 plugins many of you have mentioned:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-wakatime"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://plugins.jetbrains.com/plugin/7425-wakatime"&gt;WakaTime&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;WakaTime allows you to see metrics, insights, and time tracking automatically generated from your programming activity.&lt;/p&gt;

&lt;p&gt;You will learn exactly how long you spend coding as it automatically tracks when you start and stop typing, with detailed metrics for projects, file, branch, commit/PR, feature, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GKZNH9A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ctyq8nook6mtitp71osq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-stepsize"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bit.ly/3gZ6OeF"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Shameless plug - Stepsize is the best extension to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bookmark code, create TODOs and report technical debt directly from the editor&lt;/li&gt;
&lt;li&gt;Collaborate with your teammates on maintenance and refactoring work&lt;/li&gt;
&lt;li&gt;Prioritise technical issues during your sprint planning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6ZQ3IiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h80d5anw22wa0vtkrqhd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-key-promoter-x"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://plugins.jetbrains.com/plugin/9792-key-promoter-x"&gt;Key Promoter X&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Key Promoter X helps you to learn essential shortcuts while you are working. When you use the mouse on a button inside the IDE, the Key Promoter X shows you the keyboard shortcut that you should have used instead. &lt;/p&gt;

&lt;p&gt;This provides an easy way to learn how to replace tedious mouse work with keyboard keys and helps to transition to a faster, mouse free development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSHkDUze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6q6lb6dtcvu7hieaxo4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-zio-for-intellij"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://plugins.jetbrains.com/plugin/13820-zio-for-intellij"&gt;ZIO for IntelliJ&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ZIO will give you suggestions, refactorings, and other enhancements for Scala's ZIO ecosystem.&lt;br&gt;
The plugin enhances the ZIO library with features, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Refactorings and suggestions&lt;/li&gt;
&lt;li&gt;Support for zio-macros (e.g. @accessible)&lt;/li&gt;
&lt;li&gt;Integrated test runner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNzLPgp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84a77qyqrfhi4u6h7apa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-protobuf"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://plugins.jetbrains.com/plugin/16422-protobuf"&gt;Protobuf&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;IntelliJ-based IDEs Protobuf Language Plugin provides Protobuf language support. Protobuf help with syntax highlighting, importing files from library and SDK, navigation, finding usage, code folding, semantic analysis, quick documentation, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jq5GfgQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv7je0ejmhkrdmux2vov.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-sonarlint"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://plugins.jetbrains.com/plugin/7973-sonarlint"&gt;SonarLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;SonarLint lets you fix coding issues before they exist: like a spell checker, SonarLint highlights Bugs and Security Vulnerabilities as you write code, with clear remediation guidance so you can fix them before the code is even committed. SonarLint in VS Code supports analysis of JavaScript, TypeScript, Python, Java, HTML &amp;amp; PHP code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asfXtxpH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqyzyfpjljnahvkarcgt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-eslint"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://plugins.jetbrains.com/plugin/7494-eslint"&gt;ESLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ESLint IntelliJ integration supports displaying eslint warnings as IntelliJ inspections, helps making quick fixes for several rules, support for custom eslint rules, and eslint config annotation and completion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSo13Bgp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlx4cpy1q80tusl7zpm6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-prettier"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://plugins.jetbrains.com/plugin/10456-prettier"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Prettier extension helps code look better and be more consistent. It enforces a consistent style by parsing your code and reprinting it with its own rules that take the maximum line length into account, wrapping code when necessary. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNcGtlN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wp4qrs28x3la8oyjdow.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-quokka"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://plugins.jetbrains.com/plugin/9667-quokka"&gt;Quokka&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quokka.js is a developer productivity tool for rapid JavaScript / TypeScript prototyping. Runtime values are updated and displayed in your IDE next to your code, as you type. It makes prototyping, learning, and testing JavaScript / TypeScript much faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRziI-Kz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1emy913laveox58r7yn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-acejump"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://plugins.jetbrains.com/plugin/7086-acejump"&gt;AceJump&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;AceJump allows you to quickly navigate the caret to any position visible in the editor. Simply hit "ctrl+;", type a character, then type the matching character to Ace Jump. If no matches can be found on-screen, AceJump will scroll to the next match it can find.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kjkd7vKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxc79r3ccqvc6zp3fz6i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>intellij</category>
      <category>refactorit</category>
      <category>javascript</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How the Resilience Score Algorithm works in Litmus!</title>
      <author>Sayan Mondal</author>
      <pubDate>Tue, 27 Jul 2021 11:04:34 +0000</pubDate>
      <link>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</link>
      <guid>https://dev.to/litmus-chaos/how-the-resilience-score-algorithm-works-in-litmus-1d22</guid>
      <description>&lt;p&gt;What really is Resilience? For practitioners, psychologists, etc, Resilience is the process of adapting well in the face of adversity, trauma, tragedy, threats, or significant sources of stress, for an SRE or Chaos Engineering however Resilience can be defined as the ability of a system to fail gracefully in the face of—and eventually recover from—disruptive events.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8Y4GxOy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzkG1_qr--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://litmuschaos.io/static/0a11d0492777dc77ca7c7d008877ce5a/78692/cloud-native-way.webp" alt="Litmus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Litmus&lt;/strong&gt; is a &lt;strong&gt;Cross-Cloud Chaos Orchestration&lt;/strong&gt; framework for practising chaos engineering in cloud-native environments. Litmus provides a chaos operator, a large set of chaos experiments on its &lt;a href="http://hub.litmuschaos.io/"&gt;hub&lt;/a&gt;, detailed &lt;a href="https://litmusdocs-beta.netlify.app/docs/introduction/"&gt;documentation&lt;/a&gt;, and a friendly &lt;a href="https://kubernetes.slack.com/?redir=%2Fmessages%2FCNXNB0ZTN"&gt;community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Find the video format of this blog here:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/OuB3dS05DHU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this blog, we'll deep dive into how the Resilience Score is calculated for your Workflows in Litmus and also understand the concept of Weights.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pSbby3BL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mj9tei9qi59uzhnh3hc.png" alt="Weights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weights-in-litmus"&gt;
  &lt;/a&gt;
  Weights in Litmus
&lt;/h2&gt;

&lt;p&gt;You might have often seen the term weightage pop up quite a few times when you construct your Workflows in Litmus. Typically attached to Resilience, these weights have an important role to play to determine the appropriate Resilience score for your use case.&lt;/p&gt;

&lt;p&gt;Giving a weightage to your experiment is a way of signifying/attaching the importance/priority of that experiment in your workflow. The higher the weight, the more importance it holds.&lt;/p&gt;

&lt;p&gt;For instance, consider this example where you have two Chaos Experiments, &lt;strong&gt;Pod Delete&lt;/strong&gt; and &lt;strong&gt;Pod Network Loss&lt;/strong&gt; in your workflow. Imagine you have a use case where you cannot bear having a network loss but an eviction of a pod does not really bother you that much because you are confident that the pod would re-spawn back up, but you still want to test for pod eviction as a part of your Chaos Test Suite. &lt;/p&gt;

&lt;p&gt;In such a scenario, the Pod Delete Chaos Experiment doesn't hold much of an importance for you but on the other hand, Pod Network Loss does.&lt;/p&gt;

&lt;p&gt;The weight priority is generally divided into three sections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;0-3&lt;/strong&gt;: Low Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;4-6&lt;/strong&gt;: Medium Priority&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;7-10&lt;/strong&gt;: High Priority&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore considering your scenario, you would want to assign &lt;strong&gt;Pod Delete&lt;/strong&gt; with a &lt;strong&gt;Low Priority&lt;/strong&gt; weightage, whereas, &lt;strong&gt;Pod Network Loss&lt;/strong&gt; would be in the &lt;strong&gt;High Priority&lt;/strong&gt; category.&lt;/p&gt;

&lt;p&gt;Now that we know &lt;em&gt;why&lt;/em&gt; we set the weights the way we do! As we progress further in the blog, we'd also get to know how they actually come into play to determine the Resilience Score.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6_pf7H3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hu5776an22ne4yuqrqjb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resilience-score"&gt;
  &lt;/a&gt;
  Resilience Score
&lt;/h2&gt;

&lt;p&gt;A Resilience Score is the measure of how resilient your workflow is considering all the chaos experiments and their individual result points. This calculation takes into account the individual experiment weights (from a range of 1-10) which are relative to each other.&lt;/p&gt;

&lt;p&gt;Once a weight has been assigned to the experiment, we look for the &lt;strong&gt;Probe Success Percentage&lt;/strong&gt; for that experiment itself (Post Chaos) and calculate the &lt;strong&gt;total resilience result&lt;/strong&gt; for that experiment as a &lt;em&gt;multiplication&lt;/em&gt; of the &lt;em&gt;weight given&lt;/em&gt; and the &lt;em&gt;probe success percentage&lt;/em&gt; returned after the Chaos Run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Total Resilience for one single experiment = (Weight Given to that experiment * Probe Success Percentage)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If an experiment doesn't have a probe in it, the probe success percentage returned can either be 0 or 100 based on the experiment verdict. If the experiment passed then it returns 100 else 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Final Resilience Score is calculated by dividing the total test result by the sum of all the weights of all the experiments combined in a single workflow.&lt;/p&gt;

&lt;p&gt;Let's take our above scenario again, considering we have given a weightage of 2 to Pod Delete and 10 for Pod Network Loss, this is how the Resilience Calculation would look like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqlCQgq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4rny7uzy2wn6yoafyfb.png" alt="Resilience Calculation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Considering Probe Success Percentage is 100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is why weights play such an important role in your use case specific Resilience Calculation. For the scenario mentioned above, even if Pod Delete would have failed for whichever reason, your Resilience Score would only drop down by a few numbers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Resilience Score = Total Test Result / Weight Sum 
                 = (0 * 100) + (10 * 100) / 12                  
                 = 1000 / 12 
                 = 83.33%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However if they both were of the same weights, lets say 10. Then your Resilience Score would drop to 50% straight.&lt;/p&gt;

&lt;p&gt;With that I hope you are now an expert of weights, and would use them wisely. With great power comes great responsibility.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all folks 👨‍🏫, Thank you for reading it till the end. I hope you had a productive time learning about Litmus and how you can construct your workflows with more confidence now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wnj4uCa1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Ftse1.mm.bing.net%252Fth%253Fid%253DOIP.NiUNEyoX9bHslroFaIqmEAAAAA%2526pid%253DApi%26f%3D1" alt="Thanks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contribute to LitmusChaos and share your feedback on &lt;a href="https://github.com/litmuschaos/litmus"&gt;Github&lt;/a&gt;. If you like LitmusChaos, become one of the many stargazers &lt;a href="https://github.com/litmuschaos/litmus/stargazers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Join the LitmusChaos slack community following these simple steps!&lt;/p&gt;

&lt;p&gt;Step 1: Join the Kubernetes slack using the following link: &lt;a href="https://slack.k8s.io/"&gt;https://slack.k8s.io/&lt;/a&gt;&lt;br&gt;
Step 2: Join the #litmus channel on the Kubernetes slack or use this link after joining the Kubernetes slack: &lt;a href="https://slack.litmuschaos.io/"&gt;https://slack.litmuschaos.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking forward to having you in our community and learning together!&lt;/p&gt;

</description>
      <category>litmuschaos</category>
      <category>cloudnative</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>10+ Live chat tools like Intercom, Drift, Zendesk, Tawk.io, etc. compared with Chatwoot.</title>
      <author>Joshua Poddoku</author>
      <pubDate>Tue, 27 Jul 2021 10:49:34 +0000</pubDate>
      <link>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</link>
      <guid>https://dev.to/joshuapoddoku/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-etc-compared-with-chatwoot-3igm</guid>
      <description>&lt;p&gt;In the era of increasing digital products, chat apps have become bloated with features and complexities.&lt;/p&gt;

&lt;p&gt;A lot of features are missing, and problems are unsolved in many live chat applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-existing-problems-in-the-current-live-chat-support-systems"&gt;
  &lt;/a&gt;
  Here are a few existing problems in the current live chat support systems:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Losing active Internet connection&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attack by other spammers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintaining conversation history&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instant replies are uncommon&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Breakdown of current ticket flow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very difficult to integrate the API into different internal systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Third-party app failures (Slack, Zendesk, internal server errors)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited and unextendible features&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And many other issues are challenging to handle, and the developers have to put extra effort into fixing the live chat support. It is all about establishing a great connection and impression among the users and the communities, even though your product can be great and effective.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A simple and all-in-one live chat support system - &lt;a href="//chatwoot.com"&gt;Chatwoot&lt;/a&gt;, an openspurce alternative, can resolve all the problems, and it is &lt;/strong&gt;open-source*&lt;em&gt; and **extendible&lt;/em&gt;* for all your business needs. The &lt;a href="https://github.com/chatwoot/chatwoot"&gt;community version&lt;/a&gt; is absolutely free.&lt;br&gt;
**&lt;/p&gt;

&lt;p&gt;Instant messaging and complete open-source codebase access ease even modifying the system according to the business needs and automating the workflow for faster monitoring and management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iMno5cIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703514856/JsN-W-qCT.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every visitor is busy, they seek an instant real-conversation rather than revisiting the whole website. Chatwoot's auto agent assignment feature is the solution to get out of the bot-ly conversations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The chat widget can also be easily customized to product brand colors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering only these few features earlier, it was complicated to handle all these tasks manually, and the company had to invest extra assets to fix the live chat support and ticketing systems.&lt;/p&gt;

&lt;p&gt;Elegant UI helps the whole team to adapt quickly and to track visitors and their queries from multiple products in a single app. Online chats are sometimes unclear, and all bots cannot identify the intents and become very unreal and irrelevant. Later, if the user tries to find the social handles of any company (like Whatsapp, Facebook, Twitter, E-mail, etc.), it already frustrates and delays the ticket resolution. Chatwoot has easy integration with any third-party social media and acts as a workplace to manage customers anytime. Let's look at the comparisons below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bot-vs-agent"&gt;
  &lt;/a&gt;
  Bot vs. Agent
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-lKGhfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626703651625/_EBasSa7w.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;a href="https://99firms.com/blog/live-chat-statistics/"&gt;https://99firms.com/blog/live-chat-statistics/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Current broken live chat system&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bots are increasing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complex pricing plans&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difficult to manage internal customer support teams&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Manual agent assignment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;100% extension is not supported&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra focus is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No mobile apps for such systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Extra learning is required&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Limited integration with third-party apps&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#comparing-with-other-products"&gt;
  &lt;/a&gt;
  Comparing with other products
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-intercom-vs-chatwoot"&gt;
  &lt;/a&gt;
  1) Intercom vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.intercom.com/"&gt;Intercom&lt;/a&gt; is a popular product in the market. But I'm going to closely give a walkthrough of what can be done better using Chatwoot.&lt;/p&gt;

&lt;p&gt;The starter pack of Intercom has no customizations, custom bot support, neither any conversational management tools. &lt;em&gt;For example, Agent's inactivity cannot be traced.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf7oIkwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704112592/Xqf98h7Jw7.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt; has unlimited conversations, and Hacker Plan (for developers) costs $0 forever up to 2 agents, and this includes integration with the Twilio SMS channel, which is not provided in Intercom. This plan also enables auto-assignment, note-taking, and other &lt;a href="https://www.chatwoot.com/"&gt;great features&lt;/a&gt; to help any team have a productive workday.&lt;/p&gt;

&lt;p&gt;All the plans below have the feature to track agents and their activity and availability, unlike Intercom.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XRMx--C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704325575/gYml1r5PD.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-zendesk-vs-chatwoot"&gt;
  &lt;/a&gt;
  2) Zendesk vs. Chatwoot
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.zendesk.com/"&gt;Zendesk&lt;/a&gt; is an award winner but not customizable for smaller budgets; additional enterprise plans touch up to $215/month; on the other hand, Chatwoot provides developer-friendly benefits with the open-source - for good.&lt;/p&gt;

&lt;p&gt;Here's the comparison with the actual features. Zendesk has limited pre-built apps and integrations with complexities of choices and business agreements. Chatwoot has a great low-level structure to solve your high-level needs for your businesses, accessible to developers and non-developers in your company.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jb2BRJsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704654974/l5bhnOCN-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6Pr9tyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626704928540/wA1dvL0lu.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatwoot is breaking down the complexity of every live chat service into more straightforward language and utility, making it easy to adapt and use without any second thought. Support Team plan (in Zendesk) is equivalent to Startups (Chatwoot) in terms of cost but doesn't have business support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Affordable plans start at chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Business support at $19, whereas Zendesk has complicated business support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Labeling conversations and easy history handling&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Two agents at $0, while Zendesk has only one agent for $19/month&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Custom widgets as per brand requirements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bloated features are simply accessed in Chatwoot&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Training is not required&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No trial, get a $0 plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#solution-with-chatwoot"&gt;
  &lt;/a&gt;
  Solution with Chatwoot
&lt;/h1&gt;

&lt;p&gt;"Business" is not a static term; things here change very fast and often. We don't know who will become Elon Musk overnight.&lt;/p&gt;

&lt;p&gt;According to a report by Hubspot, the customer satisfaction rate is 92% higher for those who use live chat services.&lt;/p&gt;

&lt;p&gt;If you're the decision-maker in your company to choose the best service, you need to be aware of the trends, user behavior, developer accessibility and put some extra effort into learning these products. It will definitely consume time.&lt;/p&gt;

&lt;p&gt;The reason why Chatwoot's Founding members came with this idea was to solve the pain points in the entire product team in order to maintain easy workflow and to maximize Customer Ticket Management.&lt;/p&gt;

&lt;p&gt;On the other side, customer behavior changes dynamically, but you need to stick to one plan at a time. Especially for startups, when the revenue has just begun, it can be a considerable loss when there is an extra business need.&lt;/p&gt;

&lt;p&gt;Instead of switching to different plans and products, Chatwoot is the solution for every hassle.&lt;/p&gt;

&lt;p&gt;The product team can understand marketing by involving in the timely updating of their Chatwoot software by considering the changing demands of the users, and there can be a strong connection between Marketers and Developers. And provide solutions to the end-customers Instantly and Independently.&lt;/p&gt;

&lt;p&gt;Read the complete blog &lt;a href="https://aviyel.com/post/379/10-live-chat-tools-like-intercom-drift-zendesk-tawk-io-and-livechat-compared-with-chatwoot"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>linux</category>
      <category>cloud</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Merging a pdf using Javascript</title>
      <author>Kumaran KM</author>
      <pubDate>Tue, 27 Jul 2021 10:43:40 +0000</pubDate>
      <link>https://dev.to/kumarankm4/merging-a-pdf-using-javascript-48c9</link>
      <guid>https://dev.to/kumarankm4/merging-a-pdf-using-javascript-48c9</guid>
      <description>&lt;p&gt;Have you heard about pdflib library, you didn't so here is the documentation page for you.&lt;/p&gt;

&lt;h3&gt;Pdflib package&lt;/h3&gt;

&lt;p&gt;Pdflib Package&lt;/p&gt;

&lt;p&gt;So here what I have done, First I have installed the package and Add this package to json file as usual. Then I have imported that package on code, Then I have used catch syntax to check for errors.&lt;/p&gt;

&lt;p&gt;Then we need to load the pdf that we need to merge with the help of the load method inside the asynchronous function. If you want to get pdf as a user input then you can try multer package, but for now, I don't need it. I will provide a documentation link for multer package below.&lt;/p&gt;

&lt;p&gt;Multer package&lt;/p&gt;

&lt;p&gt;Then, then with create() method, I have created a new empty document. And then I have added the first pdf file into that document with the help of copyPages() method. Once I have copied the first pdf, then I will concatenate the second pdf with the same copypage method. Then the pdf will get merged into that new document, and now it's time for naming a file. With the help of writeFileSync() I have synced the file and named it with .pdf extension. So here what the output looks like.&lt;/p&gt;

&lt;p&gt;After merging&lt;br&gt;
Alt Text&lt;/p&gt;

&lt;p&gt;Thanks for taking the time to read my blog.&lt;br&gt;
Happy coding :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>npm</category>
    </item>
    <item>
      <title>IT platform dedicated for Hospital and Clinics management</title>
      <author>Giản Hải Nam</author>
      <pubDate>Tue, 27 Jul 2021 10:30:35 +0000</pubDate>
      <link>https://dev.to/megafoxz/it-platform-dedicated-for-hospital-and-clinics-management-2bi7</link>
      <guid>https://dev.to/megafoxz/it-platform-dedicated-for-hospital-and-clinics-management-2bi7</guid>
      <description>&lt;p&gt;✔️ Patient Admission System (PAS)&lt;br&gt;
✔️ Eletronic Medical Record (EMR)&lt;br&gt;
✔️ Human Resource Management (Admin)&lt;br&gt;
⚡ AI Analysis for Fundus and Dry Eye (Beta)&lt;br&gt;
Detail : &lt;a href="https://github.com/nichealpham/his-composer"&gt;https://github.com/nichealpham/his-composer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Add Messaging, File sharing, Activity Feeds in your website easily</title>
      <author>Ayush Jain</author>
      <pubDate>Tue, 27 Jul 2021 10:29:10 +0000</pubDate>
      <link>https://dev.to/aj54/add-messaging-file-sharing-activity-feeds-in-your-website-easily-2jlf</link>
      <guid>https://dev.to/aj54/add-messaging-file-sharing-activity-feeds-in-your-website-easily-2jlf</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-weavy"&gt;
  &lt;/a&gt;
  What is Weavy?
&lt;/h1&gt;

&lt;p&gt;Weavy is an in-app collaboration API and SDK, meaning that it provides you easy way to add features like in-app messaging, in-app activity feeds, in-app file sharing and in-app tasks management. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5K2CkYAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yuauk7p3tuvek65ikcr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5K2CkYAh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yuauk7p3tuvek65ikcr.jpg" alt="Weavy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-inapp-mean"&gt;
  &lt;/a&gt;
  What does in-app mean?
&lt;/h2&gt;

&lt;p&gt;In-app means that users will remain on your website/application and thus, you can add these features WITHOUT losing your user. Weavy has been designed with simplicity, easy usability, quick integration and complete feature set in mind. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-i-try-it-without-doing-anything"&gt;
  &lt;/a&gt;
  Can I try it without doing anything?
&lt;/h2&gt;

&lt;p&gt;Sure, you can play around with all the features by going to &lt;a href="https://www.weavy.com/try/app"&gt;https://www.weavy.com/try/app&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-my-data-secured"&gt;
  &lt;/a&gt;
  How is my data secured?
&lt;/h2&gt;

&lt;p&gt;Your data is stored inside your cloud. Weavy provides you complete SDK (Client, Server, Tenant and Mobile) and you will be hosting everything on your cloud. Thus, your data never leaves your system. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-started"&gt;
  &lt;/a&gt;
  How to get started?
&lt;/h2&gt;

&lt;p&gt;You can get started on your local machine by following &lt;a href="https://www.weavy.com/developer/getting-started/introduction-to-weavy"&gt;this&lt;/a&gt; article. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-it-free"&gt;
  &lt;/a&gt;
  Is it Free?
&lt;/h2&gt;

&lt;p&gt;Weavy provide 30 days of FREE trial to all features (no questions asked, no limits placed). After that, the sales team will help you to get onboard or provide more extension. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#need-help"&gt;
  &lt;/a&gt;
  Need Help?
&lt;/h2&gt;

&lt;p&gt;You can use &lt;a href="https://www.weavy.com/developer/contact"&gt;Get Help&lt;/a&gt; form to reach out and get assistance immediately.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>sdk</category>
      <category>collaboration</category>
    </item>
    <item>
      <title>The Next Fantastic Software Project Code Name</title>
      <author>Doug Arcuri</author>
      <pubDate>Tue, 27 Jul 2021 10:27:22 +0000</pubDate>
      <link>https://dev.to/solidi/the-next-fantastic-software-project-code-name-bbd</link>
      <guid>https://dev.to/solidi/the-next-fantastic-software-project-code-name-bbd</guid>
      <description>&lt;p&gt;Boring software and hardware are named for what they are.&lt;/p&gt;

&lt;p&gt;Buttoned up and formalized, application and library names like &lt;code&gt;The-App-Brand-Name,&lt;/code&gt; &lt;code&gt;What-I-Do-Library,&lt;/code&gt; and  &lt;code&gt;Named-Service&lt;/code&gt; are ordinary. Projects like &lt;code&gt;Go-to-Market,&lt;/code&gt; &lt;code&gt;This-Product-Release,&lt;/code&gt; &lt;code&gt;Sprint-Number,&lt;/code&gt; or &lt;code&gt;Minimum-Viable-Product&lt;/code&gt; are manufactured in an assembly line. And the hardware of &lt;code&gt;Domain-N-Series-Y,&lt;/code&gt; &lt;code&gt;Give-Me-The-Last-Digits-On-That-VM&lt;/code&gt; fades from memory faster than a trending &lt;a href="https://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;I first experienced naming things &lt;em&gt;differently&lt;/em&gt; while developing software in a team. The websites and apps we built did not have adored handles. But the blades on a server rack &lt;em&gt;did&lt;/em&gt; have names. They were the &lt;em&gt;pets&lt;/em&gt; hosting these projects. &lt;/p&gt;

&lt;p&gt;Each server had a name from one of the Greek/Roman gods. &lt;code&gt;Pollux,&lt;/code&gt; &lt;code&gt;Apollo,&lt;/code&gt; &lt;code&gt;Castor,&lt;/code&gt; all had a memorable name and function. &lt;code&gt;Castor&lt;/code&gt; was the webserver, &lt;code&gt;Pollux&lt;/code&gt; was the file server. The list went on down each metallic bay. And when we added a server, &lt;a href="https://datatracker.ietf.org/doc/html/rfc1178"&gt;we plotted how&lt;/a&gt; to name it well. &lt;code&gt;Hermes,&lt;/code&gt; one of our later additions, was where we dropped questionable payloads; it was a mess of libations.&lt;/p&gt;

&lt;p&gt;These names and their power are &lt;em&gt;pervasive&lt;/em&gt;, sticky in my mind forever. But naming servers this way is archaic today and challenges the typically discussed &lt;a href="http://cloudscaling.com/blog/cloud-computing/the-history-of-pets-vs-cattle/"&gt;pets/cattle metaphor&lt;/a&gt;. If I squint hard enough, the names could be construed as fungible parts.&lt;/p&gt;

&lt;p&gt;I still remember those machines, the projects they hosted, and the people that showed me how. I cannot remember any of the server clusters I managed since. And I haven't seen enough of this clever thinking. We need more of that geek passion while we horizontally scale to infinity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-examples-ive-experienced"&gt;
  &lt;/a&gt;
  Some Examples I've Experienced
&lt;/h2&gt;

&lt;p&gt;Every label that I've encountered is a function of its culture and the people around it. It's a mix of generation, nationality, motivation, shared experiences, and values. When mixing these attributes and a giddy sense of a clever play on the words, a project handle explodes to a &lt;em&gt;code name&lt;/em&gt; many can get behind.&lt;/p&gt;

&lt;p&gt;The result is a memory hook. And those who participate are now part of the &lt;em&gt;in-group&lt;/em&gt;. Calling something by a code name makes the experience inclusive and gives the group control and ownership. The name is a badge of complete honor, commitment, and &lt;em&gt;undying passion&lt;/em&gt; of it, this love, for this thing to succeed.&lt;/p&gt;

&lt;p&gt;In my experience, code names rise from various contexts. And in each context, there are an infinite number of ways to arrange, enumerate, and organize in an endearing, proud, or unbelievable way. They are named after science, animals, products, history, mythology, toys, animation/anime, famous adored leaders, music, and many others. The possibilities go on and on.&lt;/p&gt;

&lt;p&gt;Let me share some examples I've experienced, which will be very different from your experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nostalgia"&gt;
  &lt;/a&gt;
  Nostalgia
&lt;/h3&gt;

&lt;p&gt;When I was involved in kid media-focused software development, handles were based on cartoon nostalgia. App names were concentrated in supporting &lt;a href="https://www.imdb.com/title/tt6611256/"&gt;NickToon&lt;/a&gt; characters &lt;code&gt;Tommy,&lt;/code&gt; &lt;code&gt;Blue,&lt;/code&gt; &lt;code&gt;Otto,&lt;/code&gt; and others associated with their app function.&lt;/p&gt;

&lt;p&gt;In that project, we created a mono repo where the streaming apps and supporting libraries were located. We called it the &lt;code&gt;Aggrocrag.&lt;/code&gt; Named after the Kids show, &lt;a href="https://en.wikipedia.org/wiki/Nickelodeon_Guts"&gt;Nickelodeon Guts&lt;/a&gt;, the final challenge was contestants completed, racing up a polystyrene mountain. We got a few chuckles out of it. And then there was the common shared library that was way too all-knowing. We called it &lt;code&gt;Olmec,&lt;/code&gt; named after a &lt;a href="https://nickelodeon.fandom.com/wiki/Olmec"&gt;game co-host&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I once developed a private suite of tools individually labeled as &lt;a href="https://en.wikipedia.org/wiki/M.A.S.K._(TV_series)"&gt;M.A.S.K.&lt;/a&gt; characters. Examples included &lt;code&gt;Trekker&lt;/code&gt; and &lt;code&gt;T-Bob.&lt;/code&gt; This was essentially a self-help developer experience toolchain, no feeling more incredible than having the complete collection of those toys and at the same time having insight into developing better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relevant-releases"&gt;
  &lt;/a&gt;
  Relevant Releases
&lt;/h3&gt;

&lt;p&gt;Some software projects had passion names. With the projects focused on Android app development, we went through a list of Asimov and sidekick robots. &lt;code&gt;Daleks,&lt;/code&gt; &lt;code&gt;Atlas,&lt;/code&gt; &lt;code&gt;Yaris,&lt;/code&gt; and others all had a special meaning and contained changes related to the robot and its characteristics. Obviously, &lt;code&gt;Daleks&lt;/code&gt; was crafted to &lt;a href="https://youtu.be/RhEUBgu9j5Y"&gt;&lt;em&gt;exterminate&lt;/em&gt; things&lt;/a&gt;, removing unused features unabated. The developers would label each in turn on release, and it was shared ownership that blossomed.&lt;/p&gt;

&lt;p&gt;More recently, the team I managed named releases after Pokemon characters. I remember the end of years releases of &lt;code&gt;Haunter&lt;/code&gt; and &lt;code&gt;Pidgeot,&lt;/code&gt; aptly named after the American holidays. The name concept was new to these engineers. Perhaps the experience will be the motivation to name their next project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#organization-and-platforms"&gt;
  &lt;/a&gt;
  Organization and Platforms
&lt;/h3&gt;

&lt;p&gt;In one shop, two major engineering teams came together. We called the shared developing platform the &lt;code&gt;Hadron Collider.&lt;/code&gt; An amalgam of different technologies in JavaScript, from render engine to UI, attempting to stream a video experience on as many devices as possible.&lt;/p&gt;

&lt;p&gt;While the engineering organization was serious about its outcome, our team named existing &lt;em&gt;native&lt;/em&gt; apps after non-scientific instruments. Apps were named after amusement park rides, like the &lt;code&gt;Gravitron,&lt;/code&gt; each app's fate mixed into the organizational fun over time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeline-and-phases"&gt;
  &lt;/a&gt;
  Timeline and Phases
&lt;/h3&gt;

&lt;p&gt;At some part of my career, I joined a startup. We named our WebRTC communication app deliveries after satellites launched up to space like &lt;code&gt;Telstar,&lt;/code&gt; &lt;code&gt;Voyager,&lt;/code&gt; and &lt;code&gt;Hubble.&lt;/code&gt; Their supporting SDKs were named after &lt;a href="https://www.imdb.com/title/tt0088763/"&gt;Back to the Future&lt;/a&gt; paraphernalia. &lt;code&gt;Hoverboard,&lt;/code&gt; &lt;code&gt;Delorean,&lt;/code&gt; these abstractions powered these satellites.&lt;/p&gt;

&lt;p&gt;Even the build server code releases were named in a co-tenant fashion after famous astronauts and cosmonauts like &lt;code&gt;Tereshkova&lt;/code&gt; and &lt;code&gt;Armstrong.&lt;/code&gt; These pipelines supported our continuous releases.&lt;/p&gt;

&lt;p&gt;The MVP (a second iteration of the failed &lt;code&gt;Voyager&lt;/code&gt;) called &lt;code&gt;Voyager 2&lt;/code&gt; was released. It did okay, but somewhat its cruises in the ether, semi-distant, never quite achieving its mission.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-and-utilities"&gt;
  &lt;/a&gt;
  Tools and Utilities
&lt;/h3&gt;

&lt;p&gt;Tools and utilities typically have brutally crafty names. Since most of the software is focused on outcomes, the clever succinctness can be off the charts.&lt;/p&gt;

&lt;p&gt;I've built small tools that have been discarded — naming them out of love and utility. There was &lt;code&gt;Scrapi,&lt;/code&gt; a small, scrappy API scraper, &lt;code&gt;Amazement,&lt;/code&gt; an iOS game where you trace out of a maze, and &lt;code&gt;Bif-Tannen,&lt;/code&gt; a &lt;a href="https://developer.roku.com/docs/developer-program/media-playback/trick-mode/bif-file-creation.md"&gt;base index file&lt;/a&gt; QA and extractor tool for movie thumbnails.&lt;/p&gt;

&lt;p&gt;And for those that authored their libraries creatively. &lt;code&gt;Importanize,&lt;/code&gt; an &lt;a href="https://github.com/miki725/importanize"&gt;import and organize tool for Python&lt;/a&gt; was more recently memorable and helpful.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#naming-things-make-memorable-story-telling"&gt;
  &lt;/a&gt;
  Naming Things Make Memorable Story Telling
&lt;/h2&gt;

&lt;p&gt;I've seen many series, magnitudes, and creative labels over the years. I've only shared where I actively contributed.&lt;/p&gt;

&lt;p&gt;Code names have a rich history. The practice came from ages ago in government and the military. And further in the dawn when inventions were developed and labeled in Edison times at Menlo Park. Engineers are creative. They are inventive, &lt;a href="https://artsy.github.io/blog/2019/05/10/why-projects-need-codenames/"&gt;even with project names&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I find code names are &lt;em&gt;sentimental&lt;/em&gt; hooks in the playful nature of the software craft. It's about the culture of the engineers, something that we enjoy doing.&lt;/p&gt;

&lt;p&gt;These aliases are a remedied prescription to the unambiguous. Engineers long for a territory to raise their flock of beautiful software and hardware. Damned the boredom of names like &lt;code&gt;This-is-an-App,&lt;/code&gt; or &lt;code&gt;Some-Service.&lt;/code&gt; Instead, let's have the &lt;code&gt;Anti-Gravity-Device&lt;/code&gt; and &lt;code&gt;Newtons-Gravitational-Laws.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The power of these labels is about telling stories, &lt;em&gt;galvanizing people&lt;/em&gt; where the hook is the code name we all discuss in the digital hallways. &lt;a href="https://iism.org/article/you-need-software-developers-to-believe-in-your-project-45"&gt;Software engineers need to believe in their projects&lt;/a&gt;. But without the naming practice, there isn't much infatuation or fun. It's not memorable. There isn't much play. &lt;em&gt;Another sprint ends in the bin, semantically tagged.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's create the next fantastic code name. I plan to.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;My mobile devices are named after moons in the Solar System. My favorite memorable phone was &lt;code&gt;Phobos,&lt;/code&gt; my Samsung Note 7. Some weeks after I bought the device, it was banned from airplane flights due to the explosive nature of the internal battery. I picked up its replacement and called it &lt;code&gt;Demios,&lt;/code&gt; a smaller version of its bigger cousin, the LG V20. Because of these names, I remembered them long after they were gone.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I write this post on my machines — &lt;code&gt;Tabulator&lt;/code&gt; and &lt;code&gt;Hippocamp.&lt;/code&gt; Thanks to the podcast Reconcilable Differences for the inspiration to get this concept across the finish line. Their episode, &lt;a href="https://www.relay.fm/rd/159"&gt;#159: The Narrow Priesthood&lt;/a&gt;, inspired me. And the book &lt;a href="https://www.andyweirauthor.com/books/project-hail-mary"&gt;Project Hail Mary&lt;/a&gt; by Andy Weir reminded me that references to project names are culturally crucial in all endeavors.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>beginners</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Forest Admin: React Admin Alternative</title>
      <author>Monika Ambrozowicz</author>
      <pubDate>Tue, 27 Jul 2021 10:19:59 +0000</pubDate>
      <link>https://dev.to/forestadmin/forest-admin-react-admin-alternative-2c0b</link>
      <guid>https://dev.to/forestadmin/forest-admin-react-admin-alternative-2c0b</guid>
      <description>&lt;p&gt;If you are reading this, chances are you are a developer researching options for delivering an admin panel or another internal tool. After all, most businesses require a product used by their founders and employees to solve customer problems, go through the list of transactions, analyze data, and perform other specific actions.&lt;/p&gt;

&lt;p&gt;In the past, almost all internal tools were built in-house. The result? Even up to 30% of dev time spent in the back office instead of focusing on the shiny client-facing app. Luckily, you have more options now, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Frontend admin libraries&lt;/li&gt;
&lt;li&gt;Backend admin frameworks&lt;/li&gt;
&lt;li&gt;Database GUI clients&lt;/li&gt;
&lt;li&gt;Third-party solutions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article, we are going to compare a third-party solution, Forest Admin, with a popular frontend admin framework, React Admin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-admin-a-quick-introduction"&gt;
  &lt;/a&gt;
  React Admin: A quick introduction
&lt;/h2&gt;

&lt;p&gt;React Admin was born in the Digital Innovation Studio Marmelab. It is a React.js framework that uses an adapter approach, with a concept called Data Providers. Thanks to that, React Admin can fetch the data from any API connected to the data source, for example, REST, GraphQL, RPC, or even SOAP. It is powered by React, React Router, Redux, and Redux Saga. Material UI is responsible for the visual side. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fOhq1waV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/data-provider.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fOhq1waV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/data-provider.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Source: React Admin documentation&lt;/p&gt;

&lt;p&gt;In fact, the UI is often considered one of the biggest advantages of React Admin and other frontend templates for internal tools. They’re built with clear and responsive components that provide a good user experience for data entry, editing, and visualization. The downside? Working with components requires coding and frontend templates are much more difficult and time-consuming to set up compared to the off-the-shelf solutions like Forest Admin. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forest-admin-an-alternative-to-react-admin"&gt;
  &lt;/a&gt;
  Forest Admin: An alternative to React Admin
&lt;/h2&gt;

&lt;p&gt;Forest Admin’s architecture is also based on API. When you install Forest Admin, you can generate a Node.js application on your local machine that includes a RESTful API that connects to your database. It also provides the Forest Admin API Server with the information needed to build the User Interface. Another option is to install Forest Admin using Rails, Express/Sequelize, or Express/Mongoose apps as your data source. That way, you don’t have to compromise on privacy and security in exchange for the convenience of the SaaS solution. To learn more about what happens under the hood, read this deep-dive article explaining the &lt;a href="https://medium.com/forest-admin/a-deep-dive-into-forest-admins-architecture-and-its-benefits-for-the-developers-who-trust-it-1d49212fb4b"&gt;Forest Admin architecture&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lYqIJpwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/frontend-backend-copy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lYqIJpwp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/frontend-backend-copy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Forest Admin architecture consists of four components: the database, the admin backend, the Forest Admin API server, and the Forest Admin UI server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-admin-vs-forest-admin"&gt;
  &lt;/a&gt;
  React Admin vs. Forest Admin
&lt;/h2&gt;

&lt;p&gt;Although Forest Admin and React Admin share some similarities, both solutions have functionalities that are very different. Let us compare each product in terms of architecture, requirements, setup, onboarding, layout, data connectivity, custom logic, and security. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#technical-aspects"&gt;
  &lt;/a&gt;
  Technical Aspects
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: API-based. The UI fetches the data from an API connected to the data source.&lt;/li&gt;
&lt;li&gt;React Admin: Also API-based, the architecture is similar. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#saasonpremises"&gt;
  &lt;/a&gt;
  SaaS/On-premises
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: SaaS UI&lt;/li&gt;
&lt;li&gt;React Admin: On-premises&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Yes&lt;/li&gt;
&lt;li&gt;React Admin: Yes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: A database (PostgreSQL, MySQL, MicrosoftSQL, MongoDB) + Node.js, or Rails, Express/Sequelize and Express/Mongoose.&lt;/li&gt;
&lt;li&gt;React Admin: A data source + Node.js. React Admin uses JSONPlaceholder REST API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#onboarding"&gt;
  &lt;/a&gt;
  Onboarding
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: 5 minutes with Lumber. &lt;a href="https://www.youtube.com/watch?v=8ajGzG8QGn0"&gt;Watch a short video&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;React Admin: 4 hours to run the tutorial before starting implementing a real use case. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#layout"&gt;
  &lt;/a&gt;
  Layout
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#visual-builder"&gt;
  &lt;/a&gt;
  Visual Builder
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Yes, with a robust Layout Editor, a no-code visual builder. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mvy9zFUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-dashboard-editor-mode-1-.png" alt="Alt Text"&gt;
Dashboards in Forest Admin in an editor mode that allows for drag-and-drop no-code edits. Source: Forest Admin Live Demo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EzOVqHW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-orders-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EzOVqHW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-orders-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Orders view in Forest Admin. Source: Forest Admin Live Demo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Admin: No, you need to code the UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_rBxU7ue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/react-admin-dashboard-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rBxU7ue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/react-admin-dashboard-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Dashboards in React Admin. Source: React Admin Live Demo&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dHrGFvhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/react-admin-orders-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dHrGFvhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/react-admin-orders-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Orders view in React Admin. Source: React Admin Live Demo &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#crud-pagination"&gt;
  &lt;/a&gt;
  CRUD + Pagination
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TQ0v6ohS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-crud-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TQ0v6ohS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-crud-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Source: Forest Admin Live Demo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Admin: Available but requires UI definition, and one basic CRUD takes up to a day to setup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQkMe21I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-Crud-customers2-2-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQkMe21I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-Crud-customers2-2-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Source: React Admin Live Demo&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#search-and-filtering"&gt;
  &lt;/a&gt;
  Search and Filtering
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Out of the box. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j0HzCIs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/Forest-Admin-Search-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j0HzCIs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/Forest-Admin-Search-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Source: Forest Admin Live Demo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Admin: Requires UI definition.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVrNpT-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-search-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVrNpT-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-search-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Source: React Admin Live Demo&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#segments"&gt;
  &lt;/a&gt;
  Segments
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Out of the box.&lt;/li&gt;
&lt;li&gt;React Admin: Out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Dark and light themes available.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_1kdoWg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-dark-mode-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_1kdoWg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-dark-mode-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Dashboards in Forest Admin in the dark mode. Source: Forest Admin Live Demo&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Admin: Dark and light themes available, templates from Material UI and fully customizable with CSS. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5JBR4rcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-dashboard-dark-mode-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5JBR4rcq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/React-Admin-dashboard-dark-mode-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Dashboards in React Admin in the dark mode. Source: React Admin Live Demo&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-connectivity"&gt;
  &lt;/a&gt;
  Data connectivity
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#orms"&gt;
  &lt;/a&gt;
  ORMs
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Sequelize (ORM), Mongoose (ORM)&lt;/li&gt;
&lt;li&gt;React Admin: Sequelize (ORM), Google Firebase, Prisma (ORM).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#restgraphql"&gt;
  &lt;/a&gt;
  REST/GraphQL
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Possible, using  the Custom API connector (beta).&lt;/li&gt;
&lt;li&gt;React Admin: Yes, relies on the dataProvider implementation. Compatible with Hasura and few REST Standards. Requires implementation if the API is not yet supported. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#saas-api"&gt;
  &lt;/a&gt;
  SaaS API
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Forest Admin provides native integrations to Stripe, Mixpanel, Intercom, Close.io and it's simple to add more through the Smart Features.&lt;/li&gt;
&lt;li&gt;React Admin: Requires implementing a "facade" API to aggregate the data access and 3rd party API. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#permissions"&gt;
  &lt;/a&gt;
  Permissions:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Forest Admin: Real RBAC system with Roles and Teams, provided out of the box, configurable in the UI. The API is automatically protected according to the configured permissions. These permissions can then be fully delegated to the Operations Manager or Product Manager.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Admin: Basic ACL are available but you need to code the permissions restrictions on the API and UI level. It can lead to inconsistency or data leaks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Google SSO, User/Password.&lt;/li&gt;
&lt;li&gt;React Admin: AWS Cognito &amp;amp; Amplify, Google Firebase Auth, User/Password, OpenIDRequires a bit of coding and auth knowledge to set up. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#twofactor-authentication"&gt;
  &lt;/a&gt;
  Two-factor authentication
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Enforced 2FA out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej663q69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-2fa-1-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ej663q69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-2fa-1-.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Standard 2FS on Forest Admin. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React admin: Not out of the box, requires custom implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#auto-logout"&gt;
  &lt;/a&gt;
  Auto Logout
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: Out of the box.&lt;/li&gt;
&lt;li&gt;React Admin: Not out of the box, requires custom implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Forest Admin: &lt;a href="https://docs.forestadmin.com/documentation/"&gt;Documentation&lt;/a&gt;, &lt;a href="https://app.forestadmin.com/livedemo"&gt;Live Demo&lt;/a&gt;, &lt;a href="https://docs.forestadmin.com/woodshop/"&gt;Woodshops&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;React Admin: Documentation, Live Demo, HowTos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#when-react-admin-may-be-a-better-fit-for-your-project"&gt;
  &lt;/a&gt;
  When React Admin may be a better fit for your project
&lt;/h2&gt;

&lt;p&gt;At Forest Admin, we have years of experience in building internal tools in-house but our team members have also used open source frameworks. This experience brought us to the conclusion that an off-the-shelf solution is the most efficient way to combine the convenience of a SaaS with strict data security. However, the ideal solution is always the one that fits your business needs. And in some cases, React Admin may be the best choice for you, particularly if your team is exclusively technical and you don’t mind spending time on coding even basic features, and on learning how to implement them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-should-choose-forest-admin"&gt;
  &lt;/a&gt;
  When you should choose Forest Admin
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You need to set up an internal tool as fast as possible. After all, the idea is to let developers focus on the main app and not to spend too much time in the back office. With Forest Admin, onboarding literally takes a few minutes and we’re working hard on increasing the number of data sources you can plug.&lt;/li&gt;
&lt;li&gt;You need an internal tool that is designed to scale. When starting with Forest Admin, you don’t need to worry about what happens with internal tools when your company grows from a few to thousands of employees. Forest Admin handles exponential growth better than competitors. Hundreds of &lt;a href="https://www.forestadmin.com/customers"&gt;Forest Admin customers&lt;/a&gt; from rapidly growing industries (FinTech, e-commerce, mobility, just to name a few) can prove that statement.&lt;/li&gt;
&lt;li&gt;Internal tools are usually made for employees to solve customer problems, monitor transactions, analyze data, take care of claims, etc. These are not tasks performed by developers and frontend frameworks require coding skills to edit the UI. On Forest Admin, non-technical staff can be independent with tools and dashboards that are essential in their work. On top of that, basic CRUD operations are ready to use with no code, out of the box.&lt;/li&gt;
&lt;li&gt;Forest Admin provides native integration and allows users to add the custom integrations easily, which is not the case of React Admin.&lt;/li&gt;
&lt;li&gt;At Forest Admin, we believe one can’t be over cautious when it comes to security. That’s why we build the architecture in a way that your data goes through the admin API hosted on your servers, right into your end-user browser interface. It remains completely invisible to our servers, so it can never be accessed or stored by anyone other than you. On top of that, we offer enforced two-factor authentication, no third-party tracking, IP whitelisting, and more ways to protect your data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of Forest Admin clients, Maxime Sraïki, VP Tech at BAM (Theodo Group), has built internal tools with both React Admin and Forest Admin. Here is what he said about both experiences:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;As an architect, I have developed 10+ admin panels with open-source frameworks like React-Admin and third-party solutions like Forest Admin. My preference now goes to Forest Admin both when I want to create a quick MVP for personal projects and when I need to build a strong internal tool with high security, audit trails and the ability for operational to customize their tool autonomously.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#forest-admin-vs-react-admin-conclusion"&gt;
  &lt;/a&gt;
  Forest Admin vs. React Admin: Conclusion
&lt;/h2&gt;

&lt;p&gt;Choosing the right solution for internal tools is never an easy task. After all, your business operations efficiency is at stake. To make an informed decision, we always recommend answering these questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How much time will I have to spend implementing both the basic and advanced features?&lt;/li&gt;
&lt;li&gt;How difficult and time-consuming will it be to maintain the solution and to teach it to new team members?&lt;/li&gt;
&lt;li&gt;Will it scale together with my product and users?&lt;/li&gt;
&lt;li&gt;Can I easily find support and documentation if any issues arise?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you decide to give Forest Admin a try, &lt;a href="https://www.forestadmin.com/customers"&gt;sign up for free&lt;/a&gt;. 🌲🌲🌲&lt;/p&gt;

</description>
      <category>reactadmin</category>
      <category>adminpanel</category>
      <category>internaltools</category>
      <category>forestadmin</category>
    </item>
    <item>
      <title>#8) What is IIFE in JavaScript🐱‍👤</title>
      <author>Mayank Yadav</author>
      <pubDate>Tue, 27 Jul 2021 10:12:39 +0000</pubDate>
      <link>https://dev.to/myk/8-what-is-iife-in-javascript-1bng</link>
      <guid>https://dev.to/myk/8-what-is-iife-in-javascript-1bng</guid>
      <description>&lt;p&gt;🔰&lt;code&gt;IIFE: Immediately Invoked Function Expression&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;✔It is a JavaScript Function that runs as an when it is defined.&lt;/p&gt;

&lt;p&gt;Syntax of IIFE👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PrganF7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khtxpu0ska8xts9y0so8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PrganF7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khtxpu0ska8xts9y0so8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's talk about the two parenthesis in the above syntax.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-function-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;( function() {} )&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;💠Outer parenthesis '()'👆&lt;br&gt;
✅While executing JavaScript code, whenever the compiler sees the word &lt;em&gt;function&lt;/em&gt;, it assumes that we are declaring a function in the code. &lt;br&gt;
✅Therefore, if we do not use the first set of parentheses, the compiler throws an error because it thinks we are declaring a function, and by the syntax of declaring a function, a function should always have a name.&lt;/p&gt;

&lt;p&gt;⚠So, instead of getting error, we have to use the first set of parenthesis that tells the compiler that this function is not the function declaration but it's function expression.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-function-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;( function() {}) ();&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;💠Right-end side parenthesis '()'👆&lt;br&gt;
✅So, IIFE states that the function should invoke immediately as soon as it is defined.&lt;br&gt;
✅And as we know to run a function we need to invoke it.&lt;br&gt;
✅If we don't invoke it, function declaration is returned.&lt;br&gt;
✅That's why this second parenthesis is just for invoking.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>createState("Introducing AgileTs. A flexible State-Manager");</title>
      <author>BennoDev</author>
      <pubDate>Tue, 27 Jul 2021 09:51:29 +0000</pubDate>
      <link>https://dev.to/bennodev19/createstate-introducing-agilets-a-flexible-state-manager-91f</link>
      <guid>https://dev.to/bennodev19/createstate-introducing-agilets-a-flexible-state-manager-91f</guid>
      <description>&lt;p&gt;One of the most challenging problems to solve, especially in large frontend applications, is managing global States. While there are already several excellent approaches to solving global state management problems, most are tied to a specific workflow. You are often forced to define everything in a single source-of-truth store object, which takes away a lot of flexibility and simplicity. However, have you ever thought about managing your States as global individuals (&lt;code&gt;atoms&lt;/code&gt;) that can be structured as preferred and dynamically bound to any UI-Component for reactivity?&lt;/p&gt;

&lt;p&gt;I'm very excited to introduce you to &lt;a href="https://agile-ts.org/"&gt;AgileTs&lt;/a&gt;. &lt;strong&gt;A straightforward, flexible, well-tested State Management Library for Javascript/Typescript applications.&lt;/strong&gt; AgileTs enables the straightforward creation of individual and independent States (&lt;code&gt;createState('Hello World');&lt;/code&gt;) while providing a powerful toolset focused on developer experience around those States.&lt;/p&gt;

&lt;p&gt;The flexibility provided by managing global States as individuals makes AgileTs suitable for both, developers building smaller applications (&lt;a href="https://agile-ts.org/docs/style-guide#-inspiration-1"&gt;Style Guide&lt;/a&gt;) worrying about writing too much boilerplate code. And for teams creating large applications (&lt;a href="https://agile-ts.org/docs/style-guide#-inspiration-2"&gt;Style Guide&lt;/a&gt;) trying to create readable, maintainable, and testable code.  &lt;/p&gt;

&lt;p&gt;Before we dive into a small example, it should be noted that there is no 'perfect' way of managing global States. Each State Management approach has &lt;strong&gt;benefits&lt;/strong&gt; and &lt;strong&gt;drawbacks&lt;/strong&gt;. Depending on the kind of application you are building and your preferred code style, you should weigh which State-Management-Library is best suited for your needs. &lt;strong&gt;More on the benefits and drawbacks of AgileTs later.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;‎ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-react-and-agilets"&gt;
  &lt;/a&gt;
  👨‍💻 Get started with React and AgileTs
&lt;/h2&gt;

&lt;p&gt;Let's see how AgileTs works with React. To demonstrate its basic capabilities, I will show you how to build a simple application using AgileTs and React. The sample project we'll look at is a small counter that lets us increase a number as we click the 'Update State' button. It may not be fascinating, but it shows all the essential pieces of a React + AgileTs application in action.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/agilets-first-state-f12cz"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  1️⃣ Installation
&lt;/h3&gt;

&lt;p&gt;Installing AgileTs is as straightforward as installing any other npm packages. First, let’s install it using either &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;. To properly work with AgileTs in a React environment, we need to add &lt;strong&gt;two different packages&lt;/strong&gt; to our existing React application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;😎  If you want to set up a project from scratch, you can also use the official &lt;code&gt;create-react-app&lt;/code&gt; template for AgileTs.&lt;/p&gt;


&lt;pre class="highlight typescript"&gt;&lt;code&gt;
   &lt;span class="c1"&gt;// Javascript&lt;/span&gt;
   &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="nx"&gt;agile&lt;/span&gt;

   &lt;span class="c1"&gt;// Typescript&lt;/span&gt;
   &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="nx"&gt;agile&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;typescript&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#-raw-agiletscore-endraw-"&gt;
  &lt;/a&gt;
  📁 &lt;code&gt;@agile-ts/core&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @agile-ts/core 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://agile-ts.org/docs/core"&gt;&lt;code&gt;core&lt;/code&gt;&lt;/a&gt; package contains the state management logic of AgileTs and therefore offers powerful classes such as the &lt;a href="https://agile-ts.org/docs/core/state"&gt;&lt;code&gt;State Class&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-agiletsreact-endraw-"&gt;
  &lt;/a&gt;
  📂 &lt;code&gt;@agile-ts/react&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @agile-ts/react 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;a href="https://agile-ts.org/docs/react"&gt;React Integration&lt;/a&gt;, on the other hand, is an interface to React and provides useful functions like the &lt;a href="https://agile-ts.org/docs/react/hooks#useagile"&gt;&lt;code&gt;useAgile()&lt;/code&gt;&lt;/a&gt; Hook to easily bind States to React Components for reactivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-state"&gt;
  &lt;/a&gt;
  2️⃣ Create State
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After we have successfully installed AgileTs, we can start creating our first independent AgileTs State. All you need to instantiate a State is to call &lt;code&gt;createState()&lt;/code&gt; and specify an initial value.&lt;br&gt;
In our example, we have assigned the initial value 'Hello World' to the State. If you are wondering why we write AgileTs States uppercase. Well, it has a simple advantage. We can easily differentiate between global and local States in our UI-Components (See Step 3️⃣).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#bind-initialized-state-to-a-reactcomponent"&gt;
  &lt;/a&gt;
  3️⃣ Bind initialized State to a React-Component
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RandomComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFirstState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAgile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;myFirstState&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here (&lt;code&gt;// &amp;lt;-&lt;/code&gt;) we bind our just created State to the React Component ('RandomComponent') using the &lt;a href="https://agile-ts.org/docs/react/hooks#useagile"&gt;&lt;code&gt;useAgile()&lt;/code&gt;&lt;/a&gt; Hook. This binding ensures that the Component re-renders whenever the State &lt;code&gt;value&lt;/code&gt; mutates. The &lt;code&gt;useAgile()&lt;/code&gt; Hook returns the current &lt;code&gt;value&lt;/code&gt; of the State. So in our case, something like 'Hello World'.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#update-state-value"&gt;
  &lt;/a&gt;
  4️⃣ Update State value
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt; &lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello World &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;helloWorldCount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To bring some life into our small application, we update the State &lt;code&gt;value&lt;/code&gt; with the help of the State's &lt;code&gt;.set()&lt;/code&gt; function on each 'Update State' button press. Thereby we increase the external set  &lt;code&gt;helloWorldCount&lt;/code&gt; in ascending order.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#everything-put-together"&gt;
  &lt;/a&gt;
  😎 Everything put together
&lt;/h2&gt;

&lt;p&gt;Here we see the whole counter-example in one piece.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// 2️⃣ Create State with the initial value "Hello World"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;helloWorldCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RandomComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 3️⃣ Bind initialized State to the 'RandomComponent' for reactivity&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFirstState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAgile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;myFirstState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
                &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// 4️⃣ Update State value on Button press&lt;/span&gt;
                    &lt;span class="nx"&gt;MY_FIRST_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello World &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;helloWorldCount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are eager to learn more about AgileTs, take a look at our &lt;a href="https://agile-ts.org/docs/quick-start/react"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;‎ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-x-and-agilets"&gt;
  &lt;/a&gt;
  👨‍💻 Get started with [x] and AgileTs
&lt;/h2&gt;

&lt;p&gt;Unfortunately, this blog post can't cover how to use AgileTs in other frontend frameworks than React, as that would be beyond the scope. However, the core principle of AgileTs is in each UI-Framework the same. The only part that might differ is how to bind States to UI-Components for reactivity (Step 3️⃣). &lt;/p&gt;

&lt;p&gt;Here are code sandboxes for each already supported UI-Framework with the same &lt;code&gt;counter-example&lt;/code&gt; as in the React example section above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/s/agilets-first-state-f12cz"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://snack.expo.io/@bennodev/agilets-first-state"&gt;React-Native&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/s/agilets-first-state-i5xxs"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‎ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-agilets-an-raw-atomic-endraw-state-manager"&gt;
  &lt;/a&gt;
  ⚛️ Is AgileTs an &lt;code&gt;atomic&lt;/code&gt; State Manager?
&lt;/h2&gt;

&lt;p&gt;Yes, AgileTs follows the same pattern as &lt;code&gt;atomic&lt;/code&gt; State Management Libraries like &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt;. States in AgileTs are created individually and lay above the UI-Layer, while they can be dynamically bound to any UI-Component (for example via Hooks).&lt;br&gt;
In AgileTs, States are not called atoms, but rather individual or perhaps singleton States. However, the main difference to Recoil is that AgileTs doesn't depend on React, is more feature-rich and beginner-friendly.&lt;/p&gt;

&lt;p&gt;‎ &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-makes-agilets-so-special"&gt;
  &lt;/a&gt;
  👍 What makes AgileTs so special?
&lt;/h2&gt;

&lt;p&gt;After our little excursion on how AgileTs works in React, we already understand its basic API and functionality. So let's talk about what exactly makes AgileTs so special and some benefits of using it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#straightforward"&gt;
  &lt;/a&gt;
  🚅 Straightforward
&lt;/h3&gt;

&lt;p&gt;As you may have noticed in the React example above,&lt;br&gt;
the API of AgileTs is fairly easy to understand and self-explaining. This is no coincidence; AgileTs is designed to write minimalistic, boilerplate-free code that captures your intent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Update State value to 'hi'&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

&lt;span class="c1"&gt;// Undo latest State value change&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;undo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Check if the State value is equal to '{hello: "jeff"}'&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jeff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt; 

&lt;span class="c1"&gt;// Reset State to its intial value&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 

&lt;span class="c1"&gt;// Preserves the State `value`  in the corresponding external Storage&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;persist&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 

&lt;span class="c1"&gt;// Update State value in 200ms intervals&lt;/span&gt;
&lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%E2%80%8D-flexible"&gt;
  &lt;/a&gt;
  🤸‍ Flexible
&lt;/h3&gt;

&lt;p&gt;In AgileTs, States are created detached from each other and have an independent existence. Think of AgileTs States as global variables that can be structured as preferred and dynamically bound to any UI-Component. AgileTs States are partly like UI-Components since UI-Components are also just global variables embedded in other UI-Components.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DgaLPnOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jszrz2lsl12l3zd6dybq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DgaLPnOF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jszrz2lsl12l3zd6dybq.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The given flexibility has a lot of advantages. However, the capability to initialize States everywhere might lead to an unstructured and not transparent application, which quickly ends in a mess. To help you not to end up there, we have created some &lt;a href="https://agile-ts.org/docs/style-guide"&gt;Style Guides&lt;/a&gt; to give you some inspiration on how to structure a frontend application using AgileTs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#powerful-state-extensions"&gt;
  &lt;/a&gt;
  🐻 Powerful State extensions
&lt;/h3&gt;

&lt;p&gt;Based on the functionality of the basic AgileTs State, we have created further helpful classes, such as:&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#computed-state"&gt;
  &lt;/a&gt;
  👨‍🏫 &lt;a href="https://agile-ts.org/docs/core/computed"&gt;Computed State&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Computed States are a powerful concept that lets us build dynamic data depending on other data. To avoid unnecessary recomputations, the Computed Class caches the computed value and recomputes it only when an actual dependency has changed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;INTRODUCTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createComputed&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello I am '&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;MY_NAME&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vale&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'.`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Computed magically tracks used dependencies (such as States) and automatically recomputes when one of its dependencies updates. In the above code snippet, it would, for example, recompute when the current value of &lt;code&gt;MY_NAME&lt;/code&gt; changes from 'jeff' to 'hans'.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;INTRODUCTION&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Returns "Hello I am 'jeff'."&lt;/span&gt;
&lt;span class="nx"&gt;MY_NAME&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hans&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;INTRODUCTION&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Returns "Hello I am 'hans'."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codesandbox.io/s/agilets-first-computed-kisgr"&gt;Sandbox&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#collection-state"&gt;
  &lt;/a&gt;
  👨‍👩‍👧 &lt;a href="https://agile-ts.org/docs/core/collection/"&gt;Collection State&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Collection States come in handy when managing a set of information, such as a list of todos or users. A Collection is specially designed for arrays of &lt;code&gt;data objects&lt;/code&gt; following the same pattern. Each of these data objects requires a unique &lt;code&gt;item key&lt;/code&gt; to be correctly identified later. Think of a Collection like a database table that stores a data object once keyed by an id (&lt;code&gt;item key&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;JOKES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createCollection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we've created a Collection that stores a list of Jokes. However, a joke list without jokes isn't funny.&lt;br&gt;
So let's add a funny joke to our newly created Joke Collection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;JOKES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;joke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Why do Java programmers have to wear glasses?&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt; 
         Because they don't C#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;programming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The joke we've just added belongs to the category 'Programming'. Therefore we categorize it to the &lt;code&gt;programming&lt;/code&gt; Group. Groups allow us to easily cluster together data from a Collection as an array of item keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;JOKES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chucknorris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Returns Chuck Norris Jokes&lt;/span&gt;
&lt;span class="nx"&gt;JOKES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;programming&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Returns Programming Jokes&lt;/span&gt;
&lt;span class="nx"&gt;JOKES&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDefaultGroup&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Returns All Jokes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codesandbox.io/s/agilets-first-collection-uyi9g"&gt;Sandbox&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enhance-performance"&gt;
  &lt;/a&gt;
  🚀 Enhance Performance
&lt;/h3&gt;

&lt;p&gt;AgileTs assures performance optimization by batching re-render jobs and only re-rendering the UI-Components when an actual bound State mutates. You can go even further by only binding particular properties of a State value to the UI-Component or using the inbuilt &lt;a href="https://agile-ts.org/docs/react/hooks#useproxy"&gt;proxy functionality&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Component re-renders only when 'user.name' mutates&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MY_USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Returns 'jeff'&lt;/span&gt;

&lt;span class="c1"&gt;// Component re-renders only when 'user.age' mutates&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useProxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MY_USER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Returns '8'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#easy-debugging"&gt;
  &lt;/a&gt;
  🐞 Easy debugging
&lt;/h3&gt;

&lt;p&gt;AgileTs has no advanced &lt;code&gt;dev tools&lt;/code&gt; yet.&lt;br&gt;
However, you can bind your States to the &lt;code&gt;globalThis&lt;/code&gt;&lt;br&gt;
and easily access them in the browser console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MY_STATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jeff&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MY_COLLECTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCollection&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;globalBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;__core__&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;MY_STATE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;MY_COLLECTION&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allows you to preview and edit your global bound States at runtime. For example, the &lt;code&gt;core&lt;/code&gt; of the &lt;a href="https://agile-ts.org/"&gt;AgileTs documentation&lt;/a&gt; is globally bound for better debugging. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6A0YL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j71x7d38045ap6qsdznf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9z6A0YL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j71x7d38045ap6qsdznf.png" alt="image"&gt;&lt;/a&gt; Note that you should avoid attaching your application States to the &lt;code&gt;globalThis&lt;/code&gt; in &lt;strong&gt;production&lt;/strong&gt; because then third parties can easily interfere in your internal application logic. Since the AgileTs documentation has no vulnerable logic under the hood, the &lt;code&gt;core&lt;/code&gt; is also accessible in production. Thus you can play around with the AgileTs documentation &lt;code&gt;core&lt;/code&gt; and, for example, update the &lt;code&gt;NPM_DOWNLOADS&lt;/code&gt; State or update the astronaut color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;__core__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NPM_DOWNLOADS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‎ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-using-agilets"&gt;
  &lt;/a&gt;
  👎 Disadvantages of using AgileTs?
&lt;/h2&gt;

&lt;p&gt;Like any other great global State Manager, also AgileTs comes with some drawbacks that we should talk about. We are working hard to reduce and get rid of these. If you have any further concerns about using AgileTs, let me know in the comments. Then I can list them here and maybe even counteract them 😁. Thanks for your support.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ffXNM3fY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cil44rnwm8g1pnkew2ma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ffXNM3fY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cil44rnwm8g1pnkew2ma.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#big-bundle-size"&gt;
  &lt;/a&gt;
  🐘 Big bundle size
&lt;/h3&gt;

&lt;p&gt;Most State-Manager are pretty lightweight, but not this one. AgileTs has a minified size of &lt;a href="https://bundlephobia.com/result?p=@agile-ts/core"&gt;58.3kB&lt;/a&gt; and is pretty heavy compared to its fellows. However, it offers a 100% type safety, a predictable runtime, an API focusing on developer experience, and much more in return. The large bundle size doesn't mean that AgileTs slows down your application noticeable. Convince yourself with the below listed AgileTs stress tests:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://codesandbox.io/s/agilets-large-state-pyo63"&gt;Large State (React)&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesandbox.io/s/agilets-frequent-updates-5tprm"&gt;Frequent Updates (React)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have also created some &lt;a href="https://github.com/agile-ts/agile/tree/master/benchmark"&gt;benchmarks&lt;/a&gt; that compare different State Management approaches in terms of performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-large-community"&gt;
  &lt;/a&gt;
  🌍 No large community
&lt;/h3&gt;

&lt;p&gt;AgileTs hasn't been official released until now (July 2021)&lt;br&gt;
and I've not managed to build a community around the library yet. This was mainly because I thought AgileTs was not yet good enough to be shown to anyone. But well, among many other things I've learned while developing AgileTs, I've also learned that it's never too early to ask for feedback. 😅&lt;/p&gt;

&lt;p&gt;If you want to become a part of the AgileTs community, don't hesitate to join our &lt;a href="https://discord.gg/T9GzreAwPH"&gt;Community Discord&lt;/a&gt;. There you can ask anything related to AgileTs or programming in general and tell us what you think about AgileTs or what we can do better.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#only-one-contributormaintainer"&gt;
  &lt;/a&gt;
  🌲 Only one contributor/maintainer
&lt;/h3&gt;

&lt;p&gt;It may be strange, but if I (the only contributor) get hit by a tree or something and die, AgileTs will no longer have a maintainer. I've tried to create a as contributor-friendly codebase as possible. But still, it doesn't matter how many people are able to understand the code and fix the issues that might occur if no one can merge/release those changes.&lt;/p&gt;

&lt;p&gt;‎ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  ❓ Conclusion
&lt;/h2&gt;

&lt;p&gt;In conclusion, AgileTs provides a simple yet powerful API that focuses on developer experience and meets the need for small and large applications by being scalable without writing any boilerplate code. Therefore, AgileTs looks to be an excellent candidate to consider for State Management. Although it is not lightweight, it tries to optimize the performance of our applications wherever it can by batching re-renders and offering proxy-based functionalities like the &lt;a href="https://agile-ts.org/docs/react/hooks#useproxy"&gt;useProxy()&lt;/a&gt; hook.&lt;/p&gt;

&lt;p&gt;At last, thanks for taking the time to read this article. I would appreciate hearing what you think about AgileTs in the comments.  In case you have any further questions, don't hesitate to join our &lt;a href="https://discord.gg/T9GzreAwPH"&gt;Community Discord&lt;/a&gt; or ask on our &lt;a href="https://www.reddit.com/r/AgileTs/"&gt;subreddit&lt;/a&gt;. We are eager to help. And if you like the concept of AgileTs or/and want to support us, give us a ⭐️ (star) on &lt;a href="https://github.com/agile-ts/agile"&gt;Github&lt;/a&gt; and share it with your friends. Thanks for your support 😊&lt;/p&gt;

&lt;p&gt;Cheers 🎉&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/agile-ts/agile"&gt;https://github.com/agile-ts/agile&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Website: &lt;a href="https://agile-ts.org/"&gt;https://agile-ts.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/T9GzreAwPH"&gt;https://discord.gg/T9GzreAwPH&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/AgileTypescript"&gt;https://twitter.com/AgileTypescript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/r/AgileTs/"&gt;https://www.reddit.com/r/AgileTs/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
  </channel>
</rss>
