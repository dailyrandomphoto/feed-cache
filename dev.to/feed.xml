<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Kafka da Neden Partition Oluştururuz? 💫 🌌 ✨</title>
      <author>Gülsen 🦋</author>
      <pubDate>Thu, 20 Jan 2022 22:52:47 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</link>
      <guid>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</guid>
      <description>&lt;p&gt;&lt;strong&gt;Aggrigation yapabiliriz&lt;/strong&gt;: yani yazılan verilerin belli özelliklere göre toplanması. Producer'lerin verilerinin belirlenen özelliklerine göre toplanmasıdır.&lt;br&gt;
Verilerin sıralı bir şekilde toplanması (sorting - event sourcing)&lt;br&gt;
Daha hızlı okumak (parallelism)&lt;br&gt;
Verileri daha verimli saklamak (efficiency)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Round robin:&lt;/strong&gt; Gelen mesajları sırasıyla partitionlara bölüştürmek&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aggregation:&lt;/strong&gt; Örneğin key değerini category olarak verirsek mesajlar kategoriye göre gruplandırılıp öyle gönderilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sorting- event sourcing:&lt;/strong&gt; Örneğin customerId'yi key olarak verirsek login, add to cart, purchase (giriş yap, sepete ekle, satın alma) gibi kullanıcıların yaptığı işlemleri arka arkaya sıralar.&lt;/p&gt;

&lt;p&gt;Bir partition olsaydı okuma ve yazma performansı çok kötü olurdu yani paralelizm yapamazdık.&lt;/p&gt;

&lt;p&gt;Bir partition'dan aynı anda aynı kimliğe sahip sadece bir consumer okuyabilir.&lt;br&gt;
Partition kullanarak büyük boyutlu mesajları istediğimiz şekilde yönlendirebiliriz.&lt;br&gt;
Mesela büyük mesajları belli bir partition'a küçük mesajları belli bir partition'a yönlendirebiliriz.&lt;/p&gt;

&lt;p&gt;Leader partition : her partitionun replication kopyalarından biri lider olarak atanır bizde bu lider partitiona yazarız. Bu yazdığımız partition da diğer replication kopyalarına bu bilgiyi gönderip senkronize eder.&lt;br&gt;
Eğer bir nedenden dolayı lider olan partition çökerse kafka hemen yeni bir partition'u lider olarak seçer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kafkaya veri yazımı üç safhadan oluşur:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kafkaya veri göndermek&lt;/li&gt;
&lt;li&gt;Verinin lider olan partition'a gönderilip saklanması&lt;/li&gt;
&lt;li&gt;Lider olan partition'un bu veriyi diğer kopya olan partition'lara aktarması&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Producer Acknowledgement:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Kafkaya veri gönderdiğimizde bu üç safhanın hangilerinin bitmesini veya tastik etmesi gerektiğini belirleyebiliyoruz buna &lt;strong&gt;acknowledgement&lt;/strong&gt; deniliyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=0&lt;/strong&gt; (en hızlı ve riskli olan mesaj kaybolma şansı yüksek)&lt;br&gt;
Kafkaya gönder ve cevabı beklemeden devam et&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=1&lt;/strong&gt; (orta derece hızlı ve güvenli, Mesaj kaybolma şansı çok az)&lt;br&gt;
Kafkaya gönder ve sadece leader yazana kadar bekle&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks= all, -1&lt;/strong&gt; (en yavaşı ve en güvenlisi , mesaj kaybolma şansı yok)&lt;br&gt;
Kafkaya gönder, leader yazmasını ve leader'in diğer partition'lara yazmasını bekle&lt;/p&gt;

</description>
      <category>kafka</category>
      <category>partition</category>
      <category>pubsub</category>
      <category>apache</category>
    </item>
    <item>
      <title>Kafkadan veriler nasıl okunur? 💫 🌌 ✨</title>
      <author>Gülsen 🦋</author>
      <pubDate>Thu, 20 Jan 2022 22:35:51 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/kafkadan-veriler-nasil-okunur-29ja</link>
      <guid>https://dev.to/gulsenkeskin/kafkadan-veriler-nasil-okunur-29ja</guid>
      <description>&lt;p&gt;Hangi ofsetten okunmaya başlanacağı kafka'nın ilk belirlediği şeydir. &lt;br&gt;
Bu okuyucumuz eğer daha önce okumuş ve okuması yarım kalmışsa  zaten zookeeper içerisinde kaldığı ofset pozisyonu belirlidir. Oradan okumaya devam eder.&lt;/p&gt;

&lt;p&gt;Okuyucumuz yeni ise en baştan ofset 0 dan okumaya başlar&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Event oku (ofset 0)
2. İşlemi yap
3. Commit et (ofset 0)
4. Bir sonraki okunacak offset 1 oluyor.
5. Event oku (ofset 1)
6. Commit et (ofset 1)
7. Bir sonraki okunacak offset 2 oluyor.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#kafkadan-veri-okuma-se%C3%A7enekleri"&gt;
  &lt;/a&gt;
  Kafkadan veri okuma seçenekleri:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;At most once:&lt;/strong&gt; En fazla bir kere&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At least once:&lt;/strong&gt; En az bir kere, en çok kullanılan yöntem&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exactly once:&lt;/strong&gt; Tam bir kere ,  performansa büyük etkisi olur&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consumer groups:&lt;/strong&gt; Consumerlar yani okuyucular her zaman bir consumer grup'a bağlıdır.&lt;br&gt;
Böylelikle kafka hangi okuyucu olduğunu bilir ve ofset pozisyonunu ona göre belirler.&lt;/p&gt;

</description>
      <category>kafka</category>
      <category>apache</category>
      <category>consumer</category>
      <category>zookeeper</category>
    </item>
    <item>
      <title>Selenium WebDriver Giriş 💫 🌌 ✨</title>
      <author>Gülsen 🦋</author>
      <pubDate>Thu, 20 Jan 2022 22:24:15 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/selenium-webdriver-giris-40ja</link>
      <guid>https://dev.to/gulsenkeskin/selenium-webdriver-giris-40ja</guid>
      <description>&lt;h2&gt;
  &lt;a href="#web-driver-web-s%C3%BCr%C3%BCc%C3%BCs%C3%BC"&gt;
  &lt;/a&gt;
  Web Driver (Web Sürücüsü)
&lt;/h2&gt;

&lt;p&gt;WebDriver, bir kullanıcının yerel olarak veya Selenium sunucusunu kullanan uzak bir makinede yapacağı gibi bir tarayıcıyı yerel olarak çalıştırır.&lt;/p&gt;

&lt;p&gt;• WebDriver, basit ve daha özlü bir programlama arayüzü olarak tasarlanmıştır.&lt;/p&gt;

&lt;p&gt;• WebDriver, kompakt bir nesne yönelimli API'dir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ba%C5%9Flarken"&gt;
  &lt;/a&gt;
  Başlarken
&lt;/h2&gt;

&lt;p&gt;Selenium, WebDriver'ı kullanarak piyasadaki tüm büyük tarayıcıların otomasyonunu destekler. WebDriver, web tarayıcılarının davranışını kontrol etmek için dilden bağımsız bir ara yüz tanımlayan bir API ve protokoldür. Her tarayıcı, sürücü adı verilen belirli bir WebDriver uygulaması tarafından desteklenir. Sürücü, tarayıcıya yetki vermekten sorumlu bileşendir ve Selenium ile tarayıcı arasındaki iletişimi yönetir.&lt;/p&gt;

&lt;p&gt;Selenium kurulumu, diğer ticari araçların kurulumundan oldukça farklıdır. Selenium'u otomasyon projenizde kullanmak için, seçtiğiniz dil için o dilin kitaplıklarını yüklemeniz gerekir. Ek olarak, otomatikleştirmek ve üzerinde test çalıştırmak istediğiniz tarayıcılar için WebDriver ikili dosyalarına ihtiyacınız olacak.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selenium-kurulumu-%C3%BC%C3%A7-ad%C4%B1ma-ayr%C4%B1labilir"&gt;
  &lt;/a&gt;
  Selenium kurulumu üç adıma ayrılabilir:
&lt;/h2&gt;

&lt;p&gt;• İstediğiniz programlama dili için Selenium kitaplığını yükleyin&lt;br&gt;
• Tarayıcınızı otomatikleştirmek için tarayıcı sürücüsünü ayarlayın (örn. Firefox için GeckoDriver)&lt;br&gt;
• (İsteğe bağlı) Testlerinizi büyütmek istiyorsanız Selenium Grid'i kurun ve yapılandırın&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bile%C5%9Fenleri-anlama"&gt;
  &lt;/a&gt;
  Bileşenleri anlama:
&lt;/h2&gt;

&lt;p&gt;WebDriver kullanarak bir test takımı oluşturmak, bir dizi farklı bileşeni anlamanızı ve etkili bir şekilde kullanmanızı gerektirir. Yazılımdaki her şeyde olduğu gibi, farklı insanlar aynı fikir için farklı terimler kullanır. Aşağıda, bu açıklamada terimlerin nasıl kullanıldığının bir dökümü bulunmaktadır.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminoloji"&gt;
  &lt;/a&gt;
  terminoloji:
&lt;/h2&gt;

&lt;p&gt;•API: Uygulama Programlama Arayüzü. Bu, WebDriver'ı değiştirmek için kullandığınız "komutlar" kümesidir.&lt;/p&gt;

&lt;p&gt;•Library (Kütüphane): API'leri ve bunları uygulamak için gerekli kodu içeren bir kod modülü.&lt;br&gt;
Kitaplıklar her dile özeldir, örneğin Java için .jar dosyaları, .NET için .dll dosyaları vb.&lt;/p&gt;

&lt;p&gt;•Driver (Sürücü): Gerçek tarayıcının kontrolünden sorumludur. Sürücüler genellikle, test paketini yürüten sistemde değil, tarayıcının kendisiyle birlikte sistemde çalışan yürütülebilir modüllerdir. (Bunlar aynı sistem olabilir.) NOT: Bazı kişiler sürücülerden proxy olarak bahseder.&lt;/p&gt;

&lt;p&gt;•Framework (Çerçeve): WebDriver paketleri için destek olarak kullanılan ek bir kitaplık. Bu çerçeveler, JUnit veya NUnit gibi test çerçeveleri olabilir. Cucumber veya Robotium gibi doğal dil özelliklerini destekleyen çerçeveler de olabilirler. Çerçeveler ayrıca test edilen sistemi manipüle etme veya yapılandırma, veri oluşturma, test kahinleri vb. gibi şeyler için de yazılabilir ve kullanılabilir.&lt;/p&gt;

&lt;p&gt;WebDriver bir sürücü aracılığıyla bir tarayıcıyla konuşur. İletişim iki yönlüdür: WebDriver, komutları sürücü aracılığıyla tarayıcıya iletir ve bilgileri aynı yoldan geri alır.&lt;/p&gt;

</description>
      <category>selenium</category>
      <category>webdriver</category>
      <category>testing</category>
      <category>testdev</category>
    </item>
    <item>
      <title>6 examples of Bias for action for Software Engineers</title>
      <author>Kevin Peters</author>
      <pubDate>Thu, 20 Jan 2022 22:14:39 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/6-examples-of-bias-for-action-for-software-engineers-158e</link>
      <guid>https://dev.to/getworkrecognized/6-examples-of-bias-for-action-for-software-engineers-158e</guid>
      <description>&lt;p&gt;Bias for action is a principle that appears in many leadership principle lists of companies, like Amazon. Let us explore what it means and how software engineers apply this principle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-bias-for-action"&gt;
  &lt;/a&gt;
  What is Bias for action?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In business, time is money. Many judgments and acts can be reversed and do not need in-depth research. Risk-taking is something that is appreciated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As software engineers, we have to take risks, decisions and need to judge decisions all the time. This depends of course on seniority and your current level, but in any job as a software engineer - even if you do not work at Amazon - you will show this principle.&lt;/p&gt;

&lt;p&gt;The principle can also be described as a calculated risk. Not every decision will be the right one but with a bit of data, you can measure the risk of each option for doing a specific task. If the risk is acceptable you should be open to taking any path that leads to completion of the task, ideally with the lowest friction. If it was wrong, then change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ooM7uLiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9gripjcgj0w24q8gxpk.gif" alt="A simple way to your promotion" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The characteristics making out a person that fits this leadership principle are consisting of different things. For once, we have the doer. When considering "Bias for action" people that are not scared of doing mistakes will show this leadership principle more. They are willing to do certain things without overthinking. They take the risks required which other people might not take. Additionally, they will also have the courage to own the outcome when taking an action. If the action might lead to failure, they are there to fix it, iterate, improve and maybe iterate based on the action. True ownership.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-companies-use-bias-for-action"&gt;
  &lt;/a&gt;
  Which companies use Bias for action?
&lt;/h2&gt;

&lt;p&gt;Next to Amazon there is GitHub who is uses a similar principle called "Ship to learn". It is similar to the details of "Bias for Action" by Amazon. So here is a short list with all the companies using this principle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/amazon-2020"&gt;Amazon: Bias For action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/github-2020"&gt;GitHub: Ship to Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer"&gt;And others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a lot more companies adapting leadership principles "Bias for action" will become more important. Companies also get more technical and analyze the impact they have, making sure that you can pivot from your initial decision if it does not work out. So let us check what software engineers can do in detail to show this leadership principle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#situations-for-bias-for-action"&gt;
  &lt;/a&gt;
  Situations for Bias for action
&lt;/h2&gt;

&lt;p&gt;As a software engineer, you might ask yourself initially where you show bias for action. It is really difficult when you think about it but there are a lot of opportunities and day-to-day activities where you show this principle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#during-arguments"&gt;
  &lt;/a&gt;
  During arguments
&lt;/h3&gt;

&lt;p&gt;A situation where it is quite common to use "Bias for action" is in discussions with the team. It could be any discussion on how to implement a specific feature. Or talking about a past decision on what went wrong. Often, participants in the discussion do not focus on the actions they can take from the discussion but because they like to discuss. In these situations, the leadership principle can be applied. Disagreeing and focusing on actually taking an action, even if you do not agree with it necessarily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decisioning-process"&gt;
  &lt;/a&gt;
  Decisioning Process
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plkegc9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/204j7hpe3otxloei7xvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plkegc9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/204j7hpe3otxloei7xvv.png" alt="A group of people deciding for a feature" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the last chapter, most decision processes will be decided based upon discussions. In any way, as software engineers, we will also have the ability to make decisions ourselves. Especially because as a software engineer you will most likely have access to the data to make the decisions. If you know in a meeting that a discussion might help to take any action, but to take a really good decision it will take a bit more time to gather data, delay the decision. The action will be to get more data to make sure whatever action you will take, will make the whole process a success for your customer. To the person or organization, you are writing software for. Push for this principle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#helping-people-to-make-decisions"&gt;
  &lt;/a&gt;
  Helping people to make decisions
&lt;/h3&gt;

&lt;p&gt;When you think about discussions, you mostly think about yourself and how you interact in the discussion. But it is also important to put yourself into the other participants' perspective. If you understand the other person and make sure their voice, their concerns, and their decisions are well respected, it is the first step to making good decisions. You can help to convince them of your ideas by giving them a little nudge, to rethink approaches. For example, this works well with gathering data on the problem and presenting it to them. It might make them rethink their decision and take action instead of just arguing with the team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-measure-bias-for-action"&gt;
  &lt;/a&gt;
  How do you measure Bias for action?
&lt;/h2&gt;

&lt;p&gt;If you read this article you probably want to know what you have done which relates to this principle. But first, let us check how we can measure Bias for action. It is probably one of the leadership principles that is the most difficult to track. But what you can do is &lt;a href="https://getworkrecognized.com/blog/3-brag-document-templates-google-docs"&gt;create a brag document&lt;/a&gt; every week or month and write down the situations when you took a risk rather than waiting out on deciding something. The more detailed timeline you have of the discussion and decision processes the easier it will get for you to summarize where you acted based on this principle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lQyouyIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1p8efiertt9hvn3cbec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQyouyIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1p8efiertt9hvn3cbec.png" alt="Writing a brag document" width="880" height="371"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another good tip is to keep a brag document with getworkrecognized and keep records of when you showed a bias for action so you can reference it in the future. With getworkrecgonized, you can keep a diary of all your achievements at work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-how-to-apply-bias-for-action"&gt;
  &lt;/a&gt;
  Examples of how to apply Bias for action
&lt;/h2&gt;

&lt;p&gt;Programmers show bias for action most of the time by default. But pinpointing specific examples in your career is always feeling difficult. In the following section, we list some examples where bias for action can be shown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h3&gt;

&lt;p&gt;Coming up with a solution to solve a problem can be applied to many problems. It can be a technical problem but also a team problem, but we will discover them later in this chapter. In general, solutions should be built minimal. When a problem arises try to focus on thinking of an MVP - a minimum viable product. So to say. A better term would be probably a minimum viable solution that fixes the problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-discussions"&gt;
  &lt;/a&gt;
  Feature Discussions
&lt;/h3&gt;

&lt;p&gt;Discussions about product features are probably the most common one for software engineers to be involved in. For example, it could be a simple discussion of which user interface is better and should be chosen for the next feature. A lot of preferences come into play here like personal experience with UI and experiences at your old company how they have done things. Most of the time an A/B test can help with actually choosing the right UI. Instead of arguing which UI is better, focus on actually choosing a metric that will help you to see which is the better UI.&lt;/p&gt;

&lt;p&gt;Another example is purely technical feature discussions. For example, like choosing the right database type for your new application or service. For such decisions, the principle "Bias for action" might not be applied because database migrations are difficult to do in the long term. So you should be still open to listening to other people's opinions but decide on the best long-term solution. Be careful of the risks of your decisions. Note them down.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ooM7uLiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9gripjcgj0w24q8gxpk.gif" alt="A simple way to your promotion" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A different situation can occur during sprint planning with your team. Which feature should you focus on? Normally sprints are taking 2 weeks and there is a goal for the sprint to achieve. People hesitate about what to choose normally and what has the highest impact. Gather data on the impact and effort to finish the different projects, which are also called epics in some companies. With that, you can measure the risk of actually delivering a feature within a sprint and measure the outcome.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-issues"&gt;
  &lt;/a&gt;
  Team Issues
&lt;/h3&gt;

&lt;p&gt;Most modern and agile teams follow some sort of sprints. What most of the sprints have in common is a retrospective at the end of each cycle of the sprint. During this meeting, the participants discuss the last cycle and what can be done better. But more importantly, they discuss concrete actions that can improve the team's health and performance. The focus should be on actions rather than discussing the issues. Sometimes though, discussing the issue will clear up specific arguments, so feel free to discuss from time to time, but push the participants of the meeting to take action and remind them that sometimes it is ok to disagree if you have any action and can measure the success in future retros. Especially if the issue is not critical to running your current team's processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mentoring"&gt;
  &lt;/a&gt;
  Mentoring
&lt;/h3&gt;

&lt;p&gt;An engineer will have many opportunities to mentor other employees in the company. More junior people need a helping hand from time to time with easy but also difficult problems. More senior people need guidance on how to navigate the product the best, how to contribute, and what are core parts of the code are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEDjWG4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giy2utk4ch5i5gzq69f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEDjWG4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giy2utk4ch5i5gzq69f.png" alt="A person teaching a group of other people" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During mentoring it is important that you can tell the other person that you do not know everything and if you get into a situation where you do not have an answer to a question, you can simply answer you do not know. But it is important to also give them the feeling that if they fail with their actions, failures are appreciated because you can learn from them. This is the most important part. Push them for a decision soon and let them reevaluate if it does not work out. An important part though is to encourage them to also gather some data around their issue, and see if what they thought is right, is working out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meetings"&gt;
  &lt;/a&gt;
  Meetings
&lt;/h3&gt;

&lt;p&gt;The principle can be also shown in meetings. As we learned in the discussions chapter before it is important to take action from a meeting. What you can do to push this action-taking and make it quicker is to just research some data regarding the meeting before the actual meeting. Take 30-60 minutes the next time before a meeting and gather data around the issues that will appear. It will help to drive your meeting forward. And even if the meeting does not go in the direction of actions, take an action to gather data around the issue to see if there is any impact. We also wrote &lt;a href="https://getworkrecognized.com/blog/structured-meetings-get-you-promoted"&gt;another article&lt;/a&gt; on how to structure your meetings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;Writing documentation comes short most of the time for developers. A problem that many software engineers have is that they can't put themself into another perspective. So the reader of the documentation will suffer. It is good to create some personas for your documentation and then write the documentation.&lt;/p&gt;

&lt;p&gt;It's important to roll out this documentation quickly and gather feedback. Most of the time some documentation is better than none. Take action and write that piece of documentation everyone is needing. For internal customers or external customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Bias for action is a weird leadership principle. It is not clear immediately how this principle is actually manifested in your work and especially in interviews at Amazon, it might be weird to answer this question. Find one of the examples above in your work and prepare them for the interview. And feel free to track your work with getworkrecognized. It will help you to figure out your actions towards "Bias for action".&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>Just posted my website!!!!</title>
      <author>Boolean</author>
      <pubDate>Thu, 20 Jan 2022 22:02:57 +0000</pubDate>
      <link>https://dev.to/lincjones/just-posted-my-website-5a07</link>
      <guid>https://dev.to/lincjones/just-posted-my-website-5a07</guid>
      <description>&lt;p&gt;I posted it on lincjones.github.io!!!!! I made it with Html, CSS, JavaScript, and Bootstrap. I am considering buying a domain name.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>css</category>
    </item>
    <item>
      <title>Intersection Observer API</title>
      <author>Sanjeev Yogi</author>
      <pubDate>Thu, 20 Jan 2022 21:51:42 +0000</pubDate>
      <link>https://dev.to/syogifse/intersection-observer-api-3nbn</link>
      <guid>https://dev.to/syogifse/intersection-observer-api-3nbn</guid>
      <description>&lt;p&gt;The Intersection Observer API is the browser API that provides an easy way to asynchronously observe the visibility and position of the target element relative to the top-level viewport or the containing root element. Before the introduction of Intersection Observer API, performing such tasks was difficult.&lt;br&gt;
It has several use cases. Some examples among many are lazy-loading of images, infinite scrolling, and animations based on the relative position of elements. The CodePen demo below is the illustration of one such use. CodePen Demo is further explained in the latter part of the blog.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ygsjv/embed/oNGREeR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminologies"&gt;
  &lt;/a&gt;
  Terminologies
&lt;/h2&gt;

&lt;p&gt;To better understand the Intersection Observer API, we need to be familiar with some of the terminologies used to construct and control the intersection observer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Root (root)&lt;/strong&gt;&lt;br&gt;
The root is the element that serves as a viewport to check the visibility of the target element. It must be the ancestor of the target. If unspecified or null, it defaults to the browser viewport.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Root Margin (rootMargin)&lt;/strong&gt;&lt;br&gt;
It is similar to the CSS margin which serves to grow or shrink the viewport from the top, bottom, left, and right. It can be expressed in pixel and percentage. If unspecified, it defaults to zero.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intersection Ratio (intersectionRatio)&lt;/strong&gt;&lt;br&gt;
The degree of intersection between the target element and its root is called the intersection ratio. It is represented as a percentage and has a value between 0.0 to 1.0.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Threshold (threshold)&lt;/strong&gt;&lt;br&gt;
Threshold is responsible for running the callback function that is passed into the constructor of the intersection observer. Threshold can have a single number or can have an array of numbers to run the callback function. For example, to run the callback function when the visibility of target element inside viewport passes the 30% mark, the value of the threshold is set at 0.3. Similarly, to run a callback function every time the visibility passes 25%, the threshold is set as array [0, 0.25, 0.5, 0.75, 1]. The default, 0 triggers callback function as soon as one pixel is visible in the viewport while the maximum value, 1 means the threshold is not considered passed until every pixel of the target element is visible inside the viewport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-intersection-observer"&gt;
  &lt;/a&gt;
  Creating an Intersection Observer
&lt;/h2&gt;

&lt;p&gt;The intersection observer can be created by calling its constructor and passing the callback function and options object. The callback function handles the intersection of the root element and target element while the options object controls all the circumstances at which the callback function is invoked. It has root, rootMargin, and threshold as keys with their respective values.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let options = {&lt;br&gt;
     root: document.querySelector('#scrollArea'),&lt;br&gt;
     rootMargin: '0px',&lt;br&gt;
     threshold: 1.0&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
&lt;code&gt;let observer = new IntersectionObserver(callback, options);&lt;/code&gt;&lt;br&gt;
&lt;code&gt;let callback = (entries, observer) =&amp;gt; {&lt;br&gt;
     entries.forEach(entry =&amp;gt; {&lt;br&gt;
     //do something&lt;br&gt;
 });&lt;br&gt;
};&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The callback function takes entries and observer as the parameters. "Entries" lists one entry for each target element and represents them as an array. On the other hand, the intersection observer object observes and reports the intersection position of the target elements. Each entry is an instance of IntersectionObserverEntry. IntersectionObserverEntry is an interface of the Intersection Observer API and it describes the intersection between the target element and its root container at a specific moment of transition. It has several useful properties which are briefly discussed below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;boundingClientRect&lt;/em&gt;&lt;/strong&gt;, information about the size of an element and its position relative to the viewport. &lt;br&gt;
&lt;strong&gt;&lt;em&gt;intersectionRect&lt;/em&gt;&lt;/strong&gt;, the target visible area.&lt;br&gt;
&lt;strong&gt;&lt;em&gt;isIntersecting&lt;/em&gt;&lt;/strong&gt;, if the target element intersects with the root container. &lt;br&gt;
&lt;strong&gt;&lt;em&gt;intersectionRatio&lt;/em&gt;&lt;/strong&gt;, the ratio of intersectionRect to the boundingClientRect.&lt;br&gt;
&lt;strong&gt;&lt;em&gt;rootBound&lt;/em&gt;&lt;/strong&gt;, position and size of the intersection root.&lt;/p&gt;

&lt;p&gt;The target element needs to be selected and observed to report its intersection position.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let target = document.querySelector('#listItem');&lt;br&gt;
observer.observe(target);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To stop observing the target, we can simply use&lt;br&gt;
&lt;code&gt;observer.unobserve(target);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The CodePen demo above utilizes the intersection observer to change the color of the circle by scrolling. The color-changing function and procedure of the circle are controlled by the values of the root, rootMargin, and threshold in the options object. It has three sections. The target element is the middle section with a light green background. The top and bottom sections have light blue backgrounds. The root has the value of null. Thus, the root is the browser viewport. Margin is 0px and threshold is 0 as well. Since, the threshold is 0, as soon as the green background appears in the viewport, the callback function is invoked and the color of the circle changes to green from blue. The color of the circle changes &lt;br&gt;
back to blue once the green background disappears from the viewport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Intersection Observer API is a powerful tool that can be used to our advantage in several ways in web development. It observes the intersection between the root and target element. The root can be the parent of the target element or the browser viewport. The size of the root can be adjusted using rootMargin. The root has a callback function which is executed when the root crosses the threshold value. Though intersection Observer API observes the target asynchronously, the callback functions are executed synchronously. Lastly, if needed, we can stop observing the target.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building UIs in Figma with hand movements</title>
      <author>Charlie Gerard</author>
      <pubDate>Thu, 20 Jan 2022 20:44:59 +0000</pubDate>
      <link>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</link>
      <guid>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</guid>
      <description>&lt;p&gt;&lt;em&gt;Post originally shared on my &lt;a href="https://charliegerard.dev"&gt;blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since the release of the latest version of the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;MediaPipe handpose detection&lt;/a&gt; machine learning model that allows the detection of multiple hands, I've had in mind to try to use it to create UIs, and here's the result of a quick prototype built in a few hours!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AzV2ngmbiBw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before starting this, I also came across 2 projects mixing TensorFlow.js and Figma, one by &lt;a href="https://twitter.com/adispezio/status/1440153362872221701"&gt;Anthony DiSpezio to turn gestures into emojis&lt;/a&gt; and one by &lt;a href="https://twitter.com/sidahuj/status/1440705845973512195"&gt;Siddharth Ahuja to move Figma's canvas with hand gestures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had never made a Figma plugin before but decided to look into it to see if I could build one to design UIs using hand movements.&lt;/p&gt;

&lt;p&gt;The first thing to know is that you can't test your plugins in the web version so you need to install the Desktop version while you're developing.&lt;/p&gt;

&lt;p&gt;Then, even though you have access to some Web APIs in a plugin, access to the camera and microphone isn't allowed, for security reasons, so I had to figure out how to send the hand data to the plugin.&lt;/p&gt;

&lt;p&gt;The way I went about it is using &lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt; to run a separate web app that handles the hand detection and send specific events to my Figma plugin via websockets.&lt;/p&gt;

&lt;p&gt;Here's a quick visualization of the architecture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" alt="A web app is running the hand detection with TensorFlow.js, sends events such as pinch or zoom to the express server with socket.io running on port 8080. The Figma plugin is listening on the same port to the zoom event and when received, triggers different actions in the Figma UI." width="880" height="615"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gesture-detection-with-tensorflowjs"&gt;
  &lt;/a&gt;
  Gesture detection with TensorFlow.js
&lt;/h2&gt;

&lt;p&gt;In my separate web app, I am running &lt;a href="https://www.tensorflow.org/js"&gt;TensorFlow.js&lt;/a&gt; and the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;hand pose detection model&lt;/a&gt; to get the coordinates of my hands and fingers on the screen and create some custom gestures.&lt;/p&gt;

&lt;p&gt;Without going into too much details, here's a code sample for the "zoom" gesture:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;leftThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hands&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handedness&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;palmLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// zoom&lt;/span&gt;
          &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code looks a bit messy but that's intended. The goal was to validate the hypothesis that this solution would work before spending some time improving it.&lt;/p&gt;

&lt;p&gt;What I did in this sample was checking that the y coordinate of the tips of my index, middle finger and ring finger was smaller than the y coordinate of their dip cause it would mean my fingers are straight so I'm doing some kind of "palm" gesture.&lt;br&gt;
Once it is detected, I'm emitting a "zoom" event and sending the difference in x coordinate between my right middle finger and left middle finger to represent some kind of width.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#express-server-with-socketio"&gt;
  &lt;/a&gt;
  Express server with socket.io
&lt;/h2&gt;

&lt;p&gt;The server side uses &lt;code&gt;express&lt;/code&gt; to serve my front-end files and &lt;code&gt;socket.io&lt;/code&gt; to receive and emit messages.&lt;/p&gt;

&lt;p&gt;Here's a code sample of the server listening for the &lt;code&gt;zoom&lt;/code&gt; event and emitting it to other applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;socket.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a user connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;listening on *:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#figma-plugin"&gt;
  &lt;/a&gt;
  Figma plugin
&lt;/h2&gt;

&lt;p&gt;On the Figma side, there's two parts. A &lt;code&gt;ui.html&lt;/code&gt; file is usually responsible for showing the UI of the plugin and a &lt;code&gt;code.js&lt;/code&gt; file is reponsible for the logic.&lt;br&gt;
My html file starts the socket connection by listening to the same port as the one used in my Express server and sends the events to my JavaScript file.&lt;/p&gt;

&lt;p&gt;For example, here's a sample to implement the "Zoom" functionality:&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ui.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;transports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;// Zoom zoom&lt;/span&gt;
  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pluginMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;code&gt;code.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__html__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Messages sent from ui.html&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According to the Figma docs, the zoom level needs to be a number between 0 and 1, so I am normalizing the coordinates I get from the hand detection app to be a value between 0 and 1.&lt;/p&gt;

&lt;p&gt;So as I move my hands closer or further apart, I am zooming in or out on the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" alt="Gif showing me moving my hands closer and further apart to zoom in and out of a UI design" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a pretty quick walkthrough but from there, any custom gesture from the frontend can be sent to Figma and used to trigger layers, create shapes, change colors, etc!&lt;/p&gt;

&lt;p&gt;Having to run a separate app to be able to do this is not optimal but I doubt Figma will ever enable access to the &lt;code&gt;getUserMedia&lt;/code&gt; Web API in a plugin so in the meantime, that was an interesting workaround to figure out!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>machinelearning</category>
      <category>tensorflow</category>
      <category>tfjs</category>
    </item>
    <item>
      <title>Como funciona o encoding no protocolo HTTP?</title>
      <author>wrongbyte</author>
      <pubDate>Thu, 20 Jan 2022 20:25:40 +0000</pubDate>
      <link>https://dev.to/wrongbyte/como-funciona-o-encoding-no-protocolo-http-94f</link>
      <guid>https://dev.to/wrongbyte/como-funciona-o-encoding-no-protocolo-http-94f</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;... ou: o que acontece com os bytes das requisições HTTP quando você se comunica com alguns servidores?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#antes-um-pouco-de-contexto"&gt;
  &lt;/a&gt;
  Antes, um pouco de contexto...
&lt;/h3&gt;

&lt;p&gt;Quando temos um arquivo grande e precisamos mandá-lo para alguém, o que vem na nossa cabeça de imediato é &lt;em&gt;“zipar”&lt;/em&gt; este arquivo.&lt;/p&gt;

&lt;p&gt;Quando &lt;em&gt;zipamos&lt;/em&gt;, isto é, comprimimos um arquivo, o que estamos fazendo na realidade &lt;del&gt;(de forma simplificada, é claro)&lt;/del&gt; é aplicar um &lt;strong&gt;algoritmo de compressão&lt;/strong&gt; nos seus bytes. O que esses algoritmos fazem é diminuir a redundância da sequência de bytes que compõe o arquivo, utilizando de referências como ponteiros onde ocorrem sequências que já se repetem. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mas-qual-a-rela%C3%A7%C3%A3o-entre-esses-algoritmos-e-o-protocolo-http"&gt;
  &lt;/a&gt;
  Mas qual a relação entre esses algoritmos e o protocolo HTTP?
&lt;/h3&gt;

&lt;p&gt;Imagine que você deseja fazer um GET request para um site, por exemplo para &lt;a href="http://example.org"&gt;http://example.org&lt;/a&gt;.&lt;br&gt;
No seu browser, você vai ver a seguinte página, interpretada pelo seu browser:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dyv1209r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt3t8q20lvryghcx62m8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dyv1209r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt3t8q20lvryghcx62m8.png" alt="Site normal" width="824" height="522"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contudo, o que você de fato recebe do servidor é uma &lt;strong&gt;enorme stream contendo o código-fonte da página&lt;/strong&gt;, após as headers:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqtsBZ3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtq2n6c7nngf6taw83ho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqtsBZ3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtq2n6c7nngf6taw83ho.png" alt="Código fonte do site" width="880" height="521"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logo transferir o conteúdo de páginas contendo uma quantidade extensa de dados torna-se pouco efetivo, tanto para o cliente quanto para o servidor. &lt;strong&gt;A partir disso, podemos então "zipar" a resposta que recebemos. Ao fazer isso, diminuímos o tamanho da resposta, que vem comprimida, e assim aumentamos a eficiência da comunicação.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#como-isso-ocorre"&gt;
  &lt;/a&gt;
  Como isso ocorre?
&lt;/h3&gt;

&lt;p&gt;Normalmente, a resposta é comprimida utilizando-se do algoritmo &lt;strong&gt;gzip&lt;/strong&gt;, mas isso vai depender do servidor. &lt;br&gt;
Antes da aplicação efetiva do algoritmo de compressão, ocorre a chamada "negociação" entre o browser e o servidor: &lt;strong&gt;o browser envia a header &lt;code&gt;accept-encoding&lt;/code&gt;&lt;/strong&gt; com o algoritmo suportado (exemplo: &lt;code&gt;Accept-Encoding: gzip&lt;/code&gt;) e &lt;strong&gt;o server responde com a header &lt;code&gt;content-encoding&lt;/code&gt;&lt;/strong&gt; com o algoritmo escolhido.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WTVtor61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3zumzo1mutvmyh6z7sp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTVtor61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3zumzo1mutvmyh6z7sp.png" alt="Negociação HTTTP" width="778" height="339"&gt;&lt;/a&gt;&lt;br&gt;
Obs: nesse caso, usamos a header &lt;code&gt;Vary&lt;/code&gt; para armazenar em cache os diferentes valores para o encoding.&lt;/p&gt;

&lt;p&gt;Dessa forma, as headers &lt;code&gt;Accept-Encoding&lt;/code&gt; e &lt;code&gt;Content-Encoding&lt;/code&gt; vão definir o algoritmo de compressão escolhido para diminuir o tamanho dos arquivos sendo transferidos na comunicação. Isso é de extrema importância para tornar o uso da conexão mais eficiente.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mas-%C3%A9-poss%C3%ADvel-otimizar-ainda-mais-a-comunica%C3%A7%C3%A3o-atrav%C3%A9s-do-uso-de-outra-header-raw-transferencoding-endraw-"&gt;
  &lt;/a&gt;
  Mas é possível otimizar ainda mais a comunicação através do uso de outra header: &lt;code&gt;Transfer-Encoding&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Quando recebemos a resposta do servidor, recebemos o que é chamado de "payload". Isso é a resposta que pode ser, como já vimos acima, uma página HTML por exemplo.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JJfnIp0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2yrsfwc86m5l6aauyqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JJfnIp0m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2yrsfwc86m5l6aauyqz.png" alt="payload" width="278" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Definition of payload : The "actual data" in a packet or file minus all headers attached for transport and minus all descriptive meta-data. In a network packet, headers are appended to the payload for transport and then discarded at their destination.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Contudo, é possível "dividir" esse payload, e isso ocorre quando utilizamos da header &lt;code&gt;transfer-encoding&lt;/code&gt;.&lt;/strong&gt; Quando essa header não é utilizada, o payload body e message body são iguais.&lt;/p&gt;

&lt;p&gt;Exemplo da resposta vista antes, porém com transfer-encoding:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C2ShjD7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl300b8gih3mv37xjilu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2ShjD7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl300b8gih3mv37xjilu.png" alt="chunked response" width="357" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ou seja, as respostas com transfer-encoding seguem a seguinte estrutura:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2NX3Fg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pc1mu71szfb49yb5q9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2NX3Fg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pc1mu71szfb49yb5q9i.png" alt="estrutura" width="177" height="144"&gt;&lt;/a&gt;&lt;br&gt;
Isso divide as informações recebidas em &lt;strong&gt;chunks&lt;/strong&gt;, ou seja, "pedaços" de dados. Isso, além de ajudar a diminuir a carga da comunicação, ajuda o servidor a manter uma conexão mesmo para conteúdos gerados dinamicamente.&lt;br&gt;
Em muitos servidores, é comum ocorrer a combinação de Content-Encoding: gzip + Transfer-Encoding: chunked, por tornarem a comunicação mais eficiente.&lt;/p&gt;

</description>
      <category>browsers</category>
      <category>http</category>
    </item>
    <item>
      <title>Configuring AWS with terraform using Ubuntu</title>
      <author>Tolulope Adeleke</author>
      <pubDate>Thu, 20 Jan 2022 19:51:37 +0000</pubDate>
      <link>https://dev.to/tioluwaniope/configuring-aws-with-terraform-using-ubuntu-42mn</link>
      <guid>https://dev.to/tioluwaniope/configuring-aws-with-terraform-using-ubuntu-42mn</guid>
      <description>&lt;p&gt;&lt;em&gt;Hello there 🙋‍♀️&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I will be sharing the basic steps on how to configure AWS with terraform using Ubuntu. If you're a beginner, this will definitely save you some time and energy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here we go... Yayyy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hey...&lt;strong&gt;You need to have an AWS account&lt;/strong&gt; you might want to try the free access account as a beginner.&lt;/p&gt;

&lt;p&gt;You need to download your &lt;strong&gt;&lt;em&gt;VMware workstation pro&lt;/em&gt;&lt;/strong&gt; (&lt;strong&gt;Make sure it is the latest version of Ubuntu&lt;/strong&gt;). It is quite heavy and takes a very long time to download and install this. &lt;/p&gt;

&lt;p&gt;Make sure to remember your Credentials (Username and Password) while installing your VMware. Note, this is very important&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You should get this after installation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It starts from here;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--192NQwik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73l9v90oggp5ah9xndo9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--192NQwik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73l9v90oggp5ah9xndo9.PNG" alt="Image description" width="494" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;and ends here...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---l3EROk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2v0qe3nvkz64945ijyx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---l3EROk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2v0qe3nvkz64945ijyx.PNG" alt="Image description" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you follow this steps clearly, you should get &lt;strong&gt;terraform installed on your VMware workstation pro&lt;/strong&gt;. Here are the steps in order;&lt;/p&gt;

&lt;p&gt;On your platform, search for &lt;strong&gt;&lt;em&gt;terminal&lt;/em&gt;&lt;/strong&gt; then click on it to get started. Now run the following commands;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. wget &lt;a href="https://releases.hashicorp.com/terraform/1.1.3/terraform_1.1.3_linux_amd64.zip"&gt;https://releases.hashicorp.com/terraform/1.1.3/terraform_1.1.3_linux_amd64.zip&lt;/a&gt; (always confirm the latest version)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. sudo apt-get install zip -y&lt;/strong&gt; (Sudo means superuser do or substitute user do)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. unzip terraform*.zip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.sudo mv terraform /usr/local/bin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. terraform --version&lt;/strong&gt;  or &lt;strong&gt;terraform -v&lt;/strong&gt; (this will give you the version of terraform you installed)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. mkdir  /terraform&lt;/strong&gt; (this has to do with directory)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. cd /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. vim config.tf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You should get this after running those commands;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7CF-wLGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fixlx45tyipr9lrh5em.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7CF-wLGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fixlx45tyipr9lrh5em.jpg" alt="Image description" width="607" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you have gotten this far...Kudos&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. You have to fill this in for configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;provider "aws" {&lt;br&gt;
  project     = "my-project-id"&lt;br&gt;
  region      = "us-central1"&lt;br&gt;
}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can leave the page by clicking on (esc ,then shift and : then type wq) with this you can leave the page, so as to go back to continue with deployment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Now run terraform innit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now log in to the AWS Management Console&lt;/strong&gt; click on your name on the dashboard, scroll down to security credentials. Copy the Access keys(access key ID and secret access key)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qx4dWhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ciuxxl26matme7nreog.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qx4dWhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ciuxxl26matme7nreog.PNG" alt="Image description" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3a9FYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0aaqmfp9it8ywv23gaf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3a9FYVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0aaqmfp9it8ywv23gaf.PNG" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. sudo snap install aws-cli --classic&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. aws configure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;fill all the required credentials here&lt;/em&gt; (credentials from step 10)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. mkdir  /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. cd /terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15. touch main.tf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Make sure to fill in this command, it should appear like this&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMLkuzqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lvgok5va92dimfe61f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMLkuzqX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48lvgok5va92dimfe61f.jpeg" alt="Image description" width="727" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;16. Now run terraform innit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;17. terraform plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18. terraform apply&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now go to your AWS Console to check your deployment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That is all!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VriRxY3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjagrjbd25dakd2xo9t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VriRxY3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjagrjbd25dakd2xo9t.jpg" alt="Image description" width="591" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;well done...  If you have gotten this far, Kudos&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;See you on my next blog&lt;/em&gt;👊&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>terraform</category>
      <category>github</category>
    </item>
    <item>
      <title>React.js Core Concepts</title>
      <author>Suresh Pal Pranta</author>
      <pubDate>Thu, 20 Jan 2022 19:16:28 +0000</pubDate>
      <link>https://dev.to/pranta07/reactjs-core-concepts-51ha</link>
      <guid>https://dev.to/pranta07/reactjs-core-concepts-51ha</guid>
      <description>&lt;h2&gt;
  &lt;a href="#reactjs-and-its-pros-amp-cons"&gt;
  &lt;/a&gt;
  React.js and its pros &amp;amp; cons
&lt;/h2&gt;

&lt;p&gt;React is a declarative, component-based JavaScript library for building user interfaces.&lt;br&gt;
Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use virtual DOM to effectively render user interfaces.&lt;/li&gt;
&lt;li&gt;Supports component-based design which is reusable and easy to manage.&lt;/li&gt;
&lt;li&gt;Single page application means rendering different components on the same page efficiently without any reload. Which makes a better user experience. &lt;/li&gt;
&lt;li&gt;The HTML-like syntax is easy to learn and use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Continuously updated features which is a bit challenging for developers to cope up with new documentation. &lt;/li&gt;
&lt;li&gt;Still contains class-based components example in documentation instead of functional components.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#jsx"&gt;
  &lt;/a&gt;
  JSX
&lt;/h2&gt;

&lt;p&gt;JSX means JavaScript XML which allows HTML-like syntax with JavaScript in react. Using JSX we can create dynamic content in our react application easily. Without JSX the code is a bit lengthy and complex while using JSX the code is simple and easy to understand. Babel is used by React to convert the JSX to React elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blogs = () =&amp;gt; {
    return (
        &amp;lt;div&amp;gt;
            &amp;lt;img
                src="https://i.ibb.co/2SfqRWr/maxresdefault.jpg"
                alt=""
                width="100%"
            /&amp;gt;
        &amp;lt;/div&amp;gt;
    );
};

export default Blogs;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet inside the return statement it looks like html syntax actually it is JSX notation which makes us easier to understand what our code structure will looks like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-dom"&gt;
  &lt;/a&gt;
  Virtual DOM
&lt;/h2&gt;

&lt;p&gt;It is a virtual representation or copy of the real DOM object. Whenever anything changes in our document react will create a new virtual DOM and compare it with the previous DOM, find out the change between these two DOMs using diff algorithm and finally update the specific changes into the real DOM without updating the entire dom. This makes DOM-manipulation more effective without updating the entire DOM whenever a small part of the DOM is changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#props-and-state"&gt;
  &lt;/a&gt;
  Props and State
&lt;/h2&gt;

&lt;p&gt;Props are mainly used for passing dynamic data from parent component to child components while the state is a variable that is used to store information about a specific component and that can be changed dynamically. Props are read-only and immutable which means we can not change props. When the state changes re-render will happen dynamically.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blogs = () =&amp;gt; {
    const blogs = ["blog1","blog2","blog3","blog4","blog5",]
    return (
        blogs.map(blogTitle =&amp;gt; &amp;lt;Blog title={blogTitle}&amp;gt;&amp;lt;/Blog&amp;gt;)
    );
};
export default Blogs;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
const Blog = (props) =&amp;gt; {
    const {title} = props;
    return (
        &amp;lt;h1&amp;gt;{title}&amp;lt;/h1&amp;gt;
    );
};
export default Blog;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lifting-state-up"&gt;
  &lt;/a&gt;
  Lifting State Up
&lt;/h2&gt;

&lt;p&gt;We cannot pass states from child to parent component. React follows a top-down approach for passing state between many level components. When a parent component needs the state we need to lift the state up to the parent component and pass this as a prop to the child components. This is called &lt;code&gt;lifting state up&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#props-drilling-and-context-api"&gt;
  &lt;/a&gt;
  Props Drilling and Context API
&lt;/h2&gt;

&lt;p&gt;When data are passed from component to component by props on a deeper level this is called props drilling.&lt;br&gt;
The best way to pass data 4-5 layers down is using context API. Context API is used to pass multiple data all over the document which is simple and easy to use. Whenever we need to share multiple data between many level components we can use context API to provide those data to the whole document. &lt;br&gt;
First, we have to create a context then we have to wrap our document between context Providers where we should specify the value we want to pass. We can get the value we provide from anywhere with the help of &lt;code&gt;useContext&lt;/code&gt; hook.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#custom-hook"&gt;
  &lt;/a&gt;
  Custom hook
&lt;/h2&gt;

&lt;p&gt;Hooks are mainly a JavaScript function that can perform some task and returns the results we need. Building our own custom hook will help us to simplify our code which is easy to understand. For creating a custom hook we have to create a JavaScript function and export it so that it can be imported from any component we want and use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useState } from "react";

const useProducts = () =&amp;gt; {
    const [products, setProducts] = useState([]);
    fetch(url)
    .then(res =&amp;gt; res.json())
    .then(data =&amp;gt; setProducts(data));
    return { products };
};

export default useProducts;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const products = useProducts();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#performance-optimization"&gt;
  &lt;/a&gt;
  Performance Optimization
&lt;/h2&gt;

&lt;p&gt;To optimize a react.js app we should try to divide different parts of our application into smaller chunks, use react fragments to avoid unnecessary elements for wrapping, try to avoid using an index as a key for the map, using useMemo, pure component, use of spread operator, passing object as props, etc. which will prevent unnecessary component re-render in React.js.&lt;/p&gt;

</description>
      <category>blogging</category>
    </item>
    <item>
      <title>Using GitHub Codespaces with VNC/flexbox to create Pokémon maps from a web browser</title>
      <author>lowlighter 🦑</author>
      <pubDate>Thu, 20 Jan 2022 18:55:10 +0000</pubDate>
      <link>https://dev.to/lowlighter/using-github-codespaces-with-vncflexbox-to-create-pokemon-maps-from-a-web-browser-3ch6</link>
      <guid>https://dev.to/lowlighter/using-github-codespaces-with-vncflexbox-to-create-pokemon-maps-from-a-web-browser-3ch6</guid>
      <description>&lt;p&gt;Hi there 👋 !&lt;/p&gt;

&lt;p&gt;I'm currently working on a cool project, &lt;a href="https://github.com/lowlighter/gracidea"&gt;&lt;code&gt;🌺 Gracidea&lt;/code&gt;&lt;/a&gt;, which is an animated Pokémon live web map aiming to recreate the whole Pokémon world while being accessible directly from your browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtbE0Cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyf7bw0x2tm9kbqsw8x7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUtbE0Cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lyf7bw0x2tm9kbqsw8x7.gif" alt="Gracidea preview" width="600" height="302"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use a combination of several technologies, like &lt;a href="//deno.land"&gt;deno&lt;/a&gt;, &lt;a href="https://pixijs.com"&gt;pixi.js&lt;/a&gt;, &lt;a href="https://vercel.com"&gt;vercel.com&lt;/a&gt; and &lt;a href="https://www.mapeditor.org"&gt;Tiled map editor&lt;/a&gt; along additional other tools. Some of these, like Tiled, are graphical desktop apps so they need to be installed first.&lt;/p&gt;

&lt;p&gt;Which made wonder, what if it was possible to provide a graphic environment to access desktop apps and edit maps directly from a web browser... 🤔 ?&lt;/p&gt;

&lt;p&gt;And it is 🥳 !&lt;/p&gt;

&lt;p&gt;If you don't know, GitHub offers &lt;a href="https://github.com/features/codespaces"&gt;codespaces&lt;/a&gt; which lets you spawn a web-accessible docker instance from a repository with VS Code pre-installed. However, not many people know that it is actually possible to configure the dockerfile through the &lt;code&gt;.devcontainer&lt;/code&gt; folder of said repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sh0g9--i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84lvivmxh4bg8ozwxcyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sh0g9--i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84lvivmxh4bg8ozwxcyg.png" alt="Codespaces" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ℹ️ Note: Seems that this feature is in closed beta for users accounts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After playing a bit with &lt;a href="https://github.com/microsoft/vscode-dev-containers/blob/main/script-library/docs/desktop-lite.md"&gt;Microsoft's vscode-dev-containers' lightweight desktop&lt;/a&gt; I achieved to configure vnc and flexbox (the provided desktop env) to spawn a full-screen instance of Tiled!&lt;/p&gt;

&lt;p&gt;Below's a preview of the whole thing, in Firefox (yes, everything is happening in the browser !😮)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gQi4b4NI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ctqtvyjxlgpkjry90e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gQi4b4NI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ctqtvyjxlgpkjry90e.gif" alt="Codespaces preview" width="600" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So yeah, basically all you need to setup this project now is just a web browser, no headaches caused by "but it works on my machine 😵 !"&lt;/p&gt;

&lt;p&gt;If you're interested in the required code to make this works, it is available &lt;a href="https://github.com/lowlighter/gracidea/tree/main/.devcontainer"&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading 💕 !&lt;/p&gt;

</description>
      <category>github</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, &amp; more on DevNews</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 20 Jan 2022 18:50:57 +0000</pubDate>
      <link>https://dev.to/devteam/safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-more-on-devnews-3ljh</link>
      <guid>https://dev.to/devteam/safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-more-on-devnews-3ljh</guid>
      <description>&lt;p&gt;Tough luck for now if your browser uses WebKit 😬 &lt;/p&gt;

&lt;p&gt;Listen to that story and many more on this week's episode of the DevNews podcast&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S7:E2 - Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, Walmart Ponders NFTs, and More&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s7-e2-safari-15-s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more"&gt;
      &lt;img id="episode-profile-image" alt="S7:E2 - Safari 15’s IndexedDB Vulnerability, An Attack of the Wordle Clones, Walmart Ponders NFTs, and More" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;As a refresher, DevNews is the news show for developers by developers. Each season, our hosts cover the latest in the world of tech, and speak with diverse guests from a variety of backgrounds to dig deep into meaty topics such as security, the pros and cons of outsourcing your authentication, and the latest bugs and hacks.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hosts:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt; is the founder of Disco, founder of &lt;a href="https://community.codenewbie.org"&gt;CodeNewbie&lt;/a&gt; host of the &lt;a href="https://dev.to/codenewbie"&gt;CodeNewbie Podcast&lt;/a&gt;, and co-host of the &lt;a href="https://dev.to/basecspodcast"&gt;base.cs podcast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a class="mentioned-user" href="https://dev.to/joshpuetz"&gt;@joshpuetz&lt;/a&gt; is the Principal Software Engineer at &lt;a href="https://forem.com"&gt;Forem&lt;/a&gt; — the open source community software that powers DEV, CodeNewbie and a growing number of other online communities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Guest:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Valentin Vasilyev&lt;/strong&gt; is an entrepreneur and open source enthusiast. He Co-founded FingerprintJS in 2020 based on the GitHub project he started in 2012&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this episode, we talk about Walmart’s plans to get into NFTs and cryptocurrency, telecom operators starting to block Apple’s iCloud Private Relay, and an attack of the Wordle clones. Then we speak with Valentin Vasilyev, co-Founder and CTO at FingerprintJS, whose team spotted a vulnerability in Safari 15’s IndexedDB API.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; &lt;em&gt;— or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s7-e2-safari-15s-indexeddb-vulnerability-an-attack/id1525581923?i=1000548454367"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/3vYkrY9EIGSMSxDBRDnU90"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzUw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwj4m-Kr_8D1AhUAAAAAHQAAAAAQCg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s7-e2-safari-15s-indexeddb-vulnerability-an-attack-of-the-wordle-clones-walmart-ponders-nfts-and-more-89841316"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s7e2-safari-15s-indexeddb-5_N37Pcq2AM/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=169156078"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/243"&gt;DEV Pods website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  &lt;em&gt;Acknowledgements&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt; for producing &amp;amp; mixing the show&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;Our Season 7 Sponsor: &lt;a href="https://scoutapm.com/?utm_campaign=ad_q2_2021&amp;amp;utm_content=sponsored&amp;amp;utm_medium=podcast&amp;amp;utm_source=devnews"&gt;Scout APM&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoy this kickoff to a new season of DevNews 📰 &lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
      <category>devnews</category>
    </item>
  </channel>
</rss>
