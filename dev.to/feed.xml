<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>WPRecon – Vulnerability recognition tool in CMS WordPress</title>
      <author>kalilinux</author>
      <pubDate>Thu, 22 Apr 2021 19:53:11 +0000</pubDate>
      <link>https://dev.to/kalilinux/wprecon-vulnerability-recognition-tool-in-cms-wordpress-2okc</link>
      <guid>https://dev.to/kalilinux/wprecon-vulnerability-recognition-tool-in-cms-wordpress-2okc</guid>
      <description>&lt;p&gt;For you to compile wprecon you will need to have the golang compiler installed. And for that you will access the official website of golang and will download and install it. Here!&lt;/p&gt;

&lt;p&gt;Once downloaded and installed you will download wprecon directly from github with the command:&lt;/p&gt;

&lt;p&gt;go get github.com/blackbinn/wprecon;&lt;br&gt;
cd $(go env GOPATH)/src/github.com/blackbinn/wprecon;&lt;br&gt;
make build.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kali-linuxtr.net/wprecon-vulnerability-recognition-tool-in-cms-wordpress"&gt;wprecon&lt;/a&gt;&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>php</category>
      <category>security</category>
      <category>vulnerability</category>
    </item>
    <item>
      <title>The Data Engineering Interview Study Guide</title>
      <author>SeattleDataGuy</author>
      <pubDate>Thu, 22 Apr 2021 19:08:47 +0000</pubDate>
      <link>https://dev.to/seattledataguy/the-data-engineering-interview-study-guide-439m</link>
      <guid>https://dev.to/seattledataguy/the-data-engineering-interview-study-guide-439m</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@craftedbygc?utm_source=medium&amp;amp;utm_medium=referral"&gt;Green Chameleon&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interviewing for any technical position generally requires preparing, studying, and long, all-day interviews.&lt;/p&gt;

&lt;p&gt;Data engineering interviews, like other technical interviews, require plenty of preparation. There are a number of subjects that need to be covered in order to ensure you are ready for back-to-back questions.&lt;/p&gt;

&lt;p&gt;Some positions require &lt;a href="https://hadoop.apache.org/"&gt;Hadoop&lt;/a&gt;, others &lt;a href="https://en.wikipedia.org/wiki/SQL"&gt;SQL&lt;/a&gt;. Some roles require understanding statistics, while still others require heavy amounts of system design.&lt;/p&gt;

&lt;p&gt;We have gathered many of the resources that we have used to study and get jobs at companies in the FAANG family as well as other major tech companies. We have yet to find one that requires you to know anything about Hadoop during the interview, so that has not been included in this study guide.&lt;/p&gt;

&lt;p&gt;We recommend asking the recruiter if you aren't sure which type of interview you will be facing. Some companies are very good at keeping interviews consistent, but even then, teams can deviate depending on what they are looking for. Here are some examples of what we have noticed about some companies' data engineering interviews.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon --- &lt;/strong&gt;SQL- and database-design heavy as well as general ETL design. Surprisingly, no Python.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Netflix ---&lt;/strong&gt;SQL- and code-heavy, with the expectation that you can not only write SQL and code but can optimize them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"They asked about SQL queries to find time difference between two events given certain condition. " --- Netflix data engineer on Glassdoor&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Expedia&lt;/strong&gt; --- Big Data questions, like what is Spark and RDDs, as well as SQL and Python.&lt;/p&gt;

&lt;p&gt;Due to this variance, we've created a checklist to keep track of what subject areas you have already studied and what you still need to cover: &lt;a href="https://docs.google.com/spreadsheets/d/1GOO4s1NcxCR8a44F0XnsErz5rYDxNbHAHznu4pJMRkw/edit#gid=0"&gt;data engineering study checklist&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, I recently created a &lt;a href="https://www.youtube.com/watch?v=2lloOlnSzSs&amp;amp;t=1s"&gt;video guide&lt;/a&gt; to walk through the data engineering interview study guide.&lt;/p&gt;

&lt;p&gt;Let's get started with SQL.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sql"&gt;
  &lt;/a&gt;
  SQL
&lt;/h3&gt;

&lt;p&gt;As a data engineer, it is almost inevitable that you will get some SQL questions. As someone who has participated in many interviews for a lot of top tech companies, like Amazon and Capital One, I know that they usually follow some similar patterns.&lt;/p&gt;

&lt;p&gt;Typically there will be at least one question that requires an aggregation with a filter, another that requires a few joins, and then one that requires a subquery. Along with that, there might be a few curveball questions that require self-joins, recursions, and analytic functions. So let's look at a couple of concepts that are good to cover.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prevideo-sql%C2%A0problems"&gt;
  &lt;/a&gt;
  Pre-video SQL problems
&lt;/h4&gt;

&lt;p&gt;These first few problems will help you gauge where you are on different concepts. That way you can take notes on the study guide, and go back and review what you feel you were not comfortable with.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/trips-and-users/"&gt;262. Trips and Users&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/human-traffic-of-stadium/"&gt;601. Human Traffic of Stadium&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/department-top-three-salaries/"&gt;185. Department Top Three Salaries&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/rising-temperature/"&gt;197. Rising Temperature&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/exchange-seats/"&gt;626. Exchange Seats&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/the-report/problem"&gt;The Report&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/nth-highest-salary/"&gt;177. Nth Highest Salary&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/symmetric-pairs/problem"&gt;Symmetric Pairs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/occupations/problem"&gt;Occupations&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/challenges/harry-potter-and-wands/problem"&gt;Ollivander's Inventory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/challenges/placements/problem"&gt;Placements&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#videos"&gt;
  &lt;/a&gt;
  Videos
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=QFj-hZi8MKk"&gt;Learning about ROW_NUMBER and Analytic Functions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=G3kYPzLWtpo&amp;amp;t=4s"&gt;Advanced Implementation Of Analytic Functions Running Total&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=XecU6Ieyu-4&amp;amp;t=54s"&gt;Advanced Implementation Of Analytic Functions Median&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2-1XQHAgDsM&amp;amp;list=PL6EDEB03D20332309"&gt;Wise Owl SQL Videos&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#postvideo-sql%C2%A0problems"&gt;
  &lt;/a&gt;
  Post-video SQL problems
&lt;/h4&gt;

&lt;p&gt;Once you have finished watching the SQL videos above, consider trying the new problems below. Try to see if you feel like you are improving. Again, note down any specific topics you feel weak on.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/binary-search-tree-1/problem"&gt;Binary Tree Nodes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/big-countries/"&gt;595. Big Countries&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/exchange-seats/"&gt;626. Exchange Seats&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/weather-observation-station-18/problem"&gt;Weather Observation Station 18&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/challenges/problem"&gt;Challenges&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/print-prime-numbers/problem"&gt;Print Prime Numbers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://data36.com/sql-interview-questions-tech-screening-data-analysts/"&gt;SQL Interview Questions: 3 Tech Screening Exercises (For Data Analysts)&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#join-our-newsletter"&gt;
  &lt;/a&gt;
  Join Our Newsletter
&lt;/h3&gt;

&lt;p&gt;Before scrolling any further, why not join our team's newsletter to keep up to date on data science, data engineering and tech! &lt;a href="https://seattledataguy.substack.com/"&gt;Learn more here&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#databases-etl-and-data-warehouses"&gt;
  &lt;/a&gt;
  Databases, ETL, and Data Warehouses
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPTYlJv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AqxWT8N9DpBVto4hv2V6THQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPTYlJv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AqxWT8N9DpBVto4hv2V6THQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://stackoverflow.com/questions/20346850/sql-movie-database-diagram"&gt;Stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For database, &lt;a href="https://seattledataguy.substack.com/p/what-are-etls-and-why-we-use-them"&gt;ETL&lt;/a&gt;, and &lt;a href="https://www.theseattledataguy.com/what-are-the-benefits-of-cloud-data-warehousing-and-why-you-should-migrate/#page-content"&gt;data warehouse&lt;/a&gt; design questions, we have gathered some books and videos we hope will help you out when it comes to explaining your design in an interview. In addition, we have listed a few plausible database/DW concepts you could attempt to design out on your own.&lt;/p&gt;

&lt;p&gt;We recommend going through the videos and at least skimming the Data Warehouse Toolkit before attempting the self-practice problems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.kimballgroup.com/data-warehouse-business-intelligence-resources/books/data-warehouse-dw-toolkit/"&gt;The Data Warehouse Toolkit&lt;/a&gt;by Ralph Kimball&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=I_rxqSJAj6U"&gt;Designing a Traditional Relational Database Video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=--OJpdPeH80"&gt;Data Warehouse Design Video&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#selfpractice-problems"&gt;
  &lt;/a&gt;
  Self-practice problems
&lt;/h4&gt;

&lt;p&gt;For this part of your interview practice, we are going to list a few business systems that you can try to design out. First, we recommend designing a relational database, then thinking about how you would design an ETL and DW that rely on that relational DB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In addition, we have found it very common that interviewers will base their interview questions on your design. So think about some of the questions you could answer with your DB and list them.&lt;/p&gt;

&lt;p&gt;Design a database/ETL and DW for a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  dating app&lt;/li&gt;
&lt;li&gt;  bicycle rental service&lt;/li&gt;
&lt;li&gt;  music streaming app&lt;/li&gt;
&lt;li&gt;  job search website&lt;/li&gt;
&lt;li&gt;  Udemy-like website&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just a few ideas. We hope they help you have a clearer idea of what you can practice modeling and designing. Take some time to think about how users interact with these websites before getting started.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#programming-problems"&gt;
  &lt;/a&gt;
  Programming Problems
&lt;/h3&gt;

&lt;p&gt;Data engineers do a significant amount of programming in their daily life. There are several specific languages data engineers use. Python is arguably the most common.&lt;/p&gt;

&lt;p&gt;If the role requires a lot of Hadoop work, then &lt;a href="https://www.java.com/en/"&gt;Java&lt;/a&gt; is also a useful language to have. There are a few other useful languages, like Java and &lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.1"&gt;PowerShell&lt;/a&gt; (if you work at a Microsoft shop).&lt;/p&gt;

&lt;p&gt;There are two types of questions we have experienced. Some interviewers will ask you more operational questions. Others will ask classic algorithm and data structure questions.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#operational-programming-problems"&gt;
  &lt;/a&gt;
  Operational Programming Problems
&lt;/h3&gt;

&lt;p&gt;Operational interview questions are harder to prep for. There are no "classic" interview questions here. However, they are also often easier to figure out on the spot. Algorithm interview questions usually have some sort of trick. Like the balanced brackets problem: If you don't know you need to use queues, it will be very difficult to get to the correct answer.&lt;/p&gt;

&lt;p&gt;Operational problems, however, will be more focused on workflows and business processes. So as long as you are good at walking through real problems, this should be easier. Here are some problems that are great for prepping. We find it is helpful to know how to use arrays and dictionaries. Beyond that, there isn't too much more required.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/kangaroo/problem"&gt;Kangaroo problem&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/breaking-best-and-worst-records/problem"&gt;Breaking records&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/find-a-string/problem"&gt;Find a string&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/itertools-permutations/problem"&gt;itertools.permutations()&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/no-idea/problem"&gt;No idea!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/day-of-the-programmer/problem"&gt;Days of the programmer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/climbing-the-leaderboard/problem"&gt;Leaderboard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/word-order/problem"&gt;Word order&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/sherlock-and-squares/problem"&gt;Sherlock and squares&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/challenges/equality-in-a-array/problem"&gt;Equalize the array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/challenges/apple-and-orange/problem"&gt;Apples and oranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/domains/python"&gt;More operational style questions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h3&gt;
  &lt;a href="#algorithms-and-data-structures"&gt;
  &lt;/a&gt;
  Algorithms and Data Structures
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag31wfXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/0%2A0SDxosKzKb-Zpd91" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ag31wfXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/0%2A0SDxosKzKb-Zpd91" alt="abstract image of data on a screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@markusspiske?utm_source=medium&amp;amp;utm_medium=referral"&gt;Markus Spiske&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before going too deep into data structure and algorithms, let's do a quick check to see how you are currently doing in this area. We have listed eight LeetCode problems that vary in difficulty. Try these out and try to gauge yourself on how long it takes you, as well as how many hints you needed. If you are following along with the study guide, then note this down. At the end of this list are a few more questions. So once you have watched all the videos, consider doing those problems, and see if you feel like you are improving!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#prestudy-problems"&gt;
  &lt;/a&gt;
  Pre-study problems
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/sum-of-even-numbers-after-queries/"&gt;985. Sum of even numbers after queries&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/robot-return-to-origin/"&gt;657. Robot return to origin&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/n-repeated-element-in-size-2n-array/"&gt;961. N-repeated element in size 2N array&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/balanced-binary-tree/"&gt;110. Balanced binary tree&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/"&gt;3. Longest substring without repeating characters&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/"&gt;19. Remove Nth node from end of list&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/merge-k-sorted-lists/"&gt;23. Merge k sorted lists&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/next-permutation/"&gt;31. Next permutation&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that you have gone through these eight questions and shaken off the rust, let's start reviewing these concepts.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#data-structures"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Data structures&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=bum_19loj9A"&gt;Data Structures &amp;amp; Algorithms #1 --- What Are Data Structures?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/njTh_OwMljA"&gt;Data Structures: Linked Lists&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/oSWTXtMglKE"&gt;Data Structures: Trees&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/t0Cq6tVNRBA"&gt;Data Structures: Heaps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/shs0KM3wKv8"&gt;Data Structures: Hash Tables&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/wjI1WNcIntg"&gt;Data Structures: Stacks and Queues&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/DuDz6B4cqVc"&gt;Data Structures: Crash Course Computer Science #14&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=zIjfhVPRZCg"&gt;Data Structures: Tries&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#algorithms"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Algorithms&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=p65AHm9MX80"&gt;Python Algorithms for Interviews&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.youtube.com/watch?v=zaBhtODEL0w&amp;amp;list=PLX6IKgS15Ue02WDPRCmYKuZicQHit9kFt"&gt;Algorithms: Graph Search, DFS, and BFS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/P3YID7liBug"&gt;Algorithms: Binary Search&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/KEEKn7Me-ms"&gt;Algorithms: Recursion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/6Gv8vg0kcHc"&gt;Algorithms: Bubble Sort&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/KF2j-9iSf4Q"&gt;Algorithms: Merge Sort&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://youtu.be/SLauY6PpjW4"&gt;Algorithms: Quicksort&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#big-o%C2%A0notation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Big O notation&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=D6xkbGLQesk"&gt;Introduction to Big O Notation and Time Complexity (Data Structures &amp;amp; Algorithms #7)&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#some-interview-walkthroughs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Some interview walk-throughs&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5o-kdjv7FD0"&gt;Amazon Coding Interview Question --- Recursive Staircase Problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7HgsS8bRvjo"&gt;Google Coding Interview --- Universal Value Tree Problem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=GJdiM-muYqc"&gt;Google Coding Interview Question and Answer #1: First Recurring Character&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#postvideo-problems"&gt;
  &lt;/a&gt;
  Post-video problems
&lt;/h4&gt;

&lt;p&gt;Once you have finished the videos above, consider trying the algorithm and data structure problems below. Make sure you keep track of how comfortable you felt when working on the problems.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/bigger-is-greater/problem"&gt;Bigger is greater&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/zigzag-conversion/"&gt;6. Zigzag conversion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/reverse-integer/"&gt;7. Reverse integer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/combination-sum-ii/"&gt;40. Combination sum II&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/multiply-strings/"&gt;43. Multiply strings&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/larrys-array/problem"&gt;Larry's array&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.hackerrank.com/challenges/short-palindrome/problem"&gt;Short palindrome&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://leetcode.com/problems/valid-number/"&gt;65. Valid number&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you still feel like you need help, then consider taking a &lt;a href="https://www.udemy.com/course/coding-interview-bootcamp-algorithms-and-data-structure/"&gt;course on algorithms and data structures&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#big-data-frameworks"&gt;
  &lt;/a&gt;
  Big Data Frameworks
&lt;/h3&gt;

&lt;p&gt;Back in 2020, I made a video about practicing for a data engineering interview. Funny thing was, a person commented about the video and pointed back to my original data engineering study guide. Just by happenstance!&lt;/p&gt;

&lt;p&gt;Small world.&lt;/p&gt;

&lt;p&gt;They also added another section. In this case, they added &lt;a href="https://en.wikipedia.org/wiki/Apache_Spark"&gt;Spark&lt;/a&gt;. So for those of you out there needing to study for Spark, here is what Paul Russel added to the checklist. What would you add?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.toptal.com/spark/introduction-to-apache-spark"&gt;Architecture Overview &amp;amp; Use Cases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sparkbyexamples.com/spark/"&gt;Spark by Examples (tutorial documentation)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/PySpark_SQL_Cheat_Sheet_Python.pdf"&gt;PySpark Syntax Cheat Sheet&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We do hope this list will help you prepare for your next data engineering interview. Please let us know if you have any questions or need any future help.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>career</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>From Rails scaffold listing to Hotwire infinite scroll</title>
      <author>Andrzej Krzywda</author>
      <pubDate>Thu, 22 Apr 2021 19:06:01 +0000</pubDate>
      <link>https://dev.to/andrzejkrzywda/from-rails-scaffold-listing-to-hotwire-infinite-scroll-3273</link>
      <guid>https://dev.to/andrzejkrzywda/from-rails-scaffold-listing-to-hotwire-infinite-scroll-3273</guid>
      <description>&lt;p&gt;Rails scaffold is a technique for quickly generating a typical CRUD UI. &lt;/p&gt;

&lt;p&gt;It's a server-side rendered html which allows listing/editing/creating/deleting records.&lt;/p&gt;

&lt;p&gt;One of the promises of the modern approach to building UI (like hotwire or stimulus reflex) is how easy it is to just tweak the backend logic, without using JavaScript at all.&lt;/p&gt;

&lt;p&gt;Let's look at the example of infinite scroll - full tutorial how to do it is &lt;a href="https://lewisyoul.github.io/infinitely-scrolling-lists-with-hotwire-and-zero-javascript"&gt;here&lt;/a&gt; and &lt;a href="https://dev.to/stevepolitodesign/create-an-infinite-scrolling-blog-roll-in-rails-with-hotwire-2a8n"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I just want to focus on the "diff" how to make it work.&lt;/p&gt;

&lt;p&gt;This is a typical Rails scaffold preparing all the posts to be displayed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the equivalent Rails view (rendering html).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, in order to use Hotwire (actually Turbo Frame) we change the controller to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:page&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:page&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@page&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="no"&gt;PER_PAGE&lt;/span&gt;
    &lt;span class="vi"&gt;@posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PER_PAGE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@next_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;size&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;PER_PAGE&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In short, we pass 3 parameters to the view: page, posts, next_page.&lt;/p&gt;

&lt;p&gt;And the view changes to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;turbo_frame_tag&lt;/span&gt; &lt;span class="s2"&gt;"posts_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;

  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@next_page&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;turbo_frame_tag&lt;/span&gt; &lt;span class="s2"&gt;"posts_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@next_page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;loading: :lazy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;src: &lt;/span&gt;&lt;span class="n"&gt;posts_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="vi"&gt;@next_page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We wrap the whole thing with a &lt;code&gt;turbo_frame_tag&lt;/code&gt; and we append more such frames for next pages. That's it.&lt;/p&gt;

&lt;p&gt;As you can see the middle of the view stayed the same. &lt;/p&gt;

&lt;p&gt;The UI now lists posts and keeps appending them when we scroll down.&lt;/p&gt;

&lt;p&gt;I'm not claiming that it's amazing or something. But the practicality of getting our app more interactive, while not jumping to JavaScript is simple yet powerful.&lt;/p&gt;

&lt;p&gt;I like it as it allows me to gradually extend my app with new features. &lt;/p&gt;

&lt;p&gt;If you like audio to educate yourself then I recommend this podcast to learn more how it works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codewithjason.com/rails-with-jason-podcast/episodes/092-vladimir-dementyev-5fK__ZQf/"&gt;https://www.codewithjason.com/rails-with-jason-podcast/episodes/092-vladimir-dementyev-5fK__ZQf/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>5days5blogposts</category>
      <category>rails</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Environmental Impact of Digital Currency, a Problematic Spotify Patent, &amp; more on DevNews</title>
      <author>Josh Puetz</author>
      <pubDate>Thu, 22 Apr 2021 18:44:00 +0000</pubDate>
      <link>https://dev.to/devteam/u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-more-on-devnews-5dab</link>
      <guid>https://dev.to/devteam/u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-more-on-devnews-5dab</guid>
      <description>&lt;p&gt;Happy &lt;a href="https://dev.to/devteam/building-a-healthier-planet-with-open-source-software-25jn"&gt;Earth Day&lt;/a&gt; from all of us at DEV! In this week's episode of the DevNews podcast, &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 and I covered a story that is particularly relevant today...&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S4:E2 - U.K. Central Bank Digital Currency, the Environmental Impact of Digital Currency, a Problematic Spotify Patent, and WordPress’ Google FLoC Block&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block"&gt;
      &lt;img id="episode-profile-image" alt="S4:E2 - U.K. Central Bank Digital Currency, the Environmental Impact of Digital Currency, a Problematic Spotify Patent, and WordPress’ Google FLoC Block" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;... &lt;strong&gt;The environmental impact of digital currency.&lt;/strong&gt; For this story, we spoke with &lt;a href="//twitter.com/ofnumbers"&gt;Tim Swanson&lt;/a&gt; (Founder and Director of Research at Post Oak Labs, Head of Market Intelligence at ClearMatics, and the author of the research paper, “Bitcoin &amp;amp; Other PoW* Coins Are An ESG** Nightmare”).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#saron-and-i-also-chatted-about-the-following-things"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Saron and I also chatted about the following things...&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;WordPress blocking Google’s Federated Learning of Cohorts tracking technology&lt;/li&gt;
&lt;li&gt;The Bank of England and HM Treasury creating a joint task force to explore the possibility of creating a central bank digital currency in the U.K&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://twitter.com/@Isedua"&gt;Isedua Oribhabor’s&lt;/a&gt; letter to Spotify on why the company should abandon their recent speech-recognition patent of a technology to detect emotion, gender, and age. Oribhador is a U.S. Policy Analyst at Access Now — and they joined us for this episode, too! &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;*POW = proof of work&lt;/em&gt;&lt;br&gt;
&lt;em&gt;**ESG = environmental, social, and governance&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope you enjoy this episode! You should feel good about the fact that you saved some trees by listening to DevNews instead of buying the paper 😉 Enjoy the rest of your Earth Day!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s4-e2-u-k-central-bank-digital-currency-environmental/id1525581923?i=1000518214472"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/39enVKOeI7jEfXJR1Yf8xW"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzI2?hl=en&amp;amp;ved=2ahUKEwiZidmLwJLwAhXL3J4KHf9XCJkQjrkEegQIBBAI&amp;amp;ep=6"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s4-e2-u-k-central-bank-digital-currency-the-environmental-impact-of-digital-currency-a-problematic-spotify-patent-and-wordpress-google-floc-block-83380738"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=162514769"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.dev/podcasts/devnews/episodes/158"&gt;Transcript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season four sponsors, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; and &lt;a href="https://rudderstack.com/"&gt;Rudderstack&lt;/a&gt; ❤️ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/sA1r7HKuUX20g/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/sA1r7HKuUX20g/giphy.gif" alt="Happy Earth Day"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>What's New in Codesphere Version 1.8.0</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 22 Apr 2021 18:40:56 +0000</pubDate>
      <link>https://dev.to/codesphere/what-s-new-in-codesphere-version-1-8-0-4hdp</link>
      <guid>https://dev.to/codesphere/what-s-new-in-codesphere-version-1-8-0-4hdp</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The latest Codesphere updates!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's New?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Added Python support&lt;/li&gt;
&lt;li&gt;Ability to create an app from a GitHub URL&lt;/li&gt;
&lt;li&gt;Added FAQ page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting today, Codesphere &lt;strong&gt;supports Python&lt;/strong&gt; and allows users to create an app directly from a GitHub URL**. The feature works in the following way: navigate to &lt;a href="https://codesphere.com/"&gt;codeshere.com&lt;/a&gt; and append a &lt;code&gt;#&lt;/code&gt;, followed by a GitHub URL of any public repository. This will create an app by cloning the repository. The final URL will look something like this: &lt;a href="http://codesphere.com/#https://github.com/"&gt;http://codesphere.com/#https://github.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now also find a brand new &lt;strong&gt;&lt;a href="https://codesphere.com/faq"&gt;FAQ page&lt;/a&gt;&lt;/strong&gt; on our website with answers to any questions you may have.&lt;/p&gt;

&lt;p&gt;In addition, our team is working on allowing users to connect their own domains to your Codesphere apps, which you can expect in the coming week along with a tutorial video on our &lt;a href="https://www.youtube.com/channel/UCct2nMF-TNjVFz5-hDnln7w/videos"&gt;YouTube channel&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We are working hard to make Codesphere even more enjoyable to use. Stay tuned for future releases!&lt;/p&gt;

&lt;p&gt;As always, thanks for using Codesphere.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>changelog</category>
      <category>webdev</category>
      <category>cloud</category>
      <category>programming</category>
    </item>
    <item>
      <title>Of Chickens and Pigs - The Dilemma of Creator Self Promotion</title>
      <author>Ryan Carniato</author>
      <pubDate>Thu, 22 Apr 2021 18:18:01 +0000</pubDate>
      <link>https://dev.to/this-is-learning/of-chickens-and-pigs-the-dilemma-of-creator-self-promotion-51ea</link>
      <guid>https://dev.to/this-is-learning/of-chickens-and-pigs-the-dilemma-of-creator-self-promotion-51ea</guid>
      <description>&lt;p&gt;Have you ever created a new library? You saw a gap when creating a project at work. So you worked on it for months, and are pretty excited about the result. You think it is at a pretty good place and you go and share it. You put something up on github but no one is really checking it out.&lt;/p&gt;

&lt;p&gt;So you go out of your comfort zone and you write an article. But where to post it? You look at the usual channel's you consume information like Twitter, Facebook, Medium, Reddit, Hackernews, and dev.to.&lt;/p&gt;

&lt;p&gt;You give the article one last edit and then you go and submit everywhere you can. And...&lt;/p&gt;

&lt;p&gt;Silence.&lt;/p&gt;

&lt;p&gt;I mean this is what happens most of the time when you first put yourself out there. But the other times something else happens. You see the notifications and people are talking about your project. You excitedly open up the pages, and...&lt;/p&gt;

&lt;p&gt;Nope. They are talking about WASM. Why WASM? Who knows? Someone decided to mention how Rust is just better than another JS library. And Vanilla JS guy is there and ready to tell anyone that libraries are unnecessary.&lt;/p&gt;

&lt;p&gt;Someone else who admits they didn't read the article decides to point out that you could have just not written the library and do something else. You go to explain how you looked at those other solutions and even explain it in the article, but they are long gone by the time you reply.&lt;/p&gt;

&lt;p&gt;If you are lucky a couple people actually opened up the README.md on your Github repo and pointed out your logo sucks and they might even stick around to give you other advice too.&lt;/p&gt;

&lt;p&gt;For better or worse this is probably what is going to happen to you. I could say its a good learning experience. But it really isn't. It's just your first taste of what is to come.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creation"&gt;
  &lt;/a&gt;
  Creation
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--deslKC07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0fa1ybeqiv1z3a9x50c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--deslKC07--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0fa1ybeqiv1z3a9x50c.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyone who creates something and tries to share it to the wider world is going to hit this at some point. As some of you know I was in a punk rock band for years. At risk of revealing my age, because I'm probably older than you might expect, I got my start in post-Green Day success punk scene.&lt;/p&gt;

&lt;p&gt;I played my first show at 14 years old and we were playing pop punk in an era when those in the know were trying to go back underground. At my first show some people in the audience thought it would funny to throw stuff at us. I got hit in the forehead with a bottle by a particularly "funny" guy.&lt;/p&gt;

&lt;p&gt;Was this the fault of our new guitarist who put on the show, and probably booked the wrong lineup? Should we have been the opener instead of the second in the lineup? Probably. It showed a disrespect to the established order. Did I have any idea of this? Of course not as I was stoked to have this slightly older guitarist join our group and to play our first show.&lt;/p&gt;

&lt;p&gt;Thankfully this never happened again. Not to say there weren't some trolls in the crowds over the years, but I went on to play about 500 more shows with that band. It served as an early indicator that there is more to creating something than the creation itself.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pigs-and-chickens"&gt;
  &lt;/a&gt;
  Pigs and Chickens
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3emGdJFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tvlkkot082km0thduhv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3emGdJFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tvlkkot082km0thduhv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was several years later I came across this analogy when learning about Agile principles. The idea spawns from this fable-like story where a Chicken suggests to a Pig that they should start a business together. He suggested "Eggs &amp;amp; Ham". And the Pig responds that this wasn't an equal arrangement. Where the "Eggs" provide immense value the Pig would be committed, as he &lt;em&gt;is&lt;/em&gt; the "Ham".&lt;/p&gt;

&lt;p&gt;We use this analogy often to describe different sorts of roles in Agile practices, so it is clear where ownership lies. To illustrate clearly what each stakeholder has at stake. There are always Chickens and Pigs. And that can even differ within different domains in the same organization although I am not sure mixing roles is actually a good thing.&lt;/p&gt;

&lt;p&gt;Once you are invested in something, once you are committed, you now have an undeniable bias.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creators-and-critics"&gt;
  &lt;/a&gt;
  Creators and Critics
&lt;/h1&gt;

&lt;p&gt;I am no stranger to critics. You play music and before long you come across them. And they don't have to be writing for the New York Times, it could be the local hot 'Zine or blog site.&lt;/p&gt;

&lt;p&gt;Now everyone is selling an angle so you can't take anything as truly unbiased, but I have always been wary of critics who are pushing a very obvious agenda. Pigs can't be unbiased so while if they are good at their art can provide insight, they are incapable of being neutral. Chickens can be the perfect critics because they aren't committed.&lt;/p&gt;

&lt;p&gt;A master chef has impeccable skills and understanding of cuisine could be a great critic of food, but you'd always know where they stand. The best food critiques bring their own perspective to provide an authentic perspective. But what happens when the critic decide to open up their own restaurants?&lt;/p&gt;

&lt;p&gt;Well maybe nothing because maybe they can maintain still being Chicken's so to speak. But it definitely muddies the waters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creators-and-metacreators"&gt;
  &lt;/a&gt;
  Creators and Meta-Creators
&lt;/h1&gt;

&lt;p&gt;I was watching this video from Maksim Ivanov with &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;
 on this idea of content creation. It spoke about combating the urge to do low-brow content to get a few more likes.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sL_uefhT51g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A super interesting topic because Meta Creation is something I've never understood that well. If you aren't familiar with the term, it is the idea of creating content to help others succeed rather than being responsible for creating the original thing that is being promoted. "10 ways to save time each week", "Be successful with these 3 steps", etc.. although it isn't limited to this sort of content.&lt;/p&gt;

&lt;p&gt;Occasionally I write articles and then people paraphrase the high-level ideas and republish them as their own. I've never thought very much of it either way.&lt;/p&gt;

&lt;p&gt;That is just is what it is. But generally, I am a Pig. I look for projects where I can be committed. The thing I am creating is what I am contributing. But we aren't all good at everything. It was mentioned that some maintainers have difficulties writing beginner tutorials (I feel I am the same). &lt;/p&gt;

&lt;p&gt;Meta Creators have the ability to provide incredible value in terms of propagating ideas and making things more accessible to all. It is recommended, that it should be done with care and consideration though, otherwise you cheapen your brand.&lt;/p&gt;

&lt;p&gt;Creators have to be held to a different standard. They are not playing the same game if you can call it a game at all. &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;
 suggests that Meta Creators should aim to not be trapped by this sort of &lt;a href="https://dev.to/swyx/the-meta-creator-ceiling-203h"&gt;glass ceiling&lt;/a&gt; they set up for themselves and move into opportunities where they can contribute.&lt;/p&gt;

&lt;p&gt;But if you are starting from the Creator side you need a different set of guidelines to follow. You are already contributing. You will naturally attract peers and collaborate on projects.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#self-promotion-as-a-creator"&gt;
  &lt;/a&gt;
  Self Promotion as a Creator
&lt;/h1&gt;

&lt;p&gt;If you watched that video towards the end around the &lt;a href="https://www.youtube.com/watch?v=sL_uefhT51g&amp;amp;t=2433s"&gt;40-minute mark&lt;/a&gt; I was used as an example on the topic of self-promotion. Particularly this idea around finding balance with "give give give, take".&lt;/p&gt;

&lt;p&gt;Now I don't think it was meant to be anything other than constructive but I'm not sure it gives any real path forward. What I mean by that is, if what you are giving is the thing that the other party might be predisposed to not accept, how do they gauge the degree to which you give. It potentially undercuts the value you bring before you even get started.&lt;/p&gt;

&lt;p&gt;If the biggest value you give is bringing new information, technology, and methods is it better not to bring this into conversations? This is a tricky balance to maintain. I am very conscious of this and go out of my way not to directly plug my libraries or articles on Twitter replies until asked to elaborate on what I mean.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4HDhbrYu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1360993403589304320/-EdVxM2t_normal.jpg" alt="𝚐𝚎𝚘𝚛𝚐𝚎𝚜 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        𝚐𝚎𝚘𝚛𝚐𝚎𝚜
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/georges_gomes"&gt;@georges_gomes&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/RyanCarniato"&gt;@RyanCarniato&lt;/a&gt; &lt;a href="https://twitter.com/svelte"&gt;@svelte&lt;/a&gt; I know you hate self promotion but you should share the link to your SSR article here 👍
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:20 AM - 10 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1380812939440095232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1380812939440095232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1380812939440095232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;To be clear I don't hate self-promotion. But I've always struggled with doing it in good conscience. My bandmates made fun of me for weeks when I made a poster for a show we knew was going to be full capacity and sold out, and I wrote "Come early, this show &lt;em&gt;may&lt;/em&gt; sell out." They could not understand why I said &lt;em&gt;may&lt;/em&gt; instead of &lt;em&gt;will&lt;/em&gt; and made sure to tell me all the things they &lt;em&gt;may&lt;/em&gt; do for the next couple of weeks. They weren't wrong. We had a lineup down the street and we hit capacity before the openers even started playing. &lt;/p&gt;

&lt;p&gt;And yet the perspective does exist.&lt;/p&gt;

&lt;p&gt;I had a similar issue with Hacker News publishing my articles. When I actually talked to their support and called out the articles they blocked specifically they acknowledged they were mistaken about it being shallow marketing material or overly self-promoting, and offered to assist me in re-publishing the bulk of my work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-and-creating-in-public"&gt;
  &lt;/a&gt;
  Learning (and Creating) in Public
&lt;/h1&gt;

&lt;p&gt;To me, it is about process more than promotion. Who says learning in public has to be for beginners? We are always learning. Always improving our knowledge and in that process, we can help others.&lt;/p&gt;

&lt;p&gt;If someone sat down and read my articles from start to end, they would chronicle the journey of someone creating JavaScript Frameworks. Right from the first article, &lt;a href="https://medium.com/@ryansolid/b-y-o-f-part-1-writing-a-js-framework-in-2018-b02a41026929"&gt;B.Y.O.F. — Part 1: Writing a JS Framework in 2018&lt;/a&gt;. I was sure there was a "use the platform" universal solution for all and I was intent to share those findings as I went along.&lt;/p&gt;

&lt;p&gt;Obviously, things have been learned along the way, but the reader has been with me every step of it. Now they are contributing and I owe a lot of Solid's success to date from the work of others. From how they pushed innovation in Solid's early days, to creating projects like the &lt;a href="https://playground.solidjs.com/"&gt;REPL&lt;/a&gt; or discovered the &lt;a href="https://levelup.gitconnected.com/how-we-wrote-the-fastest-javascript-ui-framework-again-db097ddd99b6"&gt;critical escape algorithm&lt;/a&gt; to push SSR performance over the top.&lt;/p&gt;

&lt;p&gt;So more than anything that is why I want to address this line of thought, because it undermines their commitment and contributions. And if I'm somehow responsible for that, it is just unacceptable. Even more so if it negatively impacted the great work being done on &lt;a href="https://markojs.com/"&gt;Marko&lt;/a&gt; and that community as well.&lt;/p&gt;

&lt;p&gt;I stopped at some point and asked myself, "What am I doing differently than other creators?" I concluded I wasn't doing much differently. The only difference was they already had an established audience. I was coming in as a relative newcomer and laying down disruptive (even if well-founded ideas) that honestly many people don't want to hear.&lt;/p&gt;

&lt;p&gt;If I had maintained a popular React library for the same amount of time it would have been different. It's easier for someone to dismiss an idea as self-promotion than acknowledge that it could change their thinking. And let's face it. They don't owe you anything. Nada. In that sense, that Reddit/Hackernews comments section follows you no matter where we go. &lt;/p&gt;

&lt;p&gt;Instead, it takes time and it is all about making those relationships. The exact thing Shawn(&lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;
) was promoting in the video. This was cemented for me when &lt;a class="mentioned-user" href="https://dev.to/richharris"&gt;@richharris&lt;/a&gt;
 (creator of Svelte) helped me a while back get unblocked by another creator, and he told me (paraphrasing):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's harder to block someone you know in person. If it weren't for that I suspect I would have blocked many times over.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An obvious point when you consider how on a platform like Twitter you are just another person behind a screen. But it was the lack of relationship in the first place that brought the situation about, and only through the connections made that it was resolved in the end.&lt;/p&gt;

&lt;p&gt;So I don't have the answers here. I'm still figuring this out. My only advice is never to let the technology override the people involved. There are many people and projects that I work with and am involved in from the communities around Reactivity, and Benchmarking, people making great tools that integrate with frameworks like &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; or &lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt;, to cool new products like &lt;a href="https://github.com/BuilderIO/jsx-lite"&gt;JSX-Lite&lt;/a&gt;. And that makes these things ultimately fulfilling, and with a little luck successful.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devjournal</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Install node using NVM in under 3 mins</title>
      <author>Naseel Niyas</author>
      <pubDate>Thu, 22 Apr 2021 18:12:39 +0000</pubDate>
      <link>https://dev.to/naseelniyas/install-node-using-nvm-in-under-3-mins-2djk</link>
      <guid>https://dev.to/naseelniyas/install-node-using-nvm-in-under-3-mins-2djk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hey-there%E2%80%8D"&gt;
  &lt;/a&gt;
  Hey There!🙋‍
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#this-article-is-about-installing-node-on-a-unixlinux-based-system-we-are-using-nvm-to-do-this"&gt;
  &lt;/a&gt;
  This article is about installing Node on a Unix/Linux based system. We are using NVM to do this
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#you-can-also-follow-this-video-by-medont-forget-to-subscribe"&gt;
  &lt;/a&gt;
  You can also follow this video by me....(Don't forget to subscribe!)
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XMNeu6Oggd8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#this-guide-can-be-followed-on-gt-1-linux-based-distributions-like-ubuntu-debian-red-hat-fedora-gt-2-unix-distros-macos-etc"&gt;
  &lt;/a&gt;
  This guide can be followed on: &amp;gt; 1) Linux based distributions like Ubuntu, Debian, Red Hat, Fedora &amp;gt; 2) Unix distros MacOS ... etc.
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#visit-httpsgithubcomnvmshnvm-to-visit-nvms-github-repository-nvm-github"&gt;
  &lt;/a&gt;
  Visit &lt;a href="https://github.com/nvm-sh/nvm"&gt;https://github.com/nvm-sh/nvm&lt;/a&gt; to visit nvm's github repository &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vZkHaJtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fyBVZK50/Screenshot-from-2021-04-21-19-48-22.png" alt="Image"&gt; "Nvm github"
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#now-we-can-scroll-down-untill-we-find-a-list-of-commands"&gt;
  &lt;/a&gt;
  Now we can scroll down untill we find a list of commands &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ryDrtBRm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/j529Zqm0/Screenshot-from-2021-04-21-19-51-50.png" alt="Installation commands"&gt;
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#now-we-just-have-to-run-these-commands"&gt;
  &lt;/a&gt;
  Now, we just have to run these commands.
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#command-1-use-curlwget-to-run-the-installupdate-script"&gt;
  &lt;/a&gt;
  Command 1: Use curl/Wget to run the Install/Update script.
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#using-curl"&gt;
  &lt;/a&gt;
  Using Curl:
&lt;/h6&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#using-wget"&gt;
  &lt;/a&gt;
  Using Wget:
&lt;/h6&gt;



&lt;p&gt;&lt;code&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#we-have-to-export-some-env-enviornment-variables-run-these-2-commands"&gt;
  &lt;/a&gt;
  We have to export some ENV (Enviornment variables)... Run these 2 commands
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] &amp;amp;&amp;amp; printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;sh [ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh" # This loads nvm&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#use-nvm-to-install-node"&gt;
  &lt;/a&gt;
  Use NVM to install Node!
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#now-we-have-successfully-installed-nvm-time-to-use-it"&gt;
  &lt;/a&gt;
  Now we have successfully installed NVM. Time to use It.
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#to-install-the-latest-lts-version-of-node-run"&gt;
  &lt;/a&gt;
  To install the latest LTS version of node, run:
&lt;/h5&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;nvm install --lts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#to-install-latest-version-of-node-run"&gt;
  &lt;/a&gt;
  To install latest version of node, Run:
&lt;/h5&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;nvm install node&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#to-install-a-specific-version-of-node-run"&gt;
  &lt;/a&gt;
  To install a specific version of node, run:
&lt;/h5&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;nvm install 12.0.0 # This istalls node v12.0.0&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#to-use-a-specific-version"&gt;
  &lt;/a&gt;
  To use a specific version:
&lt;/h5&gt;

&lt;p&gt;&lt;br&gt;
 &lt;code&gt;nvm use 12.0.0 # Uses node v12.0.0&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it-now-you-have-node-running-on-your-system"&gt;
  &lt;/a&gt;
  That's It! Now you have node running on your system!
&lt;/h3&gt;




&lt;h6&gt;
  &lt;a href="#encountered-an-error-comment-below"&gt;
  &lt;/a&gt;
  Encountered an error? Comment below!
&lt;/h6&gt;

</description>
      <category>node</category>
      <category>nvm</category>
      <category>linux</category>
      <category>unix</category>
    </item>
    <item>
      <title>Tools to Visualize your Terraform plan</title>
      <author>Vidyasagar Machupalli</author>
      <pubDate>Thu, 22 Apr 2021 17:50:40 +0000</pubDate>
      <link>https://dev.to/vidyasagarmsc/tools-to-visualize-your-terraform-plan-5g3</link>
      <guid>https://dev.to/vidyasagarmsc/tools-to-visualize-your-terraform-plan-5g3</guid>
      <description>&lt;p&gt;It all started with this &lt;a href="https://github.com/VidyasagarMSC/vpc-private-k8s-public-lb"&gt;code sample with Terraform scripts&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;For starters,&lt;a href="https://www.terraform.io"&gt;Terraform&lt;/a&gt; is open-source software, developed by HashiCorp, that enables predictable and consistent provisioning of IBM Cloud platform, classic infrastructure, and VPC infrastructure resources by using a high-level scripting language. You can use Terraform to automate your IBM Cloud resource provisioning, rapidly build complex, multi-tier cloud environments, and enable Infrastructure as Code (IaC).&lt;/p&gt;

&lt;p&gt;Think of a scenario in which you are revisiting your own Terraform scripts and scratching your head to understand what resources it provisions. &lt;/p&gt;

&lt;p&gt;To simplify this, there is an in-built Terraform command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;terraform graph
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://www.terraform.io/docs/cli/commands/graph.html"&gt;terraform graph&lt;/a&gt; command is used to generate a visual representation of either a configuration or execution plan. The output is in the DOT format, which can be used by &lt;a href="http://www.graphviz.org/"&gt;GraphViz&lt;/a&gt; to generate charts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can use the command to generate a &lt;code&gt;.png&lt;/code&gt; file from the dot output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;terraform graph &lt;span class="nt"&gt;-type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;plan | dot &lt;span class="nt"&gt;-Tpng&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; graph.png
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;terraform graph &lt;span class="nt"&gt;-type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;plan | dot &lt;span class="nt"&gt;-Tpng&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; graph.png
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there are too many resources, then the graph will look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KFMia5IZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pl37b9lh0un2qqsgi18v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KFMia5IZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pl37b9lh0un2qqsgi18v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, readability is a challenge and also there are extra nodes in the graph that are not required. So, you need better tools to visualize your Terraform plan. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blast-radius"&gt;
  &lt;/a&gt;
  Blast radius
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://28mm.github.io/blast-radius-docs/"&gt;Blast Radius&lt;/a&gt; is a tool for reasoning about Terraform dependency graphs through interactive visualizations. Awesome tool but couldn't make it work with the newer versions of Terraform. As per the Dockerfile in the respective repository and the comments in the issues, the last Terraform version that worked fine was &lt;code&gt;0.12.x&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#terraform-visual"&gt;
  &lt;/a&gt;
  Terraform Visual
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://hieven.github.io/terraform-visual/"&gt;Terraform Visual&lt;/a&gt; is a simple but powerful tool to help you understand your Terraform plan easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--02o0E6oY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckzzu5s6deg5e0cjtzb3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--02o0E6oY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckzzu5s6deg5e0cjtzb3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/VidyasagarMSC/vpc-private-k8s-public-lb/blob/master/diagrams/terraform_visual.png"&gt;Click here&lt;/a&gt; to see the large image&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLLGF6bO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/hieven/terraform-visual/master/docs/demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLLGF6bO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/hieven/terraform-visual/master/docs/demo.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Needs additional steps like generating &lt;code&gt;plan.dot&lt;/code&gt; file and then &lt;code&gt;plan.json&lt;/code&gt; file. but, a pretty good tool for any version of Terraform.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#inframap"&gt;
  &lt;/a&gt;
  Inframap
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/cycloidio/inframap"&gt;Inframap&lt;/a&gt; reads your &lt;code&gt;tfstate&lt;/code&gt; or HCL to generate a graph specific for each provider, showing only the resources that are most important/relevant.&lt;/p&gt;

&lt;p&gt;If you know any other visualization tools, please drop in a comment below and would love to give it a try 😄&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>visualize</category>
      <category>tooling</category>
      <category>shortposts</category>
    </item>
    <item>
      <title>Getting Hooked on Stoxy</title>
      <author>Matsuuu</author>
      <pubDate>Thu, 22 Apr 2021 17:48:36 +0000</pubDate>
      <link>https://dev.to/matsuuu/getting-hooked-on-stoxy-1fh4</link>
      <guid>https://dev.to/matsuuu/getting-hooked-on-stoxy-1fh4</guid>
      <description>&lt;p&gt;Stoxy is a modern state management library built around creating reactive, stateful and persistent web experiences.&lt;/p&gt;

&lt;p&gt;Stoxy allows you to easily control the global state of your application, and tap into said state when needed.&lt;/p&gt;

&lt;p&gt;The newest addition to Stoxy is a new add-on library: &lt;strong&gt;Stoxy Hooks&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Stoxy Hooks are a easy way to integrate Stoxy to any &lt;strong&gt;React&lt;/strong&gt; or &lt;strong&gt;Preact&lt;/strong&gt; application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;Here I'll show a few simple examples of Stoxy Hooks in action&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-simple-clicker"&gt;
  &lt;/a&gt;
  A Simple Clicker
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@stoxy/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Clicker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo.counter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pushed &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; times&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#a-todo-list"&gt;
  &lt;/a&gt;
  A Todo List
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@stoxy/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;preact&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;preact/hooks&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TodoList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;preact&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;todo-list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;init&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;persist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@stoxy/hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;AddToList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStoxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;todo-list&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;taskName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;task&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;created&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;taskName&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input[name='task']&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;inputField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;addItem&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"task"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Add"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get Started
&lt;/h3&gt;

&lt;p&gt;You can easily get started using Stoxy hooks with just one quick install:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @stoxy/hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you're all set!&lt;/p&gt;

&lt;p&gt;The whole Stoxy ecosystem is extremely lightweight, in package size and when writing code.&lt;/p&gt;

&lt;p&gt;Read more about the subject on the &lt;a href="https://stoxy.dev/"&gt;Stoxy Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like how Stoxy makes managing state simple, &lt;a href="https://github.com/stoxy-js/stoxy/stargazers"&gt;Join the almost 50 Stargazers on GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>preact</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to share environment variables in Linux across Bash, Python, .NET and more. </title>
      <author>Michael Crump</author>
      <pubDate>Thu, 22 Apr 2021 17:37:43 +0000</pubDate>
      <link>https://dev.to/mbcrump/how-to-share-environment-variables-in-linux-across-bash-python-net-and-more-39k</link>
      <guid>https://dev.to/mbcrump/how-to-share-environment-variables-in-linux-across-bash-python-net-and-more-39k</guid>
      <description>&lt;p&gt;Hello everyone, &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;export&lt;/code&gt; command in Linux is used to set Environment variables, but you may not be aware that you can use the variables in other programming languages to prevent secrets from leaking in GitHub commits, etc.&lt;/p&gt;

&lt;p&gt;Take the following example:&lt;/p&gt;

&lt;p&gt;You've set an environment variable such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;EMAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;youremail@domain.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On your terminal prompt, you can check to ensure this variable works by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$EMAIL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also take that same environment variable and make it accessible in Python with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'HOME'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;on the flip side, you can do the same thing with .NET&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetEnvironmentVariable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMAIL"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty neat, huh?&lt;/p&gt;

&lt;p&gt;You can also checkout the video that I made showing this off in action before trying it on your own:&lt;/p&gt;

&lt;p&gt;Video (5 mins)&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uvFMzqRIuSA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;Feel free to checkout my &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch streams&lt;/a&gt; as we learn about security and app development or you can watch the condensed version of all of my streams by subscribing to my &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Stay connected with me on social platforms for daily software development news.&lt;/p&gt;

&lt;p&gt;-&lt;a href="https://twitter.com/intent/follow?screen_name=mbcrump"&gt;Twitter&lt;/a&gt; | &lt;a href="https://twitch.tv/mbcrump"&gt;Twitch&lt;/a&gt; | &lt;a href="https://instagram.com/mbcrump"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/mbcrump"&gt;YouTube&lt;/a&gt; | &lt;a href="https://github.com/mbcrump"&gt;GitHub&lt;/a&gt; | &lt;a href="https://www.michaelcrump.net"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>productivity</category>
      <category>opensource</category>
      <category>python</category>
    </item>
    <item>
      <title>State machines for the rescue</title>
      <author>Perfect7M</author>
      <pubDate>Thu, 22 Apr 2021 17:35:32 +0000</pubDate>
      <link>https://dev.to/perfect7m/state-machines-for-the-rescue-d83</link>
      <guid>https://dev.to/perfect7m/state-machines-for-the-rescue-d83</guid>
      <description>&lt;p&gt;Most of the features we are creating in our applications can be described in finite state machines. When we think about web applications we are thinking about the state in which our application is. Then we have ways we can go and modify the state of the application.&lt;/p&gt;

&lt;p&gt;The login page is a great example. When you enter valid credentials, you were transitioned from the “&lt;em&gt;not logged in”&lt;/em&gt; state into the “&lt;em&gt;logged in&lt;/em&gt;”. Let’s see how knowledge about that can help us create more predictable and less error-prone applications.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-exactly-are-finite-state-machines"&gt;
  &lt;/a&gt;
  What exactly are finite state machines?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VvX-N2rr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxs4cqmhdttk7c0ucztv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvX-N2rr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxs4cqmhdttk7c0ucztv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Definition of this you can read on &lt;a href="https://en.wikipedia.org/wiki/Finite-state_machine"&gt;Wikipedia page&lt;/a&gt;. There you can find more information about how they are defined and what they really are. But to make a long story short. Your application has a current state. You can transition to other states that are available in the current state. When transition you preserve metadata why this transition happens, eg. request is &lt;em&gt;rejected&lt;/em&gt; or &lt;em&gt;resolved&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let’s see it in action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W_EqXQPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlc2vm7fxph0dtwgbo0e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W_EqXQPo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlc2vm7fxph0dtwgbo0e.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-xstate"&gt;
  &lt;/a&gt;
  What is XState?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/davidkpiano/xstate"&gt;XState&lt;/a&gt; is a library to create the finite state machine for JavaScript. It can help you describe states and available transitions in your application. It can be used in plain JavaScript but also has first-class support for the most popular frontend frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-xstate"&gt;
  &lt;/a&gt;
  Why XState?
&lt;/h2&gt;

&lt;p&gt;It can help you describe the behavior of your application. You can restrict access to the events in a certain state. It’s easy to use and straightforward.&lt;/p&gt;

&lt;p&gt;When we want to create a toggle, for example when we are showing the user a &lt;em&gt;popover.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createMachine&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xstate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;createMachine&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;popover-toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inactive&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;inactive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;TOGGLE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;TOGGLE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;inactive&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to define at least 3 fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;id&lt;/code&gt; — identifier of the state machine among others, should be unique&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;initial&lt;/code&gt; — initial state which will be your state machine, should be one of the defined states&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;states&lt;/code&gt; — available states in which your machine can be your machine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KkgxPFVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03vx3rq304cos8h28qh4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KkgxPFVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03vx3rq304cos8h28qh4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We must be creating one small piece of application state instead of the whole application component. This state machine works only for popover, not for modals, or others components on your site. Keep it on the same level as a component that is for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;XState can help you with managing requests, keep states of modal, popovers, or other components in your application. Smooth transition to available state and visualizer helps you build better, more predictable, and less error-prone applications. Check more in &lt;a href="https://xstate.js.org/docs/"&gt;XState docs&lt;/a&gt; on how to use finite state machines.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
    </item>
    <item>
      <title>Website Designing Process: A Guide To Design A Perfect Website</title>
      <author>DigitalOwl</author>
      <pubDate>Thu, 22 Apr 2021 17:23:30 +0000</pubDate>
      <link>https://dev.to/digitalowl10/website-designing-process-a-guide-to-design-a-perfect-website-4eln</link>
      <guid>https://dev.to/digitalowl10/website-designing-process-a-guide-to-design-a-perfect-website-4eln</guid>
      <description>&lt;p&gt;Website designing has always been a star in the marketing business. Whether it is a local store or a famous brand, every business right now needs a website to get started and function. When a website project comes, every website designer has a specific strategy ready. For instance, a banner, content, contact details, and social media icons. But remember that a great website should add great value to the client’s business.&lt;/p&gt;

&lt;p&gt;A website that successfully attracts customers and helps them understand the brand, products, and services with the help of navigation, content, and visuals, is termed as a perfect website. To create a great website, you do not need to focus on the aesthetic but need to work on a well-planned strategy. To make it a piece of cake for you, we already have a 7-step website designing strategy ready.&lt;/p&gt;

&lt;p&gt;Identify the goal:&lt;br&gt;
Being the first step of the designing process, you must give it utmost attention and importance. For this, you must get in touch with the clients, and understand their requirements. Ask them questions to understand what they are expecting as the final product. To get a clearer picture, understand the purpose of the site, and how they want to be.&lt;/p&gt;

&lt;p&gt;Identify the scope:&lt;br&gt;
Once you have the goals list in hand, you are ready to identify the scope of the project. For instance, how many web pages do you need to satisfy the goals, what features will be necessary and how long will it take to complete the site.&lt;/p&gt;

&lt;p&gt;Create a sitemap:&lt;br&gt;
Creating a sitemap of your website will help you plan your design process better and make it easy to add different features on the site. It will help you navigate more efficiently, and also; you will get an overall idea of what content needs to be curated.&lt;/p&gt;

&lt;p&gt;Create content:&lt;br&gt;
Now that you have a bigger picture in mind with the help of sitemap and other requirements, you can head towards creating content. Whenever you start with the content, do not forget to consider SEO. Keep your SEO strategy ready and aligned with the content. Also, keep your content real, and plagiarism-free to avoid any future problems.&lt;/p&gt;

&lt;p&gt;Align your visual elements:&lt;br&gt;
With everything in place, you can now proceed with the visual elements. Though the visuals might depend on the client's requirements, you can still add your touch. You can make use of different tools available online to create images, GIFs, videos, and much more.&lt;/p&gt;

&lt;p&gt;Test your product:&lt;br&gt;
Before delivering the product, you must test it yourself first. Put your product to test and view it from the customer’s point of view. Check if it’s working perfectly on all the devices. It will help you identify the user experience issues and broken links in advance.&lt;/p&gt;

&lt;p&gt;Launch:&lt;br&gt;
Once everything is in place and perfectly alright, it is time to launch the site. Before launching, ask your client about the execution time and the communication strategy.&lt;/p&gt;

&lt;p&gt;This 7-step website designing process will help you design the website that will drive your sales and attract customers.&lt;/p&gt;

</description>
      <category>website</category>
      <category>webdesign</category>
    </item>
  </channel>
</rss>
