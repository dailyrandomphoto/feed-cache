<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Lack of Motivation</title>
      <author>Reece Barker</author>
      <pubDate>Fri, 07 Jan 2022 03:07:25 +0000</pubDate>
      <link>https://dev.to/brakys/lack-of-motivation-p59</link>
      <guid>https://dev.to/brakys/lack-of-motivation-p59</guid>
      <description>&lt;p&gt;I don't know about you but I sure lack motivation to work on projects and just get out of bed sometimes, most of us struggle with anxiety, depression and even acute mental disorders, but the one thing that seems to keep us going is a reconnection with the world around us, I want to tell you all a little story of how I found my motivation back.&lt;/p&gt;

&lt;p&gt;And by "little story" I really mean it, I didn't really know it at the time I was just living life as I usually did and then it hit me, the depression and lack of motivation to even get on the computer, being stuck in a cycle of wake up, watch tv, eat and sleep. I found myself stuck in a hole that at the time to be honest I didn't really care if I came out of that hole or not, however, what changed after the months of depression and anxiety to even leave the house, was a trip I took back home, you see I live in Germany, quite far away from my home in England, and this trip back home did something that changed my whole life that I had been living for months and it opened my eyes and I found new and old passions for things I love and hate, I found new and exciting things to do and I managed to change my life for better.&lt;/p&gt;

&lt;p&gt;I know many people out there suffer in even worse conditions maybe even in the same conditions as I did, and my point here is that not everyone is living their lives without anxiety and depression, everyone and I mean EVERYONE, is just as troubled as you.&lt;/p&gt;

</description>
      <category>motivation</category>
      <category>beginners</category>
      <category>help</category>
      <category>productivity</category>
    </item>
    <item>
      <title>20 Awesome Github Repos Every Web Developer Should Know </title>
      <author>Justin</author>
      <pubDate>Fri, 07 Jan 2022 03:01:31 +0000</pubDate>
      <link>https://dev.to/jucode/20-awesome-github-repos-every-web-developer-should-know-244j</link>
      <guid>https://dev.to/jucode/20-awesome-github-repos-every-web-developer-should-know-244j</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference. &lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://codelivly.com/10-awesome-github-repos-every-web-developer-should-know/"&gt;20 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Go Developer Roadmap [Beginners - Advance]</title>
      <author>Justin</author>
      <pubDate>Fri, 07 Jan 2022 02:59:05 +0000</pubDate>
      <link>https://dev.to/jucode/go-developer-roadmap-beginners-advance-5hd2</link>
      <guid>https://dev.to/jucode/go-developer-roadmap-beginners-advance-5hd2</guid>
      <description>&lt;p&gt;GO (also called Golang) is an in-demand programming language, especially for people working with Google products. Go is used by many big companies, like Uber Medium, Dropbox, Salesforce, Netflix, IBM, and Twitter.&lt;/p&gt;

&lt;p&gt;For job seekers of all levels, Go is a fantastic option. But where do you begin? What information do you require? Today, we’ll talk about the ideal way to learn Go and build a strong portfolio.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;What is a Golang developer?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Golang (also called Go) is a &lt;strong&gt;statically typed, compiled programming language&lt;/strong&gt; that was developed by Google in 2009. The language combines the efficiency of C++ efficiency and the readability of Python.&lt;/p&gt;

&lt;p&gt;The Go programming language is used by Golang developers to create websites and apps. Working with Go and its full range of tools and frameworks is part of a Go developer’s job description. Most Go programmers also test and debug their code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.codelivly.com/go-developer-roadmap/" rel="noreferrer noopener"&gt;Go Developer Roadmap [Beginners - Advance]&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>40+ Nodejs Projects for Beginners – Easy Ideas to Get Started [Beginners - Advance] </title>
      <author>Justin</author>
      <pubDate>Fri, 07 Jan 2022 02:52:47 +0000</pubDate>
      <link>https://dev.to/jucode/40-nodejs-projects-for-beginners-easy-ideas-to-get-started-beginners-advance-2mp8</link>
      <guid>https://dev.to/jucode/40-nodejs-projects-for-beginners-easy-ideas-to-get-started-beginners-advance-2mp8</guid>
      <description>&lt;p&gt;If you have decided to build your career in &lt;span&gt;NodeJS &lt;/span&gt;development, we have gathered a list of &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; for all node enthusiasts to build highly scalable &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1" rel="noreferrer noopener"&gt;web applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These best &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it’s highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn &lt;em&gt;git&lt;/em&gt; and show your coding expertise to future employers. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1"&gt;40+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs &lt;/a&gt;&lt;/b&gt; &lt;/p&gt;






</description>
    </item>
    <item>
      <title>15 reasons why you should learn JavaScript right now</title>
      <author>Justin</author>
      <pubDate>Fri, 07 Jan 2022 02:52:02 +0000</pubDate>
      <link>https://dev.to/jucode/15-reasons-why-you-should-learn-javascript-right-now-8kg</link>
      <guid>https://dev.to/jucode/15-reasons-why-you-should-learn-javascript-right-now-8kg</guid>
      <description>&lt;p&gt;There are two reasons why it’s sometimes hard to make a choice; either there are too few options to choose from, or there are too many. When it comes to programming languages, there is an embarrassment of riches, which in turn can cause mental gridlock. There’s Python, Java, JavaScript, C/CPP, PHP, Swift, C#, Ruby, Objective-C, and SQL, and that’s not even the full list! How do you choose?&lt;/p&gt;
&lt;p&gt;Now, bear in mind that as far as programmers go, there’s no such thing as knowing too many languages. A programmer with a grasp of many languages is a programmer who is highly marketable and very much in demand. Upskilling is always a smart way to go. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/15-reasons-why-you-should-learn-javascript-right-now/&amp;amp;ved=2ahUKEwjq3LetlNPzAhWCjeYKHXtzBaUQFnoECAQQBQ&amp;amp;usg=AOvVaw2jcX34baRnSUligpWiA29Q&amp;amp;cshid=1634532657525"&gt;15 reasons why you should learn JavaScript right now&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Laravel 8 Import Export CSV/EXCEL File Example</title>
      <author>Techsolutionstuff</author>
      <pubDate>Fri, 07 Jan 2022 02:34:42 +0000</pubDate>
      <link>https://dev.to/techsolutionstuff/laravel-8-import-export-csvexcel-file-example-2kcg</link>
      <guid>https://dev.to/techsolutionstuff/laravel-8-import-export-csvexcel-file-example-2kcg</guid>
      <description>&lt;p&gt;In this post I will give you laravel 8 import export csv and excel file example. We will simple create import data to xls, csv file and also we will import data to database using csv file in laravel 8 application.&lt;/p&gt;

&lt;p&gt;Using maatwebsiteexcel laravel 8 example you can easily import and export csv and excel file. For laravel 8 import csv/excel file use import class, laravel 8 export csv/excel file use export class.&lt;/p&gt;

&lt;p&gt;Using this example we can easily import and export and download the csv &amp;amp; excel file from the database using the maatwebsite/excel composer package.  &lt;/p&gt;

&lt;p&gt;maatwebsite/excel provide easy way to import and export csv file in laravel 8 using database model.&lt;/p&gt;

&lt;p&gt;So let's start how to import csv and excel file in laravel 8.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Step 1 : Create new project in laravel 8

Step 2 : Database Setup

Step 3 : Install Package

Step 4 : Create Some Dummy Records Using Tinker

Step 5 : Create New Route

Step 6 : Add Controller

Step 7 : Create Import Class

Step 8 : Create Export Class

Step 9 : Create Blade File for View
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://techsolutionstuff.com/post/laravel-8-import-export-csv-excel-file-example"&gt;Read More : Laravel 8 Import Export CSV/EXCEL File Example&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>laravel</category>
      <category>laravel8</category>
      <category>import</category>
      <category>export</category>
    </item>
    <item>
      <title>January 6th, 2022: What did you learn this week?</title>
      <author>Nick Taylor</author>
      <pubDate>Fri, 07 Jan 2022 01:26:22 +0000</pubDate>
      <link>https://dev.to/nickytonline/january-6th-2022-what-did-you-learn-this-week-2dpl</link>
      <guid>https://dev.to/nickytonline/january-6th-2022-what-did-you-learn-this-week-2dpl</guid>
      <description>&lt;p&gt;Hello 2022! For those interested, you can check out &lt;a href="https://dev.to/nickytonline/series/10645"&gt;last year’s series&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" alt="Information flowing through your brain" width="496" height="419"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Let's Write a Redux Controller for Web Components</title>
      <author>Benny Powers 🇮🇱🇨🇦</author>
      <pubDate>Thu, 06 Jan 2022 22:55:21 +0000</pubDate>
      <link>https://dev.to/bennypowers/lets-write-a-redux-controller-for-web-components-4edl</link>
      <guid>https://dev.to/bennypowers/lets-write-a-redux-controller-for-web-components-4edl</guid>
      <description>&lt;p&gt;Elliott Marquez challenged me to write a redux controller on the &lt;a href="https://lit.dev/slack-invite/"&gt;Lit &amp;amp; Friends slack&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__137797"&gt;
  
    .ltag__user__id__137797 .follow-action-button {
      background-color: #D7DEE2 !important;
      color: #FFFFFF !important;
      border-color: #D7DEE2 !important;
    }
  
    &lt;a href="/elliott" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RlTmLbS6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--9y-D1XMO--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/137797/51b85172-df02-46c5-86af-499fcc94aee9.jpeg" alt="elliott image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/elliott"&gt;Elliott&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/elliott"&gt;I work on Developer experiences at Chrome and closely with the web platform&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;So let's get cracking!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-0-the-setup"&gt;
  &lt;/a&gt;
  Step 0: The Setup
&lt;/h2&gt;

&lt;p&gt;First step let's make a new project and import some dependencies to help us develop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;controllers
&lt;span class="nb"&gt;cd &lt;/span&gt;controllers
git init
npm init &lt;span class="nt"&gt;--yes&lt;/span&gt;
npm i &lt;span class="nt"&gt;-D&lt;/span&gt; typescript lit
&lt;span class="nb"&gt;touch &lt;/span&gt;reducer.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok next we'll set up the controller class in reducer.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ReactiveController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ReactiveControllerHost&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ReducerController&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ReactiveController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReactiveControllerHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hostUpdate&lt;/span&gt;&lt;span class="p"&gt;()?:&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That &lt;code&gt;hostUpdate&lt;/code&gt; signature is just to keep typescript from complaining. 🤷.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-reducers"&gt;
  &lt;/a&gt;
  Step 1: Reducers
&lt;/h2&gt;

&lt;p&gt;Our controller essentially bolts some statefullness onto a function which takes some state &lt;code&gt;T&lt;/code&gt; and some action &lt;code&gt;A&lt;/code&gt; and returns some other or the same state &lt;code&gt;T&lt;/code&gt;. So let's formalize that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Reducer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The controller should take that reducer, along with some initial state, and pin them to the class instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ReducerController&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ReactiveController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReactiveControllerHost&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Reducer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hostUpdate&lt;/span&gt;&lt;span class="p"&gt;?():&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-actions"&gt;
  &lt;/a&gt;
  Step 2: Actions
&lt;/h2&gt;

&lt;p&gt;Believe it or not we're pretty much done. The last piece we need is to implement a &lt;code&gt;dispatch&lt;/code&gt; method which takes an action &lt;code&gt;A&lt;/code&gt; and updates the host.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, as Chef John would say, &lt;em&gt;that's it&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;If we want to use our controller, we just create it on a compatible host (like LitElement) and we're off to the races:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/bennyp/embed/abLjmqW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lit.dev/playground/#project=W3sibmFtZSI6ImNvdW50ZXItZWxlbWVudC50cyIsImNvbnRlbnQiOiJpbXBvcnQge2h0bWwsIGNzcywgTGl0RWxlbWVudH0gZnJvbSAnbGl0JztcbmltcG9ydCB7Y3VzdG9tRWxlbWVudCwgcHJvcGVydHl9IGZyb20gJ2xpdC9kZWNvcmF0b3JzLmpzJztcbmltcG9ydCB7UmVkdWNlckNvbnRyb2xsZXJ9IGZyb20gJy4vcmVkdWNlci5qcyc7XG5cbkBjdXN0b21FbGVtZW50KCdjb3VudGVyLWVsZW1lbnQnKVxuZXhwb3J0IGNsYXNzIENvdW50ZXJFbGVtZW50IGV4dGVuZHMgTGl0RWxlbWVudCB7XG4gIHByaXZhdGUgY291bnQgPSBuZXcgUmVkdWNlckNvbnRyb2xsZXIodGhpcywgZnVuY3Rpb24gcmVkdWNlcihzdGF0ZSwgYWN0aW9uOiBDb3VudEFjdGlvbikge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgIGNhc2UgJ3Jlc2V0JzpcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICBjYXNlICdpbmNyZW1lbnQnOlxuICAgICAgICByZXR1cm4gc3RhdGUgKyAxO1xuICAgICAgY2FzZSAnZGVjcmVtZW50JzpcbiAgICAgICAgcmV0dXJuIHN0YXRlIC0gMTtcbiAgICB9XG4gIH0sIDApO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxidXR0b24gQGNsaWNrPSR7KCkgPT4gdGhpcy5jb3VudC5kaXNwYXRjaCh7IHR5cGU6ICdpbmNyZW1lbnQnIH0pfT4rPC9idXR0b24-XG4gICAgICA8b3V0cHV0PiR7dGhpcy5jb3VudC5zdGF0ZX08L291dHB1dD5cbiAgICAgIDxidXR0b24gQGNsaWNrPSR7KCkgPT4gdGhpcy5jb3VudC5kaXNwYXRjaCh7IHR5cGU6ICdkZWNyZW1lbnQnIH0pfT4rPC9idXR0b24-XG4gICAgYDtcbiAgfVxufVxuIn0seyJuYW1lIjoiaW5kZXguaHRtbCIsImNvbnRlbnQiOiI8IURPQ1RZUEUgaHRtbD5cbjxoZWFkPlxuICA8c2NyaXB0IHR5cGU9XCJtb2R1bGVcIiBzcmM9XCIuL3NpbXBsZS1ncmVldGluZy5qc1wiPjwvc2NyaXB0PlxuPC9oZWFkPlxuPGJvZHk-XG4gIDxjb3VudGVyLWVsZW1lbnQ-PC9jb3VudGVyLWVsZW1lbnQ-XG48L2JvZHk-XG4ifSx7Im5hbWUiOiJwYWNrYWdlLmpzb24iLCJjb250ZW50Ijoie1xuICBcImRlcGVuZGVuY2llc1wiOiB7XG4gICAgXCJsaXRcIjogXCJeMi4wLjBcIixcbiAgICBcIkBsaXQvcmVhY3RpdmUtZWxlbWVudFwiOiBcIl4xLjAuMFwiLFxuICAgIFwibGl0LWVsZW1lbnRcIjogXCJeMy4wLjBcIixcbiAgICBcImxpdC1odG1sXCI6IFwiXjIuMC4wXCJcbiAgfVxufSIsImhpZGRlbiI6dHJ1ZX0seyJuYW1lIjoicmVkdWNlci50cyIsImNvbnRlbnQiOiJpbXBvcnQgdHlwZSB7IFJlYWN0aXZlQ29udHJvbGxlciwgUmVhY3RpdmVDb250cm9sbGVySG9zdCB9IGZyb20gJ2xpdCc7XG5cbmV4cG9ydCB0eXBlIFJlZHVjZXI8VCwgQT4gPSAoc3RhdGU6IFQsIGFjdGlvbjogQSkgPT4gVDtcblxuZXhwb3J0IGNsYXNzIFJlZHVjZXJDb250cm9sbGVyPFQgPSB1bmtub3duLCBBID0gdW5rbm93bj4gaW1wbGVtZW50cyBSZWFjdGl2ZUNvbnRyb2xsZXIge1xuICBwdWJsaWMgc3RhdGU6IFQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBob3N0OiBSZWFjdGl2ZUNvbnRyb2xsZXJIb3N0LFxuICAgIHB1YmxpYyByZWR1Y2VyOiBSZWR1Y2VyPFQsIEE-LFxuICAgIHB1YmxpYyBpbml0aWFsU3RhdGU6IFQsXG4gICkge1xuICAgIHRoaXMuaG9zdC5hZGRDb250cm9sbGVyKHRoaXMpO1xuICAgIHRoaXMuc3RhdGUgPSBpbml0aWFsU3RhdGU7XG4gIH1cblxuICBkaXNwYXRjaChhY3Rpb246IEEpOiB2b2lkIHtcbiAgICB0aGlzLnN0YXRlID0gdGhpcy5yZWR1Y2VyKHRoaXMuc3RhdGUsIGFjdGlvbik7XG4gICAgdGhpcy5ob3N0LnJlcXVlc3RVcGRhdGUoKTtcbiAgfVxuXG4gIGhvc3RVcGRhdGU_KCk6dm9pZFxufVxuIn1d"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>redux</category>
      <category>webcomponents</category>
      <category>lit</category>
    </item>
    <item>
      <title>Finishing</title>
      <author>Nikola Brežnjak</author>
      <pubDate>Thu, 06 Jan 2022 22:21:44 +0000</pubDate>
      <link>https://dev.to/nikola/finishing-16le</link>
      <guid>https://dev.to/nikola/finishing-16le</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://www.nikola-breznjak.com/blog/daily-thoughts/finishing/"&gt;my blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sprint through the finish line. Don't slow down before the finish line. Finish strong.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;This is &lt;a href="https://www.nikola-breznjak.com/blog/daily-thoughts/why-do-i-write-these-daily-thoughts-posts/"&gt;why I write&lt;/a&gt; these "daily thoughts" posts.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>improvement</category>
      <category>growth</category>
      <category>career</category>
    </item>
    <item>
      <title>Create an ESP32 based smart device with Arduino and MQTT</title>
      <author>julz</author>
      <pubDate>Thu, 06 Jan 2022 22:16:50 +0000</pubDate>
      <link>https://dev.to/julzor42/create-an-esp32-based-smart-device-with-arduino-and-mqtt-3lkh</link>
      <guid>https://dev.to/julzor42/create-an-esp32-based-smart-device-with-arduino-and-mqtt-3lkh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;This article will show you how to quickly create an ESP32 based "smart device", using Arduino, by creating a simple application that basically connects your WiFi router, then a MQTT server, and publishes a message every five seconds.&lt;/p&gt;

&lt;p&gt;Of course, you can use any other WiFi enabled board.&lt;br&gt;
I chose the ESP32 because I recently bought a LiliGo TTGO ESP32 board, without any specific project in mind.&lt;br&gt;
This is the board I use: &lt;a href="http://www.lilygo.cn/prod_view.aspx?Id=1126"&gt;http://www.lilygo.cn/prod_view.aspx?Id=1126&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#board"&gt;
  &lt;/a&gt;
  Board
&lt;/h2&gt;

&lt;p&gt;First, we need to add support to our ESP32 board.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the Arduino preferences, in the &lt;em&gt;Additional Boards Manager URLs&lt;/em&gt; field, add: &lt;code&gt;https://dl.espressif.com/dl/package_esp32_index.json&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Tools&lt;/strong&gt; menu, open the &lt;strong&gt;Boards Manager&lt;/strong&gt; and look for &lt;em&gt;esp32&lt;/em&gt;, then install it.&lt;/li&gt;
&lt;li&gt;Still in the &lt;strong&gt;Tools&lt;/strong&gt; menu, choose your board (&lt;em&gt;TTGO LoRa32-OLED V1&lt;/em&gt; in my case)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#libraries"&gt;
  &lt;/a&gt;
  Libraries
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In the &lt;strong&gt;Sketch&lt;/strong&gt; menu, select &lt;strong&gt;Manage Libraries...&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Install library &lt;em&gt;PubSubClient&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#headers"&gt;
  &lt;/a&gt;
  Headers
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;WiFi.h&amp;gt;
#include &amp;lt;PubSubClient.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#definitions"&gt;
  &lt;/a&gt;
  Definitions
&lt;/h3&gt;

&lt;p&gt;Let's define our WiFi SSID, password, and the MQTT server&lt;br&gt;
informations (hostname, port, username, password, client).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#define ssid          "MyWiFi" 
#define password      "MyWifiPassword"
#define mqtt_host     "MyMQTTServer"
#define mqtt_port     1883
#define mqtt_client   "ArduinoCl"
#define mqtt_user     "julzor"
#define mqtt_password "SomePassword"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#global-variables"&gt;
  &lt;/a&gt;
  Global variables
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WiFiClient espClient;
PubSubClient cli = PubSubClient(espClient);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#connecting-to-wifi"&gt;
  &lt;/a&gt;
  Connecting to WiFi
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void setup_wifi()
{
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) 
  {
    delay(500);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#connecting-to-mqtt"&gt;
  &lt;/a&gt;
  Connecting to MQTT
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void setup_mqtt()
{
  cli.setServer(mqtt_host, mqtt_port);

  if (cli.connect(mqtt_client, mqtt_user, mqtt_password))
  {
    // Now we're connected to the MQTT server
    // Let's publish a first message...
    cli.publish("test/hello", "hello world");
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void setup()
{
    Serial.begin(115200);

    delay(10);

    setup_wifi();
    setup_mqtt();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#loop"&gt;
  &lt;/a&gt;
  Loop
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;long last = 0;

void loop() {
  if (!cli.connected())
  {
    // We were disconnected, let's reconnect
    delay(1000);
    setup_mqtt();
  }
  else
  {
    cli.loop();

    long now = millis();
    if (now - last &amp;gt; 5000)
    {
      last = now;
      cli.publish("test/ping", "Ping");
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;You should now have a working application that does nothing but send a ping message on your MQTT server. That's a start!&lt;/p&gt;

&lt;p&gt;In another article, I will show you how I use my useless smart device with Node-RED, a Raspberry Pi, and Alexa.&lt;/p&gt;

</description>
      <category>esp32</category>
      <category>mqtt</category>
      <category>arduino</category>
      <category>smartdevice</category>
    </item>
    <item>
      <title>Setup RSpec on a fresh Rails 7 project</title>
      <author>Adrian Valenzuela</author>
      <pubDate>Thu, 06 Jan 2022 22:13:32 +0000</pubDate>
      <link>https://dev.to/adrianvalenz/setup-rspec-on-a-fresh-rails-7-project-5gp</link>
      <guid>https://dev.to/adrianvalenz/setup-rspec-on-a-fresh-rails-7-project-5gp</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@jonathanbean?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jonathan Bean&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/blacksmith?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Installing RSpec, FactoryBot, Faker gems and configuring for testing environment. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ruby 3.0.1 + Rails 7.0.0&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's get right to it...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#start-a-fresh-project"&gt;
  &lt;/a&gt;
  Start a fresh project
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rails new projectname -d postgresql
cd projectname
git add -A
git commit -m "initial commit"

rails db:create
rails s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-gems"&gt;
  &lt;/a&gt;
  Install gems
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b rspec
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Gemfile add...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;group :development, :test do
  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem
  gem "debug", platforms: %i[ mri mingw x64_mingw ]
  gem "rspec-rails"
  gem "factory_bot_rails"
  gem "faker"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Back in terminal/command line...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bundle install
rails g rspec:install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configure-gems"&gt;
  &lt;/a&gt;
  Configure gems
&lt;/h2&gt;

&lt;p&gt;Create 'support' directory in 'spec' directory and create two files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;spec/support/factory_bot.rb
spec/support/chrome.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then one file in the spec directory for factories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;spec/factories.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Configure FactoryBot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# spec/support/factory_bot.rb

RSpec.configure do |config|
  config.include FactoryBot::Syntax::Methods
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Configure driver&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# spec/support/chrome.rb

RSpec.configure do |config|
  config.before(:each, type: :system) do
    if ENV["SHOW_BROWSER"] == "true"
      driven_by :selenium_chrome
    else
      driven_by :selenium, using: :headless_chrome, screen_size: [1400, 1400]
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Require support files in &lt;code&gt;rails_helper.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# spec/rails_helper.rb

require_relative 'support/factory_bot'
require_relative 'support/chrome'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you generate a User model (or any model) RSpec will generate a factory for you in your &lt;code&gt;factories.rb&lt;/code&gt; file.&lt;br&gt;
You can modify it to look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# spec/factories.rb

FactoryBot.define do
  factory(:user) do
    email { Faker::Internet.email }
    password { Faker::Internet.password }
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#it-should-run-a-test-do"&gt;
  &lt;/a&gt;
  it "should run a test" do...
&lt;/h2&gt;

&lt;p&gt;Run &lt;code&gt;rspec&lt;/code&gt; command in the terminal and you should see it run and output some green text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-&amp;gt; rspec
No examples found.

Finished in 0.00038 seconds (files took 0.94577 seconds to load)
0 examples, 0 failures
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finish-up"&gt;
  &lt;/a&gt;
  Finish up
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
git commit -m "add rspec"
git checkout main
git merge rspec
git branch -D rspec
git push # assuming you have a repo online somewhere
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>rails</category>
      <category>rspec</category>
      <category>testing</category>
      <category>ruby</category>
    </item>
    <item>
      <title>What Does a DevOps Engineer Do?</title>
      <author>Francesco Ciulla</author>
      <pubDate>Thu, 06 Jan 2022 21:41:43 +0000</pubDate>
      <link>https://dev.to/tinystacks/what-does-a-devops-engineer-do-5795</link>
      <guid>https://dev.to/tinystacks/what-does-a-devops-engineer-do-5795</guid>
      <description>&lt;p&gt;Hiring a DevOps Engineer for the first time? Knowing what to look for in a talented engineer can be a challenge. In this article, I discuss what you can expect from a DevOps Engineer in today's marketplace. I share some of my own experiences hiring DevOps Engineers in today's competitive labor market. Finally, I talk about cheaper alternatives to hiring a full-time DevOps Engineer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-you-need-a-devops-engineer"&gt;
  &lt;/a&gt;
  When Do You Need a DevOps Engineer?
&lt;/h2&gt;

&lt;p&gt;In my past articles,  &lt;a href="https://blog.tinystacks.com/stacks-stages-environments-definitions"&gt;I've discussed DevOps release pipelines, stacks, and stages in-depth&lt;/a&gt;. A release pipeline is a software-driven process that development teams use to promote application changes from development into production. The pipeline creates multiple stacks - full versions of your application - across multiple stages of deployment. &lt;/p&gt;

&lt;p&gt;A development team usually starts a pipeline automatically via a push to a source code control system, such as Git. The team then pushes the change set gradually through each stage (dev-&amp;gt;test-&amp;gt;staging-&amp;gt;prod), testing and validating their changes along the way. &lt;/p&gt;

&lt;p&gt;What I haven't discussed (directly, at least) is how &lt;em&gt;complicated&lt;/em&gt; this process is. A DevOps release pipeline is itself a piece of software. It requires code to run - and that code needs to be tested, debugged, and maintained. &lt;/p&gt;

&lt;p&gt;Many teams and small development shops get started without a dedicated DevOps engineer. Yours may be one of them! In these situations, a few team members generally own pieces of the pipeline and keep it running. Pipelines at this point are usually a mix of automated promotion and old-school manual deployment. &lt;/p&gt;

&lt;p&gt;However, as your application and requests from your customers grow, you may realize the lack of a dedicated DevOps engineer is slowing your team down. Some of the signs include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your team's velocity slows under the weight of its current (mostly manual) deployment processes. &lt;/li&gt;
&lt;li&gt;You have a somewhat automated deployment process but maintaining it is consuming more and more of the team's time. &lt;/li&gt;
&lt;li&gt;You realize after a high-profile failure that your release procedures need professional help. &lt;/li&gt;
&lt;li&gt;You know you should improve your deployment process but your team is so crushed with feature work that no one has time to spend on it. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're facing down one or more of these issues, it may be time to hire a part-time or full-time DevOps Engineer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responsibilities-of-a-devops-engineer"&gt;
  &lt;/a&gt;
  Responsibilities of a DevOps Engineer
&lt;/h2&gt;

&lt;p&gt;A DevOps Engineer's role will likely look slightly different at every company. However, the following broad-based responsibilities tend to be common and consistent. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automate-the-full-release-pipeline"&gt;
  &lt;/a&gt;
  Automate the Full Release Pipeline
&lt;/h3&gt;

&lt;p&gt;A good release pipeline eliminates unnecessary manual steps and reduces the time required to deploy changes to your application. Building and maintaining this pipeline is the DevOps Engineer's primary job. &lt;/p&gt;

&lt;p&gt;DevOps Engineers usually craft release pipelines using  &lt;a href="https://blog.tinystacks.com/using-codebuild-and-codepipeline-to-deploy-aws-applications-easily"&gt;a Continuous Integration/Continuous Development tool&lt;/a&gt;. Tools  &lt;a href="https://www.katalon.com/resources-center/blog/ci-cd-tools/"&gt;such as Jenkins, Atlassian, GitLab, and Azure DevOps&lt;/a&gt; integrate with source code control tools (usually Git) and handle triggering automated actions in response to repository check-ins. If your team already uses such a tool and is committed to it, you'll want to find someone proficient in your specific CI/CD toolset. &lt;/p&gt;

&lt;p&gt;Many CI/CD toolsets offer a set of predefined actions to assist with the CI/CD process. However, other actions will be specific to your team's application. A DevOps engineer uses one or more scripting languages to automate complicated deployment tasks your team may have been executing manually. Python, JavaScript, shell scripting, and PowerShell (on Windows)  &lt;a href="https://www.devopsuniversity.org/what-programming-languages-are-used-by-a-devops-engineer/"&gt;are some of the more popular scripting languages that DevOps Engineers use&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For cloud-deployed software, a DevOps Engineer is also responsible for setting up the entire stack on which the application runs using  &lt;a href="https://blog.tinystacks.com/stacks-stages-aws"&gt;Infrastructure as Code&lt;/a&gt;. A DevOps Engineer should be able to design and implement a stack deployment that can be deployed multiple times to any stage of your release pipeline. &lt;/p&gt;

&lt;p&gt;Some engineers implement Infrastructure as Code using a scripting language such as Python. However, it's more common to use a templating language, such as  &lt;a href="https://aws.amazon.com/cloudformation/"&gt;CloudFormation on AWS&lt;/a&gt; or  &lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview"&gt;Azure Resource Manager (ARM) Templates&lt;/a&gt; on Azure. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-best-practices-for-software-development"&gt;
  &lt;/a&gt;
  Setting Best Practices for Software Development
&lt;/h3&gt;

&lt;p&gt;As part of setting up the build and release pipeline, your DevOps guru will also define best practices for coding and validation of changes. In other words, they're the point person for your team's  &lt;a href="https://blog.tinystacks.com/pipeline-approvals-manual-automatic"&gt;change management approval process&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;For example, a DevOps Engineer may work with their team to devise the best way to manage the overall work process. For most teams, this usually means adopting an Agile approach to software development  &lt;a href="https://www.planview.com/resources/guide/introduction-to-kanban/kanban-vs-scrum/"&gt;such as Scrum or Kanban&lt;/a&gt;. It could also mean defining a code review process and teaching the team how to conduct good reviews. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitor-builds-and-deployments"&gt;
  &lt;/a&gt;
  Monitor Builds and Deployments
&lt;/h3&gt;

&lt;p&gt;The DevOps Engineer is responsible for ensuring the continued health of the team's CI/CD pipeline. This includes: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monitoring build progress and logs from your team's CI/CD tool&lt;/li&gt;
&lt;li&gt;Moving quickly to resolve broken builds and keep changes flowing through the pipeline&lt;/li&gt;
&lt;li&gt;Observing dashboard metrics as new instances of the application come online&lt;/li&gt;
&lt;li&gt;Staying alert for errors as your deployment shifts more users over to the new version of your application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Monitoring should occur in all stages of the pipeline.  &lt;a href="https://www.atlassian.com/devops/devops-tools/devops-monitoring"&gt;As Atlassian points out&lt;/a&gt;, pre-production monitoring means you can stomp out critical errors before they ever reach customers. &lt;/p&gt;

&lt;p&gt;Depending on the size of your organization, the DevOps Engineer may supervise all of this themselves. They may also work in conjunction with a Sustained Engineering or Support team that's ultimately responsible for maintaining application health. In either case, your DevOps Engineer should take the lead in defining what the team needs to monitor. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-the-git-guru"&gt;
  &lt;/a&gt;
  Be the Git Guru
&lt;/h3&gt;

&lt;p&gt;Ahhh, Git. The free source code control system is a marvelous invention. You can't be a developer nowadays and not know at least the basics of Git. And yet even seasoned developers will sometimes find themselves mired in Merge Conflict Hell. &lt;/p&gt;

&lt;p&gt;A team's DevOps Engineer should know Git inside and out. They should understand, for example,  &lt;a href="https://www.atlassian.com/git/tutorials/merging-vs-rebasing"&gt;the difference between a merge and a rebase&lt;/a&gt; - and which one to use when. They are the person primarily responsible for defining the team's branching and merging strategy - and maintaining quality internal documentation for other team members.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-look-for-in-a-devops-engineer"&gt;
  &lt;/a&gt;
  What to Look for in a DevOps Engineer
&lt;/h2&gt;

&lt;p&gt;As an engineering manager, I've hired multiple DevOps engineers. During the interview process, my loops focus on validation a combination of technical and soft skills: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevOps knowledge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Does the candidate have the basics of CI/CD down pat? What successes have they accumulated in developing successful pipelines? What setbacks have they encountered - and how have they overcome them? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud platform and DevOps tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In what DevOps tools is your candidate most experienced? Do they know the tools your team is already using? &lt;/p&gt;

&lt;p&gt;A DevOps Engineer will also need to make numerous decisions on whether to buy or build certain parts of the DevOps process. For example, does your team roll its own artifact storage features? Or does it leverage a tool like  &lt;a href="https://jfrog.com/artifactory/"&gt;Artifactory&lt;/a&gt;? DevOps Engineers need to remain up to speed on the tools marketplace so they can make these critical buy vs. build decisions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Leadership&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A DevOps Engineer needs to do more than build a pipeline. They need to convince a (sometimes reluctant) team of engineers and stakeholders to change the way they develop software. Does your candidate have experience talking a tough crowd into adopting new processes? &lt;/p&gt;

&lt;p&gt;As a manager, I like to use  &lt;a href="https://www.indeed.com/career-advice/interviewing/how-to-use-the-star-interview-response-technique"&gt;STAR (Situation-Task-Action-Result) questions&lt;/a&gt; to determine a candidate's experience with being a technical leader. So I might ask something like, "Tell me about a time when you received pushback from your team on a process change. What was it and how did you resolve it?" &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Growth mindset&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The DevOps and cloud spaces are changing constantly. So it's important that a DevOps Engineer not get overly set in their ways. &lt;/p&gt;

&lt;p&gt;I also like to use STAR questions to gauge a candidate's willingness to grow. For example, what's the last thing that they learned just because it looked interesting? Did they end up using it on the job? If so, what was the result? &lt;/p&gt;

&lt;p&gt;Alternatively, I may ask when was the last time they received critical feedback from their manager. What was it? And how did they use that feedback to improve their job performance? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternatives-to-hiring-a-fulltime-devops-engineer"&gt;
  &lt;/a&gt;
  Alternatives to Hiring a Full-Time DevOps Engineer
&lt;/h2&gt;

&lt;p&gt;You've determined that you need more DevOps savvy in your org. But that doesn't mean you need to start off with a full-time position out of the gate. Maybe you can't afford a full-time position at the moment. Or perhaps you'd just like to test the waters before diving in with both feet. &lt;/p&gt;

&lt;p&gt;Fortunately, there are a couple of alternatives to hiring someone full-time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hire-a-parttime-devops-engineer"&gt;
  &lt;/a&gt;
  Hire a Part-Time DevOps Engineer
&lt;/h3&gt;

&lt;p&gt;You may not need (nor even desire) a full-time team member. It may be enough to hire someone on a part-time basis to construct and maintain your build and release pipeline.&lt;/p&gt;

&lt;p&gt;In this scenario, you'd want to find a DevOps Engineer who's good at building self-service solutions. Your team should be able to kick off builds, perform releases, and monitor rollouts without having a full-time DevOps Engineer on call to oversee a successful outcome.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#migrate-to-tinystacks"&gt;
  &lt;/a&gt;
  Migrate to TinyStacks
&lt;/h3&gt;

&lt;p&gt;Another option? Forego the engineer! You can potentially save both time and money by adopting a DevOps tool that essentially provides you "DevOps as a service". &lt;/p&gt;

&lt;p&gt;TinyStacks is one such tool. Built by a team with deep experience building out the Amazon Web Services console, TinyStacks provides an automated approach to DevOps. Using a simple UI Web interface, your team can migrate its application into a full release pipeline - complete with AWS cloud architecture - within the week. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.tinystacks.com/"&gt;Read a little more on what TinyStacks can do for you&lt;/a&gt;  and contact us below to start a discussion!&lt;/p&gt;

&lt;p&gt;Article by Jay Allen&lt;/p&gt;

</description>
      <category>devops</category>
      <category>docker</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
