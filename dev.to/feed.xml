<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>DIY dowtime monitor with NodeRED </title>
      <author>Mangirdas Judeikis</author>
      <pubDate>Tue, 26 Oct 2021 11:52:43 +0000</pubDate>
      <link>https://dev.to/mjudeikis/diy-dowtime-monitor-with-nodered-g99</link>
      <guid>https://dev.to/mjudeikis/diy-dowtime-monitor-with-nodered-g99</guid>
      <description>&lt;p&gt;"Black box" monitoring is one of the key concepts, when monitoring any application. We will show how to deploy a free DIY downtime monitoring stack, using NodeRed and Synpse.&lt;/p&gt;

&lt;p&gt;Similar pattern could be used to do almost any home automation. So go crazy! We use this pattern as its easy to modify, and not does not require much of the maintenance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Synpse is an end-to-end platform to manage your device fleet that can grow to hundreds of thousands of devices, perform OTA software updates, collect metrics, logs, deploy your containerized applications and facilitate tunnel-based SSH access to any of your device. You can find a Quick Start here .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#technologies-used"&gt;
  &lt;/a&gt;
  Technologies used
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.synpse.net/"&gt;Synpse&lt;/a&gt; for hosting and running applications anywhere&lt;br&gt;
&lt;a href="https://nodered.org/"&gt;NodeRED&lt;/a&gt; for instrumenting our monitoring&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nodered"&gt;
  &lt;/a&gt;
  NodeRED
&lt;/h2&gt;

&lt;p&gt;We will use NodeRED as instrumentation tool to “write code without writing any code” and monitor our web pages availability. If downtime is detected, we will notify administrators via slack or discord message.&lt;/p&gt;

&lt;p&gt;First lets deploy NodeRED into Synpse enable IoT device we own. We use simple RPI4 under the desk at home:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NodeRed&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Low-code programming for event-driven applications&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;scheduling&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Selector&lt;/span&gt;
  &lt;span class="c1"&gt;# More on selectors https://docs.synpse.net/synpse-core/applications/scheduling&lt;/span&gt;
  &lt;span class="na"&gt;selectors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;nodered&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodered&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodered/node-red:latest-minimal&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;root&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;1880:1880"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/nodered:/data&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/etc/localtime:/etc/localtime&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/root/.ssh:/root/.ssh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access the remote device via Synpse proxy CLI command to configure it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;synpse device proxy &amp;lt;device_name&amp;gt; --port 1880
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the browser page &lt;a href="http://localhost:1880"&gt;http://localhost:1880&lt;/a&gt;. You should be able to see NodeRed running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#downtime-flow"&gt;
  &lt;/a&gt;
  Downtime flow
&lt;/h2&gt;

&lt;p&gt;We use Discord webhook integration to send a messages and alert our developers once page is down. Discord webhook documentation can be found &lt;a href="https://discord.com/developers/docs/resources/webhook"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxMZV59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utdi3di8qhk8mo6ndecy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxMZV59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utdi3di8qhk8mo6ndecy.png" alt="Discord webhook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flow we created is very simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each 5s call cloud.synpse.net health url&lt;/li&gt;
&lt;li&gt;If response is not 200, go to next phase, else drop&lt;/li&gt;
&lt;li&gt;Rate limit to send only 1 message each 5 min&lt;/li&gt;
&lt;li&gt;Create a Webhook payload&lt;/li&gt;
&lt;li&gt;Send POST request to webhook URL&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Flow itself looks like this (we have left if 200 branch too, in case you want to re-use it for other purposes). Full json flow can be found bellow for you to reuse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tFgvzmKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k6v8n4pyoe081roheh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tFgvzmKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k6v8n4pyoe081roheh2.png" alt="NodeRED flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press “deploy” and you are done :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAd9HcKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uef3gj0bww7ke9qp6w3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAd9HcKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uef3gj0bww7ke9qp6w3.png" alt="Message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is very simple way to monitor your applications or construct any other automation flows. In addition you cab deploy same application to different agents, across the globe, and you have free Region based downtime monitoring!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapupsh"&gt;
  &lt;/a&gt;
  ./wrap_up.sh
&lt;/h2&gt;

&lt;p&gt;If you have any questions or suggestions, feel free to start a new discussion in our forum or drop us a line on &lt;a href="https://discord.gg/dkgN4vVNdm"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originallu published at &lt;a href="https://synpse.net/blog/nodered/downtime-monitor-nodered/"&gt;Synpse.net blog&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-flow"&gt;
  &lt;/a&gt;
  Full flow
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tab"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NodeRed on Synpse"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"disabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"info"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ef34b5db67c67385"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"http request"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;PAGE_TO_CHECK_NAME&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"paytoqs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ignore"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;PAGE_TO_CHECK_URL&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"persist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"proxy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"authType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;370&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"2109536ce55f85cf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"1aae7673af94fb6c"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3c39826c5c2c418b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"inject"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ticker 5s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"props"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"topic"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repeat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"crontab"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"once"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"onceDelay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"topic"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"payloadType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ef34b5db67c67385"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2109536ce55f85cf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"if not 200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"property"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"statusCode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"propertyType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"neq"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"checkall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repair"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;580&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"758156729b55665f"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1aae7673af94fb6c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"if  200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"property"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"statusCode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"propertyType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eq"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"checkall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repair"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;570&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"758156729b55665f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"delay"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"pauseType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"timeout"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"timeoutUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"seconds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"nbRateUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rateUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"minute"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomFirst"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomLast"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"seconds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"drop"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"allowrate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;740&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"a062d51eb49713f9"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2452ffaa52e6333f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"http request"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"discord webhook"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"paytoqs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ignore"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;DISCORD_WEBHOOK_URL&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"persist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"proxy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"authType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1110&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"a062d51eb49713f9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"function"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"func"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"var payload = {&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Downtime BOT&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;avatar_url&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;https://i.imgur.com/zEGYUVs.jpeg&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;content&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;cloud.synpse.net Downtime detected. Next check in 5 min&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;msg.payload = payload&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;return msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"noerr"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"initialize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"finalize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"libs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"2452ffaa52e6333f"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>iot</category>
      <category>devicemanagement</category>
      <category>internetofthings</category>
      <category>synpsenodered</category>
    </item>
    <item>
      <title>Announcement: Book release!!</title>
      <author>Bruno Oliveira</author>
      <pubDate>Tue, 26 Oct 2021 11:50:03 +0000</pubDate>
      <link>https://dev.to/brunooliveira/announcement-book-release-2491</link>
      <guid>https://dev.to/brunooliveira/announcement-book-release-2491</guid>
      <description>&lt;p&gt;As the title says: &lt;/p&gt;

&lt;p&gt;Inspired by my series of Flask posts, I decided to structure them more, add a lot of details regarding the deployment process, and, as a result, I have just released my first book:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://brunooliv.gumroad.com/l/YAjWX"&gt;https://brunooliv.gumroad.com/l/YAjWX&lt;/a&gt;&lt;/p&gt;

</description>
      <category>books</category>
      <category>python</category>
      <category>flask</category>
      <category>webdev</category>
    </item>
    <item>
      <title>20+ JavaScript Utilities to Boost Your Productivity As a Developer</title>
      <author>Olubisi Idris Ayinde💡</author>
      <pubDate>Tue, 26 Oct 2021 11:44:36 +0000</pubDate>
      <link>https://dev.to/olanetsoft/20-javascript-utilities-to-boost-your-productivity-as-a-developer-494n</link>
      <guid>https://dev.to/olanetsoft/20-javascript-utilities-to-boost-your-productivity-as-a-developer-494n</guid>
      <description>&lt;p&gt;In software development, utilities are software tools that add functionality to your code or improve the performance of your application.&lt;/p&gt;

&lt;p&gt;In this article, we'll go through a fantastic selection of tools that will help you be more productive as a software developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-webpack"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-cypress"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.npmjs.com/package/cypress"&gt;Cypress&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Cypress is a modern web-based next-generation front-end testing tool.&lt;/p&gt;

&lt;p&gt;Although Cypress is frequently compared to Selenium, the two are fundamentally and structurally distinct. Cypress isn't limited in the same way that Selenium is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-rxjs"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.npmjs.com/package/rxjs"&gt;RXJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;RxJS is a reactive programming library that uses Observables to make asynchronous or callback-based applications easier to compose. This project rebuilds Reactive-Extensions/RxJS, improving efficiency, modularity, and debugability while remaining mainly backward compatible, with some breaking changes that minimize the API surface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-jest"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.npmjs.com/package/jest"&gt;Jest&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Jest is a fun JavaScript testing framework with a focus on ease of use.&lt;/p&gt;

&lt;p&gt;It works with Babel, TypeScript, Node, React, Angular, Vue, and more frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-nestjs"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.npmjs.com/package/@nestjs/core"&gt;NestJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Nest is a framework for creating Node.js server-side applications that are both efficient and scalable. It is designed with TypeScript (to maintain compatibility with pure JavaScript) and incorporates parts of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Resource Programming) (Functional Reactive Programming).&lt;/p&gt;

&lt;p&gt;Nest uses Express behind the hood, but it also has interoperability with various other libraries, such as Fastify, allowing for easy usage of the numerous third-party plugins available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-datefns"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.npmjs.com/package/date-fns"&gt;Date-fns&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;date-fns is a suite of tools for manipulating JavaScript dates in a browser and Node.js that are extensive and consistent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-electron"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.npmjs.com/package/electron"&gt;Electron&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Electron framework lets you write cross-platform desktop applications using JavaScript, HTML, and CSS. It is based on Node.js and Chromium and is used by the Atom editor and many other apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-ngmocks"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.npmjs.com/package/ng-mocks"&gt;NG-Mocks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Mock components, services, and more out of annoying dependencies for simplification of Angular testing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-webpack"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-nanoid"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.npmjs.com/package/nanoid"&gt;Nanoid&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A tiny, secure, URL-friendly, unique string ID generator for JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-redux"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://www.npmjs.com/package/redux"&gt;Redux&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Redux is a state management system for JavaScript programs.&lt;br&gt;
(Not to be confused with the Redux Framework, a WordPress framework.)&lt;/p&gt;

&lt;p&gt;It enables you to create apps that operate consistently across environments (client, server, and native) and are simple to test. It also offers a fantastic developer experience, with live code editing and a time-traveling debugger.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-husky"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://www.npmjs.com/package/husky"&gt;Husky&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Husky improves your commits and more.&lt;/p&gt;

&lt;p&gt;When you commit or push, you can use it to lint your commit messages, run tests, lint code, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-axios"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://www.npmjs.com/package/axios"&gt;Axios&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-faker"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://www.npmjs.com/package/faker"&gt;Faker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;faker.js - generate massive amounts of fake data in the browser and node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-dayjs"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://www.npmjs.com/package/dayjs"&gt;DayJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with an essentially Moment. Js-compatible API. If you use Moment.js, you already know how to use Day.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-webpack"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-puppeteer"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://www.npmjs.com/package/puppeteer"&gt;Puppeteer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Puppeteer is a Node module that allows you to manipulate Chrome or Chromium using the DevTools Protocol. Puppeteer is configured to run full (non-headless) Chrome or Chromium by default, although this can be changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-light-house"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://www.npmjs.com/package/lighthouse"&gt;Light House&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Lighthouse analyzes web apps and web pages, collecting current performance metrics and insights on developer best practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-react-query"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://www.npmjs.com/package/react-query"&gt;React Query&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Hooks for fetching, caching, and updating asynchronous data in React&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-nodemon"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://www.npmjs.com/package/nodemon"&gt;Nodemon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Nodemon is a program that aids in the development of node.js apps by automatically restarting them when file changes in the directory are detected.&lt;/p&gt;

&lt;p&gt;No additional changes to your code or development technique are required with nodemon. nodemon is a wrapper for node.js that can be used instead of node.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-react-error-overlay"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://www.npmjs.com/package/react-error-overlay"&gt;React Error Overlay&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;react-error-overlay&lt;/code&gt; is an overlay that displays when there is a runtime error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-http-proxy-middleware"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://www.npmjs.com/package/http-proxy-middleware"&gt;HTTP Proxy Middleware&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Node.js proxying made simple. Configure proxy middleware with ease for connecting, express, browser-sync, and many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-underscore"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.npmjs.com/package/underscore"&gt;Underscore&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Underscore.js is a utility-belt library for JavaScript that supports the usual functional suspects (each, map, reduce, filter.) without extending any core JavaScript objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-parcel"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://www.npmjs.com/package/parcel"&gt;Parcel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The parcel is a zero-configuration build tool for the web. It combines a tremendous out-of-the-box development experience with a scalable architecture that can take your project from just getting started to a massive production application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-pm2"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://www.npmjs.com/package/pm2"&gt;Pm2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;PM2 is a load balancer-assisted production process manager for Node.js applications. It lets you keep programs alive indefinitely, reload them without causing downtime, and simplify typical system administration duties.&lt;/p&gt;

&lt;p&gt;I hope you find these resources helpful 😊&lt;/p&gt;

&lt;p&gt;I'd love to connect with you at &lt;a href="https://twitter.com/olanetsoft"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/olubisi-idris-ayinde-05727b17a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/Olanetsoft"&gt;GitHub&lt;/a&gt; | &lt;a href="https://idrisolubisi.com/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you in my next blog article. Take care!!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top 10 articles about JavaScript of the week🐍.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Tue, 26 Oct 2021 11:31:58 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-articles-about-javascript-of-the-week-3heg</link>
      <guid>https://dev.to/ksengine/top-10-articles-about-javascript-of-the-week-3heg</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;/p&gt;

&lt;p&gt;Once relegated to the browser as one of the 3 core technologies of the web, JavaScript can now be found almost anywhere you find code.&lt;br&gt;
JavaScript developers move fast and push software development forward; they can be as opinionated as the frameworks they use, so let's keep it clean here and make it a place to learn from each other!&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__6"&gt;
  
    .ltag__tag__id__6 .follow-action-button{
      background-color: #F7DF1E !important;
      color: #000000 !important;
      border-color: #F7DF1E !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/javascript" class="ltag__tag__link"&gt;javascript&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        &amp;lt;p&amp;gt;Once relegated to the browser as one of the 3 core technologies of the web, JavaScript can now be found almost anywhere you find code. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;JavaScript developers move fast and push software development forward; they can be as opinionated as the frameworks they use, so let's keep it clean here and make it a place to learn from each other!&amp;lt;/p&amp;gt;
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the most popular articles published on this platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/lets-create-a-screen-recorder-with-js-3leb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VijeTxaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p8pbExaT--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/duxwuftie1d2dnvlv7fi.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/lets-create-a-screen-recorder-with-js-3leb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets create a screen recorder with JS&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 21 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWD_sq6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--gHB4MrUc--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://ivumwcqobobsryuftwyv.supabase.co/storage/v1/object/public/posts/d6c8f63f-467f-4de1-863e-6efc3fce4d90/cover_image/795a36e6-b01b-429d-ba1d-b24c09ecaeaa.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ali6nx404" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6eKJHV5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lDAn59NE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/718375/5d79790f-4842-4a47-9082-e98b90319589.png" alt="ali6nx404"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ali6nx404/cheat-sheets-that-always-save-my-time-during-web-development-2ga4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Cheat Sheets that always save my time during web development 🚀&lt;/h2&gt;
      &lt;h3&gt;Mahesh Patidar ・ Oct 22 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdeveloper&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtuVFJ02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N_M7P9k7--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y82y53lwk0wrb8drs2x1.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/how-to-turn-google-sheets-into-a-rest-api-and-use-it-with-a-react-application-1pbb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Turn Google Sheets into a REST API and Use it with a React Application&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 22 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/cesscode/useful-websites-every-web-developer-should-know-about-3n4n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcBwWwvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AMtUKDr2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyd8q1d5y49zk8jb9ae7.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/cesscode" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5m9qrtHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Wro6iFlY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/588139/30a1db5b-8b3a-42ee-88c6-a15a86c24ad9.jpg" alt="cesscode"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cesscode/useful-websites-every-web-developer-should-know-about-3n4n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Useful Websites Every Web developer Should Know About.&lt;/h2&gt;
      &lt;h3&gt;Cess ・ Oct 23 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oQWHaTP1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iEBeumEI--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3awskbkou0xo4tjlajp.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/aviyel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk48Byhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8ml24Y9z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3818/2fd02162-3471-44cd-8f8f-5336ddc7abc1.png" alt="Aviyel Inc"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1bzjyno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--co8MU9_n--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/413418/f04996e5-b2bc-48b2-b362-dbe716bb5b38.JPG" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aviyel/51-git-commands-that-youll-ever-need-to-get-started-with-git-34d5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;51 git commands that you'll ever need to get started with Git 🔥&lt;/h2&gt;
      &lt;h3&gt;Pramit Marattha for Aviyel Inc ・ Oct 20 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/0shuvo0/python-javascript--1nd6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVLignnQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q5CdR8do--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc439sauu5yr1fwqs0gr.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/python-javascript--1nd6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Python + JavaScript = 🔥🔥🔥&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 21 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/code_jedi/the-full-stack-developer-vocabulary-pt1-the-essentials-4ap4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d6sMo67N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HW44Oq_V--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ysfzy22s6b224sh9rnz.jpg" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/code_jedi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2UdXozcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sfhG3s-0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/663681/38344773-8216-4145-b01a-a2e10aab88f1.png" alt="code_jedi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code_jedi/the-full-stack-developer-vocabulary-pt1-the-essentials-4ap4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The Full-Stack Developer Vocabulary (Pt.1, the essentials)&lt;/h2&gt;
      &lt;h3&gt;Code_Jedi ・ Oct 23 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/nehal_mahida/asyncawait-with-easy-to-understand-examples-2221"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zGNZjo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--pf1v18hG--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnwpykxxm3uvq5w65a8z.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/nehal_mahida" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SB5pZS-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--u_LyBlwY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/668705/cae5806f-ff6f-4032-8fee-56020d184232.jpg" alt="nehal_mahida"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nehal_mahida/asyncawait-with-easy-to-understand-examples-2221" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Async/Await with easy to understand examples.&lt;/h2&gt;
      &lt;h3&gt;Nehal Mahida ・ Oct 21 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ruppysuppy/micro-frontends-the-next-gen-way-to-build-web-apps-16da"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dQl9k7m_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--H7yc6JRb--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dv0r97eog7vna33q2u8e.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ruppysuppy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oA7zxE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--E69pqyft--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/530414/941751d8-06b8-41bd-9de9-6ea056b7199f.png" alt="ruppysuppy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ruppysuppy/micro-frontends-the-next-gen-way-to-build-web-apps-16da" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Micro-Frontends: The Next Gen Way to build Web Apps&lt;/h2&gt;
      &lt;h3&gt;Tapajyoti Bose ・ Oct 24 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webpack&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#microfrontend&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ubahthebuilder/how-to-build-a-screenshot-downloader-app-with-plain-javascript-in-10-minutes-2j01"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MNxco6Q8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--E3Jhl9f9--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0buuw318x6cqp8m8ldq8.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ubahthebuilder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3l78C99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0wqbThHF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/546743/39bfd054-f855-4f9c-b549-17cbb2ee8ac4.png" alt="ubahthebuilder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ubahthebuilder/how-to-build-a-screenshot-downloader-app-with-plain-javascript-in-10-minutes-2j01" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a screenshot downloader app with plain JavaScript in 10 minutes&lt;/h2&gt;
      &lt;h3&gt;Kingsley Ubah ・ Oct 21 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/0shuvo0"&gt;@0shuvo0&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ali6nx404"&gt;@ali6nx404&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/cesscode"&gt;@cesscode&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/pramit_armpit"&gt;@pramit_armpit&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/0shuvo0"&gt;@0shuvo0&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/code_jedi"&gt;@code_jedi&lt;/a&gt;
, nehal_mahida, ruppysuppy, ubahthebuilder .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>👨‍💻[FirstDevRole #1] What are the Real Requirements for Becoming a Programmer?</title>
      <author>Antonio Pekeljevic</author>
      <pubDate>Tue, 26 Oct 2021 11:21:49 +0000</pubDate>
      <link>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</link>
      <guid>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this-about"&gt;
  &lt;/a&gt;
  What is this about? 🥱
&lt;/h2&gt;

&lt;p&gt;In my opinion, the point of writing a blog is to document your journey and share it with other people so hopefully someone finds the information useful. &lt;/p&gt;

&lt;p&gt;Having that said, I have decided to share my experience and what I have learned when it comes to getting a first software developer job.&lt;/p&gt;

&lt;p&gt;I have been through the process three times already so while everything is still relatively fresh and quite a few people asked me for advice on  &lt;a href="https://twitter.com/antoniopkvc"&gt;Twitter&lt;/a&gt;, I decided to document it before it all evaporates into the void.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" alt="Anxious man"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is definitely going to be a series of blog posts with no specific order where I will try to extract the most important information as it comes to me. 🤷‍♂️&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;Anyone who wants to make a career change to IT, is graduating from college, is struggling to get a first job as a programmer or just wants to give programming a try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics-that-will-be-covered"&gt;
  &lt;/a&gt;
  Topics that will be covered
&lt;/h2&gt;

&lt;p&gt;These are some of the topics that I will definitely cover but might add more if I remember something that is important as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the requirements for becoming a programmer&lt;/li&gt;
&lt;li&gt;How to write a no bullshit CV/Resume that will increase your chances of getting hired&lt;/li&gt;
&lt;li&gt;What programming language / framework to start with&lt;/li&gt;
&lt;li&gt;Where to apply for your first job and which ones to consider&lt;/li&gt;
&lt;li&gt;How to build an effective portfolio website&lt;/li&gt;
&lt;li&gt;What projects to build and how&lt;/li&gt;
&lt;li&gt;Creating an effective GitHub profile&lt;/li&gt;
&lt;li&gt;How much experience is needed to start applying to jobs&lt;/li&gt;
&lt;li&gt;When to apply to an Internship vs Real Developer role&lt;/li&gt;
&lt;li&gt;Is your code good enough&lt;/li&gt;
&lt;li&gt;What to be ready for while trying to get your first programming role&lt;/li&gt;
&lt;li&gt;Mindset and motivation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first topic is covered in this post as the title says so let's start! 🦾&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-real-requirements-for-becoming-a-programmer"&gt;
  &lt;/a&gt;
  What are the REAL Requirements for Becoming a Programmer?
&lt;/h2&gt;

&lt;p&gt;Do you need someone to tell you if you are smart enough or do you have what it takes to become a programmer?&lt;/p&gt;

&lt;p&gt;Let me tell you this: &lt;strong&gt;Programming is not for anyone and it's not enough if you can just install Windows on your laptop. It's only for extremely talented people with IQ over 200.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anxiety kicks in?&lt;/p&gt;

&lt;p&gt;Don't worry, I'm just kidding. &lt;/p&gt;

&lt;p&gt;Let's put it this way. If you can read and comprehend what I have written up to this point then you have everything that it takes to become a programmer. You maybe won't be a great one but it's definitely enough to get a job.&lt;/p&gt;

&lt;p&gt;Physical requirements ✔️&lt;/p&gt;

&lt;p&gt;You did some googling or found this post buried deep down in the #TechTwitter history. That means you have enough interest.&lt;/p&gt;

&lt;p&gt;Interest ✔️&lt;/p&gt;

&lt;p&gt;Your friend who is incredibly smart is a software engineer and there is no way that you can be that good?&lt;/p&gt;

&lt;p&gt;Actually, you can. &lt;/p&gt;

&lt;p&gt;I actually know a few people who are generally not that intelligent but are still working as developers.&lt;/p&gt;

&lt;p&gt;If it makes it any easier for you, I had the WORST grades in informatics in elementary school and in programming on college. At least get school out of the way because it's not a valid measure for anything.&lt;/p&gt;

&lt;p&gt;So what's the thing that separates people who can and who cannot become programmers?&lt;/p&gt;

&lt;p&gt;Well, the important things are exactly those two words: CAN and &lt;strong&gt;CANNOT&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Just pick one word and fill in the sentence below to find out the answer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I ___________ become a programmer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Got it? &lt;/p&gt;

&lt;p&gt;It's REALLY a matter of decision. Do you want to become a programmer?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-it-is-a-matter-of-a-decision"&gt;
  &lt;/a&gt;
  Why it is a matter of a decision?
&lt;/h2&gt;

&lt;p&gt;Because if you don't decide firmly, you will quit somewhere along the road. Just make a decision with yourself, and even better write it somewhere, and whenever you think about quitting (which will happen a lot) just remind yourself that you have decided and that there is no way back.&lt;/p&gt;

&lt;p&gt;If you are starting from zero, don't expect a role in the next 1-2 years and be ready to dedicate A LOT of time to learn everything that is necessary to get the job. If you get it earlier than that then even better!&lt;/p&gt;

&lt;p&gt;Not a lot of people can sacrifice that much time and be that patient and that's why programming is labeled as "hard".&lt;br&gt;
It's not hard because you have to study some out of this world science, complex algorithms or math formulas - it's hard because it requires TIME and PATIENCE.&lt;/p&gt;

&lt;p&gt;So basically you have all the "skills" that you need. It is only the question if you are ready to throw yourself into the fire?&lt;/p&gt;

&lt;p&gt;If you were looking for an actual list of requirements in a video game style then here you have it:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements-for-becoming-a-software-engineer"&gt;
  &lt;/a&gt;
  Requirements for becoming a software engineer:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Having a normal functioning brain and being able to type&lt;/li&gt;
&lt;li&gt;Being ready to not being able to get a job even after learning every day for a year &lt;/li&gt;
&lt;li&gt;Basic English language knowledge&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that learning will NEVER end&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that you will fail a lot&lt;/li&gt;
&lt;li&gt;Being comfortable with feeling stupid at times&lt;/li&gt;
&lt;li&gt;Being ready to work on your temper and impulsive reacting&lt;/li&gt;
&lt;li&gt;Being in front of a computer every day&lt;/li&gt;
&lt;li&gt;Being ready to code every day&lt;/li&gt;
&lt;li&gt;Being ready to learn the boring stuff so you can enjoy building fun stuff later&lt;/li&gt;
&lt;li&gt;Being ready to deal with difficult people&lt;/li&gt;
&lt;li&gt;Being ready to read boring or poorly written documentation&lt;/li&gt;
&lt;li&gt;Decreased social life at times&lt;/li&gt;
&lt;li&gt;Being comfortable with dreaming code (literally)&lt;/li&gt;
&lt;li&gt;Being able to think when exhausted at times&lt;/li&gt;
&lt;li&gt;Being able to think under pressure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And last but not least: being ready to help everyone alive with their printers or failing internet connections. (funny but true, you will see)&lt;/p&gt;

&lt;p&gt;If you can sign up for all of these points above then there is nothing else I want to tell you.&lt;/p&gt;

&lt;p&gt;You have it all and are ready to start. ✔️✔️✔️&lt;/p&gt;

&lt;p&gt;All I can tell you is good luck, DON'T QUIT and you will get your job I'm sure of that!😄 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there is a topic that you want me to cover please let me know in the comments and I will gladly add it to my list.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Web, backend, mobile resources and news. </title>
      <author>Developer Nation</author>
      <pubDate>Tue, 26 Oct 2021 10:54:56 +0000</pubDate>
      <link>https://dev.to/developernation/web-backend-mobile-resources-and-news-349g</link>
      <guid>https://dev.to/developernation/web-backend-mobile-resources-and-news-349g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dev-resources"&gt;
  &lt;/a&gt;
  Dev Resources
&lt;/h2&gt;

&lt;p&gt;Here are the latest articles and news from last week's biweekly  &lt;a href="https://content.developereconomics.com/developer-nation-newsletter-signup-form"&gt;newsletter&lt;/a&gt;. Enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-resources-amp-articles"&gt;
  &lt;/a&gt;
  Dev Resources &amp;amp; Articles
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/scottshipp/emojis-in-commit-messages-or-2d32"&gt;Emojis in commit messages: ✅ or ❌?&lt;/a&gt; See what others think, and contribute your own opinion. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dzone.com/articles/will-the-real-senior-dev-please-stand-up-2021-edit"&gt;Will the real senior dev please stand up? (2021 edition).&lt;/a&gt; An update to Tomasz Waraksa's ironic look at the realities of hiring in IT. It's 2021, have companies finally learned what a real senior developer looks like? [DZONE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://theproductmanager.com/tools/best-product-backlog-tools/"&gt;10 best product backlog tools for backlog management.&lt;/a&gt; Without the product backlog, it would not be easy for software development teams to have a coherent idea of the processes they should be prioritizing. [THEPRODUCTMANAGER]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/kovalchuk/8-mobile-app-security-best-practices-developers-should-follow-544o"&gt;8 mobile app security best practices developers should follow.&lt;/a&gt; Best protected applications are those developed using the security by design approach when security is taken into account on the initial stages of the development process. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educba.com/mvvm-vs-mvc/"&gt;Difference between MVVM vs MVC.&lt;/a&gt; The major key differences such as architecture, operation, advantages, and limitations are discussed in this article. [EDUCBA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.engineyard.com/ios-push-notifications-via-apns"&gt;Sending iOS push notifications via APNs.&lt;/a&gt; This blog post discusses in detail the APN services, enable and register for remote notifications, device token ids, and APN node package with the help of a sample iOS. [ENGINEYARD]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://proandroiddev.com/how-i-hacked-an-android-app-for-a-premium-feature-d9ca74e797ad"&gt;How I hacked an Android app for a premium feature.&lt;/a&gt; Merab rewrote the bytecode to unlock premium features of the app on his device and now he shows you how to prevent it from happening to your apps. [PROANDROIDDEV]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/using-websockets-flutter/"&gt;Using WebSockets in Flutter.&lt;/a&gt; This article explores how we can use our own WebSockets to create applications that display real-time data to our users. [LOGROCKET]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.interviewbit.com/blog/front-end-developer-skills/"&gt;Front-end developer skills you must have.&lt;/a&gt; Front-end developers require a combination of technical and soft abilities. If you’re pursuing a career as a Front-end Developer, these are the talents you’ll need to develop. [INTERVIEWBIT]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/50-data-structure-and-algorithms-interview-questions-for-programmers-b4b1ac61f5b0"&gt;Top 50 data structure and algorithms interview questions for programmers.&lt;/a&gt; Frequently asked programming interview questions from different interviews for programmers at different levels of experience. [MEDIUM.JAVAREVISITED]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bitsrc.io/javascript-worst-practices-dc78e19d6f12"&gt;JavaScript worst practices.&lt;/a&gt; Let’s take a quick look at 5 of the worst things you can do to your code while writing JavaScript. [BITSRC]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dzone.com/articles/you-cant-keep-building-on-a-broken-system-why-mana"&gt;You can’t keep building on a broken system: why managing technical debt is so important.&lt;/a&gt; Managing technical debt is important if you want to move more quickly, retain top engineering talent, and avoid re-writing your app from scratch. [DZONE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.googleblog.com/2021/10/what-is-the-dev-library.html"&gt;What is Google’s Dev Library?&lt;/a&gt; Google decided to create a space where the best projects related to Google technologies can be highlighted in one place. [DEVELOPERS.GOOGLEBLOG]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/lambdatesting/what-happens-when-you-use-virtualization-in-software-testing-1l92"&gt;What is data virtualization and why use it?&lt;/a&gt; What happens when you use virtualization in software testing? [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackify.com/what-are-microservices/"&gt;What are microservices? Code examples, best practices, tutorials and more.&lt;/a&gt; We’ll take a look at microservices, the benefits of using this capability, and a few code examples. [STACKIFY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tediousjs/tedious"&gt;Node TDS module for connecting to SQL Server databases.&lt;/a&gt; Tedious is a pure-Javascript implementation of the TDS protocol, which is used to interact with instances of Microsoft's SQL Server. [TEDIOUSJS]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.serverless.com//blog/introducing-serverless-cloud-public-preview"&gt;Introducing Serverless Cloud.&lt;/a&gt; The hyper-productive #serverless app platform with single second deployments is now open to everyone. [SEVERLESS]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bigbinary.com/blog/rails-7-adds-ability-to-use-predefined-variants"&gt;Rails 7 adds the ability to use pre-defined variants.&lt;/a&gt; See how. [BIGBINARY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/educative/crack-the-top-40-machine-learning-interview-questions-1e2c"&gt;Crack the top 40 machine learning interview questions.&lt;/a&gt; From basic to more advanced questions. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.springboard.com/blog/ai-machine-learning/machine-learning-resume/"&gt;How to build a strong machine learning resume.&lt;/a&gt; Here are several pointers to ensure that your resume is in top shape before you send it to the next recruiter or hiring manager. [SPRINGBOARD]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://machinelearningmastery.com/a-tour-of-attention-based-architectures/"&gt;A tour of attention-based architectures.&lt;/a&gt; Gain a better understanding of how the attention mechanism is incorporated into different neural architectures and for which purpose. [MACHINELEARNINGMASTERY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/10/mlops-and-the-importance-of-data-drift-detection/"&gt;The importance of data drift detection that data scientists do not know.&lt;/a&gt; Understand the different types of data drift and the method for detecting them. [ANALYTICSVIDHYA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://news.mit.edu/2021/artificial-networks-learn-smell-like-the-brain-1018"&gt;Artificial networks learn to smell like the brain.&lt;/a&gt; When asked to classify odors, artificial neural networks adopt a structure that closely resembles that of the brain’s olfactory circuitry. [MIT]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#industry-news"&gt;
  &lt;/a&gt;
  Industry News
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://machinelearningmastery.com/a-tour-of-attention-based-architectures/"&gt;A tour of attention-based architectures.&lt;/a&gt; Gain a better understanding of how the attention mechanism is incorporated into different neural architectures and for which purpose. [MACHINELEARNINGMASTERY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/10/mlops-and-the-importance-of-data-drift-detection/"&gt;The importance of data drift detection that data scientists do not know.&lt;/a&gt; Understand the different types of data drift and the method for detecting them. [ANALYTICSVIDHYA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://news.mit.edu/2021/artificial-networks-learn-smell-like-the-brain-1018"&gt;Artificial networks learn to smell like the brain.&lt;/a&gt; When asked to classify odors, artificial neural networks adopt a structure that closely resembles that of the brain’s olfactory circuitry. [MIT]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theverge.com/2021/10/12/22722130/google-ios-app-material-design-components-uikit"&gt;Google says it’s dropping Material Design components on iOS in favour of Apple’s UIKit.&lt;/a&gt; Google says the result of the switch should be less work for its iOS development team, but, more importantly, it’s likely the change will mean that Google’s iOS apps will feel less like interlopers on Apple devices. [THEVERGE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.zdnet.com/article/thanks-to-a-nasty-gpsd-bug-real-life-time-travel-trouble-arrives-this-weekend/"&gt;Thanks to a nasty GPSD bug, real-life time travel trouble arrives this weekend.&lt;/a&gt; On October 24, 2021, some time-keeping systems are going to take a trip back in time to March 2012, unless you update your GPSD programs. Find out more. [ZDNET] - old article from last week - did you experience any issues?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://about.gitlab.com/blog/2021/10/14/gitlab-inc-takes-the-devops-platform-public/"&gt;GitLab goes public.&lt;/a&gt; GitLab was the first company to publicly live stream the entire end-to-end listing day at Nasdaq. Sid Sidbrandij shares the news and a copy of the founders letter. [GITLAB]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.inputmag.com/tech/ibm-will-offer-free-cobol-training-to-address-overloaded-unemployment-systems"&gt;IBM will offer free COBOL training to address overloaded unemployment systems.&lt;/a&gt; Many systems that process unemployment claims in the USA still run on a 60-year-old programming language that relatively few coders understand. [INPUTMAG]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.neowin.net/news/microsoft-highlights-the-ui-changes-coming-in-visual-studio-2022-including-new-icons/"&gt;Microsoft highlights the UI changes coming in Visual Studio 2022, including new icons.&lt;/a&gt; The IDE offers numerous improvements upon its predecessor, Visual Studio 2019, including the fact that it comes in a 64-bit flavor, supports .NET 6 and C++ 20, offers better performance for the core debugger, and supports text chat during Live Share sessions. [NEOWIN]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.googleblog.com/2021/10/announcing-devfest-2021.html"&gt;DevFest 2021.&lt;/a&gt; Hosted by Google Developer Groups (GDG) all across the globe, DevFest events are uniquely curated by their local GDG organizers to fit the needs and interests of the local community. [DEVELOPERS.GOOGLEBLOG]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-hits"&gt;
  &lt;/a&gt;
  Quick Hits
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-9/"&gt;Announcing .NET MAUI Preview 9.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://parceljs.org/blog/v2/"&gt;Parcel v2.0.0 stable is now available.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://crystal-lang.org/2021/10/14/1.2.0-released.html"&gt;Crystal 1.2.0 is released.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.jetbrains.com/phpstorm/2021/10/phpstorm-2021-2-3-is-released/"&gt;PhpStorm 2021.2.3 is released.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devnews</category>
      <category>webdev</category>
      <category>mobile</category>
      <category>backend</category>
    </item>
    <item>
      <title>Day 18 of 100 Days of Code &amp; Scrum: The 3Cs of User Stories and Canceled Session</title>
      <author>Rammina</author>
      <pubDate>Tue, 26 Oct 2021 10:51:54 +0000</pubDate>
      <link>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</link>
      <guid>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Today was an irregular Tuesday for me. Firstly, my physical therapy session was canceled because of a heavy flash flood the previous day. I wasn't sure what to do with my extra four hours for the day. I'm a person who lets my own routine guide my day-to-day life, so it feels really weird when things go differently from the usual.&lt;/p&gt;

&lt;p&gt;I spent that time doing research on "The 3Cs of User Stories" which I intend to add as another section inside my &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;user story guide&lt;/a&gt;. I think I will update it tomorrow.&lt;/p&gt;

&lt;p&gt;I also found some weird paragraphs on my user story guide, which I corrected so that it reads smoothly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" alt="Focus Spam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That 3-in-a-row &lt;code&gt;focus&lt;/code&gt; was so repetitive to read, I had to update it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I posted the initial draft for my guide, &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;"The Art of Writing Agile User Stories"&lt;/a&gt;. I'm really happy and grateful that it was successful and well-received. It's actually the first serious guide I uploaded on this platform, so I was pretty worried about it. Thank you to everyone who supported me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" alt="3C of User Stories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read up on &lt;em&gt;the 3C of User Stories&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;according to the above, a user story should have:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Card&lt;/code&gt; - a written description of the story to be used for estimation and planning.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Conversation&lt;/code&gt; - ensure a clear understanding by discussing with others. This can be through asking questions, sharing ideas, and working toward solutions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Confirmation&lt;/code&gt; - agree upon what to build, then record the said agreement. This allows for confirmation tests to ensure that the user story is completed.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;did more practice quizzes on Scrum (almost finished with Lapshin's quizzes, so I might have to get a different set soon).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you once again for everyone's support! I wish you all the best, and have a good day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" alt="Thank You Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visual-paradigm.com/scrum/3c-and-invest-guide/"&gt;Effective User Stories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setting Up a Modern Windows Terminal for Developers in A Few Steps</title>
      <author>Thang Chung</author>
      <pubDate>Tue, 26 Oct 2021 10:41:07 +0000</pubDate>
      <link>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</link>
      <guid>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</guid>
      <description>&lt;p&gt;Somebody asks me to guide them setting up the better terminal for development as below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I answered to them several times, and I would like another people to use some kind of cool terminal just like this. So I documented it down in this post.&lt;/p&gt;

&lt;p&gt;I combine between Windows Terminal (&lt;code&gt;1.11.2921&lt;/code&gt;), nushell (&lt;code&gt;0.38.0&lt;/code&gt;), and starship (0.58.0) on Windows 10 machine.&lt;/p&gt;

&lt;p&gt;You can find the references at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows Terminal: &lt;a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701"&gt;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NuShell: &lt;a href="https://community.chocolatey.org/packages?q=nushell"&gt;https://community.chocolatey.org/packages?q=nushell&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Starship: &lt;a href="https://community.chocolatey.org/packages?q=Starship"&gt;https://community.chocolatey.org/packages?q=Starship&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After installing all of them on your Windows OS machine, you need to go to Nerd Font (&lt;a href="https://www.nerdfonts.com"&gt;https://www.nerdfonts.com&lt;/a&gt;) and install fonts there to have a better icons on your Windows Terminal.&lt;/p&gt;

&lt;p&gt;Some of configuration, you need to set to make sure &lt;code&gt;nushell&lt;/code&gt; can integrate good with &lt;code&gt;starship&lt;/code&gt; as below&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;Windows Terminal&lt;/code&gt; settings, and open the settings file as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then make sure you add the settings for &lt;code&gt;nushell&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"commandline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nu.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"fontFace"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fira Code"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{2b372ca1-1ee2-403d-a839-6d63077ad871}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Nu Shell"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And final step, you need to open up the &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\AppData\Roaming\nushell\nu\config&lt;/code&gt;, and find &lt;code&gt;config.toml&lt;/code&gt; (if there is no config.toml, then you have to create one). And putting some of configuration for it as following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;prompt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"starship prompt"&lt;/span&gt;
&lt;span class="py"&gt;startup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;"alias ll = ls -la"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias d = docker"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias nw = cd D:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;northwind-minimal-apis"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The config for &lt;code&gt;starship&lt;/code&gt; is at &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\.starship\config.toml&lt;/code&gt;, but you don't need to put anything more :)&lt;/p&gt;

&lt;p&gt;Close all current terminal windows, and open it up again.&lt;br&gt;
Happy hacking!!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Top apps to learn something new every day</title>
      <author>Hyperlink InfoSystem Canada</author>
      <pubDate>Tue, 26 Oct 2021 10:33:17 +0000</pubDate>
      <link>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</link>
      <guid>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</guid>
      <description>&lt;p&gt;Today, most of us live such hectic lives that it seems impossible to find time to rest or to do something that does not belong to the daily routine. But, what if instead of wasting time doing activities that are useless, we find a moment to learn something new and thus increase our cultural level?&lt;/p&gt;

&lt;p&gt;In that free time, we could learn a new language, some words of ours that we did not know, some history and culture, geography, science and nature or simply small data to retain in our memory. &lt;/p&gt;

&lt;p&gt;Thus, at bedtime, we will know that we have been able to learn something that we did not know yesterday. There are a large number of &lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;educational applications&lt;/a&gt; designed to expand our knowledge, open our sights and teach us little curiosities that will expand our horizons.&lt;/p&gt;

&lt;p&gt;To help you in this enrichment process, we are going to give you some of the best applications that will allow you to learn something new every day.&lt;/p&gt;

&lt;p&gt;• Babbel&lt;br&gt;
It is an app and also a platform for language learning. One of the most striking features of this tool is that it is intuitive and functional, and it also allows you to study at the pace you prefer: you decide how much you learn each day, and each lesson lasts only 15 minutes.&lt;/p&gt;

&lt;p&gt;In this way, you can organize yourself according to the type of person you are and it will give you greater comfort when combining it with the different activities you have to do. Babbel app includes multiple languages, so you can choose what you prefer. &lt;/p&gt;

&lt;p&gt;It is visual and attractive, easy to use and fun thanks to its great interaction. But that's not all, since Babbel is not just for learning languages in the strict sense. &lt;/p&gt;

&lt;p&gt;It will allow you to discover many other things, some curiosities about the world of languages that perhaps you did not know, such as what languages are spoken in Switzerland, what is the official language of Belgium and so on.&lt;/p&gt;

&lt;p&gt;• Curiosities of history&lt;br&gt;
It is a tool that any fan of history will not be able to avoid downloading, but it can be used by anyone. As we can guess, it is an application focused on universal history, with educational content explained in simple and easy-to-understand words. &lt;/p&gt;

&lt;p&gt;It proposes a broad and enriching review of the great epochs of history and of all the historical moments that delineated the present. It is, in short, a fun game that allows you to get closer to the knowledge of names, data and even relevant dates in the history of the world.&lt;/p&gt;

&lt;p&gt;Each day will offer you a curiosity or a different piece of information, you will not have to do anything else, simply read the entry that interests us and enjoy content written by a real and professional team of historians. &lt;/p&gt;

&lt;p&gt;Besides that, you can always have a curious fact to impress others.&lt;/p&gt;

&lt;p&gt;• World geography&lt;br&gt;
As its name can anticipate, we are facing an application not only ideal for learning data about other countries or continents that we did not know, but it can also become the lifeline of many young people, who are currently trying to learn the different capitals, flags, coins even religions of each country. &lt;/p&gt;

&lt;p&gt;World Geography offers you a wide variety of games with more than 6,000 questions divided into different levels and will help you by showing you images of each place (it has a repertoire of more than 2,000 images). &lt;/p&gt;

&lt;p&gt;It will help you to place the countries of the world in a pleasant and even fun way, with quizzes and questions about the flags and capitals of all countries. Put your knowledge and intelligence to the test in this new challenge.&lt;/p&gt;

&lt;p&gt;• Google Arts and Culture&lt;br&gt;
This app allows you to visit the most important museums around the world and enjoy the great variety of works of art appreciating even the smallest detail. &lt;/p&gt;

&lt;p&gt;You can also discover photographs, videos and manuscripts and even create your collection of favorite works of art to share with your friends.&lt;/p&gt;

&lt;p&gt;Google Arts and Culture has a collaboration with more than 1,200 museums, galleries and institutes in 70 countries, to offer its wonders online to users.&lt;/p&gt;

&lt;p&gt;With this application, you can receive more information about the works of art by pointing the camera of your device towards them when visiting a museum. By enabling notifications, you will know the most outstanding news from the world of art and culture every day. &lt;/p&gt;

&lt;p&gt;As you may have understood, it is the perfect application for art lovers, students of this subject or for those who want to learn something new on the subject simply through one click.&lt;/p&gt;

&lt;p&gt;• 7-minute workout&lt;br&gt;
Despite the fact that physical exercise should be something common in our day to day, many of us remember it only when the good weather arrives and the time to show off our body in summer approaches. &lt;/p&gt;

&lt;p&gt;If you want to start exercising but don't have the time or desire to go to the gym, with 7-minute training, you can exercise without leaving your home. &lt;/p&gt;

&lt;p&gt;This application offers centralized training programs based on HICT (high intensity circuit training) exercises, so it can be of great help if you have little free time. &lt;/p&gt;

&lt;p&gt;You will be able to realize the first results after a few days and you will see that all the efforts are worth it. The only thing you need to carry them out is a wall and a chair to support you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;Choose the right app&lt;/a&gt; for your needs and improve your lifestyle starting with small steps. It is never too late to learn something new.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My First Bash trying.</title>
      <author>Lucifer25x</author>
      <pubDate>Tue, 26 Oct 2021 10:33:08 +0000</pubDate>
      <link>https://dev.to/lucifer25x/my-first-bash-trying-2p4</link>
      <guid>https://dev.to/lucifer25x/my-first-bash-trying-2p4</guid>
      <description>&lt;p&gt;Github: &lt;a href="https://github.com/Lucifer25x/bash-test"&gt;https://github.com/Lucifer25x/bash-test&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Any trouble debugging in Golang?</title>
      <author>Joe Groom</author>
      <pubDate>Tue, 26 Oct 2021 10:27:48 +0000</pubDate>
      <link>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</link>
      <guid>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</guid>
      <description>&lt;p&gt;This is your invite to 'Debugging in Golang' 🚫👾&lt;/p&gt;

&lt;p&gt;Our Golang eSeries II start's this Thursday at 19.30 CET 🎥🎃👻. We have a GopherCon speaker, Derek Parker from RedHat discussing debugging in Go&lt;/p&gt;

&lt;p&gt;🎫 Register here: &lt;a href="https://lnkd.in/dCfzQ2ZS"&gt;https://lnkd.in/dCfzQ2ZS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⏰ 1 Hour Event format:&lt;br&gt;
⭐ Gopher cards ice breaker game 🃏&lt;br&gt;
⭐ Debugging in Go (test your knowledge with tech quiz Qs) 🏆&lt;br&gt;
⭐ Q &amp;amp; A with Derek (prizes for best ranked Qs) 🎁&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Understanding equality of values in JavaScript (+ React useEffect dependencies)</title>
      <author>Yohann Legrand</author>
      <pubDate>Tue, 26 Oct 2021 10:10:48 +0000</pubDate>
      <link>https://dev.to/alarid/understanding-equality-of-values-in-javascript-react-useeffect-dependencies-14kl</link>
      <guid>https://dev.to/alarid/understanding-equality-of-values-in-javascript-react-useeffect-dependencies-14kl</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@tingeyinjurylawfirm"&gt;Tingey Injury Law Firm&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;☕️ &lt;em&gt;&lt;a href="https://javascript-for-breakfast.com/understanding-equality-of-values-in-javascript"&gt;Read this article on my blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Equality of values in JavaScript: for years, this has been a quite obscure topic for me. How many times have I been confused by an if statement behaving in a surprising way, I cannot count. So: what are we talking about anyway? Check out this piece of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userA&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;userB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Both users are the same&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Users A and B are different&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think the output will be when this code runs? Think about it for a second.&lt;/p&gt;

&lt;p&gt;
  💡 Reveal answer
  &lt;p&gt;✅ If your answer was &lt;code&gt;Users A and B are different&lt;/code&gt;, you're right, congrats 🍾 &lt;/p&gt;

&lt;/p&gt;

&lt;p&gt;Does this answer surprise you? Well, that is what we are going to talk about in this blog post. So let's clarify this, shall we? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-value-types"&gt;
  &lt;/a&gt;
  1. Value types
&lt;/h2&gt;

&lt;p&gt;The first step in understanding the equality of values is knowing the possible types for these values. In our JavaScript universe, we manipulate values all the time, and they can either be &lt;strong&gt;primitive values&lt;/strong&gt;, or they can be of &lt;strong&gt;a special type&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-primitive-values"&gt;
  &lt;/a&gt;
  1.1. Primitive values
&lt;/h3&gt;

&lt;p&gt;Here is the exhaustive list of all the primitive values that we can encounter in our universe, with examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;booleans =&amp;gt; &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;numbers =&amp;gt; &lt;code&gt;7&lt;/code&gt;, &lt;code&gt;42&lt;/code&gt;, &lt;code&gt;2048&lt;/code&gt;, ...&lt;/li&gt;
&lt;li&gt;bigints =&amp;gt; &lt;code&gt;6549846584548n&lt;/code&gt; &lt;em&gt;(the n at the end is what makes it a BigInt&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;strings =&amp;gt; &lt;code&gt;"Apple"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;symbols =&amp;gt; &lt;code&gt;Symbol()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;undefined =&amp;gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;null =&amp;gt; &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it. Please note that there is only one possible value for the primitive type &lt;code&gt;undefined&lt;/code&gt;, and that is... &lt;code&gt;undefined&lt;/code&gt;. The same goes for the type &lt;code&gt;null&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// null &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am now gonna make a statement that might shock you, brace yourself, you'll be alright: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;All primitive values &lt;em&gt;already exist&lt;/em&gt; in the JavaScript universe&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means &lt;strong&gt;it's impossible to create a brand new value of a primitive type&lt;/strong&gt;. I know, weird, right? When you do  this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;likes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;views&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are creating two &lt;strong&gt;variables&lt;/strong&gt; that &lt;strong&gt;point&lt;/strong&gt; to the already existing value &lt;code&gt;0&lt;/code&gt;, which is a &lt;code&gt;number&lt;/code&gt;. This can be represented as the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ilJRW0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242011697/A1f5vO1Nc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ilJRW0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242011697/A1f5vO1Nc.png" alt="Pasted image 20211026103044.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's even more surprising when we talk about strings:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The string &lt;code&gt;"John Doe"&lt;/code&gt; isn't actually created out of nowhere, it &lt;strong&gt;already exists&lt;/strong&gt;, you're just pointing to it. This might sound crazy, but it's crucial to understand when it comes to equality of values. Just imagine a world where all possible values for each primitive type already exist, waiting for a variable to point to them. &lt;/p&gt;

&lt;p&gt;Knowing this, it becomes obvious that those assertions are all truthy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ✅ true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ✅ true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ✅ true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ✅ true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#12-special-types"&gt;
  &lt;/a&gt;
  1.2. Special types
&lt;/h3&gt;

&lt;p&gt;Ok, so far we've understood that all primitive values already exist, and that writing &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;hello&lt;/code&gt; in our code always "summons" the same number or string value. &lt;/p&gt;

&lt;p&gt;Special types, however, behave very differently, and allow us to generate &lt;strong&gt;our own values&lt;/strong&gt;. They are only two special types in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Objects =&amp;gt; &lt;code&gt;{firstname: 'John', lastname: 'Doe'}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Functions =&amp;gt; &lt;code&gt;function hello() { console.log('hello') }&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When writing &lt;code&gt;{}&lt;/code&gt; or &lt;code&gt;() =&amp;gt; {}&lt;/code&gt;, it &lt;strong&gt;always&lt;/strong&gt; create a brand new different value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;banana&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;banana&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// ❌ false: they are different values !&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we take a look back at our first example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a brand new object with properties firstname and lastname&lt;/span&gt;
&lt;span class="c1"&gt;// pointing to the already existing strings "John" and "Doe"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Again, create a brand new object with properties firstname and lastname&lt;/span&gt;
&lt;span class="c1"&gt;// pointing to the already existing strings "John" and "Doe"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// userA and userB are totally different objects&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userA&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;userB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Both users are the same&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...so they are "different", even though their properties are equal&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Users A and B are different&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;userA&lt;/code&gt; and &lt;code&gt;userB&lt;/code&gt; both point to a brand new object. Each object has a property &lt;code&gt;firstname&lt;/code&gt; pointing to the one and only string value '&lt;code&gt;John'&lt;/code&gt;, and a property &lt;code&gt;lastname&lt;/code&gt; pointing to the one and only string value &lt;code&gt;Doe&lt;/code&gt;. Here is a sketch of the variables &lt;code&gt;userA&lt;/code&gt; and &lt;code&gt;userB&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o-oDQ-0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242041139/V3JHYKJHm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o-oDQ-0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242041139/V3JHYKJHm.png" alt="Pasted image 20211018130700.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Properties of an object can be seen as wires pointing to a value. Nothing more, nothing less. They can either point to primitive values, as is the case here, or they can also point to special types like other objects:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iS7Scwka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242068999/bvcXBetsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iS7Scwka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635242068999/bvcXBetsz.png" alt="Pasted image 20211018131351.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-types-of-equality"&gt;
  &lt;/a&gt;
  2. Types of equality
&lt;/h2&gt;

&lt;p&gt;In JavaScript, they are several kinds of equality:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Strict Equality: &lt;code&gt;a === b&lt;/code&gt; (triple equals).&lt;/li&gt;
&lt;li&gt;  Loose Equality: &lt;code&gt;a == b&lt;/code&gt; (double equals).&lt;/li&gt;
&lt;li&gt;  Same Value Equality: &lt;code&gt;Object.is(a, b)&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rules of loose equality (also called "abstract equality") can be confusing, which is why many coding standards nowadays prohibit its use altogether. &lt;/p&gt;

&lt;p&gt;Nowadays web coding standards mainly use strict equality and same value equality. They behave mostly the same way, except &lt;em&gt;two rare cases&lt;/em&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;NaN === NaN&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, although they are the same value &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-0 === 0&lt;/code&gt; and &lt;code&gt;0 === -0&lt;/code&gt; are true, although they are different values.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Fun fact: Despite Object in the method name, &lt;code&gt;Object.is&lt;/code&gt; is not specific to objects. It can compare any two values, whether they are objects or not!&lt;br&gt;
&lt;code&gt;console.log(Object.is(2, 2)) // ✅ true&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-conclusion"&gt;
  &lt;/a&gt;
  3. Conclusion
&lt;/h2&gt;

&lt;p&gt;🌯 Let's wrap things up: so far we've learned that primitive values in JavaScript can't be created, they already exist. Special type values, however, like &lt;strong&gt;objects&lt;/strong&gt; or &lt;strong&gt;functions&lt;/strong&gt;, are always generated to give us brand new values, which is why two objects or functions will never be &lt;strong&gt;strictly&lt;/strong&gt; the same (&lt;code&gt;===&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;Objects have properties, which can be seen as wires pointing to primitive values, or to other objects. This can be confusing if two objects have properties pointing to the same values, like the ones in our very first example at the top: they may look the same, but they are indeed &lt;strong&gt;two different objects&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To build a reliable mental model around this, it's particularly useful to visualize wires going from our variables and pointing to values in the JavaScript universe. I have used &lt;a href="https://excalidraw.com/"&gt;Excalidraw&lt;/a&gt; to sketch the diagrams for this blog post, and I highly encourage you to try it out on real-world scenarios to sharpen your mental model. &lt;/p&gt;

&lt;p&gt;This post was inspired by the fabulous &lt;a href="https://justjavascript.com/"&gt;Just JavaScript Course&lt;/a&gt; by &lt;a href="https://twitter.com/dan_abramov"&gt;Dan Abramov&lt;/a&gt;, illustrated by &lt;a href="https://maggieappleton.com/"&gt;Maggie Appleton&lt;/a&gt;. The course is really affordable and definitely worth spending some time on. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-bonus-react-hook-dependencies"&gt;
  &lt;/a&gt;
  4. Bonus: React hook dependencies
&lt;/h2&gt;

&lt;p&gt;If you're using React, it is very likely that you have to manage &lt;code&gt;useEffect&lt;/code&gt; dependencies here and then. Understanding equality of values is particularly important in this case, because as I mentioned previously on my post &lt;a href="https://javascript-for-breakfast.com/master-the-art-of-reactuseeffect"&gt;Master the art of React.useEffect&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React relies on &lt;strong&gt;value stability&lt;/strong&gt; for &lt;code&gt;useEffect&lt;/code&gt; dependencies&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that if you have a dependency which value isn't stable from a render to another, your &lt;code&gt;useEffect&lt;/code&gt; will in fact run on &lt;strong&gt;every render&lt;/strong&gt;. React will see that one of the dependencies has changed, so it will run the &lt;code&gt;useEffect&lt;/code&gt; to synchronize with it. Here is a (&lt;em&gt;really contrived&lt;/em&gt;) example to illustrate my point:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Count is too high !&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;running check on count value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What we want in this situation is our &lt;code&gt;useEffect&lt;/code&gt; to run every time &lt;code&gt;count&lt;/code&gt; changes. Because we use the &lt;code&gt;alertCountOver&lt;/code&gt; function in the &lt;code&gt;useEffect&lt;/code&gt;, our dear ESLint plugin has told us we should include it in our dependencies array. &lt;/p&gt;

&lt;p&gt;The problem is: &lt;code&gt;alertCountOver&lt;/code&gt; isn't stable! In fact, every time this component will render, the &lt;code&gt;alertCountOver&lt;/code&gt; variable is assigned to &lt;strong&gt;a brand new function&lt;/strong&gt;, so its value will always be different from previous renders. This results in our &lt;code&gt;useEffect&lt;/code&gt; running on every render. Whoops 🥴 &lt;/p&gt;

&lt;p&gt;This is why understanding the difference between &lt;strong&gt;primitive values&lt;/strong&gt;, &lt;strong&gt;special types values&lt;/strong&gt; and how they behave when performing strict equalities is crucial here.&lt;/p&gt;

&lt;p&gt;There are two possible solutions in our case:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Extract the function &lt;code&gt;alertCountOver&lt;/code&gt; outside of our component's body: this way the assignment will only occur once, and the value will become stable.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ✅ This is fine &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Count is too high !&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// ... &lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Memoize&lt;/strong&gt; the value of &lt;code&gt;alertCountOver&lt;/code&gt; to make it stable:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// ✅ This is fine &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Count is too high !&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

    &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;alertCountOver&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// ... &lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To learn more about memoization in React, check out &lt;a href="https://kentcdodds.com/blog/usememo-and-usecallback"&gt;this blog post by Kent C. Dodds&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;That's all for today's breakfast folks. If you liked this post, feel free to share it with your friends/colleagues and leave your thoughts in the comments!&lt;/p&gt;

&lt;p&gt;Have a fantastic day,&lt;/p&gt;

&lt;p&gt;With 🧡, Yohann&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
  </channel>
</rss>
