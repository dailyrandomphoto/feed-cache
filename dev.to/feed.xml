<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>40 Amazing Chrome Extensions for Web Developers and Designers</title>
      <author>Savio Martin</author>
      <pubDate>Sat, 17 Apr 2021 03:52:01 +0000</pubDate>
      <link>https://dev.to/saviomartin/40-amazing-chrome-extensions-for-web-developers-and-designers-oi6</link>
      <guid>https://dev.to/saviomartin/40-amazing-chrome-extensions-for-web-developers-and-designers-oi6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-devs"&gt;
  &lt;/a&gt;
  Hello Devs 👋
&lt;/h1&gt;

&lt;p&gt;This is Savio here. I'm young dev with an intention to enhance as a successful web developer. I love building web apps with React. I have proved my superiority in frontend technologies.&lt;/p&gt;

&lt;p&gt;Today, I'm gonna share 34 Must have chrome extensions for developers. These extensions are really helpful to developers and fasten our job. So, consider installing these extensions. At the last, I have provided the &lt;a href="#the-top-10-extentions-i-would-strongly-recommend-installing"&gt;top 10 extensions&lt;/a&gt; for developers. Those are the extensions I could not live with, huh!! So, let's get started&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quickcode"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/quickcode-free-online-pro/nnigpbiaggiephcndokoaongeefpbdcj?hl=en"&gt;QuickCode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quick Code Curates Free Online Programming Courses and serves best courses everyday.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzPmshJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/1wAIICr-Lojc5zNRYnNw6hxoNkoXdhltYD8tNf_wnvXHbYhkme5ZlAGhsrB5LM1-Dcceks8GWD4-Ujrgf6eZpIt2NQ%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzPmshJD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/1wAIICr-Lojc5zNRYnNw6hxoNkoXdhltYD8tNf_wnvXHbYhkme5ZlAGhsrB5LM1-Dcceks8GWD4-Ujrgf6eZpIt2NQ%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lambdatest-screenshots"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/lambdatest-screenshots/fjcjehbiabkhkdbpkenkhaahhopildlh?hl=en"&gt;LambdaTest Screenshots&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Generate Screenshots on different mobile and desktop browsers from Google Chrome.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wX724UXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/JMSxDz8ziXp-uhzBO8_ophbQbEC2NNiIrryDTbOSVac9umzg4Sm5zVkLlrJyJxCQpDcwiUm562U3stmPZDrX5w3vxg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wX724UXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/JMSxDz8ziXp-uhzBO8_ophbQbEC2NNiIrryDTbOSVac9umzg4Sm5zVkLlrJyJxCQpDcwiUm562U3stmPZDrX5w3vxg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notion-web-clipper"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk?utm_source=chrome-ntp-icon"&gt;Notion Web Clipper&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Notion Web Clipper help you to save any page on the web to your Notion workspace. Capture and organize all the articles, research and inspiration you want, and we’ll help you turn them into action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JAyCzYuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SIyOTAs-enEGyJc7Ow5AHKbvxbLlCicbp-9K_fyLBGBH6z8bDyEVtHl6Zh0D98m97q6mUSCpLg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JAyCzYuW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SIyOTAs-enEGyJc7Ow5AHKbvxbLlCicbp-9K_fyLBGBH6z8bDyEVtHl6Zh0D98m97q6mUSCpLg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colorzilla"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp"&gt;ColorZilla&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;With ColorZilla you can get a colour reading from any point in your browser, quickly adjust this colour and paste it into another program. And it can do so much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s72szLEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/P77_Pe5xvds-T4r2LJZhj2nIZ7JS7n58mOI9AhpwvTquBlvy0DvZ3YSADGIjsAaLjDbvrit_Rg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s72szLEt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/P77_Pe5xvds-T4r2LJZhj2nIZ7JS7n58mOI9AhpwvTquBlvy0DvZ3YSADGIjsAaLjDbvrit_Rg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#light-house"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk"&gt;Light House&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Lighthouse is an open-source, automated tool for improving the quality of web pages. You can run it against any web page, public or requiring authentication. It has audits for performance, accessibility, progressive web apps, SEO and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yAKAZxuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/yCGpSNQaRHqnMKlE5ouDhz13ifc0R4XB0feEAw3NigGUYbNqat6SUohy7rNJcT5VFZlTBpJM-A%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yAKAZxuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/yCGpSNQaRHqnMKlE5ouDhz13ifc0R4XB0feEAw3NigGUYbNqat6SUohy7rNJcT5VFZlTBpJM-A%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wappalyzer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/notion-web-clipper/knheggckgoiihginacbkhaalnibhilkk?utm_source=chrome-ntp-icon"&gt;Wappalyzer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Wappalyzer is a technology profiler that shows you what websites are built with. Wappalyzer is more than a CMS detector or framework detector: it uncovers more than a thousand technologies in dozens of categories such as programming languages, analytics, marketing tools, payment processors, CRM, CDN and others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39hVz-LW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/QVwNvDyEfFZIJdRsmSQA6NPLAWxkmyrUPR-SH5tQ7D4KiIYR-jzN9NTis-XTZXergz7AHuoSIQ%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39hVz-LW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/QVwNvDyEfFZIJdRsmSQA6NPLAWxkmyrUPR-SH5tQ7D4KiIYR-jzN9NTis-XTZXergz7AHuoSIQ%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fake-filter"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/fake-filler/bnjjngeaknajbdcgpfkgnonkmififhfo?hl=en"&gt;Fake Filter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Fake Filler is the form filler to fill all input fields on a page with randomly generated fake data. This productivity-boosting extension is a must for developers and testers who work with forms as it eliminates the need for manually entering values in fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AekELty3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/fSTHhGhDxdJ8MENpqJ0ARXWjH4YuMXUtSCKtu0ar-PrwqK-y9XRJjProjIj1_78kbKBZIGy6-g%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AekELty3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/fSTHhGhDxdJ8MENpqJ0ARXWjH4YuMXUtSCKtu0ar-PrwqK-y9XRJjProjIj1_78kbKBZIGy6-g%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#momentum"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca"&gt;Momentum&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Replace the new tab page with a personal dashboard featuring to-do, weather, and inspiration. New Tab page that gives you a moment of calm and inspires you to be more productive. Get inspired with a daily photo and quote, set a daily focus, and track your to-dos. Eliminate distractions and beat procrastination with a reminder of your focus for the day on every new tab. Join over 3 million users and get inspired to create the life you want to live.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MnrzFCEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/OryysSulTbqk6jFUnho43mJag_cFJAStSC_qzi8KxTqAeculMNbSKJ_6zAUECPUjyJ2rsfCpnw%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MnrzFCEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/OryysSulTbqk6jFUnho43mJag_cFJAStSC_qzi8KxTqAeculMNbSKJ_6zAUECPUjyJ2rsfCpnw%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cssviewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce"&gt;CSSViewer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CSSViewer is a simple CSS properties viewer originally made by Nicolas Huon as a FireFox add-on (2006-2008).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yP5WSDKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/NZMW7YOEbW0hpZcJRTRcApO4jJpcGGj7QIdwkTfND27UwbW_sF6BuuHlfT4SAzLgdmxzQRM4%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yP5WSDKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/NZMW7YOEbW0hpZcJRTRcApO4jJpcGGj7QIdwkTfND27UwbW_sF6BuuHlfT4SAzLgdmxzQRM4%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dailydev"&gt;
  &lt;/a&gt;
  &lt;a href="https://api.daily.dev/get?r=savio"&gt;daily.dev&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Daily.dev is a news aggregator, especially for software developers. With daily.dev, you will stay updated with the best articles from the best tech publications on any topic. Get all the content you love in one place -- CSS-Tricks, Smashing Magazine, web.dev, and +350 sources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JVwpzlg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/tzk97mQl5ifHhbqtHLmbWC4SOBJiCIEk8xO0wzIYKu-J5yZOn7yHy3I5jvmW3lL-w3U8l403qw%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JVwpzlg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/tzk97mQl5ifHhbqtHLmbWC4SOBJiCIEk8xO0wzIYKu-J5yZOn7yHy3I5jvmW3lL-w3U8l403qw%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grammarly-for-chrome"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen"&gt;Grammarly for Chrome&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;From grammar and spelling to style and tone, Grammarly helps you eliminate writing errors and find the perfect words to express yourself. You’ll get real-time feedback from Grammarly on Gmail, Google Docs, Twitter, LinkedIn, and nearly everywhere else you find yourself writing. Grammarly is a writing assistant that offers you specific suggestions to help you improve your writing — and it goes way beyond grammar. You can be confident that your writing is not only correct, but clear and concise, too. Be sure to register your account to receive a personalized writing report each week to help you track your progress and identify improvement areas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HOkB2EXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/WgdlAEEhyK3fZrk4EBtdaGITC88DaeiyXQ_huc8r5YWO6nURbpRQLXemxkoBl_nLlds5nkwS%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HOkB2EXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/WgdlAEEhyK3fZrk4EBtdaGITC88DaeiyXQ_huc8r5YWO6nURbpRQLXemxkoBl_nLlds5nkwS%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#json-viewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh"&gt;JSON Viewer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The most beautiful and customizable JSON/JSONP highlighter that your eyes have ever seen. It is a Chrome extension for printing JSON and JSONP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cqhCSwRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/PDdbXwulUzBMZrQZ_lrSS-4tX2lsfABWfCc-FzugDZixGdAnBZvsTQgjTjJ4YAjHsc8jdwEN%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cqhCSwRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/PDdbXwulUzBMZrQZ_lrSS-4tX2lsfABWfCc-FzugDZixGdAnBZvsTQgjTjJ4YAjHsc8jdwEN%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keywords-everywhere-keyword-tool"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/keywords-everywhere-keywo/hbapdpeemoojbophdfndmlgdhppljgmp"&gt;Keywords Everywhere - Keyword Tool&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Keyword search volume, cpc and competition for 15+ websites like Google™ Search Console, YouTube™, Amazon™ &amp;amp; more. Keywords Everywhere is a freemium chrome extension that shows you monthly search volume, CPC &amp;amp; competition data on 15+ websites. It also has built in tools to find keywords from your seed keyword, and to show you keywords that any page ranks for in the SERPs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--esdUI1s9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/bhCiyaHM7rzKAXR9F0_qp6vHqEW1Nul_rrhw0YaKIjrNcNzp9_5_PUzV4pPrh8ei0pYKmxXT%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--esdUI1s9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/bhCiyaHM7rzKAXR9F0_qp6vHqEW1Nul_rrhw0YaKIjrNcNzp9_5_PUzV4pPrh8ei0pYKmxXT%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#site-palette"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/site-palette/pekhihjiehdafocefoimckjpbkegknoh?hl=en-GB"&gt;Site Palette&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Free browser extension that generates colour palettes. A must-have tool for designers and frontend developers. Grab colours for any website. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5re5mob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/cTVcTb1h7-Rj1MLFfenWJWM9w2274UXVs5oCgJkMrtdXoAudac_4dgqCW_pjdWnaZJwvRFpKaoeNRTZeFk2eJk-scA%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z5re5mob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/cTVcTb1h7-Rj1MLFfenWJWM9w2274UXVs5oCgJkMrtdXoAudac_4dgqCW_pjdWnaZJwvRFpKaoeNRTZeFk2eJk-scA%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devo"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/devo/elkhalpmbmbaeoemecpcfdcoekmpgmdm?hl=en"&gt;Devo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Devo is a new tab extension that displays GitHub Trending, Hacker News, Product Hunt and many different platforms' front pages on every new tab, with no-login required. You can change the placement of the cards, display whatever platform you'd like to in different order.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GkKL-S2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/tSF759-uwvBudCc7QTZqRFmA7rsFhA-BkW7yOzGimSuPj64BCVwwDgIwkG3AW7HiOZKszcs_HXHxLnZPzHLZxmfWqw%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GkKL-S2p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/tSF759-uwvBudCc7QTZqRFmA7rsFhA-BkW7yOzGimSuPj64BCVwwDgIwkG3AW7HiOZKszcs_HXHxLnZPzHLZxmfWqw%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-developer-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi"&gt;React Developer Tools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Adds React debugging tools to the Chrome Developer Tools. React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library. It allows you to inspect the React component hierarchies in the Chrome Developer Tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GGf0Z08W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/W5h-3Esx-a2cOq4TaQ2O5tz-zLMjTupUgJjiFF_wZfszDGHdlGpH0JeZoT29399vLdkRRQqBEeM%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GGf0Z08W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/W5h-3Esx-a2cOq4TaQ2O5tz-zLMjTupUgJjiFF_wZfszDGHdlGpH0JeZoT29399vLdkRRQqBEeM%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vuejs-devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd"&gt;Vue.js devtools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Chrome devtools extension for debugging Vue.js applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9MCf5mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/gP43uJZR8VGzLCtyOx2T5q4qcMq79yZhynf3M4a2SEzCA7KKVAY6DPeD7_JWZlu60xLPMqKW%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9MCf5mu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/gP43uJZR8VGzLCtyOx2T5q4qcMq79yZhynf3M4a2SEzCA7KKVAY6DPeD7_JWZlu60xLPMqKW%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-in-vscode"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/open-in-vscode/pfakkjlkpobjeghlgipljkjmbgcanpji"&gt;Open in VSCode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Open Github and Gitlab links in VSCode. Just right click on any link to a file and select "Open in VSCode". You can also click on line links to open the file to the specific file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gpjYzPj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/BvGHsNok4oD5tgWWaG29z4UAuHLXYL166Y0t1ZwjmVfM9L8BEANyDtWDBQA1s7QWRiY5sHRjow%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gpjYzPj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/BvGHsNok4oD5tgWWaG29z4UAuHLXYL166Y0t1ZwjmVfM9L8BEANyDtWDBQA1s7QWRiY5sHRjow%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awesome-autocomplete-for-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/awesome-autocomplete-for/djkfdjpoelphhdclfjhnffmnlnoknfnd"&gt;Awesome Autocomplete for GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Add instant search capabilities to GitHub's search bar. Simple and discreet extension that enhances GitHub's search, letting you search for repositories and people faster than ever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SzGsyzDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/oQ5DNeAAoo3DNecibTFqZXjzVbr_2TU_QOJ7-tIx9RByCcAafggfmREzAjjL1_djQjRGdLJusQ%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SzGsyzDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/oQ5DNeAAoo3DNecibTFqZXjzVbr_2TU_QOJ7-tIx9RByCcAafggfmREzAjjL1_djQjRGdLJusQ%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#redux-devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd"&gt;Redux DevTools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Redux DevTools for debugging application's state changes. The extension provides power-ups for your Redux development workflow. Apart from Redux, it can be used with any other architectures which handle the state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wtebdFd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wfhSnnYEQc3TCXbRTpTloa-XZesgDt0xAogzGoLF1BUCU04aYhdwAjueJYTtDxfRiqjUfC539g%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wtebdFd9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wfhSnnYEQc3TCXbRTpTloa-XZesgDt0xAogzGoLF1BUCU04aYhdwAjueJYTtDxfRiqjUfC539g%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whatfont"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm"&gt;WhatFont&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The easiest way to identify fonts on web pages. Firebug and Webkit Inspector are easy enough to use for developers. However, for others, this should not be necessary. With this extension, you could inspect web fonts by just hovering on them. It is that simple and elegant. It also detects the services used for serving the web fonts. Supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D6tmHKV0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/nep5S6A_Z05btUKTsv76SXoKW1Zv5a1Hr9RspeTOxS1y0E88UiYLHQv4OXvD1UaL8-YdlHuDsmg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D6tmHKV0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/nep5S6A_Z05btUKTsv76SXoKW1Zv5a1Hr9RspeTOxS1y0E88UiYLHQv4OXvD1UaL8-YdlHuDsmg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clear-cache"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?utm_source=chrome-ntp-icon"&gt;Clear Cache&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Clear your cache and browsing data with a single click of a button.&lt;br&gt;
Quickly clear your cache with this extension without any confirmation dialogs, pop-ups or other annoyances. You can customize what and how much of your data you want to clear on the options page, including: App Cache, Cache, Cookies, Downloads, File Systems, Form Data, History, Indexed DB, Local Storage, Plugin Data, Passwords and WebSQL. Cookies can either be removed globally, only for certain domains or for everything except for certain domains.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C2KCk7hM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/_rjlM_Wxz-9p1KkAr3DxWL9B7DM9ORLS62X2QVDTPt3QH9bCRzkJ4juYLXF4JEOtpNWdWiOmHg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2KCk7hM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/_rjlM_Wxz-9p1KkAr3DxWL9B7DM9ORLS62X2QVDTPt3QH9bCRzkJ4juYLXF4JEOtpNWdWiOmHg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-keep-chrome-extension"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi?utm_source=chrome-ntp-icon"&gt;Google Keep Chrome Extension&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Save to Google Keep with a single click! Found a web page, image or quote that you want to save for later? With the Google Keep Chrome Extension, easily save the things that you care about to Keep and have them synced across all the platforms that you use – including web, Android, iOS and Wear. Take notes for additional detail and add labels to categorise your note quickly for later retrieval.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dX6y-Wzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/AREyFzev3wVPpGJf0edj0HBFGRD7lj_XVw35c1jZ0JdPATsjrx0XXKaibJMAchPJJzdueJIYHA%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dX6y-Wzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/AREyFzev3wVPpGJf0edj0HBFGRD7lj_XVw35c1jZ0JdPATsjrx0XXKaibJMAchPJJzdueJIYHA%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loom-for-chrome"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/loom-for-chrome/liecbddmkiiihnedobmlmillhodjkdmb?utm_source=chrome-ntp-icon"&gt;Loom for Chrome&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Video messaging for work. From onboarding new employees, troubleshooting customer issues, or code reviews, Loom makes it easy to get your message across quickly and clearly using the power of video. With Loom, you can record your screen, voice, and face to create an instantly shareable video in less time than it would take to type an email. Reduce back-and-forth typing and get your message across the first time. Your co-workers and customers will thank you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rL2j3x-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/6yfzuETwjVlQXvRyq0tGAjKux3WUiBmNM2evy1YlkCHV79-UoUTjdhnB_njHWGH90zBWy81wRg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rL2j3x-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/6yfzuETwjVlQXvRyq0tGAjKux3WUiBmNM2evy1YlkCHV79-UoUTjdhnB_njHWGH90zBWy81wRg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-todo-pomodoro-timer-amp-to-do-list"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/focus-to-do-pomodoro-time/ngceodoilcgpmkijopinlkmohnfifjfb?utm_source=chrome-ntp-icon"&gt;Focus To-Do: Pomodoro Timer &amp;amp; To Do List&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Focus To-Do combines Pomodoro Timer with Task Management, it is a science-based app that will motivate you to stay focused and get things done. It brings Pomodoro Technique and To Do List into one place, you can capture and organize tasks into your todo lists, start focus timer and focus on work &amp;amp; study, set reminders for important tasks and errands, check the time spent at work. It's the ultimate app for managing Tasks, Reminders, Lists, Calendar events, Grocery lists, checklist, helping you focus on work &amp;amp; study and tracking your working hours. Focus To-Do syncs between your phone and computer, so you can access your lists from anywhere.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fbesyTDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/s1XVSNZvDCFWz3ycdYLRiLTEr1ZnfL27zTcIQsP7qxZkeJjHEuzHpVWCRyJaN07kuWHOBZXy7Yw%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fbesyTDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/s1XVSNZvDCFWz3ycdYLRiLTEr1ZnfL27zTcIQsP7qxZkeJjHEuzHpVWCRyJaN07kuWHOBZXy7Yw%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#speedtest-by-ookla"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/speedtest-by-ookla/pgjjikdiikihdfpoppgaidccahalehjh?utm_source=chrome-ntp-icon"&gt;Speedtest by Ookla&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Take a Speedtest directly from your toolbar to quickly test your internet performance without interruption.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x-Stq-Jf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wuI9iyz4x81Z1C0HT7nOzBLm9gUz0yFQcFc_8zyb8h3VSogxgXjx96buFcuZDZNV6D2dhn2N1_w%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x-Stq-Jf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/wuI9iyz4x81Z1C0HT7nOzBLm9gUz0yFQcFc_8zyb8h3VSogxgXjx96buFcuZDZNV6D2dhn2N1_w%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#toby-for-chrome"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/toby-for-chrome/hddnkoipeenegfoeaoibdmnaalmgkpip?utm_source=chrome-ntp-icon"&gt;Toby for Chrome&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Toby is better than bookmarks, it levels up your Chrome browser. Toby is a visual workspace that lives on every new tab. Add new tabs by dragging and dropping your browser tabs into collections or save a whole session in just one-click. Access all of your collections on any desktop with automatic sync. Use tags to organize your collections or create notes for your to-dos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T1ckktLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/di-2WXT60-0Cngb95PaMnkUCTTCHt-esk6AvHsnUMYaAUQ0JcsOQMbFBaFxlkciUBjjfikhJ%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T1ckktLP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/di-2WXT60-0Cngb95PaMnkUCTTCHt-esk6AvHsnUMYaAUQ0JcsOQMbFBaFxlkciUBjjfikhJ%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#volume-master"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/volume-master/jghecgabfgfdldnmbfkhmffcabddioke?utm_source=chrome-ntp-icon"&gt;Volume Master&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Up to 600 % volume boost, Control volume of any tab, Fine-grained control:  0 % - 600 %, Switch to any tab playing audio with just one click&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGjIVpdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/ru1pi54cUQV9150hRrSIHXY7NUyebf73zyDixotlrnueQ_slIJjpQ_FxAxMX9sSJrQzBJCo04Mo%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGjIVpdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/ru1pi54cUQV9150hRrSIHXY7NUyebf73zyDixotlrnueQ_slIJjpQ_FxAxMX9sSJrQzBJCo04Mo%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#save-to-google-drive"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/save-to-google-drive/gmbmikajjgmnabiglmofipeabaddhgne?utm_source=chrome-ntp-icon"&gt;Save to Google Drive&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension allow you to save web content directly to Google Drive through a browser action or context menu. You can save documents, images, and HTML5 audio and video all by right clicking and selecting 'Save to Google Drive'. You can save the currently viewed page using the 'Save to Google Drive' browser action. The directory location and format of saved HTML pages can be controlled with the extension's options page (Choice of Entire image (default), Visible image, Raw HTML, MHTML, or Google Doc). You can automatically convert Microsoft Office files or comma separated files to Google Docs format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQYj_bzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/ed8gorV482Ef5ERlii5VgHofT-dp2pwu8jDfGCqYyh9v-czrU6fXRwllTR36dGUcf-FnBxU4Bg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQYj_bzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/ed8gorV482Ef5ERlii5VgHofT-dp2pwu8jDfGCqYyh9v-czrU6fXRwllTR36dGUcf-FnBxU4Bg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#https-everywhere"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/https-everywhere/gcbommkclmclpchllfjekcdonpmejbdp?utm_source=chrome-ntp-icon"&gt;HTTPS Everywhere&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is an port of the popular HTTPS Everywhere extension for Firefox, created by EFF and the Tor Project.  It automatically switches thousands of sites from insecure "http" to secure "https".  It will protect you against many forms of surveillance and account hijacking, and some forms of censorship.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNpyQbaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SmnjGVwurtzFOycZjwfVzFCp_TVcbtVppEK6V5BMv4JN5o9zW30IV1xVd_Ql8lgEIFk3VazI%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNpyQbaZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/SmnjGVwurtzFOycZjwfVzFCp_TVcbtVppEK6V5BMv4JN5o9zW30IV1xVd_Ql8lgEIFk3VazI%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keeper%C2%AE-password-manager-amp-digital-vault"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/keeper%C2%AE-password-manager/bfogiafebfohielmmehodmfbbebbbpei?utm_source=chrome-ntp-icon"&gt;Keeper® Password Manager &amp;amp; Digital Vault&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Protect and autofill passwords with the world's most trusted and #1 downloaded secure password manager and digital vault.&lt;br&gt;
Stay protected with the world's most trusted and #1 downloaded password keeper and digital vault. Keeper’s password manager generates, stores, and autofills strong passwords on all of your devices while also securely storing and protecting your private documents. Don't get hacked. Get Keeper. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2mDYsROu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/GEXDajoUh1xL_i___d8NA0kIXbWsUteGRhmyW6e-8qViFK8qRh60Wcw4Bcx0P5jiGLgFkz97yg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2mDYsROu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/GEXDajoUh1xL_i___d8NA0kIXbWsUteGRhmyW6e-8qViFK8qRh60Wcw4Bcx0P5jiGLgFkz97yg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vimeo-record-screen-amp-webcam-recorder"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/vimeo-record-screen-webca/ejfmffkmeigkphomnpabpdabfddeadcb?utm_source=chrome-ntp-icon"&gt;Vimeo Record - Screen &amp;amp; Webcam Recorder&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Record and share unlimited free video messages from your browser&lt;br&gt;
Did you know we speak up to 7x faster than we type? Next time you’re thinking about sending a long email or a chat message, consider whether a video recording might communicate your ideas better—and faster. Whether it's a product demo, design feedback, or a knowledge transfer session, with Vimeo’s screen recorder you can quickly record and share unlimited video messages. Choose to record your screen, voice, face or a combination. Once you’re done recording, you can instantly share your video with a private link. Every recorded video is automatically uploaded to Vimeo, which gives you a variety of tools such as organizing and replacing videos, customizing the player, sharing videos with your teams, adding chapter markers, and much more. Join over 200M users who have chosen Vimeo as the home for their videos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A5gkcAhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/XQTH_b4juGiTKbpyJQ7D6m3fYLxYgjq_t9aGUZfyWA_li1lgTs4iCT3j9Qhpjj0qoqlVovMEvdo%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A5gkcAhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/XQTH_b4juGiTKbpyJQ7D6m3fYLxYgjq_t9aGUZfyWA_li1lgTs4iCT3j9Qhpjj0qoqlVovMEvdo%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrnli-screenshot-tool-and-editor"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/scrnli-screenshot-tool-an/ijejnggjjphlenbhmjhhgcdpehhacaal?utm_source=chrome-ntp-icon"&gt;Scrn.li - Screenshot Tool and Editor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Screenshot tool for making a full page or partial screen capture with further edit, download or text adding. The advanced app to make a full webpage screenshot or just any part of it with an opportunity to edit, save and download screen capture to your PC. The app is launched from a browser that totally saves your time. Simply click the extension icon to choose from options whole page screenshot or a selected part&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73CfVLpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/y4KUdYfEUqL1BdZiHptCzZnb1lODH4FjWFQEcfCNg-sVNZxydniXn9Mthhd4oli91Vn-wl0BXw%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73CfVLpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/y4KUdYfEUqL1BdZiHptCzZnb1lODH4FjWFQEcfCNg-sVNZxydniXn9Mthhd4oli91Vn-wl0BXw%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-screen"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/full-screen/joddbgdiaecgbenoeloffehlpclnppfa?utm_source=chrome-ntp-icon"&gt;Full Screen&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is just a full-screen button added to the toolbar. It does exactly the same as the keyboard shortcuts (F11 on Windows or Cmd+Shift+F on Mac). You can change the icon and add/remove the full-screen function to the context menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3j0rXnN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/im9aoWwozptMgBMlT-osYw7ToxkdxJCvZaNEwsuzgPn6UNjaFmtSd9WsAHjvP1yo4i8Z0-b6TQ%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3j0rXnN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/im9aoWwozptMgBMlT-osYw7ToxkdxJCvZaNEwsuzgPn6UNjaFmtSd9WsAHjvP1yo4i8Z0-b6TQ%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#emoji-keyboard-by-joypixels%C2%AE"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/emoji-keyboard-by-joypixe/ipdjnhgkpapgippgcgkfcbpdpcgifncb?utm_source=chrome-ntp-icon"&gt;Emoji Keyboard by JoyPixels®&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The world's leading emoji keyboard for Chrome. Now Unicode 13 compatible!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4sehU_70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/oaNcAVJAAGCKKHh1CNP0TAcBfvoqnMKFw-GJT4xZYX_4F06S1YlGRvYXN8_aRIM-AdV_skA-5bg%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4sehU_70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/oaNcAVJAAGCKKHh1CNP0TAcBfvoqnMKFw-GJT4xZYX_4F06S1YlGRvYXN8_aRIM-AdV_skA-5bg%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enhanced-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd"&gt;Enhanced GitHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Display repo size, size of each file, download link and option to copy file contents. Extension that provides useful features on top of GitHub Website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLgLgMoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/FENkPaI6a2w-mGXggTm2tbWf8PvH-cVs_jEQRAoOmjRwsNHca7tDvDXuVcSrPzPE051pnZA7XIM%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLgLgMoG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/FENkPaI6a2w-mGXggTm2tbWf8PvH-cVs_jEQRAoOmjRwsNHca7tDvDXuVcSrPzPE051pnZA7XIM%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adguard-adblocker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg"&gt;AdGuard AdBlocker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Unmatched adblock extension against advertising and pop-ups. Blocks ads on Facebook, YouTube and all other websites. AdGuard ad blocker effectively blocks all types of ads on all web pages, even on Facebook, YouTube and others!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rcDMODse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/XjPwnJbKGMdwK-1csA0PkYTS7PoXNOlfWUR9wWaagp7hesiiYlUGFu_kwSO_V64tVtaQoOWC%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rcDMODse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/XjPwnJbKGMdwK-1csA0PkYTS7PoXNOlfWUR9wWaagp7hesiiYlUGFu_kwSO_V64tVtaQoOWC%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#octotree-github-code-tree"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;Octotree - GitHub code tree&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browser extension that enhances GitHub code review and exploration.&lt;br&gt;
Features -  IDE-like code tree, Folder and file search,Support private repositories, Repo/file/issue/pull request bookmarking, High performance, working with repositories of any size&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5m2uDMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/mDl6_Gm6OEfBjAx5MLZKhOP-2aaLigR7pyUUz7E3XgjVUKsjfHaSVk6LQ6sQrQ5uX9OkVPWjARc%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5m2uDMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/mDl6_Gm6OEfBjAx5MLZKhOP-2aaLigR7pyUUz7E3XgjVUKsjfHaSVk6LQ6sQrQ5uX9OkVPWjARc%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#save-to-pocket"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj?hl=en"&gt;Save to Pocket&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Pocket’s Chrome extension is the easiest, fastest way to capture articles, videos, and anything else you find on the web. With one click, the content you’ve collected appears across all your devices in a clean, distraction-free space—there to read when you’re ready, whether at home, at work, or on the go.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbaVIQzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/xHb9S2FxNidErjkMUQIJ8He_xOyE6u9WE-3_uDPj_vhp8RVUeWFRqmpHYDgwVD4lw_YsyZau%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbaVIQzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/xHb9S2FxNidErjkMUQIJ8He_xOyE6u9WE-3_uDPj_vhp8RVUeWFRqmpHYDgwVD4lw_YsyZau%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bookmark-sidebar"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/bookmark-sidebar/jdbnofccmhefkmjbkkdkfiicjkgofkdh?hl=en"&gt;Bookmark Sidebar&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Adds a toggleable sidebar with all your bookmarks at the edge of your browser window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MCZ9H7eJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/yisKD2ugAzVmOKS74xautM-gM2yDfdHz0-It6u-EswuY4ZChUfxY-MGp1hx83LL3RSIHuN31mTFNqXiwo6lsv7CQjMc%3Dw640-h400-e365-rj-sc0x00ffffff" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MCZ9H7eJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/yisKD2ugAzVmOKS74xautM-gM2yDfdHz0-It6u-EswuY4ZChUfxY-MGp1hx83LL3RSIHuN31mTFNqXiwo6lsv7CQjMc%3Dw640-h400-e365-rj-sc0x00ffffff" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-top-10-extentions-i-would-strongly-recommend-installing"&gt;
  &lt;/a&gt;
  The Top 10 extentions I would strongly recommend installing
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="#dailydevhttpsapidailydevgetrsavio"&gt;Daily.dev&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="#wappalyzerhttpschromegooglecomwebstoredetailnotion-web-clipperknheggckgoiihginacbkhaalnibhilkkutmsourcechrome-ntp-icon"&gt;Wappalyzer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#grammarly-for-chromehttpschromegooglecomwebstoredetailgrammarly-for-chromekbfnbcaeplbcioakkpcpgfkobkghlhen"&gt;Grammarly for Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clear-cachehttpschromegooglecomwebstoredetailclear-cachecppjkneekbjaeellbfkmgnhonkkjfpdnutmsourcechrome-ntp-icon"&gt;Clear Catche&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loom-for-chromehttpschromegooglecomwebstoredetailloom-for-chromeliecbddmkiiihnedobmlmillhodjkdmbutmsourcechrome-ntp-icon"&gt;Loom for Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scrnli-screenshot-tool-and-editorhttpschromegooglecomwebstoredetailscrnli-screenshot-tool-anijejnggjjphlenbhmjhhgcdpehhacaalutmsourcechrome-ntp-icon"&gt;Scrnli - Screenshot Tool and Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-screenhttpschromegooglecomwebstoredetailfull-screenjoddbgdiaecgbenoeloffehlpclnppfautmsourcechrome-ntp-icon"&gt;Full Screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-screenhttpschromegooglecomwebstoredetailfull-screenjoddbgdiaecgbenoeloffehlpclnppfautmsourcechrome-ntp-icon"&gt;Emoji Keyboard by JoyPixels®&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adguard-adblockerhttpschromegooglecomwebstoredetailadguard-adblockerbgnkhhnnamicmpeenaelnjfhikgbkllg"&gt;Adgaurd Adblock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#octotree-github-code-treehttpschromegooglecomwebstoredetailoctotree-github-code-treebkhaagjahfmjljalopjnoealnfndnagc"&gt;Octotree - GitHub code tree&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  👀 Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Yeah, that's a wrap. Hope you enjoyed the article. Do not hesitate to share your feedback. I am on Twitter &lt;a href="https://twitter.com/SavioMartin7"&gt;@saviomartin7&lt;/a&gt;. Give a follow!&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://github.com/saviomartin"&gt;Github&lt;/a&gt; at &lt;a href="https://github.com/saviomartin"&gt;@saviomartin&lt;/a&gt;, Don't miss my awesome projects!&lt;/p&gt;

&lt;p&gt;I hope you found the article helpful. Feedbacks are greatly appreciated! 🙌&lt;/p&gt;

&lt;p&gt;Have an amazing day!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  🌎 Lets connect
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/saviomartin"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/saviomartin7"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/saviomartin/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instagram.com/teen_developer/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  🙌 Support
&lt;/h2&gt;

&lt;p&gt;My projects are fueled by coffees ☕, get one for me!&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/saviomartin"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8vsiOGpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/appcraftstudio/buymeacoffee/raw/master/Images/snapshot-bmc-button.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>node</category>
    </item>
    <item>
      <title>How to test my Dockerfile for my python project using GitHub actions?</title>
      <author>Aahnik Daw</author>
      <pubDate>Sat, 17 Apr 2021 03:40:23 +0000</pubDate>
      <link>https://dev.to/aahnik/how-to-test-my-dockerfile-for-my-python-project-using-github-actions-44gf</link>
      <guid>https://dev.to/aahnik/how-to-test-my-dockerfile-for-my-python-project-using-github-actions-44gf</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sometimes we make errors in writing the docker file. If there is an error in the Dockerfile, the docker build will fail.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sometimes we may forget to specify dependencies in our Dockerfile. Let's take an example.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Suppose, I have a python script that can take the screenshot of any web page (whose URL is supplied).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now, in my code I am using pyppeeteer(Headless chrome/chromium automation library (unofficial port of puppeteer)&lt;/li&gt;
&lt;li&gt;pyppeeteer uses chromium and chrome driver. These are already installed in my machine. So, running &lt;code&gt;pytest&lt;/code&gt;  will pass in my local dev environment.&lt;/li&gt;
&lt;li&gt;I forget to specify the &lt;code&gt;RUN&lt;/code&gt; commands in the dockerfile, that will install chromium and chrome driver. so running tests inside the container will fail. (although the &lt;code&gt;docker build&lt;/code&gt; will succeed.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I want to automate the task of building docker images and running tests in the container.&lt;/p&gt;

&lt;p&gt;In the local machine, I can run &lt;code&gt;docker build -t myproj .&lt;/code&gt; to build.&lt;/p&gt;

&lt;p&gt;and for testing, I can run &lt;code&gt;docker run -it myproj pytest&lt;/code&gt; (if i forget to add the &lt;code&gt;RUN&lt;/code&gt; that installs chromium and chromedriver, then my pytest will fail inside container)&lt;/p&gt;

&lt;p&gt;I hope I am able to explain my purpose.&lt;/p&gt;

&lt;p&gt;Normally,in github actions,the python source code can be run on ubuntu, mac, windows etc. &lt;br&gt;
Besides the different os, I also want to build and test my dockerfile.&lt;/p&gt;

&lt;p&gt;how can I do that? Please don't give tutorials to writing github actions. I am looking for an optimized way for achieving my task. My work can be done in many ways, but looking for specific instructions from an expert.&lt;/p&gt;




&lt;p&gt;you may answer in the comments below or here &lt;a href="https://stackoverflow.com/questions/67134410/how-to-test-my-dockerfile-for-my-python-project-using-github-actions"&gt;https://stackoverflow.com/questions/67134410/how-to-test-my-dockerfile-for-my-python-project-using-github-actions&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>python</category>
      <category>docker</category>
      <category>github</category>
    </item>
    <item>
      <title>What is redux?</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Sat, 17 Apr 2021 03:31:36 +0000</pubDate>
      <link>https://dev.to/avneesh0612/what-is-redux-1cek</link>
      <guid>https://dev.to/avneesh0612/what-is-redux-1cek</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYfDb0y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/docq9maxh1pan4l9z1sv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYfDb0y_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/docq9maxh1pan4l9z1sv.png" alt="Title page"&gt;&lt;/a&gt;&lt;br&gt;
What is redux?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhrE389x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kpxz4uqnte19u73ubnl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhrE389x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3kpxz4uqnte19u73ubnl.png" alt="What is redux?"&gt;&lt;/a&gt;&lt;br&gt;
Why redux is important?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQWWaNYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5s1hbl69zqbnqg6cnh7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQWWaNYR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5s1hbl69zqbnqg6cnh7.png" alt="Why redux is important?"&gt;&lt;/a&gt;&lt;br&gt;
How can you install redux?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BqQNWo4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5flf3omn7srjxxha7za.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BqQNWo4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5flf3omn7srjxxha7za.png" alt="How can you install redux?"&gt;&lt;/a&gt;&lt;br&gt;
Thank you&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IK6gCs2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfu3b87zl8h32v7r580g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IK6gCs2r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfu3b87zl8h32v7r580g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>redux</category>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>(cXc)'s Creator Rewards Token 🎸 Info on 🟣  $PURPLE ~ April 17, 2021 Noon GMT 📅</title>
      <author>Douglas James Butner</author>
      <pubDate>Sat, 17 Apr 2021 02:46:28 +0000</pubDate>
      <link>https://dev.to/dougbutner/cxc-s-creator-rewards-token-info-on-purple-april-17-2021-noon-gmt-2iim</link>
      <guid>https://dev.to/dougbutner/cxc-s-creator-rewards-token-info-on-purple-april-17-2021-noon-gmt-2iim</guid>
      <description>&lt;p&gt;$PURPLE's unique tokenomic model rewards creators daily for co-creating on cXc.world (receiving Ups), whilst directing traffic to streams on paying services.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/currentxchange/purple-explainer/blob/master/Purple.md"&gt;Learn more about PURPLE&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nde4fwMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cq98p1mfi3h4roehy2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nde4fwMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cq98p1mfi3h4roehy2t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PURPLE's initial release starts &lt;strong&gt;April 17, 2021&lt;/strong&gt; on &lt;a href="https://wax.alcor.exchange/trade/purple-purplepurple_wax-eosio.token"&gt;Alcor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because of the very limited supply of PURPLE, ascending pricing + time-limited sell orders will be used to ensure that everyone has a chance to acquire the PURPLE they need to benefit fully from cXc.world. There are no per-account limits on purchases.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#purple-utility-digital-advertising-gold"&gt;
  &lt;/a&gt;
  PURPLE Utility: Digital Advertising Gold
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;What can you do with PURPLE?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;PURPLE&lt;/strong&gt; can be staked for daily Blu Ups (or &lt;a href="https://wax.alcor.exchange/trade/blux-bluxbluxblux_wax-eosio.token"&gt;BLUX&lt;/a&gt;) to a piece of content; a rare form of digital advertising purchase that allows someone to buy once and hold &lt;strong&gt;continual attention&lt;/strong&gt; for all of time. This attention means huge value, particularly to independent creators and creative organizations such as independent labels and artist collectives.&lt;/p&gt;

&lt;p&gt;Furthermore, &lt;strong&gt;PURPLE&lt;/strong&gt; need only be &lt;a href="https://github.com/currentxchange/purple-explainer/blob/master/Everstones.md"&gt;unstaked&lt;/a&gt; for the holder to receive back the same amount of tokens. This means an artist can advertise their art and meanwhile hold something of increasing utility as each future cXc.world mapp is released, and future uses of PURPLE are announced.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today-musicians-tomorrow-all-creators"&gt;
  &lt;/a&gt;
  Today Musicians, Tomorrow All Creators
&lt;/h2&gt;

&lt;p&gt;PURPLE has a unique utility for musicians, as &lt;strong&gt;cXc Music&lt;/strong&gt; is the first &lt;a href="https://cxc.world"&gt;&lt;strong&gt;cXc.world&lt;/strong&gt;&lt;/a&gt; mapp, but this utility will expand to all creators and creative collectives when &lt;strong&gt;cXc Video&lt;/strong&gt;, &lt;strong&gt;cXc Photo&lt;/strong&gt;, &lt;strong&gt;cXc Scribe&lt;/strong&gt;, &lt;strong&gt;cXc Art&lt;/strong&gt; + more mapps are available.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#initial-sell-orders"&gt;
  &lt;/a&gt;
  Initial Sell Orders
&lt;/h1&gt;

&lt;p&gt;Starting 4/17/2021, 1/12th of the 1/12 Max Supply designated for sale will be listed with pricing starting at &lt;strong&gt;20 WAX&lt;/strong&gt; per PURPLE. &lt;/p&gt;

&lt;p&gt;These sell orders will be offered one at a time, with a one week gap between each listing starting after the previous listing's completion. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tokens for Sale: 1/12 Max Supply or 12&lt;sup&gt;6&lt;/sup&gt; (2,985,984), issued + offered 12&lt;sup&gt;5&lt;/sup&gt; (248,832) at a time. Here's how we'll price the April 17th tokens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Price&lt;/th&gt;
&lt;th&gt;🟣 PURPLE Available&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;20 WAX&lt;/td&gt;
&lt;td&gt;3,190    (April 17, Noon GMT)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21 WAX&lt;/td&gt;
&lt;td&gt;6,380   (TBD)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22 WAX&lt;/td&gt;
&lt;td&gt;9,570&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23 WAX&lt;/td&gt;
&lt;td&gt;12,760&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24 WAX&lt;/td&gt;
&lt;td&gt;15,950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25 WAX&lt;/td&gt;
&lt;td&gt;19,140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26 WAX&lt;/td&gt;
&lt;td&gt;22,330&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27 WAX&lt;/td&gt;
&lt;td&gt;25,520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28 WAX&lt;/td&gt;
&lt;td&gt;28,710&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29 WAX&lt;/td&gt;
&lt;td&gt;31,900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33 WAX&lt;/td&gt;
&lt;td&gt;35,090&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36 WAX&lt;/td&gt;
&lt;td&gt;38,280&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#liquidity-promise"&gt;
  &lt;/a&gt;
  Liquidity Promise
&lt;/h1&gt;

&lt;p&gt;Of the first &lt;strong&gt;1,000,000 WAX&lt;/strong&gt; raised by the direct listing of PURPLE, no less than &lt;strong&gt;500,000 WAX&lt;/strong&gt; will serve as liquidity on Alcor exchange and DeFi swap.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#proceeds"&gt;
  &lt;/a&gt;
  Proceeds
&lt;/h1&gt;

&lt;p&gt;WAX earned will be used to pay for all end-user transactions on cXc.world, and also purchase RAM for our records and accounts who interact with our tokens, mapps, and NFTs.  &lt;/p&gt;

&lt;p&gt;Remaining Proceeds from the listing will go towards development of cXc.world, including the final 1.0.0 release of cXc Music, native mobile apps, and the creation of other cXc.world &lt;a href="https://docs.google.com/document/d/1YppJ2EYumRI2j0UHYdZh7NJMObMI_NfHgaFRLbjgBtw/preview"&gt;mapps&lt;/a&gt; like cXc Video, cXc Art, cXc Ideas, cXc Pueblo and more. Funds will also pay for all other cXc operational costs, employees, promotion, events, etc. cXc will publish a running list of expenses with corresponding transactions on Github.&lt;/p&gt;

&lt;p&gt;cXc spending transactions are inherently transparent and can be tracked here: &lt;a href="https://wax.bloks.io/account/dplug4purple"&gt;dplug4purple&lt;/a&gt; and here &lt;a href="https://wax.bloks.io/account/currentxchng"&gt;currentxchng&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#requirements-amp-restrictions"&gt;
  &lt;/a&gt;
  Requirements &amp;amp; Restrictions
&lt;/h1&gt;

&lt;p&gt;Participating in the direct listing requires that you adhere and agree to the requirements, restrictions, terms and conditions laid out in &lt;a href="https://github.com/currentxchange/purple-explainer/blob/master/Legal/Disclaimer.md"&gt;disclaimer.md&lt;/a&gt; and &lt;a href="https://github.com/currentxchange/purple-explainer/blob/master/Legal/Legal-Agreement.md"&gt;legal-agreement.md&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#find-out-more-about-cxc"&gt;
  &lt;/a&gt;
  💥 FIND OUT MORE ABOUT &lt;a href="https://cXc.world"&gt;cXc&lt;/a&gt; 💥
&lt;/h2&gt;




&lt;p&gt;Current X Change is dedicated to harmonizing Humans, Collectives, and Gaia. Our media Mapps are just the start. As we refine Purple, we also seek to redefine what it means to come together as humans and co-create. We hope you'll enjoy the tools already here, and are infinitely stoked for what the future holds. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#experience-cxcworld"&gt;
  &lt;/a&gt;
  🗺️ Experience &lt;a href="https://currentxchange.com/vision"&gt;cXc.world 🌎&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#step-into-our-vision"&gt;
  &lt;/a&gt;
  👁️ Step into our &lt;a href="https://currentxchange.com/vision"&gt;vision&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#add-music-to-cxcworld"&gt;
  &lt;/a&gt;
  🎥  &lt;a href="https://www.youtube.com/watch?v=7NCaG2ZPHOQ"&gt;Add Music to cXc.world&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#get-to-know-our-economy"&gt;
  &lt;/a&gt;
  💸 Get to know our &lt;a href="https://github.com/currentxchange/purple-explainer"&gt;Economy&lt;/a&gt;
&lt;/h2&gt;




&lt;h1&gt;
  &lt;a href="#follow-cxc-on-social-media"&gt;
  &lt;/a&gt;
  Follow cXc on Social Media 📱🌎
&lt;/h1&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="//instagram.com/cxc.world"&gt;🖼️ Instagram&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="//twitter.com/currentxchange"&gt;🐦 Twitter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="//youtube.com/channel/UCBjTUosp2R_FN6AFdHV-v-Q"&gt;📺 YouTube&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="//peakd.com/@currentxchange"&gt;🐝 Hive&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://peakd.com/c/hive-179421"&gt;🏘️ Hive Community&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href="https://discord.gg/4fhWgZ5R5s"&gt;🔑 Discord Musician Community&lt;/a&gt;&lt;/strong&gt; (Collab channels + more) &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.reddit.com/r/cXcMusic"&gt;🔺 Reddit&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://t.me/joinchat/RcfWf3iGr-XEl08B"&gt;✈️ Telegram&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://medium.com/wavvys"&gt;🌊 Wavvy Music Accolades&lt;/a&gt; (NFT Music Awards)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cxc-roadmap"&gt;
  &lt;/a&gt;
  (cXc) &lt;a href="https://github.com/currentxchange/purple-explainer/blob/master/Roadmap.md"&gt;Roadmap 🛣️ &lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>tokenomics</category>
      <category>release</category>
      <category>purple</category>
      <category>alcor</category>
    </item>
    <item>
      <title>Utilising ListView and ArrayAdapter in Java</title>
      <author>Tomo</author>
      <pubDate>Sat, 17 Apr 2021 01:52:49 +0000</pubDate>
      <link>https://dev.to/tomokawaguchi/utilising-listview-and-arrayadapter-in-java-20i0</link>
      <guid>https://dev.to/tomokawaguchi/utilising-listview-and-arrayadapter-in-java-20i0</guid>
      <description>&lt;p&gt;As an Android developer, it's quite critical to figure out how you can develop your app as efficient as possible. When it comes to showcasing a series of items on the screen, it would be too expensive to inflate them in a regular way as it would significantly impact the data usage. As such, using AdapterView such as &lt;code&gt;ListView&lt;/code&gt;, &lt;code&gt;GridView&lt;/code&gt; or &lt;code&gt;Spinner&lt;/code&gt;, and Adapter such as &lt;code&gt;ArrayAdapter&lt;/code&gt; will help us to reduce the usage of the resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-adapterview-and%C2%A0adapter"&gt;
  &lt;/a&gt;
  Why AdapterView and Adapter?
&lt;/h2&gt;

&lt;p&gt;When you have a series of items to display on the screen, there are multiple ways to achieve it. One way is to use &lt;code&gt;LinearLayout&lt;/code&gt; and populate the child Views by using a loop. However, this approach is not preferable as it consumes quite a lot of memory. Imagine if your list has heaps of items to showcase like a timeline for social media or a feed of articles or news.  It's quite simple that your App would take so much resource to build all these lists of items. But what if there is a better way so that your app does not use a huge amount of resources when populating these Views? That's when using the combination of AdapterView and Adapter comes in handy as you can recycle the Views.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-view-recycling"&gt;
  &lt;/a&gt;
  What is View Recycling?
&lt;/h2&gt;

&lt;p&gt;View recycling is a very powerful and important concept to understand. What it does is that the View gets recycled as the name suggests. Probably you could guess it, however, what exactly is happening behind the scenes? To understand that let's take a look at it closely.&lt;/p&gt;

&lt;p&gt;In this article, we assume that we want our list of items to appear in a simple list layout by utilising ListView as one of the &lt;code&gt;AdapterView&lt;/code&gt; and the list of data is stored in &lt;code&gt;ArrayList&lt;/code&gt; hence we choose to work with &lt;code&gt;ArrayAdapter&lt;/code&gt; as our Adapter. &lt;/p&gt;

&lt;p&gt;Let's start with a high-level view. When &lt;code&gt;ListView&lt;/code&gt; is connected with &lt;code&gt;ArrayAdapter&lt;/code&gt;, the &lt;code&gt;ArrayAdapter&lt;/code&gt; start populating the children/list items of the &lt;code&gt;ListView&lt;/code&gt; until it has enough items to fill up the entire height of the screen. Here, please note that there is no extra View created. So if 5 items can take up the screen, only 5 rows are created at this point. Then as the user scrolls the screen to go through the list, the item goes off the screen gets kept in memory so that it could be reused later. I would think of this as being sent to a place like a scrap pile. In terms of the new item that comes into the screen, it is created by reusing the old row from the scrap pile (the data will be updated to suit the new item). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ijWNSWEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uh7qgwlac15ziavffqih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ijWNSWEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uh7qgwlac15ziavffqih.png" alt="View Recycling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By repeating this process, you can successfully save the usage of the resource because the number of rows that needs to be instantiated is small (probably up to less than 10) even if your list happens to be super long.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-listview-with-a-basic-arrayadapter"&gt;
  &lt;/a&gt;
  How to use ListView with a basic ArrayAdapter
&lt;/h2&gt;

&lt;p&gt;Let's start looking at how we can set up the recycling views with an example situation. Say you want to display the names of students on a screen of your app with minimal styling. This means you need a single &lt;code&gt;TextView&lt;/code&gt; as your list item. In that case, all you need to do is to initialise the &lt;code&gt;ArrayAdapter&lt;/code&gt; and connect it to your &lt;code&gt;ListView&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Instantiate an ArrayAdapter&lt;/span&gt;
&lt;span class="nc"&gt;ArrayAdapter&lt;/span&gt; &lt;span class="n"&gt;studentNameAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;simple_list_item_1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;students&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Getting an ID of ListView&lt;/span&gt;
&lt;span class="nc"&gt;ListView&lt;/span&gt; &lt;span class="n"&gt;listView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Connect ListView and Adapter&lt;/span&gt;
&lt;span class="n"&gt;listView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;studentNameAdapter&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we instantiate the &lt;code&gt;ArrayAdapter&lt;/code&gt; by passing 3 arguments: &lt;code&gt;context&lt;/code&gt;, layout and the array of data. We passed &lt;code&gt;this&lt;/code&gt; for the &lt;code&gt;Context&lt;/code&gt; as it represents the current activity. We chose &lt;a href="https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/res/res/layout/simple_list_item_1.xml"&gt;simple_list_item_1&lt;/a&gt; for the layout, which just contains a single &lt;code&gt;TextView&lt;/code&gt;. And here we assume that there is an &lt;code&gt;ArrayList&lt;/code&gt; called students containing a series of student names, which was passed as our 3rd argument.&lt;/p&gt;

&lt;p&gt;With all these details provided, &lt;code&gt;ArrayAdapter&lt;/code&gt; knows what to do. So all that is left to do is to set an &lt;code&gt;Adapter&lt;/code&gt; with your &lt;code&gt;ListView&lt;/code&gt;. I'd say the &lt;code&gt;ArrayAdapter&lt;/code&gt; is quite handy to work with!&lt;/p&gt;

&lt;p&gt;Please note that by default &lt;code&gt;ArrayAdapter&lt;/code&gt; only returns a single &lt;code&gt;View&lt;/code&gt;. This is a key point when you would like to display more than just the names of students. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#showcasing-more-details-in-your-list"&gt;
  &lt;/a&gt;
  Showcasing more details in your list
&lt;/h2&gt;

&lt;p&gt;Up until now, our list contains only one details, the student name. But what if you want to display more details like student level and profile image in the list. However, &lt;code&gt;ArrayList&lt;/code&gt; is expected to return a single &lt;code&gt;View&lt;/code&gt;... It seems like we need to make some adjustments to cater for our new data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the list of things to do:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new object to store all of the data types (2 &lt;code&gt;TextView&lt;/code&gt;s and 1 &lt;code&gt;ImageView&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Adjust &lt;code&gt;ArrayList&lt;/code&gt; to hold the newly created object (contains names, levels and profile images)&lt;/li&gt;
&lt;li&gt;Create a custom &lt;code&gt;ArrayAdapter&lt;/code&gt; to update the default behaviour of the &lt;code&gt;getView()&lt;/code&gt; method so that it can return the &lt;code&gt;View&lt;/code&gt; containing multiple data&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAX7ravz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lo0sg4cw05b69ebhk60z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAX7ravz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lo0sg4cw05b69ebhk60z.png" alt="A graphics of how the adapter work with ListView and ArrayList"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go through it one by one. The first step is to create a new object so that we can store the data we want. Remember, the fields we want to set up are for name, level and profile image. To create a new class with the fields required is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Student.java&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;mName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;mLevel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mImageResourceId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;imageResourceId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;mName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;mLevel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;mImageResourceId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageResourceId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getLevel&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mLevel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getImageResourceId&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mImageResourceId&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have created a new public class called Student. Make sure to set your variable &lt;code&gt;private&lt;/code&gt; so that it won't be updated by someone accidentally. Also, set getter methods to be public so that we can access the details later. &lt;br&gt;
After setting up this object, make sure to update your list of data to cater for these 3 details. Your &lt;code&gt;ArrayList&lt;/code&gt; now should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create an ArrayList with Student obj&lt;/span&gt;
&lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;studentList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Assign each details&lt;/span&gt;
&lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Jane"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Beginner"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;drawable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jane&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bob"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Intermediate"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;drawable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Lisa"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Advanced"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;drawable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lisa&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="na"&gt;etc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we need to create a custom &lt;code&gt;Adapter&lt;/code&gt; by extending &lt;code&gt;ArrayAdapter&lt;/code&gt;. You can name it whatever it's suitable but in this example, we call it StudentAdapter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Creating a custom adapter by extending ArrayAdapter with Student data &lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StudentAdapter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;ArrayAdapter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Student&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Set a custom constructer&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;StudentAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Activity&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Word&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// The second parameter is 0 as we won't use constructer to inflate the views.&lt;/span&gt;
        &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="nf"&gt;getView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="n"&gt;convertView&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if the existing view is being reused, otherwise inflate the view manually&lt;/span&gt;
        &lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="n"&gt;listItemView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;convertView&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listItemView&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;listItemView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;LayoutInflater&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getContext&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;inflate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                    &lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;list_item&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Get the Student object located at the given position&lt;/span&gt;
        &lt;span class="nc"&gt;Student&lt;/span&gt; &lt;span class="n"&gt;currentStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getItem&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Set up one of the TextViews with the name text obtained from the Student object&lt;/span&gt;
        &lt;span class="nc"&gt;TextView&lt;/span&gt; &lt;span class="n"&gt;studentName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;listItemView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;studentName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentStudent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;

        &lt;span class="c1"&gt;// Set up the other TextView with the level text obtained from the Student object&lt;/span&gt;
        &lt;span class="nc"&gt;TextView&lt;/span&gt; &lt;span class="n"&gt;studentLevel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;listItemView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;level&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;studentLevel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setText&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentStudent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLevel&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;


        &lt;span class="c1"&gt;// Set up the ImageView with the resource ID obtained from the Student object&lt;/span&gt;
        &lt;span class="nc"&gt;ImageView&lt;/span&gt; &lt;span class="n"&gt;imageView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ImageView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;listItemView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;imageView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setImageResource&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentStudent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getImageResourceId&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;


        &lt;span class="c1"&gt;// Return the list item layout (containing 2 TextViews and an ImageView)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;listItemView&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have created a custom adapter called StudentAdapter by extending an &lt;code&gt;ArrayAdapter&amp;lt;Student&amp;gt;&lt;/code&gt;. We have also specified what data we use for the adapter by adding &lt;code&gt;&amp;lt;Student&amp;gt;&lt;/code&gt;. Inside of that, we have set &lt;code&gt;super&lt;/code&gt; constructor (inherited from &lt;code&gt;ArrayAdapter&lt;/code&gt;) - one thing to note here is we did not specify the layout. This is because we want &lt;code&gt;getView()&lt;/code&gt; method to take care of that. &lt;/p&gt;

&lt;p&gt;Moving on to the overring &lt;code&gt;getView()&lt;/code&gt; method, we first check if the &lt;code&gt;convertView&lt;/code&gt; has something in it, meaning that whether or not there are any old rows in the scrap pile. If not, we need to inflate the views manually. In most cases, this is needed when the activity has just stated (e.g. A user just opened the screen). &lt;/p&gt;

&lt;p&gt;If it contains rows, then we can specify what needs to be done before returning a single View. In our case, we have set the name and level texts (obtained from the Student object) on the &lt;code&gt;TextView&lt;/code&gt;'s respectively and 1 image resource ID on the &lt;code&gt;ImageView&lt;/code&gt;. We identified which student data to handle is by using &lt;code&gt;getItem()&lt;/code&gt; method with position info that is originally coming from &lt;code&gt;ListView&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;After finishing all of the above, we just need to set a &lt;code&gt;listView&lt;/code&gt; with an instantiated StudentAdapter as our final step.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Instantiate the custom ArrayAdapter called StudentAdapter&lt;/span&gt;
&lt;span class="nc"&gt;StudentAdapter&lt;/span&gt; &lt;span class="n"&gt;adapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;StudentAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;studentList&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Getting an ID for the ListView&lt;/span&gt;
&lt;span class="nc"&gt;ListView&lt;/span&gt; &lt;span class="n"&gt;listView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;list&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Set an adapter&lt;/span&gt;
&lt;span class="n"&gt;listView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAdapter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adapter&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We have gone through from basic to custom usage of &lt;code&gt;ListView&lt;/code&gt; and &lt;code&gt;ArrayAdapter&lt;/code&gt;. This is one of the ways that I have recently learnt to display a list of items. I'm pretty sure I will encounter alternatives in the near future. When I do, I will write other articles to evaluate them! &lt;/p&gt;

&lt;p&gt;If you know the alternatives or any suggestions to improve my approach, please feel free to leave a comment. I just started learning Java 2 weeks ago and am willing to absorb as much as I can throughout my journey! Thanks for reading 😄&lt;/p&gt;

</description>
      <category>android</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Os desafios da usabilidade em Interfaces</title>
      <author>Gustrdias</author>
      <pubDate>Sat, 17 Apr 2021 01:20:19 +0000</pubDate>
      <link>https://dev.to/gustrdias/os-desafios-da-usabilidade-em-interfaces-1c5f</link>
      <guid>https://dev.to/gustrdias/os-desafios-da-usabilidade-em-interfaces-1c5f</guid>
      <description>&lt;p&gt;"Usabilidade é um atributo de qualidade que pode ser definido por cinco componentes: facilidade de aprendizado, eficiência de uso, facilidade de memorização, prevenção e tratamento de erros, e nível de satisfação." Nielsen(2003),essa diretiva direciona para uma interface, mais limpa, onde o conteúdo mostrado seja de fácil entendimento, sem ter a necessidade de decorar o caminho pois ela terá tudo que for necessário em sua tela atual, e com uma padronização de cores e modelos das telas garantirá a aprendizagem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xQ49At8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uejg3nziitqu5zglorj4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xQ49At8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uejg3nziitqu5zglorj4.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O usuário terá a noção do que irá acontecer, ao realizar determinada ação, mas o foco é realizar com êxito o seu proposito e como descreve Preece: "São definidas as metas de usabilidade, que pretendem promover um sistema eficiente, eficaz e agradável, e as metas experiências do usuário, que se referem a como ele se sentirá ao utilizar o ambiente digital(Preece, Rogers e Sharp, 2005)", porem o grande desafio é conseguir aplicar essas diretrizes para grande parte das pessoas, sendo ela pessoas da terceira idade, crianças e pessoas com necessidade especiais.&lt;/p&gt;

&lt;p&gt;Uma interface "limpa" ,talvez não seja capaz de suprir todas essas barreiras, e por isso as interfaces ainda necessitam de uma avaliação, e até se possível uma união de outras formas de definições de usabilidade, que por sua vez existem varias metodologias (GERHARDT-POWALS,1996; GOULD e LEWIS,1985; IBM,1991; LOCKHEED, 1981; MOLICH e NIELSEN,1990), como por exemplo o auxilio de fatores externos como teclados, objetos sonoros, mas ainda muito fragmentadas o que dificulta a escolha.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xwakhaRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7xtx339mhd4js9sfzei.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xwakhaRx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7xtx339mhd4js9sfzei.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“Flexibilidade proporcionada para o acesso à&lt;br&gt;
informação e à interação, de maneira que usuários com diferentes&lt;br&gt;
necessidades possam acessar e usar esses sistemas”(Melo e Baranauskas,2006).&lt;br&gt;
Essa visão de garantir que essa usabilidade, fique acessível a essas condições adversas, vai agregando valor ao produto e repassa para o conhecimento da população sobre essas dificuldades, e ganhos de acesso para esses usuários, onde a Lei Brasileira de Inclusão da Pessoa com Deficiência LEI Nº 13.146, DE 6 DE JULHO DE 2015 existe para garantir esse acesso a todos.&lt;/p&gt;

&lt;p&gt;Conhecendo as dificuldades, e conhecendo os diversos métodos, é necessário criar um planejamento para o desenvolvimento dessa interface acessível, com realizações de testes, tanto visual quanto sonoras, e até buscando uma padronização dessas telas, os Design Patterns. &lt;/p&gt;

&lt;p&gt;E seguindo a metodologia de Ben Shneiderman ele propôs a conhecida "regras de ouro" que são 8 regras:&lt;/p&gt;

&lt;p&gt;■ perseguir a consistência;&lt;br&gt;
■ fornecer atalhos;&lt;br&gt;
■ fornecer feedback informativo;&lt;br&gt;
■ marcar o final dos diálogos;&lt;br&gt;
■ fornecer prevenção e manipulação simples de erros;&lt;br&gt;
■ permitir o cancelamento das ações;&lt;br&gt;
■ fornecer controle e iniciativa ao usuário;&lt;br&gt;
■ reduzir a carga de memória de trabalho.&lt;/p&gt;

&lt;p&gt;Resumindo cada regra&lt;br&gt;
 A estrutura da interface criada deve estar presente em todas as telas que estão nesse site/aplicativo, mantendo as formas dos botões, da letras, cores, e também modo de escrita.&lt;/p&gt;

&lt;p&gt;Garantir que o usuário possa escolher duas ou mais formar de chegar em seu objetivo, com por exemplo: acessar a tela X, pela barra lateral, ou encontra-la na barra de busca através da pesquisa.&lt;/p&gt;

&lt;p&gt;O usuário precisa saber de forma explicita, quais ações que ele realizou ou precisa realizar para chegar em seu objetivo.&lt;/p&gt;

&lt;p&gt;E mostrar que essas ações foram realizadas com sucesso ou não e se não, como proceder.&lt;/p&gt;

&lt;p&gt;Erros de usuários devem ser tratados de forma clara, possibilitando ao usuário corrigi-lo sem muitas dificuldades.&lt;/p&gt;

&lt;p&gt;Garantir que o usuário, voltar a ação anterior, para modifica-la ou até cancelar.&lt;/p&gt;

&lt;p&gt;O usuário deve estar no "controle" do sistema, podendo sair a hora que ele quiser.&lt;/p&gt;

&lt;p&gt;Garantir que dados necessários sejam mostrados entre as telas, evitando assim que o usuário tenha que retornar a tela anterior para pegar algum dado especifico.&lt;/p&gt;

&lt;p&gt;Seguindo as regras terá uma interface aos moldes dessa metodologia, mas nada é uma mar de rosas, por isso é necessário a realização de uma bateria de testes para realizar o acompanhamento dessa interface e levantar possíveis dificuldades durante esse ciclo, dividindo em graus de dificuldade onde poderão ser ajustadas conforme necessidade.&lt;/p&gt;

&lt;p&gt;E com a pandemia, se criou novos modelos de aplicativos para outros nichos, que precisam ser trabalhados para que se tornem novos caminhos para novas melhorias das interfaces atuais.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OclZA7ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uuz69i9suvgxtyoosdm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OclZA7ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uuz69i9suvgxtyoosdm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deixando dois links que são sites voltados a acessibilidade &lt;a href="http://www.hcibib.org/accessibility/"&gt;http://www.hcibib.org/accessibility/&lt;/a&gt; e &lt;a href="http://www.w3.org/WAI/"&gt;http://www.w3.org/WAI/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Referências:&lt;br&gt;
1-Designing the user interface (SHNEIDERMAN &amp;amp; PLAISANT, 2004)&lt;br&gt;
2-Ergonomia e Usabilidade Walter C., Adriana H., Richard F.&lt;br&gt;
3-Jakob Nielsen Projetando websites, Rio de Janeiro Campus. 2000&lt;br&gt;
4-PREECE J.ROGERS, Y. SHARP, H., 2005, Design de interação: além da interação homem-interface&lt;br&gt;
5-Metodologia para design de interfaces digitais para educação Paula Caroline S., J. Passos, P. Alejandra Behar&lt;br&gt;
6-Um Modelo de Cores na Usabilidade das Interfaces Computacionais para os Deficientes de Baixa Visão, C.C Kulpa,F.G. Teixeira, R.P. Silva&lt;/p&gt;

</description>
    </item>
    <item>
      <title>React Native e2e tests and Automatic Deploys (Detox + Fastlane + CircleCI)</title>
      <author>Roberto Junior Amarante Calderón</author>
      <pubDate>Sat, 17 Apr 2021 01:18:17 +0000</pubDate>
      <link>https://dev.to/kyonru/react-native-e2e-tests-and-automatic-deploys-detox-fastlane-circleci-3gkn</link>
      <guid>https://dev.to/kyonru/react-native-e2e-tests-and-automatic-deploys-detox-fastlane-circleci-3gkn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#a-little-bit-of-context-skippable"&gt;
  &lt;/a&gt;
  A little bit of context (skippable)
&lt;/h1&gt;

&lt;p&gt;These past weeks I've been struggling trying to set up a pipeline where for every PR pointing to our staging branch, e2e tests run automatically, and for every PR that gets merged, test flight builds, and google internal beta builds are created. My experience has been... difficult, but it doesn't mean yours should too.&lt;/p&gt;

&lt;p&gt;tl;dr; &lt;code&gt;PAIN&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-i-need-for-this"&gt;
  &lt;/a&gt;
  What do I need for this?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-circle-cis-performance-plan"&gt;
  &lt;/a&gt;
  1. Circle CI's &lt;a href="https://circleci.com/pricing/"&gt;performance plan&lt;/a&gt;.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Since we are going to use macs for building our apps. If you only need android builds, you can easily achieve this with github actions, see&lt;/code&gt;&lt;a href="https://github.com/Kyonru/just-a-review-app/tree/master/src"&gt;this project for an example&lt;/a&gt; and &lt;a href="https://dev.to/zenika/deploy-react-native-app-on-the-playstore-with-fastlane-and-github-actions-1-2-8l2"&gt;this amazing post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-apple-connect-account-amp-google-play-console-account"&gt;
  &lt;/a&gt;
  2. Apple connect account &amp;amp; Google play console account.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;This will be needed for automatic deployments(2nd part).&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-patience"&gt;
  &lt;/a&gt;
  3. Patience
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Trust me, you'll need it. CIs can smell fear.&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-get-this-started"&gt;
  &lt;/a&gt;
  Let's get this started
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-add-detox-into-your-react-native-project"&gt;
  &lt;/a&gt;
  1. Add detox into your react native project.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Please, follow&lt;/code&gt; &lt;a href="https://github.com/wix/Detox/blob/master/docs/Introduction.GettingStarted.md"&gt;this guide&lt;/a&gt; &lt;code&gt;using JEST step by step in order to have it correctly configured in your project. Here is an&lt;/code&gt;&lt;a href="https://gist.github.com/Kyonru/18606e13372273dad994672171ec9945"&gt;example of a .detoxrc.json&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you can run e2e tests locally, you're ready to go for the next step.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-set-up-circleci"&gt;
  &lt;/a&gt;
  2. Set up CircleCI.
&lt;/h3&gt;

&lt;p&gt;If you don't have CircleCI, you can learn how to add it &lt;a href="https://circleci.com/docs/2.0/getting-started/#section=getting-started"&gt;here&lt;/a&gt;.&lt;br&gt;
Don't worry too much about the content on the config.yml, since we are going to completely modify it. &lt;code&gt;:)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;At this point, you should have a folder named &lt;code&gt;.circleci/&lt;/code&gt; with a &lt;code&gt;config.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Let's make magic using &lt;a href="https://circleci.com/orbs/"&gt;orbs&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Add this to your &lt;code&gt;/app/build.gradle&lt;/code&gt; since we are going to use the &lt;a href="https://github.com/react-native-community/react-native-circleci-orb"&gt;react-native-circleci-orb&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight gradle"&gt;&lt;code&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nf"&gt;downloadDependencies&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="s1"&gt;'Download all dependencies to the Gradle cache'&lt;/span&gt;
  &lt;span class="n"&gt;doLast&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;configurations&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findAll&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"minReactNative"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;canBeResolved&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt;
        &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;files&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#feeling-lucky"&gt;
  &lt;/a&gt;
  Feeling lucky?
&lt;/h3&gt;

&lt;p&gt;React native community example of how to use this orb is the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.1&lt;/span&gt;

&lt;span class="na"&gt;orbs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;rn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;react-native-community/react-native@5.1.0&lt;/span&gt;
&lt;span class="c1"&gt;# Custom jobs which are not part of the Orb&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;checkout_code&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/linux_js&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;persist_to_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
          &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
  &lt;span class="na"&gt;analyse_js&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/linux_js&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run ESLint&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn eslint&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Flow&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn flow&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Jest&lt;/span&gt;
          &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn jest&lt;/span&gt;

&lt;span class="na"&gt;workflows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Checkout the code and persist to the Workspace&lt;/span&gt;
      &lt;span class="c1"&gt;# Note: This is a job that is defined above and not part of the Orb&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout_code&lt;/span&gt;

      &lt;span class="c1"&gt;# Analyze the Javascript using ESLint, Flow, and Jest&lt;/span&gt;
      &lt;span class="c1"&gt;# Note: This is a job that is defined above and not part of the Orb&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;analyse_js&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout_code&lt;/span&gt;

      &lt;span class="c1"&gt;# Build the Android app in debug mode&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/android_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build_android_debug&lt;/span&gt;
          &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;android"&lt;/span&gt;
          &lt;span class="na"&gt;build_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;debug&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;

      &lt;span class="c1"&gt;# Build and test the Android app in release mode&lt;/span&gt;
      &lt;span class="c1"&gt;# Note: We split these into separate jobs because we can build the Android app on a Linux machine and preserve the expensive MacOS executor minutes for when it's required&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/android_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build_android_release&lt;/span&gt;
          &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;android"&lt;/span&gt;
          &lt;span class="na"&gt;build_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;release&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/android_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;detox_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;android.emu.release"&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;build_android_release&lt;/span&gt;

      &lt;span class="c1"&gt;# Build the iOS app in release mode and do not run tests&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/ios_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build_ios_release&lt;/span&gt;
          &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ios/Example.xcodeproj&lt;/span&gt;
          &lt;span class="na"&gt;device&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;iPhone&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;X"&lt;/span&gt;
          &lt;span class="na"&gt;build_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Release&lt;/span&gt;
          &lt;span class="na"&gt;scheme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Example&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;

      &lt;span class="c1"&gt;# Build and test the iOS app in release mode&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/ios_build_and_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios/Example.xcodeproj"&lt;/span&gt;
          &lt;span class="na"&gt;device&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;iPhone&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;X"&lt;/span&gt;
          &lt;span class="na"&gt;build_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Release"&lt;/span&gt;
          &lt;span class="na"&gt;scheme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Example"&lt;/span&gt;
          &lt;span class="na"&gt;detox_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios.sim.release"&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there is a catch, in my experience, it did not work. &lt;a href="https://circleci.com/developer/orbs/orb/react-native-community/react-native#usage-full"&gt;Here are the docs&lt;/a&gt; of every helper function on this orb.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h3&gt;

&lt;p&gt;Welp let's go step by step and create something that works &lt;code&gt;;)&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#orb"&gt;
  &lt;/a&gt;
  Orb
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: 2.1
orbs:
  rn: react-native-community/react-native@5.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we call it &lt;code&gt;rn&lt;/code&gt;, this name can be whatever you want, and it's just used to specify when a job is coming from the orb. Ex.  &lt;code&gt;rn/yarn_install&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#jobs"&gt;
  &lt;/a&gt;
  Jobs
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#checkoutcode"&gt;
  &lt;/a&gt;
  checkout_code
&lt;/h5&gt;

&lt;p&gt;Check out the code and persist to the Workspace, needed in order to do stuff in the project root.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;checkout_code&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/linux_js&lt;/span&gt;
    &lt;span class="na"&gt;node_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;12"&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;persist_to_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
        &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#analysejs"&gt;
  &lt;/a&gt;
  analyse_js
&lt;/h5&gt;

&lt;p&gt;Running jest test on Linux. Note how we use an &lt;a href="https://circleci.com/docs/2.0/executor-types/"&gt;executor&lt;/a&gt; from our orb and define the node_version version for our project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;analyse_js&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/linux_js&lt;/span&gt;
    &lt;span class="na"&gt;node_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;12"&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn test&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run Tests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#android-e2e"&gt;
  &lt;/a&gt;
  Android e2e
&lt;/h5&gt;

&lt;p&gt;In a perfect world, the example on the docs is all you need. But this is programming, specifically, React native that we're talking about, the example is the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/android_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;debug&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build_android_debug&lt;/span&gt;
    &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;android&lt;/span&gt;
    &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/android_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;release&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;build_android_release&lt;/span&gt;
    &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;android&lt;/span&gt;
    &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main issue with this approach is that rn/android_build builds the app as a normal build and not as a detox build which can lead to weird issues and false-negative e2e tests.&lt;/p&gt;

&lt;p&gt;So... yeah, we have to re-do this step manually, but feel free to try! If it works for you, &lt;a href="https://twitter.com/kyonru_"&gt;shame me on Twitter!&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please read the comments to understand what is going on here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;android_e2e_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# Using a mac (:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/macos&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/setup_macos_executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;homebrew_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;node_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;12"&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# basically because of this https://github.com/react-native-community/react-native-circleci-orb/issues/66&lt;/span&gt;
        &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# For my app and react native in general java8 is needed. The default version on this executor was default to java10 for some reason, so this kinda solve that issue.&lt;/span&gt;
        &lt;span class="c1"&gt;# just installing java, android sdk, and needed tools.&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="s"&gt;java -version&lt;/span&gt;

          &lt;span class="s"&gt;brew tap adoptopenjdk/openjdk&lt;/span&gt;

          &lt;span class="s"&gt;brew install --cask adoptopenjdk/openjdk/adoptopenjdk8&lt;/span&gt;

          &lt;span class="s"&gt;java -version&lt;/span&gt;

          &lt;span class="s"&gt;export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)&lt;/span&gt;

          &lt;span class="s"&gt;mkdir -p ~/.android &amp;amp;&amp;amp; touch ~/.android/repositories.cfg&lt;/span&gt;

          &lt;span class="s"&gt;java -version&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager "platform-tools" "tools" &amp;gt;/dev/null&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager "platforms;android-29"&lt;/span&gt;
          &lt;span class="s"&gt;"system-images;android-29;default;x86_64" &amp;gt;/dev/null&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager "emulator" --channel=3 &amp;gt;/dev/null&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager "build-tools;29.0.2" &amp;gt;/dev/null&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager --licenses &amp;gt;/dev/null&lt;/span&gt;

          &lt;span class="s"&gt;yes | sdkmanager --list&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Android Emulator&lt;/span&gt;
        &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/bin/bash -e&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;adb start-server&lt;/span&gt;
          &lt;span class="s"&gt;adb devices&lt;/span&gt;
          &lt;span class="s"&gt;adb kill-server&lt;/span&gt;
          &lt;span class="s"&gt;ls -la ~/.android&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ADB Start Stop&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Note we are using a pixel_xl as the test device, feel free to change it for one better fits your app&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)&lt;/span&gt;
          &lt;span class="s"&gt;avdmanager create avd --force --name Pixel_2_API_29 --package "system-images;android-29;default;x86_64" --tag default --device pixel_xl&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create Android Emulator&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;background&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)&lt;/span&gt;
          &lt;span class="s"&gt;$ANDROID_HOME/emulator/emulator @Pixel_2_API_29 -version&lt;/span&gt;
          &lt;span class="s"&gt;$ANDROID_HOME/emulator/emulator @Pixel_2_API_29 -cores 2 -gpu auto&lt;/span&gt;
          &lt;span class="s"&gt;-accel on -memory 2048 -no-audio -no-snapshot -no-boot-anim&lt;/span&gt;
          &lt;span class="s"&gt;-no-window -logcat *:W | grep -i&lt;/span&gt;
          &lt;span class="s"&gt;'ReactNative\|com.reactnativecommunity'&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Start Android Emulator (background)&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="s"&gt;# export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)&lt;/span&gt;

          &lt;span class="s"&gt;export BOOT=""&lt;/span&gt;

          &lt;span class="s"&gt;echo "Waiting for AVD to finish booting"&lt;/span&gt;

          &lt;span class="s"&gt;export PATH=$(dirname $(dirname $(command -v&lt;/span&gt;
          &lt;span class="s"&gt;android)))/platform-tools:$PATH&lt;/span&gt;

          &lt;span class="s"&gt;until [[ "$BOOT" =~ "1" ]]; do&lt;/span&gt;
            &lt;span class="s"&gt;sleep 5&lt;/span&gt;
            &lt;span class="s"&gt;export BOOT=$(adb -e shell getprop sys.boot_completed 2&amp;gt;&amp;amp;1)&lt;/span&gt;
          &lt;span class="s"&gt;done&lt;/span&gt;

          &lt;span class="s"&gt;sleep 15&lt;/span&gt;

          &lt;span class="s"&gt;adb shell settings put global window_animation_scale 0&lt;/span&gt;

          &lt;span class="s"&gt;adb shell settings put global transition_animation_scale 0&lt;/span&gt;

          &lt;span class="s"&gt;adb shell settings put global animator_duration_scale 0&lt;/span&gt;

          &lt;span class="s"&gt;echo "Android Virtual Device is now ready."&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Wait for AVD to be ready&lt;/span&gt;
        &lt;span class="na"&gt;no_output_timeout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;5m&lt;/span&gt;
    &lt;span class="c1"&gt;# Creates the detox build using the orb job&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/detox_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;android.emu.release"&lt;/span&gt;
    &lt;span class="c1"&gt;# Tests the app, you can use rn/detox_test, but I wanted to take screenshots when test fails so I can have a better idea of why did they fail.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;-&lt;/span&gt;
          &lt;span class="s"&gt;detox test -c android.emu.release -l warn --headless&lt;/span&gt;
          &lt;span class="s"&gt;--take-screenshots failing --artifacts-location /tmp/detox_artifacts&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Detox Test&lt;/span&gt;
    &lt;span class="c1"&gt;# Save the screenshots as artifacts, you can see then in the artifact tab for the job in CircleCI&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;store_artifacts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/tmp/detox_artifacts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that all of this can be achieved using the &lt;a href="https://circleci.com/developer/orbs/orb/react-native-community/react-native#executors-linux_android"&gt;rn/linux_android&lt;/a&gt; executor.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#ios-e2e"&gt;
  &lt;/a&gt;
  iOS e2e
&lt;/h5&gt;

&lt;p&gt;In a perfect world, the example on the docs is all you need. And it was for me... until it wasn't. Try the following, if that works for you, &lt;a href="https://twitter.com/kyonru_"&gt;shame me on Twitter!&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Build and test the iOS app in release mode&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/ios_build_and_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios/Example.xcodeproj"&lt;/span&gt;
    &lt;span class="na"&gt;device&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;iPhone&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;X"&lt;/span&gt;
    &lt;span class="na"&gt;build_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Release"&lt;/span&gt;
    &lt;span class="na"&gt;scheme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Example"&lt;/span&gt;
    &lt;span class="na"&gt;detox_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios.sim.release"&lt;/span&gt;
    &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fortunately, ios is better than android. Yeah, I said it... At least development wise. In order to recreate the ios_build_and_test all we need is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Build and test the iOS app in release mode&lt;/span&gt;
&lt;span class="na"&gt;ios_e2e_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/macos&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/setup_macos_executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;homebrew_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;node_version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;12"&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/ios_simulator_start&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;device&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;iPhone&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;11"&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# basically because of this https://github.com/react-native-community/react-native-circleci-orb/issues/66&lt;/span&gt;
        &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/pod_install&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;pod_install_directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ios&lt;/span&gt;
    &lt;span class="c1"&gt;# Yep, it doesn't really matter if you don't run detox build for ios, it works like a charm. But if you prefer, you can replace this step with a custom one.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/ios_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;build_configuration&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Release"&lt;/span&gt;
        &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
        &lt;span class="na"&gt;derived_data_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios/build"&lt;/span&gt;
        &lt;span class="na"&gt;device&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;iPhone&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;11"&lt;/span&gt;
        &lt;span class="na"&gt;project_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;ios/example.xcworkspace"&lt;/span&gt;
        &lt;span class="na"&gt;project_type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;workspace&lt;/span&gt;
        &lt;span class="na"&gt;scheme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;example"&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;-&lt;/span&gt;
          &lt;span class="s"&gt;detox test -c ios.sim.release -l warn --headless --take-screenshots&lt;/span&gt;
          &lt;span class="s"&gt;failing --artifacts-location /tmp/detox_artifacts&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Detox Test&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;store_artifacts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/tmp/detox_artifacts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations! You have e2e tests running in your app! Give yourself a pat in the back and go get a drink, because Fastlane is coming.&lt;/p&gt;

&lt;p&gt;The hardest thing is doing the configurations for your project. Feel free to ask in the comments, but &lt;a href="https://docs.fastlane.tools/"&gt;fastlane documentation&lt;/a&gt; should be enough to get you ready for the next steps.&lt;/p&gt;

&lt;p&gt;Checkout these if you need a place to start:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.fastlane.tools/getting-started/cross-platform/react-native/"&gt;fastlane + react native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thecodingmachine.github.io/react-native-boilerplate/docs/BetaBuild/"&gt;react native tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fastlane.tools/actions/match/"&gt;match&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLPdZXCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg9qxd9f0hdy9rqbawa4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLPdZXCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yg9qxd9f0hdy9rqbawa4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#fastlane-android"&gt;
  &lt;/a&gt;
  Fastlane android
&lt;/h5&gt;

&lt;p&gt;This is easier than what you already did. :) All we need is to install Fastlane on Linux and run our Fastlane lane.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;fastlane_android_internal&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/linux_android&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gem install bundler&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install bundler&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gem install fastlane&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Fastlane&lt;/span&gt;
    &lt;span class="c1"&gt;# Note that my lane is name upload_to_googleplay replaced for yours&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# can be fancier and use working_directory&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cd android &amp;amp;&amp;amp; fastlane upload_to_googleplay&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Upload to google play via Fastlane&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#fastlane-ios"&gt;
  &lt;/a&gt;
  Fastlane ios
&lt;/h5&gt;

&lt;p&gt;I'm pretty sure adding Fastlane to ios was not an easy task. So... Congratulations Shinji! These are basically the same steps but for ios.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# submit app to apple connect testflight&lt;/span&gt;
&lt;span class="na"&gt;fastlane_ios_testflight&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;executor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rn/macos&lt;/span&gt;
  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;attach_workspace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;at&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;rn/yarn_install&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;working_directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ios&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pod install&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gem install bundler&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install bundler&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gem install fastlane&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install Fastlane&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;working_directory&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ios&lt;/span&gt;
        &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fastlane beta&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Upload to Testflight via Fastlane&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So... tips for Fastlane.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.fastlane.tools/best-practices/continuous-integration/"&gt;Fastlane Docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/dumazy/upload-to-testflight-with-fastlane-and-2fa-11k8"&gt;2fa for apple connect&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://circleci.com/docs/2.0/ios-codesigning/#basic-configuration-of-ios-projects"&gt;CircleCI Docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use date for build numbers. (There are other ways to get incremental build numbers, if you want to try them, Can't recommend any since I haven't used any for the ci).

&lt;ul&gt;
&lt;li&gt;android:
in the build.gradle &lt;code&gt;date.getTime() % 100_000_000_000;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;ios:
in fastlane/Fastfile &lt;code&gt;build_number: DateTime.now.strftime("%Y%m%d%H%M")&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#one-more-thing"&gt;
  &lt;/a&gt;
  One more thing
&lt;/h3&gt;

&lt;p&gt;In order to make everything work, we need to create a workflow where we define the order of the steps.&lt;/p&gt;

&lt;p&gt;So... here's a proposal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;workflows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# name of the workflow&lt;/span&gt;
  &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout_code&lt;/span&gt;
      &lt;span class="c1"&gt;# Do jest tests&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;analyse_js&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;checkout_code&lt;/span&gt;
      &lt;span class="c1"&gt;# Build and test the android app in release mode&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;android_e2e_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
      &lt;span class="c1"&gt;# Build and test the iOS app in release mode&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;ios_e2e_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;analyse_js&lt;/span&gt;
      &lt;span class="c1"&gt;# Release apps to stores for testing&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;fastlane_android_internal&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# We only want to deploy to google play when things get merged into the main branch&lt;/span&gt;
          &lt;span class="na"&gt;filters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;only&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
          &lt;span class="c1"&gt;# Note that e2e need to pass in order to release&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;android_e2e_test&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;fastlane_ios_testflight&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# We only want to deploy to google play when things get merged into the main branch&lt;/span&gt;
          &lt;span class="na"&gt;filters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;only&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
          &lt;span class="c1"&gt;# Note that e2e need to pass in order to release&lt;/span&gt;
          &lt;span class="na"&gt;requires&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;ios_e2e_test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If react native, detox, CircleCI and Fastlane decided you can rest today, you should see something like this in your pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM0f9_Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zd3d3iqezz1r9rlprt9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM0f9_Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zd3d3iqezz1r9rlprt9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>testing</category>
      <category>fastlane</category>
      <category>circleci</category>
    </item>
    <item>
      <title>Dawn of the Final Week (Again)</title>
      <author>Chris Pinkney</author>
      <pubDate>Sat, 17 Apr 2021 01:00:48 +0000</pubDate>
      <link>https://dev.to/chrispinkney/dawn-of-the-final-week-again-ee6</link>
      <guid>https://dev.to/chrispinkney/dawn-of-the-final-week-again-ee6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#the-maintainer"&gt;
  &lt;/a&gt;
  The Maintainer
&lt;/h3&gt;

&lt;p&gt;​ Like most weeks we started with panic, but this time with a little extra gusto as it's finals week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs6vMvmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k6caw5jbujz5odb7esu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xs6vMvmG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k6caw5jbujz5odb7esu3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I started off the week by "&lt;em&gt;reviewing&lt;/em&gt;" &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2093#pullrequestreview-635037323"&gt;one of Dave's PRs&lt;/a&gt;. I say "&lt;em&gt;reviewing&lt;/em&gt;" as the tests for the PR are currently not yet passing, as such I was left to only review the code posted and not test the PR locally. As always, the code seemed fine. I was really excited to see this PR as the users microservice is finally starting to seriously come together.&lt;/p&gt;

&lt;p&gt;I also approved &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2150"&gt;a quick-fix PR&lt;/a&gt; from Pedro for a clean $20, as it was discovered that our landing page didn't properly display viewport heights. My favourite kind of PRs are always the ones that are &amp;lt;= 10 SLOC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bVWwQodT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pp3xihqtdiw1ocl5ywo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bVWwQodT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9pp3xihqtdiw1ocl5ywo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also approved a really interesting &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2159#pullrequestreview-637711102"&gt;Docker related PR&lt;/a&gt; from Doc Josue! I had never thought about how containers and volumes dispose of unused elements until now. I guess I just magically assumed they would disappear when the container closes.&lt;/p&gt;

&lt;p&gt;Reviewed &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2130#discussion_r614926813"&gt;some changes&lt;/a&gt; to the frontend made by Royce, I liked where it was heading, just not how the names were duplicated. We discussed it during our Friday meeting as well, and everyone seemed to share a general consensus about the duplicated names but also agreed that the line was an excellent touch.&lt;/p&gt;

&lt;p&gt;I approved Tony's PWA PR again since we have a bunch of testing now. I think it's adequate, however, Dave has expressed reluctance to add it as we're currently unsure how the PWA will behave when we deploy an update to prod. Tony has since reached out to the maintainer of next-pwa for answer. As a result, I have removed my approval and apologized to Tony. Hopefully we'll get a reply soon and can get some answers so we can move forward with this. Still one of my favourite PRs.&lt;/p&gt;

&lt;p&gt;I added my &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2117#issuecomment-821259868"&gt;thoughts&lt;/a&gt; to a comment that Tony left on an issue suggesting a share icon feature addition to Telescope. Tony expressed hesitation about working on this feature, but I think working in open source forces collaboration, expression, critique, and commentary, and shared my opinion as such. I'm curious to see what we can do with this. A share button would be cool, especially if it copied the link URL to the clipboard, then a user can just ctrl-v to share it to someone. Might be a nice feature for new comers to the project to tackle!&lt;/p&gt;

&lt;p&gt;I also reviewed Royce's new &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2163#pullrequestreview-638098518"&gt;SearchHelp PR&lt;/a&gt; which changes how the helpful search instructions are displayed on our search page. I pointed out a bug (&lt;em&gt;that may or may not be related to his PR&lt;/em&gt;). Lots of great frontend fixes lately from Royce!&lt;/p&gt;

&lt;p&gt;Finally, in other humorous news, &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2165"&gt;I left a really dumb review&lt;/a&gt; on something that is either not finished, failing CI, or both. Heh. I'll have to take another look at it when it's ready. GitHub is great but either I'm not great, or the UI is occasionally un-intuitive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zuwjf99m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnaei7givgaoi8o42c0f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zuwjf99m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnaei7givgaoi8o42c0f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-microservice"&gt;
  &lt;/a&gt;
  The Microservice
&lt;/h3&gt;

&lt;p&gt;​ I started working on converting the unit tests inside the Users Microservice to proper e2e type tests tests two days ago but ran into a few snags. For the life of both Josue and I just could not get the microservice to respond properly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// takes a user object, performs GET using the user's email&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;USERS_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;Authorization&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`bearer &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;createServiceToken&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;allUsers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;--&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="nx"&gt;objects&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;response.body&lt;/code&gt; simply refused to co-operate with us, and returned a bunch of crap that we didn't want. Give us the user, curse you! &lt;del&gt;&lt;a href="https://www.youtube.com/watch?v=W07r0-_Efi8"&gt;Curse you and all the halflings!&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;The solution ended up being &lt;code&gt;const user = await response.json()&lt;/code&gt; which allowed us to parse the JSON returned and make assertions based on the user returned via the &lt;code&gt;GET&lt;/code&gt;s body. I'm currently sitting at 6 tests rewritten out of the... who knows, 15 or so that I have to do? I'm hoping to have the rest of them done by Sunday.&lt;/p&gt;

&lt;p&gt;With only 1 week left I made it a point to issue a call for a potential roadmap for the Users Microservice. We still have a lot of work to do, but fortunately there's a bunch of us working on this stuff and a few items won't take too long. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOn0-CRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3pfsvgabisffzzndba4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOn0-CRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3pfsvgabisffzzndba4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After these e2e tests go in to replace the current unit tests I'll be shifting gears to work on &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2153"&gt;how users are declared administrators&lt;/a&gt;, followed up by &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/1932"&gt;some research&lt;/a&gt;, and concluded with &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/1974"&gt;adding some quotes&lt;/a&gt;. Then finishing up what isn't done by end of week!&lt;/p&gt;




&lt;p&gt;&lt;iframe width="100%" height="80px" src="https://open.spotify.com/embed/track/1OeD1qftfYJk3B0q4ADP6L"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In other more personal news:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My first final went &lt;em&gt;okay&lt;/em&gt; I think... hopefully.&lt;/li&gt;
&lt;li&gt;Think I might buy a cherry tree for my backyard garden this year. I have no idea how trees work or how to care for them so hopefully I learn a lot...

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;A society grows great when aged people plant trees in whose shade they know they shall never sit.&lt;/em&gt; 🌲&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Continuing with my Rust fascination from the previous blog post, I stumbled upon a &lt;a href="https://github.com/atsamd-rs/atsamd"&gt;Rust cargo library&lt;/a&gt; which adds support for various microcontrollers. I have a Circuit Playground Express sitting in my basement. I bought it last year with the hopes of designing an automated garden watering system. Maybe I'll try it in Rust sometime!&lt;/li&gt;
&lt;li&gt;I've always wanted to get involved in something impactful. &lt;a href="https://www.remoteimpact.io/"&gt;I remember a website that I bookmarked for this just occasion!&lt;/a&gt; Maybe it will help you, dear reader, too.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>bribery</category>
      <category>ohgodhelpme</category>
      <category>beer</category>
    </item>
    <item>
      <title>How to stream a local file into a real-time video call</title>
      <author>Kimberlee Johnson </author>
      <pubDate>Fri, 16 Apr 2021 21:41:39 +0000</pubDate>
      <link>https://dev.to/trydaily/a-workaround-for-watching-videos-together-on-calls-2hbh</link>
      <guid>https://dev.to/trydaily/a-workaround-for-watching-videos-together-on-calls-2hbh</guid>
      <description>&lt;p&gt;We've joined a lot of video calls over the last year here at Daily. While it’s easy to chat in real-time with someone on the other side of the world, streaming a video to watch simultaneously as part of that conversation quickly complicates things. We’ve all been in meetings, training sessions, discussion groups, and even catch ups with friends where lags and buggy streams make it impossible to watch a video at the same time. &lt;/p&gt;

&lt;p&gt;With great frustration comes great experimentation, and we’ve come up with a quick hack for streaming local video files during our calls: using the Daily API &lt;a href="https://docs.daily.co/reference#%EF%B8%8F-startscreenshare?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;startScreenShare()&lt;/a&gt; method. &lt;/p&gt;

&lt;p&gt;This tutorial covers our workaround! We’ll go over uploading the local file and creating a stream from it, sharing that stream, and making sure that our hack is working. &lt;/p&gt;

&lt;p&gt;If you’re looking to implement this feature in your own &lt;a href="https://docs.daily.co/docs/embed-the-daily-prebuilt-ui?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;embedded prebuilt UI&lt;/a&gt; or &lt;a href="https://docs.daily.co/docs/build-a-custom-video-chat-interface#daily-call-object?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;Daily call object&lt;/a&gt; video app, you can add to your own code as we go. Or, if you want to fiddle with a working prototype, download &lt;a href="https://gist.github.com/kimberleejohnson/97ef1f01ea8cb63625cdd588b07003b5?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;our gist&lt;/a&gt; and &lt;a href="https://docs.daily.co/docs/create-and-manage-rooms-with-the-rest-api?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;create a Daily room&lt;/a&gt; if you don’t have one already. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-get-started"&gt;
  &lt;/a&gt;
  Before we get started
&lt;/h2&gt;

&lt;p&gt;We put it in the title and we mean it: this is a hack. It’s a workaround, not meant for production, but for low stakes, internal use cases. Somebody may or may not have debuted it by sneaking &lt;a href="https://www.youtube.com/watch?v=_Yhyp-_hX2s"&gt;mom’s spaghetti&lt;/a&gt; into a Daily all hands. &lt;/p&gt;

&lt;p&gt;As with any hack, it also comes with a few caveats:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you’ll be using Chrome, you’ll need to &lt;a href="https://www.lifewire.com/hardware-acceleration-in-chrome-4125122"&gt;disable hardware acceleration&lt;/a&gt; before you share a video stream. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unfortunately, this solution doesn’t work for streaming video from Safari, because Safari doesn’t support &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/captureStream"&gt;captureStream()&lt;/a&gt;.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that, here we go here’s our shot, feet fail us not. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upload-the-local-video-file-and-create-a-stream"&gt;
  &lt;/a&gt;
  Upload the local video file and create a stream
&lt;/h2&gt;

&lt;p&gt;We need an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element with three attributes to upload the video: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;id&lt;/code&gt;: so that we can use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById"&gt;&lt;code&gt;document.getElementById&lt;/code&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/tags/att_input_type.asp"&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;: to specify that this input field is for a file upload. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.w3schools.com/tags/att_input_accept.asp"&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;: to make sure the uploaded file is a video.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"vid-file-picker"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;accept=&lt;/span&gt;&lt;span class="s"&gt;"video/*"&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We add an event listener to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. On &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"&gt;&lt;code&gt;'change'&lt;/code&gt;&lt;/a&gt;, we call our function &lt;code&gt;playLocalVideoFile()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;videoInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vid-file-picker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;callObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;videoInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;playLocalVideoFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;playLocalVideoFile()&lt;/code&gt; creates a video stream from the file using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/captureStream"&gt;captureStream()&lt;/a&gt; or mozCaptureStream() if you’re using FireFox.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;playLocalVideoFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;local-vid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;canPlayType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cannot play that file&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createObjectURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Mozilla currently prefixes the function name, so we have to check for either&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mozCaptureStream&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localVideoStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mozCaptureStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;captureStream&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localVideoStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;videoEl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;captureStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have the stream, we can share it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#share-the-stream-with-call-participants"&gt;
  &lt;/a&gt;
  Share the stream with call participants
&lt;/h2&gt;

&lt;p&gt;We add a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; to &lt;code&gt;shareVideo()&lt;/code&gt; through the screen share stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"shareVideo()"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;share video through screenshare stream&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;shareVideo()&lt;/code&gt; calls the Daily &lt;a href="https://docs.daily.co/reference#%EF%B8%8F-startscreenshare?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;startScreenShare()&lt;/a&gt; method on the &lt;a href="https://docs.daily.co/docs/build-a-custom-video-chat-interface#daily-call-object?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;Daily call object&lt;/a&gt;, passing the &lt;code&gt;localVideoStream&lt;/code&gt; created via &lt;code&gt;playLocalVideo()&lt;/code&gt; as the media stream to be shared:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;shareVideo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;callObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startScreenShare&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;localVideoStream&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#test-the-stream"&gt;
  &lt;/a&gt;
  Test the stream
&lt;/h2&gt;

&lt;p&gt;Make sure you have a &lt;a href="https://docs.daily.co/docs/create-and-manage-rooms-with-the-rest-api?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;Daily room URL&lt;/a&gt; ready. We hardcoded ours as a &lt;code&gt;const&lt;/code&gt; in our html file because, again, this is a hack. Relatedly, if you’re using Chrome, don’t forget to &lt;a href="https://www.lifewire.com/hardware-acceleration-in-chrome-4125122"&gt;disable hardware acceleration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Next, open the file in your browser. In a new tab, visit your Daily room URL. You should see two participants in the room tab, but just you in the file tab. &lt;/p&gt;

&lt;p&gt;Click "Choose File" and upload the local video of your choice. If you need inspiration for what file to choose, try searching on &lt;a href="https://www.pexels.com/videos/"&gt;Pexels&lt;/a&gt; for puppies (that’s what I did). Finally, click “share video through screen share stream” and in the tab with the room URL you should see the video coming through. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VMXYoJXo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niayloktucxucyxv477i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VMXYoJXo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niayloktucxucyxv477i.gif" alt="gif shows video call where video of a puppy plays on the biggest video stream "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#snap-back-to-reality-whats-next"&gt;
  &lt;/a&gt;
  Snap back to reality (what’s next)
&lt;/h2&gt;

&lt;p&gt;That’s it! Thanks for reading. We hope this makes sharing videos for everyone to watch on your calls easier. Let us know in the comments!&lt;/p&gt;

&lt;p&gt;And, if you’re interested in building more apps that are all about sharing and streaming content, our &lt;a href="https://www.daily.co/blog/webinartc-building-a-webinar-app-with-react-and-daily-prebuilt-ui/?utm_source=dev&amp;amp;utm_campaign=stream-local-video"&gt;webinar series&lt;/a&gt; might spark some ideas. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>webrtc</category>
    </item>
    <item>
      <title>React Router  - Route ( WTF Moment )</title>
      <author>Santiago Correa</author>
      <pubDate>Fri, 16 Apr 2021 21:02:54 +0000</pubDate>
      <link>https://dev.to/scorreaui/react-router-route-wtf-moment-3102</link>
      <guid>https://dev.to/scorreaui/react-router-route-wtf-moment-3102</guid>
      <description>&lt;p&gt;Recently I was working on a project which consisted of books, and I realized that my whole web app was mounting and unmounting instead of the components re-rendering. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;More details:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The project consisted of 2 pages.&lt;/p&gt;

&lt;p&gt;Here's a quick wireframe I whipped up:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IQLGMPcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxgbeeegbjcqi0gwe0l4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IQLGMPcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fxgbeeegbjcqi0gwe0l4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Home&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I used react-router to create the navigation between pages.&lt;/p&gt;

&lt;p&gt;What I didn't know, until I further read their documentation, is that if you use the prop component in &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; it uses React.createElement to create a new React element from the given component.&lt;/p&gt;

&lt;p&gt;That means if you provide an inline function to the component prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. &lt;/p&gt;

&lt;p&gt;This caused undesired behavior which was when I was on the search page and updated the App state it would refresh everything and I would lose the state I had in the Search page. &lt;/p&gt;

&lt;p&gt;Instead, to just make sure the component updates and doesn't mount and unmount when there is an update, &lt;strong&gt;use render&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route
  path='/'
  exact
  render={() =&amp;gt; ( 
   &amp;lt;Home 
    currentlyReading={this.state.currentlyReading} 
    read={this.state.read}
    wantToRead={this.state.wantToRead}
    updateBookShelf={(book, shelf) =&amp;gt; 
    this.updateBookShelf(book, shelf)} /&amp;gt;
  )}
&amp;gt;&amp;lt;/Route&amp;gt;               
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route
  path='/'
  exact
  render={() =&amp;gt; ( 
   &amp;lt;Search 
    allBooks={this.state.books}
    updateBookShelf={(book, shelf) =&amp;gt; 
    this.updateBookShelf(book, shelf)} /&amp;gt;
  )}
&amp;gt;&amp;lt;/Route&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Component unmounts and mounts a new component.&lt;/li&gt;
&lt;li&gt;Render updates components, instead of unmounting and mounting.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>lesson</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Create a Glowing Loader in CSS and HTML</title>
      <author>Hieu Nguyen</author>
      <pubDate>Fri, 16 Apr 2021 20:52:57 +0000</pubDate>
      <link>https://dev.to/hieussr/create-a-glowing-loader-in-css-and-html-3omd</link>
      <guid>https://dev.to/hieussr/create-a-glowing-loader-in-css-and-html-3omd</guid>
      <description>&lt;p&gt;We want our products to leave a good impression on first-time users. So whenever we build something, we make it possible first, then ask if it can be a little unique. And the glowing loader is one of those attempts.&lt;/p&gt;

&lt;p&gt;Here is Hieu's original version on &lt;a href="https://jsfiddle.net/hieunc229/wyk0qg9L/33/"&gt;jsfiddle (33 changes)&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-own-loader-in-html-and-css"&gt;
  &lt;/a&gt;
  Create your own loader in HTML and CSS
&lt;/h2&gt;

&lt;p&gt;The loader design has a container and 3 elements: the background button, glowing spinner, and the logo. While the button and the spinner are all overlay layers (use absolute positioning). &lt;/p&gt;

&lt;p&gt;Let's start with a straigt forward HTML markup as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"spinner"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"background"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"yourlogo.svg"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"28"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#1-the-container"&gt;
  &lt;/a&gt;
  1. The container
&lt;/h3&gt;

&lt;p&gt;The main point of the container is to groups the elements together, and positioning its children &lt;code&gt;logo&lt;/code&gt; in the center. Let's use &lt;code&gt;flex&lt;/code&gt; in this example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.logo-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* align children in the center */&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* a circle with 60x60 pixels */&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a plain logo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XKG1IYls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKG1IYls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before going into the button background and the spinner. We need to make sure they are overlay layers, by applying absolute positioning as following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.background&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.spinner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#2-the-button-background"&gt;
  &lt;/a&gt;
  2. The button background
&lt;/h3&gt;

&lt;p&gt;The button background is a circle, with a matte-ish gradient and shadows. Here's one way to do it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* The button background layer */&lt;/span&gt;
&lt;span class="nc"&gt;.background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#0f1013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#252730&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt; &lt;span class="m"&gt;32px&lt;/span&gt; &lt;span class="m"&gt;-2px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It'll look like this now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EbmgmiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EbmgmiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-bring-logo-to-front"&gt;
  &lt;/a&gt;
  3. Bring logo to front
&lt;/h3&gt;

&lt;p&gt;In case you can't see your logo, you will need to use &lt;code&gt;z-index&lt;/code&gt; to bring the &lt;code&gt;logo&lt;/code&gt; on top. Simple as the following CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.logo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#4-glowing-spinner"&gt;
  &lt;/a&gt;
  4. Glowing spinner
&lt;/h3&gt;

&lt;p&gt;Glowing spinner layer use a &lt;code&gt;top-border&lt;/code&gt; attribute, with shadow to add the glowing effect. It can be done as following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.spinner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#ae34db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* glowing with shadow (30% of #ae34db) */&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;-5px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;#ae34db4&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/* add spin animation */&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;spin&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the animation keyframes. It's basically a keyframe that rotate the light spinner in a 360 degree circle&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;spin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a glowing spinner with your logo inside. Here is our final result.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yzr9qd1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yzr9qd1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://wilson.inverr.com/media/glowing-spinner-3.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can play with the &lt;code&gt;spin&lt;/code&gt; keyframe to change the glowing colors, or spread the shadow more to make it like a siren light.&lt;/p&gt;




&lt;p&gt;Now you know how to create a glowing loader. It contains a matte-ish gradient background, with a glowing spinner. You can check out the final result &lt;a href="https://jsfiddle.net/m52jdu3e/"&gt;on jsfiddle&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;Let us know &lt;a href="https://inverr.com/contact"&gt;what you think&lt;/a&gt; and thanks for the support.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>animate</category>
      <category>loader</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 16 Apr 2021 20:07:18 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-4jpb</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-4jpb</guid>
      <description>&lt;p&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
 had some &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-1jd5"&gt;amazing wins&lt;/a&gt; this week! Keep the good work coming!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/technoglot"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t1s7673F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--dh0H24sF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/430182/bd897f8a-247e-44b6-bac8-db79fbe1a55b.jpeg" alt="technoglot profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/technoglot"&gt;
        &lt;span class="comment-username"&gt;Amelia Vieira Rosado&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/technoglot/comment/1d9ce" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr  9
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Let's see...This week was great for me! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I made progress on a small game I'm working on (college stuffs) 🕹&lt;/li&gt;
&lt;li&gt;I got my 4 week streak shiny badge. Consistency for the win! 😁&lt;/li&gt;
&lt;li&gt;My posts on productivity did really well too 😊 (Feel free to check them out, no pressure)&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;Take a look at this &lt;a href="https://dev.to/alvaromontoro/bezos-calculator-4b7h"&gt;brilliant yet sobering calculator&lt;/a&gt; and you'll see what &lt;a class="mentioned-user" href="https://dev.to/crfries"&gt;@crfries&lt;/a&gt;
 means. &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/crfries"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmiwuuwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--o_7lsoTK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/519865/10f72ebb-4176-45be-82ad-8d2cf7b92b50.png" alt="crfries profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/crfries"&gt;
        &lt;span class="comment-username"&gt;crfries&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/crfries/comment/1dcbk" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 13
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;This is amazing and depressing at the same time. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Sometimes, all we need is a little advice from others to get our &lt;a href="https://dev.to/crfries/portfolio-advice-4m1o"&gt;portfolios in shape&lt;/a&gt;. This is a helpful adjustment, &lt;a class="mentioned-user" href="https://dev.to/peterlunch"&gt;@peterlunch&lt;/a&gt;
.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/peterlunch"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GPZ-yvdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--thyPdIOK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/358832/da87fb8f-ff37-491a-b1a6-54bef42f0eb7.jpeg" alt="peterlunch profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/peterlunch"&gt;
        &lt;span class="comment-username"&gt;Peter&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/peterlunch/comment/1dblb" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 12
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;On your intro you say - "I am currently seeking a position at a company to grow and expand my abilities."&lt;/p&gt;

&lt;p&gt;I'd personally adjust to "I am currently seeking a position at a company where I can contribute with my x, y, z skills while I learn and grow from other developers."&lt;/p&gt;

&lt;p&gt;It's always good to say explicitly what you are offering the organization.  &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Choosing your &lt;a href="https://dev.to/bobbyiliev/what-is-your-linux-distribution-of-choice-and-why-2ijf"&gt;Linux distribution&lt;/a&gt; can be a tricky decision to make. Thanks for stating your case and making that choice easier, &lt;a class="mentioned-user" href="https://dev.to/cmuralisree"&gt;@cmuralisree&lt;/a&gt;
.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/cmuralisree"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6ek2QQR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jyGkl1dJ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/554716/b30ee849-0d7c-4245-9b00-1c585cb101db.jpg" alt="cmuralisree profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/cmuralisree"&gt;
        &lt;span class="comment-username"&gt;Chittoji Murali Sree Krishna&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/cmuralisree/comment/1d88k" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr  8
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;h1&gt;
  &lt;a href="#i-use-vanilla-arch"&gt;
  &lt;/a&gt;
  I use Vanilla arch
&lt;/h1&gt;

&lt;p&gt;I love it, bcz&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It's extremely lightweight,&lt;/li&gt;
&lt;li&gt;You are building your own system, so it will be solid stable&lt;/li&gt;
&lt;li&gt;Pacman and AUR,&lt;/li&gt;
&lt;li&gt;Availability of software&lt;/li&gt;
&lt;li&gt;Infamous archwiki,&lt;/li&gt;
&lt;/ol&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In so many ways, &lt;a href="https://dev.to/jordienr/4-books-that-are-not-about-computers-that-made-me-a-good-software-developer-2hac"&gt;reading can make you a better Software Developer&lt;/a&gt;, and these suggestions are heading to the top of the list, for sure. Thanks for choosing our next reads, &lt;a class="mentioned-user" href="https://dev.to/eljayadobe"&gt;@eljayadobe&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dyh0m08q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--J6Pjmr4x--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/16481/7c9b8fa1-9004-4b63-94e9-c282f821bf24.png" alt="eljayadobe profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/eljayadobe"&gt;
        &lt;span class="comment-username"&gt;Eljay-Adobe&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/eljayadobe/comment/1db4l" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 11
  &lt;/time&gt;

    • Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Apr 11&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I wasn't even aware of any of those books.  They're on my book queue now!&lt;/p&gt;

&lt;p&gt;Here's my four non-computer books that I have helped my programming:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The Goal&lt;/strong&gt; by Eliyahu M. Goldratt&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The Design of Everyday Things&lt;/strong&gt; by Don Norman&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Advanced Dungeons &amp;amp; Dragons&lt;/strong&gt; (1st edition) by Gary Gygax, et al&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;To Do Doing Done&lt;/strong&gt; by Snead &amp;amp; Wycoff&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
  </channel>
</rss>
