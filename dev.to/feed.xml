<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>ES6: JavaScript for...of statement</title>
      <author>Naftali Murgor</author>
      <pubDate>Tue, 18 Jan 2022 19:24:39 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/es6-javascript-forof-statement-2caa</link>
      <guid>https://dev.to/naftalimurgor/es6-javascript-forof-statement-2caa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This tutorial will learn about &lt;code&gt;for-of&lt;/code&gt; introduced in  &lt;code&gt;ES6&lt;/code&gt; version of JavaScript.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;for...of&lt;/code&gt; statement is used for iterating over arrays, maps or sets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#looping-over-an-array"&gt;
  &lt;/a&gt;
  Looping over an array
&lt;/h2&gt;

&lt;p&gt;Example in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;banana&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lemon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// looping through&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do something with fruit&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#looping-over-a-string"&gt;
  &lt;/a&gt;
  Looping over a string
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt; can also be used to loop over contents of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Happy new year!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// H a p p y n e w y e a r !&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#looping-over-a-set"&gt;
  &lt;/a&gt;
  Looping over a Set
&lt;/h2&gt;

&lt;p&gt;A set is a collection of unique values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;letters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// a, b, c&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#looping-over-a-map"&gt;
  &lt;/a&gt;
  Looping over a map
&lt;/h2&gt;

&lt;p&gt;A map is key-value pair, where key can be of any type. In JavaScript it's common to use object literals as maps&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Michael Myers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;age&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// made up&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;// or a cleaner way:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Michael Myers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt; introduces a cleaner way of looping over arrays, sets, strings and maps.&lt;/p&gt;




&lt;p&gt;Read more about 👉 &lt;a href="https://dev.toe"&gt;Map objects&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>node</category>
    </item>
    <item>
      <title>7 tips for freelance software developers</title>
      <author>Naftali Murgor</author>
      <pubDate>Tue, 18 Jan 2022 18:42:54 +0000</pubDate>
      <link>https://dev.to/naftalimurgor/7-tips-for-freelance-software-developers-4ol3</link>
      <guid>https://dev.to/naftalimurgor/7-tips-for-freelance-software-developers-4ol3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"What happens to us and what we do are as a result of a series of complex interconnected events that happened in our lives in the past." ~ anonymous&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Freelancing is fun. You don’t have a boss, you can take breaks if you need. You can go for a hike in the middle of a hot Tuesday evening.&lt;/p&gt;

&lt;p&gt;I started as a freelance web developer in late 2018 and here are things I'd consider.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-proper-pricing-model"&gt;
  &lt;/a&gt;
  1. Proper pricing model
&lt;/h3&gt;

&lt;p&gt;As a freelance developer, you get to decide how much your service/product costs depending on your set pricing model.&lt;br&gt;
I started out freelancing on Upwork, then the Fiverr platform before finally looking for clients locally.&lt;/p&gt;

&lt;p&gt;There’s is a common myth that while starting you could do work for free to get testimonials. I’d say approaching a potential client with an offer to do/sell a service for free raises eyebrows.&lt;br&gt;
Offering something at a cheaper rate is worse in the long run.&lt;/p&gt;

&lt;p&gt;My biggest mistake was the poor pricing of services. It hits you when you do more work for less pay and kills so much morale.&lt;/p&gt;

&lt;p&gt;Develop a good pricing model. Have you ever thought and wondered: “One common characteristic of poor quality commodities, electronics, computers is that they are very cheap.” Cheap implies poor quality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-treating-freelancing-as-a-9-5-job"&gt;
  &lt;/a&gt;
  3. Treating freelancing as a 9 - 5 job
&lt;/h3&gt;

&lt;p&gt;I’ve worked a 9 - 5 job as Math/Computer teacher before pursuing web development and I’d say treating freelancing like a 9 - 5 job may be great but it leads to a “need-to-be-always-productive” mood.&lt;/p&gt;

&lt;p&gt;Breaks are good, short meaningful breaks are rewarding in the long run.&lt;br&gt;
It’s okay to be “unproductive” sometimes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-learning-to-say-yes"&gt;
  &lt;/a&gt;
  4. Learning to say “yes”
&lt;/h3&gt;

&lt;p&gt;Most developers striking out freelancers I think often get trapped in situations where they are to choose between saying “no” and end up saying “yes”.&lt;/p&gt;

&lt;p&gt;Here’s what happened to me in 2019: I received an offer to work on a website and the offer went like this:&lt;/p&gt;

&lt;p&gt;Client: Hey, we are launching our campaign this Saturday. I already bought a template to make the work easy for you. It should be ready in 72 hours or less as we have a tight deadline and the donation website should be live during the launch.&lt;/p&gt;

&lt;p&gt;My initial thought was to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Accept the work and find another freelancer to do it.&lt;/li&gt;
&lt;li&gt;Politely decline due to tight deadline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can guess what I did. (Read below)&lt;/p&gt;

&lt;p&gt;Learn to say “yes” and do what you have to do and “No” when you can’t help your client. Doing so reduces the time and money wasted for both you and your client.&lt;/p&gt;

&lt;p&gt;I took on the project and 6 hours later after analyzing the project I received another technical description for the project. Part of the description: “We shall be launching….Preferred technology: ASP.NET and MS Server” I haven't done any .NET my entire life, oh God.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-taking-regular-breaks"&gt;
  &lt;/a&gt;
  5. Taking regular breaks
&lt;/h3&gt;

&lt;p&gt;There’s always an innate desire to be productive 24 x 7. Taking breaks rejuvenates the body and the brain too. Take a week off, hours, or days whichever suits your schedule.&lt;/p&gt;

&lt;p&gt;Working long hours does not imply more work gets done.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-time-management"&gt;
  &lt;/a&gt;
  6. Time management
&lt;/h3&gt;

&lt;p&gt;Managing time should be crucial. Meet deadlines whenever possible. I’d spend a lot of time on trivial things that drained energy so when the time to do the actual work came, I was already exhausted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-enough-sleep"&gt;
  &lt;/a&gt;
  7. Enough sleep
&lt;/h3&gt;

&lt;p&gt;Enough sleep is good. staying up until 3.00 am makes one feel productive but have you ever gone back to what you worked on up to 3.00 am 3 years ago or in the past. It’s terrible even though it sort of worked out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-proper-diet"&gt;
  &lt;/a&gt;
  8 . Proper Diet
&lt;/h3&gt;

&lt;p&gt;Skipping breakfast to get to work on a project might seem “efficient” but try resisting the urge and see how productive you can be after taking a “solid” breakfast. The same applies to other meals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-exercise"&gt;
  &lt;/a&gt;
  9. Exercise
&lt;/h3&gt;

&lt;p&gt;Take walks, hit the gym do other work that kicks up blood flow in the body. Exercise is crucial and good for our health.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-managing-finances"&gt;
  &lt;/a&gt;
  10. Managing finances.
&lt;/h3&gt;

&lt;p&gt;This portion is not about financial advice but here’s my one-liner about managing finances: “Money is a scarce resource we can’t afford to waste.” I’d make money and the rest was spend, spend, spend.&lt;/p&gt;

&lt;p&gt;Organize your finances, grocery money, etc. Keep some for medical emergencies and save up for a rainy day.&lt;/p&gt;




&lt;p&gt;Freelancing is essentially living within your means, resilience, and modesty.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Learnig and Revising Js , Day 1</title>
      <author>PUSHAN VERMA </author>
      <pubDate>Tue, 18 Jan 2022 18:29:25 +0000</pubDate>
      <link>https://dev.to/pushanverma/learnig-and-revising-js-day-1-22kc</link>
      <guid>https://dev.to/pushanverma/learnig-and-revising-js-day-1-22kc</guid>
      <description>&lt;p&gt;Hi guys , just sharing what i have learnt , may be you will find all these informative, &lt;/p&gt;

&lt;p&gt;These are some basic concepts of javascript , I will be sharing everything that i'll be doing here , Like if you like the content , See a have a good day !!&lt;/p&gt;

&lt;p&gt;//👉 Objects is known to as "hashmap in java" and in "python it is called as dictionary"&lt;/p&gt;

&lt;p&gt;// object is a group of key , value pair&lt;/p&gt;

&lt;p&gt;//key: value --&amp;gt; propert&lt;br&gt;
//key: function --&amp;gt; method&lt;/p&gt;

&lt;p&gt;// key can be string/integr and same ways value also&lt;/p&gt;

&lt;p&gt;let cap={&lt;br&gt;
    name:"Steve",&lt;br&gt;
    lastName:"Rogers",&lt;br&gt;
    address:{&lt;br&gt;
        city:"Manhattan",&lt;br&gt;
        state:"New York"&lt;br&gt;
    },&lt;br&gt;
    age:35,&lt;br&gt;
    isAvenger:true,&lt;br&gt;
    movies:["First Avenger","Winter Soldier","Civil War"],&lt;br&gt;
    sayHi: function() &lt;br&gt;
    {&lt;br&gt;
    console.log("Cap says HI ");&lt;br&gt;
    }&lt;br&gt;
};&lt;br&gt;
//📌get (getting keys)&lt;br&gt;
// console.log(cap.name);&lt;br&gt;
// console.log(cap.age);&lt;br&gt;
// console.log(cap.movies[1]);&lt;br&gt;
// cap.sayHi();&lt;/p&gt;

&lt;p&gt;//📌set /update &lt;br&gt;
// console.log("cap",cap);&lt;br&gt;
// cap.age =36;&lt;br&gt;
// cap.isAvenger=false;&lt;br&gt;
// cap.friends=["Tony","Bruce","Peter"];&lt;br&gt;
// console.log("---------------------------------------");&lt;/p&gt;

&lt;p&gt;//📌delete&lt;br&gt;
// delete cap.address;&lt;br&gt;
// console.log("cap",cap);&lt;/p&gt;

&lt;p&gt;//👉diffrence between .(dot) &amp;amp; &lt;a href="https://dev.tosquare%20bracket"&gt;&lt;/a&gt;  --&amp;gt;(cap.age and cap[propkey] ,where propkey="age")&lt;br&gt;
// (cap.age gives values direcet , but cap[propkey] gives values through varibale )&lt;br&gt;
let propkey="age"&lt;br&gt;
console.log(cap[propkey]);&lt;br&gt;
console.log(cap["age"]);&lt;/p&gt;

&lt;p&gt;//📌for in loop&lt;br&gt;
for(let key in cap)&lt;br&gt;
{&lt;br&gt;
    console.log(key," : ",cap[key]);&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;//👉 it basically internally makes its as cap["name"],cap["lastname"],cap["address"] everytime and gives the answer,&lt;br&gt;
// its just the other way of writing ,nothing else&lt;/p&gt;

&lt;p&gt;// 📌if we want to print a key , i.e not present in object , then we get undefined  for that &lt;/p&gt;

&lt;p&gt;console.log(cap.xyz);&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 18 Jan 2022 18:16:52 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-2m73</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-2m73</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-as-in-licenses"&gt;
  &lt;/a&gt;
  Free as in licenses
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/krtirtho"&gt;@krtirtho&lt;/a&gt; created a helpful breakdown of various open source licenses and tips on which to choose, when. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/krtirtho" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpaEM3Vs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EaBVBspv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512998/9699ed25-d920-41af-aac5-fad183d9b5eb.jpg" alt="krtirtho"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/krtirtho/choosing-open-source-license-wisely-1m3p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Choosing Open Source License Wisely🤔&lt;/h2&gt;
      &lt;h3&gt;Kingkor Roy Tirtho ・ Jan 16 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#motivation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-someday-list-of-your-codebase"&gt;
  &lt;/a&gt;
  The "someday" list of your codebase.
&lt;/h2&gt;

&lt;p&gt;AKA, tech debt! &lt;a class="mentioned-user" href="https://dev.to/michaelmangial1"&gt;@michaelmangial1&lt;/a&gt; has created a handy resource for developers to better understand tech debt, how to log related information, and how to prioritize all of it. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/michaelmangial1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WRAIhbqh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fInOdQa9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/311068/7b0d6bcb-b712-4885-b97a-c524bba21bc9.jpeg" alt="michaelmangial1"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/michaelmangial1/an-introduction-to-tech-debt-and-why-it-can-change-your-career-381m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;An Introduction to Tech Debt (And Why It Can Change Your Career)&lt;/h2&gt;
      &lt;h3&gt;Michael Mangialardi ・ Jan 12 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#easing-designdev-handoff-pain-with-figma"&gt;
  &lt;/a&gt;
  Easing design/dev handoff pain with Figma
&lt;/h2&gt;

&lt;p&gt;"Designers are expected to have a pretty thorough understanding of the front-end web: HTML elements, the CSS box model, how responsive resizing works, component-based structure, etc. And yet, when we flip the script, developers are rarely expected to have an understanding of design basics – what's up with that?" asks &lt;a class="mentioned-user" href="https://dev.to/kathryngrayson"&gt;@kathryngrayson&lt;/a&gt;. GREAT question and great intro to Figma and how it can help ease design/dev handoff pain!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kathryngrayson" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdnYpWvA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AzhJrDla--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/2565/93fcdbc1-0575-4490-ab67-ec5f50e54a17.jpg" alt="kathryngrayson"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kathryngrayson/figma-for-developers-6op" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Figma for Developers &lt;/h2&gt;
      &lt;h3&gt;Kathryn Grayson Nanz ・ Jan 12 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#ux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ui&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#kollercodes-motivation-to-code"&gt;
  &lt;/a&gt;
  KollerCode's motivation to code
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/kollercode"&gt;@kollercode&lt;/a&gt; has been faced with a number of personal challenges in 2021. But they used these experiences as fuel to change the course of their career and life. As they so beautifully put it: "when I am [coding], it's like I am solving problems in my own life and it reminds me that as long as I don't give up and I am persistent I can do anything."&lt;/p&gt;

&lt;p&gt;Don't miss this post ❤️ &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kollercode" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THW1ETmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--9YNak67p--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/708813/845d66ae-2dee-4324-83e6-e11340761527.jpg" alt="kollercode"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kollercode/the-sad-truth-as-to-why-i-chose-to-change-careers-to-software-engineering-nm0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The Sad Truth as to Why I Chose to Change Careers to Software Engineering&lt;/h2&gt;
      &lt;h3&gt;KollerCode ・ Jan 16 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#motivation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#how-many-asteroids-came-close-to-hitting-the-earth-and-how-big-were-they"&gt;
  &lt;/a&gt;
  How many asteroids came close to hitting the Earth — and how big were they?
&lt;/h2&gt;

&lt;p&gt;No, this is not Netflix Studio spon-con for their new film, "Don't Look Up" — it's an awesome post by &lt;a class="mentioned-user" href="https://dev.to/flippedcoding"&gt;@flippedcoding&lt;/a&gt; all about how you can use one of the NASA APIs to create an asteroid map. Pretty cool, no? &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/flippedcoding" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWt-uaTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--D-VsiVuP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/77973/be223e4c-dc34-43da-a894-10be8f272316.jpg" alt="flippedcoding"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/flippedcoding/creating-an-asteroid-map-with-a-nasa-api-4afc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating an Asteroid Map with a NASA API&lt;/h2&gt;
      &lt;h3&gt;Milecia ・ Jan 11 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#graphql&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-thoroughlyvetted-book-recommendation"&gt;
  &lt;/a&gt;
  A thoroughly-vetted book recommendation
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/puritanic"&gt;@puritanic&lt;/a&gt; read The Pragmatic Programmer (you might have heard of it!) and makes a strong case for adding it to your must-read list in this article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/puritanic" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--byGoLQcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--eWaqVaE4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/56280/eb4aba68-4712-4490-92e9-addf0c66a177.jpeg" alt="puritanic"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/puritanic/ive-read-the-pragmatic-programmer-2bn9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I've read... The Pragmatic Programmer&lt;/h2&gt;
      &lt;h3&gt;Darkø Tasevski ・ Jan 16 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#books&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#good-job-or-a-tar-pit"&gt;
  &lt;/a&gt;
  Good job or a tar pit?
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/mauriciolinhares"&gt;@mauriciolinhares&lt;/a&gt; has a handy list of questions to ask your potential employers at your next interview to answer this quandary.  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mauriciolinhares" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3N-WonJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3nd5oye4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/319886/de034c58-51d3-43a0-afa3-24b80b0902bc.jpeg" alt="mauriciolinhares"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mauriciolinhares/what-to-ask-at-job-interviews-when-you-are-being-interviewed-f4l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What to ask at job interviews when you are being interviewed&lt;/h2&gt;
      &lt;h3&gt;Maurício Linhares ・ Jan 12 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#motivation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly Top 7 for this Tuesday! Keep an eye on dev.to this week for daily content and discussions...and be sure to keep an eye on this series in the future. You might just be in it!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Flask 2.x Release - With Free Samples</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 18 Jan 2022 18:09:57 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-2x-release-with-free-samples-1aao</link>
      <guid>https://dev.to/sm0ke/flask-2x-release-with-free-samples-1aao</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;In October 2021 &lt;a href="https://flask.palletsprojects.com/en/2.0.x/changes/"&gt;Flask Version 2.0.2&lt;/a&gt; has been released with various upgrades to the framework, improvements, and deprecations. This article is a quick overview of Flask 2.x update.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#flask-2x-updates"&gt;
  &lt;/a&gt;
  ✨ Flask 2.x Updates
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Blueprints&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Starting with &lt;code&gt;2.0&lt;/code&gt; version &lt;code&gt;Blueprints&lt;/code&gt; can be nested under each other. This feature might improve the design of complex products.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Config from file&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Re-add deprecated &lt;code&gt;Config.from_json&lt;/code&gt;, which was accidentally removed early.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Improved CLI errors&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When an app could not be loaded, errors are displayed instantly when the development server is active.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;FLASK_DEBUG&lt;/code&gt; is deprecated&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Replaced by &lt;code&gt;FLASK_ENV&lt;/code&gt;, a more current environment variable.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Language Detection&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;langdetect&lt;/code&gt; package is used by default.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Improved Static files cache&lt;/code&gt; - on development&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Browsers will cache static files based on file content rather than a 12-hour refresh time frame.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Blueprints&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Can be registered the same blueprint with different names&lt;/p&gt;

&lt;p&gt;For more information feel free to access the official &lt;a href="https://flask.palletsprojects.com/en/2.0.x/changes/"&gt;Flask v2.x release page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#starters-features"&gt;
  &lt;/a&gt;
  ✨ Starters Features
&lt;/h2&gt;

&lt;p&gt;All projects are generated by AppSeed using a common set of features inherited by all starters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Up-to-date dependencies&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DBMS&lt;/code&gt;: SQLite, PostgreSQL (production)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DB Tools&lt;/code&gt;: SQLAlchemy ORM, Flask-Migrate (schema migrations)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Session-Based authentication&lt;/code&gt; (via flask_login), Forms validation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deployment&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt;, Gunicorn / Nginx, HEROKU&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Free &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt; - 1k+ community.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-datta-able"&gt;
  &lt;/a&gt;
  ✨ Flask Datta Able
&lt;/h2&gt;

&lt;p&gt;Datta Able is a Lite Admin Template, around all other Lite/Free admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-datta-able"&gt;Datta Able Flask&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-datta-able.appseed-srv1.com/"&gt;Datta Able Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The product can be compiled and started in a local environment using the Docker setup shipped with the product:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Download sources from Github&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-datta-able.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-datta-able
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start the app in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all commands are executed, we should be able to access the app in the browser, register new users, and authenticate.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSPd8qlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqxzv6iwz1m0eckdno4p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSPd8qlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqxzv6iwz1m0eckdno4p.gif" alt="Flask 2.x Datta Able - GIF animated presentation." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-material-dashboard"&gt;
  &lt;/a&gt;
  ✨ Flask Material Dashboard
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Material Dashboard 2 is ready to help you create stunning websites and web apps. Material Dashboard 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-material-dashboard"&gt;Flask Dashboard Material&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-material-dashboard.appseed-srv1.com/"&gt;Flask Dashboard Material&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RNxu4_k9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l54dxdzmrom9tfl3stc4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RNxu4_k9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l54dxdzmrom9tfl3stc4.png" alt="Flask 2.x Material Dashboard - Charts Page " width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-soft-ui-design"&gt;
  &lt;/a&gt;
  ✨ Flask Soft UI Design
&lt;/h2&gt;

&lt;p&gt;Soft UI Design System is a premium Bootstrap 5 UI Kit designed by Creative-Tim designed for those who like bold elements and beautiful websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-soft-ui-design"&gt;Soft UI Design Flask&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Flask&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2u78o-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja9d8cxiblkviwrzr6eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2u78o-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ja9d8cxiblkviwrzr6eg.png" alt="Flask 2.x Soft UI Design - Open-Source Starter" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-material-kit"&gt;
  &lt;/a&gt;
  ✨ Flask Material Kit
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Material Kit 2 is ready to help you create stunning websites and web apps. Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-material-kit"&gt;Flask Material Kit&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-material-kit.appseed-srv1.com/"&gt;Flask Material Kit&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qfkqjFUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ynqo5l96s47fey4zeoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfkqjFUn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ynqo5l96s47fey4zeoq.png" alt="Flask 2.x Material Kit - Bootstrap 5 Design. " width="880" height="478"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-dashboardkit"&gt;
  &lt;/a&gt;
  ✨ Flask DashboardKit
&lt;/h2&gt;

&lt;p&gt;Open-source Flask Dashboard generated by AppSeed op top of a modern Boostrap 5 design. DashboardKit is made for everyone, no matter you are a novice developer, designer, project manager/owner.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/flask-dashboard-kit"&gt;DashboardKit Flask&lt;/a&gt; - source code (MIT License)&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://flask-dashboard-kit.appseed-srv1.com/"&gt;DashboardKit Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o4B9p6zE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33rz1tagh38tsgprpzma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o4B9p6zE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33rz1tagh38tsgprpzma.png" alt="Flask 2.x DashboardKit - Bootstrap 5 Design." width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;🎁 More &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; crafted in &lt;code&gt;React&lt;/code&gt;, Django, and &lt;strong&gt;Flask&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;🎁 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - curated list published on &lt;code&gt;Dev.to&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flask</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>OCSP and CRL: what could go wrong?</title>
      <author>Cossack Labs</author>
      <pubDate>Tue, 18 Jan 2022 18:06:47 +0000</pubDate>
      <link>https://dev.to/cossacklabs/ocsp-and-crl-what-could-go-wrong-1ped</link>
      <guid>https://dev.to/cossacklabs/ocsp-and-crl-what-could-go-wrong-1ped</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Read this post to learn everything to know about TLS certificate revocation protocols: OCSP and CRL. &lt;br&gt;
How to use OCSP and CRL for validating TLS certificates in Go apps? Even though Golang has native support for TLS, it has extremely limited support for OCSP and CRL. So, what should you do then?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol"&gt;OCSP (Online Certificate Status Protocol)&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc6960"&gt;RFC6960&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Certificate_revocation_list"&gt;CRL (Certificate Revocation List)&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc5280"&gt;RFC5280&lt;/a&gt; provide a way to verify whether the TLS certificate was revoked by a Certificate Authority before the app establishes secure communication with a service that uses this certificate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zCkRumPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp9i805jn9alflc7nu14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zCkRumPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp9i805jn9alflc7nu14.png" alt="OCSP and CRL" width="880" height="744"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-could-go-wrong-in-using-ocsp-and-crl"&gt;
  &lt;/a&gt;
  What could go wrong in using OCSP and CRL?
&lt;/h2&gt;

&lt;p&gt;Here's just a quick list:&lt;/p&gt;

&lt;p&gt;🔴  &lt;strong&gt;Establishing session before validating the TLS certificate&lt;/strong&gt; (don't be tempted to "optimise" things if OCSP and CRL cause visible delays in the application work).&lt;br&gt;
🔴  &lt;strong&gt;Unreachable CRL / OCSP responders&lt;/strong&gt; (this could destabilise the whole solution, as applications can be stuck in limbo, not communicating with other services while validating the certificates).&lt;br&gt;
🔴  &lt;strong&gt;Accepting "Unknown" status as valid&lt;/strong&gt; (if the application treats OCSP "Unknown" status as "the certificate is still valid", it might continue talking to the already malicious service, treating it as a valid).&lt;br&gt;
🔴  &lt;strong&gt;Certificate revocation checks are too rare&lt;/strong&gt; (balance performance and security, mind a threat model and security requirements).&lt;br&gt;
🔴  &lt;strong&gt;Lack of signature validation&lt;/strong&gt; (it's essential to verify the CRL response signature to prevent potential attackers from tampering with the list).&lt;br&gt;
🔴  &lt;strong&gt;CRL cache poisoning&lt;/strong&gt; (if CRL is cached in a local file without any integrity checks, the application won't recognise that the file was changed).&lt;br&gt;
🔴  &lt;strong&gt;Delta CRLs&lt;/strong&gt; (if implemented poorly, issues with network connectivity might result in the application not receiving some delta CRLs and continuing to trust the revoked certificates).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-needs-ocsp-and-crl"&gt;
  &lt;/a&gt;
  Who needs OCSP and CRL?
&lt;/h2&gt;

&lt;p&gt;We stumbled upon intricacies in OCSP and CRL when building &lt;a href="https://www.cossacklabs.com/acra/"&gt;Acra database security suite&lt;/a&gt;, an application that sits between the app and the database and encrypts/decrypts sensitive data. The support of OCSP and CRL is crucial for Acra to prevent unauthorised connections from malicious or misconfigured apps to sensitive data. &lt;/p&gt;

&lt;p&gt;To meet our security model, we had to implement OCSP/CRL verification in Golang ourselves. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-ocsp-and-crl-implementation-examples"&gt;
  &lt;/a&gt;
  See OCSP and CRL implementation examples
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 As it was not easy but interesting task, we put our findings into a new engineering blog post: &lt;a href="https://www.cossacklabs.com/blog/tls-validation-implementing-ocsp-and-crl-in-go/"&gt;TLS validation: implement OCSP and CRL verifiers in Go&lt;/a&gt;. Follow the link to learn more about OCSP/CRL design, implementation and security tips, example code and popular mistakes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you're a Golang engineer that works closely with TLS, our blog post will give you lots of moments to think about. &lt;/p&gt;

&lt;p&gt;To illustrate everything we’ve posted above, we created minimalistic OCSP and CRL implementations in Go. &lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://cossacklabs.com/blog/tls-validation-implementing-ocsp-and-crl-in-go/#ocsp-crl-live-examples"&gt;4. Live examples&lt;/a&gt; chapter with all the scripts to generate TLS certificates, OCSP responder based on OpenSSL, and Golang server-side and client-side apps. Feel free to review and run examples to see how the verification works with valid and revoked certificates.&lt;/p&gt;

</description>
      <category>security</category>
      <category>go</category>
      <category>development</category>
      <category>encryption</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [9 - Generate a random value]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:40:51 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-9-generate-a-random-value-5g8a</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-9-generate-a-random-value-5g8a</guid>
      <description>&lt;p&gt;In this part &lt;em&gt;(and the last part of the serie)&lt;/em&gt;, we will see how to generate a random value.&lt;/p&gt;

&lt;p&gt;Really useful to generate unique names for a snapshot for example, you will see that there are multiple definitions available, depending on what you need.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#random-id"&gt;
  &lt;/a&gt;
  Random Id
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_id"&lt;/span&gt; &lt;span class="s2"&gt;"rdm_id"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;byte_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Declared as this, it will generate for you an 8 bytes long id which can be retrieve in :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;base64&lt;/strong&gt; : random_id.rdm_id.id =&amp;gt; MDc3NDA2OGE5YTNhMjc5MQ==&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;decimal digits&lt;/strong&gt; : random_id.rdm_id.dec =&amp;gt; 537061447926687633&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;hexadecimal digits&lt;/strong&gt; : random_id.rdm_id.hex =&amp;gt; 0774068a9a3a2791&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it you are doing it like this, &lt;strong&gt;the random_id will always be the same!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So to be sure the value change when something append, you can use the &lt;strong&gt;keepers&lt;/strong&gt; parameter.&lt;/p&gt;

&lt;p&gt;With this, you can say "if the parameter X and Y change, so the random value must change too".&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In this example the random value will change each time the arn of the global cluster example will change.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_id"&lt;/span&gt; &lt;span class="s2"&gt;"rdm_id"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;byte_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;

  &lt;span class="nx"&gt;keepers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_global_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you want this value to change each time the script is executed, use a timestamp :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_id"&lt;/span&gt; &lt;span class="s2"&gt;"rdm_id"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;byte_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;

  &lt;span class="nx"&gt;keepers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#other-random-possibilities"&gt;
  &lt;/a&gt;
  Other random possibilities
&lt;/h2&gt;

&lt;p&gt;Following the same pattern, Terraform let you to generate random &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;integer
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_integer"&lt;/span&gt; &lt;span class="s2"&gt;"priority"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50000&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;password
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_password"&lt;/span&gt; &lt;span class="s2"&gt;"password"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;length&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
  &lt;span class="nx"&gt;special&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;override_special&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"_%@"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;string
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_string"&lt;/span&gt; &lt;span class="s2"&gt;"random"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;length&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
  &lt;span class="nx"&gt;special&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;override_special&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/@£&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;UUID
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_uuid"&lt;/span&gt; &lt;span class="s2"&gt;"test"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A shuffled sublist
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"random_shuffle"&lt;/span&gt; &lt;span class="s2"&gt;"az"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"us-west-1a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"us-west-1c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"us-west-1d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"us-west-1e"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;result_count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Here you will retrieve a sublist of the input list, with only 2 items.&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Terraform doc random_id : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/id"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/id&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform doc random_integer : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/integer"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/integer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform doc random_password : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/password"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/password&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform doc random_shuffle : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/shuffle"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/shuffle&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform doc random_string : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/string"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/string&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Terraform doc random_uuid : &lt;a href="https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/uuid"&gt;https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/uuid&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you and you liked this serie! 🍺&lt;/p&gt;

</description>
      <category>sre</category>
      <category>aws</category>
      <category>terraform</category>
      <category>devops</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [8 - Multiple instances in multiple regions]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:40:28 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-8-multiple-instances-in-multiple-regions-210d</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-8-multiple-instances-in-multiple-regions-210d</guid>
      <description>&lt;p&gt;In this part of the serie, we will see how to create &lt;strong&gt;in one Terraform script&lt;/strong&gt; and in a single execution, how to create elements in multiple regions.&lt;/p&gt;

&lt;p&gt;This kind of tips is really helpful if you want to create at once all your infra and/or if you want to setup some disaster recovery.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-do-it"&gt;
  &lt;/a&gt;
  How to do it?
&lt;/h2&gt;

&lt;p&gt;To do it, it's pretty simple. We have 2 steps to follow :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;declare multiple providers&lt;/li&gt;
&lt;li&gt;declare which provider we want to use for each resource&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#declare-multiple-providers"&gt;
  &lt;/a&gt;
  Declare multiple providers
&lt;/h3&gt;

&lt;p&gt;In your current script to create something on AWS, you should have an &lt;strong&gt;AWS Provider&lt;/strong&gt; with the &lt;strong&gt;region&lt;/strong&gt; where it should be created.&lt;/p&gt;

&lt;p&gt;So, copy/paste this block for all your regions. Then add an alias to each of them to be able to differentiate them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alias&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"frankfurt"&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"eu-central-1"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"aws"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;alias&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sydney"&lt;/span&gt;
  &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ap-southeast-2"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#declare-which-provider-we-want-to-use-for-each-resource"&gt;
  &lt;/a&gt;
  Declare which provider we want to use for each resource
&lt;/h3&gt;

&lt;p&gt;In each resource you have, add the &lt;strong&gt;provider&lt;/strong&gt; parameter to link each of them to the correct provider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_cluster_instance"&lt;/span&gt; &lt;span class="s2"&gt;"test_frankfurt"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;frankfurt&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_cluster_instance"&lt;/span&gt; &lt;span class="s2"&gt;"test_sydney"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;provider&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sydney&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;And that's it! You are now able to deploy your complete infra on multiple regions at once!&lt;/p&gt;

&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

&lt;p&gt;And see you soon for the next part of this serie. 😀&lt;/p&gt;

</description>
      <category>aws</category>
      <category>terraform</category>
      <category>sre</category>
      <category>devops</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [7 - Dynamic Terraform backend definition]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:40:20 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-7-dynamic-terraform-backend-definition-3aga</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-7-dynamic-terraform-backend-definition-3aga</guid>
      <description>&lt;p&gt;In this post we will see something which can be really useful to use the same script in multiple environment or for multiple projects without modifying the code!&lt;/p&gt;




&lt;p&gt;To do this magic trick, we will define dynamically the backend that we will use to store the terraform state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend-declaration"&gt;
  &lt;/a&gt;
  Backend declaration
&lt;/h2&gt;

&lt;p&gt;First, we need to declare in the script which kind of backend we want to use.&lt;/p&gt;

&lt;p&gt;In our example, it will be with &lt;strong&gt;AWS S3&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;terraform&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;backend&lt;/span&gt; &lt;span class="s2"&gt;"s3"&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#dynamic-magic"&gt;
  &lt;/a&gt;
  Dynamic magic
&lt;/h2&gt;

&lt;p&gt;So to have a dynamic backend definition, you have to add declare some parameters as options of the &lt;strong&gt;terraform init&lt;/strong&gt; command.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-parameters"&gt;
  &lt;/a&gt;
  Backend parameters
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;bucket&lt;/strong&gt; : Name of the S3 bucket where you want to store the Terraform state.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;key&lt;/strong&gt; : Path of the Terraform state file in the S3 bucket. Generally it is this parameter who will be updated to ensure you that each terraform state is located in a different place.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;region&lt;/strong&gt; : Region where the bucket is&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;encrypt&lt;/strong&gt; : A boolean to know if you want to encrypt the file &lt;em&gt;(if you have a doubt, set it to true)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#command-option"&gt;
  &lt;/a&gt;
  Command option
&lt;/h3&gt;

&lt;p&gt;To give the backend parameters, you have to way to do it :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;declare a parameter with a key=value&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;-backend-config='bucket=test'&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;declare a tfvars file which contains some/all the configurations&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;-backend-config='configs/configs_backend.tfvars'&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Then you just have to give the right parameters when using the terraform commands, and you will be able to define multiple infra with one script!&lt;/p&gt;




&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

&lt;p&gt;And see you soon for the next part of this serie. 😀&lt;/p&gt;

</description>
      <category>aws</category>
      <category>sre</category>
      <category>terraform</category>
      <category>devops</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [6 - Create from snapshot]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:40:11 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-6-create-from-snapshot-2mbf</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-6-create-from-snapshot-2mbf</guid>
      <description>&lt;p&gt;In this post we will see how to create an AWS RDS Global database from a snapshot.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-create-a-database-from-a-snapshot-if-we-already-have-the-dr"&gt;
  &lt;/a&gt;
  Why create a database from a snapshot if we already have the DR?
&lt;/h2&gt;

&lt;p&gt;For sure, if you have a DR system, you might be have to create your global database from a snapshot every day &lt;em&gt;(I hope for you so)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But when you are delivering a huge update on your database, you maybe want to have something to go back to the last state before, or if you are migrating data from a database to another.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-create-a-global-database-from-a-snapshot-"&gt;
  &lt;/a&gt;
  How to create a global database from a snapshot ?
&lt;/h2&gt;

&lt;p&gt;If you have checked the documentation, you have seen a parameter called &lt;strong&gt;snapshot_identifier&lt;/strong&gt; in the &lt;strong&gt;aws_rds_cluster&lt;/strong&gt; definition.&lt;/p&gt;

&lt;p&gt;If you define a value here and run your script, you will have all the elements created but the cluster with the snapshot won't be linked to the global database.&lt;/p&gt;

&lt;p&gt;In the solution presented in the last post, we did :&lt;br&gt;
1 - the creation of the global cluster&lt;br&gt;
2 - then we create the principal cluster&lt;br&gt;
3 - and then we create all the other clusters&lt;/p&gt;

&lt;p&gt;But to make it work, we need to change this order and the links.&lt;/p&gt;

&lt;p&gt;We need to create first the principal cluster from the snapshot, without links to the global database.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This one&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;global_cluster_identifier = aws_rds_global_cluster.example.id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we have to create the global cluster. But this time, we will say to the global cluster that it needs to be based on the primary cluster.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_global_cluster"&lt;/span&gt; &lt;span class="s2"&gt;"example"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;global_cluster_identifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"global-test"&lt;/span&gt;

  &lt;span class="nx"&gt;source_db_cluster_identifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arn&lt;/span&gt;
  &lt;span class="nx"&gt;force_destroy&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this global cluster definition, we can see that a lot of parameters desapeared &lt;em&gt;(like engine, database name...)&lt;/em&gt; and it's because the global cluster will take the configurations of the primary cluster!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : If you are creating a cluster from a snapshot, the &lt;strong&gt;master_username&lt;/strong&gt; won't be override by the one you defined in your script, it will keep the one defined in the snapshot, but &lt;strong&gt;master_username&lt;/strong&gt; yes.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

&lt;p&gt;And see you soon for the next part of this serie. 😀&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>sre</category>
      <category>aws</category>
      <category>devops</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [5 - DR database]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:40:03 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-5-dr-database-278b</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-5-dr-database-278b</guid>
      <description>&lt;p&gt;In this part of the serie, we will see how to &lt;em&gt;(finally)&lt;/em&gt; create a database with a system of disaster recovery.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#create-a-global-database"&gt;
  &lt;/a&gt;
  Create a global database
&lt;/h2&gt;

&lt;p&gt;Now that we have a cluster of databases, we can easily create multiple of them in multiple regions and link them to a &lt;strong&gt;Global Database&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So at least, we need to create 2 clusters in 2 regions and we will create an &lt;strong&gt;aws_rds_global_cluster&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-awsrdsglobalcluster"&gt;
  &lt;/a&gt;
  Definition of aws_rds_global_cluster
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_global_cluster"&lt;/span&gt; &lt;span class="s2"&gt;"example"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;global_cluster_identifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"global-test"&lt;/span&gt;
  &lt;span class="nx"&gt;engine&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aurora"&lt;/span&gt;
  &lt;span class="nx"&gt;engine_version&lt;/span&gt;            &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"5.6.mysql_aurora.1.22.2"&lt;/span&gt;
  &lt;span class="nx"&gt;database_name&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"example_db"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we can see that some common parameters are defined here as the engine, its version or the db name to keep an uniformity among all the databases.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#updates-in-the-clusters-definitions"&gt;
  &lt;/a&gt;
  Updates in the clusters definitions
&lt;/h3&gt;

&lt;p&gt;Due to the fact that you will use a global database, you have to link your clusters to the global one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;global_cluster_identifier&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_global_cluster&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, on all the secondary cluster, you can add &lt;strong&gt;depends_on&lt;/strong&gt; to be sure that they will be created after the global one and the primary one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="nx"&gt;depends_on&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;aws_rds_global_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;aws_rds_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, some parameters are not required anymore &lt;em&gt;(because they are now defined in the global database)&lt;/em&gt; like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;master_username&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;master_password&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;database_name&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, if you wanted to created all the elements in a single Terraform script, you will have to declare multiple providers for each region where you want to create a cluster. &lt;em&gt;(The complete point will be explain in a following post)&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-the-global-cluster"&gt;
  &lt;/a&gt;
  Using the Global cluster
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#access-to-the-database"&gt;
  &lt;/a&gt;
  Access to the database
&lt;/h3&gt;

&lt;p&gt;The global cluster don't have a specific endpoint to expose the database with Read/Write rights and another for all the read-only databases.&lt;/p&gt;

&lt;p&gt;Each cluster will create its own endpoints.&lt;/p&gt;

&lt;p&gt;For the primary cluster, &lt;strong&gt;both endpoints will work well.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the other cluster, &lt;strong&gt;only the read-only endpoint will work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's normal, it's to be sure to have only one main entry point and replicate the update on all the other databases.&lt;/p&gt;

&lt;p&gt;But a region is not accessible anymore or if you manually do a failover to change the primary region, the read/write endpoint of the first region will be disabled and the one of the new primary region will be enabled.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-do-manually-a-failover"&gt;
  &lt;/a&gt;
  How to do manually a failover?
&lt;/h3&gt;

&lt;p&gt;In the AWS web console, select your global database and in the actions you will have &lt;strong&gt;Fail over global database&lt;/strong&gt;. Click on it and the switch will go on!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Terraform documentation : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_global_cluster"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_global_cluster&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;AWS failover global database documentation : &lt;a href="https://aws.amazon.com/blogs/database/managed-planned-failovers-with-amazon-aurora-global-database/"&gt;https://aws.amazon.com/blogs/database/managed-planned-failovers-with-amazon-aurora-global-database/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

&lt;p&gt;And see you soon for the next part of this serie. 😀&lt;/p&gt;

</description>
      <category>devops</category>
      <category>sre</category>
      <category>aws</category>
      <category>terraform</category>
    </item>
    <item>
      <title>How-to setup a HA/DR database in AWS? [4 - HA Database]</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 Jan 2022 17:39:55 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-4-ha-database-4kek</link>
      <guid>https://dev.to/adaendra/how-to-setup-a-hadr-database-in-aws-4-ha-database-4kek</guid>
      <description>&lt;p&gt;In this part of the serie, we will see what is the difference between a simple database and an High Available database in AWS, then how to create it with Terraform.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#differences"&gt;
  &lt;/a&gt;
  Differences
&lt;/h2&gt;

&lt;p&gt;A simple database will be deployed on one &lt;strong&gt;AZ&lt;/strong&gt;. So if this AZ is not accessible for some reasons, the database can't be call anymore.&lt;/p&gt;

&lt;p&gt;So to avoid this kind of problem, we create database clusters. One instance will be the principal with Read/Write rights and all the others will be secondary with Read only rights. And each of these instances will be on multiples AZ.&lt;/p&gt;

&lt;p&gt;With this architecture, if the principal fails, another one will become the principal and the first one can be recreated.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#creation-of-the-cluster"&gt;
  &lt;/a&gt;
  Creation of the cluster
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-a-subnet-group"&gt;
  &lt;/a&gt;
  Definition of a subnet group
&lt;/h3&gt;

&lt;p&gt;To know where we will deploy our multiple instances of the cluster, we will create a &lt;strong&gt;subnet group&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : A subnet &lt;em&gt;(which are defined in the VPC module)&lt;/em&gt; can be on multiple AZ in a region. So for best practices, be sure to have one subnet per AZ.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_db_subnet_group"&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"main"&lt;/span&gt;
  &lt;span class="nx"&gt;subnet_ids&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aws_subnet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;frontend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;aws_subnet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"My DB subnet group"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This object is really simple, you have a name for your subnet group and the list of the subnet ids.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Terraform doc aws_db_subnet_group : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_subnet_group"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_subnet_group&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#definition-of-the-cluster"&gt;
  &lt;/a&gt;
  Definition of the cluster
&lt;/h3&gt;

&lt;p&gt;Now that we know where all the instances can be created, we will create the cluster and then add all the instances we wanted.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_cluster"&lt;/span&gt; &lt;span class="s2"&gt;"default"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;cluster_identifier&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aurora-cluster-demo"&lt;/span&gt;
  &lt;span class="nx"&gt;engine&lt;/span&gt;                  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aurora-mysql"&lt;/span&gt;
  &lt;span class="nx"&gt;engine_version&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"5.7.mysql_aurora.2.03.2"&lt;/span&gt;
  &lt;span class="nx"&gt;availability_zones&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"us-west-2a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"us-west-2b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"us-west-2c"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;database_name&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"mydb"&lt;/span&gt;
  &lt;span class="nx"&gt;master_username&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"username"&lt;/span&gt;
  &lt;span class="nx"&gt;master_password&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"pwd"&lt;/span&gt;
  &lt;span class="nx"&gt;backup_retention_period&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
  &lt;span class="nx"&gt;preferred_backup_window&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"07:00-09:00"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This cluster definition is a light one, and you can retrieve a lot of common parameters from the aws_db_instance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/!\ The major point here is the &lt;strong&gt;availability_zones&lt;/strong&gt; parameter, be sure to have in this list only AZ covered by your subnets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to go further for your configuration, you can add a lot of things about the &lt;strong&gt;security&lt;/strong&gt; &lt;em&gt;(port, vpc_security_group_ids, storage_encrypted...)&lt;/em&gt;, the updates &lt;em&gt;(backup_retention_period, preferred_backup_window, preferred_maintenance_window...)&lt;/em&gt; ...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;If you want to have a secure cluster, you must have :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;storage_encrypted&lt;/strong&gt; defined to true to be sure that the data will be encrypted while stored&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;kms_key_id&lt;/strong&gt; should be defined to know which encryption key the database have to use&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;enabled_cloudwatch_logs_exports&lt;/strong&gt; defined to have some logs exported to cloudwatch to be able to do an audit&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;vpc_security_group_ids&lt;/strong&gt; to have a clear definition of who can access to your database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also another good configuration is to required a TLS transport. To do it, you need to create an &lt;strong&gt;aws_rds_cluster_parameter_group&lt;/strong&gt; and link it to your cluster in the &lt;strong&gt;db_cluster_parameter_group_name&lt;/strong&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_cluster_parameter_group"&lt;/span&gt; &lt;span class="s2"&gt;"cluster_param_group"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"cluster_param_group"&lt;/span&gt;
  &lt;span class="nx"&gt;family&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aurora-mysql5.7"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"cluster_param_group"&lt;/span&gt;

  &lt;span class="nx"&gt;parameter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"require_secure_transport"&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ON"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;AWS RDS cluster : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;aws_rds_cluster_parameter_group : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_parameter_group"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_parameter_group&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;aws_kms_key : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#definition-of-the-instances"&gt;
  &lt;/a&gt;
  Definition of the instances
&lt;/h3&gt;

&lt;p&gt;The declaration of an instance is quite easy and don't have a lot of parameters. &lt;/p&gt;

&lt;p&gt;One of the principal is the reference to the cluster it's linked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight terraform"&gt;&lt;code&gt;&lt;span class="k"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"aws_rds_cluster_instance"&lt;/span&gt; &lt;span class="s2"&gt;"cluster_instances"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;count&lt;/span&gt;                      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="nx"&gt;identifier&lt;/span&gt;                 &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"aurora-cluster-demo-&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;cluster_identifier&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;instance_class&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"db.r4.large"&lt;/span&gt;
  &lt;span class="nx"&gt;engine&lt;/span&gt;                     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine&lt;/span&gt;
  &lt;span class="nx"&gt;engine_version&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;aws_rds_cluster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engine_version&lt;/span&gt;
  &lt;span class="nx"&gt;db_subnet_group_name&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"db_subnet_group_name"&lt;/span&gt;
  &lt;span class="nx"&gt;db_parameter_group_name&lt;/span&gt;    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"db_parameter_group"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the example we can see :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the cluster reference in &lt;strong&gt;cluster_identifier&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;The engine definition and its version. For a cleaner way to declare it and be sure to have the same than the cluster, you can use : &lt;strong&gt;aws_rds_cluster.default.engine&lt;/strong&gt; and &lt;strong&gt;aws_rds_cluster.default.engine_version&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;the instance class for all the calculations and resources&lt;/li&gt;
&lt;li&gt;and the subnet and parameter group names if you have one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also on this example, you can see a &lt;strong&gt;count&lt;/strong&gt; parameter. It's not a mandatory one, it's a Terraform parameter to create easily multiple instances with the same definition.&lt;/p&gt;

&lt;p&gt;Here, everything is the same except the name, so that's why we include the count index in the name to be sure to have unique names.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Terraform documentation rds_cluster_instance : &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance"&gt;https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#running-with"&gt;
  &lt;/a&gt;
  Running with
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-to-access-to-the-cluster"&gt;
  &lt;/a&gt;
  How to access to the cluster?
&lt;/h3&gt;

&lt;p&gt;With the cluster, 2 endpoints are created :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one to expose the database with Read/Write rights&lt;/li&gt;
&lt;li&gt;one to expose all the other databases in Read only&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this endpoints, you can be sure to always have an instance available to answer you if one database/AZ can't be called.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : If you have 2 instances in your cluster and one instance fails, both endpoints will access to the same database. But you still can't do update from the read only endpoint.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#how-to-test-the-high-availability-"&gt;
  &lt;/a&gt;
  How to test the High Availability ?
&lt;/h3&gt;

&lt;p&gt;When you are using a cluster, it's always useful to know how you can test the high availabilty and check if your services goes well in case of a failover.&lt;/p&gt;

&lt;p&gt;So to test it, in the AWS web console, you have an action &lt;strong&gt;Failover&lt;/strong&gt; available for your cluster.&lt;/p&gt;

&lt;p&gt;When you click on it, your Read/Write instance will become a read-only one and a random read-only instance will become the Read/Write one.&lt;/p&gt;




&lt;p&gt;I hope it will help you! 🍺&lt;/p&gt;

&lt;p&gt;And see you soon for the next part of this serie. 😀&lt;/p&gt;

</description>
      <category>sre</category>
      <category>aws</category>
      <category>devops</category>
      <category>terraform</category>
    </item>
  </channel>
</rss>
