<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introducing Mantine – new React components and hooks library</title>
      <author>Vitaly Rtishchev</author>
      <pubDate>Mon, 03 May 2021 11:29:03 +0000</pubDate>
      <link>https://dev.to/rtivital/introducing-mantine-new-react-components-and-hooks-library-4kk1</link>
      <guid>https://dev.to/rtivital/introducing-mantine-new-react-components-and-hooks-library-4kk1</guid>
      <description>&lt;p&gt;I am proud to announce that today I've published first stable version of &lt;a href="https://mantine.dev"&gt;Mantine&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Mantine is a MIT licensed open source React components and hooks library with native dark theme and focus on accessibility, usability and developer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h2&gt;

&lt;p&gt;View all examples &lt;a href="https://mantine.dev/pages/examples/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spendings table:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/strange-bhabha-5qwru"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Cards grid:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/fragrant-fire-l0mol"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-features"&gt;
  &lt;/a&gt;
  Key features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Customization&lt;/strong&gt; – colors, fonts, shadows and many other parts are customizable to fit your design needs&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dark theme&lt;/strong&gt; – mantine supports dark theme by default in all components&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility and usability&lt;/strong&gt; – all components follow accessibility best practices and feature full keyboard support&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TypeScript&lt;/strong&gt; – all @mantine/ scoped packages are built with TypeScript and support it by default&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ready for production&lt;/strong&gt; – mantine is well tested and works in all modern browsers&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Developer experience&lt;/strong&gt; – mantine comes with more than 50 components and 15 hooks to cover you in most cases&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No annoying focus ring&lt;/strong&gt; – with new &lt;code&gt;:focus-visible&lt;/code&gt; pseudo-class focus ring appears only when user navigates with keyboard&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;React JSS&lt;/strong&gt; – take advantage of all react-jss features: automatic critical css extraction during ssr, lazy evaluation, dynamic theming and others&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;React and Preact&lt;/strong&gt; – mantine works flawlessly with preact&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast&lt;/strong&gt; – mantine does not have large dependencies (all packages weight less than 50kB together when gzipped)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/pages/examples/"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/core/getting-started/#components-by-category"&gt;Components by category&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/hooks/getting-started/#included-hooks"&gt;Hooks list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/others/notifications/"&gt;Notifications system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mantine.dev/pages/contribute/"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mantinedev/mantine/discussions"&gt;Ask question or give feedback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mantinedev/mantine"&gt;Source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading and let me know what you think, I'm always open to feedback and critique.&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>Chrome extensions I use to enhance my GITHUB experience</title>
      <author>Jhonathan</author>
      <pubDate>Mon, 03 May 2021 10:54:32 +0000</pubDate>
      <link>https://dev.to/jonathan123/chrome-extensions-i-use-to-enhance-my-github-experience-3adn</link>
      <guid>https://dev.to/jonathan123/chrome-extensions-i-use-to-enhance-my-github-experience-3adn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cc3xkjDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5cbljshmswyvcoga44h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cc3xkjDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5cbljshmswyvcoga44h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-donotmergewip"&gt;
  &lt;/a&gt;
  1. Do-not-merge-WIP
&lt;/h1&gt;

&lt;p&gt;Disables "Merge pull request" button while ANY of the following is true:&lt;br&gt;
Title contains "[wip]" (case insensitive)&lt;br&gt;
Any tasks remain incomplete&lt;br&gt;
Any commit messages remain prefixed with "squash!" or "fixup!"&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-enhanced-github"&gt;
  &lt;/a&gt;
  2. Enhanced GitHub
&lt;/h1&gt;

&lt;p&gt;It provides useful features on top of GitHub Website:&lt;br&gt;
Displays repo size&lt;br&gt;
Displays each file size for every active branch&lt;br&gt;
Show download link for each file&lt;br&gt;
Copy file's contents directly to Clipboard&lt;br&gt;
Download file while viewing its contents.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-githunt"&gt;
  &lt;/a&gt;
  3. Githunt
&lt;/h1&gt;

&lt;p&gt;It lets you hunt the most starred projects on GitHub on any date. Very useful when you want to explore the most trending repo of the week/month/year.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-codecopy"&gt;
  &lt;/a&gt;
  4. CodeCopy
&lt;/h1&gt;

&lt;p&gt;It lets you copy the text from any file on github to your clipboard. Apart from Github it also works on :&lt;br&gt;
Stack Overflow&lt;br&gt;
MDN&lt;br&gt;
Medium&lt;br&gt;
NPM&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5refined-github"&gt;
  &lt;/a&gt;
  5.Refined GitHub
&lt;/h1&gt;

&lt;p&gt;It simplifies the GitHub interface and adds useful features too, for instance:&lt;br&gt;
Adds reaction avatars showing who reacted to a comment&lt;br&gt;
Adds one-click merge conflict fixers&lt;br&gt;
Adds a button to revert all the changes to a file in a PR&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  &lt;a href="https://cmsinstallation.blogspot.com/2021/04/chrome-extensions-i-use-to-enhance-my.html"&gt;Read More&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>100daysofcode</category>
      <category>github</category>
    </item>
    <item>
      <title>Python/Django Developer Interview Questions and Answer (#1)</title>
      <author>Manisha Naidu</author>
      <pubDate>Mon, 03 May 2021 10:34:37 +0000</pubDate>
      <link>https://dev.to/manishanaidu/python-django-developer-interview-questions-and-answer-1-3l82</link>
      <guid>https://dev.to/manishanaidu/python-django-developer-interview-questions-and-answer-1-3l82</guid>
      <description>&lt;p&gt;Most of the software engineers are intimidated by technical rounds and I have recently started to give interviews. So, this time I am planning to write up all the questions I get asked in my technical rounds. Hope this will be helpful to some of you to get an idea on what type of questions are being asked. Use this series as a guide to prepare and ace that interview.&lt;/p&gt;

&lt;p&gt;Some questions might be specific to Python and Django but most of them will be applicable to any software engineering role and web application developers.&lt;/p&gt;

&lt;p&gt;This interview was for a Python developer role and they were looking for a candidate proficient in Django too, hence you will be seeing many questions related to Django architecture and design as well.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-lets-work-on-a-recursive-implementation-of-fibonacci-series"&gt;
  &lt;/a&gt;
  1. Let’s work on a recursive implementation of Fibonacci series.
&lt;/h4&gt;

&lt;p&gt;passed "n", return the fibonacci value at the nth position.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: Fibonacci series are created in one of the two ways, iterative and recursive. Interviewer was looking for a recursive solution only.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This solution worked fine for smaller numbers, &lt;br&gt;
n=10, took 0:00:00.001004sec&lt;br&gt;
n=35, took 0:00:05.157989sec which is too long.&lt;br&gt;
So next I was asked to optimize this.&lt;/p&gt;

&lt;p&gt;Ideal Solution: Using Dynamic programming, I am storing each value found in a dictionary, so that the next it looks for fibonacci of that number it can just look-up from "value_dict"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# the first two values of fibonacci is always 0,1
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="c1"&gt;# if fibonacci(n) is already calculated then return it from dict 
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;#else store it in dict and return next time it is called for.
&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; 
        &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;value_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fibonacci&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-what-are-decorators-write-a-decorator-that-logs-the-functions-arguments"&gt;
  &lt;/a&gt;
  2. What are decorators? Write a decorator that logs the functions arguments.
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;br&gt;
Decorator is any function that takes in another function and adds functionality to it without manipulating the function itself. It does this by using a wrapper function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Logging the parameter of "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;" is "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="n"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;@decorator is just a syntactic sugar, it is equivalent to &lt;br&gt;
&lt;code&gt;res = decorator(operation(5,20))&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3-what-gil-global-interpreter-lock-how-does-it-allow-multithreading-in-python"&gt;
  &lt;/a&gt;
  3. What GIL (global interpreter lock)? How does it allow multi-threading in python?
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: GIL is a lock which makes sure python interpreter is held by only one thread at a time. That means only one thread can be in a execution status at any point of time. And this is why python is a single threaded programming language. This was introduced to solve the reference count problem which is used by python for garbage collection.&lt;/p&gt;

&lt;p&gt;Then how is multi-threading module working in python, you may ask!&lt;br&gt;
Well, this global interpreter lock applies only for CPU bound activities. So if there is any code which affects or uses CPU it automatically starts acting as a single threaded. But all the general programs can still work in a multi-threaded fashion.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#4-what-is-wsgi-and-uwsgi"&gt;
  &lt;/a&gt;
  4. What is WSGI and UWSGI?
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;br&gt;
Web server gateway interface, as the name suggests it is a interface between the application itself and web server. &lt;br&gt;
Django provides runserver for development server and for debugging, but for production we use WSGI in combination of any web servers like nginx, apache, or even uwsgi server.&lt;br&gt;
wsgi and uwsgi are both protocols, and these work with web servers to serve good performance application in production.&lt;/p&gt;

&lt;p&gt;So when client makes a request to django application, the request is read by nginx or any web server. Then nginx passes this request to the uwsgi service which intern passes it to concerned django app.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#5-can-we-write-a-custom-queryset-in-dango-how"&gt;
  &lt;/a&gt;
  5. Can we write a custom queryset in dango? How?
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;br&gt;
Yes, we can create a custom queryset by customizing Managers. A Manager is the interface through which database query operations are provided to Django models. Each model contains atleast one Manager.&lt;br&gt;
We can override Managers base queryset by override Manager.get_queryset() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Employees&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On running, &lt;code&gt;Employees.objects.all()&lt;/code&gt; it will return all the employees in database.&lt;br&gt;
Now, if we want to customize this to return only the employees from Toronto location then below can be done using Manager.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TorontoEmployeesManager&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_queryset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;get_queryset&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Toronto"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Employees&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Manager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="n"&gt;toronto_objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TorontoEmployeesManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, &lt;code&gt;Employees.toronto_objects.all()&lt;/code&gt; will return only the employees from Toronto location.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-arr1-listrange10-arr2-arr1-arr3-arr1"&gt;
  &lt;/a&gt;
  6. arr1 = list(range(10)); arr2 = arr1; arr3 = arr1[:]
&lt;/h4&gt;

&lt;p&gt;Is arr2 == arr3 ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;:&lt;br&gt;
No, &lt;code&gt;arr2 = arr1&lt;/code&gt; creates a new reference of arr1 and assigns it to arr2. whereas, &lt;code&gt;arr3 = arr1[:]&lt;/code&gt; copies the content of arr1 and assigns it to new variable called arr3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;
&lt;span class="n"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt;
&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# [1,2,3,4,5]
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# [1,2,3,4]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-how-to-hide-a-class-variable-from-getting-accessed-outside-the-class"&gt;
  &lt;/a&gt;
  7. How to hide a class variable from getting accessed outside the class?
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;a and b should be hidden from outside of class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="c1"&gt;# using double underscore hides class variable
&lt;/span&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#8-what-are-middlewares-in-django-how-do-you-create-custom-middleware"&gt;
  &lt;/a&gt;
  8. What are middlewares in Django? How do you create custom middleware.
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br&gt;
Middleware is a low-level plugin that can be used to hook into Django's request/response cycle. There are already middlewares available by default when a django project is created and it can found in settings.py.&lt;br&gt;
We can create a custom middleware and include it in the list of middleware with the existing ones.&lt;/p&gt;

&lt;p&gt;To create a custom middleware following structure needs to be followed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Middleware class should always consist __init__() and __call__()
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyCustomMiddleware&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get_response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_response&lt;/span&gt; &lt;span class="c1"&gt;#get_response is the view which will be called after this middleware/ or its the next middleware in the list.
&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="c1"&gt;# write the code to be executed before calling view here
&lt;/span&gt;
          &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#pass the request to view and get the response back, which will be returned.
&lt;/span&gt;
          &lt;span class="c1"&gt;# write the code to be executed after calling view here.
&lt;/span&gt;          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add this middleware into the "Middleware" section in settings.py. Also make sure the order of the middleware is correct. Because it is called from top to down while processing requests and then bottom to up while returning response.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Currency Converter with Python</title>
      <author>Swapan Roy</author>
      <pubDate>Mon, 03 May 2021 10:33:42 +0000</pubDate>
      <link>https://dev.to/swapanroy/currency-converter-with-python-9ef</link>
      <guid>https://dev.to/swapanroy/currency-converter-with-python-9ef</guid>
      <description>&lt;p&gt;With COVID surging, enjoying the weekend with outdoor recreation has become a challenge. Last weekend, my better half was converting USD into multiple currencies. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Concept:&lt;/em&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Create a space for user input ( in our case USD is the base currency that needs to be converted into other currencies)&lt;/li&gt;
&lt;li&gt; Use API to fetch data and parse it.&lt;/li&gt;
&lt;li&gt; Present the data on the UI screen. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below is the process that I followed &lt;br&gt;
• Using Python 3.9 (Latest version) -download &lt;a href="https://www.python.org/downloads/windows/"&gt;here&lt;/a&gt;&lt;br&gt;
• Use  tkinter library for UI (pip install tkinter )&lt;br&gt;
• Use request library to pull data via API&lt;br&gt;
• Create buttons like “Convert” to fetch data and Clear to erase the content&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-output"&gt;
  &lt;/a&gt;
  Final Output
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W4a0RyQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwaow9b3zy2uyhpqan8x.GIF" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4a0RyQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwaow9b3zy2uyhpqan8x.GIF" alt="When the program starts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f39-hecQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05h03x96w5cx4ib2t6b.GIF" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f39-hecQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v05h03x96w5cx4ib2t6b.GIF" alt="When user inputs numeric value and convert button is hit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code-snippet"&gt;
  &lt;/a&gt;
  Code Snippet
&lt;/h1&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Laying out the labels on the tkinter grid.
# Create a Label widget with "USD" as label
    l0 =Label(window,text="USD")
    l0.grid(row=0,column=0) # The Label is placed in 
    position 0, 0 in the window

   l1 = Label(window,text="INR")
   l1.grid(row=1,column=0) # The Label is placed in position 
   1, 0 in the window
   l2 = Label(window,text="GBP")
   l2.grid(row=1,column=1) # The Label is placed in position 
   1, 1 in the window

  ……

  e2 = Entry(window,textvariable=e2_value)  # Create an 
  Entry box for users to enter the value
  e2.grid(row=0,column=1)


  # Create a button widget
  # The from_currency() function is called when the button 
   is pushed
  b1 = Button(window,text="Convert",command=from_currency)
  b1.grid(row=0,column=2)

  # The delete function is called when the button is pushed
   b2 = Button(window,text="Clear",command=delete)
   b2.grid(row=0,column=3)


   # Create four empty text boxes, t1, t2, t3 and t4 for 
   values to show up
  t1 = Text(window,height=1,width=20)
  t1.grid(row=2,column=0)

Fetch Data via URL 
  # Where USD is the base currency you want to use
  url = 'https://v6.exchangerate-api.com/v6/KEY/latest/USD/'

  # Making our request
  response = requests.get(url)
  data = response.json()

 # Your JSON object
 print(data['conversion_rates']['USD'])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Functions &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def from_currency():
# Get user value from input box and multiply by today's 
conversion rate to  get INR and round it to 2 decimals
    rupees = round(float(e2_value.get()) * 
data['conversion_rates']['INR'],2)

# Get user value from input box and multiply by today's conversion rate to get GBP
    pound = round(float(e2_value.get())*data['conversion_rates']['GBP'],2)

…….

  Empty the Text boxes if they had text from the previous 
 use and fill them again
    t1.delete("1.0", END)  # Deletes the content of the Text 
    box from start to END

    ……

def delete():
   # Deletes content from t1 Text box
  t1.delete("1.0", END)

  # Deletes content from t2 Text box
  t2.delete("1.0", END)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Code wil soon be added to Github.&lt;/p&gt;

&lt;p&gt;Note: Thanks to John McArthur for this photo via @unsplash 🎁 &lt;/p&gt;

</description>
      <category>python</category>
      <category>ui</category>
      <category>devjournal</category>
      <category>forex</category>
    </item>
    <item>
      <title>10 Most Popular GitHub Repositories</title>
      <author>Siddharth Chandra</author>
      <pubDate>Mon, 03 May 2021 10:13:53 +0000</pubDate>
      <link>https://dev.to/siddharth2016/10-most-popular-github-repositories-5f6h</link>
      <guid>https://dev.to/siddharth2016/10-most-popular-github-repositories-5f6h</guid>
      <description>&lt;h3&gt;
  &lt;a href="#not-your-usual-list-of-repositories"&gt;
  &lt;/a&gt;
  Not Your Usual List of Repositories.
&lt;/h3&gt;

&lt;p&gt;Open Source Software (OSS) has been getting a lot of traction in recent years. Right now, there are approximately 200,000 open source projects worth billions of dollar, being worked on across the globe.&lt;/p&gt;

&lt;p&gt;GitHub hosts software for development and version control. The main repository can have many branches or forks. GitHub is widely used by developers to test code and to collaborate with other developers in the software development life cycle.&lt;/p&gt;

&lt;p&gt;In this article, we will go through the ten most popular open-source repositories on GitHub.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;FreeCodeCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the biggest repositories on GitHub because it offers newcomers the means to learn how to code effectively, for free. As the name suggests, it is a user-friendly and safe environment for coders to learn skills.&lt;/p&gt;

&lt;p&gt;Any learner can build his or her own project, learn to code and adopt best practices. Since its inception, the page has collected more than &lt;code&gt;320K&lt;/code&gt; stars on GitHub. This community is the best example of OSS - a place where everyone can contribute and learn for free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vscode"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/microsoft/vscode"&gt;VSCode&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Visual Studio Code is a free and open-source code editor developed by Microsoft for Windows, Linus and macOS. It is an all-purpose code editor and its focus is to provide developers with a single stop solution for all their coding needs, including editing and debugging.&lt;/p&gt;

&lt;p&gt;VSCode is an extremely well-liked open-source repository on GitHub, with more than &lt;code&gt;110K&lt;/code&gt; stars and &lt;code&gt;1.4K&lt;/code&gt; contributors. This repository is used to work on code and can also be used as a publishing platform. It gets updated every month with bug fixes, new features and some enhancements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/flutter/flutter"&gt;Flutter&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This software development kit made by Google is one of the fastest-growing open source communities on GitHub. It permits applications to be developed from a single codebase with a user interface toolkit. The applications created by Flutter are attuned with PC and mobile platforms and their appearance creates aesthetic and efficient end-user experiences.&lt;/p&gt;

&lt;p&gt;Flutter is pushed by Skia, and the hardware-accelerated 2D graphics library by Android and Chrome. It also employs a layered architecture for building applications, which allows developers to flawlessly add text, graphics, video and animated content as overlays without disturbing the source code. Its GitHub page has over &lt;code&gt;117K&lt;/code&gt; stars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ansible"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ansible/ansible"&gt;Ansible&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This open-source IT engine automates application operation and cloud provisioning. It was created in 2012 by AnsibleWorks and is now owned by Red Hat. Ansible is developed in Python, is lightweight and has fast deployment. As Python is used to build most Linux and UNIX systems, getting Ansible up and running is very quick, and its agentless feature makes it easy to be set up and used.&lt;/p&gt;

&lt;p&gt;It can also be run from CLI commands without using configuration files. For comparatively difficult tasks, its configuration is handled by the YAML syntax in the configuration file known as &lt;code&gt;playbook&lt;/code&gt;. Ansible commands can be written in any programming language and sent over in JSON format. It has also recently started supporting Windows. It has over &lt;code&gt;46K&lt;/code&gt; stars on GitHub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/kubernetes/kubernetes"&gt;Kubernetes&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The powerful open-source system was initially developed by Google for managing containerised applications in a cluster environment. Kubernetes was launched in 2014 after more than a decade of experience running production workloads at Google with Google's internal container cluster managers Borg and Omega.&lt;/p&gt;

&lt;p&gt;It aims to provide better ways of managing related and distributed components and services across varied infrastructures. Kubernetes has now become the &lt;em&gt;de facto&lt;/em&gt; standard for deploying containerised applications at scale in private, public and hybrid cloud environments. The largest public cloud platforms - including AWS, Google Cloud, Azure, IBM Cloud and Oracle Cloud - now provide managed services for Kubernetes. Its repository has more than &lt;code&gt;76K&lt;/code&gt; stars.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-native"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/facebook/react-native"&gt;React Native&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;React Native is a JavaScript framework that is used in many social media platforms, including Facebook, Twitter, and so on. This framework allows the user to build native applications using JavaScript. It brings React's declarative user interface build to mobile platforms as well as allows the developer to use native UI controls to gain full access to the platforms.&lt;/p&gt;

&lt;p&gt;React Native has a lively GitHub community with several contributors and over &lt;code&gt;94K&lt;/code&gt; stars. This platform understood and modified more easily. It also makes it simple to build component-based complex UIs and allows any local changes to replicate quickly on the project. Developers use the GitHub community to interact, collaborate and contribute to the program, making it a popular choice for JavaScript coders.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tensorflow"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tensorflow/tensorflow"&gt;TensorFlow&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a popular open-source machine learning framework. It contains a large number of useful libraries, tools, and community resources focused on making ML capabilities available for developers looking to use them in their projects. With TensorFlow, developers can easily create and deploy ML models as part of their application and also use them on their system, on the cloud or from a mobile platform.&lt;/p&gt;

&lt;p&gt;Developed by experts working in the Google Brain team, the system is compatible with all major operating systems. The GitHub page has more than &lt;code&gt;150K&lt;/code&gt; stars and more than &lt;code&gt;2.9K&lt;/code&gt; contributors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#definitelytyped"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/DefinitelyTyped/DefinitelyTyped"&gt;DefinitelyTyped&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a library of TypeScript type definitions maintained on GitHub. In this open-source repository, developers can share and keep TypeScript type definitions for JS libraries. It mainly serves as a translator for JS developers to work with TypeScript. Using DefinitelyTyped and its declaration statements, they can discover TypeScript equivalents for existing JS libraries.&lt;/p&gt;

&lt;p&gt;Developers can contribute to the repository by adding definitions, testing, and so on. This is an extremely popular page, with thousands of contributors and many times more users. It has more than &lt;code&gt;33K&lt;/code&gt; stars and &lt;code&gt;13K&lt;/code&gt; active contributors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#azure"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MicrosoftDocs/azure-docs"&gt;Azure&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a cloud computing service developed by Microsoft. The GitHub repository of Microsoft Azure is devoted to its open-source documentation. The page calls developers to contribute to the project by giving feedback, reporting issues and similar helpful ways. The page has more than &lt;code&gt;7K&lt;/code&gt; contributors and is one of the most active repositories on the platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#home-assistant"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/home-assistant/core"&gt;Home Assistant&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This open-source home automation software is intended to the central system for controlling smart homes. The system is built using a modular approach so support for other devices or actions can be implemented easily. Homes Assistant core application software is written in Python and its main aim is local control and privacy, powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server. It has more than &lt;code&gt;42K&lt;/code&gt; stars and more than &lt;code&gt;2.4K&lt;/code&gt; active contributors.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Just starting your Open Source Journey? Don't forget to check &lt;a href="https://github.com/siddharth2016/hello-open-source"&gt;Hello Open Source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Need inspiration or a different perspective on the Python projects or just out there to explore? Check &lt;a href="https://github.com/siddharth2016/awesome-python-repos"&gt;Awesome Python Repos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to make a simple and awesome game from scratch? Check out &lt;a href="https://github.com/siddharth2016/PongPong"&gt;PongPong&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to &lt;code&gt;++&lt;/code&gt; your GitHub Profile README? Check out &lt;a href="https://github.com/marketplace/actions/quote-readme"&gt;Quote - README&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till next time!&lt;/p&gt;

&lt;p&gt;Namaste 🙏&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image Credits - &lt;a href="https://www.freepik.com/vectors/abstract"&gt;vectorjuice&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>visualisation</category>
    </item>
    <item>
      <title>JS interview in 2 minutes / Encapsulation (OOP)</title>
      <author>Nikita Kozlov</author>
      <pubDate>Mon, 03 May 2021 09:51:56 +0000</pubDate>
      <link>https://dev.to/kozlovzxc/js-interview-in-2-minutes-encapsulation-oop-2ico</link>
      <guid>https://dev.to/kozlovzxc/js-interview-in-2-minutes-encapsulation-oop-2ico</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;br&gt;
What is Encapsulation?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick answer:&lt;/strong&gt;&lt;br&gt;
Encapsulation can be used in any meaning of any of these terms or both:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mechanism used to restrict access to some of an object's properties.&lt;/li&gt;
&lt;li&gt;Mechanism that allows data access only via related methods or functions (setters and getters).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Longer answer:&lt;/strong&gt;&lt;br&gt;
Basically, the first definition is only about creating private properties.&lt;/p&gt;

&lt;p&gt;Btw there are no private properties in JavaScript but looks like there is &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields"&gt;a proposal&lt;/a&gt;. In Typescript private properties are present.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qFTS658j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmdf8n40xbgkxz4pdew7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qFTS658j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmdf8n40xbgkxz4pdew7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another definition is just a way to say that access to every property is implemented via getters and setters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;setSalary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;salary&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;getSalary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;salary&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSalary&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSalary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSalary&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Real-life applications:&lt;/strong&gt;&lt;br&gt;
This getters &amp;amp; setters pattern was always confusing to me and felt like a total redundancy, haven't changed my opinion still. &lt;/p&gt;

&lt;p&gt;There is &lt;a href="https://stackoverflow.com/questions/1568091/why-use-getters-and-setters-accessors"&gt;a list&lt;/a&gt; with a bunch of good reasons why getters &amp;amp; setters can be useful, but I can't say that I actually had an issue with any of the described topics.&lt;/p&gt;

&lt;p&gt;// Here goes super opinionated section&lt;/p&gt;

&lt;p&gt;Feels like the whole industry is moving to not deeply using OOP and preferring immutable objects and pure functions over data mutations, so this topic maybe just a tribute to old times 🤷&lt;/p&gt;

&lt;p&gt;// end of super opinionated section&lt;/p&gt;

&lt;p&gt;If you know a good example of beneficial use of getters and setters, please share it in the comments 🙏&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"&gt;wiki/encapsulation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tutorialspoint.com/java/java_encapsulation.htm"&gt;tutorialspoint/java/encapsulation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-polymorphism-oop-3pla"&gt;JS interview in 2 minutes / Polymorphism (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-inheritance-in-oop-53h2"&gt;JS interview in 2 minutes / Inheritance in OOP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-object-oriented-programming-oop-3443"&gt;JS interview in 2 minutes / Object-Oriented Programming (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Btw, I will post more fun stuff here and on &lt;a href="https://twitter.com/kozlovzxc"&gt;Twitter&lt;/a&gt;. Let's be friends 👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Automate backing up your Docker volumes</title>
      <author>Hendrik</author>
      <pubDate>Mon, 03 May 2021 09:44:58 +0000</pubDate>
      <link>https://dev.to/hendr_ik/automate-backing-up-your-docker-volumes-3gdk</link>
      <guid>https://dev.to/hendr_ik/automate-backing-up-your-docker-volumes-3gdk</guid>
      <description>&lt;p&gt;Docker is an ubiquitous tool for us while building &lt;a href="https://www.offen.dev/?utm_source=forum&amp;amp;utm_campaign=0175"&gt;Offen&lt;/a&gt;, a fair and open source web analytics software. It is foundational for &lt;a href="https://github.com/offen/offen"&gt;our development setup&lt;/a&gt;, but we also use it for &lt;a href="https://github.com/offen/deployment"&gt;deploying our own Offen instance&lt;/a&gt; to production.&lt;/p&gt;

&lt;p&gt;One thing that we found missing was a simple and lightweight tool for taking and managing remote backups of Docker volumes. This is why we wrote our own tool called &lt;code&gt;[offen/docker-volume-backup](https://github.com/offen/docker-volume-backup)&lt;/code&gt; which. In this post I'd like to introduce you to the tool and how to use it for automatically taking backups of the Docker volumes in your own setup.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#introduction-to-docker-volumes"&gt;
  &lt;/a&gt;
  Introduction to Docker volumes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/storage/volumes/"&gt;Volumes&lt;/a&gt; are Docker's way of managing persistent data. As Docker containers themselves are ephemeral, volumes can be mounted into the container's filesystem, enabling you to persist data beyond the lifecycle of a container. Volumes are commonly used for storing database data or similar.&lt;/p&gt;

&lt;p&gt;For example, this is how you would use a Docker volume to persist data for an Offen container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker volume create offen_data
docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; offen_data:/var/opt/offen &lt;span class="se"&gt;\&lt;/span&gt;
  offen/offen:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the running container, data stored in &lt;code&gt;/var/opt/offen&lt;/code&gt; will be persisted in the &lt;code&gt;offen_data&lt;/code&gt; volume and can be reused in other containers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-offendockervolumebackup-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;offen/docker-volume-backup&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[offen/docker-volume-backup](https://github.com/offen/docker-volume-backup)&lt;/code&gt; is designed to run sidecared next to an application container and &lt;strong&gt;periodically take backups of volumes&lt;/strong&gt; to any &lt;strong&gt;S3 compatible storage&lt;/strong&gt; (i.e. AWS S3 itself or storages like &lt;a href="https://min.io/"&gt;MinIO&lt;/a&gt; or &lt;a href="https://ceph.io/"&gt;Ceph&lt;/a&gt;). It can run on any schedule you wish and it can also take care of &lt;strong&gt;rotating away old backups&lt;/strong&gt; after a configured retention period.&lt;/p&gt;

&lt;p&gt;If needed, it can &lt;strong&gt;temporarily stop&lt;/strong&gt; and restart your running containers to ensure backup integrity.&lt;/p&gt;

&lt;p&gt;Using alpine as the base image and using the MinIO client instead of AWS CLI for uploading files to the remote storage keeps the image &lt;strong&gt;small and lightweight&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#defining-the-sidecar-container"&gt;
  &lt;/a&gt;
  Defining the sidecar container
&lt;/h3&gt;

&lt;p&gt;The easiest way of managing such a setup is using docker-compose. A compose file that backs up its volumes would look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;offen&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;offen/offen:latest&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db:/var/opt/offen&lt;/span&gt;
    &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;docker-volume-backup.stop-during-backup=true&lt;/span&gt;

    &lt;span class="na"&gt;backup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;offen/docker-volume-backup:v1.0.2&lt;/span&gt;
        &lt;span class="s"&gt;# Ideally, those values should go into an `env` file or Docker secrets&lt;/span&gt;
        &lt;span class="s"&gt;# as they contain credentials. It's easier to spell them out here&lt;/span&gt;
        &lt;span class="s"&gt;# in the context of this tutorial though.&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# A backup is taken each day at 2AM&lt;/span&gt;
            &lt;span class="na"&gt;BACKUP_CRON_EXPRESSION&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;2&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt;
            &lt;span class="c1"&gt;# Backups are stored with a timestamp appended&lt;/span&gt;
            &lt;span class="na"&gt;BACKUP_FILENAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;offen-db-%Y-%m-%dT%H-%M-%S.tar.gz"&lt;/span&gt;
            &lt;span class="c1"&gt;# Backups older than 7 days will be pruned.&lt;/span&gt;
            &lt;span class="c1"&gt;# If this value is not given, backup will be kept forever.&lt;/span&gt;
            &lt;span class="na"&gt;BACKUP_RETENTION_DAYS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;7"&lt;/span&gt;
            &lt;span class="c1"&gt;# Credentials for your storage backend&lt;/span&gt;
            &lt;span class="na"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;YOUR_ACCESS_KEY&amp;gt;"&lt;/span&gt;
            &lt;span class="na"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;YOUR_SECRET_KEY&amp;gt;"&lt;/span&gt;
            &lt;span class="na"&gt;AWS_S3_BUCKET_NAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;my-backups"&lt;/span&gt;
            &lt;span class="c1"&gt;# If given, backups are encrypted using GPG&lt;/span&gt;
            &lt;span class="na"&gt;GPG_PASSPHRASE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;SOME_KEY&amp;gt;"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# This allows the tool to stop and restart all&lt;/span&gt;
            &lt;span class="c1"&gt;# containers labeled as docker-volume-backup.stop-during-backup&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/run/docker.sock:/var/run/docker.sock:ro&lt;/span&gt;
            &lt;span class="s"&gt;# All volumes mounted to /backup/&amp;lt;some-name&amp;gt; will be backed up&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db:/backup/offen-db:ro&lt;/span&gt;

&lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, you can also use the image using plain Docker commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker volume create offen_data
docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; offen_data:/var/opt/offen &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-l&lt;/span&gt; docker-volume-backup.stop-during-backup&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true
  &lt;/span&gt;offen/offen:latest
docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; offen_data:/backup/offen-db:ro &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; /var/run/docker.sock:/var/run/docker.sock:ro &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--env-file&lt;/span&gt; backup.env &lt;span class="se"&gt;\&lt;/span&gt;
  offen/docker-volume-backup:v1.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#manually-triggering-a-backup"&gt;
  &lt;/a&gt;
  Manually triggering a backup
&lt;/h3&gt;

&lt;p&gt;Instead of running the backups on a regular schedule, you can also execute the command in a running container yourself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; &amp;lt;container_ref&amp;gt; backup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#restoring-a-volume-from-a-backup"&gt;
  &lt;/a&gt;
  Restoring a volume from a backup
&lt;/h3&gt;

&lt;p&gt;To recover from a backup, download and untar the backup file and copy its contents back into the docker volume using a one-off container created for just that purpose:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--name&lt;/span&gt; backup_restore &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; offen_data:/backup_restore
  alpine
docker &lt;span class="nb"&gt;cp&lt;/span&gt; &amp;lt;location_of_your_unpacked_backup&amp;gt; backup_restore:/backup_restore
docker stop backup_restore &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; docker &lt;span class="nb"&gt;rm &lt;/span&gt;backup_restore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The volume is now ready to use in other containers. Alternatively, you can use a one-off volume created beforehand.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-information"&gt;
  &lt;/a&gt;
  More information
&lt;/h3&gt;

&lt;p&gt;Detailed documentation and the source code is available at the &lt;a href="https://github.com/offen/docker-volume-backup"&gt;GitHub repository&lt;/a&gt; and at &lt;a href="https://hub.docker.com/r/offen/docker-volume-backup"&gt;Docker Hub&lt;/a&gt;. Source code is licensed under the Mozilla Public License 2.0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;Knowing you have remote backups around in case of unexpected infrastructure glitches helps moving forward with confidence and not too much worry. I hope this article demonstrated that adding them to your Docker setup is only a matter of configuring an additional container, and helps you get going with your backups so you can move forward with your product.&lt;/p&gt;

&lt;p&gt;Written by Frederik Ring&lt;/p&gt;

</description>
      <category>docker</category>
      <category>containers</category>
      <category>devops</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Solution: Running Sum of 1d Array</title>
      <author>seanpgallivan</author>
      <pubDate>Mon, 03 May 2021 09:32:36 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-running-sum-of-1d-array-34na</link>
      <guid>https://dev.to/seanpgallivan/solution-running-sum-of-1d-array-34na</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/running-sum-of-1d-array/discuss/1189005"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1480-easy-running-sum-of-1d-array"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/running-sum-of-1d-array/"&gt;Leetcode Problem #1480 (&lt;em&gt;Easy&lt;/em&gt;): Running Sum of 1d Array&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an array &lt;code&gt;nums&lt;/code&gt;. We define a running sum of an array as &lt;code&gt;runningSum[i] = sum(nums[0]…nums[i])&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Return the running sum of &lt;code&gt;nums&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [1,2,3,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,3,6,10]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [1,1,1,1,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,2,3,4,5]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [3,1,2,10,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[3,4,6,16,17]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^6 &amp;lt;= nums[i] &amp;lt;= 10^6&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;While this is not a terribly challenging problem, it's a good introduction to the concept of a &lt;strong&gt;prefix sum array&lt;/strong&gt;. Prefix sum arrays have many uses in more complex algorithms and can sometimes help reduce the time complexity of a advanced solution by an order of magnitude.&lt;/p&gt;

&lt;p&gt;In a prefix sum array, we will create a duplicate array which contains the running sum of the elements &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;i&lt;/strong&gt; of our original array (&lt;strong&gt;nums&lt;/strong&gt;) for each index &lt;strong&gt;i&lt;/strong&gt; of our prefix sum array (&lt;strong&gt;ans&lt;/strong&gt;). &lt;em&gt;(&lt;strong&gt;Note&lt;/strong&gt;: We can lower the &lt;strong&gt;space complexity&lt;/strong&gt; by using an &lt;strong&gt;in-place&lt;/strong&gt; approach with &lt;strong&gt;nums&lt;/strong&gt; directly and mutating it into its own prefix sum array, if there is no compelling reason to avoid modifying a function argument.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since we'll need to build on a previous running total, we should start our iteration at &lt;strong&gt;i = 1&lt;/strong&gt; and copy over the first element from &lt;strong&gt;nums&lt;/strong&gt; to &lt;strong&gt;ans&lt;/strong&gt;. Then we just iterate through &lt;strong&gt;nums&lt;/strong&gt; and add each element (&lt;strong&gt;nums[i]&lt;/strong&gt;) to the previous running total (&lt;strong&gt;ans[i-1]&lt;/strong&gt;) to create the new running total (&lt;strong&gt;ans[i]&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;When we're done, we can &lt;strong&gt;return ans&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of nums&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for our running sum array&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;or &lt;strong&gt;O(1)&lt;/strong&gt; with an in-place approach&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;runningSum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;runningSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="nf"&gt;runningSum&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;runningSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>My favorite lessons learned from my 2020 personal reading list</title>
      <author>Jelle Smeets</author>
      <pubDate>Mon, 03 May 2021 09:20:18 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/my-favorite-lessons-learned-from-my-2020-personal-reading-list-1pjf</link>
      <guid>https://dev.to/smeetsmeister/my-favorite-lessons-learned-from-my-2020-personal-reading-list-1pjf</guid>
      <description>&lt;p&gt;As 2020 has passed as probably one of the weirdest years. It also presented opportunities to invest more time in hobbies and other interests. The time gained by working from home, and no longer having to commute, combined with the fact that a lot of places of interest were shut down can now be spent on self-improvement. This blog post will concentrate on my personal reading list of 2020 - ish and what my favorite lessons are from these books.&lt;/p&gt;

&lt;p&gt;While some of my original plans failed, reading more is one of the goals that I managed to do consistently over the year. While I quit learning to play the guitar after about a month (second-hand guitar broke, never bothered to replace it), and was working out daily more of a struggle than I anticipated, reading remained consistent. In this blog post, I will take you along in my readings, and share my favorite lessons from these books.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reading-list-of-2020-my-favorites"&gt;
  &lt;/a&gt;
  Reading list of 2020 - my favorites
&lt;/h2&gt;

&lt;p&gt;The first and favorite book on my reading list is &lt;strong&gt;the culture map&lt;/strong&gt; by Erin Meyer. In my blog post regarding &lt;a href="https://blog.jellesmeets.nl/articles/distributed-teams-the-complete-guide/"&gt;distributed teams,&lt;/a&gt; I mention I'm currently working in teams that consist of several cultures. The culture map really opened up my mind to try to find the root cause for the behavior, instead of contributing it to malice. In my opinion, the key to success for collaboration between cultures is having an open mind, and trying to relate. This is exactly the opposite of the "us vs them" mentality I would see when our collaboration started.&lt;/p&gt;

&lt;p&gt;Another book that is high on my favorite list, is &lt;strong&gt;the 4-hour workweek&lt;/strong&gt; by Tim Ferriss. This book is more popular and even made it to the new york times bestseller list for quite a while. This book really helped me making a mindset switch. Does more money always mean you are richer? The book does a great way of explaining that freedom is also quite important. A man with half or less income can live much richer than someone working 60+ hours per week can. While this book has not convinced me &lt;em&gt;yet&lt;/em&gt; to book a flight to Buenos Aires to become a digital nomad, it definitely triggered something in me to look deeper into building passive income streams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XAxPAzI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/918iyzj9duwem78fiy6h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XAxPAzI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/918iyzj9duwem78fiy6h.jpg" alt="Digital nomad"&gt;&lt;/a&gt;&lt;br&gt;
What being a digital nomad could look like.&lt;/p&gt;

&lt;p&gt;As explained in the blog post "&lt;a href="https://blog.jellesmeets.nl/lists/4-lessons-i-learned-as-a-starting-scrum-master/"&gt;The 4 lessons I learned as a starting scrum master&lt;/a&gt;", I had a real "&lt;em&gt;aha&lt;/em&gt;" moment reading &lt;strong&gt;Coaching agile teams&lt;/strong&gt; by Lyssa Adkins. I had no real material to compare my role as a Scrum master to, as I have only been a Scrum master at my current job. With this lack of perspective compared with examples I had of my co-workers, I turned into a "senior developer with scrum tendencies". This book really helped me develop my role as a Scrum master, to a point where I am now a full-time scrum master of 2 teams.&lt;/p&gt;

&lt;p&gt;If you are in some kind of position where you work with teams I wholeheartedly recommend the 5 dysfunctions of a team book by Patrick Lencioni. This book will take you along in a situation where a team needs to be created, and what dysfunctions a team can have. There are several practical pointers in here which make it a must-have on my reading list!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#books-worth-mentioning"&gt;
  &lt;/a&gt;
  Books worth mentioning
&lt;/h2&gt;

&lt;p&gt;As being quite popular the last few years, &lt;strong&gt;Subtle art of not giving a fuck&lt;/strong&gt; by Mark Manson is a book I read with great joy. The concept of "&lt;em&gt;say no more often so you can say yes to the things you care about"&lt;/em&gt;, is something I can apply to my own life more often.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://leanpub.com/TipsFromTheTrenches"&gt;Agile tips from the trenches&lt;/a&gt;&lt;/strong&gt; is an ebook written by several agile experts who give their tips on several subjects. This book is being put together by Yves Hanoulle. There are too many good tips, to pick one to share in this list. So I would recommend checking out the ebook yourself!&lt;/p&gt;

&lt;p&gt;A personal favorite is &lt;strong&gt;Ik weet je wachtwoord&lt;/strong&gt; by &lt;a href="https://twitter.com/danielverlaan"&gt;Daniel Verlaan&lt;/a&gt;. He is my favorite tech journalist in the Netherlands, and he has made the news by diving into the criminal circuits rather often. This book takes you along in several areas where criminals operate in terms of technology. With my technical background, it was still a very interesting read on how the minds of some criminals work, and how technology can be used against you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#misscelanious-books"&gt;
  &lt;/a&gt;
  Misscelanious books
&lt;/h2&gt;

&lt;p&gt;In this category fall books I read, that I want to mention but do not fall under any other category.&lt;/p&gt;

&lt;p&gt;The book &lt;strong&gt;Hypotheekvrij&lt;/strong&gt; by Gerhard Hormann, falls under the same category as the 4-hour workweek. It has quite extensive ways to help you save money, to completely pay off your mortgage early, so you have more financial freedom to live the life you want. Although some of the saving tips might not be for everyone.&lt;/p&gt;

&lt;p&gt;Another way to keep learning for me was to check out &lt;strong&gt;Investing for dummies&lt;/strong&gt;. The stock market has always been this "rich person thing" to me, but I found out that is not the case. To make sure I know what I am doing I wanted to learn the basics of the stock market. This book really helped do that, especially the fact I bought it second-handed, and it contained several pencil-written tips from the previous owner(s). All in all a decent contribution to my personal reading list.&lt;/p&gt;

&lt;p&gt;Another ebook I enjoyed is &lt;strong&gt;Start freelancing&lt;/strong&gt; &lt;strong&gt;today&lt;/strong&gt; by &lt;a href="https://twitter.com/kvlly"&gt;Kelly Vaughn&lt;/a&gt;. I always wondered if freelancing was something for me, and this book really helped me learn some of the aspects of freelancing, and I have a much clearer picture of freelancing. I don't think I will quit my job any time soon, but it definitely made me realize it is much easier than I thought!&lt;/p&gt;

&lt;p&gt;The last 2 books fall under a new hobby I plan to pick up since I moved to a new place with a garden. To master the flames, and grill a perfect steak on my Weber Kettle. The first book to help me with that is &lt;strong&gt;Het vuur de baas&lt;/strong&gt; by Dennis "Noskos" Van Koutrik. This really explains the basics and all the different ways to BBQ. I would recommend this for anyone wanting to start with the BBQ and learn more about the basics. Another book in this category is the book &lt;strong&gt;ALL FIRED UP&lt;/strong&gt; by &lt;a href="https://www.instagram.com/jbbouwmeester/"&gt;Joy Bouwmeester.&lt;/a&gt; I followed Joy on Instagram for a while, and the pictures of her food are just perfect, it gets me drooling every time. The fact that all recipes are gluten-free is a nice bonus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lHANYWct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/flbjme5wju3grvo5rihi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lHANYWct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/flbjme5wju3grvo5rihi.jpg" alt="Bbq in action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How I imagine spending the upcoming summer&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To come to a conclusion (or give you a nice summary) on all of the lessons I have learned from the books in my personal reading list above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There are many ways to tackle an issue. Try to see it from the other's perspective before making judgments. Especially when it comes to collaboration with people from different cultures.&lt;/li&gt;
&lt;li&gt;While I might not be ready to hop on an airplane to Buenos Aires to start the Digital Nomad life, several books did open my eyes to passive income and earn more freedom in that way.&lt;/li&gt;
&lt;li&gt;Thanks to Coaching agile teams &amp;amp; tips from the trenches I really developed myself in the role of a Scrum master, improving not just myself, but also the teams I am currently in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While this is still just a subset of some more books I read in 2020 on my personal reading list, I still learned a lot through them. What are the books you read in 2020? And what lessons did you learn from them? Please let me know in the comments, so I can pick them up as well!&lt;/p&gt;

</description>
      <category>reading</category>
      <category>icymi</category>
      <category>books</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Integrating webhook notifications with Adyen Checkout</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Mon, 03 May 2021 09:19:28 +0000</pubDate>
      <link>https://dev.to/adyen/integrating-webhook-notifications-with-adyen-checkout-39dm</link>
      <guid>https://dev.to/adyen/integrating-webhook-notifications-with-adyen-checkout-39dm</guid>
      <description>&lt;p&gt;&lt;em&gt;By Andrew Wong, Developer Advocate&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;When it comes to processing payments, Adyen provides a &lt;a href="https://docs.adyen.com/development-resources/webhooks"&gt;webhook&lt;/a&gt; to help customers (our platform’s merchants) build a complete online checkout integration.&lt;/p&gt;

&lt;p&gt;In this blog, we’ll check out how webhooks work, and how you can implement and test webhook notifications in your &lt;a href="https://docs.adyen.com/online-payments"&gt;checkout&lt;/a&gt; integration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-webhook"&gt;
  &lt;/a&gt;
  What is a webhook?
&lt;/h2&gt;

&lt;p&gt;In short, using a webhook is a great way for your applications to receive events or notifications from a service.&lt;/p&gt;

&lt;p&gt;To illustrate, think about your favorite local bookstore. Before you ever make a trip out to them, you’d prefer to know whether or not a certain book is in stock. One way to find out is to call the bookstore yourself and ask them directly.&lt;/p&gt;

&lt;p&gt;While this certainly works, one drawback is that you may have to make repeated calls to find out the availability of your favorite book. This wouldn’t be a great use of your (nor the store’s) time and resources. What if the book tends to sell out quickly? Having information about the book’s availability the moment it’s restocked could greatly increase your chances of coming home with a new novel.&lt;/p&gt;

&lt;p&gt;In the context of software development, calling the bookstore is like making an API call and receiving a response. For both situations, it’s still a manual process, and you receive information only when you ask for it.&lt;/p&gt;

&lt;p&gt;However, what if the bookstore calls you when they finally have the book in-stock? This would save time for both parties, as information about any in-stock status changes would only be sent whenever there’s new information to share in the first place.&lt;/p&gt;

&lt;p&gt;This is the philosophy behind a webhook: a way to receive new information or data proactively without having to repeatedly poll a service. Now, how does this look like in real-world applications?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realworld-application-of-webhooks"&gt;
  &lt;/a&gt;
  Real-world application of webhooks
&lt;/h2&gt;

&lt;p&gt;Imagine the “read receipts” in your favorite messaging app. For the most part, it’s made possible by taking advantage of an event webhook. That is, whenever your sent message is opened by the other application, an HTTP POST request is made to a specified URL. In turn, your application is notified with data that the message has been read, and can then run business logic for rendering the read receipt. There’s no need for your application to continuously check if your message has been read, as it’ll be automatically notified when the read status has been updated.&lt;/p&gt;

&lt;p&gt;All in all, using a webhook is ideal whenever you need to run some business logic in your application based on an event happening in another application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adyen-notification-webhooks"&gt;
  &lt;/a&gt;
  Adyen notification webhooks
&lt;/h2&gt;

&lt;p&gt;Webhooks are essential in the financial services space due to the asynchronous information flow of banks, payment methods, and other financial systems. Adyen provides a webhook to communicate this crucial information to our customers as soon it is available. This information includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Payment status updates&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Events that are not triggered by a request from the customer side. This includes events such as a shopper-initiated chargeback.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Requests that are processed asynchronously. For example, in the case of many local payment methods such as &lt;a href="https://docs.adyen.com/payment-methods/ideal"&gt;iDEAL&lt;/a&gt;, the outcome of the payment may take several hours to confirm. We send the customer a notification the second new information becomes available.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#integrating-the-webhook"&gt;
  &lt;/a&gt;
  Integrating the webhook
&lt;/h2&gt;

&lt;p&gt;There are two main steps to configure Adyen’s notification webhooks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Creating an endpoint on your server. This includes acknowledging the notification sent by Adyen, verifying its signature, storing the notification, and applying your business logic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setting up notifications in &lt;a href="https://ca-test.adyen.com/"&gt;Customer Area&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s check out how to set up notifications in a &lt;a href="https://github.com/adyen-examples/adyen-react-online-payments"&gt;test online Checkout application built in React and Express&lt;/a&gt;. We’ll also be using &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt;, which helps provide a public URL to tunnel into localhost as we test our integration.&lt;/p&gt;

&lt;p&gt;Before writing our first line of code, be sure to clone and install the test application. You can find instructions for getting everything up and running, including generating the required account keys, in the &lt;a href="https://github.com/adyen-examples/adyen-react-online-payments/blob/master/README.md"&gt;test application’s README&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-endpoint-on-your-server"&gt;
  &lt;/a&gt;
  Creating an endpoint on your server
&lt;/h3&gt;

&lt;p&gt;Once your project is up and running (i.e., accessible on port 8080), the first step is to expose and configure an endpoint on the server. In the Express server file, we’ll create an &lt;strong&gt;HTTP POST&lt;/strong&gt; route to &lt;strong&gt;/api/webhook/notification&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/webhook/notification&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[accepted]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As notifications come in, we’ll first acknowledge the notifications with an &lt;strong&gt;[accepted]&lt;/strong&gt; response. This helps ensure that our application server continues to properly accept notifications:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[accepted]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we’ll need to retrieve the array of notification request items from the &lt;strong&gt;POST&lt;/strong&gt; body, which looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"NotificationRequestItem"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"additionalData"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"eventCode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"AUTHORISATION"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"eventDate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2019-06-28T18:03:50+01:00"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"merchantAccountCode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"YOUR_MERCHANT_ACCOUNT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pspReference"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7914073381342284"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"merchantReference"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"YOUR_REFERENCE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"amount"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1130&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"currency"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EUR"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that some fields included in the &lt;strong&gt;NotificationRequestItem&lt;/strong&gt; object depend on the type of event that triggered the notification. For example, notifications triggered by a request to refund will be different than a notification triggered by a chargeback request.&lt;/p&gt;

&lt;p&gt;Next, we need to iterate over the list of notification request items, and process them based on the type of event the notification item is associated with (i.e., its &lt;a href="https://docs.adyen.com/development-resources/webhooks/notifications-api#notificationrequestitem"&gt;eventCode&lt;/a&gt;). As we iterate through the list, however, we’ll also want to verify its HMAC (hash-based message authentication code) signatures. This helps protect the application server from unauthorised notifications, such as any data that may have been modified during transmission. Since our application leverages the &lt;a href="https://github.com/Adyen/adyen-node-api-library"&gt;Adyen Node.js server-side library&lt;/a&gt; to interact with Adyen’s API, we can conveniently import and instantiate the built-in HMAC validator class to do just that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;hmacValidator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[@adyen/api-library](http://twitter.com/adyen/api-library)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;hmacValidator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we’ll begin processing each notification request item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notificationRequestItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notificationItems&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;notificationRequestItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateHMAC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NotificationRequestItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ADYEN_HMAC_KEY&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NotificationRequestItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Your business logic here (i.e., process the notification based on the eventCode)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Non-valid NotificationRequest&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Non-valid NotificationRequest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we iterate through the list of notification request items, we use our instance of the HMAC validator to validate each notification request item, passing in the object itself, as well as our HMAC key (referenced above in an environment variable). This secret key enables HMAC-signed notifications, and we’ll generate it shortly in the next steps of this blog.&lt;/p&gt;

&lt;p&gt;If the notification request item is valid, we run some business logic based on the event code. For example, the notification may detail a successful payment, or inform you that a new report (for accounting purposes) is available. Your application can then take any action it needs to based on this new information.&lt;/p&gt;

&lt;p&gt;All together, our endpoint should look something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/webhook/notifications&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[accepted]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;hmacValidator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;notificationRequestItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;notificationItems&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Be sure to store your notifications in a database (not shown here)&lt;/span&gt;

    &lt;span class="nx"&gt;notificationRequestItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;validateHMAC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NotificationRequestItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ADYEN_HMAC_KEY&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NotificationRequestItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventCode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Your business logic here (i.e., process the notification based on the eventCode)&lt;/span&gt;
        &lt;span class="c1"&gt;// An example for a payment notification:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eventCode&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AUTHORISATION&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// This notification is for a payment.&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NotificationRequestItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Payment was successful!&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Payment was refused! :(&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Non-valid NotificationRequest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Error: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, error code: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errorCode&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, our server endpoint has been exposed and configured. The issue however, is that our application is currently being served on localhost. To set up the webhook, we’ll need a public URL to the application. This is where we leverage the ngrok tool, which helps us tunnel (i.e., forward) to our local application from a publicly-accessible URL.&lt;/p&gt;

&lt;p&gt;Follow the instructions to install ngrok and connect your account, then run ngrok from the command line on port 8080:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./ngrok http 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything’s running correctly, you should see something like this output in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nt"&gt;--&lt;/span&gt; Terminal output:

ngrok by &lt;span class="o"&gt;[&lt;/span&gt;@inconshreveable]&lt;span class="o"&gt;(&lt;/span&gt;http://twitter.com/inconshreveable&lt;span class="o"&gt;)&lt;/span&gt;                              &lt;span class="o"&gt;(&lt;/span&gt;Ctrl+C to quit&lt;span class="o"&gt;)&lt;/span&gt;
Session Status     online
Account            Sample User &lt;span class="o"&gt;(&lt;/span&gt;Plan: Free&lt;span class="o"&gt;)&lt;/span&gt;
Version            2.3.35
Region             United States &lt;span class="o"&gt;(&lt;/span&gt;us&lt;span class="o"&gt;)&lt;/span&gt;
Web Interface      &lt;span class="o"&gt;[&lt;/span&gt;http://127.0.0.1:4040]&lt;span class="o"&gt;(&lt;/span&gt;http://127.0.0.1:4040&lt;span class="o"&gt;)&lt;/span&gt;
Forwarding         &lt;span class="o"&gt;[&lt;/span&gt;http://08a73a49c263.ngrok.io]&lt;span class="o"&gt;(&lt;/span&gt;http://08a73a49c263.ngrok.io&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;http://localhost:8080]&lt;span class="o"&gt;(&lt;/span&gt;http://localhost:8080&lt;span class="o"&gt;)&lt;/span&gt;
Forwarding         &lt;span class="o"&gt;[&lt;/span&gt;https://08a73a49c263.ngrok.io]&lt;span class="o"&gt;(&lt;/span&gt;https://08a73a49c263.ngrok.io&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;http://localhost:8080]&lt;span class="o"&gt;(&lt;/span&gt;http://localhost:8080&lt;span class="o"&gt;)&lt;/span&gt;
Connections        ttl   opn   rt1   rt5   p50   p90
                    0     0     0.00  0.00  0.00  0.00

&lt;span class="nt"&gt;--&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the public URL as referenced by “Forwarding” in the output. We’ll use this value as we head into the Adyen Customer Area for webhook configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-notifications-in-customer-area"&gt;
  &lt;/a&gt;
  Setting up notifications in Customer Area
&lt;/h2&gt;

&lt;p&gt;The next step is to provide your server’s details, as well as customize the information you want to receive in notifications. To get started, first log in to &lt;a href="https://ca-test.adyen.com/"&gt;Customer Area&lt;/a&gt;. On the top right, navigate to &lt;strong&gt;Account&lt;/strong&gt; &amp;gt; &lt;strong&gt;Server&lt;/strong&gt; &lt;strong&gt;communication&lt;/strong&gt;. Then, next to &lt;strong&gt;Standard&lt;/strong&gt; &lt;strong&gt;Notification&lt;/strong&gt;, click &lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Under &lt;strong&gt;Transport&lt;/strong&gt;, supply the following information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;URL&lt;/strong&gt;: Your server’s public URL. This is the “Forwarding” value in the ngrok terminal output above.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SSL&lt;/strong&gt;: For a test environment, use NO_SSL (HTTP, TEST only)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Method&lt;/strong&gt;: JSON&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Active&lt;/strong&gt;: ✓&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XeoUJTO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Ajs2LxCDv49h6Fnji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XeoUJTO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Ajs2LxCDv49h6Fnji.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, under &lt;strong&gt;Additional Settings&lt;/strong&gt;, select the information you want to receive in notifications. For example, adding the acquirer result allows you to receive standardized mapping of the acquirer results for AVS and CVC checks. For more information on shopper and transaction information, check out &lt;a href="https://docs.adyen.com/development-resources/webhooks/additional-settings"&gt;Additional settings&lt;/a&gt; in our documentation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzs70nsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2014/0%2AUz5zKPink3K9UMJr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzs70nsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2014/0%2AUz5zKPink3K9UMJr.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final step is to select &lt;strong&gt;Generate new HMAC key&lt;/strong&gt;. This allows you to receive HMAC-signed notifications, which will &lt;a href="https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures"&gt;verify the integrity of notifications&lt;/a&gt; using these HMAC signatures. After generating the HMAC key, assign its value to an environment variable (i.e., &lt;strong&gt;process.env.ADYEN_HMAC_KEY&lt;/strong&gt; as referenced in the above server code).&lt;/p&gt;

&lt;p&gt;At this point, the server and server communication settings have been fully set. Before we jump into testing, be sure to select &lt;strong&gt;Save&lt;/strong&gt; &lt;strong&gt;Configuration&lt;/strong&gt; at the bottom of the page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-the-webhook"&gt;
  &lt;/a&gt;
  Testing the webhook
&lt;/h3&gt;

&lt;p&gt;To make sure that we can receive notifications, we’ll first need to test them. While still on the current server settings page, scroll to the bottom and toggle which notifications you want to test. Then, select &lt;strong&gt;Test&lt;/strong&gt; &lt;strong&gt;Configuration&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If everything was set up correctly, you should see something like the following at the top of the page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f97Igv_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2482/0%2A5UYdAl6O6LEbXp51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f97Igv_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2482/0%2A5UYdAl6O6LEbXp51.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, it’s a wrap! Feel free to further configure your server communication, and continue to apply any business logic in your server code as you see fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Getting started&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Implementing Adyen notification webhooks is crucial for a successful integration with Adyen. To get started, feel free to check out the quick start in &lt;a href="https://docs.adyen.com/development-resources/webhooks"&gt;documentation&lt;/a&gt;. To see everything in action, first make sure you have the proper keys and credentials from a &lt;a href="https://www.adyen.com/signup"&gt;test account&lt;/a&gt;, then clone one of our &lt;a href="https://github.com/adyen-examples"&gt;example integrations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, you are always welcome to &lt;a href="https://www.adyen.help/hc/en-us/community/topics"&gt;visit our forum&lt;/a&gt; or &lt;a href="http://mailto:developer-experience@adyen.com/"&gt;reach out directly&lt;/a&gt; if you have any comments or feedback along the way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-careers-at-adyen"&gt;
  &lt;/a&gt;
  Technical careers at Adyen
&lt;/h2&gt;

&lt;p&gt;We are on the lookout for talented engineers and technical people to help us build the infrastructure of global commerce!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/careers/vacancies/development"&gt;Check out developer vacancies&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-newsletter"&gt;
  &lt;/a&gt;
  Developer newsletter
&lt;/h2&gt;

&lt;p&gt;Get updated on new blog posts and other developer news.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/newsletter/developers"&gt;Subscribe now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://www.adyen.com/blog/Integrating-webhooks-notifications-with-Adyen-Checkout"&gt;https://www.adyen.com&lt;/a&gt; on March 29, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A Deep Dive Into Machine Learning</title>
      <author>Olayinka Atobiloye</author>
      <pubDate>Mon, 03 May 2021 09:18:40 +0000</pubDate>
      <link>https://dev.to/olayinkaatobiloye/a-deep-dive-into-machine-learning-2c94</link>
      <guid>https://dev.to/olayinkaatobiloye/a-deep-dive-into-machine-learning-2c94</guid>
      <description>&lt;p&gt;Machine learning is one of the latest buzzwords in tech. This field has experienced an uprising in the past few years. The role of a machine learning engineer ascertains you a level of job security, as machine learning is one of the highest paying jobs in recent times.&lt;/p&gt;

&lt;p&gt;With the promising future of this tech discipline, it is not surprising that several people have grown interest in the field. I believe that you, reading this are one of such people.&lt;/p&gt;

&lt;p&gt;Starting to learn machine learning, especially when you are not well-grounded in what it entails, can be daunting. This article will cover the nitty-gritty of machine learning needed to give you the necessary knowledge and confidence to start machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-machine-learning"&gt;
  &lt;/a&gt;
  What Is Machine Learning?
&lt;/h2&gt;

&lt;p&gt;Machine learning is simply making machines learn patterns from existing data and applying them to new data. It is all about making inferences and predictions from data.&lt;/p&gt;

&lt;p&gt;You can liken machine learning to a child learning to recognize and identify people around him. The child sees the people many times, watches them,  identifies their features, then, when he sees these people again, he uses the knowledge he has accrued from watching these people in identifying who is who.&lt;/p&gt;

&lt;p&gt;And that is the workflow of any machine learning process. We feed data to a machine, the machine studies the data, and discovers patterns in the data. When new and unseen data is fed to the machine, it predicts or makes inferences from the data based on patterns discovered from previous data fed to it.&lt;/p&gt;

&lt;p&gt;This process of feeding data to a machine to enable it to make inferences from future unseen data is called training a model. Machine learning is all about modeling. &lt;/p&gt;

&lt;p&gt;A machine learning model is an algorithm with a clear set of instructions on how our machine is expected to learn from data, what it is expected to predict, and the overall expected methodology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5dYeglPmPC5lL7xYhs/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5dYeglPmPC5lL7xYhs/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-machine-learning"&gt;
  &lt;/a&gt;
  Types Of Machine Learning
&lt;/h2&gt;

&lt;p&gt;Machine learning problems can be categorized into three distinct types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supervised Learning&lt;/li&gt;
&lt;li&gt;Unsupervised Learning&lt;/li&gt;
&lt;li&gt;Reinforcement Learning&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#supervised-learning"&gt;
  &lt;/a&gt;
  Supervised Learning
&lt;/h2&gt;

&lt;p&gt;As previously discussed, machine learning models are trained on data. The nature of the data determines if the machine learning problem is supervised or unsupervised. In supervised learning, the training data is labeled, and the values of targets are known.&lt;/p&gt;

&lt;p&gt;Supervised learning is when you have your input values with known output values; then, you use an algorithm to derive a function that matches input to output.&lt;/p&gt;

&lt;p&gt;To thoroughly understand the concept of machine learning, think of a teacher teaching a student how to solve a maths problem. The teacher knows and has the answer to the maths problem. The student, on the other hand, is expected to solve and find the answer following a set of instructions. The student iteratively solves the problem and is corrected by the teacher until he derives the correct answer. The student only stops solving the question when he derives the correct answer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3og0IJXQEKwIdIEYpy/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3og0IJXQEKwIdIEYpy/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the process of machine learning. The engineer writes an algorithm with which the machine is expected to derive a relationship between the input and output values. The machine follows the instructions as outlined in the model and does its best to come up with a function that maps the input to the output.&lt;/p&gt;

&lt;p&gt;The engineer can then compare the outputs predicted by the model to the already known output. He checks the accuracy of the model, and if need be, he fine tunes the model to better increase its accuracy. This machine learning process is supervised, as the input and output values are known.&lt;/p&gt;

&lt;p&gt;Supervised learning problems can be further classified into two:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#classification"&gt;
  &lt;/a&gt;
  Classification
&lt;/h3&gt;

&lt;p&gt;Classification is a type of supervised learning problem where the output is a category. The output values of a classification problem are distinct classes, and our output can belong to only one of these classes. Examples of classification problems are spam or no-spam predictions, cat or dog predictions, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#regression"&gt;
  &lt;/a&gt;
  Regression
&lt;/h3&gt;

&lt;p&gt;Regression problem is where the output is a real value and can take on any value within a continuous range. Examples are weight, height, or salary predictions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#unsupervised-learning"&gt;
  &lt;/a&gt;
  Unsupervised Learning
&lt;/h2&gt;

&lt;p&gt;Unsupervised learning is when there are inputs but no output in the training data. In unsupervised learning, there are no correct answers or teachers. &lt;br&gt;
The model will study the distribution of the data and derive insights into the underlying structure and presentation of the data. &lt;br&gt;
Unsupervised learning can further be grouped into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clustering&lt;/li&gt;
&lt;li&gt;Anomaly detection&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#reinforcement-learning"&gt;
  &lt;/a&gt;
  Reinforcement Learning
&lt;/h2&gt;

&lt;p&gt;Reinforcement learning is a branch of machine learning concerned with making machines make decisions. Reinforcement learning employs a trial-and-error approach in deciding the best strategy or decision to make. An example of a reinforcement learning problem is a model for playing chess games.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-machine-learning-workflow"&gt;
  &lt;/a&gt;
  The Machine Learning Workflow
&lt;/h2&gt;

&lt;p&gt;To solve any machine learning problem, here is the basic workflow:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9hmkrIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xslyi44uwvymnx7wbs8e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9hmkrIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xslyi44uwvymnx7wbs8e.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Gather datasets&lt;/li&gt;
&lt;li&gt;Extract features&lt;/li&gt;
&lt;li&gt;Split the dataset into training and testing sets.&lt;/li&gt;
&lt;li&gt;Train the model on the training set&lt;/li&gt;
&lt;li&gt;Evaluate the model on the testing set&lt;/li&gt;
&lt;li&gt;Fine-tune the model&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Machine learning is all about modeling. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;To further learn about machine learning, here are some helpful resources:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://machinelearningmastery.com/supervised-and-unsupervised-machine-learning-algorithms/"&gt;Supervised and Unsupervised Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/what-is-reinforcement-learning/"&gt;Reinforcement Learning&lt;/a&gt; &lt;br&gt;
&lt;a href="https://deepsense.ai/what-is-reinforcement-learning-the-complete-guide/"&gt;Reinforcement Learning; the Complete Guide &lt;/a&gt;&lt;br&gt;
&lt;a href="https://towardsdatascience.com/workflow-of-a-machine-learning-project-ec1dba419b94"&gt;Machine Learning Project Workflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy modeling!🎉&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>SvelteKit Sitemap</title>
      <author>Richard Beattie</author>
      <pubDate>Mon, 03 May 2021 09:13:09 +0000</pubDate>
      <link>https://dev.to/rbt/sveltekit-sitemap-b00</link>
      <guid>https://dev.to/rbt/sveltekit-sitemap-b00</guid>
      <description>&lt;p&gt;&lt;a href="https://kit.svelte.dev/"&gt;SvelteKit&lt;/a&gt; came out in public beta a little over a month ago and I've finally gotten around to trying it out. I'll write up my thoughts elsewhere but I've moved &lt;a href="http://r-bt.com"&gt;r-bt.com&lt;/a&gt; over to SvelteKit and replaced my Notion CMS with markdown. The reason being I want to be able to use custom components. Anyway, one problem I had was creating a sitemap.xml for my static build. SvelteKit dosn't support creating sitemaps automatically although it might in the &lt;a href="https://github.com/sveltejs/kit/issues/1142"&gt;future&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instead I made a post build step. Some notes about this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I'm using Node v14 if you use an earlier version you might need to change &lt;code&gt;import&lt;/code&gt; to &lt;code&gt;require&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;I use &lt;code&gt;@sveltejs/adapter-static&lt;/code&gt; to build a static site which is stored in &lt;code&gt;/build&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-script"&gt;
  &lt;/a&gt;
  The Script
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Install the dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;glob&lt;/span&gt; &lt;span class="nx"&gt;xmlbuilder2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Create a new file &lt;code&gt;generate-sitemap.xml&lt;/code&gt; and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fast-glob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xmlbuilder2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;pkg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./package.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trimmed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;trimmed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createSitemap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;urlset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://www.sitemaps.org/schemas/sitemap/0.9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/**/*.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;changefreq&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;xml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;prettyPrint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/sitemap.xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;createSitemap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Update your package.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;url:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://your-url.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;scripts:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"postbuild"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node --experimental-json-modules ./generate-sitemap.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-explaination"&gt;
  &lt;/a&gt;
  The Explaination
&lt;/h3&gt;

&lt;p&gt;To make the sitemap we're going to build the site, &lt;code&gt;glob&lt;/code&gt; all the &lt;code&gt;.html&lt;/code&gt; files, and write the xml back to the &lt;code&gt;/build&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Before starting install the dependecies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="nx"&gt;fast&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;glob&lt;/span&gt; &lt;span class="nx"&gt;xmlbuilder2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a new file &lt;code&gt;generate-sitemap.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First, let's get the files we need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fast-glob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createSitemap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/**/*.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run this you should get an array with the paths of all your pages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/blog/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/about/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/learning/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll use &lt;code&gt;xmlbuilder&lt;/code&gt; to create the xml objects&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xmlbuilder2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;urlset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://www.sitemaps.org/schemas/sitemap/0.9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and we just loop through the pages adding each as a &lt;code&gt;url&lt;/code&gt; object with a &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;changefrequency&lt;/code&gt; to the sitemap&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;changefreq&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally we turn the sitemap into a &lt;code&gt;string&lt;/code&gt; and write it to a file using &lt;code&gt;fs.writeFileSync&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fast-glob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;xmlbuilder2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createSitemap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;urlset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;xmlns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://www.sitemaps.org/schemas/sitemap/0.9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fg&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/**/*.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;changefreq&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weekly&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;xml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;prettyPrint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;build/sitemap.xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;createSitemap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Except&lt;/strong&gt; we have a problem. If you run this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and go to &lt;strong&gt;build/sitemap.xml&lt;/strong&gt; you'll see that the locs are something that looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;build/learning/why-is-it-so-hard-to-find-a-domain/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;while we want it to be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://r-bt.com/learning/why-is-it-so-hard-to-find-a-domain/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fix this go to your &lt;code&gt;package.json&lt;/code&gt; and add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://your-url.com"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in &lt;code&gt;generate-sitemap.js&lt;/code&gt; we'll import &lt;code&gt;package.json&lt;/code&gt; and append the url to the pages paths. We'll also remove the first 5 characters &lt;em&gt;&lt;strong&gt;build/&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;pkg&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./package.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;trimmed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;trimmed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Node.js dosn't yet importing .json files so need to run this script with the&lt;br&gt;
&lt;code&gt;--experimental-json-modules&lt;/code&gt; flag&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;--experimental-json-modules&lt;/span&gt; ./generate-sitemap.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you're sitemap should be generated and valid 🎉&lt;/p&gt;

&lt;p&gt;To get it to run whenever you build the site go back to &lt;code&gt;package.json&lt;/code&gt; and in &lt;code&gt;scripts&lt;/code&gt; add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;scripts:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"postbuild"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node --experimental-json-modules ./generate-sitemap.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>svelte</category>
      <category>sveltekit</category>
      <category>sitemap</category>
      <category>node</category>
    </item>
  </channel>
</rss>
