<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating your own bind() (Polyfill of bind)</title>
      <author>Uddesh</author>
      <pubDate>Sun, 30 May 2021 06:48:50 +0000</pubDate>
      <link>https://dev.to/uddeshjain/creating-your-own-bind-polyfill-of-bind-433j</link>
      <guid>https://dev.to/uddeshjain/creating-your-own-bind-polyfill-of-bind-433j</guid>
      <description>&lt;p&gt;So, what is polyfill?&lt;/p&gt;

&lt;p&gt;Polyfill is a fallback for a method that is not supported by the browser by default. You can find browser support for any function or method on the &lt;code&gt;mdn&lt;/code&gt; website.&lt;/p&gt;

&lt;p&gt;Now, what is &lt;code&gt;bind()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;According to &lt;code&gt;mdn&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;bind()&lt;/code&gt; method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This definition sounds really fancy, but what does that mean?&lt;/p&gt;

&lt;p&gt;In simple words,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;bind()&lt;/code&gt; takes an object as an argument and returns a new function whose &lt;code&gt;this&lt;/code&gt; refers to the object we passed as an argument.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, we got the idea about &lt;code&gt;polyfill&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt;. So, let's try to implement it.&lt;/p&gt;

&lt;p&gt;1). let's create an object that we are going to use as a call site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2). Create a &lt;code&gt;function&lt;/code&gt; that we need to bind with the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you call this function now, It will print &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3). Add your bind() to the function prototype.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Putting it all together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the basic implementation of &lt;code&gt;bind()&lt;/code&gt;, But it has few edge cases. Let's say you want to pass some arguments in &lt;code&gt;myBind()&lt;/code&gt;. How will you do that? Currently, we are not accepting arguments other than the object itself. Let's implement this functionality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack, undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are trying to pass &lt;code&gt;id&lt;/code&gt; in &lt;code&gt;myBind&lt;/code&gt; but not able to access it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we solved an edge case. However, there is one more improvement we can make. What if we want to pass arguments to &lt;code&gt;newFunc()&lt;/code&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id, undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are passing 'New York' but not able to access it inside &lt;code&gt;myFunc&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Accepting arguments passed to newFunc&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;newArgs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newArgs&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id, New York&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I think we have covered almost all the cases. But, still, if there is anything left, Let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Time to celebrate. You have implemented your own &lt;code&gt;bind()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I hope this will be helpful for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6ZtcOxQ9vi8vb9Cg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6ZtcOxQ9vi8vb9Cg/giphy.gif" alt="Bye"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Master ‘this’ in JavaScript</title>
      <author>Somnath Singh</author>
      <pubDate>Sun, 30 May 2021 06:21:19 +0000</pubDate>
      <link>https://dev.to/polymathsomnath/master-this-in-javascript-1bk</link>
      <guid>https://dev.to/polymathsomnath/master-this-in-javascript-1bk</guid>
      <description>&lt;p&gt;In this article, we cover the all-important yet so confusing topic in JavaScript which is the “&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;” keyword.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;If “&lt;em&gt;this&lt;/em&gt;” scares you, do not worry! We will learn how to determine the value of the “&lt;em&gt;this&lt;/em&gt;” keyword using five simple rules.&lt;/p&gt;

&lt;p&gt;Those five simple rules are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;em&gt;The Regular One —&lt;/em&gt; &lt;strong&gt;Default binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Function Inside an Object&lt;/em&gt; — &lt;strong&gt;Implicit binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Function Borrowing&lt;/em&gt; — &lt;strong&gt;Explicit binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Using Function to Create Objects&lt;/em&gt; — &lt;strong&gt;New binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;How Arrow Function Differs from the Regular Ones—&lt;/em&gt; &lt;strong&gt;Lexical binding&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don’t worry about these scary names. Computer Science people have a fancy for naming terms so that they sound extra-terrestrial. Under the hood, they are just common concepts that any willing human can understand.&lt;/p&gt;

&lt;p&gt;The “&lt;em&gt;this”&lt;/em&gt; variable corresponds to how you invoke a function. These rules help us to determine the value of &lt;em&gt;this&lt;/em&gt; in various scenarios.&lt;/p&gt;

&lt;p&gt;Once you understand these rules, then you would not fear them anymore.&lt;/p&gt;

&lt;p&gt;Before we begin, &lt;a href="https://javascript.plainenglish.io/why-do-developers-fear-this-fb7497f95570?sk=7c1a7d83bd97af7ce9a9cd97fc8abda2"&gt;please go through this article&lt;/a&gt; to understand how &lt;em&gt;this&lt;/em&gt; works.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-this-in-brief"&gt;
  &lt;/a&gt;
  What is “this” in brief
&lt;/h1&gt;

&lt;p&gt;In JavaScript, whenever a function is called, a new execution context is created by the JavaScript engine. That execution context exists until the function has finished executing. Every execution context contains a variable called ‘this’.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-1-default-binding"&gt;
  &lt;/a&gt;
  #Rule 1. Default binding
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G19seZhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2386/0%2Axc7asnogg5WscyrC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G19seZhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2386/0%2Axc7asnogg5WscyrC.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When calling a function in a standard way shown above, “&lt;em&gt;this&lt;/em&gt;” will actually refer to the global object!&lt;/p&gt;

&lt;p&gt;In the browser, the global object means the Window object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1yGSx6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1838/0%2ABkSOWChHCrsTt2V5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1yGSx6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1838/0%2ABkSOWChHCrsTt2V5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One exception to remember — that is when strict mode is enabled. By writing “use-strict” you can prevent anything from being declared on the global object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpOEWF26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2160/0%2AMDVIyQlMzbnDv4Kf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpOEWF26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2160/0%2AMDVIyQlMzbnDv4Kf.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-2-implicit-binding"&gt;
  &lt;/a&gt;
  #Rule 2. &lt;strong&gt;Implicit binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;If the function is contained within an object, then that object will be referenced by “this”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp4g8-lF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3296/1%2AOKrRTgSIiLQ5dJRIyTk-Qg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp4g8-lF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3296/1%2AOKrRTgSIiLQ5dJRIyTk-Qg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the above, the &lt;code&gt;this&lt;/code&gt; keyword will point to the &lt;code&gt;personObj&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-3-explicit-binding"&gt;
  &lt;/a&gt;
  #Rule 3. &lt;strong&gt;Explicit binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;We saw how &lt;code&gt;this&lt;/code&gt; points to the global object and in another case, it points to the object which contains it. Wouldn’t it be nice to able to control what this variable ends up being when the function is called?&lt;/p&gt;

&lt;p&gt;Words like &lt;em&gt;call&lt;/em&gt;, &lt;em&gt;apply&lt;/em&gt;, and &lt;em&gt;bind&lt;/em&gt; usually causes terror in new developers. In reality, they are all functions that can be used to &lt;em&gt;explicitly&lt;/em&gt; set the value of “this”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-us-understand-it-with-an-example"&gt;
  &lt;/a&gt;
  Let us understand it with an example.
&lt;/h2&gt;

&lt;p&gt;Suppose we have two objects, let us say &lt;code&gt;personObj&lt;/code&gt; and &lt;code&gt;readerObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6s2uMYiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2456/1%2At1FOex7gNulGnwVEb6Mf6w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6s2uMYiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2456/1%2At1FOex7gNulGnwVEb6Mf6w.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both the object has a name property. The &lt;code&gt;personObj&lt;/code&gt; has a function that can print the value inside the &lt;code&gt;name&lt;/code&gt; but, the &lt;code&gt;readerObj&lt;/code&gt; does not have any such feature!&lt;/p&gt;

&lt;p&gt;Here we can make use of one of the three methods — &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;bind&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This process is called function borrowing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2RbhlcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1966/1%2ADi_MsxdvDTqd0DkEBr3YfQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2RbhlcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1966/1%2ADi_MsxdvDTqd0DkEBr3YfQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We borrowed the &lt;code&gt;sayName&lt;/code&gt; method for the &lt;code&gt;readerObj.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we can print the name property that is in &lt;code&gt;readerObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MtkIlTao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2466/1%2AkmRaS-zUJgG_QkrCS-FUIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MtkIlTao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2466/1%2AkmRaS-zUJgG_QkrCS-FUIQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are calling the &lt;code&gt;sayName&lt;/code&gt; method from &lt;code&gt;personObj&lt;/code&gt;, but at the same time, we are instructing the JavaScript engine that the ‘this’ variable in the &lt;code&gt;sayName&lt;/code&gt; method should point to &lt;code&gt;readerObj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So when the JavaScript engine executes the code, the &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; variable in the &lt;code&gt;sayName&lt;/code&gt; function does not point to the &lt;code&gt;personObj&lt;/code&gt; but it points to the &lt;code&gt;readerObj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Does that make sense?&lt;/p&gt;

&lt;p&gt;Not just that — we can also pass some arguments when we use the &lt;code&gt;call&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpfz3sig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1860/1%2ApQtSBG6fv5pp_L_lfpNKmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpfz3sig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1860/1%2ApQtSBG6fv5pp_L_lfpNKmg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We passed Namaste as an argument&lt;/p&gt;

&lt;p&gt;We can make use of the argument in the &lt;code&gt;sayName&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nUObTtXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1260/1%2AURmM8Vf09inNezYtA2TvMA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nUObTtXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1260/1%2AURmM8Vf09inNezYtA2TvMA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we execute the code, we will get the output along with the passed argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x0NF0gEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2956/1%2ARcaHst9aMECBaFntGO_9nA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x0NF0gEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2956/1%2ARcaHst9aMECBaFntGO_9nA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The apply method works the same way, but instead of regular arguments, it takes an array as an argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qd-bzOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3416/1%2AolLUIkdy373Jhrw3-i3mwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qd-bzOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3416/1%2AolLUIkdy373Jhrw3-i3mwg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ccifByb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2628/1%2AD2IhX_eA_J2F-29dnExflQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ccifByb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2628/1%2AD2IhX_eA_J2F-29dnExflQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bind method also works the same way — it can accept a regular argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WWvxxhnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2328/1%2AVvootgY_bLF7xy7k_mKcGg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWvxxhnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2328/1%2AVvootgY_bLF7xy7k_mKcGg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But unlike &lt;em&gt;call&lt;/em&gt;  and &lt;em&gt;apply —&lt;/em&gt; &lt;strong&gt;&lt;em&gt;bind&lt;/em&gt;&lt;/strong&gt; returns a function — that function can be stored in a variable and can be executed in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W6a-zREi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3350/1%2AB7USlXrakqraX9w7ntLtwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6a-zREi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3350/1%2AB7USlXrakqraX9w7ntLtwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hleJcp_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2604/1%2A5kvl7us01wuPUlEpn-KJ3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hleJcp_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2604/1%2A5kvl7us01wuPUlEpn-KJ3g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One can see the use of bind in function currying — a topic that we will cover in the future.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-4-new-binding"&gt;
  &lt;/a&gt;
  #Rule &lt;strong&gt;4. New binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;We use the &lt;strong&gt;&lt;em&gt;new&lt;/em&gt;&lt;/strong&gt; keyword to create an instance or copy of an object. What the &lt;strong&gt;new&lt;/strong&gt; keyword does is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It creates an &lt;strong&gt;empty object&lt;/strong&gt; and then instructs the keyword &lt;strong&gt;this&lt;/strong&gt; to point to that empty object.&lt;/li&gt;
&lt;li&gt;  It then adds a &lt;code&gt;return this&lt;/code&gt; statement to the end of that function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember, when an instance of an object gets created using the &lt;em&gt;new&lt;/em&gt; keyword, “&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;” always points to that newly created instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-us-understand-this-with-an-example"&gt;
  &lt;/a&gt;
  Let us understand this with an example.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nKsDJPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1702/1%2ArdIo3Y77Y054oibfUKFLXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nKsDJPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1702/1%2ArdIo3Y77Y054oibfUKFLXg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we run this code, what are we supposed to get?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svI0ZJXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1960/1%2A-0ealF7SmoQwwUbFX3CsGA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svI0ZJXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1960/1%2A-0ealF7SmoQwwUbFX3CsGA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we said — an empty object!&lt;/p&gt;

&lt;p&gt;What is happening under the hood is&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k8Mp6iTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2AMjlTUBtzshIO2lToU4b_zQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k8Mp6iTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2AMjlTUBtzshIO2lToU4b_zQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What? Are we invoking the function?&lt;/p&gt;

&lt;p&gt;Yes!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G2c-Tc-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2556/1%2A7jkc1tuK7hNbx25EVcxvLQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2c-Tc-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2556/1%2A7jkc1tuK7hNbx25EVcxvLQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See, I told you it is getting invoked.&lt;/p&gt;

&lt;p&gt;Let us look at the whole thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpgZUpz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2ADw9PlvHl5SXw94wwiFZFTg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpgZUpz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2ADw9PlvHl5SXw94wwiFZFTg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we put some value in the function, it will put that in the newly created object and then return it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDIYH3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1864/1%2AByTa5ihFcU6xzningnM3eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDIYH3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1864/1%2AByTa5ihFcU6xzningnM3eg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we &lt;code&gt;console.log(newPersonObj)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqjqDm23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1768/1%2AYeOXSqQdt8Zi8qJmpbQFRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqjqDm23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1768/1%2AYeOXSqQdt8Zi8qJmpbQFRg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us finish this concept with an animation.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;dev.to&lt;/code&gt; supports animation of 500 frames only, I am attaching  an external link to the animation&lt;br&gt;
&lt;a href="https://miro.medium.com/max/1210/1*0wJYjMQ9uwVEYzBj89oL4A.gif"&gt;Go here for the animation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example, we are using a function to create an object.&lt;/p&gt;

&lt;p&gt;This type of function is known as a function constructor.&lt;/p&gt;

&lt;p&gt;Remember, in the &lt;code&gt;newPersonObj&lt;/code&gt;, which stores the copy of &lt;code&gt;personObj&lt;/code&gt;— the “this" variable points to empty &lt;code&gt;personObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Does it make sense now?&lt;/p&gt;

&lt;p&gt;Good! Let us now understand the last rule.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-5-lexical-binding"&gt;
  &lt;/a&gt;
  #Rule &lt;strong&gt;5. Lexical binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With the advent of ES6 — we got arrow functions. Arrow functions with their ultra-lean syntax are a natural replacement for their traditional anonymous counterparts.&lt;/p&gt;

&lt;p&gt;To explicitly invoke an arrow function, as with a regular anonymous function, you would assign it to a variable first:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0LeqN0lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2598/1%2AMEaHjDB5yTXm_T6tDO_HwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0LeqN0lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2598/1%2AMEaHjDB5yTXm_T6tDO_HwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arrow functions are just like regular anonymous functions, with one major exception- the behavior of this object inside the function.&lt;/p&gt;

&lt;p&gt;In a regular function, the value of "&lt;code&gt;this&lt;/code&gt;" is context-based- call the function inside a link, and "&lt;code&gt;this&lt;/code&gt;" points to the link's object; call it inside one more function like &lt;code&gt;setInterval()&lt;/code&gt;, then "&lt;code&gt;this&lt;/code&gt;" points to the global window object.&lt;/p&gt;

&lt;p&gt;For example, the following example attempts to call the &lt;code&gt;start()&lt;/code&gt; method of a custom object to increment its counter property by 1 every second, though it fails due to an incorrect assumption of the "&lt;code&gt;this&lt;/code&gt;" object reference counter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9lIKoBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2976/1%2AhoYm0GaVU-9eIG431Vs1wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lIKoBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2976/1%2AhoYm0GaVU-9eIG431Vs1wg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0lNOE56t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1552/1%2AJJvXhLyOOGZfSstSj2sS4A.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0lNOE56t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1552/1%2AJJvXhLyOOGZfSstSj2sS4A.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above, &lt;code&gt;this.counter&lt;/code&gt; fails to properly reference the counter property of the &lt;code&gt;countup&lt;/code&gt; object, though the error may not be so obvious to spot. One can either mistakenly or carelessly assume that "&lt;code&gt;this&lt;/code&gt;" points to the &lt;code&gt;countup&lt;/code&gt; object, when in fact it points to the global &lt;code&gt;window&lt;/code&gt; object due to the context "&lt;code&gt;this&lt;/code&gt;" is being called- inside the global window method &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The result is a reference to a non-existent &lt;code&gt;window.counter&lt;/code&gt; property that will repeatedly return &lt;code&gt;NaN&lt;/code&gt; when we try to increment it. To properly reference the &lt;code&gt;countup&lt;/code&gt; object then inside the anonymous function, we should cache a reference to the correct "&lt;code&gt;this&lt;/code&gt;" object before the context changes to a different one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frdK0bEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2692/1%2A_ecuxy27FcjFnlfPRKVZLg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frdK0bEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2692/1%2A_ecuxy27FcjFnlfPRKVZLg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The "&lt;code&gt;this&lt;/code&gt;" object inside an arrow function is lexically bound, which is just a fancy way of saying its value is static and determined by the place where the “&lt;code&gt;this&lt;/code&gt;" keyword is defined.&lt;/p&gt;

&lt;p&gt;Contrast that with regular functions, where "&lt;code&gt;this&lt;/code&gt;" is dynamic and based on the context it's called regardless of the scope at the time "&lt;code&gt;this&lt;/code&gt;" was defined.&lt;/p&gt;

&lt;p&gt;Let’s take the previous example that gave us trouble initially, and see how changing over to using an arrow function intuitively addresses the problem:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PMwuGKPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2804/1%2ARxgs1sNx3TXP7cvNe-PsoA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMwuGKPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2804/1%2ARxgs1sNx3TXP7cvNe-PsoA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We solved the problem by just using an arrow function.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you understood all the rules, then pat yourself on the back — you deserve it! Now you are no more someone who is afraid of JavaScript’s most confusing concept — the "&lt;em&gt;this&lt;/em&gt;" keyword.&lt;/p&gt;

&lt;p&gt;In this article we learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  When calling a &lt;strong&gt;&lt;em&gt;function&lt;/em&gt;&lt;/strong&gt; in a standard way shown above, “&lt;em&gt;this&lt;/em&gt;” will actually refer to the global object!&lt;/li&gt;
&lt;li&gt;  If the function is contained within an &lt;strong&gt;&lt;em&gt;object,&lt;/em&gt;&lt;/strong&gt; then “&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;” will point to that object.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;&lt;em&gt;call&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;bind&lt;/em&gt;&lt;/strong&gt; are functions that are available to us by JavaScript to alter the behaviour of “&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;” in our program.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;&lt;em&gt;new&lt;/em&gt;&lt;/strong&gt; keyword or operator when used makes an empty object, then instructs “&lt;strong&gt;&lt;em&gt;this”&lt;/em&gt;&lt;/strong&gt; to point to that newly created object&lt;/li&gt;
&lt;li&gt;  Arrow function enables us to lexically bind the “&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;” keyword in the program, what this means is its value is static and determined by the place where the “&lt;code&gt;this&lt;/code&gt;" keyword is defined.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#note-of-gratitude"&gt;
  &lt;/a&gt;
  Note of Gratitude
&lt;/h1&gt;

&lt;p&gt;I wanted to take this last opportunity to say thank you.&lt;/p&gt;

&lt;p&gt;Thank you for being here! I would not be able to do what I do without  people like you  who follow along and take that leap of faith to read my post.&lt;/p&gt;

&lt;p&gt;I hope you’ll &lt;a href="https://twitter.com/tweetsbysoma"&gt;&lt;strong&gt;join me&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://dev.to/polymathsomnath"&gt;&lt;strong&gt;my future blog post&lt;/strong&gt;&lt;/a&gt; and stick around because I think we have something great here. And I hope that I will be able to help you along in your career for many more years to come!&lt;/p&gt;

&lt;p&gt;See you next time. Bye!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to change font is VS Code</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Sun, 30 May 2021 06:00:23 +0000</pubDate>
      <link>https://dev.to/amritanshu/how-to-change-font-is-vs-code-4alp</link>
      <guid>https://dev.to/amritanshu/how-to-change-font-is-vs-code-4alp</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
Search for the font you want or go to  &lt;a href="https://fonts.google.com/"&gt;Google fonts&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbK_QQlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350695833/fW-UlMuMH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbK_QQlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350695833/fW-UlMuMH.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
I want Noto Sans JP font. So, I searched for it and clicked on the first one.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8wkKKSAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350825497/RTfjxN1G8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8wkKKSAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350825497/RTfjxN1G8.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click on Download family on the top right&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCXrBTQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350880508/8VTe7LMyI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCXrBTQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350880508/8VTe7LMyI.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Extract the downloaded file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Js-c-NQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350978121/WsLfHzpHO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Js-c-NQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350978121/WsLfHzpHO.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Either your fonts are inside Folder -&amp;gt; fonts -&amp;gt; ttf or Directly inside the Folder&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here, the fonts are directly inside the Folder, select the file with type OpenType font file&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PVcX_rKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351110611/HirE03pcg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVcX_rKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351110611/HirE03pcg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Search Control panel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8br4wP8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351170539/s9BvKNuo-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8br4wP8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351170539/s9BvKNuo-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click on large icons on the top right&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--STRvjDc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351187346/JSU8GadMP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--STRvjDc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351187346/JSU8GadMP.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click On Fonts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwzjxyE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351211014/mclwfuhrJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwzjxyE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351211014/mclwfuhrJ.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
This type of page will open up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SqOakb-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351232676/TgvCYju-O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqOakb-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351232676/TgvCYju-O.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Copy all your fonts from the extracted folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qhSD6ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351259482/DuWb0mhVHR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qhSD6ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351259482/DuWb0mhVHR.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Paste them on the fonts page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---AER-Glz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351304975/xIGn3mXIDo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---AER-Glz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351304975/xIGn3mXIDo.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wUy3p_To--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351335081/oLH22bqs-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wUy3p_To--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351335081/oLH22bqs-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Open VSCode and Go to file -&amp;gt; preferences -&amp;gt; settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ev_BbXyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352058095/99tOJLFqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ev_BbXyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352058095/99tOJLFqt.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search for Font Family&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PA5dXzRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352101161/5u_TdZYJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PA5dXzRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352101161/5u_TdZYJ8.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;My editor before adding font&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42xdvOxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352365856/CbSeONdVy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42xdvOxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352365856/CbSeONdVy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
My Editor after adding font&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ztPXGOyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352390072/m8vIDE93I.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztPXGOyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352390072/m8vIDE93I.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have to add 'Noto Sans JP' or the font you want at the start and then add a comma(,) after it. Save the file Restart the IDE,&lt;br&gt;
If you want to add the font and it doesn't work, ping me on Twitter I will try to help you asap!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/k2Rl4U3qg5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Twitter:
&lt;a href="https://twitter.com/NewGenDeveloper"&gt;https://twitter.com/NewGenDeveloper&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>vscode</category>
      <category>tutorial</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>HTML : Disable resizing of textarea</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sun, 30 May 2021 05:42:13 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/html-disable-resizing-of-textarea-4m6k</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/html-disable-resizing-of-textarea-4m6k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-textarea"&gt;
  &lt;/a&gt;
  What is textarea?
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element is often used in a form, to collect user inputs like comments or reviews.&lt;/p&gt;

&lt;p&gt;A text area can hold an unlimited number of characters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-resize-texarea"&gt;
  &lt;/a&gt;
  How to resize texarea?
&lt;/h1&gt;

&lt;p&gt;You can resize a textarea by clicking on the bottom right corner of the textarea and dragging the mouse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IhpLZYTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jywc6ssurqzvmf2oaswr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IhpLZYTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jywc6ssurqzvmf2oaswr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-disable-resizing-textarea"&gt;
  &lt;/a&gt;
  How to disable resizing textarea?
&lt;/h1&gt;

&lt;p&gt;The following CSS rule disables resizing behavior for textarea elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With above code all of your textareas will be disabled to resize.&lt;/p&gt;

&lt;p&gt;You can use class attribute in your tag -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"textarea1"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.textarea1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To disable a specific textarea with the name attribute set to foo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, using an id attribute -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#foo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This property does nothing unless the overflow property is something other than visible, which is the default for most elements. So generally to use this, you'll have to set something like &lt;code&gt;overflow: scroll&lt;/code&gt;;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;resize has below values that you can use with your text areas - &lt;br&gt;
&lt;code&gt;none:&lt;/code&gt; the element is not resizeable. &lt;br&gt;
&lt;code&gt;both:&lt;/code&gt; the user can resize the element’s height and/or width.&lt;br&gt;
&lt;code&gt;horizontal:&lt;/code&gt; the user can resize the element horizontally (increasing the width).&lt;br&gt;
&lt;code&gt;vertical:&lt;/code&gt; the user can resize the element vertically (increasing the height).&lt;br&gt;
&lt;code&gt;inherit:&lt;/code&gt; the element inherits the resize value of its parent.&lt;/p&gt;

&lt;p&gt;Below is the demo where you can click on the value names and can see the demo of selected value version of textarea -&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/team/css-tricks/embed/QbJqMG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>25+  JavaScript Project With Source Code to Build your Skills</title>
      <author>Neha Soni</author>
      <pubDate>Sun, 30 May 2021 05:01:11 +0000</pubDate>
      <link>https://dev.to/nehasoni__/25-javascript-project-with-source-code-to-build-your-skills-18e7</link>
      <guid>https://dev.to/nehasoni__/25-javascript-project-with-source-code-to-build-your-skills-18e7</guid>
      <description>&lt;p&gt;Hello amazing people,&lt;br&gt;&lt;br&gt;
If you are interested in becoming a web developer then JavaScript is one of the best and essential coding language you can learn, but getting familiar with JavaScript basics means using those skills to build JavaScript projects. So, in this blog post, I will share with you some HTML and Javascript projects with source code that can be used in your personalized Web Development projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-javascript-projects-for-beginners"&gt;
  &lt;/a&gt;
  Best JavaScript Projects for Beginners
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-counter-app"&gt;
  &lt;/a&gt;
  1.) Counter app
&lt;/h3&gt;

&lt;p&gt;This project will give you more practice working with the DOM. Here, the user can add the number of counts and also delete the counts.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) addEventListener()&lt;br&gt;
3.) textContent&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FhrsIP3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423093197/T6Xn5ykds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhrsIP3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423093197/T6Xn5ykds.png" alt="Screenshot (255).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/LeCoding-tech/Counter-app"&gt;Counter App&lt;/a&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-background-color-change-app"&gt;
  &lt;/a&gt;
  2.) Background Color Change App
&lt;/h3&gt;

&lt;p&gt;In this app, the background color of the canvas changes when the user clicks on a button.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) eventListener()&lt;br&gt;
2.) Array&lt;br&gt;
3.) Math.random()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KVAsbGUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423460649/GRFvC3Thu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KVAsbGUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423460649/GRFvC3Thu.png" alt="Screenshot (257).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/color-changing-app"&gt;Background color Changer App&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-calculator"&gt;
  &lt;/a&gt;
  3.) Calculator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to perform the basic functionality(&lt;code&gt;+,-,*,/&lt;/code&gt;) of the calculator.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) document.querySelector()&lt;br&gt;
3.) addEventListener()&lt;br&gt;
4.) Immediately Invoked Function Expressions&lt;br&gt;
5.) textContent&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fwid9fAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621424753025/qXTq33uNI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fwid9fAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621424753025/qXTq33uNI.png" alt="Screenshot (259).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/ayoisaiah/javascript-calculator"&gt;JavaScript Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-image-slider-project"&gt;
  &lt;/a&gt;
  4.) Image Slider Project
&lt;/h3&gt;

&lt;p&gt;The main functionality of this project is that , when an arrow is clicked, the next image in the array shows up.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) Arrays&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) eventListeners&lt;br&gt;
5.) JavaScript CSS Manipulation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4vIk--X7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621425429967/vtG_v4lMr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4vIk--X7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621425429967/vtG_v4lMr.png" alt="Screenshot (261).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/background-image-slider-project"&gt;Image Slider&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-build-a-digital-clock"&gt;
  &lt;/a&gt;
  5.)  Build a Digital Clock
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a digital clock with date(Day, Month, Year).&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) setTimeInterval()&lt;br&gt;
2.) Date()&lt;br&gt;
3.) Arrays&lt;br&gt;
4.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5PCmH2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426587066/lBQv6r4mA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5PCmH2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426587066/lBQv6r4mA.png" alt="Screenshot (265).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Digital_Clock"&gt;Digital Clock&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-build-an-analog-clock"&gt;
  &lt;/a&gt;
  6.)  Build an Analog Clock
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a realtime analog clock using HTML, CSS, and Javascript.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) Date()&lt;br&gt;
3.) setInterval()&lt;br&gt;
4.) rotate()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciuRfj6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621427148049/gWlO-pTSZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciuRfj6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621427148049/gWlO-pTSZ.png" alt="Screenshot (267).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/dgray0229/javascript-analog-clock"&gt;Analog Clock&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-loan-calculator"&gt;
  &lt;/a&gt;
  7.) Loan Calculator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to calculate and displays the results for monthly payment, total payment, and total interest according to loan amount interest rate, and years to repay.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) setInterval()&lt;br&gt;
3.) Math.pow()&lt;br&gt;
4.) toFixed()&lt;br&gt;
5.) parseFloat()&lt;br&gt;
6.) DOM manipulation&lt;br&gt;
7.) JavaScript CSS Manipulation&lt;br&gt;
8.) eventListener()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27zGt2HM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482096751/qP4S_ECju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27zGt2HM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482096751/qP4S_ECju.png" alt="Screenshot (271).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/CBStanley12/js-loan-calculator"&gt;Loan Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-guess-my-number"&gt;
  &lt;/a&gt;
  8.) Guess my number
&lt;/h3&gt;

&lt;p&gt;In this project you have to guess a number, if your PREDICTED NUMBER is equal to the SECRET NUMBER you won!!! ♥&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) Math.random()&lt;br&gt;
3.) eventListeners&lt;br&gt;
4.) textContent&lt;br&gt;
5.) Math.trunc()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHBb4lQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482617486/_R_NooU-r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHBb4lQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482617486/_R_NooU-r.png" alt="Screenshot (273).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/08Gunjan/GUESS-MY-NUMBER"&gt;Guess my number&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-palindrome-checker"&gt;
  &lt;/a&gt;
  9.) Palindrome Checker
&lt;/h3&gt;

&lt;p&gt;A palindrome checker checks if a string is a palindrome or not. A palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) toUpperCase()&lt;br&gt;
3.) split()&lt;br&gt;
4.) reverse()&lt;br&gt;
5.) join()&lt;br&gt;
6.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l8-mLd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482985084/LxERejNpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l8-mLd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482985084/LxERejNpv.png" alt="Screenshot (275).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Palindrome_Checker"&gt;Palindrome Checker&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-mobile-number-validator"&gt;
  &lt;/a&gt;
  10.) Mobile Number Validator
&lt;/h3&gt;

&lt;p&gt;This project lets you find out if the mobile number you have entered is active and able to receive calls or not.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) test()&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) DOM manipulation&lt;br&gt;
5.)  event Listeners&lt;br&gt;
6.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3yKLp6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483309276/gw6ICU_Vr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3yKLp6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483309276/gw6ICU_Vr.png" alt="Screenshot (277).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Mobile_Number_validator"&gt;Mobile Number Validator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-roman-numeral-converter"&gt;
  &lt;/a&gt;
  11.) Roman Numeral Converter
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to convert arabic numbers to Roman numerals  or vice-versa.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) event Listeners&lt;br&gt;
3.) arabicToRoman()&lt;br&gt;
4.) romanToArabic()&lt;br&gt;
5.) objects&lt;br&gt;
6.) for loop&lt;br&gt;
7.) Math.floor()&lt;br&gt;
8.) indexOf()&lt;br&gt;
9.) replace()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mmh4VI_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483854397/HzkgU0wFf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mmh4VI_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483854397/HzkgU0wFf.png" alt="Screenshot (279).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Roman_Numeral_Converter"&gt;Roman Numeral Converter &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-weather-app"&gt;
  &lt;/a&gt;
  12.) Weather app
&lt;/h3&gt;

&lt;p&gt;This is an awesome project to build if you want to learn more about APIs and how to work with them&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) toFixed()&lt;br&gt;
3.) event Listeners&lt;br&gt;
4.) API&lt;br&gt;
5.) fetch()&lt;br&gt;
6.) then()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88KRN1ef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621485266043/B1Wc95Tn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88KRN1ef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621485266043/B1Wc95Tn0.png" alt="Screenshot (281).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/Bhaskar-maity/Javascript-weather-app"&gt;Weather app &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-stopwatch"&gt;
  &lt;/a&gt;
  13.) Stopwatch
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a stopwatch that have a functionality like start,pause, and stop&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) parseInt()&lt;br&gt;
3.) setTimeout&lt;br&gt;
4.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---yanoa8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486360383/qMrVydh4A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yanoa8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486360383/qMrVydh4A.png" alt="Screenshot (283).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://dev.to/gspteck/create-a-stopwatch-in-javascript-2mak"&gt;Stopwatch&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-random-quote-generator"&gt;
  &lt;/a&gt;
  14.) Random Quote Generator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to fetches a new random quote from an API, upon the click of a button, and displays it in the browser.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) async()&lt;br&gt;
3.) await&lt;br&gt;
4.) fetch()&lt;br&gt;
5.) Math.floor()&lt;br&gt;
6.) Math.random()&lt;br&gt;
7.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---z1lFNIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486800935/Fz4mOMRFe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---z1lFNIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486800935/Fz4mOMRFe.png" alt="image_1.png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Random_Quote_Generator"&gt;Random Quote Generator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-bmi-calculator"&gt;
  &lt;/a&gt;
  15.) BMI Calculator
&lt;/h3&gt;

&lt;p&gt;The objective of this JavaScript project is to wire up a very basic JavaScript BMI Calculator.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) parseInt()&lt;br&gt;
4.) toFixed()&lt;br&gt;
5.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6dJEwvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487215276/DiJ_Y6_-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6dJEwvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487215276/DiJ_Y6_-4.png" alt="Screenshot (287).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/BMI-calculator"&gt;BMI Calculator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-tip-calculator"&gt;
  &lt;/a&gt;
  16.) TIP Calculator
&lt;/h3&gt;

&lt;p&gt;In this project, the user adds an amount and a tip percent and the calculator then outputs a total tip and bill amount.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) Number()&lt;br&gt;
4.) DOM manipulation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J3giTxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487472283/kz0Ac6BIb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J3giTxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487472283/kz0Ac6BIb.png" alt="Screenshot (289).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/percentage-tip-calculator"&gt;TIP Calculator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-word-length-calculator"&gt;
  &lt;/a&gt;
  17.) Word Length Calculator
&lt;/h3&gt;

&lt;p&gt;In this project, the user enters the word and the calculator outputs its length.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) length method&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f71OzHRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621609937078/LLfmK6Rrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f71OzHRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621609937078/LLfmK6Rrg.png" alt="Screenshot (297).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/word-count-tool"&gt;Word Length Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-day-of-the-week"&gt;
  &lt;/a&gt;
  18.) Day of the Week
&lt;/h3&gt;

&lt;p&gt;This project uses displays the day of the week along with a corresponding quote.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) Date() Object&lt;br&gt;
3.) switch statement&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZcC_9Nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621610479688/eN-ywzfPb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZcC_9Nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621610479688/eN-ywzfPb.png" alt="Screenshot (299).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/day-of-the-week-app"&gt;Day of the Week&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-covid19-tracker"&gt;
  &lt;/a&gt;
  19.) Covid-19 Tracker
&lt;/h3&gt;

&lt;p&gt;Using this website you can track corona cases in any country which you want.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) API&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sxi_lUpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660257362/hKFuLsBg3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sxi_lUpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660257362/hKFuLsBg3.png" alt="Screenshot (314).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/Ashish2030/Corona-Tracker"&gt;Covid-19 Tracker&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intermediate-javascript-projects"&gt;
  &lt;/a&gt;
  Intermediate JavaScript Projects
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-discussion-portal"&gt;
  &lt;/a&gt;
  1.) Discussion Portal
&lt;/h3&gt;

&lt;p&gt;It is a portal where one user can add questions and the other user can respond to those questions and you can also search the question. Also once the query is resolved, the user can delete the added question and response.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) local storage&lt;br&gt;
4.) Jquery&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ycrt7yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651625504/TAkfq1fPD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ycrt7yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651625504/TAkfq1fPD.png" alt="Screenshot (301).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/Discussion-App"&gt;Discussion Portal&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-quiz-app"&gt;
  &lt;/a&gt;
  2.) Quiz App
&lt;/h3&gt;

&lt;p&gt;Quiz apps are a fun way to improve your skills as a JavaScript developer. In this project, questions are dynamically generated using an object constructor. You have the 'Retake Quiz' option available at the end :)&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) Math.random()&lt;br&gt;
5.) Objects&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfAetddH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651925529/fs0IMLsVK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfAetddH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651925529/fs0IMLsVK.png" alt="Screenshot (303).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/WebDevSimplified/JavaScript-Quiz-App"&gt;Quiz app&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-whack-a-mole-game"&gt;
  &lt;/a&gt;
  3.) Whack a Mole game
&lt;/h3&gt;

&lt;p&gt;Whac-A-Mole is a popular arcade game. When the Game Start, by clicking on the title, a Mole will "Pop" from a random Hole, with random duration. Every successful "Whack" will add 1 to the Score. The game ends after 10 seconds have passed.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) Audio()&lt;br&gt;
4.) Jquery&lt;br&gt;
5.) local storage&lt;br&gt;
6.) switch statement&lt;br&gt;
7.) Math.random() , Math.round() and much more...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLGQOftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621652753078/s1TLoVN8x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLGQOftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621652753078/s1TLoVN8x.png" alt="Screenshot (305).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/mitri-dvp/JavaScript-Whack-A-Mole"&gt;Whack a Mole&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-notes-app-project"&gt;
  &lt;/a&gt;
  4.) Notes App Project
&lt;/h3&gt;

&lt;p&gt;The objective of this JavaScript project is to create a notes application that uses local storage and allows for edits, among other things.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) conditionals&lt;br&gt;
5.) Jquery&lt;br&gt;
6.) local storage&lt;br&gt;
      and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQeN2uqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653249971/lsVWi4DVT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQeN2uqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653249971/lsVWi4DVT.png" alt="Screenshot (307).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/JS-Beginners/notes-app"&gt;Notes app&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-tetris-game"&gt;
  &lt;/a&gt;
  5.) Tetris Game
&lt;/h3&gt;

&lt;p&gt;Tetris is a surprising game. The aim of Tetris is simple; you bring down blocks from the top of the screen. You can move the blocks around, either left to right, and/or you can rotate them. Your objective is to get all the blocks to fill all the empty space in a line at the bottom of the screen; whenever you do this, you’ll find that the blocks vanish and you get awarded some points.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) HTML canvas&lt;br&gt;
2.) DOM Manipulation&lt;br&gt;
3.) Math.floor() , Math.random()&lt;br&gt;
4.) event listeners&lt;br&gt;
5.) Date()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJncg-Oi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653911780/uIJdiltoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJncg-Oi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653911780/uIJdiltoj.png" alt="Screenshot (309).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code :-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Tetris_Game"&gt;Tetris Game&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-music-player-app"&gt;
  &lt;/a&gt;
  6.) Music Player app
&lt;/h3&gt;

&lt;p&gt;In this application, you will be creating a music player with a clean user interface that can be used to play music in the browser. You will also implement features like seeking and volume control. &lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) Jquery&lt;br&gt;
2.) DOM Manipulation&lt;br&gt;
3.) Array of objects&lt;br&gt;
4.) event listeners&lt;br&gt;
5.) CSS Manipulation&lt;br&gt;
6.) setInterval(), clearInterval()&lt;br&gt;
7.) Math.floor() , Math.random()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vYtyiuDn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621654487905/WOF2kV9rE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vYtyiuDn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621654487905/WOF2kV9rE.png" alt="music (2).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code :-&lt;/strong&gt;  &lt;a href="https://github.com/sayantanm19/js-music-player"&gt; Music Player&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-tic-tac-toe-game"&gt;
  &lt;/a&gt;
  7.) Tic Tac Toe Game
&lt;/h3&gt;

&lt;p&gt;The goal of the game is for players to position their marks so that they make a continuous line of three cells vertically, horizontally, or diagonally. An opponent can prevent a win by blocking the completion of the opponent's line.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) Jquery&lt;br&gt;
2.) DOM Manipulation &lt;br&gt;
3.) CSS Manipulation&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FmoS5sRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621655301888/VLvwni9AO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FmoS5sRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621655301888/VLvwni9AO.png" alt="Screenshot (312).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code:-&lt;/strong&gt; &lt;a href="https://github.com/robhitt/tic-tac-toe-js"&gt;Tic Tac Toe&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-pomodoro-clock"&gt;
  &lt;/a&gt;
  8.) Pomodoro Clock
&lt;/h3&gt;

&lt;p&gt;The Pomodoro Technique is a time management method developed by Francesco Cirillo. The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) switch statement&lt;br&gt;
4.) setInterval()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--neg7-o4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660867342/KSPmmpCus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--neg7-o4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660867342/KSPmmpCus.png" alt="Screenshot (316).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code :-&lt;/strong&gt; &lt;a href="https://github.com/builders/pomodoro-clock"&gt;Pomodoro Clock&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;### 9.) Filter Fun&lt;br&gt;
In this project, the user can upload a photo and apply various filters to it.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) HTML canvas&lt;br&gt;
2.) SimpleImage() object &lt;br&gt;
3.) getRed() ,getGreen(), getBlue() methods&lt;br&gt;
4.) Math.floor(), Math.random()&lt;br&gt;
   and much more....&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zBIkpKNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661266762/dOuofQrFk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zBIkpKNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661266762/dOuofQrFk.png" alt="Screenshot (318).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/nehasoni05/FilterFun"&gt;Filter Fun&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-rock-paper-scissors-game"&gt;
  &lt;/a&gt;
  10.) Rock, Paper, Scissors game
&lt;/h3&gt;

&lt;p&gt;Rock, paper, and scissors game is a simple fun game in which both the players have to make a rock, paper, or scissors. It has only two possible outcomes a draw, or a win for one player and a loss for the other player. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jm21FXPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661813306/RwFHsmG7C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jm21FXPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661813306/RwFHsmG7C.png" alt="Screenshot (320).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code :-&lt;/strong&gt; &lt;a href="https://github.com/javitocor/Rock-Paper-Scissors-JS"&gt;Rock, Paper, Scissors&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-todo-list-project"&gt;
  &lt;/a&gt;
  11.)  To-Do List Project
&lt;/h3&gt;

&lt;p&gt;The main objective of this JavaScript Project is to wire up a todo list application.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) Arrays&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) eventListeners&lt;br&gt;
5.) Nested Functions&lt;br&gt;
6.) Local Storage API&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_kxx5I_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426017200/hM7KkXkBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_kxx5I_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426017200/hM7KkXkBr.png" alt="Screenshot (263).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/todo-list-project-2"&gt;To-Do List&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are lots of projects you can work on as a JavaScript developer. If you want to start a career as a web developer, building your own JavaScript projects is the best way to learn the language. As you start learning JavaScript and finish your first beginner-level projects, you will quickly feel more comfortable working independently. Also, you will surely find more fun project ideas as you go.&lt;/p&gt;

&lt;p&gt;So, which projects are you going to build next? Let me know in the comments below!&lt;br&gt;
😊&lt;/p&gt;

&lt;p&gt;If you liked this article, share it with others! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading 🤝🤝
&lt;/h3&gt;

&lt;p&gt;I would ❤ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/nehasoni05"&gt;GitHub&lt;/a&gt;&lt;br&gt;
Let me know in the comment section if you have any doubt or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should definitely check out my other Blogs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-javascript-basics-g6n"&gt;Introduction to JavaScript: Basics&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/playing-with-javascript-objects-k4h"&gt;Playing with JavaScript Objects&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nehasoni__/7-javascript-data-structures-you-must-know-57ah"&gt;7 JavaScript Data Structures you must know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-reactjs-3553"&gt;Introduction to ReactJS
&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Happy Learning😃😃&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Beautify Your GitHub Profile like a Pro</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 30 May 2021 04:55:22 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/beautify-your-github-profile-like-a-pro-5093</link>
      <guid>https://dev.to/ruppysuppy/beautify-your-github-profile-like-a-pro-5093</guid>
      <description>&lt;p&gt;If you have ever used &lt;strong&gt;GitHub&lt;/strong&gt;, you must have come across some impressive-looking profiles and thought "Damn! I want my profile to look like that." Well, this article will help you with precisely that.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-add-a-raw-readme-endraw-"&gt;
  &lt;/a&gt;
  1. Add a &lt;code&gt;ReadMe&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;This is simply the easiest way to boost the visual appeal of your profile many folds. To create a &lt;code&gt;ReadMe&lt;/code&gt; for your &lt;strong&gt;GitHub&lt;/strong&gt; profile, create a new repository with your username. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lm3TVWg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prognnv0kl3t9o4y57te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lm3TVWg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prognnv0kl3t9o4y57te.png" alt="ReadMe Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Initialize the repository with a &lt;code&gt;ReadMe.md&lt;/code&gt; file and anything you write in the file will be shown in your &lt;strong&gt;GitHub&lt;/strong&gt; Profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwQfMWQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18md8cuyzdd4n4tzfyeq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwQfMWQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18md8cuyzdd4n4tzfyeq.PNG" alt="ReadMe Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ReadMe&lt;/code&gt; is the perfect place to describe yourself, list out your achievements and skills. You can also add badges like these to make your profile look even more attractive. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--chf73s-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Linked_In-0077B5%3Fstyle%3Dfor-the-badge%26logo%3DLinkedIn%26logoColor%3Dwhite" alt="linked-in"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/ruppysuppy"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yDJLJ2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-000000%3Fstyle%3Dfor-the-badge%26logo%3DGitHub%26logoColor%3Dwhite" alt="github"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/tapajyotib/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sg7TEMKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Instagram-E4405F%3Fstyle%3Dfor-the-badge%26logo%3Dinstagram%26logoColor%3Dwhite" alt="instagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create the badge the syntax is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;Badge Name&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://img.shields.io/badge/&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Badge&lt;/span&gt; &lt;span class="na"&gt;Text&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;Background&lt;/span&gt; &lt;span class="na"&gt;Color&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;?style=for-the-badge&amp;amp;logo=&lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;amp;logoColor=&lt;span class="nt"&gt;&amp;lt;Logo&lt;/span&gt; &lt;span class="na"&gt;Color&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the &lt;strong&gt;Github&lt;/strong&gt; badge would look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;github&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://img.shields.io/badge/GitHub-000000?style=for-the-badge&amp;amp;logo=GitHub&amp;amp;logoColor=white&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can browse through the list of available icons on &lt;a href="https://simpleicons.org/"&gt;Simple Icons&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-manage-your-repositories"&gt;
  &lt;/a&gt;
  2. Manage your &lt;em&gt;Repositories&lt;/em&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; allows you to pin &lt;em&gt;Repositories&lt;/em&gt; and &lt;em&gt;Gists&lt;/em&gt; in your profile. This is a remarkable feature that enables you to display the things you want to showcase. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaipZvZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqiqe58zim5qmijcp2zg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaipZvZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqiqe58zim5qmijcp2zg.PNG" alt="Pinned repositories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's also a good idea to add &lt;em&gt;details&lt;/em&gt;, &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;emojis&lt;/em&gt; to make the repository more engaging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMH5gEBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wa625c2laimozg15jyf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMH5gEBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wa625c2laimozg15jyf.PNG" alt="Repository with details"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2uHlpiKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf06qycuobmhv71zrdo3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2uHlpiKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf06qycuobmhv71zrdo3.PNG" alt="Repository with no details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the one with details is way more engaging than the one without any.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-contribute-contribute-and-contribute-some-more"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Contribute&lt;/strong&gt;, &lt;strong&gt;Contribute&lt;/strong&gt; and &lt;strong&gt;Contribute&lt;/strong&gt; some more!
&lt;/h1&gt;

&lt;p&gt;This is simply the most important step to make your &lt;strong&gt;GitHub&lt;/strong&gt; look awesome! I get it, getting started is scary, so if you need help, check out this &lt;a href="https://dev.to/ruppysuppy/zero-to-hero-get-started-with-open-source-10b7"&gt;article on how to get started with &lt;strong&gt;Open Source Development&lt;/strong&gt;&lt;/a&gt;. You don't have to start with huge features or projects; begin with documentation fixes, then move on to tiny bug fixes and features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Source Development&lt;/strong&gt; can boost your profile regardless if you are going for a &lt;em&gt;job interview&lt;/em&gt; or &lt;em&gt;freelancing&lt;/em&gt;. After a few good contributions, you will start getting job offers from various companies. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtLhJ8FK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixcxnjh9u7azfsrboxt0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtLhJ8FK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixcxnjh9u7azfsrboxt0.PNG" alt="Open Source Contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One essential thing to keep in mind is: &lt;strong&gt;DO NOT TRY TO CHEAT THE PROCESS&lt;/strong&gt;. Every one of your contributions is listed on &lt;strong&gt;GitHub&lt;/strong&gt;. There are a lot of people who create fake issues to get a green dot for contribution. This only creates &lt;em&gt;negative impression&lt;/em&gt; on the person viewing your profile. If you keep making tiny incremental improvements, you will make it; if you try to use a shortcut, you will likely crash and burn. As the saying goes, "Slow and steady wins the race."&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a student &amp;amp; freelancer who will soon start off as a Digital Nomad as soon as I graduate. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>markdown</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Most useful javascript math functions</title>
      <author>Pratik Lochawala</author>
      <pubDate>Sun, 30 May 2021 04:45:26 +0000</pubDate>
      <link>https://dev.to/lochawala/most-useful-javascript-math-functions-6p5</link>
      <guid>https://dev.to/lochawala/most-useful-javascript-math-functions-6p5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;abs&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.abs function returns the absolute value of a number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2flGbLb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746409131/jlbMbOXQL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2flGbLb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746409131/jlbMbOXQL.png" alt="carbon (22).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ceil"&gt;
  &lt;/a&gt;
  &lt;strong&gt;ceil&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.ceil function rounds a number up to the next largest integer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Thsiu2vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746494532/mY9EPGuj_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Thsiu2vr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746494532/mY9EPGuj_.png" alt="carbon (23).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#floor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;floor&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.floor function rounds a number down to its nearest integer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W1k6UmEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746571356/Jz98tAaox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W1k6UmEa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746571356/Jz98tAaox.png" alt="carbon (25).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#round"&gt;
  &lt;/a&gt;
  &lt;strong&gt;round&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.round function rounds a number to its nearest integer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSNVqDiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746550932/MkIxsqGy3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSNVqDiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746550932/MkIxsqGy3.png" alt="carbon (24).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#trunc"&gt;
  &lt;/a&gt;
  &lt;strong&gt;trunc&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.trunc function returns the integer part of a number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZgO0mNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746689915/uo-SMmKzr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZgO0mNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621746689915/uo-SMmKzr.png" alt="carbon (26).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#max"&gt;
  &lt;/a&gt;
  &lt;strong&gt;max&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.max function returns the number with the largest value&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QvxHxxmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747074703/okYZfbpb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QvxHxxmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747074703/okYZfbpb5.png" alt="carbon (28).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#min"&gt;
  &lt;/a&gt;
  &lt;strong&gt;min&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.min function returns the number with the lowest value&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPKjvZXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747105169/wU5xoy3Ay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPKjvZXn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747105169/wU5xoy3Ay.png" alt="carbon (29).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pow"&gt;
  &lt;/a&gt;
  &lt;strong&gt;pow&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.pow function returns the base to the exponent power&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--voLXQIAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747253211/OqwJHwiwW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voLXQIAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747253211/OqwJHwiwW.png" alt="carbon (31).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sqrt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;sqrt&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.sqrt function returns the square root of a number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eSpRcuq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747311129/JfjcDppwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eSpRcuq9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747311129/JfjcDppwb.png" alt="carbon (32).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cbrt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;cbrt&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.cbrt function returns the cubic root of a number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vnBkCgPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747363289/DoLcBeSkk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnBkCgPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747363289/DoLcBeSkk.png" alt="carbon (33).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#random"&gt;
  &lt;/a&gt;
  &lt;strong&gt;random&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.random return random number between 0 to 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--54aJqMzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747953309/95wzHlvVt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54aJqMzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747953309/95wzHlvVt.png" alt="carbon (35).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Bonus&lt;/strong&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#sign"&gt;
  &lt;/a&gt;
  &lt;strong&gt;sign&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Math.sign return an argument is negative, positive or NaN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKU9qxiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747721304/-qtsj2IV32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKU9qxiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621747721304/-qtsj2IV32.png" alt="carbon (34).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Wrapping up!&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Share this blog with your friends 👩🏼‍🤝‍🧑🏼 and developers 👨‍💻 you know and let them know these&lt;/p&gt;

&lt;p&gt;Your feedbacks and comments are very important for me. 💌&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-in-touch"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Get in touch 🤜🤛&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/technonic"&gt;Instagram&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Answer: How to call CodeIgniter controller function from view</title>
      <author>emmanueldiogu</author>
      <pubDate>Sun, 30 May 2021 04:35:43 +0000</pubDate>
      <link>https://dev.to/emmanueldiogu/answer-how-to-call-codeigniter-controller-function-from-view-4m63</link>
      <guid>https://dev.to/emmanueldiogu/answer-how-to-call-codeigniter-controller-function-from-view-4m63</guid>
      <description>&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/9986520/how-to-call-codeigniter-controller-function-from-view/67757667#67757667" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re:  How to call codeigniter controller function from view
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;May 30 '21&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/9986520/how-to-call-codeigniter-controller-function-from-view/67757667#67757667" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          0
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;p&gt;I know this question is old but it is still a relevant question. From my experience there are situations that warrant calling a function from view in your Codeigniter 4 app, I'll just advise that you keep it clean and minimal. Below is how I have called controller function from…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/9986520/how-to-call-codeigniter-controller-function-from-view/67757667#67757667" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


</description>
    </item>
    <item>
      <title>Don't Develop Just for Yourself - A Developer's Checklist to Accessibility</title>
      <author>Eevis (she/her)</author>
      <pubDate>Sun, 30 May 2021 03:51:54 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/don-t-develop-just-for-yourself-a-developer-s-checklist-to-accessibility-545k</link>
      <guid>https://dev.to/eevajonnapanula/don-t-develop-just-for-yourself-a-developer-s-checklist-to-accessibility-545k</guid>
      <description>&lt;p&gt;We, as developers, tend to develop sites unconsciously for people like ourselves. If we don't actively pay attention, the sites are often accessible only for certain types of people:  Sighted mouse-users, who have good fine motor skills and are good at using computers. &lt;/p&gt;

&lt;p&gt;It leads to moments where no one who navigates the web with only a keyboard (or keyboard simulating device) can access and interact with the site. It is a pretty big group of people!&lt;/p&gt;

&lt;p&gt;We have a responsibility to make sites that work for all of our users. In some cases, it is required by law, but it is not the only reason we should care. &lt;/p&gt;

&lt;p&gt;This blog post is aimed for those at the beginning of their accessibility journey. You might know some things, like "always provide an alt-text for an image," but are unsure what to write there. Or you don't have any idea how to know if your site is accessible at all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Following this blog post won't make your site 100% accessible!&lt;/strong&gt; The goal of this post is to provide some information about some things to check manually after using some automated testing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keyboard-navigation"&gt;
  &lt;/a&gt;
  Keyboard Navigation
&lt;/h2&gt;

&lt;p&gt;First of all, abandon your mouse for a second. Don't use it. Try to navigate through the website using only the keyboard. Try to complete every task user needs to be able to complete on the website. Can you do it? Can you see where you are at the moment? Is the focus indicator (yes, that thing many designers and developers like to remove) visible enough? &lt;/p&gt;

&lt;p&gt;If you can't use the whole website with only a keyboard, that is an accessibility and usability problem. However, one thing to note here is that keyboard interaction is not necessarily accomplished with just tab and enter, as it has been at some point. The general pattern goes, as &lt;a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav"&gt;WAI-ARIA Authoring Practices&lt;/a&gt; state:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A primary keyboard navigation convention common across all platforms is that the tab and shift+tab keys move focus from one UI component to another while other keys, primarily the arrow keys, move focus inside of components that include multiple focusable elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another thing to consider in this point is focus indicators. They should be visible, and even if the default focus indicator on the browser is sufficient to pass the WCAG-requirements, it might be hard to see. So I would recommend enhancing the focus indicator to be more visible. Just remember that the color of the indicator should have a sufficient contrast ratio with the adjacent background.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-keyboard-navigation"&gt;
  &lt;/a&gt;
  Action Item for Keyboard Navigation
&lt;/h3&gt;

&lt;p&gt;Using only your keyboard, navigate through your site. Pay attention to navigation menus and other custom widgets that might lose focus because some elements are hidden incorrectly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is everything reachable and operable without a mouse? Can you see the focus every time?&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alttexts"&gt;
  &lt;/a&gt;
  Alt-Texts
&lt;/h2&gt;

&lt;p&gt;Another thing to check manually is alternative texts for the pictures. You might wonder, isn't it a thing automated testing catches? Well, yes. Automated testing tools crawl through the markup, and when they find an &lt;code&gt;img&lt;/code&gt;-element, they check if the &lt;code&gt;alt&lt;/code&gt;-attribute is present. They don't (and can't) check the quality of the alternative texts.&lt;/p&gt;

&lt;p&gt;Not all images need alternative texts; however, they do need the &lt;code&gt;alt&lt;/code&gt;-attribute. So for a purely decorative image, you need to provide an empty &lt;code&gt;alt&lt;/code&gt;-attribute. This "hides" the image from the screen reader so that it won't get read at all. &lt;/p&gt;

&lt;p&gt;You might ask, shouldn't screen reader users know about everything on the page? A person, who consumes the web by listening, might want to reduce the amount of information. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-alttexts"&gt;
  &lt;/a&gt;
  Action Item for Alt-Texts
&lt;/h3&gt;

&lt;p&gt;Go through every image on the page. You can use, for example, &lt;a href="https://chrispederick.com/work/web-developer/"&gt;Web Developer-extension&lt;/a&gt; or the developer tools and check the image's alt attribute. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is the text descriptive? Or is the picture decorative?&lt;/strong&gt; You can find more information on how you should write the alt-text for every type of image from &lt;a href="https://webaim.org/techniques/alttext/"&gt;WebAIM: Alternative Text&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#page-language"&gt;
  &lt;/a&gt;
  Page Language
&lt;/h2&gt;

&lt;p&gt;Another thing that automated tests catch, if it's missing, is the page language. Some of the project starters, such as &lt;code&gt;create-react-app,&lt;/code&gt; have the lang-attribute set automatically, but some (I'm looking at you, NextJS) don't.  &lt;/p&gt;

&lt;p&gt;If the site's language is English, you're pretty much okay with the automatic language (if it exists). However, if it is not, then you need to change it. The reason is that the language screen readers use for the page comes from that &lt;code&gt;lang&lt;/code&gt;-attribute. So if you have a page with content in Finnish, and there is that &lt;code&gt;en&lt;/code&gt;-attribute, a screen reader would pronounce every word with an English accent. That's not beautiful. Here's an example with another way around. It's almost as bad:&lt;/p&gt;


      
   

&lt;h3&gt;
  &lt;a href="#action-item-for-page-language"&gt;
  &lt;/a&gt;
  Action Item for Page Language
&lt;/h3&gt;

&lt;p&gt;Check the language of the page in the page's &lt;code&gt;html&lt;/code&gt;-attribute. You can do this from developer tools' Elements-tab. &lt;strong&gt;Is the language code the same as the primary language on the page?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#text-resizing"&gt;
  &lt;/a&gt;
  Text Resizing
&lt;/h2&gt;

&lt;p&gt;Some people increase the text size of the webpage with, for example, browser settings. It means that the content takes more space and might flow differently. Developers should test if the site is working when text size has been increased to at least 200%. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-text-resizing"&gt;
  &lt;/a&gt;
  Action Item for Text Resizing
&lt;/h3&gt;

&lt;p&gt;Have the webpage on two browsers open, preferably side by side. In the first browser, use browser's built-in zooming for testing by using CMD++ if you're using a Mac, and CTRL++ if you're using Windows or Linux. Increase the size to the maximum, which should be 200%. Compare the zoomed site and the one without a zoom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Does your site still work? Is the text flowing okay? Does increasing the text size add horizontal scrolling? Is all the information still there?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#color-alone"&gt;
  &lt;/a&gt;
  Color Alone
&lt;/h2&gt;

&lt;p&gt;If color alone conveys meaning, there are lots of users who miss out on that information. For example, suppose there is a list of different activities, and their level of advancement is communicated only with a colored box. In that case, there are some groups of people who can't access that information. &lt;/p&gt;

&lt;p&gt;For example, a person who is color blind can't separate certain color combinations, and thus the information, when it's conveyed only with color, is not understandable. Also, for screen reader users, the color does not say anything; screen readers don't say anything about the web page's styles. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-color-alone"&gt;
  &lt;/a&gt;
  Action Item for Color Alone
&lt;/h3&gt;

&lt;p&gt;One thing that could be used as help for testing if the color alone is used to convey a meaning is to change the site into grayscale.&lt;br&gt;&lt;br&gt;

  How to turn a page grayscale?
  &lt;br&gt;
You can turn a page grayscale from the developer tools in Chrome and Edge from the "Rendering"-tab. You can find it with the same instructions as for the &lt;a href="https://www.youtube.com/watch?v=wIj-NymT5fY"&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;-simulation&lt;/a&gt;. There is a header "Emulate vision deficiencies" on that tab, and you can choose Achromatopsia from the select.&lt;br&gt;


&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can you still understand all the information on the page?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-zooming"&gt;
  &lt;/a&gt;
  Mobile Zooming
&lt;/h2&gt;

&lt;p&gt;I remember, that at some point it was customary to add this &lt;code&gt;&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" /&amp;gt;&lt;/code&gt; to disable the pinch-zoom on webpages. Nobody ever explained why it was, but it was everywhere I copied code to my projects. I didn't know then that it would make zooming on touch devices harder. &lt;/p&gt;

&lt;p&gt;Some people need to use zoom to see the elements on the page. Also, many people want to, for example, zoom in on pictures to see how they look in that picture or some other detail. And sometimes, the website is unusable without zooming. That is a thing that would need fixing from the developers' side, but things don't always happen too fast, so meanwhile, users would need to use the zoom.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-mobile-zooming"&gt;
  &lt;/a&gt;
  Action Item for Mobile Zooming
&lt;/h3&gt;

&lt;p&gt;Open your site or app on a mobile device. Try zooming in with your fingers. &lt;strong&gt;Can you do it?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#captions-and-transcripts"&gt;
  &lt;/a&gt;
  Captions and Transcripts
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#captions"&gt;
  &lt;/a&gt;
  Captions
&lt;/h3&gt;

&lt;p&gt;Imagine if you couldn't hear the words said in the video. How would you then understand what is going on in that video? It can happen for numerous reasons. You could have a hearing-related disability or be in a crowded place where you don't want to turn the sound on.&lt;/p&gt;

&lt;p&gt;For these situations, captions are essential. Captions are a bit different from subtitles. They also contain information about important sounds on the video, and they identify the speaker if they're not easy to identify from the video. Captions can be either &lt;em&gt;closed&lt;/em&gt;, meaning they can be turned on, or &lt;em&gt;open&lt;/em&gt;, meaning they are always present. &lt;/p&gt;

&lt;p&gt;And a word about auto-captions: Please, no. The speech recognition algorithms aren't that good yet, and they produce lousy quality. Some even call them "auto-craptions." Suppose you don't have a hearing-related disability and haven't encountered this in your life. In that case, I have another example that could maybe give some context: Services like Netflix and subtitles (when the subtitle language is not English). I mean, at least for Finnish, the subtitles are often just crap. The reason is either using automated translations or not paying enough for professionals to do the translations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transcripts"&gt;
  &lt;/a&gt;
  Transcripts
&lt;/h3&gt;

&lt;p&gt;Transcripts are a way for DeafBlind users to understand what's going on in videos or audio content (say, podcasts). Also, for audio-only content, transcripts are the only way for Deaf people to get the message. &lt;/p&gt;

&lt;p&gt;If you're interested to learn more about captions, transcripts, and audio descriptions (which I'm not covering here), &lt;a href="https://webaim.org/techniques/captions/"&gt;WebAIM: Captions, Transcripts, and Audio Descriptions&lt;/a&gt; is a good resource on that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-item-for-captions-and-transcripts"&gt;
  &lt;/a&gt;
  Action Item for Captions and Transcripts
&lt;/h3&gt;

&lt;p&gt;Go through every piece of multimedia on your website. &lt;strong&gt;Are the captions and transcripts in place (depending on the media type)?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;In this blog post, I have introduced seven checks any developer can do to ensure that their website is a bit more accessible. Some of them take more time than others, but they're worth it!&lt;/p&gt;

&lt;p&gt;Do you have any tips for simple checks for accessibility problems that aren't easy to catch with automated tests?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_generalnav"&gt;WAI-ARIA Authoring Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webaim.org/techniques/alttext/"&gt;WebAIM: Alternative Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webaim.org/techniques/captions/"&gt;WebAIM: Captions, Transcripts, and Audio Descriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wIj-NymT5fY"&gt;&lt;code&gt;prefers-reduced-motion&lt;/code&gt;-simulation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chrispederick.com/work/web-developer/"&gt;Web Developer-extension&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@glenncarstenspeters?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Glenn Carstens-Peters&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Write better queries using values_list in Django</title>
      <author>CH S Sankalp jonna</author>
      <pubDate>Sun, 30 May 2021 02:42:23 +0000</pubDate>
      <link>https://dev.to/sankalpjonna/write-better-queries-using-valueslist-in-django-2nia</link>
      <guid>https://dev.to/sankalpjonna/write-better-queries-using-valueslist-in-django-2nia</guid>
      <description>&lt;p&gt;The Django ORM is great but it may not always be a good idea to use it in its most primitive state as it could lead to inefficient queries.&lt;/p&gt;

&lt;p&gt;For instance, consider a database model called Record that consists of id, name, created_at and an is_deleted flag indicating whether it has been deleted or not.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models

class Record(models.Model):
  # id will be created automatically
  name = models.CharField(max_length=255)
  created_at = models.DateTimeField(auto_now_add=True)
  is_deleted = models.BooleanField(default=False)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;When you query using &lt;strong&gt;Record.objects.filter(is_deleted=False)&lt;/strong&gt;, the underlying database query looks something like this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT id,
       name,
       created_at,
       is_deleted
FROM   records
WHERE  NOT is_deleted; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Not only is this querying all fields of the table but it returns a queryset of model instances like this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False)
&amp;lt;QuerySet [&amp;lt;Record: Record object (1)&amp;gt;, &amp;lt;Record: Record object (2)&amp;gt;, &amp;lt;Record: Record object (3)&amp;gt;]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In most cases you do not require all of the fields of your model. What is even worse is that if your Record model consists of 10 fields, this query will end up fetching all of them from the database making your query significantly slower.&lt;/p&gt;

&lt;p&gt;Fortunately there are two very straightforward ways to make this query efficient. You could either use values or values_list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-values-to-retrieve-specific-db-columns"&gt;
  &lt;/a&gt;
  Using values() to retrieve specific DB columns
&lt;/h2&gt;

&lt;p&gt;Let’s say you want to display the names of all the records that have not been deleted. You can retrieve only the name column from the database by making a slight modification to the ORM query: &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False).values('name')
&amp;lt;QuerySet [{'name': 'First record'}, {'name': 'Second Record'}, {'name': 'Third Record'}]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;As you can see, instead of returning a list of Record objects, this queryset returns a list of dictionaries that consist of just the name field. The underlying query now becomes:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT name
FROM   records
WHERE  NOT is_deleted; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;You can fetch more columns if you wish by providing the list of columns that you need in the values() method.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False).values('id', 'name')
&amp;lt;QuerySet [{'id': 1, 'name': 'First record'}, {'id': 2, 'name': 'Second Record'}, {'id': 3, 'name': 'Third Record'}]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#using-valueslist-to-retrieve-specific-db-columns"&gt;
  &lt;/a&gt;
  Using values_list() to retrieve specific DB columns
&lt;/h2&gt;

&lt;p&gt;This works pretty much the same way as values() except that it returns a tuple instead of a dictionary:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False).values_list('name')
&amp;lt;QuerySet [('First record',), ('Second Record',), ('Third Record',)]&amp;gt;
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False).values_list('id', 'name')
&amp;lt;QuerySet [(1, 'First record'), (2, 'Second Record'), (3, 'Third Record')]&amp;gt;
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The nifty thing about values_list() is that if you only need to pass in a single field, you can use the flat=True parameter to return a list of single values instead of tuples.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Record.objects.filter(is_deleted=False).values_list('name',flat=True)&lt;br&gt;
&amp;lt;QuerySet ['First record', 'Second Record', 'Third Record']&amp;gt;&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#closing-notes"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Closing notes&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;In terms of performance, there is no difference between values() and values_list(). &lt;/p&gt;

&lt;p&gt;They are both intended as optimizations for retrieving a subset of data while avoiding creation of model instances and making the database query more efficient by only selecting specific fields.&lt;/p&gt;

&lt;p&gt;The decision of which one of these to use depends on what kind of data structure you prefer to work with. &lt;/p&gt;

&lt;p&gt;I usually find a dictionary more intuitive than a tuple and hence prefer values() over values_list(). However if I only need one field from the query I prefer to use values_list() with flat=True.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sankalpjonna.com/learn-django/write-better-queries-using-values-list-in-django"&gt;Originally posted on my blog&lt;/a&gt;&lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
    </item>
    <item>
      <title>5 Common Mistakes When Using the Bootstrap Framework.</title>
      <author>Amran Hussein</author>
      <pubDate>Sun, 30 May 2021 02:33:54 +0000</pubDate>
      <link>https://dev.to/amran92/5-common-mistakes-when-using-the-bootstrap-framework-28c</link>
      <guid>https://dev.to/amran92/5-common-mistakes-when-using-the-bootstrap-framework-28c</guid>
      <description>&lt;p&gt;At first glance, this framework seems to us as simple and easy to deal with, and of course, it is so, and starting to use it is not difficult. Documenting this framework is well written and contains a lot of programming code related to HTML, CSS, and JavaScript. but some errors and problems may not be apparent or may be present in ambiguous use cases. Because the Bootstrap framework seems simple and easy to use, this framework spread like wildfire and many developers started using it, which led to many errors and some problems.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---aI3k2z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhsr5cfqlhjfkpcilbex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---aI3k2z9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhsr5cfqlhjfkpcilbex.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Therefore, in this article, I will list 5 common mistakes that users of this framework make.&lt;/p&gt;

&lt;p&gt;Mistake 1: This framework was misunderstood in the first place.&lt;/p&gt;

&lt;p&gt;There are some misconceptions present in the minds of developers about this framework, and this may be because these concepts are not explicitly and clearly present in the framework site or because developers do not take the time to read the documentation of this framework. Developers may do a lot of things wrong and then blame the framework itself, so let us clarify some important facts.&lt;/p&gt;

&lt;p&gt;The Bootstrap framework is a comprehensive and integrated framework, but it is not bulky or massive. This framework comes with basic templates that contain many user interface components such as tables, forms, buttons, dropdowns, and much more. You can use these components to create an interface that works best for multiple browsers, devices, and dimensions.&lt;/p&gt;

&lt;p&gt;It is true that the framework will not do everything, but it provides a set of options for you to choose from, which helps developers focus on development more than design and helps them get a beautiful website in less time.&lt;/p&gt;

&lt;p&gt;Mistake 2: Thinking that you would not need to know CSS to use this framework.&lt;/p&gt;

&lt;p&gt;If you thought you would not need to know CSS to use this framework then you are wrong, as any web developer needs knowledge of CSS and HTML5. It is true that it saves you the trouble of dealing with some of the annoying CSS issues (such as the vendor prefixie) and gives you many default formats, but you must understand CSS. You may not need to know how media queries work, but you will of course need to know how responsive design works in general. Frameworks are not designed to teach you CSS, but they may help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYDc7n3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqtf4ypfcnz6m9nvl2l7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYDc7n3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqtf4ypfcnz6m9nvl2l7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mistake 3: Changing the default CSS file for this frame.&lt;/p&gt;

&lt;p&gt;Let me make it simple and straightforward: Never modify bootstrap.css file.&lt;/p&gt;

&lt;p&gt;If you modify that file, things will become complicated, and you will destroy the design when you update Bootstrap files when a new version of this framework is released. You can replace the default formats of this frame with the formats you want (such as colors, margins, paddings) and there is no need to modify the bootstrap.css file at all.&lt;/p&gt;

&lt;p&gt;Do not know how to use LESS or SASS? No problem with that, all you must do is create the CSS file and put in it the formatting that you want to replace from the main bootstrap.css file. And as we mentioned earlier, knowing CSS is extremely important even if you think otherwise. You can create new CSS selectors or classes and put them in your HTML file to replace the default bootstrap layouts (do not forget to put your CSS file after the bootstrap default CSS files for everything to work correctly).&lt;/p&gt;

&lt;p&gt;Mistake 4: Using everything that the Bootstrap framework provides.&lt;/p&gt;

&lt;p&gt;I have mentioned said earlier that this framework is comprehensive and integrated and provides many user interface components and many HTML and CSS templates and JavaScript plugins as well. But you should not use everything that this framework offers if you will not need it for the project you are working on.&lt;/p&gt;

&lt;p&gt;This is especially true with JavaScript plugins, as you should choose only the plugins that you will need and you should not use everything because it looks beautiful and awesome, as this may overload your site and make it slow. So, you should first not insert the bootstrap.js file and create your site using only HTML and CSS and then add the components you need one by one.&lt;/p&gt;

&lt;p&gt;Mistake 5: complicating things with JavaScript and neglecting the "data-" attribute.&lt;/p&gt;

&lt;p&gt;Designers or beginners to JavaScript can easily create web pages using HTML, CSS, and Bootstrap. But if they are not good at programming, they may fall into the trap of misuse of JavaScript or even complicate matters. It is important to note that JavaScript plugins can be used using an API provided by the Bootstrap framework without having to write a single JavaScript line.&lt;/p&gt;

&lt;p&gt;For example, we can enable a modal dialog without writing a single line of JavaScript by using:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--arq2jZZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsma860t8dogis55yh4c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--arq2jZZ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsma860t8dogis55yh4c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On an element such as a button or anchor and passing additional values using the -data attributes. In the code below we specified an element with id "#myModal" and used the data-backdrop option to prevent the window from disappearing if the user clicked outside the window, and by using the data-keyboard option we disabled the escape button on the keyboard. That closes the window when pressed. And all of this was done using just one HTML line:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9PXxiX0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xb8qih4uu5sptyg2jvl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9PXxiX0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xb8qih4uu5sptyg2jvl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>devops</category>
      <category>programming</category>
    </item>
    <item>
      <title>React Application Various Testing Options</title>
      <author>Animesh Kumar</author>
      <pubDate>Sun, 30 May 2021 00:40:56 +0000</pubDate>
      <link>https://dev.to/an1meshk/react-application-various-testing-options-543d</link>
      <guid>https://dev.to/an1meshk/react-application-various-testing-options-543d</guid>
      <description>&lt;p&gt;&lt;em&gt;Any post on testing libraries will be incomplete without Mike Cohn’s Test Pyramid diagram, so here it is:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6-Y9gag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g0d447qk2tsl15lkaspg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6-Y9gag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g0d447qk2tsl15lkaspg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Image source: &lt;a href="https://martinfowler.com/bliki/TestPyramid.html"&gt;https://martinfowler.com/bliki/TestPyramid.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need more unit tests, lesser integration tests, and even lesser end-to-end tests, why? as it costs time and money to write more integration and end-to-end tests. Also, unit tests are faster compared to other test siblings. And not to mention, no one wants to wait for hours for the CI-CD pipeline execution.&lt;/p&gt;

&lt;p&gt;Now getting back to our main topic, the bigger question is which library to use for unit, integration, and end-to-end testing? Well! there are various options available and everyone has their own view (which is great :D). Based upon my experience in creating enterprise-level modern JavaScript applications, the Single Page App (SPA), here is my opinionated view.&lt;/p&gt;

&lt;p&gt;Before, we dive deep in, here is the image that nicely illustrates the testing libraries per test tool abilities like test framework, assertion, test runner, mocking, code coverage (from left to right).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PI8e-CUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hbfhll4cr4c203idmx4a.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PI8e-CUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hbfhll4cr4c203idmx4a.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Image Source: &lt;a href="https://www.udemy.com/course/complete-react-developer-zero-to-mastery/"&gt;https://www.udemy.com/course/complete-react-developer-zero-to-mastery/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt; is one of the libraries that provide various capabilities, which is shown in the above comparison. Jest (&lt;a href="https://www.npmjs.com/package/jest"&gt;4 million weekly downloads&lt;/a&gt;) is a powerful tool for writing unit tests for pure functions. However, for more complex scenarios, especially when working with React apps, &lt;a href="https://testing-library.com/docs/react-testing-library/intro/"&gt;React Testing Library&lt;/a&gt; (1 million weekly downloads) is an excellent choice.&lt;/p&gt;

&lt;p&gt;React Testing Library is built on top of DOM Testing Library, which helps writing tests using selectors. In places where you can’t use the React Testing Library, &lt;a href="https://enzymejs.github.io/enzyme/"&gt;Enzyme&lt;/a&gt; library can rescue you (though Enzyme is the competitor).&lt;/p&gt;

&lt;p&gt;So, with the help of Jest, React Testing Library, and Enzyme, one can pretty much cover any unit and integration test case scenarios. So, what about end-to-end testing? Well! &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; library is the best of the best choice.&lt;/p&gt;

&lt;p&gt;Awesome documentation, ease of implementation, less learning curve, I can’t even think of Selenium or any other library. Cypress has a nice interface where one can see the test execution with minimal test writing effort.&lt;/p&gt;

&lt;p&gt;So, with this are we done? of course not, with the growing popularity of microservice architecture, contract testing is an essential part of it. And &lt;a href="https://docs.pact.io/"&gt;Pact&lt;/a&gt; is the consumer-driven contract testing library that provides assurance that consumer application or provider service can be deployed to production without breaking each other’s trust or in other terms the contract.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have reached here, then I did a satisfactory effort to keep you reading. Please be kind to leave any comment or ask for any correction. &lt;strong&gt;Happy Coding!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://martinfowler.com/articles/practical-test-pyramid.html"&gt;https://martinfowler.com/articles/practical-test-pyramid.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>testing</category>
      <category>react</category>
    </item>
  </channel>
</rss>
