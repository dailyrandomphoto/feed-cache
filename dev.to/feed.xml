<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to move on from the tutorial phase as a beginner?</title>
      <author>Nikhat</author>
      <pubDate>Fri, 31 Dec 2021 12:36:53 +0000</pubDate>
      <link>https://dev.to/hyanggi/how-to-move-on-from-the-tutorial-phase-as-a-beginner-1bmj</link>
      <guid>https://dev.to/hyanggi/how-to-move-on-from-the-tutorial-phase-as-a-beginner-1bmj</guid>
      <description>&lt;p&gt;If you are new to programming, one of the first things that probably aids you in your self-learning process is the many resources and tutorials that are available. A quick google search can be both a blessing as well as an overwhelming experience thanks to the digital connectivity we have today. After going through multiple suggestions on various portals, I found these to be most commonly listed to help a budding programmer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-build-projects"&gt;
  &lt;/a&gt;
  1. Build Projects
&lt;/h4&gt;

&lt;p&gt;Ask someone who codes for a living how to get better at coding, I can guarantee you that they will all tell you: &lt;em&gt;build projects, start working on something you feel invested in, it doesn’t have to be a huge project!&lt;/em&gt; You will probably be left wondering what falls under a project? How do I build one? Where do I start? Firstly, take a step back and breathe. Then, break down your idea into multiple sub tasks, write down what all you want to achieve and begin. Also, it’s perfectly all right if what you want to do isn’t unique at all. The point is to build something on your own.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-practice-practice-practice"&gt;
  &lt;/a&gt;
  2. Practice, practice, practice!
&lt;/h4&gt;

&lt;p&gt;As with many other skills, your programming gets better only with time and dedication from your end. Make sure to spend an hour a day or so working on the concepts you struggle with, most often used modules in the language you’re learning, get your basics correct by working on exercises - I personally find exercise problems at the end of textbook chapters quite helpful to develop logical skills; there are a few websites like &lt;a href="https://edabit.com/"&gt;Edabit&lt;/a&gt; dedicated for that purpose alone. These problems could comprise a small program using multiple methods or just a single method.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-read-code"&gt;
  &lt;/a&gt;
  3. Read Code!
&lt;/h4&gt;

&lt;p&gt;You know how something clicks simply by looking at it repeatedly? Read it once and you have no idea what it means but give it a few more tries and the brain fog gets clearer? Well, I feel it’s like that with code too. Not only will you get familiar with the language but you will also get an idea on how a particular problem is solved or what course another coder has taken. Basically, you will be learning from their thought process. At the end of the day, code is a structured write up telling you what exactly is being done.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-go-through-the-tutorial-again"&gt;
  &lt;/a&gt;
  4. Go through the tutorial again
&lt;/h4&gt;

&lt;p&gt;Once you feel like you have gotten better than you were before, go back to the basics. I know this particular point feels like you will be kept in the loop instead of breaking out of it, but give it a try if the course you initially started with was a detailed one and you might not have grasped its concepts better back then. The purpose is to strengthen your basics, it is a major plus if the course is more hands-on. This time you can actually pause, attempt a problem on your own and take help from the tutorial if you feel the need to.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-read-technical-articles-follow-other-developers-and-their-work"&gt;
  &lt;/a&gt;
  5. Read technical articles, follow other developers and their work
&lt;/h4&gt;

&lt;p&gt;There’s a ton of programmers out there producing quality work every single day. Ranging from keeping you up-to-date with here-to-stay technologies like no-code/low-code platforms to covering concepts through detailed code, you will learn a lot and can decide the extent of programming you wish to add to your portfolio. Follow them on blogging websites or their social media, I promise you will get a little bit of technical exposure every day! This will make you feel like a part of the developer’s community and sometimes that might be the push you need to stay consistent. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-teach-and-finally-teach"&gt;
  &lt;/a&gt;
  6. Teach - and finally, teach!
&lt;/h4&gt;

&lt;p&gt;If you really want to learn something and be good at it, you have to attempt to teach it. Not only do you feel confident at your skills by doing this, but there’s also more clarity that comes along with it. You can either blog about what you’ve learnt or teach it to someone else. Find any means which work for you. If you aren't sure where to begin, start with teaching yourself: write down what you’ve learnt and explain that certain bit that confused you earlier and how you arrived at a solution. Just like building your first projects, this doesn't have to be spectacularly grand either - keep it simple and short and grow from there. &lt;/p&gt;

&lt;p&gt;So, this is it then! I'm going to conclude my first technical blog post here. These tips are more of a continual reminder for me and anyone who's feeling lost and unready out there. If you have any more suggestions or would like to add onto these points, do let me know below.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Bring Your Home Network Anywhere For Free - Home VPN with WireGuard on Raspberry Pi + Pi-hole (Ubuntu Server 20.04 LTS)</title>
      <author>Amel Spahić</author>
      <pubDate>Fri, 31 Dec 2021 12:32:40 +0000</pubDate>
      <link>https://dev.to/amelspahic/bring-your-home-network-anywhere-for-free-home-vpn-with-wireguard-on-raspberry-pi-pi-hole-ubuntu-server-2004-lts-253a</link>
      <guid>https://dev.to/amelspahic/bring-your-home-network-anywhere-for-free-home-vpn-with-wireguard-on-raspberry-pi-pi-hole-ubuntu-server-2004-lts-253a</guid>
      <description>&lt;p&gt;In the &lt;a href="https://amelspahic.com/block-ads-tracking-and-telemetry-with-pi-hole-on-raspberry-pi-ubuntu-server-20-04"&gt;previous blog post&lt;/a&gt;, I talked about setting up Ubuntu Server 20.04 LTS and Pi-hole DNS on Raspberry Pi. You can go through the process step by step following &lt;a href="https://amelspahic.com/block-ads-tracking-and-telemetry-with-pi-hole-on-raspberry-pi-ubuntu-server-20-04"&gt;Block Ads, Tracking, and Telemetry With Pi-hole on Raspberry Pi (Ubuntu Server 20.04 LTS)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having Pi-hole set up on our home network, we will have a much better internet browsing experience without ads and better control of available resources (if any). Also, maybe you have a network-attached storage (NAS) in your network and would want to have access from anywhere, or you just want a safe browsing experience when connected to public WiFis.&lt;/p&gt;

&lt;p&gt;The setup above is limited only to your home network, and after a couple of days of browsing, you will think - why can't I bring this network setup wherever we go!? Well, &lt;strong&gt;YOU CAN&lt;/strong&gt;. A logical presumption would be to have a way to connect to our home network from anywhere and browse through it. Even when you connect from the other side of the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-private-network"&gt;
  &lt;/a&gt;
  Virtual Private Network
&lt;/h2&gt;

&lt;p&gt;Virtual Private Network (VPN) allows us to connect our devices to another network over the internet in a secure manner. We can browse the internet using other computers' (server) internet connection. &lt;/p&gt;

&lt;p&gt;I am sure you came across internet ads for paid services like ExpressVPN, NordVPN, Surfshark, etc. They are awesome without a doubt, you can &lt;em&gt;fake&lt;/em&gt; your device's IP location and use some geographically limited services like Netflix, but it won't get you to your home network. And you have to pay for it. All VPNs use VPN protocols to create and secure your connection, so why shouldn't you, for your needs?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wireguard-or-openvpn"&gt;
  &lt;/a&gt;
  WireGuard or OpenVPN
&lt;/h2&gt;

&lt;p&gt;Two most popular VPN protocols used today are &lt;a href="https://www.wireguard.com/"&gt;WireGuard&lt;/a&gt; and &lt;a href="https://openvpn.net/"&gt;OpenVPN&lt;/a&gt;. There is no specific reason why I choose one over the other, but it is said that WireGuard is much faster than OpenVPN and it consumes around 15% less data, handles network changes better and appears to be just as secure (I don't know who said it).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wireguard-or-openvpn-on-raspberry-pi"&gt;
  &lt;/a&gt;
  WireGuard (or OpenVPN) on Raspberry Pi
&lt;/h2&gt;

&lt;p&gt;We could go through the manual installation instructions for WireGuard, but there is a great tool, &lt;a href="https://github.com/pivpn/pivpn"&gt;PiVPN &lt;/a&gt; which allows us to install the desired VPN very easily.&lt;/p&gt;

&lt;p&gt;Log in to your Raspberry Pi directly or via Secure Shell (SSH), and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -L https://install.pivpn.io | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The process will use &lt;strong&gt;sudo&lt;/strong&gt; and install the necessary dependencies. Just wait for it to do its job. After installing the necessary packages, you will be prompted with graphical options:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2wxm9DgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640544813377/BeZ1P9P-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wxm9DgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640544813377/BeZ1P9P-7.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
We previously talked about &lt;a href="https://amelspahic.com/block-ads-tracking-and-telemetry-with-pi-hole-on-raspberry-pi-ubuntu-server-20-04"&gt;setting up a static IP address on Ubuntu Server 20.04&lt;/a&gt;. PiVPN won't configure static IP for us because we are not using Raspbian OS for our Raspberry Pi.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3CfhVeZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640544999740/mwf8nWTaL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3CfhVeZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640544999740/mwf8nWTaL.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
Just accept default options, and be sure to select the WireGuard option when prompted.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--63JQfvSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545030423/9bDTuh2FVH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--63JQfvSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545030423/9bDTuh2FVH.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
You can change the default WireGuard port if necessary but have in mind that you will need it later, so make sure you remember it (I will use the default option, port 51820)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qesS5MyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545134762/BnjHc3f1y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qesS5MyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545134762/BnjHc3f1y.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
If you have a Pi-hole installation, PiVPN will detect it and ask if you want to use it as a DNS.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--53eOgphU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545215642/8a7H6sluS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--53eOgphU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545215642/8a7H6sluS.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
In the next steps, you will be prompted to use Public IP or DNS. Choose your public IP address.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwXI7zvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545407415/u1ocvG3gb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwXI7zvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545407415/u1ocvG3gb.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If your ISP provides you with a dynamic IP address, there is a solution in the next post. For now, continue with this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Continue with the process and accept unattended upgrades to the server.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Po2MFlV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545588594/O8aP2NUO9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Po2MFlV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545588594/O8aP2NUO9.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;br&gt;
Just follow the process and accept to reboot Raspberry Pi after the installation, so everything is set up. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGk9mMo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545646885/0JehEKWts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGk9mMo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640545646885/0JehEKWts.png" alt="image.png" width="833" height="622"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you use Pi-hole as a DHCP server, you won't have an internet connection while Raspberry Pi is rebooting. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#port-forwarding"&gt;
  &lt;/a&gt;
  Port Forwarding
&lt;/h3&gt;

&lt;p&gt;To be able to connect to your Raspberry Pi VPN server, we need to set up a port forwarding option on your router. I have Technicolor CGA2121, but you can find that on every router, under settings (or advanced settings, usually under the &lt;strong&gt;Application &amp;amp; Gaming&lt;/strong&gt; option).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sQZ6QTAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640546167647/yX2S9HPvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQZ6QTAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640546167647/yX2S9HPvw.png" alt="image.png" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adding-vpn-client"&gt;
  &lt;/a&gt;
  Adding VPN Client
&lt;/h3&gt;

&lt;p&gt;To add a new VPN client user, use the integrated PiVPN command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pivpn add
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Choose your client name and hit ENTER.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You may have a warning to Run 'systemctl daemon-reload' to reload units, so just do it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now your client is ready to connect. You can find installation files  &lt;a href="https://www.wireguard.com/install/"&gt;here&lt;/a&gt; for different operating systems. &lt;/p&gt;

&lt;p&gt;For Android and iOS devices, there is a WireGuard application on PlayStore/AppStore, so download it. To quickly set up WireGuard VPN, from your Raspberry Pi run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pivpn -qr
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have a QR code on the screen which you can read from your mobile phone to set it up.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIKULJyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640547410681/hQKMEcyx6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIKULJyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640547410681/hQKMEcyx6.png" alt="image.png" width="880" height="772"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now when you leave your home network, you are always a &lt;em&gt;flip of the switch&lt;/em&gt; away from it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#pihole-dns-troubleshooting"&gt;
  &lt;/a&gt;
  Pi-hole DNS Troubleshooting
&lt;/h2&gt;

&lt;p&gt;If you installed PiVPN before Pi-hole, edit the PiVPN configuration with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo nano /etc/pivpn/wireguard/setupVars.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Remove the &lt;code&gt;pivpnDNS1=[...]&lt;/code&gt; and &lt;code&gt;pivpnDNS2=[...]&lt;/code&gt; lines&lt;/li&gt;
&lt;li&gt;Add this line &lt;code&gt;pivpnDNS1=192.168.0.50&lt;/code&gt; (your Pi-hole IP might be different) to point clients to the Pi-hole IP&lt;/li&gt;
&lt;li&gt;Save the file with &lt;code&gt;Ctrl+X, Y&lt;/code&gt; and exit&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pihole -a -i local&lt;/code&gt; to tell Pi-hole to listen on all interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-ip-address"&gt;
  &lt;/a&gt;
  Dynamic IP Address
&lt;/h2&gt;

&lt;p&gt;If you are lucky enough or you are not sorry to pay for the static IP address, you can skip this part. Otherwise, here is how to &lt;/p&gt;

&lt;p&gt;%[&lt;a href="https://amelspahic.com/set-up-dynamic-dns-for-dynamic-ip-addresses-at-home"&gt;https://amelspahic.com/set-up-dynamic-dns-for-dynamic-ip-addresses-at-home&lt;/a&gt;]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;I hope this tutorial will help you set up your VPN communication and bring even more privacy, security, and comfort while browsing the internet.&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>tutorial</category>
      <category>linux</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Get started with ES6 JavaScript for writing Node.js using Express</title>
      <author>Toby Olushola</author>
      <pubDate>Fri, 31 Dec 2021 12:29:49 +0000</pubDate>
      <link>https://dev.to/geekygeeky/get-started-with-es6-javascript-for-writing-nodejs-using-express-544h</link>
      <guid>https://dev.to/geekygeeky/get-started-with-es6-javascript-for-writing-nodejs-using-express-544h</guid>
      <description>&lt;p&gt;Have you ever tried writing &lt;em&gt;ES6 JavaScript&lt;/em&gt; for frontend applications, and it caught your fancy, and you do not want to stop, but got into backend development using Node.js, and you had to go back to the old-fashioned ES5 syntax? Well, in this article, I will guide you on how to set up an ES6 transpiler for writing ES6 codes on the server-side using node.js and babel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-es6-"&gt;
  &lt;/a&gt;
  What is ES6 ?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;ES6 refers to version 6 of the ECMA Script programming language. ECMA Script is the standardized name for JavaScript, and version 6 is the next version after version 5, released in 2011. It is a significant enhancement to the JavaScript language and adds many more features to simplify large-scale software development. &lt;br&gt;
Find out more &lt;a href="https://www.makeuseof.com/tag/es6-javascript-programmers-need-know/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-babel"&gt;
  &lt;/a&gt;
  What is Babel?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Babel is a toolchain mainly used to convert ECMAScript 2015+(ES6+) code into a backwards-compatible version of JavaScript in current and older browsers or environments. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This also means that you can use Babel to convert our ES6 codes for backward compatibility when writing node.js applications.&lt;/p&gt;

&lt;p&gt;A normal ES5 code snippet for importing express will look like this...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using ES6 syntax, all you need to do is just import your package like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When writing this article, you can use some ES6 JavaScript syntax in your node.js project, but not all are supported yet. We will proceed to set up our node.js application to use ES6+ syntax.&lt;/p&gt;

&lt;p&gt;I assume you have prior knowledge of writing JavaScript/node.js applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-our-hands-dirty"&gt;
  &lt;/a&gt;
  Let's get our hands dirty🤸
&lt;/h3&gt;

&lt;p&gt;If you do not have Node.js installed, you can download it from the &lt;a href="https://nodejs.org/en/"&gt;Node.js website&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We will use NPM as our package manager, and you can use yarn if you prefer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create a new folder, open it in your preferred command line, and proceed with the following steps.&lt;/p&gt;

&lt;p&gt;Type &lt;code&gt;npm init&lt;/code&gt; on your command line and follow the prompt.&lt;/p&gt;

&lt;p&gt;This helps to initialize a new node project and install the necessary packages for our application.&lt;/p&gt;

&lt;p&gt;Next, we installed the necessary packages to set up our application for writing Es6 JavaScript codes.&lt;/p&gt;

&lt;p&gt;Enter the following commands in your CMD to install Babel and its dependencies. As stated above, Babel is the transpiler needed to compile our ES6 codes to ES5.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Install packages:&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @babel/cli @babel/core @babel/node @babel/preset-env --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i rimraf nodemon --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you install all the packages, open the folder using your preferred editor if you have not done that earlier.&lt;/p&gt;

&lt;p&gt;We will edit the package.json file to continue the setup for running our application and build the code for deployment on any hosting platform. We will update the script's section of our package.json file to complete the setup.&lt;/p&gt;

&lt;p&gt;Here is what it should look like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "scripts": {
    "test": "echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1",
    "build": "rimraf dist &amp;amp;&amp;amp; babel src --out-dir dist  --copy-files",
    "start": "node dist/app.js",
    "start:dev": "nodemon --exec babel-node src/app.js"
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explaining-the-scripts-properties"&gt;
  &lt;/a&gt;
  Explaining the &lt;em&gt;scripts&lt;/em&gt; properties
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;: This command creates our ES6 codes using babel and dumps the output inside the dist directory (automatically deleted and recreated on every build). The dist directory contains the duplicate files and folder in our base directory. The only difference is that it includes codes transpiled from ES6 to ES5.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;start&lt;/strong&gt;: This command starts our node.js application after converting it to ES5 codes inside the dist directory.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;start:dev&lt;/strong&gt;: This command starts our application using nodemon(it helps to restart our server automatically when any JavaScript file changes) and converts all ES6 codes in-memory to ES5 using babel-node. You do not want to do this in production. That is why we have the build command for more optimized performance.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we create a &lt;code&gt;.babelrc&lt;/code&gt; file in the root directory of our application, this file is used to add configurations for our babel package in order to work correctly. &lt;br&gt;
Copy the code below into the file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "presets": [
    ["@babel/env", {
      "targets": {
        "node": "current"
      }
    }]
  ],
  "plugins": [
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread"
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Follow this &lt;a href="https://babeljs.io/docs/en/"&gt;link&lt;/a&gt; to learn more about using babel.&lt;/p&gt;

&lt;p&gt;Furthermore, let us create a basic express application to display an array of items using the ES6 syntax. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Install express&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i express --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Create a new folder called &lt;em&gt;src&lt;/em&gt; in your project's root directory&lt;/strong&gt;&lt;br&gt;
create an app.js file inside the src folder and copy the codes below inside the file you just created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Our node.js app works&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`App listening at port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Run your development server&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run start:dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should have something like this &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bkPLgY8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir7bnkmymcuhgnjvqeoz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkPLgY8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir7bnkmymcuhgnjvqeoz.png" alt="Screenshot of cmd starting development server" width="709" height="248"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;http://localhost:3000&lt;/code&gt; on your browser, and you should see a JSON response displayed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Create an items.js file in the src folder&lt;/strong&gt;&lt;br&gt;
paste the following code below inside the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;cartItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;football&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ps5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cd-rom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jane doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;cartItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mobile phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;game pad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice we used &lt;code&gt;export default&lt;/code&gt; instead of &lt;code&gt;module.exports&lt;/code&gt;, we can do this thanks to the ES6 syntax for writing JavaScript. &lt;br&gt;
Save the file and watch your server restart automatically.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Import items module inside your app.js&lt;/strong&gt;&lt;br&gt;
Import your custom module inside app.js and return it from a GET route &lt;code&gt;/items&lt;/code&gt;, your code should look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./items&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Our node.js app works&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/items&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fetched all items&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`App listening at port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, we are done, now save all files and your server should restart automatically. &lt;/p&gt;

&lt;p&gt;Open your browser, then go to &lt;code&gt;http://localhost:3000/items&lt;/code&gt;, you should see a success response with all your items displayed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LD2Cr6Aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnlygoanwkotupucs4ih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LD2Cr6Aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnlygoanwkotupucs4ih.png" alt="Image showing all items from our REST-API response" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you encountered any issues, make sure you followed all the steps correctly or comment below, and I will definitely reply you.&lt;br&gt;
You can expand this project using your desired architecture, web framework, e.g. Fastify, or even integrating a database, it is solely up to you.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;This article taught you how to write ES6 node applications using babel for backward compatibility. You can find the codebase for this article on GitHub, &lt;a href="https://github.com/GeekyGeeky/es6_setup_node"&gt;follow this link&lt;/a&gt;, don't forget to follow me  👀&lt;/p&gt;

&lt;p&gt;Watch out for my article on getting started with writing Typescript for your node.js application.&lt;/p&gt;

&lt;p&gt;I hope you found this helpful, Chao ❤️&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>express</category>
      <category>babel</category>
    </item>
    <item>
      <title>Feature Flags with Next.js and GrowthBook</title>
      <author>Jeremy Dorn</author>
      <pubDate>Fri, 31 Dec 2021 12:05:08 +0000</pubDate>
      <link>https://dev.to/jdorn/feature-flags-with-nextjs-and-growthbook-4ide</link>
      <guid>https://dev.to/jdorn/feature-flags-with-nextjs-and-growthbook-4ide</guid>
      <description>&lt;p&gt;Deploying code to production is scary and stressful. There's nothing worse than seeing an unexpected spike or dip in your metrics as soon as your code goes live. Your heart is racing as you quickly revert the commit. The site is broken and there's nothing you can do but wait 5+ agonizing minutes for your CI/CD pipeline to finish. And that's the best case scenario when a simple code revert is possible. Need to deal with rolling back database or infrastructure changes? Good luck with that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UJJNwOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkloophh8enour3h4djf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UJJNwOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkloophh8enour3h4djf.jpg" alt="Broken server" width="640" height="519"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@etaplus?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;ETA+&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/broken-computer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#feature-flags-to-the-rescue"&gt;
  &lt;/a&gt;
  Feature flags to the rescue!
&lt;/h2&gt;

&lt;p&gt;Luckily, there's a better way to deploy code thanks to Feature Flags.  With feature flags, your deploy is easy - the new code goes live, but everyone just continues getting the old experience initially. Feature flags decouple deployment and release.  It's still possible to break things during deploy, but a lot less likely when no one is seeing the code right away. &lt;/p&gt;

&lt;p&gt;Using remote configuration, you are able to instantly update which version of the code users see without a deploy.  Maybe you start by only enabling it for you and your teammates while you click around and see if it's working.  Then you can gradually roll it out to 100% of your users while you watch your metrics.  If you do notice a bug, you can instantly just switch everyone back to the old code while you take your time debugging and fixing the problem. &lt;/p&gt;

&lt;p&gt;By using feature flags, you just decreased your downtime from 5+ minutes to mere seconds and limited the impact to a small percent of your traffic. Plus, you decreased the stress levels of you and your teammates 100 fold, which is always a good thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tutorial"&gt;
  &lt;/a&gt;
  Tutorial
&lt;/h2&gt;

&lt;p&gt;In this tutorial, I'm going to walk through how to add feature flags as part of your development process. I'll be using a standard Next.js app and &lt;a href="https://github.io/growthbook/growthbook"&gt;GrowthBook&lt;/a&gt; as the feature flagging platform.&lt;/p&gt;

&lt;p&gt;GrowthBook is better known as an open source A/B testing platform, but it is also very capable at feature flagging. Other popular open source options are &lt;a href="https://github.com/Unleash/unleash"&gt;Unleash&lt;/a&gt; and &lt;a href="https://github.com/Flagsmith/flagsmith"&gt;FlagSmith&lt;/a&gt;. For paid platforms, there is &lt;a href="https://launchdarkly.com/"&gt;LaunchDarkly&lt;/a&gt; and &lt;a href="https://www.split.io/"&gt;Split.io&lt;/a&gt;, although these can get prohibitively expensive for many teams.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-nextjs-app"&gt;
  &lt;/a&gt;
  Step 1: Next.js App
&lt;/h3&gt;

&lt;p&gt;Let's start by getting a basic Next.js app running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create next-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then cd into the newly create directory and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
yarn dev &lt;span class="nt"&gt;-p&lt;/span&gt; 4000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: Both GrowthBook and Next.js run on port 3000 by default, so we're making our Next.js app use 4000 instead to avoid conflicts.&lt;/p&gt;

&lt;p&gt;Visit &lt;a href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; and you should see the application running!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-growthbook-account"&gt;
  &lt;/a&gt;
  Step 2: GrowthBook Account
&lt;/h3&gt;

&lt;p&gt;For this tutorial, we'll run GrowthBook locally, but you can also use a free cloud-hosted account at &lt;a href="https://app.growthbook.io"&gt;https://app.growthbook.io&lt;/a&gt; instead if you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/growthbook/growthbook.git
&lt;span class="nb"&gt;cd &lt;/span&gt;growthbook
docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, visit &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; and create your first user account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lplARebx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dqy45h98w54reyexxon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lplARebx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dqy45h98w54reyexxon.png" alt="GrowthBook Signup Screen" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, since we're just going to be using feature flags and not running A/B tests, we can skip the normal "Get Started" flow and click on &lt;code&gt;Features&lt;/code&gt; in the left nav instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3iw5yg5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqljed97eicmlzj1bf1i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iw5yg5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqljed97eicmlzj1bf1i.png" alt="GrowthBook Features" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there are 3 steps to use features. First, we need to define our targeting attributes.  Second, we need to install the GrowthBook SDK into our Next.js application and do the initial integration.  And Lastly, we can create a feature and start using it in our app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-define-targeting-attributes"&gt;
  &lt;/a&gt;
  Step 3: Define Targeting Attributes
&lt;/h3&gt;

&lt;p&gt;Targeting attributes are used to control what feature value each user gets. You typically want to include a combination of user-level data (id, email), session-level data (browser, geolocation), and page-level data (url). This gives your team maximum flexibility when releasing and experimenting with features.&lt;/p&gt;

&lt;p&gt;All we need to enter in the GrowthBook UI are the names and data types of the attributes. The next step, when we install the React SDK, is where we will specify the actual values for these attributes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51JCZD5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0aa66rl1hegfelp4jsm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51JCZD5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0aa66rl1hegfelp4jsm.png" alt="GrowthBook Targeting Attributes" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can just stick with the defaults. Click &lt;code&gt;Save Attributes&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-integrate-the-growthbook-react-sdk-into-our-nextjs-app"&gt;
  &lt;/a&gt;
  Step 4: Integrate the GrowthBook React SDK into our Next.js app
&lt;/h3&gt;

&lt;p&gt;GrowthBook will generate some integration code for you, including a unique API endpoint to load your features from.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oSRVnexo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8yceihf8hiwrqyffum3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oSRVnexo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8yceihf8hiwrqyffum3.png" alt="GrowthBook Integration Code" width="800" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We first need to install the GrowthBook React SDK in our Next.js app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @growthbook/growthbook-react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can modify the generated React code to work with the Next.js framework.  Modify the file &lt;code&gt;pages/_app.js&lt;/code&gt; with the following contents:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../styles/globals.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;GrowthBook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;GrowthBookProvider&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@growthbook/growthbook-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FEATURES_ENDPOINT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:3100/api/features/key_abc123&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Create a GrowthBook instance&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;growthbook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GrowthBook&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;trackingCallback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;experiment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Viewed Experiment&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;experiment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
  &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="nx"&gt;router&lt;/span&gt; 
&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Refresh features and targeting attributes on navigation&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FEATURES_ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;growthbook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setFeatures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;growthbook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttributes&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;123&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;loggedIn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deviceId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;abcdef123456&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;employee&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;company&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;acme&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;country&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;US&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;browser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userAgent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GrowthBookProvider&lt;/span&gt; &lt;span class="na"&gt;growthbook&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;growthbook&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GrowthBookProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replace the &lt;code&gt;FEATURES_ENDPOINT&lt;/code&gt; constant with the one you see in your instructions modal in GrowthBook.&lt;/p&gt;

&lt;p&gt;In a real application, you would pull some of the targeting attributes from your authentication system or an API, but let's just leave them hard-coded for now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-create-a-feature-in-growthbook"&gt;
  &lt;/a&gt;
  Step 5: Create a Feature in GrowthBook
&lt;/h3&gt;

&lt;p&gt;Back in the GrowthBook application, we can create a new feature.  For this tutorial, we'll make a simple on/off feature flag that determines whether or not we show a welcome banner on our site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9mLpPkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2c4yuj4f4xrdspn7krb0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9mLpPkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2c4yuj4f4xrdspn7krb0.png" alt="GrowthBook Create Feature" width="803" height="734"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key we chose (&lt;code&gt;welcome-message&lt;/code&gt;) is what we will reference when using the GrowthBook SDK.&lt;/p&gt;

&lt;p&gt;We can now edit &lt;code&gt;pages/index.js&lt;/code&gt; and conditionally render a welcome message based on the state of the feature:&lt;/p&gt;

&lt;p&gt;Add an import statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;IfFeatureEnabled&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@growthbook/growthbook-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then put your welcome message somewhere on the page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;IfFeatureEnabled&lt;/span&gt; &lt;span class="na"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"welcome-message"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I hope you enjoy this site and have a great day!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;IfFeatureEnabled&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you refresh your Next.js app, you'll notice the welcome message is not rendered.  This is because when creating the feature, we set the default value to off. At this point, we could safely deploy our change to production and not worry about breaking anything.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-turn-on-the-feature-for-your-team"&gt;
  &lt;/a&gt;
  Step 6: Turn on the feature for your team
&lt;/h3&gt;

&lt;p&gt;Now we can add rules to the feature to turn it on for specific groups of users.&lt;/p&gt;

&lt;p&gt;In the hard-coded targeting attributes we set in &lt;code&gt;pages/_app.js&lt;/code&gt;, we designated ourselves as an internal employee.  Let's use this attribute to turn on the feature for the whole internal team:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4r5KgDAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oysvcxmrr7jfwrdsjjjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4r5KgDAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oysvcxmrr7jfwrdsjjjd.png" alt="GrowthBook Targeting Rule" width="804" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Refresh your Next.js app and you should now see the welcome message appearing! (Note: it might take up to 30 seconds for the API cache to refresh).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LO_BLdLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03sq2nkbutr2sk4a2duu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LO_BLdLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03sq2nkbutr2sk4a2duu.png" alt="NextJS app with feature" width="730" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you change &lt;code&gt;employee&lt;/code&gt; to false in &lt;code&gt;pages/_app.js&lt;/code&gt;, you should see the welcome message disappear.&lt;/p&gt;

&lt;p&gt;The best part about targeting attributes in GrowthBook is that they are evaluated entirely locally.  Sensitive user data is never sent over the network and there is no performance penalty. Some other libraries require an HTTP request to evaluate a feature for a user and this is often a deal breaker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-7-gradually-roll-out-to-your-users"&gt;
  &lt;/a&gt;
  Step 7: Gradually roll out to your users
&lt;/h3&gt;

&lt;p&gt;After you test the new feature within your team, you probably want to start rolling it out to real users.&lt;/p&gt;

&lt;p&gt;We can do that with another rule in GrowthBook:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qw6D_fY4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9imvgccpscubv53du62.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qw6D_fY4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t9imvgccpscubv53du62.png" alt="GrowthBook Rollout Rule" width="803" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the targeting attributes in &lt;code&gt;pages/_app.js&lt;/code&gt;, make sure &lt;code&gt;employee&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. That will ensure you skip the first rule we made and fall into the second rollout rule.&lt;/p&gt;

&lt;p&gt;The GrowthBook SDK uses deterministic hashing to figure out whether or not someone is included in a rollout.  Basically, it hashes together the selected targeting attribute (&lt;code&gt;id&lt;/code&gt;) and the feature key (&lt;code&gt;welcome-message&lt;/code&gt;) and coverts it to a float between 0 and 1.  If that float is less than or equal to the rollout percent, the user is included. This ensures a consistent UX and prevents one user from constantly switching between ON and OFF as they navigate your app.&lt;/p&gt;

&lt;p&gt;Try changing the user id in the targeting attributes in &lt;code&gt;pages/_app.js&lt;/code&gt; to a few different random strings and see what happens.  You should notice about half of the time the welcome message shows up and half of the time it doesn't.  The rollout is working!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-and-next-steps"&gt;
  &lt;/a&gt;
  Conclusion and Next Steps
&lt;/h2&gt;

&lt;p&gt;Now you've seen how to set up and integrate GrowthBook into your Next.js application, use feature flags in your code, remotely enable the feature in GrowthBook based on targeting conditions, and gradually roll out the feature to your users.&lt;/p&gt;

&lt;p&gt;Once you do the initial integration work, it only takes a few seconds to wrap your code in feature flags. Once you realize how easy and stress-free deploys can be, there's no going back.&lt;/p&gt;

&lt;p&gt;Next Steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look at the &lt;a href="https://docs.growthbook.io/lib/react"&gt;GrowthBook React SDK docs&lt;/a&gt; for more ways to use feature flags in your code besides the &lt;code&gt;&amp;lt;IfFeatureEnabled&amp;gt;&lt;/code&gt; component&lt;/li&gt;
&lt;li&gt;Read more about &lt;a href="https://docs.growthbook.io/app/features"&gt;using features in GrowthBook&lt;/a&gt;, including how to use complex feature values (not just ON/OFF), run A/B tests, and analyze the impact of your features using data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy feature flagging!&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Need A Simple and Powerful Password Manager? Try this!</title>
      <author>Achchutha_Rengan</author>
      <pubDate>Fri, 31 Dec 2021 11:58:08 +0000</pubDate>
      <link>https://dev.to/achchutharengan/need-a-simple-and-powerful-password-manager-try-this-5h8n</link>
      <guid>https://dev.to/achchutharengan/need-a-simple-and-powerful-password-manager-try-this-5h8n</guid>
      <description>&lt;p&gt;Hi Guys,&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#i-have-made-a-password-manager"&gt;
  &lt;/a&gt;
  I have made a Password Manager
&lt;/h1&gt;

&lt;p&gt;which is written on dotnet and runs wtih local db. So, No Need of Internet!. Tired of remembering passwords, try this out. The name is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FXZWGu5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvoetdomh6nicjwgpr74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FXZWGu5k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zvoetdomh6nicjwgpr74.png" alt="Image description" width="174" height="84"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have gone through all password managers most of them are more complex in UI and needs more time to understand but also requires money after certain time of usage, some are limited to storage and some are only online password managers. So, I made a simple and more secure password manager. The same operations that all other password managers do, but in &lt;strong&gt;offline&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Operations are on Initial Phase, But it functions well, Some of them are given below: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SignUp&lt;/li&gt;
&lt;li&gt;SignIn&lt;/li&gt;
&lt;li&gt;Create, Read, Update, Delete Passwords&lt;/li&gt;
&lt;li&gt;Copy Decrypted Passwords For Instant Use&lt;/li&gt;
&lt;li&gt;File Encryption and Decryption&lt;/li&gt;
&lt;li&gt;Update Master Password&lt;/li&gt;
&lt;li&gt;Export User Stored Passwords&lt;/li&gt;
&lt;li&gt;View Decrypted Version of Browser Passwords&lt;/li&gt;
&lt;li&gt;Export Browser Passwords&lt;/li&gt;
&lt;li&gt;Remember User Credentials&lt;/li&gt;
&lt;li&gt;SignOut&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's free and open source so, if you want to modify the code, feel free to do!.&lt;/p&gt;

&lt;p&gt;Here's the Link to Github Page - &lt;a href="https://github.com/AchchuthaRengan/Mona/releases/tag/v1.0.2"&gt;Mona - Password Manager&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>security</category>
      <category>dotnet</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Happy New Year! (with p5.js)</title>
      <author>ashwins-code</author>
      <pubDate>Fri, 31 Dec 2021 11:35:35 +0000</pubDate>
      <link>https://dev.to/ashwinscode/happy-new-year-2n3c</link>
      <guid>https://dev.to/ashwinscode/happy-new-year-2n3c</guid>
      <description>&lt;p&gt;Happy New Years everyone!&lt;/p&gt;

&lt;p&gt;Here is a small page I made with p5.js, which has interactive fireworks and a countdown to midnight&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ashwins-code.github.io/New-Years-Fireworks/index.html"&gt;https://ashwins-code.github.io/New-Years-Fireworks/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github repo is &lt;a href="https://github.com/ashwins-code/New-Years-Fireworks/tree/gh-pages"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>p5js</category>
      <category>javascript</category>
      <category>programming</category>
      <category>creative</category>
    </item>
    <item>
      <title>The best way to learn how to code</title>
      <author>Azubuike Duru </author>
      <pubDate>Fri, 31 Dec 2021 11:12:55 +0000</pubDate>
      <link>https://dev.to/azubuikeduru/the-best-way-to-learn-how-to-code-3a5b</link>
      <guid>https://dev.to/azubuikeduru/the-best-way-to-learn-how-to-code-3a5b</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Personally, I feel I am the right person to talk on this subject because over the past few years  I have struggled a lot on how to just know this coding thing😁. Most times, I gave up thinking it was not just my thing. I mean, how can it be since I am so terrible at becoming one. Well, today I’m a good front-end web developer and also a web/graphic designer too and I will be sharing with you the few steps I took at becoming one. Stay with me till the end and you might just unlock that programming path of yours starting from today. I hope you enjoy and put it to practice too🤗&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goal"&gt;
  &lt;/a&gt;
  Goal
&lt;/h2&gt;

&lt;p&gt;At the end of this tutorial readers will be able to identify the steps to take in breaking free from any hurdle and mindset holding them from beginning their journey into the Tech world and truly becoming proficient in their programming career and life. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-a-programmercoder"&gt;
  &lt;/a&gt;
  Who is a Programmer(coder)?
&lt;/h2&gt;

&lt;p&gt;A programmer is an individual that creates computer software or applications by giving the computer specific programming instructions. A programmer also may specialize in one or more computing fields, like database, security or software/firmware/mobile/Web development etc. &lt;br&gt;
The Tech world is broad that you can’t afford not to choose a niche in your journey to building up your career in Tech. Choosing your speciality does a lot of good things for you. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; It narrows your perspective towards one particular field Which  makes you look professional/marketable. You must have an identity. You can’t be doing everything &lt;/li&gt;
&lt;li&gt; It tells and guild you on what to learn. Is not everything you’re suppose to be open to learn. There is already much to learn in any field of study&lt;/li&gt;
&lt;li&gt; Knowing your specialty on time help you get deeper in the field in time. While people are studying different unrelated stuffs, you’re focused and learning deeper and more in your desired specialization. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Is there a secret shortcut in learning how to code faster?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;But before we dive into that let me say this, there are no shortcuts to learning how to code, you’ve got to put in the work. Coding is a skill and the only way you get better at a skill is by practicing, practicing and practicing. It’s always easier said than done. &lt;/p&gt;

&lt;p&gt;Let’s digress a little. Let me even ask you why do you want to learn how to code in the first place?😂 Take a few minutes (or a day) to think about the reasons—the real reasons—why you want to learn how to code and be very honest with yourself because it will go a long way in your new journey of becoming something new- a programmer 👨‍💻. Are you looking to make a big career change? Do you want to create the next greatest app? Or are you just thrill about what programmers do and what they can use it for. &lt;/p&gt;

&lt;p&gt;Your answer can also help you determine what specialty to venture into☺️ and whatever your answer may be it’s a good force to energize you in adding it to your skill set. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Best way to learn&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you’re learning how to code or how to do something else, some rules can be applied generally. Some of which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn one thing at a time: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s easy to get distracted or in-thrilled by the ever unending development in the Tech world. So many things to keep update with and learn even in a particular feed. But knowing how to pick a particular programming language and sticking to it till you become professionally good at it is a very good practice in becoming a good programmer. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be consistent: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A lot of people struggle with this one. It’s one of the reasons why I wasted so much time learning how to become a programmer. Consistency requires discipline and determination. It doesn’t just end by knowing how to code, everyday rehearsal is a requirement. Knowledge is of no value unless you put it into practice over and over again until it becomes a part of you. I will always advice newbies to code at least five lines of code everyday whether you feel like or not. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read and Write: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ever wondered why those two words always go along(“read and read”)? Well, that’s because they need each other for better understanding and mastering. Just like you can’t read what you didn’t write, also you can’t write what you didn’t read. The best practice to remember something quicker is to jolt down points or useful phrases while you read. There’s a mastery that comes out of such practice. Ever wondered why people write articles of what they currently learning on platforms like this while Studying? Yeah yeah yeah; it could be to teach others but primarily it’s for mastery first. &lt;br&gt;
So while you learn anything, learn to form note, it helps a lot. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Practice! Practice!! Practice!!! 🗣🗣🗣: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a reason why am shouting this one o😂😂that is because it is one of the most important step I took in becoming a good programmer. Show me a good programmer out there you know of and i bet he/she takes this step very seriously. Practice makes perfect and it’s so true when it comes to programming. I know a lot of good programmers that learn by watching people do it and just practicing  along side without jolting or waiting to finish up a course online first. Practicing is a major key &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Starting your journey in the Tech world might just be the most rewarding thing you can do for yourself as we move to the next year. So many opportunities await  you in the world where everything is digitally possible and your imagination know no bound. It’s worth every sacrifice and effort you can think of putting this next year.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Wrap up 2021 with these VS Code extensions</title>
      <author>Hamza Ahmad</author>
      <pubDate>Fri, 31 Dec 2021 11:08:03 +0000</pubDate>
      <link>https://dev.to/pythonbutsnake/wrap-up-2021-with-these-vs-code-extensions-19af</link>
      <guid>https://dev.to/pythonbutsnake/wrap-up-2021-with-these-vs-code-extensions-19af</guid>
      <description>&lt;p&gt;Visual Studio Code is arguably the most popular IDE at the moment for quite a while now. 2021 was no different for this successful code editor. The wide range of different features that VS Code allows us to use is what makes it special. One of the things that stands out about VS Code is the massive number of extensions it provides you. Today we will have a look at some of the distinct VS Code Extensions that every developer should install by the end of this year. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#visual-studio-intellicode"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode"&gt;Visual Studio IntelliCode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension is based on Artificial Intelligence and it recommends code completion automatically. It also gives various development features based on Artificial Intelligence. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oLS6xAD9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r36x3fgapnwlbqhhqsgb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLS6xAD9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r36x3fgapnwlbqhhqsgb.png" alt="Image description" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#peacock"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock"&gt;Peacock&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension adds various colors to different windows of VS Code. While working on the front-end and back-end at the same time, you can add different colors to identify which repo you are working on. It also helps you add colors in live share and remote integration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8p0mhTmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3v4gc1658j37qjy3nv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8p0mhTmq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3v4gc1658j37qjy3nv.png" alt="Image description" width="880" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#regex-previewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=chrmarti.regex"&gt;Regex Previewer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Regular expressions are often confusing to understand. Regex Previewer gives you a separate document similar to your regex.&lt;br&gt;
The extension provides many examples of comparisons, so it is much easier to quickly and accurately regex the various use cases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=chrmarti.regex"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZtBCfMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2in5l9aiijpdafuv0vz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZtBCfMb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2in5l9aiijpdafuv0vz.png" alt="Image description" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blox"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.vsblox.com/"&gt;blox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;blox is another incredibly useful extension with a mammoth 1500+ drop-in-ready UI snippets. All you have to do is just drag and drop the pre-made code snippets in your project and save a great amount of time writing code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.vsblox.com/"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PghnDugS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtlvbhbfya7wejqqzcdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PghnDugS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtlvbhbfya7wejqqzcdl.png" alt="Image description" width="880" height="239"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bookmarks"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks"&gt;Bookmarks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Bookmark your code at a certain line with this extension so that you can refer to it later. Add the bookmark with the command “ctrl+alt+k” and it is also the same command for toggling the bookmark. “ctrl+alt+l” is the command for jumping to the next bookmark and “ctrl+alt+j” is the command for jumping to the previous bookmark.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KJrJ7QDl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtgp6sl4k69m7dvvg4th.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KJrJ7QDl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtgp6sl4k69m7dvvg4th.png" alt="Image description" width="880" height="212"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quokkajs"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode"&gt;Quokka.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension speeds up development by displaying runtime values in the editor as you code, so you can focus on writing code instead of building custom configs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybJIRIZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6hjp6msbuxgvp18ol9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybJIRIZB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u6hjp6msbuxgvp18ol9f.png" alt="Image description" width="880" height="192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#profile-switcher"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher"&gt;Profile Switcher&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Profile Switcher helps you create various profiles on VS code that you can use for different reasons. This is a must-have extension for those who use VS code for more than one reason. You can save specific extensions for each profile as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaronpowell.vscode-profile-switcher"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vro8aPCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va7anugu4eetshgk76fm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vro8aPCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va7anugu4eetshgk76fm.png" alt="Image description" width="880" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sonarlint"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sonarlint.org/vscode"&gt;SonarLint&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sonarlint is an outstanding extension for lone workers without a team. Basically, it detects code quality and code security issues, and generates reports for the user. Sonarlint can also be used by teams with sonarCube and sonarCloud. It has built-in rules in it but a developer can also mute rules or add new rules. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sonarlint.org/vscode"&gt;Marketplace Link&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fwVzk9Ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwvhwtm5icqvfonq248w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fwVzk9Ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwvhwtm5icqvfonq248w.png" alt="Image description" width="880" height="217"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are going in 2022 without these extensions then you should definitely check out these extensions for better productivity.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>yearinreview</category>
      <category>vscode</category>
      <category>extensions</category>
    </item>
    <item>
      <title>Matrices and Vectors in Game Development</title>
      <author>Fatih Küçükkarakurt</author>
      <pubDate>Fri, 31 Dec 2021 11:05:15 +0000</pubDate>
      <link>https://dev.to/fkkarakurt/matrices-and-vectors-in-game-development-67h</link>
      <guid>https://dev.to/fkkarakurt/matrices-and-vectors-in-game-development-67h</guid>
      <description>&lt;p&gt;Games, especially game graphics, are made up of a lot of mathematics. The mathematics used in game graphics, physics, and so forth can become quite complex and advanced. Having a firm understanding of the different types of mathematics that are used in game development can allow you to have an easier time understanding and implementing the information.&lt;/p&gt;

&lt;p&gt;In this article we review briefly the different types of mathematics that are common in game development. One could write an entire book on game math, so this article will serve as a quick review of the topics you should be familiar with coming into game development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vectors-vertices-and-points"&gt;
  &lt;/a&gt;
  Vectors, Vertices, and Points
&lt;/h2&gt;

&lt;p&gt;Vectors are the fundamental mathematical objects that are used in every 3D game and game engine. Vectors define a direction in virtual space, but they can also be used to define points called vertices (plural of vertex), orientations, or even surface normals, which are the directions surfaces face. For example, a triangle is made up of three of these points. In game related books the terms vertex and vector are often used synonymously to refer to a virtual point.&lt;/p&gt;

&lt;p&gt;Technically, vectors and vertices are different, but they are used the same way most of the time in games. Vectors are spatial directions, and vertices are points of a primitive.&lt;/p&gt;

&lt;p&gt;Vectors come in many types, with the most common ones being 2D, 3D, and 4D. A vector is made up of n number of dimensions that describe the total number of axes it uses. For example, a 2D vector only has an X and Y axis, a 3D vector has an X, Y, and Z axis, and a 4D vector has the same axes as a 3D vector in addition to a W axis. A vector can generally be written as shown below.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;V = (V1, V2, ..., Vn)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In a language such as C or C++ a 3D vector can have the following structures:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vectors can be operated on by scalars, which are floating-point values. For example, you can add, subtract, multiply, and divide a vector with another vector or a scalar. Adding a vector to a scalar, A, can be written as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; 
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same goes for subtraction, multiplication, and division of vectors with other vectors or scalars.&lt;/p&gt;

&lt;p&gt;The length of a vector, also known as the vector’s magnitude, is very common in computer graphics. A vector with a magnitude of 1 is called a unit-length vector or just unit vector, and it refers to a vector that is perpendicular to a point on a surface. The magnitude can be calculated as shown below.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Magnitude = Square_Root( V.x2 + V.y2 + V.z2 )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To create a unit vector from a non–unit vector, all that needs to occur is dividing the vector’s magnitude by the vector itself. This is shown below, where the square root of the square of each added component is divided by the vector.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;V = V / Square_Root( V.x2 + V.y2 + V.z2 )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A normal refers to a unit-length vector.&lt;/p&gt;

&lt;p&gt;Turning a vector into a unit vector is known as normalization and is a highly common operation in computer graphics. Other very common operations are the dot product and cross product vector operations. The dot product of two vectors, also known as the scalar product, calculates the difference between the directions the two vectors are pointing. The dot product is used to calculate the cosine angle between vectors without using the cosine mathematical formula, which can be more CPU expensive, and the result is not another vector, but a scalar value.&lt;/p&gt;

&lt;p&gt;This calculation is used to perform lighting methods. I will write another detailed article on lighting. To calculate the dot product, multiply each component of the two vectors then add them together. This is shown below.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d = ( V1.x * V2.x + V1.y * V2.y + V1.z * V2.z )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The equations used in this article follow the order of operations when calculating values. For example, multiplication occurs before addition and subtraction.&lt;br&gt;
Being able to find the angle of difference between two vectors is useful in lighting, which we look at later. If the dot product between two vectors is 0, the two vectors are perpendicular to one another and are orthogonal. Another thing to note is that the sign of the dot product tells us what side one vector is to another. If the sign is negative, the second vector is behind the first; if it is positive, then it is in front. If it is 0, they are perpendicular.&lt;/p&gt;

&lt;p&gt;The cross product of two vectors, also known as the vector product, is used to find a new vector that is perpendicular to two tangent vectors. This is commonly used to find the direction a polygon is facing by normalizing the cross product of the edge vectors of a triangle. The cross product is calculated by multiplying the cross components together and then adding them all together component by component. This is shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YsUK0LFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6odv5uwying08mrjibzd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YsUK0LFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6odv5uwying08mrjibzd.png" alt="calculating" width="555" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find a triangle’s normal, for example, we first find two edge vectors. This is done by calculating a vector between the first and second point of a triangle and normalizing the result (edge 1) and by doing the same things with the first and third points of the same triangle. The next step is to find the cross product of these two vectors and normalize the results to find the surface’s normal. The direction of the normal depends on the order in which the vertices were defined. If the vertices are clockwise, the direction will point in the opposite direction that it would point if they were counterclockwise, even though it is the same information. &lt;/p&gt;

&lt;p&gt;That equation shows how to find a polygon’s normal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;e1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;  &lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;e2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;V1&lt;/span&gt;  &lt;span class="n"&gt;V3&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;normal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;cross_product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To find a normal of a polygon you only need three points, which form a perpendicular triangle to the surface. Even if the polygon has more than three points, you only need three to find the normal. This assumes that all points fall perpendicular to the polygon’s plane.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transformations"&gt;
  &lt;/a&gt;
  Transformations
&lt;/h2&gt;

&lt;p&gt;When data is submitted in a 3D game, the information is passed to the graphics hardware as 3D data. This data must be processed in a way so that it can be displayed onto a 2D view, which is the screen. During the rendering process of the rendering pipeline, various coordinate spaces are used together to perform this task.&lt;/p&gt;

&lt;p&gt;3D computer graphics incorporate the idea of many different coordinate spaces. A coordinate space represents an object’s relationship to the rest of the scene. For example, the vertices of a 3D model are often stored in object-space, which is a space local to the model itself. To render out an object that is in object-space, it must be transformed to the worldspace position at which you want to render it. World-space is the virtual position and orientation (rotation) of 3D models in the scene.&lt;/p&gt;

&lt;p&gt;It is efficient to specify geometry in one space and then convert it whenever necessary during the rendering process. Say you have two boxes that you want to draw in a 3D scene. If these boxes are 100% identical, it would not be efficient to have two (or more) boxes loaded into memory with different vertex positions if you can just load one box and position it throughout the scene as many times as necessary.&lt;/p&gt;

&lt;p&gt;As another example, imagine that you have a complex scene that you’ve created, and you want to change the positions of objects throughout the scene. Being able to position these object-space models is more efficient than trying to alter the individual points of every model that was specified in world-space.&lt;/p&gt;

&lt;p&gt;When rendering objects in a 3D scene, we use positions and orientations to represent how an object is located. This information is used to create a mathematical matrix that can be used to transform the vertex data of rendered geometry from one space to another. The positions and orientation, which we’ll call orientation for short, are specified in worldspace, which is also known as model-space.&lt;/p&gt;

&lt;p&gt;Once an object in object-space is transformed to world-space, it is transformed to screen-space, which corresponds to the X and Y axes that are aligned to the screen. Since the 3D information has depth and distance with objects that are farther from the camera, a projection is applied to the geometry to add perspective to the data. The projection matrices that are used on geometry are called homogeneous clip space matrices, which clip the geometry to the boundaries of the screen to which they are being rendered. Two types of projection are generally used in video games: orthogonal projection and perspective projection.&lt;/p&gt;

&lt;p&gt;By altering the projection matrix you can alter the field-of-view and other properties of the view to create different visual effects, such as a fish-eye lens, for example. You can also apply a view to the world matrix to account for a virtual camera position and orientation. This is known as the world-view (or model-view) matrix.&lt;/p&gt;

&lt;p&gt;Orthogonal projection maps a 3D object to a 2D view, but objects remain the same size regardless of their distance from the camera. In perspective projection perspective is added to the rendered scene, which makes objects smaller as they move farther from the camera. A comparison of orthogonal and perspective projection is shown below, where both scenes use the exact same information but different projections. Perspective projection uses a horizon, which represents the vanishing point of the view. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D8g8zIUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2e5boa096di0ktv1fc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D8g8zIUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2e5boa096di0ktv1fc.png" alt="orthogonal" width="662" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These coordinate spaces are represented by matrices. Matrices have the ability to be concatenated together into one matrix. For example, if the world-space matrix is combined with the eye-space matrix, it is the model-view matrix and can be used to transform geometric object-space models directly into eyespace. Combining the world, view (camera), and projection together gives you the model-view projection matrix, which is used to transform a vertex into screen space.&lt;/p&gt;

&lt;p&gt;Other spaces such as texture space (tangent space) and light space, for example, are normally used when performing a number of special effects such as bump mapping, shadow mapping, and so on.&lt;/p&gt;

&lt;p&gt;In 3D games, matrices have a lot of uses and are very important. Vectors and matrices are among the most important topics to understand in video games and game graphics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#matrices"&gt;
  &lt;/a&gt;
  Matrices
&lt;/h2&gt;

&lt;p&gt;A matrix is a mathematical structure that is used in computer graphics to store information about a space. In computer graphics matrices are often used for storing orientations, translations, scaling, coordinate spaces, and more. In game development we usually work with 3x3 and 4x4 matrices. A matrix is essentially a table, for example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix3x3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A matrix is a table that can be represented in code as a 2D array or as a set of vectors. Matrices with the same number of rows as columns are called square matrices. A vector can be considered a 1D array, whereas a matrix can be considered an array of vectors that together represent a space. For example, a 33 matrix can be created out of three 3D vectors, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="n"&gt;col1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="n"&gt;col2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="n"&gt;col3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When it comes to orientations in video games, a matrix is used to store rotational and positional information along with scaling. Mathematically, matrices can be added and subtracted by other matrices of the same size by performing each operation on their equivalent table elements. This can be seen as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;M[0] = M1[0] + M2[0], M[1] = M1[1] + M[2], ...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Multiplying matrices is not as straightforward as adding or subtracting. To multiply each matrix, start by multiplying the first element in the first row in matrix A by the first element in the first column in matrix B. The result of this operation is stored in the first column’s first element in a new matrix; let’s call it N. This continues until every element has been processed in the matrices. Travel along the first matrix’s rows and along the second matrix’s columns. To be multiplied, matrices must have the same number of rows and columns, which is not referring to square matrices specifically. When it comes to multiplication, it is not commutative with matrices, and they preserve the determinant. &lt;/p&gt;

&lt;p&gt;Multiplying matrices works as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r1_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r2_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
              &lt;span class="n"&gt;m1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r3_c3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;m2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;r4_c3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;new_mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A matrix is considered an identity matrix if the elements starting from the first element going downward in a diagonal direction are set to 1. As we will discuss later, if we transform a vector against an identity matrix, then nothing will change since we will be literally multiplying the components of a vector by 1, which does not change the value. &lt;/p&gt;

&lt;p&gt;An example of an identity matrix is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can calculate the transpose of a matrix by swapping its rows and columns.&lt;/p&gt;

&lt;p&gt;The determinant of a matrix is like the length of a vector. You can only find the determinant of a square matrix, which has the same number of rows and columns. Matrices that have a nonzero determinant can be inverted. For a matrix to be inverted, not only does it have to be a square matrix, but it cannot contain a row with all zeros.&lt;/p&gt;

&lt;p&gt;A vector can be transformed by a matrix by multiplying the vector against the matrix. This is used in the rendering pipeline to convert vectors from one space to another. When you multiply a vector by a matrix you are applying the matrix’s information to the vector. &lt;/p&gt;

&lt;p&gt;This occurs as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;Vector3D&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A matrix can be used to store a translation (position). In computer graphics, 3x3 matrices are used to store the scaling and rotational information, but if another row is added, for example, if we create a 3x4 or have a 4x4 matrix, the last row can literally store the X, Y, and Z positional information. To translate a matrix, set the last row to the position you want. &lt;/p&gt;

&lt;p&gt;This is shown in the following pseudo-code (assuming M is an array that represents the matrix):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A vector can be scaled by a matrix. Check out the examples we made. By multiplying a vector against the matrix, we would have effectively multiplied each component of the vector with the three values in the matrix that represent the X, Y, and Z axes. If each of these elements in the matrix is equal to 1, that is the same as multiplying a vector by 1, which does not change its value. However, a value other than 1 scales the vector, with values less than 1 making it smaller and values greater than 1 making it larger. If you are working with matrices in video games, these three elements of a matrix are used to store the scaling information. &lt;/p&gt;

&lt;p&gt;An example of a scaling matrix (the 3x3 part of a 4x4 matrix) is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scale_val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scale_val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scale_val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use matrices for rotations. To perform rotations in 3D you need at least a 3x3 matrix. Rotations can be performed around an axis or arbitrary axes. When you multiply a vector by a matrix that stores rotation values, it rotates the vector based on that information. &lt;/p&gt;

&lt;p&gt;This can be seen as follows, where you can rotate along the X, Y, and Z axes by creating a rotation matrix:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;sine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;cosine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;angle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;cosAngle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;cosAngle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cosAngle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sinAngle&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cosAngle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sinAngle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;oneSubCos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cosAngle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that cos2(ɑ) + sin2(ɑ) = 1, which means the vector is not scaled by the matrices that are strictly rotation matrices. If a scale is added, that information is added to the rotational information, which applies both operations on a vector. Rotations and translations are among the most common uses for matrices in computer graphics, along with representing coordinate spaces.&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Remote Debugging on the Last Day of - Building DDTJ Day 10</title>
      <author>Shai Almog</author>
      <pubDate>Fri, 31 Dec 2021 10:55:06 +0000</pubDate>
      <link>https://dev.to/codenameone/remote-debugging-on-the-last-day-of-building-ddtj-day-10-3i64</link>
      <guid>https://dev.to/codenameone/remote-debugging-on-the-last-day-of-building-ddtj-day-10-3i64</guid>
      <description>&lt;p&gt;Yesterday the &lt;a href="https://dev.to/codenameone/first-mocked-unit-test-generated-by-ddtj-building-ddtj-day-9-36lo"&gt;DDT PoC started working&lt;/a&gt;, today is the last day of my two week “hack fest” on DDTJ… Here's where we stand.&lt;/p&gt;

&lt;p&gt;The second week is finally over and while I built a working DDT proof of concept. I wasn’t able to complete a fully working MVP. The difference is that a proof of concept shows something working, an MVP needs to do something useful. DDT has yet to be realistically useful. &lt;/p&gt;

&lt;p&gt;Making DDT useful is my main goal right now. To facilitate that, I’m trying to get it to work with a Spring Boot application. So far this isn’t going great, but I’m making iterative progress. Running the application like we do a “hello world” just doesn’t work. The backend is blocked and the launch method never returns. &lt;/p&gt;

&lt;p&gt;Spring Boot has a relatively elaborate bootstrap loading phase which causes issues with debuggers. The approach is to bind a remote debugger which wasn’t supported by DDTJ, so I added that support.&lt;/p&gt;

&lt;p&gt;With remote debugging and some command line magic for spring boot, I was able to connect to the spring boot VM and got the whole thing working.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weird-bugs"&gt;
  &lt;/a&gt;
  Weird Bugs
&lt;/h2&gt;

&lt;p&gt;Right now I’m in a bug squashing phase. Run the spring boot pet clinic app with remote debugging. Launch the backend. Connect them and find a bug. Fix, rinse, repeat. &lt;/p&gt;

&lt;p&gt;This is tedious, but mostly running smoothly. &lt;/p&gt;

&lt;p&gt;Unfortunately, I seem to run into issues that are very hard to debug. E.g. &lt;code&gt;Unexpected JDWP Error: 32&lt;/code&gt; which is thrown by the JDI implementation. This seems like an issue with stack frames, but I can’t figure out why it’s happening.&lt;/p&gt;

&lt;p&gt;Another problem is that on a method entry event, the stack seems to be occasionally “corrupted”. Where the current method isn’t at the top of the stack. As far as I can tell, this isn’t something that should ever happen. But I might have missed a documentation nuance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attaching-a-debugger"&gt;
  &lt;/a&gt;
  Attaching a Debugger
&lt;/h2&gt;

&lt;p&gt;We can attach a debugger using the process id with a command like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.6-SNAPSHOT-shaded.jar -pid=62604
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or we can use a socket. Notice the socket always connects to localhost as remote debugging is a danger over jdwp:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -jar target/CLI-0.0.6-SNAPSHOT-shaded.jar -attach=8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the backend should have been running before and the pet clinic demo. I used the following command for the pet clinic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 -jar spring-petclinic-2.5.0-SNAPSHOT.jar -Dagentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which might have been a bit much, but it took me forever to get the damn thing to connect through JDWP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upcoming-pr-and-where-do-we-go-next"&gt;
  &lt;/a&gt;
  Upcoming PR and Where do we go Next?
&lt;/h2&gt;

&lt;p&gt;This code is in a PR that still isn’t running the spring boot pet clinic. As such, I don’t want to commit it yet or create a PR. Unfortunately, the two-week vacation is over and I have other duties.&lt;/p&gt;

&lt;p&gt;I’ll reduce my work pace on DDT for now as I have a lot of catching up to do at work. But I plan to bring it to MVP status within 2-4 weeks. I think the slower pace might help me digest some of these issues. So overall, it’s probably a good thing to take a bit of a break.&lt;/p&gt;

&lt;p&gt;I made a lot of mistakes in the past two weeks, but I think I’m too close to it right now. I’ll try to write a post-mortem post next week to cover what I did well and what I can improve. This won’t be a summary, as I think my opinions on this will evolve further as I rethink some of my stances.&lt;/p&gt;

&lt;p&gt;I suggest watching &lt;a href="https://github.com/ddtj/ddtj"&gt;the ddtj project&lt;/a&gt; to see when it gets updated with a new PR. You can also &lt;a href="https://twitter.com/debugagent"&gt;follow me on twitter&lt;/a&gt; to keep up to date with the latest developments. I have some great ideas for the core technology of DDT that go well beyond testing alone. There’s a lot of untapped potential here that we need to explore.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>opensource</category>
      <category>product</category>
      <category>programming</category>
    </item>
    <item>
      <title>2021 in Review</title>
      <author>Kevin Peters</author>
      <pubDate>Fri, 31 Dec 2021 10:49:30 +0000</pubDate>
      <link>https://dev.to/igeligel/2021-in-review-5g86</link>
      <guid>https://dev.to/igeligel/2021-in-review-5g86</guid>
      <description>&lt;p&gt;Lots of stuff happened in my life and I hope 2022 will be better. Let's revise what happened and what my goals are for the next year.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blogging"&gt;
  &lt;/a&gt;
  Blogging
&lt;/h2&gt;

&lt;p&gt;In 2021 I have released the following blogs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/remote-mdx-next-js"&gt;Remote MDX with Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/personal-branding-as-software-engineer"&gt;Personal branding as a Software Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://levelup.gitconnected.com/the-1-tip-to-familiarize-with-new-javascript-codebases-c021e6c3e515"&gt;The #1 tip to familiarize with new JavaScript Codebases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/top-tech-companies-berlin-2021"&gt;The Best Tech Companies in Berlin 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/the-work-experience-in-a-software-engineer-resume"&gt;The Work Experience in a Software Engineer Resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/let-your-projects-section-shine"&gt;Let your Projects section shine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/11-things-experienced-engineers-would-do-differently"&gt;11 Things experienced Software Engineers would have done differently&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kevinpeters.net/articles"&gt;6 Monthly Updates on Side projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of them are quite good for SEO like "The Best Tech Companies in Berlin 2021" or "Remote MDX with Next.js", but the blog is not growing as much as I want to. I might need to invest some time into the blog again next year. I have the feeling I could write a lot about my career and general career development in the EU. I am helping a lot of my friends these days with getting their careers up to speed so it might be helpful to share these other things as well. What is definitely coming in the next year is to write another blog article about the best tech companies in Berlin, since I work at one of the biggest ones hiring here now. That post will be interesting.&lt;/p&gt;

&lt;p&gt;Sadly, I also stopped writing my monthly reviews. This was probably caused by starting my new job which I will talk about later. But I want to update you, people, again, so I will decide to write quarterly reviews.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#goals-for-2022"&gt;
  &lt;/a&gt;
  Goals for 2022
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Write a blog about the best tech companies in Berlin 2022 (0/1)&lt;/li&gt;
&lt;li&gt;Do a Quarterly Review (0/4)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-career"&gt;
  &lt;/a&gt;
  My Career
&lt;/h2&gt;

&lt;p&gt;My professional career developed a lot this year. I left Klarna and joined Stripe this year. I am really thankful for my time at Klarna but after nearly 3 years it was time to discover something else. Stripe is similar to Klarna in many ways, but also entirely different. Especially when it comes to compensation because I almost 2x mine. But how did I get around that?&lt;/p&gt;

&lt;p&gt;Last Christmas, I was seeing a position at Airbnb being opened in Berlin. I asked around and found a nice recruiter who was able to tell me more about the position. I started doing Leetcode. It was lockdown. It was difficult. But it was worth it. Leetcode is an online platform to train your algorithm skills. I can definitely recommend using this platform and also subscribing to the premium version of it. You will get access to a lot of problems and even lists of interview questions that companies are using in real interviews. It will prepare you in a nice way. And the money is worth it. The offers you will receive at bigger companies will outshine the subscription cost.&lt;/p&gt;

&lt;p&gt;The Airbnb interview was tough, probably the toughest I ever had. And yeah, in the end, I got rejected. Airbnb is my dream company but it's fine. I needed to keep my head up. In those months I really realized how much I needed to change my company, so I applied a lot to other companies. My resume almost always got me interviews at bigger companies. So that was kind of easy. I might write a blog article about that exact one. But anyway, I got interviews at GitHub, MongoDB, Stripe, Datadog, and Wayfair. All of the interview processes were really well, but the quickest was Stripe. It was also the most aligned to me I had the feeling because I was using Stripe for side projects before and their projects seemed really interesting.&lt;/p&gt;

&lt;p&gt;After interviewing I got an outstanding offer and accepted it right away. The team was looking amazing and the project was interesting - even though a bit secret back at that time. But I can say it now. It is Stripe Tax. It is amazing because I can use some background from my knowledge at Klarna where I dealt with taxes as well. But in any case, starting at Stripe was amazing, but it deserves a blog post on its own. What I like the most though is how much trust you get working there. You can really move the needle yourself if you have the right ideas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.getrevue.co/profile/kevinpeters"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C2gEcB2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhpuqmmditn4v5662w1m.png" alt="Want to get tips on how to get into FAANG, Stripe and co?" width="880" height="268"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On top of that, I helped my friend, &lt;a href="https://von-froreich.com/"&gt;Julius&lt;/a&gt;, by referring him, to join Stripe as well. I helped another friend to get another job and I helped a mate from India to get an offer by Klarna where the person will relocate to Germany at the beginning of next year. It makes me happy to see other people succeed. I reviewed several resumes this year as well and overall I feel like I give back to the community that got me where I am today. I am super thankful for all that. Thank you to everyone who supported me in the past years and who I can support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#side-projects"&gt;
  &lt;/a&gt;
  Side projects
&lt;/h2&gt;

&lt;p&gt;I worked a lot on my side projects but without any success. I have to accept it and keep moving. But let's get into details.&lt;/p&gt;

&lt;p&gt;A category that does not fit this chapter exactly is my Twitter growth. At the beginning of the year, I just passed 500 followers and wanted to reach 1000 at the end of the year. I also did not reach that but I got another 100 followers. Something I can build upon. I will spend some more time next year regarding Twitter growth I think, sharing more stories of my side projects.&lt;/p&gt;

&lt;p&gt;So now to the individual projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#caseconverterpro"&gt;
  &lt;/a&gt;
  caseconverter.pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uc9c6iHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/912w4dvdxbu34i5kd8hy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uc9c6iHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/912w4dvdxbu34i5kd8hy.png" alt="Google Analytics graph of caseconverter.pro for 2021" width="880" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDbsVbxU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6aafteq8lwl1jkz906z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDbsVbxU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6aafteq8lwl1jkz906z.png" alt="Google Analytics graph of caseconverter.pro for 2021" width="880" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I invested some time into the project this year like refactoring a major part of the application, the case conversion. I invested time into the blog as well, but it did not pay off. The search intent is simply too low I think and without a lot of backlinks I would not reach the growth necessary to ever make it profitable. I guess I will sell it. I learnt a lot but it's time to say goodbye.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linkediumcom"&gt;
  &lt;/a&gt;
  linkedium.com
&lt;/h3&gt;

&lt;p&gt;Another project no one ever heard of probably. At the beginning of this year I was streaming on Twitch. I created a new project around the same time called linkedium. I never launched it or published it. The MVP was broken most often because I waited for LinkedIn API access. I got it in the end but lost motivation especially because there are alternatives out there like PostDrips (&lt;a href="https://postdrips.com/"&gt;https://postdrips.com/&lt;/a&gt;) where the founder is doing an amazing job. Maybe I will look into launching it this year and just reverse-pitch people reaching out on LinkedIn with the tool, because its the right target audience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getworkrecognized"&gt;
  &lt;/a&gt;
  getworkrecognized
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QkgwExN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl26mqtbxcqjg8y96142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QkgwExN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vl26mqtbxcqjg8y96142.png" alt="Google Analytics graph of getworkrecognized for 2021" width="880" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HjjfbSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1e59ultb8yzmso1bdctc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HjjfbSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1e59ultb8yzmso1bdctc.png" alt="Google Analytics graph of getworkrecognized for 2021" width="880" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The traffic of the project is rising and rising which is cool to see. My SEO efforts finally show off. I wrote three blog articles with good success and traffic is rising as well because of that. I have created three blogs in the whole time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/blog/junior-to-senior-software-engineer-klarna"&gt;From Junior to Senior Software Engineer at Klarna in 2.5 years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/blog/customer-obsession-examples-software-engineer"&gt;8 examples to show Customer Obsession as a Software Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/blog/3-brag-document-templates-google-docs"&gt;3 free Brag Document Templates [Google Docs]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have also extended the &lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer"&gt;career ladder source&lt;/a&gt; of the project which is quite cool, and that also contributed to the traffic.&lt;/p&gt;

&lt;p&gt;A major problem though is to convert traffic. I thought by introducing a free trial I could boost the users signing up at least to get more feedback and it resolved in getting more users. But most of them simply signed up and then did not use it. It is sad, but it made me realize the users probably do not need a tool for tracking, or most engineers who this tool is targeted to are not in the need for using it. I have also included upsells in the blog posts and in most of the webpages which still are not clicked that often. I do not think changing them will change the output of the blogs. The problem lies in the search intent, no one is ever googling how to track their work unfortunately.&lt;/p&gt;

&lt;p&gt;When it comes to marketing I have tried to make LinkedIn posts, a &lt;a href="https://www.producthunt.com/posts/getworkrecognized"&gt;product hunt launch&lt;/a&gt; that resulted in almost 40 upvotes but no MRR. I have &lt;a href="https://news.ycombinator.com/item?id=29416709"&gt;launched the project on hackernews&lt;/a&gt; as well without any upvote or any traction. It is difficult to find communities where people are participating and look to actively grow their careers. I was thinking of creating my own and might do so as well to grow the project a bit, but more on this now.&lt;/p&gt;

&lt;p&gt;The future of the project has been something on my mind for a long time. I could not grow it substantially this year despite some efforts. And I believe in my new project tooltipr.com a lot more. There is simply more potential there and I feel more aligned. And I want to try some different more promising projects as well, so I have a plan. I am ready to sell the project, but first I want to grow traffic. For that, I want to publish at least twelve more blog articles during the first three to four months of 2022. A difficult task, but definitely possible. The target is to hit 2000 users per month tracked in Google Analytics. I also want to finish all pages in the footer, so the website looks complete. Additionally, I might plan on creating a discord server for the career growth of developers. Giving tips about how to get a promotion at their companies and how tracking their work can help. The community part is a bit not sure yet, but I will see what I can do about it.&lt;/p&gt;

&lt;p&gt;In the end, the plan is to sell the project. What amount? I am not sure, maybe someone is willing to pay something for it - It is a low cost to host it ($10 per month) and with a bit of improving the marketing and sales pipeline someone could make a profit from the project. But if I can’t grow it till mid of the year with the actions I planned, I am not sure I will ever have a product-market fit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tooltipr"&gt;
  &lt;/a&gt;
  tooltipr
&lt;/h3&gt;

&lt;p&gt;This is my most-invested project right now. It is a tool to create corporate glossaries that can be directly shown via tooltips in your browser. I find it fascinating and it is super easy to use and a lot easier to market. I can go the B2B route, rather than going the B2C route with getworkrecognized. It is a lot easier to market and gets traction with such projects. So let us look at the stats:&lt;/p&gt;

&lt;p&gt;We can see that search traffic and so on have not been really high, but I have some strategies around that. So let us discover what my plan is for tooltipr in specific.&lt;/p&gt;

&lt;p&gt;First of all, we have blogging. The need for corporate glossaries is quite easily achieved these days: Excel Sheets or Google Sheets. This is working for most teams, but it is a hassle. Employees lose the link to the document and do not bother looking it up again. Getting frustrated. And this is the topic I need to explain in my blog articles. Search Engine traffic for these kinds of keywords is not high though, so I will need a distribution plan which I will share for the build-in public movement as well. I think this is one of the most important parts. I will also blog about the technical nature of tooltipr and how I have solved problems with writing a browser extension for example. There might be some useful information for other people to get hold of.&lt;/p&gt;

&lt;p&gt;For tooltipr, I plan to release eight blog articles in the first 3 months of 2022. It will be extremely difficult to manage all of that, but it is needed especially because I have another Sales target to hit with the project. I hope to increase traffic nonetheless and also get some more email newsletter subscribers.&lt;/p&gt;

&lt;p&gt;Another marketing effort is to showcase the project more in direct cold emails. I have the plan to build glossaries for smaller companies operating in niches with a lot of acronyms. For those companies, I create a glossary page like this one (&lt;a href="https://www.tooltipr.com/glossaries/runpanther"&gt;https://www.tooltipr.com/glossaries/runpanther&lt;/a&gt;) that they can use already. It is presenting the tooltipr solution in the right space already, contributing value to the companies without even asking or contacting them. With this, they will be more likely to even try out the full solution. I might need to work on the upsell message on the page, but I am sure this will work. The goal for the quarter is to write 50 emails (at least ten companies), reach out to target users with this approach, showing them the public glossary page they can use and how tooltipr can even enhance the experience.&lt;/p&gt;

&lt;p&gt;On top of that, I still need to launch tooltipr in various communities, be it on Reddit or on other public pages. I will get some backlinks based on that which might lead to some sales hopefully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#general"&gt;
  &lt;/a&gt;
  General
&lt;/h2&gt;

&lt;p&gt;I realized I suck at Marketing, Sales, and distribution of content. I need to improve with that in the future to be successful with creating profitable side businesses. So I am starting an initiative to start 2022 right: #100daysofmarketing. I am holding myself accountable on Twitter to do one thing every day, in the morning ideally so I cannot escape from the reality which is content creation and marketing, or cold emails.&lt;/p&gt;

&lt;p&gt;So what are my goals for Q1 around side projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🔨 Create a sell listing for caseconverter.pro&lt;/li&gt;
&lt;li&gt;🔨 Build a distribution plan for blog articles for getworkrecognized&lt;/li&gt;
&lt;li&gt;🔨 Create 12 blog articles for getworkrecognized&lt;/li&gt;
&lt;li&gt;🔨 Create a discord server about career growth for getworkrecognized (optional)&lt;/li&gt;
&lt;li&gt;🔨 Launch tooltipr on hackernews and in other communities&lt;/li&gt;
&lt;li&gt;🔨 Create 8 blog articles for tooltipr&lt;/li&gt;
&lt;li&gt;🔨 Send at least 50 emails or LinkedIn messages to at least 10 companies with predefined public glossaries&lt;/li&gt;
&lt;li&gt;🔨 #100daysofmarketing - this includes writing content, sharing content on social media, or writing cold emails&lt;/li&gt;
&lt;li&gt;🔨 Tweet once every day in the #100daysofmarketing challenge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I still have time, I also plan to work on some new ideas I have. The projects will be based around Excel and/or Google Sheets because I got kind of hooked into tables recently and I think the market is a lot bigger in comparison to the projects I worked on before.&lt;/p&gt;

&lt;p&gt;Of course, there are overall goals for 2022 as well. They consist of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🔨 Reach $100 MRR&lt;/li&gt;
&lt;li&gt;🔨 Have fun at Stripe&lt;/li&gt;
&lt;li&gt;🔨 Write 5 blog articles about the Software Engineering Career&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's it for now. Have a nice start to the next year. 2022 will be better!&lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>2021 Tech Highlights: Best Software For Dev Teams </title>
      <author>Jamie Swift</author>
      <pubDate>Fri, 31 Dec 2021 10:24:51 +0000</pubDate>
      <link>https://dev.to/jamieswift90/2021-tech-highlights-best-software-for-dev-teams-1ke5</link>
      <guid>https://dev.to/jamieswift90/2021-tech-highlights-best-software-for-dev-teams-1ke5</guid>
      <description>&lt;p&gt;How would I sum up 2021? For me and my team, the last 12 months were filled with constant learning and adapting to the new trends that completely changed the way we used to work (remember the habit of actually going to the office and wearing pants to work…?!). It wasn’t always easy, but the challenges we faced pushed us into searching for convenient software that could help us handle the new normal. In this short post, I would like to share with you the discoveries I made this year in the field of developer tools. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#gitlive"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=TeamHub.teamhub#review-details"&gt;GitLive&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This tool is for all you team players out there, GitLive makes Git LIVE. It adds a tab to your IDE where you can see your fellow collaborators, if they are online, what issue and branch they are working on and even their uncommitted changes, all updated in real-time. Any non-stale branch ahead of master/main is considered work in progress and you can inspect diffs of the files changed as well as view the associated issue or pull request.&lt;/p&gt;

&lt;p&gt;Their flagship feature is automatic merge conflict detection. Your teammates’ changes show in the gutter of the editor (addition, deletion, modification or conflict) where you can inspect them to see the diff, what branch it’s from and cherry-pick them straight into your copy of the file if you need to.&lt;/p&gt;

&lt;p&gt;GitLive can be very useful for larger teams and especially useful for open projects as these features even work across forks. What’s also cool is as the data comes straight from Git, there’s no manual entry required to keep it up-to-date.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu5abc5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14w6v4lmu95h0phwytop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu5abc5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14w6v4lmu95h0phwytop.png" alt="Image description" width="880" height="584"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wallabyjs"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=WallabyJs.wallaby-vscode"&gt;Wallaby.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Wallaby is an integrated continuous testing tool for JavaScript, developed by the team behind Quokka and Dingo (fun fact: they name all their products after native Australian animals 🇦🇺). This distraction-free javascript testing runs the tests as you type and provides the results directly in your editor, right next to your code (unlike traditional test runners that display feedback in your console), even on unsaved files.&lt;br&gt;
Wallaby works really well on bigger projects where it can help you maximize your productivity by allowing you to focus on a specific set of tests, no matter how large your project becomes.&lt;/p&gt;

&lt;p&gt;The tool comes with a lot of great features like time travel debugger with edit-and-continue or value explorer and output inspector for viewing runtime values, to name just a few. Plus their docs are amazing and provide you with a vast overview of all the functionality that can really make you kick it off with the product in no time!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uvoqZgfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alc00qex80os49t6wvvo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uvoqZgfk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alc00qex80os49t6wvvo.gif" alt="Image description" width="685" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gitpod"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.gitpod.io/"&gt;GitPod&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The problem developers often face is a huge amount of time wasted on setting a development environment. Gitpod aims at automating this cumbersome process by allowing you to spin up fresh, automated dev environments for each task, in the cloud, in no time. By providing always ready-to-code development environments, GitPod eliminates a tone of pain points that we all know too well: project onboarding, context switching, dependencies that no longer work - you name it. &lt;/p&gt;

&lt;p&gt;Dropping your local development environment can mean a huge boost of productivity for you and your team. It is open core, so there are some features that you have to pay for if you want to host them yourself, targeted at larger teams, but the free plan is pretty generous for everyone who’d like to try it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ycMt3JP2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0yqae4we397aox72d0ub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ycMt3JP2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0yqae4we397aox72d0ub.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retool"&gt;
  &lt;/a&gt;
  &lt;a href="https://retool.com/"&gt;Retool&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Retool is an internal app builder. As we all know, setting up internal tooling and applications is time-consuming, repetitive, and keeps developers from the actual problems they are trying to solve. Retool offers a collection of drag and drop components that allow you to build an elegant UI for your app in minutes. Plus, everything in Retool is a JS object that you can easily manipulate; you can also build your own custom React components. Out of the box, Retool will connect to nearly anything with a REST or GraphQL API. A growing library of native integrations makes it even easier to connect with your data sources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZuLj9Qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86m5abwfb1h55vb8oqmn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZuLj9Qe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86m5abwfb1h55vb8oqmn.gif" alt="Image description" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#firehydrant"&gt;
  &lt;/a&gt;
  &lt;a href="https://firehydrant.io/"&gt;FireHydrant&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;FireHydrant is a tool that puts out “fires” at work and handles your system reliability. It helps document the system, integrate the tools you already use, and gather data and alerts for handling incidents. With FireHydrant you can automate incident handling workflows e.g. create a new Slack room, status page update or a Zoom bridge.&lt;/p&gt;

&lt;p&gt;FireHydrant gives teams the tools to maintain service catalogs, respond to incidents, communicate through status pages, and learn with retrospectives. The paid plan may seem quite costly (20$ per user per month for smaller teams and 44$ per month for teams 5+), but there is a free plan available that lets you test if the platform suits your company’s needs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GiQByvkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t216aeadtibk4hbj6ro7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GiQByvkG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t216aeadtibk4hbj6ro7.png" alt="Image description" width="880" height="592"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading, hope you’ll find the tools I presented above interesting and useful. Happy New Year 2022! &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>vscode</category>
    </item>
  </channel>
</rss>
