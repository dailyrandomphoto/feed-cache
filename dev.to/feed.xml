<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Common HTML Mistakes you should avoid.</title>
      <author>Visualway</author>
      <pubDate>Tue, 28 Dec 2021 10:44:57 +0000</pubDate>
      <link>https://dev.to/visualway/5-common-html-mistakes-you-should-avoid-205m</link>
      <guid>https://dev.to/visualway/5-common-html-mistakes-you-should-avoid-205m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-semantic-header-and-footer"&gt;
  &lt;/a&gt;
  1. Semantic Header and Footer
&lt;/h2&gt;

&lt;p&gt;Divs have no semantic structure. Instead of using divs to create headers or footer structures, use "header" and "footer" elements.&lt;/p&gt;

&lt;p&gt;Don't do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"footer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-use-figure-element"&gt;
  &lt;/a&gt;
  2. Use Figure Element
&lt;/h2&gt;

&lt;p&gt;If you need to add a caption to your image, use the "figure" element combined with the "figcaption" element.&lt;/p&gt;

&lt;p&gt;Don't do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"image url"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"image description"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; Lorem Ipsum Description &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;figure&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"image url"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"image description"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;figcaption&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; Lorem Ipsum Description &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-dont-use-bold-or-italic-tags"&gt;
  &lt;/a&gt;
  3. Don't use bold or italic tags
&lt;/h2&gt;

&lt;p&gt;The "b" and "i" tags are used for bringing attention to and for idiomatic text respectively, and have no semantic meaning. But browsers still give them the bold and italics stylings for historical purposes. Change the font-weight/font-style in the CSS or use the "strong" or "em" element.&lt;/p&gt;

&lt;p&gt;Don't do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Bold&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt;Italics&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Bold&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;Italics&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-using-descriptive-links"&gt;
  &lt;/a&gt;
  4. Using descriptive links
&lt;/h2&gt;

&lt;p&gt;A link’s text should be explicit and convey where is redirecting the user to, both users and search engines can more easily understand your content and how it relates to other pages.&lt;/p&gt;

&lt;p&gt;Don't do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
Check our pricing...
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;Check our &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; pricing &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-using-inline-styles"&gt;
  &lt;/a&gt;
  5. Using inline styles
&lt;/h2&gt;

&lt;p&gt;Writing inline styles violates the principle of having the structure (HTML) separate from the presentation (CSS). Instead write the styles in a stylesheet.&lt;/p&gt;

&lt;p&gt;Don't do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"font-size: 24"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Header
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;24&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading
&lt;/h3&gt;

&lt;p&gt;If you liked this post, subscribe to our newsletter to never miss out on our blogs, product launches and tech news.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyletter.com/visualway"&gt;Subsribe to Visualway's newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>What about a blockchain?</title>
      <author>iotcloudarchitect</author>
      <pubDate>Tue, 28 Dec 2021 10:17:10 +0000</pubDate>
      <link>https://dev.to/iotcloudarchitect/what-about-a-blockchain-3pci</link>
      <guid>https://dev.to/iotcloudarchitect/what-about-a-blockchain-3pci</guid>
      <description>&lt;p&gt;The basic idea of a blockchain is to store information immutably, transparently, and traceable inside a duplicated and distributed ledger. The ledger consists of blocks, and every block is cryptographically connected to the previous block. Each block contains transactions that the participants of the blockchain beforehand validated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8_7-jD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wanqx5srgtl6v496zcgy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8_7-jD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wanqx5srgtl6v496zcgy.png" alt="Blockchain Concept" width="847" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article gives a high-level overview of the concept of a blockchain used for transactional systems but not a detailed step-by-step instruction about implementing the technology. &lt;br&gt;
Furthermore, it shall help you decide whether your system or idea could use a blockchain approach.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#centralized-transaction-processing"&gt;
  &lt;/a&gt;
  Centralized Transaction Processing
&lt;/h2&gt;

&lt;p&gt;In centralized transaction-based solutions, at least one central instance acts as a gate for decisions or manages essential parts of a process. Everyone interacting with it has to trust these middlemen.&lt;/p&gt;

&lt;p&gt;Let's take an example.&lt;/p&gt;

&lt;p&gt;You want to give $100 to Peter. To cash transfer the money from your bank account to the bank account of Peter, you have to utilize financial institutions, e.g., banks, to process the transferal. In this case, your bank and Peter's bank are middlemen, which means they are central instances of the process. Also, between both banks, there is another middleman, the clearinghouse, which establishes the trust between both banks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0F0T45t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjgtlclewkiesvp4m5td.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0F0T45t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mjgtlclewkiesvp4m5td.png" alt="Traditional Bank Transaction Process" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following, the steps of the process depicted above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You will instruct your bank (B1) to send $100 to Peter's bank account.&lt;/li&gt;
&lt;li&gt;B1 will first check whether you have at least $100 you can send.&lt;/li&gt;
&lt;li&gt;Next, B1 will tell the clearinghouse (C) to transfer $100 to Peter's bank account.&lt;/li&gt;
&lt;li&gt;C will take the $100 from B1, contact Peter's bank (B2), and move the money.&lt;/li&gt;
&lt;li&gt;(B2) will put the $100 into Peter's bank account.&lt;/li&gt;
&lt;li&gt;Peter finally got the $100.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The process perfectly shows that the banks are middlemen to you and Peter. And between the banks, the clearinghouse is the middlemen. &lt;br&gt;
A lot of intermediaries, right?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#blockchainbased-transaction-processing"&gt;
  &lt;/a&gt;
  Blockchain-based Transaction Processing
&lt;/h2&gt;

&lt;p&gt;Let's see how the same process would work on the blockchain cryptocurrency Bitcoin:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n9VNgDZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kef5cwe09keb22btxtkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9VNgDZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kef5cwe09keb22btxtkn.png" alt="Blockchain Transaction Process" width="880" height="714"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following, the steps of the process depicted above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First of all, all participating nodes must have the latest version of the ledger containing all blocks each containing transactions.&lt;/li&gt;
&lt;li&gt;You will now send one bitcoin to Peter utilizing a (transaction) node (A).&lt;/li&gt;
&lt;li&gt;A will verify whether you have one bitcoin that you can send and if everything is okay, it will bundle the transaction into a block.&lt;/li&gt;
&lt;li&gt;The miners (B, C) validate the transaction using algorithms (mining process).&lt;/li&gt;
&lt;li&gt;After all miners agree, the block will be put into the blockchain on the ledger and every node gets an update.  Peter received one bitcoin from you.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see in this process, no single entity is responsible; all nodes together validate and decide about the transaction based on cryptographic security and clearly defined methods.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#trust-is-key"&gt;
  &lt;/a&gt;
  Trust is key
&lt;/h2&gt;

&lt;p&gt;A blockchain can substitute existing systems, but it has to, first of all, create trust. The participants need to trust the implementation of blockchain technology like they did it with the middleman concept.&lt;/p&gt;

&lt;p&gt;Here is how blockchain creates trust:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m0kIKIjh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ic9wey91kzx7oqqdxdzf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m0kIKIjh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ic9wey91kzx7oqqdxdzf.png" alt="Blockchain Trust" width="880" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next chapter describes the benefits mentioned above.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#benefits-of-a-blockchain-approach"&gt;
  &lt;/a&gt;
  Benefits of a blockchain approach
&lt;/h2&gt;

&lt;p&gt;Following, the most obvious benefits:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#redundancy"&gt;
  &lt;/a&gt;
  Redundancy
&lt;/h3&gt;

&lt;p&gt;The ledger is duplicated and distributed to every participant. Also, each update will be synchronized to every copy of the ledger. Therefore, no one can delete the ledger.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cryptography"&gt;
  &lt;/a&gt;
  Cryptography
&lt;/h3&gt;

&lt;p&gt;A blockchain network self-organizes itself. It uses consensus algorithms and cryptography to secure transactions between multiple partners without the need for a trusted middleman in between.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#immutability"&gt;
  &lt;/a&gt;
  Immutability
&lt;/h3&gt;

&lt;p&gt;A blockchain records the blocks and their bundled transactions immutable by design. Once a block is attached to the ledger, it is cryptographically connected to the previous block. The nodes will immediately detect changes of blocks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#traceability"&gt;
  &lt;/a&gt;
  Traceability
&lt;/h3&gt;

&lt;p&gt;Everyone with a copy of the ledger can verify which transaction happened at which time. The entire history of actions is recorded, not just a snapshot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transparency"&gt;
  &lt;/a&gt;
  Transparency
&lt;/h3&gt;

&lt;p&gt;Every transaction is processed the same defined way and is documented and validated by the nodes. Inside the ledger, all blocks are recorded and therefore visible to everyone.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#do-you-need-a-blockchain"&gt;
  &lt;/a&gt;
  Do you need a blockchain?
&lt;/h2&gt;

&lt;p&gt;The following diagram shall help you to figure out whether your idea or system could be driven by a blockchain approach:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d14e2iiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3r24mntds5f41aqfytkr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d14e2iiB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3r24mntds5f41aqfytkr.png" alt="Do you need a blockchain" width="880" height="1084"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#reallive-examples-for-blockchain-solutions"&gt;
  &lt;/a&gt;
  Real-live examples for blockchain solutions
&lt;/h2&gt;

&lt;p&gt;The following diagram shows potential real-life solutions derived from the benefits a blockchain approach offers:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3A3ZDX_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwrf7z3715138qql6maf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3A3ZDX_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwrf7z3715138qql6maf.png" alt="Real-life blockchain examples" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For sure, the examples mentioned above are not collectively exhaustive. There are a lot more. But a reasonable solution should always take care of at least 2 or 3 of the benefits a blockchain approach offers. Otherwise, you do not need fully-fledged blockchain technology.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;The worst thing you could do is create a blockchain system without a specific problem you are trying to solve, just because it is en vogue to have a solution in your product store. It is not just how you store data; it is about creating an ecosystem that self-organizes itself in a highly secure way. As always: think problem first, then solutions.&lt;/p&gt;

&lt;p&gt;Photos on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>introduction</category>
      <category>concept</category>
      <category>process</category>
    </item>
    <item>
      <title>User Experience Web Design Firms</title>
      <author>Tkxel Software</author>
      <pubDate>Tue, 28 Dec 2021 09:50:43 +0000</pubDate>
      <link>https://dev.to/tkxelsoftware/user-experience-web-design-firms-1k8e</link>
      <guid>https://dev.to/tkxelsoftware/user-experience-web-design-firms-1k8e</guid>
      <description>&lt;p&gt;When it comes to a great career opportunity, user experience design companies are in high demand. Whether you need help developing software or creating engaging content, there is a user experience design agency to meet your needs. Here are a few of these firms. The advantages of using these companies: All-in-one services and high-quality work. A/B testing helps you measure your success, and a dedicated team is available to guide you through the process.&lt;/p&gt;

&lt;p&gt;Choosing a &lt;a href="https://reloadux.com"&gt;user experience design company&lt;/a&gt; is essential if you are looking to increase the success of your product. The right agency can help you improve your ROI and improve your overall customer service. By taking the time to learn about the process, you will get a better understanding of what the best design agency offers and how they do it. In addition, the right company can handle maintenance and research for you. The top agencies are transparent and offer a wide range of services.&lt;/p&gt;

&lt;p&gt;UI design companies can be very effective at analyzing a company's business goals and customer needs. They can create a great mobile app or portal that will enhance the company's sales and brand image. These agencies are also very effective at developing user-centric websites. They understand how to make a website that is functional, enjoyable, and efficient. They also understand how to get the best out of the customers' interactions with your products.&lt;/p&gt;

&lt;p&gt;While many companies offer a wide range of services, their focus is mainly on marketing and innovation. While some are focused on development and implementation, others are focused on marketing and advertising. All of them focus on the needs of their clients. In addition, they work with Fortune 5s and startups to make their products appealing to the most discerning consumers. They can provide a comprehensive package of UI/UX services. The best user experience design companies also understand the value of collaboration and the importance of quality.&lt;/p&gt;

&lt;p&gt;A great user experience design company will work with you to ensure that the website works well. In addition, they can take care of the technical part of the website. They use tools such as MockFlow and Adobe XD. These tools are very important to ensure the site is functional and usable. Ultimately, a good user experience design firm will be able to create a competitive advantage by creating a great website. Most users will spend their time on a website that functions optimally.&lt;/p&gt;

&lt;p&gt;A good user experience design company should be able to demonstrate how the website functions with the users. They should be able to show how it makes the user feel when they visit it. The best user experience design companies will have an extensive knowledge of the basics of usability and design. This will help the client to make a good choice. The best user experience design companies will also be able to explain the importance of interaction with the website.&lt;/p&gt;

&lt;p&gt;A good user experience design company should have a strong strategy. They should be able to provide their clients with the necessary information and a unique approach to every project. A great UX design firm should be able to communicate effectively with the client and should be able to communicate with the other company. This should be a priority. In addition, the best user experience design firms should be able to offer a high level of communication.&lt;/p&gt;

&lt;p&gt;A successful user experience design firm should also offer a variety of services. They must have the ability to provide their clients with unique solutions. In addition to offering excellent services, user experience design companies should be able to offer their clients with a wide range of expertise. For example, a well-designed website should be easy to navigate. In addition, a good website should be easy to use. A good design firm should be able to provide the most relevant information to its customers.&lt;/p&gt;

&lt;p&gt;In addition to creating a highly functional website, a successful user experience design company should also understand its target customers. The company should be able to offer the right products and services to their target audience. Moreover, a successful user experience is based on a good design. If a product does not meet these standards, it will not be used. There are also several other factors to consider. One of them is the size of the company.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Back to BASIC</title>
      <author>Simon Foster</author>
      <pubDate>Tue, 28 Dec 2021 09:40:50 +0000</pubDate>
      <link>https://dev.to/funkysi1701/back-to-basic-3c83</link>
      <guid>https://dev.to/funkysi1701/back-to-basic-3c83</guid>
      <description>&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAQ0M-FQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FHi_NyOXEAo9YbG.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KUJ75q6J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1434939943759998976/8SAoXStr_normal.png" alt="Simon Foster profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Simon Foster
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/funkysi1701"&gt;@funkysi1701&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      How exciting my Lynx Computer from my childhood has come home, all 96k of it 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:19 PM - 26 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1475139125154037760" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1475139125154037760" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1475139125154037760" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I can't remember the syntax for BASIC, luckily I have been able to find the &lt;a href="http://elborg.dk/books.html"&gt;Manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All the commands are listed inside so lets see what we can do.&lt;/p&gt;

&lt;p&gt;The Lynx presents you with a command prompt in which you can type text. Back in the 80s we had a tape player to load programs from tape, however I don't have one today so only programs I write can be run.&lt;/p&gt;

&lt;p&gt;PRINT - To write Hello World, you can just type PRINT "Hello World" and Hello World appears on the screen. To Write a program that displays Hello World, you just write the line number first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10 PRINT "Hello World"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run this you type RUN&lt;br&gt;
To view the code you type LIST&lt;/p&gt;

&lt;p&gt;To Edit a specific Line you can use Ctrl+E and type the line number, or you can just write the line out again.&lt;/p&gt;

&lt;p&gt;CLS - This command clears the screen&lt;/p&gt;

&lt;p&gt;INPUT N - stores text typed by the user and stores it in the variable N&lt;/p&gt;

&lt;p&gt;GOTO N - Execution of code continues at Line Number N&lt;/p&gt;

&lt;p&gt;The first Program I wrote with a bit of help from my boys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10 CLS
20 PRINT "What is your Age?"
30 INPUT N
40 IF N&amp;gt;5 AND N&amp;lt;41 THEN PRINT "a good age" 
50 ELSE IF N&amp;lt;6 THEN PRINT "a spaceman"
60 ELSE IF N&amp;gt;40 THEN PRINT "too old"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My 4yo didn't like being "too young" in the original version, so my 6yo helped me change him to be a "spaceman".&lt;/p&gt;

&lt;p&gt;Not bad and it was fun pair programming with a 6yo, all my typos were quickly spotted, and he easily understood the logic of IF/ELSE/THEN statements.&lt;/p&gt;

&lt;p&gt;The Lynx comes from 1983 and has just 96k of memory. I am very lucky it actually still works, however I have been able to find an emulator so I can write Lynx BASIC from the comfort of my laptop. &lt;a href="https://jynxemulator.wordpress.com/"&gt;jynxemulator&lt;/a&gt;, it is also on &lt;a href="https://github.com/jonathan-markland/Jynx"&gt;github&lt;/a&gt; but it doesn't include the ROMs so getting from the website is a better option.&lt;/p&gt;

&lt;p&gt;The developer experience today is so much nicer than it must have been in the 1980s, however back then distractions must have been much reduced.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No internet or google to get answers to your questions&lt;/li&gt;
&lt;li&gt;No Copy/Paste of text&lt;/li&gt;
&lt;li&gt;No Load/Save (unless you have a working disk drive or tape player!)&lt;/li&gt;
&lt;li&gt;No IDE&lt;/li&gt;
&lt;li&gt;No Build or Release process just type RUN&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>basic</category>
      <category>history</category>
      <category>programming</category>
    </item>
    <item>
      <title>How-to share geospatial data on the web</title>
      <author>Joana Simoes</author>
      <pubDate>Tue, 28 Dec 2021 09:09:02 +0000</pubDate>
      <link>https://dev.to/doublebyte/how-to-share-geospatial-data-on-the-web-54b7</link>
      <guid>https://dev.to/doublebyte/how-to-share-geospatial-data-on-the-web-54b7</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ahHCCoNZIJE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;On this tutorial we will explore how to share geospatial data on the web, in a simple and efficient way. You can use the provided dataset or use your own dataset, in order to implement the pipeline to make it available with a REST API, using a stack of free and open source software.&lt;br&gt;
We will conclude by exploring the deployed service using a swagger endpoint and postman, but "sky is the limit" in terms of client applications which could consume this dataset.&lt;br&gt;
In order to complete this, you will only need some basic knowledge of docker and docker-compose. The links used in the tutorial are listed bellow. Have fun!🙃&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sawcer.com/"&gt;https://www.sawcer.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ogcapi.org/dev/features"&gt;https://ogcapi.org/dev/features&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.w3.org/TR/sdw-bp/#spatial-things-features-and-geometry"&gt;https://www.w3.org/TR/sdw-bp/#spatial-things-features-and-geometry&lt;/a&gt;&lt;br&gt;
&lt;a href="https://pygeoapi.io/"&gt;https://pygeoapi.io/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/geopython/pygeoapi"&gt;https://github.com/geopython/pygeoapi&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/emotional-cities/pygeoapi/tree/mongo"&gt;https://github.com/emotional-cities/pygeoapi/tree/mongo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stedolan.github.io/jq/"&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://bboxfinder.com/#0.000000,0.000000,0.000000,0.000000"&gt;http://bboxfinder.com/#0.000000,0.000000,0.000000,0.000000&lt;/a&gt;&lt;br&gt;
&lt;a href="https://features.byteroad.net/"&gt;https://features.byteroad.net/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>docker</category>
      <category>opensource</category>
      <category>geospatial</category>
    </item>
    <item>
      <title>My Journey to Becoming a Google Developer Student Clubs Lead</title>
      <author>Sai Ashish</author>
      <pubDate>Tue, 28 Dec 2021 09:08:58 +0000</pubDate>
      <link>https://dev.to/theinsightfulcoder/my-journey-to-becoming-a-google-developer-student-clubs-lead-5cg2</link>
      <guid>https://dev.to/theinsightfulcoder/my-journey-to-becoming-a-google-developer-student-clubs-lead-5cg2</guid>
      <description>&lt;p&gt;Hello everyone, it's  &lt;a href="https://www.linkedin.com/in/sai-ashish/"&gt;Sai Ashish Konchada&lt;/a&gt;  back after a hiatus for good. The past few months have been a rollercoaster ride, a wave of happy hormones with nervous adventures. It gives me immense pleasure to announce that I've been selected as the first-ever Google Developer Student Clubs Lead at my college. In this post, we will be looking into the journey from the application to the selection. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. What is Google Developer Student Clubs?

2. What are the roles and responsibilities of a lead?
i. Starting/Growing a club
ii. Host Workshops
ii. Build projects

3. How can I apply to become a Google Developer Student Club Lead at my campus?

4. The Google Developer Student Clubs Lead Application Form 2021

5. Timeline for GDSC Selection 2021 and the Interview Experience
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#1-what-is-google-developer-student-clubs"&gt;
  &lt;/a&gt;
  1. What is Google Developer Student Clubs?
&lt;/h2&gt;

&lt;p&gt;As per the official  &lt;a href="https://gdsc.community.dev/"&gt;website&lt;/a&gt;, Google Developer Student Clubs are university-based community groups for students interested in Google developer technologies. Students from all undergraduate or graduate programs with an interest in growing as a developer are welcome. By joining a GDSC, students grow their knowledge in a peer-to-peer learning environment and build solutions for local businesses and their community.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/earTjC0iSjg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Google Developer Student Clubs(GDSC) are like your college/ university clubs, powered by Google Developers. Every year, Google selects leads from across the globe who align with the vision of GDSC and want to empower their community. This year, there are around 352 leads selected across India. There are many first-time leads,  as well as leads who continue the legacy initiated by the founder/former lead. It is not necessary if your college has an existing GDSC, then a lead will definitely be selected from your campus for the following year. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-can-become-a-google-developer-student-club-lead"&gt;
  &lt;/a&gt;
  Who can become a Google Developer Student Club Lead?
&lt;/h3&gt;

&lt;p&gt;As per the  &lt;a href="https://developers.google.com/community/gdsc/leads"&gt;official website&lt;/a&gt;, these are the eligibility criteria to become a lead. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have a minimum of one year left until graduation&lt;/li&gt;
&lt;li&gt;Enrolled in an undergraduate or graduate program at a college or university&lt;/li&gt;
&lt;li&gt;Can commit to the program for one year&lt;/li&gt;
&lt;li&gt;Passionate about creating impact in the community&lt;/li&gt;
&lt;li&gt;Strong technical understanding of computer programming and/or software engineering&lt;/li&gt;
&lt;li&gt;Have experience with event planning or leading a team&lt;/li&gt;
&lt;li&gt;Have some connection to the local developer community&lt;/li&gt;
&lt;li&gt;Host an event ideally once a month, and at least every 3 months&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-what-are-the-roles-and-responsibilities-of-a-lead"&gt;
  &lt;/a&gt;
  2. What are the roles and responsibilities of a lead?
&lt;/h2&gt;

&lt;p&gt;The 3 basic responsibilities of a lead include:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-startinggrowing-a-club"&gt;
  &lt;/a&gt;
  i. Starting/Growing a club
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rrFJiryr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635850852805/8zSMX4ylo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rrFJiryr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635850852805/8zSMX4ylo.png" alt="Google Developer Student Clubs Shree L R Tiwari College of Engineering" width="880" height="223"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're the first-ever lead of a GDSC, you found and set up the club. For this, you might have to talk to your respective Teacher Incharge of such programs at your college, taking permission from the respective Head of Department and Principal for the same. This varies from college to college, so get in touch with a senior or teacher for the same. Being the Technical Head of my college I already was in touch with my respective HOD and Technical Incharge. I wrote a letter to them, explaining about GDSC, its benefits, the impact it creates, and permission for the same. &lt;/p&gt;

&lt;p&gt;Once you get the approval, you have to find a Faculty Incharge and form your Core Team. Find a faculty in charge, who actively takes the initiative for promoting such activities in your college, manages any scheduling conflicts, and provides insights about the events you conduct, suggests improvements.&lt;/p&gt;

&lt;p&gt;Forming the core team depends on you. You have the complete freedom to choose the number of members in your team, the hierarchy, and the domains you want to have. It is recommended to have 5 people in your core team as at the end of the year, Google sends 5 members(apart from the lead) the Graduation kit consisting of goodies. However, as mentioned earlier you can have more than 5 people and choose the top 5 people working diligently towards the club activities.&lt;/p&gt;

&lt;p&gt;There are 2 widely followed approaches in forming the core team. The first one is the Interview process. You create an announcement, people apply for the respective roles, you shortlist, conduct interviews, and choose members. The other one is that if you already know the people in your college and see people fit for the role, you choose them. My suggestion is to choose people who possess not only strong technical knowledge but also the ability to deliver sessions, connect with people, solve their individual doubts, give creative ideas for the growth of the clubs. You can choose to add a set of Behavioral questions to test this aspect. &lt;/p&gt;

&lt;p&gt;If you're the lead of an already existing GDSC, get in touch with your former lead, understand their vision, the events they've conducted, how they organized and dealt with various situations, how they can collaborate with existing GDSCs and other organizations, how to approach speakers and sponsorships for events, etc. Your lead is the best person you can find to elaborate in-depth about the program.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ii-host-workshops"&gt;
  &lt;/a&gt;
  ii. Host Workshops
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3S-EXLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635851401403/Xd8Axw2--.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3S-EXLG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635851401403/Xd8Axw2--.png" alt="Introduction to Hacktoberfest.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After forming the core team, you can kickstart your journey with the Orientation session. You'd be provided with a timeline of events conducted by Google. You can choose to conduct those events as well as events of your own. I'll be writing a separate blog on how to create, promote and conduct your GDSC events once you become a lead. This is one of the workshops we conducted, where we introduced students to open source, how to contribute to it, and get started with Github. You can find the recording of the workshop &lt;a href="https://youtu.be/c4BA3sV98Y4"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iii-build-projects"&gt;
  &lt;/a&gt;
  iii. Build projects
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ox4cpKOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635851211586/oKuLHKZJB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ox4cpKOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635851211586/oKuLHKZJB.png" alt="Solution Challenge GDSC" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to hosting events and conducting hackathons, an integral part is the hands-on experience. GDSCs across the globe are known for creating impact among society. A GDSC should identify problems in their university or local community which could be solved via technology. One example to solving a university problem could be to build an online proctoring software, or automatic attendance system, or automation of daily tasks custom-built according to the needs of the university. Apart from these, GDSCs can host demo days, where they display the projects built by the teams of their club and also participate in the annual solution challenge. Read in-depth about this amazing global challenge  &lt;a href="https://developers.google.com/community/gdsc-solution-challenge"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-how-can-i-apply-to-become-a-google-developer-student-club-lead-at-my-campus"&gt;
  &lt;/a&gt;
  3. How can I apply to become a Google Developer Student Club Lead at my campus?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t8finO4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854403775/XJVeJjdG3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t8finO4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854403775/XJVeJjdG3.png" alt="Become a Google Developer Student Club Lead at your campus" width="880" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Applications to apply for becoming a lead, opens once every year depending on the region you belong from.  You can view the timeline and apply to become a lead  &lt;a href="https://developers.google.com/community/gdsc/leads"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-the-google-developer-student-clubs-lead-application-form-2021"&gt;
  &lt;/a&gt;
  4. The Google Developer Student Clubs Lead Application Form 2021
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lfmR2cB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854449803/ghpYXd_Y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lfmR2cB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854449803/ghpYXd_Y5.png" alt="The Google Developer Student Clubs Lead Application Form 2021" width="880" height="409"&gt;&lt;/a&gt;&lt;br&gt;
When you apply to become a lead, it redirects you to Advocu where you fill out your application to become a lead. You've to fill out your basic details, share links to your work and account on Facebook, Github, LinkedIn, Medium, Qwiklabs, Stack Overflow, Twitter, Portfolio, and website link(if any). I strongly recommend you to build a strong profile on these platforms and be actively engaging, sharing your knowledge with the community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then comes the 3 major questions:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is your motivation to run a Google Developer Student Club at your College?&lt;/p&gt;

&lt;p&gt;What is your experience in leading a project or a team&lt;/p&gt;

&lt;p&gt;What technology do you find most interesting and why? What is your experience with this technology?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;My Tips:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Please tailor these questions according to &lt;strong&gt;your&lt;/strong&gt; skills, experience, and expertise&lt;/li&gt;
&lt;li&gt;Don't take model answers or points from other applicants &lt;/li&gt;
&lt;li&gt;Be real&lt;/li&gt;
&lt;li&gt;Be unique&lt;/li&gt;
&lt;li&gt;Always proofread and use a Grammar tool, such as Grammarly&lt;/li&gt;
&lt;li&gt;Have keywords in your answers. If technology is asked, mention all the names of technologies you have working knowledge on&lt;/li&gt;
&lt;li&gt;Be active in leading clubs/communities from the very beginning. Experience proves your leadership, communication, and community building skills rather than plainly stating it&lt;/li&gt;
&lt;li&gt;Mention statistics where necessary. Example: In the Technical Carnival conducted in our college last year, we had a total of 600 active participants. &lt;/li&gt;
&lt;li&gt;As mentioned earlier, have a strong online presence and community contribution&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Apart from this, you've to record a 90-second video and show us why you are the right person to be a GDSC Leader at your College&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Choose the best points and practice beforehand.  You don't need to have a professional mic, camera, or edit videos in order to get selected. Make sure you are perfectly audible and visible. You can also choose to display your points in a presentation but make sure you are visible in the video.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-timeline-for-gdsc-selection-2021-and-the-interview-experience"&gt;
  &lt;/a&gt;
  5. Timeline for GDSC Selection 2021 and the Interview Experience
&lt;/h2&gt;

&lt;p&gt;I had applied to become a GDSC Lead on 20th April 2021, the deadline being 11th May, 2021.  After applying, you get a mail with the subject, Thank you for applying [Developer Student Clubs Application Process - Sai Ashish Konchada]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tMi8Zxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635840806946/YuvSjAxdm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tMi8Zxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635840806946/YuvSjAxdm.png" alt="Thank you for applying Developer Student Clubs Application Process - Sai Ashish Konchada" width="502" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you get shortlisted among the application process, you get an email with the title, Next Steps [DSC Application Process - Sai Ashish Konchada]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mptHpZm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854544528/Mfr4iGIBO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mptHpZm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635854544528/Mfr4iGIBO.png" alt="Next Steps DSC Application Process - Sai Ashish Konchada" width="501" height="797"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I scheduled an interview call for May 18th. The interview lasted for 15 minutes. The interviewer was very friendly and created a friendly atmosphere by mentioning to treat it as a discussion rather than an interview. To the best of my memory, a few of the questions were to talk about myself, the GDSC program, my previous community experiences, my plans for GDSC. If any lead is reading this, I urge them to share their interview experience too.&lt;/p&gt;

&lt;p&gt;On July 15, I received an email - [Google Developer Student Clubs] Congratulations!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ9Qgcot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635841907672/ip8IX2mUd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QZ9Qgcot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635841907672/ip8IX2mUd.png" alt="Google Developer Student Clubs Congratulations Mail" width="502" height="709"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And I got selected as the Google Developer Student Clubs Lead for my campus! As per the instructions, I acknowledged my confirmation and began laying the foundation of  &lt;a href="https://gdsc.community.dev/shree-l-r-tiwari-college-of-engineering-thane/"&gt;GDSC SLRTCE&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;And that's a wrap! I hope this blog post finds an aspiring lead, answers his/her doubts, and gains insights about the Google Developer Student Clubs Program. If you've any queries, drop them down in the comment section below and I'll try to answer it as soon as I can. Until the next one, cheers to learning 🥂&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#did-you-know-you-can-join-our-club-too"&gt;
  &lt;/a&gt;
  Did you know you can join our club too?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mEEgM2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635852347012/XneBxY_HG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mEEgM2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635852347012/XneBxY_HG.png" alt="Google Developer Student Clubs Shree L R Tiwari College of Engineering" width="880" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Become a member of  &lt;a href="https://cutt.ly/gdsc-slrtce"&gt;GDSC SLRTCE&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href="https://www.instagram.com/gdscslrtce/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Connect with us on &lt;a href="https://www.linkedin.com/company/gdsc"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Find the recordings to our sessions on  &lt;a href="https://www.youtube.com/channel/UCM920MVf8rerjUqW6OVHNrg"&gt;Youtube&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join our &lt;a href="https://discord.com/invite/HjYWZdhUsE"&gt;Discord&lt;/a&gt;  server for regular updates &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>computerscience</category>
      <category>leadership</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>OMG! 50,000 views on my blogs in 1.5 months 🙀</title>
      <author>Yash Makan</author>
      <pubDate>Tue, 28 Dec 2021 09:06:14 +0000</pubDate>
      <link>https://dev.to/yash_makan/omg-50000-views-on-my-blogs-1fd4</link>
      <guid>https://dev.to/yash_makan/omg-50000-views-on-my-blogs-1fd4</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2LaKuFcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/fxI1G5PNC5esyNlIUs/giphy.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2LaKuFcY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/fxI1G5PNC5esyNlIUs/giphy.webp" alt="Thank You" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi developers, I am Yash Makan and this is not the kind of post where I will tell you guys something which will help you in any way. But before clicking the back button, I would like you to stay. First I would like to tell you a little story... &lt;/p&gt;

&lt;p&gt;Hi, I am Yash Makan a 17yo boy living in a small city in India, it all started in the year 2018 when I first stepped on this beautiful journey. It’s been 4 years of dedication, motivation and belief that I am here. This year I got my very first job as a full-stack app developer &amp;amp; I am loving it. For next year, I’ve decided to move and live independently on my own. I would like to embark on this journey of life and take full responsibility for myself. I love my parents and to be quite honest they are sad that I have to leave so early but they completely believe in me and that’s what makes me motivated. I’ve decided to skip the college education(BTech) and learn on my own and help the community as I learn.&lt;/p&gt;

&lt;p&gt;I am simply telling you this because I want you guys to take the step not from next year but from today itself. I want that everyone should do stuff whatever they love or their gut tells. I know that there will be difficulties in the path but It’ll all pass away and the rest will be happiness for you and your loved ones. I hope you all the very best and wish you everything you need from life. &lt;/p&gt;

&lt;p&gt;Peace ✌🏼&lt;/p&gt;




&lt;p&gt;With all of that said, I want to thank you guys for your support &amp;amp; love. I love to be a part of the community and my only regret is that I should have joined early on. I cannot believe what I’ve achieved in the past 1.5 months and it’s all because of you guys, so THANK YOU! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y6oMWzkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njn0x5ys02yc1lvtcc0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y6oMWzkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njn0x5ys02yc1lvtcc0i.png" alt="Screenshot" width="880" height="130"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have so much planned to grow this 50,000 number in the upcoming future. So, if you guys don’t want to miss any of my upcoming blogs then you can follow me on &lt;a href="https://twitter.com/Yash_Makan"&gt;twitter&lt;/a&gt; or &lt;a href="https://dev.to/yash_makan"&gt;dev.to&lt;/a&gt;. With that being said, I would like to conclude this short blog and hope to see you again. Till then b-bye!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4y5n1K-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/TfFDiw5gBuEns4ykJl/giphy.gif%3Fcid%3D790b7611431abc7a85c76da6c399a5727f24e501f9a5cae9%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4y5n1K-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/TfFDiw5gBuEns4ykJl/giphy.gif%3Fcid%3D790b7611431abc7a85c76da6c399a5727f24e501f9a5cae9%26rid%3Dgiphy.gif%26ct%3Dg" alt="Bye Bye Gif" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-2021-articles"&gt;
  &lt;/a&gt;
  My 2021 Articles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/21-must-read-books-for-kids-begineer-advanced-interview-with-pdf-56c7"&gt;21 must-read books for kids, beginner, advanced &amp;amp; interview with PDF 🐍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/everything-about-automation-in-python-pc-mobile-web-raspberry-pi-4cgh"&gt;Improve your workflow using Automation in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/4-ways-to-create-modern-gui-in-python-in-easiest-way-possible-5e0e"&gt;4 ways to create modern GUI in python in the easiest way possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/4-best-python-web-app-hosting-services-for-freewith-complete-process-57nb"&gt;4 Free hosting platforms for python web app with step-by-step process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/18-python-one-liners-that-will-speed-up-your-coding-process-21md"&gt;18 Python one-liners that will speed up your coding process.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/ai-bot-that-could-answer-any-questions-asked-gmn"&gt;AI bot that could answer your questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/yash_makan/generate-your-own-favourite-tv-episode-using-python-1pb3"&gt;Generate your own favourite TV episode using python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contact-me"&gt;
  &lt;/a&gt;
  Contact Me
&lt;/h2&gt;

&lt;p&gt;Website: &lt;a href="http://yashmakan.co.in"&gt;yashmakan.co.in&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/Yash_Makan"&gt;@Yash_Makan&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute"&gt;
  &lt;/a&gt;
  Contribute
&lt;/h2&gt;

&lt;p&gt;buymeacoffee: &lt;a href="https://www.buymeacoffee.com/yashmakan"&gt;@Here&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Data visualisation with React and Nivo</title>
      <author>Damian Piwowarczyk</author>
      <pubDate>Tue, 28 Dec 2021 09:00:56 +0000</pubDate>
      <link>https://dev.to/przpiw/build-data-visualisation-components-with-react-and-nivo-1d7e</link>
      <guid>https://dev.to/przpiw/build-data-visualisation-components-with-react-and-nivo-1d7e</guid>
      <description>&lt;p&gt;Today I will walk you though how you can build interactive charts on your website with Nivo &amp;amp; React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nivo-and-why"&gt;
  &lt;/a&gt;
  What is Nivo and why?
&lt;/h2&gt;

&lt;p&gt;Nivo is an open-source React visualization library built on top of d3js. It allows for server-side rendering and supports svg, canvas, and HTML charts. Nivo provides 27 highly customizable char types. It has nice motion and trasitions and it is very responsive. Nivo documentation is developer-friendly and contains many examples/templates and storybooks.&lt;br&gt;
 &lt;br&gt;
In this tutorial, we will build &lt;strong&gt;PieChart&lt;/strong&gt; that takes data from a file and renders SVG pie chart. We'll be able to change our chart based on selected values.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6o5QMt3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d900ic4gi5jldy1kitgu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6o5QMt3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d900ic4gi5jldy1kitgu.gif" alt="Image final product" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We going to use nextjs starter for this application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app statsViewer &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;statsViewer &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;data.js &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;mkdir &lt;/span&gt;components &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;PieCharDemo.jsA
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add @nivo/core
yarn add @nivo/pie
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imported &lt;code&gt;ResponsivePie&lt;/code&gt; component will take a large number of props as it needs specific styling and file with data. Except that the parent component will need a height and width set.&lt;br&gt;
Beyond props used in this example, there is a bunch of other props that let us do pretty styling.&lt;/p&gt;

&lt;p&gt;Let's edit &lt;code&gt;PieChartDemo.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ResponsivePie&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nivo/pie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PieChartDemo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;600px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;500px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ResponsivePie&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;innerRadius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;padAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;cornerRadius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;activeOuterRadiusOffset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;borderWidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;borderColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;modifiers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;darker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsSkipAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsTextColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#333333&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsThickness&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLabelsSkipAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLabelsTextColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;modifiers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;darker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;valueFormat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt; %`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;legends&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;anchor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bottom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;justify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemsSpacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemTextColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#999&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;left-to-right&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;itemOpacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;symbolSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;symbolShape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;effects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hover&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;itemTextColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;]}&lt;/span&gt;
    &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Here is &lt;code&gt;data.js&lt;/code&gt; file that I look created based on data from hashnode. I took numbers and convert them to percentages instead. &lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;594.2&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;434&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;tagsByNumOfFollowers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;General Programing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GP&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;228.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;100.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nodejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nodejs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;74.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;74.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;59.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;56.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalFollowers&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;mostPopularPostsThisWeek&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;134&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Web Dev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Web Dev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dev Blogs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dev Blogs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;convertToPercent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;totalMostPopularPosts&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;br&gt;
Lastly we import our PieChartDemo component and fed it with data. I used useState hook and wired it to select input so we rerender PieChart component and feed it other data.&lt;/p&gt;






&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../styles/Home.module.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MyResponsivePie&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/MyResponsivePie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSelected&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tagsByNumOfFollowers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setSelected&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;tagsByNumOfFollowers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Tags&lt;/span&gt; &lt;span class="nx"&gt;followed&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/option&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mostPopularPostsThisWeek&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Most&lt;/span&gt; &lt;span class="nx"&gt;popular&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;week&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/option&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/select&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyResponsivePie&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;To conclude, Nivo is a great library that has many components with out-of-the-box templates and rich documentation. The number of props maybe look overwhelming especially for beginners however, it gives us developers the power of customization that other chart libraries may be limited to. &lt;/p&gt;

&lt;p&gt;I hope this article was helpful to some of you guys. Thanks for reading!&lt;/p&gt;

&lt;p&gt;Github &lt;a href="https://github.com/przpiw/Nivo-PieChart-Demo"&gt;Repo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Higher-Order Functions(HoF) in JavaScript - Explain Like I'm Five</title>
      <author>Tapas Adhikary</author>
      <pubDate>Tue, 28 Dec 2021 08:48:01 +0000</pubDate>
      <link>https://dev.to/atapas/higher-order-functionshof-in-javascript-explain-like-im-five-402f</link>
      <guid>https://dev.to/atapas/higher-order-functionshof-in-javascript-explain-like-im-five-402f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#javascript-functions"&gt;
  &lt;/a&gt;
  JavaScript Functions
&lt;/h2&gt;

&lt;p&gt;Functions are an integral part of many programming languages, and JavaScript is not an exception. In JavaScript, &lt;code&gt;functions&lt;/code&gt; are the first-class citizens. You create them, assign them as a value, pass them as arguments to other functions, also return them as a value from a function.&lt;/p&gt;

&lt;p&gt;These flexibilities help in code reusability, clean code, and composability. Today we will learn about &lt;code&gt;Higher-Order Functions&lt;/code&gt; to use functions to their full potential in JavaScript.&lt;/p&gt;

&lt;p&gt;If you like to learn from video content as well, this article is also available as a video tutorial here: 🙂&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/I0Lw9eNuUJI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don't forget to &lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;subscribe&lt;/a&gt; for the future content.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-higherorder-functions"&gt;
  &lt;/a&gt;
  What are Higher-Order Functions?
&lt;/h2&gt;

&lt;p&gt;A &lt;code&gt;Higher-Order Function&lt;/code&gt; is a regular function that takes one or more functions as arguments and/or returns a function as a value from it.&lt;/p&gt;

&lt;p&gt;Here is an example of a function that takes a function as an argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Define a function that takes a function as an argument.&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Invoke the passed function&lt;/span&gt;
  &lt;span class="nx"&gt;camera&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Invoke the function by passing a function as an argument&lt;/span&gt;
&lt;span class="nx"&gt;getCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Canon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us take another function that returns a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Define a function that returns a function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;returnFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Take the returned function in a variable.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;returnFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Now invoke the returned function.&lt;/span&gt;
&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// logs 'Hi' in the console&lt;/span&gt;

&lt;span class="c1"&gt;// Alternatively - A bit odd syntax but good to know&lt;/span&gt;
&lt;span class="nx"&gt;returnFunc&lt;/span&gt;&lt;span class="p"&gt;()();&lt;/span&gt; &lt;span class="c1"&gt;// logs 'Hi' in the console&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both of the examples above are examples of Higher-Order functions. The functions &lt;code&gt;getCapture()&lt;/code&gt; and &lt;code&gt;returnFunc()&lt;/code&gt; are Higher-Order functions. They either accept a function as an argument or return a function.&lt;/p&gt;

&lt;p&gt;Please note, it is not mandatory for a &lt;code&gt;Higher-Order function&lt;/code&gt; to perform both accepting an argument and returning a function. Performing either will make the function a Higher-Order function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-higherorder-functions-how-to-create-higherorder-functions"&gt;
  &lt;/a&gt;
  Why use Higher-Order Functions? How to create Higher-Order Functions?
&lt;/h2&gt;

&lt;p&gt;So, we understand what a Higher-Order function is. Now, let us understand why we need one and how to create it? How about doing it with a few simple examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem-code-pollution-and-smell"&gt;
  &lt;/a&gt;
  The Problem: Code Pollution and Smell
&lt;/h3&gt;

&lt;p&gt;Let's take an array of numbers,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's write code to increment each array element by a number and return the modified array. You may think about writing it as a function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incrArr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="c1"&gt;// Iterate through each elements and&lt;/span&gt;
  &lt;span class="c1"&gt;// add the number&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, if we do,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;incrArr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;14, 5, 52]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great so far. Now, if I ask you to write code to decrement each of the elements of the &lt;code&gt;data&lt;/code&gt; array by a number and return the modified array? You may think about solving it in a couple of straightforward ways. First, you can always write a function like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;decrArr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But that's lots of code duplication. We have written almost every line of the &lt;code&gt;incrArr()&lt;/code&gt; function in the &lt;code&gt;decrArr()&lt;/code&gt; function. So, let's think about the reusability here. &lt;/p&gt;

&lt;p&gt;Now, you may want to optimize the code to have one single function performing both these operations conditionally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;doOperations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;op&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;op&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;incr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;op&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;decr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, now we rely on a third argument to decide if the operation is to increment or decrease the array's number. There is a problem too. What if I ask you to multiply each element of an array by a number now? You may think about adding another &lt;code&gt;else-if&lt;/code&gt; in the &lt;code&gt;doOperations()&lt;/code&gt; function. But that's not cool.&lt;/p&gt;

&lt;p&gt;For every new operation, you need to change the logic of the core function. It makes your function polluted and will increase the chance of &lt;code&gt;code smells&lt;/code&gt;. Let's use the &lt;code&gt;Higher-Order&lt;/code&gt; function to solve this problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution-higherorder-function"&gt;
  &lt;/a&gt;
  The Solution: Higher-Order Function
&lt;/h3&gt;

&lt;p&gt;The first thing to do is create &lt;a href="https://blog.greenroots.info/what-are-pure-functions-and-side-effects-in-javascript"&gt;pure functions&lt;/a&gt; for the increment and decrement operations. These functions are supposed to do only one job at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Increment the number by another number&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Decrement the number by another number&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;decr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will write the &lt;code&gt;Higher-Order function&lt;/code&gt; that accepts a function as an argument. In this case, the passed function will be one of the pure functions defined above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;smartOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Check is the passed value(pad) is not a number.&lt;/span&gt;
  &lt;span class="c1"&gt;// If so, handle it by assigning to the zero value.&lt;/span&gt;
  &lt;span class="nx"&gt;pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please observe the above function closely. The first parameter is the array to work on. The second parameter is the operation itself. Here we pass the function directly. The last parameter is the number that you want to increament or decerement.&lt;/p&gt;

&lt;p&gt;Now, let's invoke the function to increment array elements by three.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;smartOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;incr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;15, 6, 53]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How about trying the decrement operation now?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;smartOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;decr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;10, 1, 48]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you notice that we didn't make any changes to our function to accommodate a new operation this time? That's the beauty of using the Higher-Order function. Your code is smell-free and pollution-free. So, how do we accommodate a multiplication operation now? Easy, let's see.&lt;/p&gt;

&lt;p&gt;First, create a function to perform multiplication.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, invoke the Higher-Order function by passing the multiplication operation function, &lt;code&gt;mul()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;smartOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;36, 9, 150]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's incredible. Long live &lt;code&gt;Higher-Order functions&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inbuilt-higherorder-functions-in-javascript"&gt;
  &lt;/a&gt;
  In-built Higher-Order Functions in JavaScript
&lt;/h2&gt;

&lt;p&gt;In JavaScript, there are plenty of usages of higher-order functions. You may be using them without knowing them as Higher-Order functions.&lt;/p&gt;

&lt;p&gt;For example, take the popular Array methods like, &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;reduce()&lt;/code&gt;, &lt;code&gt;find()&lt;/code&gt;, and many more. All these functions take another function as an argument to apply it to the elements of an array.&lt;/p&gt;

&lt;p&gt;Here is an example of the &lt;code&gt;filter()&lt;/code&gt; method that filters the array elements based on the condition we pass to it as part of the function argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [8, 90]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#higherorder-functions-vs-callback-functions"&gt;
  &lt;/a&gt;
  Higher-Order Functions vs Callback functions
&lt;/h2&gt;

&lt;p&gt;There is always some confusion between the Higher-Order functions and callback functions. Higher-Order Functions(HoF) and Callback Functions(CB) are different.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Higher-Order Functions(HoF): A function that takes another function(s) as an argument(s) and/or returns a function as a value.&lt;/li&gt;
&lt;li&gt;Callback Functions(CB): A function that is passed to another function.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4KjqMWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FHNEiYwXwAAYKj6.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jpJ_XdNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1433475384482275351/geM4Q3QC_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Higher-Order Functions(HoF) and Callback Functions(CB) are different.&lt;br&gt;&lt;br&gt;- HoF: A function that takes another function(s) as an argument(s) and/or returns a function to the caller.&lt;br&gt;- CB: A function that is passed to another function.&lt;br&gt;&lt;br&gt;Usages? More coming on this topic. Stay tuned. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:10 AM - 22 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1473596864096309252" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1473596864096309252" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1473596864096309252" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To conclude, the &lt;code&gt;Higher-Order function&lt;/code&gt; is a fundamental concept built in the JavaScript language. We need to find opportunities to leverage it as much as possible in our coding practices. Higher-Order function in conjunction with the pure function will help you keep your code clean and side effects free.&lt;/p&gt;

&lt;p&gt;I will leave you with this article on &lt;code&gt;Pure Function&lt;/code&gt; and &lt;code&gt;Side Effects&lt;/code&gt; in JavaScript. I hope you enjoy reading it as well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://blog.greenroots.info/what-are-pure-functions-and-side-effects-in-javascript"&gt;What are pure functions and side effects in javascript&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find all the source code used in the article in this stackblitz project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://stackblitz.com/edit/learn-js-hof"&gt;https://stackblitz.com/edit/learn-js-hof&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;



&lt;br&gt;
I hope you found this article insightful. Thanks for reading. Please like/share so that it reaches others as well.

&lt;p&gt;Let's connect. I share my learnings on JavaScript, Web Development, Career, and Content on these platforms as well,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tapasadhikary"&gt;Follow me on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/tapasadhikary?sub_confirmation=1"&gt;Subscribe to my YouTube Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/atapas"&gt;Side projects on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Things to Know Before You Start Tailwind CSS</title>
      <author>Kaushal Joshi</author>
      <pubDate>Tue, 28 Dec 2021 08:32:32 +0000</pubDate>
      <link>https://dev.to/clumsycoder/things-to-know-before-you-start-tailwind-css-4ebj</link>
      <guid>https://dev.to/clumsycoder/things-to-know-before-you-start-tailwind-css-4ebj</guid>
      <description>&lt;p&gt;With the rising popularity of Tailwind CSS, many of us might jump directly on Tailwind just to catch up with the hype. It won't take them much of their time to realize that it is not like any other traditional CSS framework. They might not even get a full picture of Tailwind and end up hating it thinking it's harder than plain CSS.  &lt;/p&gt;

&lt;p&gt;Here is my attempt to cover everything that you need to know to use Tailwind CSS in your next project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This blog focuses on CSS concepts that are essential to know for using Tailwind CSS. It is &lt;strong&gt;not&lt;/strong&gt; a tutorial to get started with it.&lt;br&gt;
&lt;a href="https://tailwindcss.com/docs/installation"&gt;Official documentation&lt;/a&gt; has covered that part pretty well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#utility-first-frameworks"&gt;
  &lt;/a&gt;
  Utility First Frameworks
&lt;/h2&gt;

&lt;p&gt;The main reason why Tailwind is different from other frameworks is that it is a utility based framework, whereas frameworks like Bootstrap or Bulma are component based frameworks. Now, what's the difference?&lt;br&gt;&lt;br&gt;
Component based frameworks provide a set of components that are used by adding predefined classes to HTML elements. For example, Bootstrap has a total of 24 components that we can use by simply adding related classes.&lt;br&gt;&lt;br&gt;
Tailwind CSS on the other hand is a utility framework. It doesn't limit your design by predefined opinionated components but provides powerful building blocks that are useful to create a unique design for your projects.&lt;/p&gt;

&lt;p&gt;Tailwind achieves this by having a class for every CSS property. Additionally, we can add our valid CSS properties to make a new tailwind class as per our needs. This gives total freedom and flexibility while designing the front end.&lt;/p&gt;

&lt;p&gt;But this comes with a cost. Component based libraries don't require you to know much about plain CSS. You refer to the documentation and use the code that you need. Tailwind being a low level utility based framework doesn't work in that way. You need to have a profound understanding of CSS to use Tailwind in the best way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intermediate-css"&gt;
  &lt;/a&gt;
  Intermediate CSS
&lt;/h2&gt;

&lt;p&gt;There is only one word that describes CSS - overwhelming. Though Tailwind gives you flexibility and saves time requires to type everything explicitly, your knowledge of plain CSS is considered as the main pre-requisites. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sizing-units"&gt;
  &lt;/a&gt;
  Sizing Units
&lt;/h3&gt;

&lt;p&gt;Especially, &lt;code&gt;rem&lt;/code&gt;.  All utility classes use &lt;code&gt;rem&lt;/code&gt; for styling. Tailwind has classes from smallest rem unit  &lt;code&gt;0.125rem&lt;/code&gt; (2px) to all the way up to 24rem. Additionally, you can add units as per your choice in &lt;code&gt;tailwind.config&lt;/code&gt; file (which can be &lt;code&gt;px&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt; or anything else too).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#responsive-design"&gt;
  &lt;/a&gt;
  Responsive Design
&lt;/h3&gt;

&lt;p&gt;Tailwind is mobile first approach to styling. So whatever you write is suited for the smallest screen size defined while configuring tailwind. By default, the smallest utility class is &lt;code&gt;sm&lt;/code&gt; that sets media query of a minimum width of 640px. You are supposed to mention the breakpoint if you are adding classes for bigger sizes than that.&lt;br&gt;
That's why, knowing about responsive design, sizing units and media queries are a must to create anything eye-pleasing with Tailwind.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexbox-amp-grid"&gt;
  &lt;/a&gt;
  Flexbox &amp;amp; Grid
&lt;/h3&gt;

&lt;p&gt;Creating layouts using grid and flexbox classes is easy as compared to traditional ways of using them. However, you might find it confusing because many classes conflict with each other resulting in a single class that is used with both layouts.&lt;br&gt;
I was talking about &lt;code&gt;justify-{value}&lt;/code&gt;, &lt;code&gt;align-{value}&lt;/code&gt;, &lt;code&gt;place-{value}&lt;/code&gt; and &lt;code&gt;gap&lt;/code&gt;. These classes serve the same purpose for flexbox as well as grid. Having a clear understanding of them would help you to save hours of confusion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-important-concepts"&gt;
  &lt;/a&gt;
  Other Important Concepts
&lt;/h3&gt;

&lt;p&gt;Of course, this is not it; CSS is more than that, and so is Tailwind. Units, responsive design and Flexbox/Grid need a special mention because once you understand how these things work, it won't be difficult for you to use Tailwind with its max out capacity.&lt;/p&gt;

&lt;p&gt;Other than that, here are a few more things that are good to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS Transition and Transform Property&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tailwindcss.com/docs/aspect-ratio"&gt;Aspect Ratios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tailwindcss.com/docs/preflight"&gt;Preflight&lt;/a&gt;: Tailwind has a set of base styling  practices built on top of &lt;a href="https://github.com/sindresorhus/modern-normalize"&gt;modern-normalize&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am not mentioning padding, margin, box sizing, float and z-index because I believe that if you don't know how to work with them, you should think about sticking to plain CSS for some more time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-tailwind"&gt;
  &lt;/a&gt;
  When to Use Tailwind?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;If you have intermediary experience with plain CSS and know how CSS is supposed to work, you can use Tailwind pretty much anywhere you want.&lt;/li&gt;
&lt;li&gt;If your front end stack has a component based library such as react, using tailwind will allow you to use it with its maximum reusability and scalability of Tailwind.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#when-not-to-use-tailwind"&gt;
  &lt;/a&gt;
  When NOT to use Tailwind?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Do not even consider using Tailwind if you don't have intermediate experience with CSS. You might not face issues in the very beginning but as your project gets bigger, it'd get messier and confusing.&lt;/li&gt;
&lt;li&gt;If you are building websites with Vanilla JS, you might not use Tailwind at its full potential. Using same class names for every different component would make the code redundant, non-readable and messy.&lt;/li&gt;
&lt;li&gt;If you are building prototypes and time/deadline is a major factor, using tailwind will slow you down. Tailwind is best suitable for big projects which give you enough time to focus on design as well as logic.&lt;/li&gt;
&lt;li&gt;Similarly, using Tailwind with projects where backend logic or backend services is more important than design must be avoided. Because you'd end up spending more time on design when your focus should be on logic.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Tailwind CSS is a utility based framework so you have to combine multiple utilities and create a component by yourself. That's why knowing about plain CSS is a must. You should have a clear understanding of sizing units, responsive design and media queries. Knowing about conflicting flexbox and grid properties would also save your confusion when you start building projects.&lt;br&gt;&lt;br&gt;
Don't jump to Tailwind if you are not comfortable with plain CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using Tailwind when you struggle with fundamentals will only lead to frustrations. But once your fundamentals are clear, no one can stop you from harnessing the full potential of Tailwind CSS! &lt;/p&gt;

&lt;p&gt;I have scheduled more blogs about starting Tailwind CSS so if you're interested, do subscribe to the newsletter and follow &lt;a href="https://clumsycoder.hashnode.dev/"&gt;my blog&lt;/a&gt;. Also, if you think there's anything that can be improved or added, I am happy to hear your opinion. I am most active on &lt;a href="https://twitter.com/clumsy_coder"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/7JKaushal"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Designing! 🎨&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>beginners</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>peviitor.ro - diferențierea</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Tue, 28 Dec 2021 08:25:10 +0000</pubDate>
      <link>https://dev.to/sebiboga/peviitorro-diferentierea-14h2</link>
      <guid>https://dev.to/sebiboga/peviitorro-diferentierea-14h2</guid>
      <description>&lt;p&gt;Un &lt;code&gt;motor de cautare&lt;/code&gt; este diferit de platformele de recrutare prezente pe piata muncii in prezent.&lt;/p&gt;

&lt;p&gt;Sa luam cateva elemente si sa mentionam diferențele:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cont-de-utilizator"&gt;
  &lt;/a&gt;
  Cont de utilizator
&lt;/h4&gt;

&lt;p&gt;Pentru a avea acces la informatia prezentata de motorul de cautare peviitor.ro &lt;code&gt;nu ai nevoie de un cont de utilizator&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ejobs&lt;/strong&gt;: Pe platforma ejobs ai nevoie de un cont de utilizator. Ei te incurajeaza sa iti creezi un profil care poate deveni in timp CV-ul tau. Diferenta intre ejobs si peviitor.ro este ca acest motor de cautare: &lt;em&gt;peviitor.ro&lt;/em&gt; &lt;code&gt;nu are nevoie de datele tale personale&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;bestjobs&lt;/strong&gt;: La fel ca si pentru ejobs, ei iti recomanda sa iti creezi un profil - cont de utilizator. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;LinkedIN&lt;/strong&gt;: La fel ca si pentru bestjos si ejobs, si platforma LinkedIN recomanda sa ai un cont de utilizator.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cariere.ro&lt;/strong&gt;: La fel ca si pentru ejobs si bestjobs sau LinkedIN, si aceasta platforma te incurajeaza sa iti creezi un profil de utilizator sau un profil de companie.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#duplicare-de-continut"&gt;
  &lt;/a&gt;
  Duplicare de continut
&lt;/h4&gt;

&lt;p&gt;Ai putea fi tentat sa spui ca prin aceasta diferentiere prezentata, ejobs ofera mai mult decat un motor de cautare. Partial adevarat insa, tinand cont de faptul ca pe platforma oamenii de HR &lt;code&gt;trebuie sa re-opereze anunturile de angajare&lt;/code&gt;, duplicand contintul de pe website-ul lor -sectiunea cariere, atunci putem sa reconsideram afirmatia.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#informatia-completa"&gt;
  &lt;/a&gt;
  Informatia completa
&lt;/h4&gt;

&lt;p&gt;Nu toate locurile de munca ale unei companii sunt prezente si pe ejobs sau alte platforme unde oamenii de HR trebuie sa re-opereze manual anuntul de angajare.  &lt;/p&gt;

&lt;p&gt;peviitor.ro &lt;code&gt;isi propune sa agregheze absolut toate locurile de munca oferite de o companie&lt;/code&gt; nu doar cateva anunturi. Consideram ca este important sa ai acces la informatia completa. Luam in serios dreptul cetateanului de a fi informat, care este un drept si nu un favor.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#date-actualizate"&gt;
  &lt;/a&gt;
  Date actualizate
&lt;/h4&gt;

&lt;p&gt;Cand o oferta de munca expira, adica acel loc de munca este ocupat, prima preocupare a persoanei din HR este sa dezactiveze anuntul de pe website-ul propriu al companiei iar dezactivarea manuala de pe platformele de tip ejobs se face putin mai tarziu. Astfel, avem prezente pe platformele de recrutare oferte de locuri de munca expirate. &lt;br&gt;
In motorul de cautare peviitor.ro &lt;code&gt;vei gasi informatia actualizata&lt;/code&gt;. Cel putin o data pe zi aducem informatiile de pe website-ul companiei si reimprospatam indexul motorului de cautare.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#viteza-de-raspuns"&gt;
  &lt;/a&gt;
  Viteza de raspuns
&lt;/h4&gt;

&lt;p&gt;Tehnologiile pe care le-am ales la implementarea solutiei tehnice ne &lt;code&gt;garanteaza faptul ca timpul de raspuns va fi cel putin surprinzator&lt;/code&gt;. Daca ne uitam la Google - care este un motor de cautare doar ca nu e specializat pe locuri de munca, observam ca aduce sute de mii de raspunsuri in sub o secunda. &lt;br&gt;
Ne-am pus problema: ei cum au reusit? Si tot ce am dezvoltat se invarte in jurul motorului de cautare, indexului si scraperului.  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#solutie-open-source"&gt;
  &lt;/a&gt;
  Solutie OPEN SOURCE
&lt;/h4&gt;

&lt;p&gt;Daca celelalte platforme de recrutare se bazeaza pe un soft proprietar al unei companii, noi, in dezvoltarea motorului de cautare peviitor.ro am dezvoltat solutia tehnica avand in gand solutiile OPEN SOURCE. De ce open source? Pentru ca noi consideram ca toti pot contribui la succesul acestui proiect, cei care vor, desigur.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pretul"&gt;
  &lt;/a&gt;
  Pretul
&lt;/h4&gt;

&lt;p&gt;Daca pentru companii a publica un anunt de angajare pe ejobs sau bestjobs sau alte platforme de recrutare implica niste costuri, pe platforma &lt;code&gt;peviitor.ro totul este GRATUIT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Am prezentat aici cateva dintre aspectele care ne diferentiaza. Mai sunt si altele pe care le vom dezvalui pe masura ce dezvoltam proiectul. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://splash.peviitor.ro/"&gt;https://splash.peviitor.ro/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>searchengine</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>Top 10 Trending Technologies to Learn in 2022</title>
      <author>Ashish Yadav</author>
      <pubDate>Tue, 28 Dec 2021 08:12:44 +0000</pubDate>
      <link>https://dev.to/expoashish/top-10-trending-technologies-to-learn-in-2022-19pd</link>
      <guid>https://dev.to/expoashish/top-10-trending-technologies-to-learn-in-2022-19pd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#top-10-trending-technologies-to-learn-in-2022"&gt;
  &lt;/a&gt;
  Top 10 Trending Technologies to Learn in 2022
&lt;/h2&gt;

&lt;p&gt;In this blog we are going to see top 10 trending Technologies to learn in 2022. Top 10 trending and new technologies in 2022. If you like my post then follow me. Lets Start:-👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-trending-technologies-to-learn.html"&gt;Top 10 Trending Technologies to Learn in 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-programming-languages-you-must.html"&gt;Top 10 Programming Languages You Must Know In 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Complete Roadmap 2022:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-python-programming.html"&gt;Python Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/java-complete-roadmap-2022.html"&gt;Java Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-data-structure.html"&gt;Data Structure Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-laravel-tutorial-for-developer"&gt;
  &lt;/a&gt;
  Some Laravel Tutorial for developer:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #1)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and_22.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #2)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Advance Laravel 8 Interview Questions and Answers 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Everything About Laravel 8 Composer 2022 | Composer in Laravel 8&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-jetstream-vs-laravel-ui-vs.html"&gt;Laravel Jetstream vs Laravel ui  vs Breeze&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-concept-and-projects"&gt;
  &lt;/a&gt;
  Python Concept and Projects:-
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;10 Best Python Libraries For Machine Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/07/alarm-clock-in-python-with-gui.html"&gt;Alarm Clock in Python with GUI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/06/tic-tac-toe-game-using-pygame-in-python.html"&gt;Tic Tac Toe Game Using Pygame in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou for reading my blogs.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#my-website"&gt;
  &lt;/a&gt;
  My Website:
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/"&gt;CodexAshish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>techtalks</category>
      <category>ai</category>
      <category>blockchain</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
