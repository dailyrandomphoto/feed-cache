<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 7 Test Reporting Tools | Latest Update</title>
      <author>TestingNews</author>
      <pubDate>Thu, 04 Nov 2021 14:37:50 +0000</pubDate>
      <link>https://dev.to/katalon/top-7-test-reporting-tools-latest-update-4bkb</link>
      <guid>https://dev.to/katalon/top-7-test-reporting-tools-latest-update-4bkb</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--THQ8BZTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Top-Reporting-Tools.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--THQ8BZTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Top-Reporting-Tools.png" alt="Test Reporting Tools" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many businesses are burdened by an excessive amount of testing data. In that circumstance, it becomes impossible to distinguish between what is valuable, and what is noise. &lt;/p&gt;

&lt;p&gt;Therefore, having an effective reporting system in place in your company will ensure that all data is properly gathered and transformed into actionable insights.&lt;/p&gt;

&lt;p&gt;This article will walk you through the benefits of test reporting, and the top 7 test reporting tools that are currently available on the market. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-test-reporting-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What Are Test Reporting Tools?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Test reporting is a critical element of the product release process because it allows stakeholders to make informed judgments about whether a product, feature or defect resolution is ready for release.&lt;/p&gt;

&lt;p&gt;A test reporting tool is an important part of the testing process that outlines the key activities carried out during the testing lifecycle for any release and the overall results of testing. It helps identify critical information about testing, such as the scope of testing, the tests that were performed, the defects that were discovered, and the overall quality recommendations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#criteria-for-choosing-the-right-test-reporting-tool"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Criteria for Choosing the Right Test Reporting Tool&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;User interface (UI):&lt;/strong&gt; Is it clean and easy to use?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Usability:&lt;/strong&gt; How simple is it to learn and master? Is the company’s tech support, tutorials, and training up to par? Is it flexible to be compatible with a wide range of various automation testing tools?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Functionality and features:&lt;/strong&gt; &lt;a href="https://www.katalon.com/resources-center/blog/test-reporting/"&gt;Reporting and analytics&lt;/a&gt;: Can team members provide comprehensive and relevant reports on test results and progress throughout the testing process?&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Value:&lt;/strong&gt; Is the price reasonable in relation to the features, capabilities, and use case? Is the price straightforward, transparent, and adaptable? &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-7-test-reporting-tools-on-the-market"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Top 7 Test Reporting Tools on the Market&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-katalon-testops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Katalon TestOps&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLQblfx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Katalon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLQblfx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Katalon.png" alt="Katalon TestOps" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Katalon TestOps&lt;/strong&gt; is the most &lt;a href="https://www.katalon.com/resources-center/blog/what-is-testops/"&gt;open and comprehensive platform&lt;/a&gt; for businesses of all sizes for _ &lt;strong&gt;Test orchestration, Test Analytics, and Built-in dashboards advanced reports.&lt;/strong&gt; _&lt;/p&gt;

&lt;p&gt;TestOps allows you to organize diverse software testing operations, cycles, and frameworks. By doing so, you can assure software quality at every stage without sacrificing speed or necessitating DevOps expertise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy-to-use UI with reporting-centric features for teams of all sizes&lt;/li&gt;
&lt;li&gt;Seamless integration with most of the popular testing frameworks (TestNG, JUnit, Bamboo, Jenkins, CircleCI, etc.)&lt;/li&gt;
&lt;li&gt;Integrations with managements platforms (Jira, Slack) and SDK and REST APIs that supercharge effective team collaboration&lt;/li&gt;
&lt;li&gt;Full picture on quality through shareable dashboards with metrics that matter most to your team&lt;/li&gt;
&lt;li&gt;Robust failure analysis of test case through rich execution reports with HAR files, videos, screenshots, execution logs, error messages, and artifacts&lt;/li&gt;
&lt;li&gt;Real-time data monitoring and customizable alerts to act early on any rising issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PkRNZUDl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/10/Try-TestOps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PkRNZUDl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/10/Try-TestOps.png" alt="Try TestOps" width="880" height="110"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-reportportal"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. ReportPortal&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sSKSZdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Report-Portal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sSKSZdD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Report-Portal.png" alt="Report Portal" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ReportPortal is an AI-powered platform developed by developers at EPAM and elsewhere in the open-source community that enables testers and key project stakeholders to organize and examine all of their testing data and reports in one location.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flexibility to allow many report types (SQL reports, OLAP reports, Crystal reports, SSRS reports)&lt;/li&gt;
&lt;li&gt;Great roadmap awareness and time to market which consistently fills the gaps of features/functionality missing from the native Microsoft BI stack&lt;/li&gt;
&lt;li&gt;Smooth integration with frameworks like Node.js, SoapUI, SpecFlow, ScalaTest, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-functionize"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Functionize&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rBqvt6Ck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Functionize.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rBqvt6Ck--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Functionize.png" alt="Functionize" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Functionize is an intelligent testing platform that helps testers build AI-powered tests that self-heal and scale in the cloud. Its combination of several ML models and Word-to-Vec NLP makes it very user-friendly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One-click SmartFix helps to detect test failures instantly&lt;/li&gt;
&lt;li&gt;Live Debug allows for live interaction when your test runs on the VM using breakpoints &lt;/li&gt;
&lt;li&gt;TestRail uses central dashboards that keep track of all requirements&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-allure-testops"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Allure TestOps&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dpaeeef1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Allua-TestOps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dpaeeef1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Allua-TestOps.png" alt="Allua TestOps" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Allure TestOps is a platform for software quality management that combines automated and manual testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collect real-time test results from the build server during the build job’s execution&lt;/li&gt;
&lt;li&gt;Start, stop, and rerun build jobs from Allure TestOps on build servers&lt;/li&gt;
&lt;li&gt;Import test results directly from IntelliJ IDEA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As this tool has limitations in integrating with the iOS system, carefully consider this option if you are using an iOS device. Additionally, since there are not many tutorials available in the documentation, some features may take more time to master.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-testim"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Testim&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O8I3qxcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Testim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O8I3qxcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Testim.png" alt="Testim" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Testim is a commercial end-to-end software testing platform that leverages artificial intelligence to enable developers and testers to quickly automate functional tests. Software quality guidelines can be followed on the web with this web-based platform as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AI-based stabilizers eliminate resource-intensive flaky tests&lt;/li&gt;
&lt;li&gt;Tests can be triggered on-demand, on a schedule, or as part of your continuous integration processes&lt;/li&gt;
&lt;li&gt;Classification of failed runs with reason codes to better understand the failure pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Testim is an intuitive solution for non-coding experts in your team to enhance the business flows and testing coverage. However, the lack of running mobile tests on Firefox, Safari, and Edge may hold you back from deploying this tool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-spiratest"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. SpiraTest&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yphsfIu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Spira-Test.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yphsfIu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Spira-Test.png" alt="Spira Test" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SpiraTest is an integrated quality assurance, test, and requirements management solution that tracks and manages your project’s requirements, test cases, releases, defects, and issues. It includes plugins for several popular automation tools, including UFT, TestComplete, Ranorex, and Selenium.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Responsive SpiralTest cloud deployment and desktop deployment on Windows&lt;/li&gt;
&lt;li&gt;Built-in support/integration with Microsoft DevOps&lt;/li&gt;
&lt;li&gt;Integration with GitHub for transferring and storing large data in a timely manner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SpiraTest is a useful tool for performing software tests in a simple way. It eliminates risks and boosts efficiency in project management from start to finish, allowing you to achieve your goals and carry them out in the best way possible. Furthermore, its implementation adjusts to professional requirements as well as multiple Windows versions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-extent-reports"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Extent Reports&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHyzXhDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Extent-Report.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHyzXhDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d1h3p5fzmizjvp.cloudfront.net/wp-content/uploads/2021/11/Extent-Report.png" alt="Extent Report" width="880" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Extent Reports, created by Anshoo Arora, is a configurable HTML report that can be integrated into Selenium WebDriver utilizing the JUnit and TestNG frameworks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feature highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stepwise and pie chart representation in a customizable HTML report&lt;/li&gt;
&lt;li&gt;Displays the test case execution time in the report&lt;/li&gt;
&lt;li&gt;Smooth integrations with frameworks such as TestNG and JUnit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When compared to the built-in reports generated by JUnit and TestNG, Extent Reports have various advantages, such as pie chart depiction, stepwise test report generation, screenshot addition, etc., at every test step and a presentable user interface that can be shared with all project stakeholders.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-test-reporting-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Benefits of Test Reporting Tools&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Choosing the right test reporting technology can help your team automate tests quicker and more efficiently.&lt;/p&gt;

&lt;p&gt;Stay updated on tools and frameworks that offer the best functionality for test reporting. A robust solution should be able to work with a wide range of programming languages, mobile platforms, and connectors. Furthermore, a TestCloud should be sufficient to facilitate massive amounts of data storage for testing data.&lt;/p&gt;

&lt;p&gt;With those requirements in mind, Katalon TestOps is your ultimate solution for test reporting. Integrating with mainstream testing frameworks, TestOps gives testing and DevOps teams full visibility of their tests, resources, and environments; and orchestration tools to &lt;a href="https://www.katalon.com/resources-center/blog/devops-orchestration-investment/"&gt;manage tests and quality insights.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The post &lt;a href="https://www.katalon.com/resources-center/blog/test-reporting-tools/"&gt;Top Test Reporting Tools&lt;/a&gt; appeared first on &lt;a href="https://www.katalon.com"&gt;Katalon Solution&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>testreporting</category>
      <category>testingtools</category>
      <category>testops</category>
      <category>testautomation</category>
    </item>
    <item>
      <title>A PURE HTML/CSS functional calendar?! 😲🤯 (+CSS APIs and all the fun things we can do with them)</title>
      <author>Siddharth</author>
      <pubDate>Thu, 04 Nov 2021 14:31:11 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/a-pure-htmlcss-functional-calendar-css-apis-and-all-the-fun-things-we-can-do-with-them-2o2k</link>
      <guid>https://dev.to/siddharthshyniben/a-pure-htmlcss-functional-calendar-css-apis-and-all-the-fun-things-we-can-do-with-them-2o2k</guid>
      <description>&lt;p&gt;Yesterday I went back to my frontend experiments after a load of JavaScript work. I experimented with the CSS custom property toggle trick (more on that later) which can allow me to have if/else logic in CSS, and with a bit of experimenting I made this CSS only calendar!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/dyzVQXV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;(It's embedded in a CodePen, if you wanna see the real thing go over to &lt;a href="https://experiments.siddu.tech/css-api/"&gt;https://experiments.siddu.tech/css-api/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;It shows the current month, year, day and date completely in CSS! And it also updates (check it tomorrow and see!). It can even handle leap years! 🤯&lt;/p&gt;

&lt;p&gt;Before I tell you what's really happening, go over to &lt;a href="https://experiments.siddu.tech/css-api/"&gt;the site&lt;/a&gt; and inspect to see what you can find. Once you are done with your experimenting, scroll.&lt;/p&gt;




&lt;p&gt;Spoilers in:&lt;/p&gt;

&lt;p&gt;3&lt;/p&gt;

&lt;p&gt;2&lt;/p&gt;

&lt;p&gt;1&lt;/p&gt;




&lt;p&gt;Alright, here's how it works: &lt;strong&gt;I'm including an external stylesheet with the data&lt;/strong&gt;. The data is generated by a GitHub action which runs a Deno script which creates a CSS file with the data in custom properties (see below).&lt;/p&gt;

&lt;p&gt;(Yeah I know I kinda lied, but not really because the site is still 0 JS 😋)&lt;/p&gt;

&lt;p&gt;This opens up a whole new door of CSS APIs which can be used to do stuff like change color themes based on the season (spooky theme in October, grass theme in March, you get the idea), or maybe even expose content with &lt;code&gt;content: var(--content)&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;That explanation too quick for you? Here's some more detail on how I did it.&lt;/p&gt;

&lt;p&gt;Now that we have the data in CSS custom properties, we need to somehow change the data into content in the HTML. To understand how I did it, it will be nice to take a look at the CSS which was generated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'2021'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;--november&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;--monday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;--day-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the CSS which was generated for the day I'm writing (Nov 1 2021, Monday)&lt;/p&gt;

&lt;p&gt;With this CSS we can easily embed the year with &lt;code&gt;:after&lt;/code&gt;, but the other properties look strange. Those properties are totally valid according to spec (the properties contain a value which is " ") and we can use them to make if else logic.&lt;/p&gt;

&lt;p&gt;Here's a simpler CodePen showing how the thing works:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SiddharthShyniben/embed/QWdaevQ?height=600&amp;amp;default-tab=css,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Open the pen in a new tab and resize to see the full effect)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let me explain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is a breakpoint setup here at 350px. This is where the variable &lt;code&gt;--color&lt;/code&gt; changes from initial to an empty space.&lt;/li&gt;
&lt;li&gt;When the browser window is wider than 350px, the value of &lt;code&gt;--color&lt;/code&gt; is initial

&lt;ul&gt;
&lt;li&gt;That makes the variable &lt;code&gt;--color-when-small&lt;/code&gt; contain the value &lt;code&gt;initial red&lt;/code&gt; which is &lt;strong&gt;invalid.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;So when we actually set the color and call that variable like background-color: &lt;code&gt;var(--color-when-small, var(--color-when-big));&lt;/code&gt;, the second value (the fallback) is used because the first is invalid.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;When the browser window is narrower than 350px, the value of --color is a space.

&lt;ul&gt;
&lt;li&gt;That makes the variable &lt;code&gt;--color-when-small&lt;/code&gt; contain the value &lt;code&gt;(space)red&lt;/code&gt;, which is &lt;strong&gt;valid&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;So when we actually set the color and call that variable like background-color: &lt;code&gt;var(--color-when-small, var(--color-when-big));&lt;/code&gt;, the first value is used&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, now we can flip the color between two values by changing a placeholder variable. I hope that clicks for you.&lt;/p&gt;

&lt;p&gt;I used the same trick in this calendar too. I first added a bunch of &lt;code&gt;span&lt;/code&gt;s with all my months:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;span class='january'&amp;gt;January&amp;lt;/span&amp;gt;
&amp;lt;span class='february'&amp;gt;February&amp;lt;/span&amp;gt;
&amp;lt;span class='march'&amp;gt;March&amp;lt;/span&amp;gt;
&amp;lt;span class='april'&amp;gt;April&amp;lt;/span&amp;gt;
&amp;lt;!-- ... ---&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then in the CSS I set the display value in the same way as above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.january {
  --display-when-correct: var(--january) block;

  display: var(--display-when-correct, none);
}

.february {
  --display-when-correct: var(--february) block;

  display: var(--display-when-correct, none);
}
/* ... */

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when &lt;code&gt;--january&lt;/code&gt; is set to &lt;code&gt;" "&lt;/code&gt;, &lt;code&gt;--display-when-correct&lt;/code&gt; becomes &lt;code&gt;(space)block&lt;/code&gt;, which is valid. And since &lt;code&gt;--february&lt;/code&gt;, &lt;code&gt;--march&lt;/code&gt; all don't exist, they become invalid (and so they are &lt;code&gt;display: none&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If this trick seems confusing (or helpful) then I'll write another detailed post on it!&lt;/p&gt;

&lt;p&gt;I did a similar thing for highlighting days and dates, here's how:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.monday {
    --bg: var(--monday) #1abc9c;
    --fg: var(--monday) white;
    --space: var(--monday) 5px;

    background: var(--bg, initial);
    border-radius: var(--space, initial);
    padding: var(--space, initial);
    color: var(--fg, initial) !important;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's the same old trick, just a few extra things to add.&lt;/p&gt;

&lt;p&gt;And also there is a fix for leap years and some other minimal stuff which you can learn by reading &lt;a href="https://github.com/SiddharthShyniben/experiments/blob/6dea6bed09769cdc65bcc15b72955646313f91d9/css-api/style.css#L106"&gt;the source&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-apis"&gt;
  &lt;/a&gt;
  CSS APIs
&lt;/h2&gt;

&lt;p&gt;We can apply the same trick I used to generate this data to make more stuff like a fun fact generator, or for having different color themes like a seasonal color palette which changes (I think GitHub uses this trick for their Halloween theme, if not they should 😉)&lt;/p&gt;

&lt;p&gt;Also, if you are up for a challenge, try implementing what I just used to make a site with a different color palette every season and share it over here! It's going to be &lt;em&gt;much easier&lt;/em&gt; than building a calendar, trust me!&lt;/p&gt;

&lt;p&gt;If you think this can be helpful in the real world, &lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fdev.to%2Fsiddharthshyniben%2Fa-pure-htmlcss-functional-calendar-css-apis-and-all-the-fun-things-we-can-do-with-them-2o2k&amp;amp;text=@SiddharthShyn%20got%20bored%20with%20JavaScript%20and%20made%20A%20FUNCTIONAL%20CALENDAR%20in%20just%20HTML/CSS%3F%21%20Check%20it%20out%21"&gt;spread the word&lt;/a&gt; so that more people can use it in real world situations.&lt;/p&gt;

&lt;p&gt;If you love my content, &lt;a href="https://twitter.com/intent/follow?screen_name=SiddharthShyn"&gt;follow me on twitter&lt;/a&gt; or over here to stay updated on my blog posts!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>nojs</category>
      <category>tricks</category>
    </item>
    <item>
      <title>Deploy NodeJS Application within 5 minutes</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Thu, 04 Nov 2021 14:13:17 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/deploy-nodejs-application-within-5-minutes-2kk1</link>
      <guid>https://dev.to/dhruv_rajkotia/deploy-nodejs-application-within-5-minutes-2kk1</guid>
      <description>&lt;p&gt;Now a days a lots of people are working on a side projects or the PoC(proof of concept) to showcase their work with rest of the world. For showing your work to rest of the world it required a deployment cost and also the person should have a knowledge regarding the deploying their apps to some server. Looking a bit weird 😟, right? Here I have come up with the quick solution for you guys. How we can deploy our NodeJs application within 5 minutes using App Engine. &lt;/p&gt;

&lt;p&gt;Google App Engine is a cloud computing platform as a service for developing and hosting web applications in Google-managed data centers. App Engine offers automatic scaling for web applications—as the number of requests increases for an application, App Engine automatically allocates more resources for the web application to handle the additional demand.&lt;/p&gt;

&lt;p&gt;Google App Engine primarily supports Go, PHP, Java, Python, Node.js, .NET, and Ruby applications, although it can also support other languages via "custom runtimes". Here we are going to use the Standard environment provide some free quota which can be enough for showing our work to the world.🤙&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;First step is to create your own NodeJS project that you wanted to deploy using App Engine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is link of the sample boiler plate code for the NodeJS application. &lt;a href="https://github.com/freeCodeCamp/boilerplate-npm/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can clone (hint: git clone ) this repo in your local and our step 1 is done 👏.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;We need to create a GCP project to deploy our Node application. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://console.cloud.google.com/cloud-resource-manager"&gt;https://console.cloud.google.com/cloud-resource-manager&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click on the create new project&lt;/li&gt;
&lt;li&gt;Provide Project name and location&lt;/li&gt;
&lt;li&gt;Click on the Create button. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure you have enabled the Cloud Build API and Enabled the Billing for your GCP project&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You probably see that new project will be created. Congratulations 👏 you have passed the 2nd stage 💪. To be honest you nailed it.😄.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Download Cloud SDK installer &amp;amp; setup our GCP project in local&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Follow the steps mention in the official document of the Google. &lt;br&gt;
&lt;a href="https://cloud.google.com/sdk/docs/quickstart"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have downloaded the Cloud SDK then go to the location of your repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p9YlRfaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibtmt5u0uvdggmkr930l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p9YlRfaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibtmt5u0uvdggmkr930l.png" alt="Image description" width="880" height="508"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1: Run the command: gcloud init&lt;br&gt;
You probably see the below screen. (You may have some less options which I have in the below screenshot)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kU84JeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnctgd3h8b59mmq4ucmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kU84JeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnctgd3h8b59mmq4ucmj.png" alt="Image description" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2: Select Create a new configuration option. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HC2V_ec5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2c25qsojj5w2m5i3e79.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HC2V_ec5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2c25qsojj5w2m5i3e79.png" alt="Image description" width="880" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3: Copy Project ID from GCP Console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lBmoKEDd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7t98mgojpo0jjtp795u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lBmoKEDd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7t98mgojpo0jjtp795u.jpg" alt="Image description" width="880" height="663"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;4: Provide that project ID in Command prompt. &lt;br&gt;
Probably you'll see the below screen. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AtDzN58m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/daqiwdelod4s3euxbgcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AtDzN58m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/daqiwdelod4s3euxbgcr.png" alt="Image description" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;5: Login with your Google Account &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that, Select Login with the new account option. So You'll be redirect to the new browser window for login. Login using the same account in which you have created your GCP project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_YVMREC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7bywifkj4ng4ux7uc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_YVMREC3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7bywifkj4ng4ux7uc5.png" alt="Image description" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;6: Select the project ID&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Select the option for your project id. You'll see the success message in the CMD.&lt;/p&gt;

&lt;p&gt;Congratulations guys, You just completed almost 80% 👍&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Create app.yaml file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create new file at the root level of the project structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUuxOHDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjcguwki4k6iniyhfp7v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUuxOHDm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjcguwki4k6iniyhfp7v.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add below code snippet in your app.yaml file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;runtime: nodejs16
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;for more info regarding the app.yaml file, please have a look &lt;a href="https://cloud.google.com/appengine/docs/flexible/nodejs/configuring-your-app-with-app-yaml"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5"&gt;
  &lt;/a&gt;
  Step 5
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Run Deploy Application Command&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run Below command to deploy your application in APP Engine&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;gcloud app deploy&lt;br&gt;
Select the region of your APP Engine deployment&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You'll see the App Deployment is in progress, Once it's done you'll get the public URL of your application which you can use it anywhere you want.&lt;/p&gt;

&lt;p&gt;You'll see the below screen once deployment is done. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k54DKoRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlheojl3lo1hl738emqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k54DKoRQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlheojl3lo1hl738emqt.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open the URL mentioned in the response(For me: &lt;a href="https://dhruv-rajkotia.uc.r.appspot.com/"&gt;https://dhruv-rajkotia.uc.r.appspot.com/&lt;/a&gt;) &lt;/p&gt;

&lt;p&gt;Note: Here you can also use the &lt;code&gt;gcloud app browse&lt;/code&gt; command which open URL in the new browser window.&lt;/p&gt;

&lt;p&gt;That's it, You have come too far to learn the deployment with App Engine. Hope 🤞 you liked it. &lt;/p&gt;

&lt;p&gt;Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;Follow&lt;/a&gt; me on Twitter to get update regarding upcoming blogs. Glad to connect with you guys😊. &lt;/p&gt;

</description>
      <category>node</category>
      <category>devops</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Filter, Map, Reduce: Combined Example</title>
      <author>coder4life</author>
      <pubDate>Thu, 04 Nov 2021 14:06:05 +0000</pubDate>
      <link>https://dev.to/coder4_life/filter-map-reduce-combined-example-jin</link>
      <guid>https://dev.to/coder4_life/filter-map-reduce-combined-example-jin</guid>
      <description>&lt;p&gt;Have you tried using filter, map, and reduce combined in a single code snippet? In this example we have an array of objects and we want the accumulated value of one of the properties in each object where the property value matches a requirement.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/70UgtzMZehc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Intro to SEO | What is a Canonical URL?</title>
      <author>Tyler V. (he/him)</author>
      <pubDate>Thu, 04 Nov 2021 13:12:59 +0000</pubDate>
      <link>https://dev.to/terabytetiger/intro-to-seo-what-is-a-canonical-url-853</link>
      <guid>https://dev.to/terabytetiger/intro-to-seo-what-is-a-canonical-url-853</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-canonical-url"&gt;
  &lt;/a&gt;
  What is a canonical URL?
&lt;/h2&gt;

&lt;p&gt;We live in a world where information is posted, shared, re-shared, listicled, compiled, tweeted, re-blogged - I could go on. With so many copies of the same article existing on the internet, this presents an interesting issue for Search Engines: How do Search Engines know the original source of the post? &lt;/p&gt;

&lt;p&gt;Canonical URLs are a way to indicate where the original post came from.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-a-canonical-url"&gt;
  &lt;/a&gt;
  What are the benefits of a canonical URL?
&lt;/h2&gt;

&lt;p&gt;The high level response to this question is "SEO Benefits" - but let's look at a more detailed level. &lt;/p&gt;

&lt;p&gt;If canonical URLs didn't exist and you posted an article on your blog, DEV, and Hashnode search engines would find themselves in a predicament when trying to serve your article to a search query - how do they know which to serve? Instead of getting "full credit" for your post, each post would have their own search result profile and in turn look like spam to  search engines - effectively resulting each fighting with each other for ranking and dragging each other down the results page. &lt;/p&gt;

&lt;p&gt;Thanks to canonical URLs, search engines don't need to assume the posts are all spam and can properly serve the original post to users searching for information - returning to a situation where the original post is claiming full credit!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-a-canonical-url"&gt;
  &lt;/a&gt;
  When to use a canonical URL?
&lt;/h2&gt;

&lt;p&gt;Based on the description of the benefits, you can probably guess that any time you post your post on another platform you'll want to include a canonical URL linking back to your blog (or wherever you want the "True source" to be coming from). &lt;/p&gt;

&lt;p&gt;Not as intuitive is that you also want to include the canonical URL back to the original source &lt;em&gt;on the original source's page!&lt;/em&gt; This essentially functions as an extra indicator to search engines that you are in fact the original source that other sites are claiming you are! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-a-canonical-url"&gt;
  &lt;/a&gt;
  How to use a canonical URL
&lt;/h2&gt;

&lt;p&gt;Now we know what a canonical URL is - so how do we use one? &lt;/p&gt;

&lt;p&gt;If you're working with a personal site and can alter the HTML, you'll want to include the following in your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"canonical"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"https://yourdomain.com/slug/path/whatever/"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Replacing the &lt;code&gt;https://yourdomain.com/slug/path/whatever/&lt;/code&gt; with the full URL to your post! If you're working with a Static Site Generator there are ways to help automate the setting of these values - &lt;a href="https://terabytetiger.com/lessons/articles/gridsome-seo-improvement-checklist/#set-a-canonical-url"&gt;Example of setting canonical URL in Gridsome&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;On sites like DEV or Hashnode, there are also ways to create these links back - usually under names such as "Original Source", "Canonical URL", or "Reposting from". &lt;/p&gt;

&lt;p&gt;🙏🏻 Go forth and Repost! 🙏🏻&lt;/p&gt;

</description>
      <category>seo</category>
      <category>webdev</category>
      <category>blog</category>
      <category>blogging</category>
    </item>
    <item>
      <title>Explain me async like I am a Kid</title>
      <author>Aditya Priyadarshi</author>
      <pubDate>Thu, 04 Nov 2021 13:07:59 +0000</pubDate>
      <link>https://dev.to/foxy4096/explain-me-async-like-i-am-a-kid-1an4</link>
      <guid>https://dev.to/foxy4096/explain-me-async-like-i-am-a-kid-1an4</guid>
      <description>&lt;p&gt;Help me!&lt;/p&gt;

&lt;p&gt;Peace ✌&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>javascript</category>
      <category>java</category>
    </item>
    <item>
      <title>Database Migrations for .NET and Entity Framework with Prisma</title>
      <author>Ruheni Alex</author>
      <pubDate>Thu, 04 Nov 2021 12:51:58 +0000</pubDate>
      <link>https://dev.to/prisma/database-migrations-for-net-and-entity-framework-with-prisma-49e0</link>
      <guid>https://dev.to/prisma/database-migrations-for-net-and-entity-framework-with-prisma-49e0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this article, you will learn how to model your data using &lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt;, run a migration with Prisma Migrate and then introspect your database with &lt;a href="https://dotnet.microsoft.com/"&gt;.NET&lt;/a&gt; to generate your &lt;a href="https://docs.microsoft.com/en-us/aspnet/entity-framework"&gt;Entity Framework&lt;/a&gt; models. This article will use Azure SQL/ SQL Server. &lt;/p&gt;

&lt;p&gt;This article only offers an alternative data modelling workflow that is succinct and offer a better development experience. Besides .NET and the Entity framework, you can also use Prisma with your tool/ frameworks of choice such as &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prisma auto-generates migration files in SQL that you can modify before applying them on your database. The workflow following this approach would be:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Model your data&lt;/li&gt;
&lt;li&gt;Run a migration using &lt;a href="https://www.prisma.io/migrate"&gt;Prisma Migrate&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use the Entity Framework to &lt;em&gt;&lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/scaffolding?tabs=dotnet-core-cli"&gt;reverse engineer&lt;/a&gt;/ scaffold/&lt;/em&gt; introspect your database and generate models and your database context.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-prisma"&gt;
  &lt;/a&gt;
  What is Prisma?
&lt;/h2&gt;

&lt;p&gt;Prisma is an object-relational mapper (ORM) that provides a declarative way to define your database models that are easy to read and comprehend. Prisma also provides &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;Prisma Client&lt;/a&gt; – an intuitive and  type-safe query builder based off your schema.&lt;/p&gt;

&lt;p&gt;At the core of Prisma is the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema"&gt;Prisma Schema&lt;/a&gt; – aka &lt;em&gt;schema file&lt;/em&gt;. The schema contains 3 parts: the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema/data-sources/"&gt;data sources&lt;/a&gt;, &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema/generators"&gt;generators&lt;/a&gt; and your &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema/data-model"&gt;data model definition&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;To follow along, ensure you have the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Familiarity with .NET and the &lt;a href="https://docs.microsoft.com/en-us/aspnet/entity-framework"&gt;Entity framework&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Installed Node.js v 12.6.x or higher&lt;/li&gt;
&lt;li&gt;Installed .NET locally&lt;/li&gt;
&lt;li&gt;A SQL Server or Azure SQL database&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=Prisma.prisma"&gt;Prisma Extension&lt;/a&gt; for VS Code users&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you're not familiar with setting up SQL Server, check out &lt;a href="https://www.prisma.io/dataguide/mssql/setting-up-a-local-sql-server-database"&gt;Setting up a local SQL Server database&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#step-1-create-a-new-console-application"&gt;
  &lt;/a&gt;
  Step 1: Create a new console application
&lt;/h2&gt;

&lt;p&gt;The first step is to create a new .NET console app in your working directory. This guide uses a console application to keep it simple. However, feel free to create any other type of application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new console &lt;span class="nt"&gt;--output&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;__app-name__&lt;span class="k"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the command is done, navigate to the project and confirm that your project is running.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;__app-name__&lt;span class="k"&gt;*&lt;/span&gt;
dotnet run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the output on the terminal is &lt;code&gt;Hello World!&lt;/code&gt;, everything seems to be running just fine!  🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-add-prisma-to-your-project"&gt;
  &lt;/a&gt;
  Step 2: Add Prisma to your project
&lt;/h2&gt;

&lt;p&gt;On a separate terminal window but still within the same project run the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;prisma-migrate
&lt;span class="nb"&gt;cd &lt;/span&gt;prisma-migrate
npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The commands create a new directory, navigate to the folder and initializes it as a Node.js project. The &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-cli"&gt;Prisma CLI&lt;/a&gt; is the only dependency for this project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; prisma
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#initialize-prisma"&gt;
  &lt;/a&gt;
  Initialize Prisma
&lt;/h3&gt;

&lt;p&gt;Once the install is done, run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma init &lt;span class="nt"&gt;--database-provider&lt;/span&gt; sqlserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creates a &lt;code&gt;.env&lt;/code&gt; file at the root of the project for storing environment variables&lt;/li&gt;
&lt;li&gt;Creates &lt;code&gt;prisma&lt;/code&gt; folder containing a &lt;code&gt;schema.prisma&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Specifies the database provider as &lt;code&gt;sqlserver&lt;/code&gt; in &lt;code&gt;schema.prisma&lt;/code&gt; file and provides a dummy &lt;code&gt;sqlserver&lt;/code&gt; connection string in &lt;code&gt;.env&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;schema.prisma&lt;/code&gt; file defines the database connection and the Prisma Client generator. This is where you will also define your database models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="c1"&gt;/// prisma/schema.prisma&lt;/span&gt;
&lt;span class="n"&gt;datasource&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sqlserver"&lt;/span&gt;
  &lt;span class="n"&gt;url&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"DATABASE_URL"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;generator&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;provider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"prisma-client-js"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this guide, you can delete &lt;code&gt;generator client&lt;/code&gt; as it is relevant in a TypeScript/ JavaScript project. The &lt;code&gt;generator client&lt;/code&gt; is used to generate the TypeScript definitions for the Prisma Client.&lt;/p&gt;

&lt;p&gt;Update &lt;code&gt;.env&lt;/code&gt; with your database connection string. Refer to &lt;a href="https://www.prisma.io/docs/concepts/database-connectors/sql-server#connection-details"&gt;connection details&lt;/a&gt; for information on how to configure the connection string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# .env&lt;/span&gt;
&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"sqlserver://HOST:PORT;database=DATABASE;user=USER;password=PASSWORD;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  If you're using a remote database during development like Azure SQL, open this to learn more about how to configure the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate/shadow-database"&gt;shadow database&lt;/a&gt;.
  &lt;br&gt;
Create a new database which will be the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate/shadow-database"&gt;shadow database&lt;/a&gt; on Azure. Update your &lt;code&gt;.env&lt;/code&gt; file to include the &lt;code&gt;SHADOW_DATABASE_URL&lt;/code&gt; as well. The shadow database will be used in the data modelling step&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# .env&lt;/span&gt;
&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"sqlserver://HOST:PORT;database=DATABASE;user=USER;password=PASSWORD;"&lt;/span&gt;
&lt;span class="nv"&gt;SHADOW_DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"sqlserver://HOST:PORT;database=DATABASE;user=USER;password=PASSWORD;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Update your &lt;code&gt;schema.prisma&lt;/code&gt; file with the connection string for the shadow database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="c1"&gt;/// prisma/schema.prisma&lt;/span&gt;
&lt;span class="n"&gt;datasource&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;provider&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"sqlserver"&lt;/span&gt;
  &lt;span class="n"&gt;url&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"DATABASE_URL"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;shadowDatabaseUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SHADOW_DATABASE_URL"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;A shadow database is a second, &lt;em&gt;temporary&lt;/em&gt; database for use in the local development workflow. When running a migration, the secondary database is created and deleted automatically unless you're using a cloud-hosted database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's an illustration of how the shadow database works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Voo8aIw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.prisma.io/docs/static/fa8149049da32d83d8014e3d14d644c0/a6d36/shadow-database.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Voo8aIw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.prisma.io/docs/static/fa8149049da32d83d8014e3d14d644c0/a6d36/shadow-database.png" alt="https://www.prisma.io/docs/static/fa8149049da32d83d8014e3d14d644c0/a6d36/shadow-database.png" width="650" height="1162"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-modelling"&gt;
  &lt;/a&gt;
  Data modelling
&lt;/h3&gt;

&lt;p&gt;This example will define 2 models: &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;User&lt;/code&gt;.The relationship between &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; is a one-to-many relationship.&lt;/p&gt;

&lt;p&gt;The models defined in &lt;code&gt;schema.prisma&lt;/code&gt; will resemble a GraphQL syntax . The models also map to a table in your database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="c1"&gt;/// prisma/schema.prisma&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt;        &lt;span class="n"&gt;Int&lt;/span&gt;      &lt;span class="nd"&gt;@id&lt;/span&gt; &lt;span class="nd"&gt;@default&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autoincrement&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
  &lt;span class="n"&gt;content&lt;/span&gt;   &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
  &lt;span class="n"&gt;title&lt;/span&gt;     &lt;span class="n"&gt;String&lt;/span&gt;
  &lt;span class="n"&gt;createdAt&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="nd"&gt;@default&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
  &lt;span class="n"&gt;author&lt;/span&gt;    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;    &lt;span class="nd"&gt;@relation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fields:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;authorId&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="nl"&gt;references:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;authorId&lt;/span&gt;  &lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt;    &lt;span class="n"&gt;Int&lt;/span&gt;     &lt;span class="nd"&gt;@id&lt;/span&gt; &lt;span class="nd"&gt;@default&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autoincrement&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt;
  &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;  &lt;span class="nd"&gt;@unique&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt;  &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
  &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Refer to the &lt;a href="https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference"&gt;Prisma Schema Reference&lt;/a&gt; for further information on database field types, attributes, conventions and functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-database-migration"&gt;
  &lt;/a&gt;
  Create a database migration
&lt;/h3&gt;

&lt;p&gt;After modelling your data, it's time to apply the changes to your database. On your terminal window, run &lt;code&gt;npx prisma migrate dev&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma migrate dev &lt;span class="nt"&gt;--name&lt;/span&gt; init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If no database exists, a new database with the database name specified in your &lt;code&gt;.env&lt;/code&gt; file will be created. The command also creates a new database migration that is located in &lt;code&gt;./prisma/migrations&lt;/code&gt; directory. The migration is in SQL and is applied against your database. &lt;code&gt;init&lt;/code&gt; refers to the migration name which you can change to something more semantic.&lt;/p&gt;

&lt;p&gt;If you wish to only create a migration but not apply it to your database, pass the &lt;code&gt;--create-only&lt;/code&gt; option to Prisma Migrate. This will generate the SQL and allow you to customize it before applying it against your database.&lt;/p&gt;

&lt;p&gt;You can confirm that the changes have been applied, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma studio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N31YC-hG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de9p51dk06cbmaviv5lt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N31YC-hG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/de9p51dk06cbmaviv5lt.png" alt="Screenshot 2021-10-17 at 19.49.28.png" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the Model you would like to view/ edit data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v10O0ukW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm5gi64m3xeb68utpt5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v10O0ukW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm5gi64m3xeb68utpt5l.png" alt="Screenshot 2021-10-17 at 19.51.25.png" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Save 1 change&lt;/strong&gt; to apply the changes.&lt;/p&gt;

&lt;p&gt;Navigate to the User model, create a new user, link the post created in the previous step and save the change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--siF3tymG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph7m5cz8jho4m5p921zw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--siF3tymG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph7m5cz8jho4m5p921zw.png" alt="Screenshot 2021-10-17 at 19.53.24.png" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-introspect-your-database-aka-reverse-engineering"&gt;
  &lt;/a&gt;
  Step 3: Introspect your database aka Reverse Engineering
&lt;/h2&gt;

&lt;p&gt;Entity framework allows you to introspect your database schema and scaffold entity type classes and the database context based off an existing database.&lt;/p&gt;

&lt;p&gt;Navigate out of &lt;code&gt;prisma-migrate&lt;/code&gt; directory to the root of your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ../
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install Entity Framework tools you will require to work with SQL Server in your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet add package Microsoft.EntityFrameworkCore.SqlServer 
dotnet add package Microsoft.EntityFrameworkCore.Tools 
dotnet add package Microsoft.EntityFrameworkCore.Design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Scaffold entity type classes based on your database schema to your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet ef dbcontext scaffold &lt;span class="s2"&gt;"Server=**HOST**;Database=**DATABASE_NAME**;User Id=**USER**;Password=**PASSWORD**"&lt;/span&gt; Microsoft.EntityFrameworkCore.SqlServer &lt;span class="nt"&gt;--context-dir&lt;/span&gt; DbContext &lt;span class="nt"&gt;--context&lt;/span&gt; BlogExampleContext &lt;span class="nt"&gt;--output-dir&lt;/span&gt; Models
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Microsoft.EntityFrameworkCore.SqlServer&lt;/code&gt; refers to the package to be used to introspect the database.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--context-dir&lt;/code&gt; and &lt;code&gt;--output-dir&lt;/code&gt; refer to the location of the context and the entity type classes after introspection&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--context&lt;/code&gt; refers to the name of your database context&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On a successful run 2 folders with 4 files will be created in your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;*&lt;/span&gt;app-name&lt;span class="k"&gt;*&lt;/span&gt;/
┣ DbContext/
┃ ┗ BlogExampleContext.cs
┣ Models/
┃ ┣ Post.cs
┃ ┗ PrismaMigration.cs
┃ ┗ User.cs
┣ ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you will notice, &lt;code&gt;PrismaMigration.cs&lt;/code&gt; was not defined in &lt;code&gt;schema.prisma&lt;/code&gt;. This is a table created by Prisma to track the migrations that have been created and applied against your database.&lt;/p&gt;

&lt;p&gt;To exclude the &lt;code&gt;PrismaMigrations&lt;/code&gt; table, and re-run the previous command but specify the tables you would like using the &lt;code&gt;--table&lt;/code&gt; and &lt;code&gt;—force&lt;/code&gt; options to overwrite the existing models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet ef dbcontext scaffold &lt;span class="s2"&gt;"Server=**HOST**;Database=**DATABASE_NAME**;User Id=**USER**;Password=**PASSWORD**"&lt;/span&gt; Microsoft.EntityFrameworkCore.SqlServer &lt;span class="nt"&gt;--context-dir&lt;/span&gt; DbContext &lt;span class="nt"&gt;--context&lt;/span&gt; BlogExampleContext &lt;span class="nt"&gt;--output-dir&lt;/span&gt; Models &lt;span class="nt"&gt;--force&lt;/span&gt; &lt;span class="nt"&gt;--table&lt;/span&gt; User &lt;span class="nt"&gt;--table&lt;/span&gt; Post
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time, 3 files are generated and the &lt;code&gt;PrismaMigrations.cs&lt;/code&gt; file is excluded when scaffolding.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're interested in migrating to Prisma with an existing database, the Prisma CLI provides &lt;code&gt;db pull&lt;/code&gt; for introspecting the database and populating &lt;code&gt;schema.prisma&lt;/code&gt; with your database models.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations! You have successfully modelled your entities, run a migration with Prisma and scaffolded your models and context with Entity Framework. &lt;/p&gt;

&lt;p&gt;Learn how you can set up and deploy a Prisma based Node.js REST API to Azure Functions together with Azure SQL in &lt;a href="https://www.prisma.io/docs/guides/deployment/deployment-guides/deploying-to-azure-functions"&gt;Deploying to Azure Functions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you would like to learn more about Prisma, check out the &lt;a href="https://www.prisma.io/docs"&gt;documentation&lt;/a&gt; and feel free to create an &lt;a href="https://github.com/prisma/prisma/issues"&gt;issue&lt;/a&gt; or start a &lt;a href="https://github.com/prisma/prisma/discussions"&gt;discussion&lt;/a&gt; on GitHub.&lt;/p&gt;

</description>
      <category>prisma</category>
      <category>database</category>
      <category>backend</category>
      <category>entityframework</category>
    </item>
    <item>
      <title>Saying goodbye to The .NET Stacks</title>
      <author>Dave Brock</author>
      <pubDate>Thu, 04 Nov 2021 12:42:14 +0000</pubDate>
      <link>https://dev.to/daveabrock/saying-goodbye-to-the-net-stacks-3nc3</link>
      <guid>https://dev.to/daveabrock/saying-goodbye-to-the-net-stacks-3nc3</guid>
      <description>&lt;p&gt;I wanted to write a quick note to let everyone know that I will no longer be producing &lt;em&gt;The .NET Stacks&lt;/em&gt;. This does not mean I'll be going away or leaving the wonderful .NET community—it just means I'll be producing content in other ways.&lt;/p&gt;

&lt;p&gt;I wouldn't call the newsletter a smashing success by any means, but was thrilled that something I started while bored during a pandemic grew to a few thousand readers every week on various mediums (whether over e-mail, &lt;em&gt;dev.to&lt;/em&gt;, or &lt;em&gt;daveabrock.com&lt;/em&gt;). I'm grateful to all of you for reading and being so supportive—and if it helped you, I'm even happier. It's been a lot of fun and I've even "met" quite a few friends along the way, even if we've never physically met.&lt;/p&gt;

&lt;p&gt;I initially set out to produce something more substantive and not a weekly thing where I send out links every week, as I felt there wasn't a lot of that out there. I wanted to write about trends and topics, and interview folks, and provide a little more context. I quickly realized why there wasn't a lot of that out there: it's so much work to do that on a weekly basis, week in, week out.&lt;/p&gt;

&lt;p&gt;With a busy personal life, I'm passionate about community work but with limited time. I did a lot of work to automate things as I could, but &lt;em&gt;The .NET Stacks&lt;/em&gt; doesn't leave time for any other community work or projects that I'm passionate about. To me, I could either slim down the newsletter and its quality and make it easier to manage, or focus work in other areas. I've chosen the latter.&lt;/p&gt;

&lt;p&gt;It's hard to believe I've produced 70 weekly issues over 18 months, and have used the newsletter to ramble about .NET to the tune of about 104,000 words. Thanks to you all: thanks for reading every week, and thanks for those of you who have emailed me nice words or to ask if I've lost my marbles—both valid, by the way—and thanks for listening. I hope you'll continue to keep up with me at &lt;em&gt;daveabrock.com&lt;/em&gt;. Talk to you soon and keep in touch.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>azure</category>
    </item>
    <item>
      <title>Beginner’s guide to JavaScript’s map()
</title>
      <author>wgotterer</author>
      <pubDate>Thu, 04 Nov 2021 12:13:03 +0000</pubDate>
      <link>https://dev.to/wgotterer/beginners-guide-to-javascripts-map-1c8f</link>
      <guid>https://dev.to/wgotterer/beginners-guide-to-javascripts-map-1c8f</guid>
      <description>&lt;p&gt;What is a map() function and how do we use it? Let’s use a Spongebob analogy to unpack what it does.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Unb-CfNx4KQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this episode, Spongebob, Patrick, and Mr. Krabs go on an adventure to find the Dutchman’s treasure. The three rely on a map to get to their destination. This is a good start. A regular map outlines the terrain of the real world, gives us a copy of the features that exist, and we can arrive at different end points depending on the path we take. Our map() function takes on similar characteristics, hence, “map”().&lt;br&gt;
W3schools defines a map() as&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-a-method-that-creates-a-new-array-with-the-results-of-calling-a-function-for-every-array-element"&gt;
  &lt;/a&gt;
  — a method that creates a new array with the results of calling a function for every array element
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-a-method-calls-the-provided-function-once-for-each-element-in-an-array-in-order"&gt;
  &lt;/a&gt;
  — a method calls the provided function once for each element in an array, in order.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#-a-method-that-does-not-change-the-original-array"&gt;
  &lt;/a&gt;
  — a method that does not change the original array.
&lt;/h4&gt;

&lt;p&gt;Let’s delve into what this means using an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gz-LHfi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inbuyfn4dfah6vl166uw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gz-LHfi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inbuyfn4dfah6vl166uw.png" alt="Image description" width="880" height="327"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example we have an array, “numOfKrabbyPatties”, that shows the amount of Krabby Patties we can imagine Mr. Krabs, Spongebob, and Patrick having at the beginning of their treasure hunt. Next, the variable, “leftoverPattiesArr”, is created to represent what happens to the Krabby Patties of each character after a certain amount of time. In this case 3 are eaten by each character.&lt;/p&gt;

&lt;p&gt;If we take a look at the value of “leftoverPattiesArr” we can see that we are taking our “numOfKrabbyPatties” array and using the map() function on it. The map() function inherently calls on EACH item in the “numOfKrabbyPatties” array, but we need to tell it what we want it to do with the “numOfKrabbyPatties” array. This is where the function “hungryCharacters” play its role. It gives the map() some guidance. Just like our three characters traversing the ocean floor to find the “X” on the treasure map, our “hungryCharacters” function is similar in that it provides the trail the array must follow to get to its new end point.&lt;br&gt;
Taking a closer look at our “hungryCharacters” function, one can notice that a parameter, “patties”, is set. Wrapping my head around what this parameter does was a little challenging at first. Alas, with the help of Spongebob and his friends, anything is possible! Remember that the function is called once for EVERY element in the array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pCe31f4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p78u512vbgkhyjh3bxvx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pCe31f4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p78u512vbgkhyjh3bxvx.jpg" alt="Image description" width="629" height="595"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is happing when we invoke “leftoverPattiesArr” is the map takes the first element in “numOfKrabbyPatties” and passes it through our function. In our case 12 Krabby Patties becomes the “patties” placeholders, and the subtraction (12–3) is performed. Again, the inherent property of the map() is to now take the second element of “numOfKrabbyPatties” and follow the same path. The second element is 6, therefore as it moves through the function it, for the time being, replaces the “patties” placeholders. Thus performing (6–3). The same process repeats for the last element in our array as well. Finally, we have a non-destructive process that keeps our old array, “numOfKrabbyPatties”, in tact while providing us with a new, manipulated array, “leftoverPattiesArr”.&lt;/p&gt;

&lt;p&gt;As we navigate with our map, what gets altered is how we exist within that terrain. We are, in other words, making changes to our relationship with our map. One minute we are at point “a” and some time later we are at point “b”. Similarly, in our example the Krabby Patties are being manipulated as they move through their map() terrain. At the so called beginning, point “a”, of the map() they are one way and by the end, point “b”, another.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-dig-a-little-deeper"&gt;
  &lt;/a&gt;
  Let’s dig a little deeper!
&lt;/h1&gt;

&lt;p&gt;We don’t always deal with arrays that are that simple. Let’s take a look at one with some objects inside. If you aren’t familiar with the Spongebob episode being referred to throughout this article, you should know that the three get into a small quarrel regarding the treasure after it’s found. Their commotion wakes the ghost of The Flying Dutchman and he is subsequently angry. For the purpose of this example, let’s say that he takes back his treasure chest and gives each of our characters 1 gold coin.&lt;/p&gt;

&lt;p&gt;We want to express this by creating sentences with the new information we have. Below you will see “characters”, an array of 3 objects containing 2 key:value pairs. Our function “getTreasure” will be invoked for every object in our array. In this case 3. Similarly to our previous example, the parameter, “oneCharacter”, is a place holder for each entire object. For example, the first iteration would take {name : “Mr. Krabs”, treasure: 0} and pass it in as the new temporary placeholder. At this point, between the curly braces “{}”, is where we say what we want to do with this object. In this function we are saying we want ${oneCharacter.name}. “OneCharacter” being the placeholder for each object iteration within the array. We then want to grab the value of “name” to begin our sentence. This is interpolated using back-ticks at the beginning and end of the return statement. Then putting our variables between ${}. This allows us to incorporate stringed elements such as “has” and “piece of gold!”. We interpolate a second time using ${oneCharacter.treasure + 1}. Just like the previous interpolation, our “OneCharacter” is the placeholder for each iteration over the objects. We then grab ahold of the “treasure” key in order to get its value. Finally we add 1 to the value. As a final result one can see that characters.map(getTreasure) gives us a new array of three different strings! Remember, our initial array of “characters” was not changed because map() is non-destructive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fdmicn2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki3dbbr6hltinqo4781n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fdmicn2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ki3dbbr6hltinqo4781n.png" alt="Image description" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/jsref/jsref_map.asp"&gt;https://www.w3schools.com/jsref/jsref_map.asp&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Quora vs Medium: Which One is Best for writers?</title>
      <author>Bhavyashah</author>
      <pubDate>Thu, 04 Nov 2021 12:06:54 +0000</pubDate>
      <link>https://dev.to/bhavyashah/quora-vs-medium-which-one-is-best-for-writers-occ</link>
      <guid>https://dev.to/bhavyashah/quora-vs-medium-which-one-is-best-for-writers-occ</guid>
      <description>&lt;p&gt;Image Credit: &lt;a href="https://www.blogtriggers.com"&gt;BlogTriggers.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;People always ask more and more about this “&lt;a href="https://www.blogtriggers.com/2021/05/which-writing-platform-should-i-use-quora-vs-medium.html"&gt;Quora vs Medium&lt;/a&gt;” thing and whether choosing one or another for their blogs, content pieces or online writings is the best choice.&lt;/p&gt;

&lt;p&gt;Quora and Medium both successful. I like Medium because there was a lot of traffic and audience on the main site for articles. Quora was more specific about certain topics, and maybe contains lesser noise overall. &lt;/p&gt;

&lt;p&gt;However, personally, I like the way Medium's interface looks better than Quora's to read quality articles. Both platforms has their differerences, but we can share ideas and thoughts just as much as we want to.&lt;/p&gt;

&lt;p&gt;Medium is best rather than quora for content writers in my view because it has greater credibility in terms of attracting viewers, readers, subscribers when compared to quora. I have observed that when I post an article on Quora it hardly gets any eyeballs when compared to Medium. But when I post the same article on Medium, in fact the same article gets well accepted by the viewers.&lt;/p&gt;

&lt;h3&gt;Final Conclusion of Quora vs Medium&lt;/h3&gt;

&lt;p&gt;If you are a beginner, you should start with quora, because the audience of quora is much bigger than medium. On the other hand, if you are an experienced content writer, go with medium because your content will be seen by more experience people.&lt;/p&gt;

</description>
      <category>knowledge</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Things to Consider While Launching a Website!</title>
      <author>Alsyke Technologies </author>
      <pubDate>Thu, 04 Nov 2021 11:58:21 +0000</pubDate>
      <link>https://dev.to/alsyketech/things-to-consider-while-launching-a-website-cm6</link>
      <guid>https://dev.to/alsyketech/things-to-consider-while-launching-a-website-cm6</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R1dHkyo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7tv7ay2irpxc2ravsza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R1dHkyo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7tv7ay2irpxc2ravsza.png" alt="Website for Startups" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
For businesses, launching a new website is an interesting moment. It's important to analyze what must be updated and to concentrate on design adjustments and possible design applications. Because your new website will be the cornerstone of your business and will function as a gateway for representing your company to your customers, it must give the highest level of customer satisfaction. If you’re not prepared a checklist to stay on top of all activities, that could be quite frightening. &lt;br&gt;
Your new website must make it easy for all visitors to figure a way to what they're looking for. Profitable web development services and user experience can include anything from visitors reviewing an article to understand further about your business to signing up and becoming a subscriber.&lt;br&gt;
The main purpose of this blog is to provide you with a strategy for what you should do once you're prepared for launching a new website so that you may prevent some major issues so let’s have a look at the checklist below!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-pay-attention-to-branding"&gt;
  &lt;/a&gt;
  1. Pay Attention to Branding
&lt;/h2&gt;

&lt;p&gt;Before launching a new website, ensure that your business strategy is clearly represented. It shouldn't be up to your customers to figure out what you are providing or marketing. Effective marketing is applied by &lt;a href="https://alsyke.com/web-development/"&gt;leading web development services&lt;/a&gt; suppliers to assist enhance the customer interface and increase your web presence. It must begin with your website customers' initial engagement with you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-is-your-website-easy-to-navigate-for-visitors"&gt;
  &lt;/a&gt;
  2. Is your Website Easy to Navigate for Visitors?
&lt;/h2&gt;

&lt;p&gt;Every new website viewer must be able to understand the presented content without any difficulty. By using a consistent font and structure, and clear graphics, formatting, and color, web development service providers make sure that websites are direct and comprehensive. &lt;/p&gt;

&lt;p&gt;Aside from layout, web developers use subsections, precise paras, and blurbs to assist your user’s breakdown of the page into feasible bits. Admittedly, launching a new website will ultimately be a means of speaking directly with your primary customers, and your website will fail to produce the outcomes your company requires if it fails to engage effectively.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-examine-the-efficiency-of-your-website"&gt;
  &lt;/a&gt;
  3. Examine the Efficiency of your Website
&lt;/h2&gt;

&lt;p&gt;It is undeniable that checking your website might not be an enjoyable task, but you must ensure that every aspect of it functions properly before launching a new website.&lt;br&gt;&lt;br&gt;
If you know how to code, you should think about writing your own test automation, specifically if you've a lot of aspects and browser hardware compatibility. The upfront time and effort commitment can be quite profitable. If you desire that your website should be handled by professionals to accomplish these goals, you can reach to web development service providers with a second thought that will take care of every aspect of your website from developing to managing functionality.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-is-your-website-userfriendly"&gt;
  &lt;/a&gt;
  4. Is your Website User-Friendly?
&lt;/h2&gt;

&lt;p&gt;When launching a new website, web development services providers ensure that it is approachable to people of different origins and backgrounds.  By attracting the widest possible public, they ensure that all customers have accessibility to the website's content, functioning, and services, by incorporating informative alt-text for visuals and creating adaptive forms with clear labels. Your website will give a strong perception of your corporation to a wider set of people by providing multiple options of obtaining information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-employ-triedandtrue-seo-methods"&gt;
  &lt;/a&gt;
  5.    Employ Tried-and-True SEO Methods
&lt;/h2&gt;

&lt;p&gt;If you wish visitors to explore your website, SEO work will enable it. Employ suitable link building tactics for the launching of your website, like creating innovative website headings and meta-headings. Web development service suppliers   might also create a link engagement strategy, which includes suggestions about how to popularize your startup and build hype that will make it succeed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-mobile-responsive-website"&gt;
  &lt;/a&gt;
  6.    Mobile Responsive Website
&lt;/h2&gt;

&lt;p&gt;Mobile devices like cell phones and iPad are used by most web consumers. When it comes to designing a website for mobile devices, everything like article layout, graphics, and tabs must all fit on a much smaller screen. &lt;br&gt;
Smart phones should be considered while designing &lt;a href="https://alsyke.com/ui-ux-design/"&gt;proper ui ux design for your website&lt;/a&gt;, and it's a good way to check it on as many different browsers as possible before launching your website that usually every good web developer does. It would be much better if they can detect and repair any flaws prior to your site going online than by doing changes or revamps after customers start visiting. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-check-ctas-for-accuracy-and-put-them-to-the-test"&gt;
  &lt;/a&gt;
  7. Check CTAs for Accuracy and Put them to the Test
&lt;/h2&gt;

&lt;p&gt;You will require a CTAs if you want your visitors doing something, such as signup links in an email, make a purchase, or submit a remark. If you would reach to web development services, the developers will make sure that it sticks out and is simple to implement for your customers. You can't demand your site's viewers do what you want if you keep the procedure complex or irritating.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-make-a-backup-process"&gt;
  &lt;/a&gt;
  8. Make a Backup Process
&lt;/h2&gt;

&lt;p&gt;Lastly, before launching a new website, keep in mind to set up security measures and back up your data to avoid data loss, which can also be useful in the event of a computer virus.&lt;br&gt;
As you've observed, there's a whole myriad of factors you can take to guarantee all your site's main crucial elements are operational ahead of launch.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Deploying an Elixir Release using Docker on Render.com</title>
      <author>Miguel Cobá</author>
      <pubDate>Thu, 04 Nov 2021 11:51:47 +0000</pubDate>
      <link>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-rendercom-283a</link>
      <guid>https://dev.to/miguelcoba/deploying-an-elixir-release-using-docker-on-rendercom-283a</guid>
      <description>&lt;p&gt;I'm going to show you how to deploy our Elixir Release to render.com. We'll use our  &lt;a href="https://blog.miguelcoba.com/deploying-a-phoenix-16-app-with-docker-and-elixir-releases"&gt;Docker image&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prepare-elixir-release-for-deploying-to-rendercom"&gt;
  &lt;/a&gt;
  Prepare Elixir Release for deploying to render.com
&lt;/h2&gt;

&lt;p&gt;We only need to do a single change to our &lt;code&gt;runtime.exs&lt;/code&gt; file. Add the &lt;code&gt;url:&lt;/code&gt; line to the&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;  &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="ss"&gt;:saturn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;SaturnWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;url:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;host:&lt;/span&gt; &lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"RENDER_EXTERNAL_HOSTNAME"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;port:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;http:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="c1"&gt;# Enable IPv6 and bind on all interfaces.&lt;/span&gt;
      &lt;span class="c1"&gt;# Set it to  {0, 0, 0, 0, 0, 0, 0, 1} for local network only access.&lt;/span&gt;
      &lt;span class="c1"&gt;# See the documentation on https://hexdocs.pm/plug_cowboy/Plug.Cowboy.html&lt;/span&gt;
      &lt;span class="c1"&gt;# for details about using IPv6 vs IPv4 and loopback vs public addresses.&lt;/span&gt;
      &lt;span class="ss"&gt;ip:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="ss"&gt;port:&lt;/span&gt; &lt;span class="no"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"PORT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"4000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;secret_key_base:&lt;/span&gt; &lt;span class="n"&gt;secret_key_base&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am creating a branch named &lt;code&gt;render-deployment&lt;/code&gt; and committing all these changes to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; render-deployment
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Config for render.com"&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin render-deployment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-and-configure-your-rendercom-account"&gt;
  &lt;/a&gt;
  Create and configure your render.com account
&lt;/h2&gt;

&lt;p&gt;Create an account in render.com and log in. We are going to create two services, one for the database and one for the Elixir Release. We must be sure that both services are created in the &lt;em&gt;same&lt;/em&gt; region so that they share the same private network and can communicate and establish connections using their assigned network names. If we fail to do this, you'll see errors in the logs saying that the database domain name is non-existant (:nxdomain error). &lt;/p&gt;

&lt;p&gt;For this article, I'm going to put both in the &lt;code&gt;Oregon, USA&lt;/code&gt; region. Be sure to use the same one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-database"&gt;
  &lt;/a&gt;
  Create the Database
&lt;/h3&gt;

&lt;p&gt;Create a database service by clicking the &lt;code&gt;New +&lt;/code&gt; button on the dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrkVcQy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnmvbgymot5h4of8kml1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrkVcQy_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnmvbgymot5h4of8kml1.png" alt="Create a new Database" width="457" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select one name for this service (I'm using Saturn DB) and ensure the &lt;code&gt;Oregon, USA&lt;/code&gt; region is selected. Leave the other fields to their defaults and select the &lt;code&gt;Free&lt;/code&gt; plan. Then click the &lt;code&gt;Create Database&lt;/code&gt; to provision this service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55meqLOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aol0jtt5l4p26q48lspx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55meqLOP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aol0jtt5l4p26q48lspx.png" alt="Configure Database" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the next page you'll see the details of the database. We need to copy one value from here, the connection string that we'll use for the &lt;code&gt;DATABASE_URL&lt;/code&gt; environment variable when we create the Elixir Release service.&lt;/p&gt;

&lt;p&gt;Click the copy button on the &lt;em&gt;Internal Connection String&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4uh_z5Y8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vozanc9htfb3q10j6dft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4uh_z5Y8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vozanc9htfb3q10j6dft.png" alt="Copy Internal Connection String" width="868" height="845"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-web-service"&gt;
  &lt;/a&gt;
  Create the Web Service
&lt;/h3&gt;

&lt;p&gt;Let's create a &lt;em&gt;Web Service&lt;/em&gt; with the &lt;code&gt;New +&lt;/code&gt; button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bXImYf8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cjmpvkx5qjixkuid9xl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bXImYf8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cjmpvkx5qjixkuid9xl.png" alt="Create a Web Service" width="677" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll need to connect your GitHub or GitLab account:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ebJsLo81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xfpsd11n3qvdbc17r0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ebJsLo81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xfpsd11n3qvdbc17r0q.png" alt="Connect your GitHub or GitLab account" width="880" height="144"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and select the repository you want to deploy:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsTMkKXF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yekvm89x2nstyejua6r7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsTMkKXF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yekvm89x2nstyejua6r7.png" alt="Select repository to deploy" width="494" height="303"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's configure it. Set a name for your service (I'm using Saturn here). You'll see that the Dockerfile was detected and the Environment is preselected to &lt;code&gt;Docker&lt;/code&gt;. Ensure you're using the &lt;code&gt;Oregon, USA&lt;/code&gt; region, otherwise both services won't be able to connect each other. Select the branch you want to deploy (in my case is &lt;code&gt;render-deployment&lt;/code&gt;) and select the &lt;em&gt;Free&lt;/em&gt; plan.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bbkGUWI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qe0zcoy3b5kkj014yn93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbkGUWI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qe0zcoy3b5kkj014yn93.png" alt="Configure Web Service" width="880" height="671"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mix phx.gen.secret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to add a couple of environment variables. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ET7ALdWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hbwg78l7xdj1wlfaxji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ET7ALdWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hbwg78l7xdj1wlfaxji.png" alt="Create environment variables" width="880" height="204"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;DATABASE_URL&lt;/code&gt; and paste the value you copied from the &lt;em&gt;Internal Connection String&lt;/em&gt; field in the Database service config page.&lt;/p&gt;

&lt;p&gt;Then add another named &lt;code&gt;SECRET_KEY_BASE&lt;/code&gt;. Run this command on the terminal and use the result as the value for it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;mix phx.gen.secret
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GN9C1Gpr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/149pynlmysnvsnpac5tt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GN9C1Gpr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/149pynlmysnvsnpac5tt.png" alt="Environment variables created" width="880" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now create the Web Service. You'll see the status of the provisioning and when it is ready you'll see a green &lt;code&gt;Live&lt;/code&gt; button and a line on the logs saying that the Endpoint is listening for requests:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--soaRt1z3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbtuqkwz3il7955cfng8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--soaRt1z3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbtuqkwz3il7955cfng8.png" alt="Provisioning Web Service" width="880" height="696"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you click on the URL generated for your Web Service you'll see your Elixir Release app running on Render.com infrastructure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27SDSBd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg5zu71vt9hqp6o9osvg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27SDSBd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg5zu71vt9hqp6o9osvg.png" alt="Elixir Release running on render.com" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-migrations-and-connecting-to-the-running-instance"&gt;
  &lt;/a&gt;
  Running Migrations and connecting to the running instance
&lt;/h2&gt;

&lt;p&gt;This is something I couldn't do so far. The UI render provides has no way to connect to the running container. One way to run the migrations would be:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build the Elixir Release locally as shown &lt;a href="https://blog.miguelcoba.com/preparing-a-phoenix-16-app-for-deployment-with-elixir-releases"&gt;here&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Copy the &lt;em&gt;External Connection String&lt;/em&gt; from the database configuration page&lt;/li&gt;
&lt;li&gt;Set a DATABASE_URL environment variable to that value&lt;/li&gt;
&lt;li&gt;Run the &lt;code&gt;_build/prod/rel/saturn/bin/saturn eval "Saturn.Release.migrate"&lt;/code&gt; command&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source code
&lt;/h2&gt;

&lt;p&gt;The  &lt;a href="https://github.com/miguelcoba/saturn/tree/render-deployment"&gt;source code&lt;/a&gt;  for the saturn project is open source under the MIT license. Use the &lt;code&gt;render-deployment&lt;/code&gt; branch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h2&gt;

&lt;p&gt;I'm &lt;a href="https://miguelcoba.com"&gt;Miguel Cobá&lt;/a&gt;. Follow me on &lt;a href="https://twitter.com/MiguelCoba_"&gt;Twitter&lt;/a&gt;, subscribe to my &lt;a href="https://newsletter.miguelcoba.com"&gt;newsletter&lt;/a&gt;, or read all my &lt;a href="https://blog.miguelcoba.com"&gt;articles&lt;/a&gt; to learn more info about Elixir, Elm, Web Development, or writing eBooks.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@mueen_30?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Mueen Agherdien&lt;/a&gt; on &lt;a href="https://unsplash.com/t/architecture?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>beginners</category>
      <category>docker</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
