<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why I love creating simple languages</title>
      <author>Phu Minh</author>
      <pubDate>Fri, 25 Jun 2021 14:03:01 +0000</pubDate>
      <link>https://dev.to/freakcdev297/why-i-love-creating-simple-languages-3l4m</link>
      <guid>https://dev.to/freakcdev297/why-i-love-creating-simple-languages-3l4m</guid>
      <description>&lt;p&gt;First of all, who am I? I'm just a random coder who like programming languages and love to create some (mostly *esolangs). In the past, I've built some small *esoteric languages which I will mention while we progress through the article.&lt;/p&gt;

&lt;p&gt;(*) Languages that are created for fun, or with mind-challenging rules, or to just be a joke.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-i-like-creating-them"&gt;
  &lt;/a&gt;
  Why I like creating them?
&lt;/h1&gt;

&lt;p&gt;I've always wondered how a programming language just magically works and brings my dreamt projects to reality. Now that I actually try to create one, I have gained a lot of knowledge about how they actually functions. Furthermore, it has come in handy in some of my work (in creating tools and extensions for coders specifically), where I can just copy my old parser or lexer and paste it into the new codebase (lol).&lt;/p&gt;

&lt;p&gt;Or it's just somewhat amazing to proudly say "I created my own programming language".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#esolangs"&gt;
  &lt;/a&gt;
  Esolangs
&lt;/h2&gt;

&lt;p&gt;When talking about esolangs, it's a whole different story. It's just fun coming up with weird and quirky ideas and just throw them into a language. It's also fun making extremely hard ones, sometimes challenges can be interesting :D&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-it-for-your-own-projects"&gt;
  &lt;/a&gt;
  Use it for your own projects
&lt;/h2&gt;

&lt;p&gt;For this section only, I'll target both "you" and "I" as it's kind of an opened thread.&lt;/p&gt;

&lt;p&gt;If you like your own language syntactically or for how it works, or just because it just serves you better in some special cases comparing to ones that are popular, then you can totally use it with little doubts.&lt;br&gt;
In my case, me and my teammates have created "Cassidy", which is basically just C# on the web. It brings safety and precision to our projects.&lt;/p&gt;

&lt;p&gt;Besides, if you just create a superset of another language, then it can stick into the whole codebase without damaging your project anyway, so it's probably usable. &lt;em&gt;Speaking from experiences&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#languages-i-have-created"&gt;
  &lt;/a&gt;
  Languages I have created
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FreakC-Foundation/FreakC"&gt;FreakC (18+)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/Jellyscript"&gt;Jellyscript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/brainfuckjs"&gt;A brainf*ck implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nguyenphuminh/VNC"&gt;VNC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cassidy (not public)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all, hope you would share your thoughts in the comment section :D&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>languages</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 25 Jun 2021 14:00:51 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-10c6</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-10c6</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Cooking something delicious... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins this week!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5wFUyB8MfaXthrK3OT/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5wFUyB8MfaXthrK3OT/giphy.gif" alt="Kid in headphones doing a cartwheel"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Comment fonctionne le Async / Await en javascript ?</title>
      <author> Eric Le Codeur</author>
      <pubDate>Fri, 25 Jun 2021 13:58:01 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/comment-fonctionne-le-async-await-en-javascript-3kf9</link>
      <guid>https://dev.to/ericlecodeur/comment-fonctionne-le-async-await-en-javascript-3kf9</guid>
      <description>&lt;h2&gt;Synchrone vs Asynchrone&lt;/h2&gt;

&lt;p&gt;Le code &lt;b&gt;synchrone&lt;/b&gt; est ex√©cut√© ligne par ligne. Chaque ligne de code attend toujours la fin de la ligne pr√©c√©dente avant d'ex√©cuter la suivante. Alors √©videmment, le probl√®me est qu'une op√©ration longue dur√©e bloquera l'ex√©cution du code.&lt;/p&gt;

&lt;p&gt;Le code &lt;b&gt;asynchrone&lt;/b&gt; quant √† lui n'est pas bloquant, alors il n'attend pas la fin d'une autre t√¢che.&lt;/p&gt;

&lt;p&gt;Un exemple d'asynchrone en javascript est la fonction fetch() Fetch) permet d'obtenir des donn√©es (g√©n√©ralement en format JSON) √† un serveur web de mani√®re dynamique (sans bloqu√© l'ex√©cution du code et sans recharger la page)&lt;/p&gt;

&lt;p&gt;Une fonction asynchrone moderne comme fetch() renvoie une promesse. aka, un conteneur/espace r√©serv√© pour un r√©sultat futur. Le futur r√©sultat/valeur est la r√©ponse de l'appel fetch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Exemple d'une fonction fetch() renvoyant une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Retourne une promesse&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Promise {&amp;lt;pending&amp;gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Une promesse est en attente jusqu'√† ce qu'elle soit r√©gl√©e (termin√©). Il peut avoir deux statuts r√©gl√©s : accompli (succ√®s) ou rejet√© (erreur).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Exemple d'une fonction fetch() renvoyant une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCatsImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction fetch() renvoie une promesse&lt;/span&gt;
  &lt;span class="c1"&gt;// Lorsque la promesse est remplie, la fonction s'ex√©cute&lt;/span&gt;
  &lt;span class="c1"&gt;// Le r√©sultat est contenu dans le param√®tre data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadCatImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Gestion des erreurs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getCatsImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction fetch() renvoie une promesse&lt;/span&gt;
  &lt;span class="c1"&gt;// Lorsque la promesse est remplie, la fonction s'ex√©cute&lt;/span&gt;
  &lt;span class="c1"&gt;// Le r√©sultat est contenu dans le param√®tre data&lt;/span&gt;
  &lt;span class="c1"&gt;// Si y il a erreur la fonction catch() va s'√©x√©cuter&lt;/span&gt;
  &lt;span class="c1"&gt;// La fonction finally() s'√©x√©cute dans tous les cas&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://example.com/api/cats&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadCatImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Run after both&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cr√©er une promesse&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// wait over&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Async / Await&lt;/em&gt;&lt;br&gt;
La fonction async et le mot-cl√© await ont √©t√© introduits comme une extension des promesses. Ils ont √©t√© introduits pour rendre la programmation asynchrone bas√©e sur des promesses plus lisible. Async/await simplifie simplement la syntaxe utilis√©e pour consommer une promesse.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Async ex√©cute la fonction en mode asynchrone&lt;/span&gt;
&lt;span class="c1"&gt;// et retourne une promesse&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Await met en pause le bloc de fonction asynchrone du code&lt;/span&gt;
  &lt;span class="c1"&gt;// jusqu'√† ce que la promesse retourne un r√©sultat&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Catch error in async/await&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wait over&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;sec&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// You can also throw error up to calling parent&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le mot-cl√© await ne peut √™tre utilis√© que dans une fonction Async. Donc, pour utiliser await dans le module principal, vous devez cr√©er un IIFE (fonction imm√©diatement invoqu√©e)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;M√™me concept mais avec l'op√©rateur then()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ex√©cuter des promesses en parall√®le&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// const cats = await getCats()&lt;/span&gt;
  &lt;span class="c1"&gt;// const dogs = await getDogs()&lt;/span&gt;
  &lt;span class="c1"&gt;// utiliser Promise.all pour ex√©cution en parall√®le&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;getCats&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;getDogs&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Promise.All returne un tableau&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;//cats&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;//dogs&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>french</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 25th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 25 Jun 2021 13:39:49 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-25th-june-2021-4lfk</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-25th-june-2021-4lfk</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-typestat"&gt;
  &lt;/a&gt;
  1. TypeStat
&lt;/h3&gt;

&lt;p&gt;Converts JavaScript to TypeScript and TypeScript to better TypeScript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/JoshuaKGoldberg"&gt;
        JoshuaKGoldberg
      &lt;/a&gt; / &lt;a href="https://github.com/JoshuaKGoldberg/TypeStat"&gt;
        TypeStat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Converts JavaScript to TypeScript and TypeScript to better TypeScript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
TypeStat&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c75d761946b6f116c0d2d187d94c121bb7a099b5bf730e5240b34f18e24a19d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d3134636332312e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c75d761946b6f116c0d2d187d94c121bb7a099b5bf730e5240b34f18e24a19d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d3134636332312e737667" alt="Code Style: Prettier"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/853846df44bcf2e897655825c0fa0ed8ab6729830d3482884dd93cb7ac991a5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747970657363726970742d7374726963742d696e666f726d6174696f6e616c2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/853846df44bcf2e897655825c0fa0ed8ab6729830d3482884dd93cb7ac991a5a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747970657363726970742d7374726963742d696e666f726d6174696f6e616c2e737667" alt="TypeScript: Strict"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/JoshuaKGoldberg/TypeStat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/71aa48a0132caf1a58aac06cc5070e388bec431f004e0188698a771fe3eba85f/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f6275696c642f6769746875622f4a6f736875614b476f6c64626572672f54797065537461742e737667" alt="Circle CI"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/TypeStat/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/73ea8764491961dea961749a112e5f48bd06a37f2095e1755943e998efedc9cb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6769747465722d696e666f726d6174696f6e616c2e737667" alt="Join the chat at https://gitter.im/TypeStat/community"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/js/typestat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7cbdef4773981647330614efd3afc1910006dd1980305b186a7da5024f45b2c/68747470733a2f2f62616467652e667572792e696f2f6a732f74797065737461742e737667" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Converts JavaScript to TypeScript&lt;/strong&gt; &lt;em&gt;and TypeScript to better TypeScript.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;TypeStat is a CLI utility that modifies TypeScript types in existing code
The built-in mutators will only ever add or remove types and will never change your runtime behavior
TypeStat can:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
‚ú® Convert JavaScript files to TypeScript in a single bound!&lt;/li&gt;
    &lt;li&gt;
‚ú® Add TypeScript types on files freshly converted from JavaScript to TypeScript!&lt;/li&gt;
    &lt;li&gt;
‚ú® Infer types to fix &lt;code&gt;--noImplicitAny&lt;/code&gt; and &lt;code&gt;--noImplicitThis&lt;/code&gt; violations!&lt;/li&gt;
    &lt;li&gt;
‚ú® Annotate missing &lt;code&gt;null&lt;/code&gt;s and &lt;code&gt;undefined&lt;/code&gt;s to get you started with &lt;code&gt;--strictNullChecks&lt;/code&gt;!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;‚ö° To start, the &lt;code&gt;typestat&lt;/code&gt; command will launch an interactive guide to setting up a configuration file. ‚ö°&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npx typestat&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;üëã Welcome to TypeStat&lt;span class="pl-k"&gt;!&lt;/span&gt; üëã
This will create a new typestat.json &lt;span class="pl-k"&gt;for&lt;/span&gt; you.
...&lt;/pre&gt;

&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;After, use &lt;strong&gt;&lt;code&gt;typestat --config typestat.json&lt;/code&gt;&lt;/strong&gt; to convert your files.&lt;/p&gt;
&lt;h3&gt;
Configuration&lt;/h3&gt;
&lt;p&gt;To get a deeper understanding of TypeStat, read the following docs pages in order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/JoshuaKGoldberg/TypeStat/main/./docs/Usage.md"&gt;Usage.md&lt;/a&gt;&lt;/strong&gt; for an‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/JoshuaKGoldberg/TypeStat"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-package-phobia"&gt;
  &lt;/a&gt;
  2. Package Phobia
&lt;/h3&gt;

&lt;p&gt;Find the cost of adding a new dependency to your project. Package Phobia reports the size of an npm package before you install it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/styfle"&gt;
        styfle
      &lt;/a&gt; / &lt;a href="https://github.com/styfle/packagephobia"&gt;
        packagephobia
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚öñÔ∏è Find the cost of adding a new dependency to your project
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0991393ef82069525894307741b8ad89080137c60d9a07c11bdd8c1346b4ba02/68747470733a2f2f7061636b61676570686f6269612e636f6d2f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/0991393ef82069525894307741b8ad89080137c60d9a07c11bdd8c1346b4ba02/68747470733a2f2f7061636b61676570686f6269612e636f6d2f6c6f676f2e737667" width="40" height="40"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Package Phobia&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/styfle/packagephobia/actions?workflow=Tests"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOBHt_84--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/styfle/packagephobia/workflows/Tests/badge.svg" alt="tests"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/220e0920e0cf995086391a2fbb86456139f589c66b917efd56507a693cfd1802/68747470733a2f2f62616467656e2e6e65742f757074696d652d726f626f742f7765656b2f6d3738333930383936382d653638616631653838666539643033333039393131623733"&gt;&lt;img src="https://camo.githubusercontent.com/220e0920e0cf995086391a2fbb86456139f589c66b917efd56507a693cfd1802/68747470733a2f2f62616467656e2e6e65742f757074696d652d726f626f742f7765656b2f6d3738333930383936382d653638616631653838666539643033333039393131623733" alt="uptime"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/styfle/packagephobia/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2893a19772817d9c0b41130ab39508d92d71a09ec0152d21801ce941e2796f8f/68747470733a2f2f62616467656e2e6e65742f6c67746d2f67726164652f6a6176617363726970742f672f737479666c652f7061636b61676570686f6269613f6c6162656c3d7175616c697479" alt="lgtm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/97699b17a26c275f5ca5c17ad861961b2efb93c04bdb7829f9c9bf210466ac28/68747470733a2f2f62616467656e2e6e65742f62616467652f7374796c652f70726574746965722f666636396234" alt="style: prettier"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://turnoff.us/geek/npm-install/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bb0b231ecd235d78ca695019c2d3937f32ec39d93e304ffef20ae43b7ef8dca/68747470733a2f2f7475726e6f66662e75732f696d6167652f656e2f6e706d2d696e7374616c6c2e706e67" width="300" height="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
‚öñÔ∏è Find the cost of adding a new dependency to your project&lt;/li&gt;
&lt;li&gt;
üïó Save yourself time and disk space with this web app&lt;/li&gt;
&lt;li&gt;
üìà Detect javascript bloat over time with a chart&lt;/li&gt;
&lt;li&gt;
üõ°Ô∏è Get a badge/shield for your README&lt;/li&gt;
&lt;li&gt;
üì° Fetch size from json API to integrate into any tool&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;...as seen on &lt;a href="https://medium.com/npm-inc/87f3bd77529#1883" rel="nofollow"&gt;npm weekly&lt;/a&gt; and &lt;a href="https://ponyfoo.com/weekly/111/how-css-works-integration-testing-angular-6-optimizing-react-and-the-future-of-javascript" rel="nofollow"&gt;ponyfoo weekly&lt;/a&gt; and &lt;a href="https://habr.com/company/zfort/blog/354060/" rel="nofollow"&gt;habr&lt;/a&gt; and &lt;a href="https://www.rwpod.com/posts/2018/04/23/podcast-06-16.html" rel="nofollow"&gt;rwpod&lt;/a&gt; and &lt;a href="https://michael-wolfenden.github.io/2018/04/20/april-20th-2018/" rel="nofollow"&gt;wolf report&lt;/a&gt; and &lt;a href="https://changelog.com/news/find-the-cost-of-adding-a-new-dependency-to-your-project-gbj6" rel="nofollow"&gt;the changelog&lt;/a&gt; and all over twitter&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
What is the purpose?&lt;/h2&gt;
&lt;p&gt;Package Phobia reports the size of an npm package &lt;em&gt;before&lt;/em&gt; you install it.&lt;/p&gt;
&lt;p&gt;This is useful for inspecting potential &lt;code&gt;dependencies&lt;/code&gt; or &lt;code&gt;devDependencies&lt;/code&gt; without using up precious disk space or waiting minutes for &lt;code&gt;npm install&lt;/code&gt;. Ain't nobody got time for dat.&lt;/p&gt;
&lt;p&gt;Results are saved so the first person might wait a bit to view package size, but everyone else gets to see the results instantly!&lt;/p&gt;
&lt;h2&gt;
&lt;a href="https://packagephobia.com" rel="nofollow"&gt;Demo&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;A good use case might be‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/styfle/packagephobia"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-denodb"&gt;
  &lt;/a&gt;
  3. DenoDB
&lt;/h3&gt;

&lt;p&gt;MySQL, SQLite, MariaDB, PostgreSQL and MongoDB ORM for Deno. Simple, typed API&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/eveningkid"&gt;
        eveningkid
      &lt;/a&gt; / &lt;a href="https://github.com/eveningkid/denodb"&gt;
        denodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      MySQL, SQLite, MariaDB, PostgreSQL and MongoDB ORM for Deno
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/eveningkid/denodb/master/./design/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQWrvIbx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/eveningkid/denodb/master/./design/logo.png" height="150"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
DenoDB&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
üó£Supports PostgreSQL, MySQL, MariaDB, SQLite and MongoDB&lt;/li&gt;
&lt;li&gt;
üî•Simple, typed API&lt;/li&gt;
&lt;li&gt;
ü¶ïDeno-ready&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eveningkid.github.io/denodb-docs" rel="nofollow"&gt;Read the documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-ts position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;Database&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;PostgresConnector&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'https://deno.land/x/denodb/mod.ts'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;connection&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;PostgresConnector&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;host&lt;/span&gt;: &lt;span class="pl-s"&gt;'...'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;username&lt;/span&gt;: &lt;span class="pl-s"&gt;'user'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;password&lt;/span&gt;: &lt;span class="pl-s"&gt;'password'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;database&lt;/span&gt;: &lt;span class="pl-s"&gt;'airlines'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-smi"&gt;Database&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s1"&gt;connection&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-smi"&gt;Flight&lt;/span&gt; &lt;span class="pl-k"&gt;extends&lt;/span&gt; &lt;span class="pl-smi"&gt;Model&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;table&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;'flights'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;timestamps&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;fields&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c1"&gt;autoIncrement&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;departure&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;STRING&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;destination&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;STRING&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
    &lt;span class="pl-c1"&gt;flightDuration&lt;/span&gt;: &lt;span class="pl-smi"&gt;DataTypes&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;FLOAT&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

  &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;defaults&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c1"&gt;flightDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.5&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;

&lt;span class="pl-s1"&gt;db&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;link&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-smi"&gt;Flight&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;await&lt;/span&gt; &lt;span class="pl-s1"&gt;db&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;sync&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-c1"&gt;drop&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;await&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/eveningkid/denodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-size-limit"&gt;
  &lt;/a&gt;
  4. Size Limit
&lt;/h3&gt;

&lt;p&gt;Calculate the real cost to run your JS app or lib to keep good performance. Show error in pull request if the cost exceeds the limit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ai"&gt;
        ai
      &lt;/a&gt; / &lt;a href="https://github.com/ai/size-limit"&gt;
        size-limit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Calculate the real cost to run your JS app or lib to keep good performance. Show error in pull request if the cost exceeds the limit.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Size Limit &lt;a href="http://cultofmartians.com/tasks/size-limit-config.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1096cbef605f5e835f4fb7d98461e27e595dec7647ff3acfa06c1fc0b174b8cc/687474703a2f2f63756c746f666d61727469616e732e636f6d2f6173736574732f6261646765732f62616467652e737667" alt="Cult Of Martians"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1a4603ab9faf244c245c8fe4d1bd348240ec9f40989d3fb59333ea1b9119d011/68747470733a2f2f61692e6769746875622e696f2f73697a652d6c696d69742f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1a4603ab9faf244c245c8fe4d1bd348240ec9f40989d3fb59333ea1b9119d011/68747470733a2f2f61692e6769746875622e696f2f73697a652d6c696d69742f6c6f676f2e737667" alt="Size Limit logo by Anton Lovchikov" width="120" height="178"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Size Limit is a performance budget tool for JavaScript. It checks every commit
on CI, calculates¬†the real cost of¬†your JS for end-users and throws an error
if the cost exceeds the¬†limit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;ES modules&lt;/strong&gt; and &lt;strong&gt;tree-shaking&lt;/strong&gt; support.&lt;/li&gt;
&lt;li&gt;Add Size Limit to &lt;strong&gt;Travis CI&lt;/strong&gt;, &lt;strong&gt;Circle CI&lt;/strong&gt;, &lt;strong&gt;GitHub Actions&lt;/strong&gt;
or another CI system to know if a pull request adds a¬†massive¬†dependency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Modular&lt;/strong&gt; to fit different use cases: big JS applications
that use their own bundler or¬†small¬†npm¬†libraries¬†with¬†many files.&lt;/li&gt;
&lt;li&gt;Can calculate &lt;strong&gt;the time&lt;/strong&gt; it would take a browser
to download and &lt;strong&gt;execute&lt;/strong&gt; your JS. Time¬†is¬†a¬†much¬†more¬†accurate
and¬†understandable metric compared to the size in bytes.&lt;/li&gt;
&lt;li&gt;Calculations include &lt;strong&gt;all dependencies and polyfills&lt;/strong&gt;
used in your JS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/ai/size-limit/main/./img/example.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1dHNpvc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ai/size-limit/main/./img/example.png" alt="Size Limit CLI" width="738"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;&lt;a href="https://github.com/andresz1/size-limit-action"&gt;GitHub action&lt;/a&gt;&lt;/strong&gt; Size Limit will post bundle size changes as a comment
in pull request discussion.&lt;/p&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/andresz1/size-limit-action/master/assets/pr.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--daWu0sWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/andresz1/size-limit-action/master/assets/pr.png" alt="Size Limit comment in pull request about bundle size changes" width="686" height="289"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;--why&lt;/code&gt;, Size Limit‚Ä¶&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ai/size-limit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#5-holmes"&gt;
  &lt;/a&gt;
  5. Holmes
&lt;/h3&gt;

&lt;p&gt;Fast and easy searching inside a page. Holmes filters a list of elements based on the value of a input in just ~2KB.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Haroenv"&gt;
        Haroenv
      &lt;/a&gt; / &lt;a href="https://github.com/Haroenv/holmes"&gt;
        holmes
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Fast and easy searching inside a page
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://www.npmjs.com/package/holmes.js" rel="nofollow"&gt;&lt;img alt="Holmes.js" src="https://camo.githubusercontent.com/20215d7f4ab898cbc4b1321182ba0a23a6f3318043dc12cc27635ae08fe8af60/68747470733a2f2f6861726f656e2e6d652f686f6c6d65732f696d616765732f6c6f676f2e706e67" height="50px"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Fast and easy searching inside a page.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Haroenv/holmes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cbc660c5db3220c6a0bb847b448c391baefc3ddad8c0a60fb55689cf35f72ae/68747470733a2f2f7472617669732d63692e6f72672f4861726f656e762f686f6c6d65732e7376673f6272616e63683d67682d7061676573" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/Haroenv/holmes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/094f63fa36113195a1caa5cce568a6276c3fb8a560e65ad535619d299b15ddc9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4861726f656e762f686f6c6d65732f62616467652e737667" alt="Coverage Status"&gt;&lt;/a&gt;
&lt;a href="https://yarnpkg.com/en/package/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a8f44f33ab50991123ff1ca1df788f75de8b8102e08159bfae7e555ba46823f/68747470733a2f2f62616467652e667572792e696f2f6a732f686f6c6d65732e6a732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/bo/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e89459ed64dd53e4a24a4b2940f0a7751b0b6cd7def75d80619d5f374e1d7fb/68747470733a2f2f62616467652e667572792e696f2f626f2f686f6c6d65732e6a732e737667" alt="Bower version"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e94edb6529abb71da9808c45ee3f43246ad8e71d0f221b1678a5645dfc7a802/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f686f6c6d65732e6a732e7376673f636f6c6f72423d677265656e" alt="CDNJS version"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Haroenv/holmes?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7497d435cb1a40de9648ebc1bb70a80520df5395b568ed0eae7392c0399248a/68747470733a2f2f6261646765732e6769747465722e696d2f4861726f656e762f686f6c6d65732e737667" alt="Join the chat at https://gitter.im/Haroenv/holmes"&gt;&lt;/a&gt;
&lt;a href="https://unpkg.com/holmes.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cce3fd359d96eaef5df0989dad252d29d19421b0e398baa013177c3c92c00f3/687474703a2f2f696d672e626164676573697a652e696f2f68747470733a2f2f756e706b672e636f6d2f686f6c6d65732e6a732f6a732f686f6c6d65732e6a733f636f6d7072657373696f6e3d677a6970" alt="gzipped size"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Holmes filters a list of elements based on the value of a &lt;code&gt;input&lt;/code&gt; in just ~2KB.&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;You can install Holmes with either &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;bower&lt;/code&gt; under the package name &lt;code&gt;holmes.js&lt;/code&gt;. For &lt;code&gt;npm&lt;/code&gt; that looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ yarn add holmes.js &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or via npm&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;After which you can add it in your page with i.e. webpack, rollup, browserify or loading the module in a different script tag.&lt;/p&gt;
&lt;p&gt;You have to make sure that you have a &lt;code&gt;css&lt;/code&gt; rule for the class &lt;code&gt;.hidden&lt;/code&gt; that hides elements however you want. One option is to have this:&lt;/p&gt;
&lt;div class="highlight highlight-source-css position-relative js-code-highlight"&gt;
&lt;pre&gt;.&lt;span class="pl-c1"&gt;hidden&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;display&lt;/span&gt;&lt;span class="pl-kos"&gt;:&lt;/span&gt; none
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;but this could be any &lt;code&gt;css&lt;/code&gt; you want.&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://haroen.me/holmes/" rel="nofollow"&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
When should I use it?&lt;/h3&gt;
&lt;p&gt;You should use Holmes when&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you have a limited amount of items&lt;/li&gt;
&lt;li&gt;you don't need typo-tolerance&lt;/li&gt;
&lt;li&gt;you only want to add a really small library&lt;/li&gt;
&lt;li&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Haroenv/holmes"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-reactheadroom"&gt;
  &lt;/a&gt;
  6. react-headroom
&lt;/h3&gt;

&lt;p&gt;Hide your header until you need it.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/KyleAMathews"&gt;
        KyleAMathews
      &lt;/a&gt; / &lt;a href="https://github.com/KyleAMathews/react-headroom"&gt;
        react-headroom
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Hide your header until you need it
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
react-headroom&lt;/h1&gt;
&lt;p&gt;Hide your header until you need it.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://kyleamathews.github.io/react-headroom" rel="nofollow"&gt;http://kyleamathews.github.io/react-headroom&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm install react-headroom&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;A simple example, &lt;a href="http://kyleamathews.github.io/react-headroom/" rel="nofollow"&gt;see the docs site&lt;/a&gt;
for more examples and documentation.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Headroom&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;You can put anything you'd like inside the Headroom Component&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;Headroom&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/KyleAMathews/react-headroom"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#7-react-interview-questions-amp-answers"&gt;
  &lt;/a&gt;
  7. React Interview Questions &amp;amp; Answers
&lt;/h3&gt;

&lt;p&gt;List of top 500 ReactJS Interview Questions &amp;amp; Answers. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sudheerj"&gt;
        sudheerj
      &lt;/a&gt; / &lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;
        reactjs-interview-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      List of top 500 ReactJS Interview Questions &amp;amp; Answers....Coding exercise questions are coming soon!!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Interview Questions &amp;amp; Answers&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Click ‚≠êif you like the project. Pull Request are highly appreciated. Follow me &lt;a href="https://twitter.com/SudheerJonna" rel="nofollow"&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div&gt;
        &lt;a href="https://www.fullstack.cafe/?utm_source=github&amp;amp;utm_medium=sud" rel="nofollow"&gt;
            3600 Tech Interview Questions. &lt;b&gt;Answered&lt;/b&gt;
            &lt;div&gt;
                &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L4xC4Pdx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/13550565/76382460-cc784d80-6393-11ea-8837-2b89265ac853.png" width="150" alt="FullStack.Cafe"&gt;
            &lt;/div&gt;
        &lt;/a&gt;
&lt;/div&gt;

&lt;div&gt;
Learn to code and get hired with &lt;a href="https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions" rel="nofollow"&gt;Zero To Mastery:&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;This &lt;a href="https://links.zerotomastery.io/react_sudheer" rel="nofollow"&gt;React course&lt;/a&gt; is good if you‚Äôre struggling to learn React beyond the basics&lt;/li&gt;
&lt;li&gt;This &lt;a href="http://links.zerotomastery.io/mci_sudheer" rel="nofollow"&gt;coding interview bootcamp&lt;/a&gt; is helpful if you‚Äôre serious about getting hired as a developer&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href="https://github.com/sudheerj/javascript-interview-questions"&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt;
&lt;h2&gt;
Downloading PDF/Epub formats&lt;/h2&gt;
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href="https://github.com/sudheerj/reactjs-interview-questions/actions"&gt;actions tab&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Table of Contents&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Questions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core React&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react"&gt;What is React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react"&gt;What are the major features of React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx"&gt;What is JSX?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component"&gt;What is the difference between Element and Component?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react"&gt;How to create components in React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component"&gt;When to use&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sudheerj/reactjs-interview-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-introjs"&gt;
  &lt;/a&gt;
  8. Intro.js
&lt;/h3&gt;

&lt;p&gt;Lightweight, user-friendly onboarding tour library&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/usablica"&gt;
        usablica
      &lt;/a&gt; / &lt;a href="https://github.com/usablica/intro.js"&gt;
        intro.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightweight, user-friendly onboarding tour library
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Intro.js&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/usablica/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/251efe1914b903d8e342e8b7517e0246ee8dad9030d8c80d20a38df9f0b7fa3a/68747470733a2f2f7472617669732d63692e6f72672f757361626c6963612f696e74726f2e6a732e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb816aae9d954721ddfab638dabdd43435ab17b572877eb4e26bcd42c820052b/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f696e74726f2e6a732f6261646765" alt=""&gt;&lt;/a&gt;
&lt;a href="https://www.jsdelivr.com/package/npm/intro.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a8043af76e3c074733f609a39711f9a0a4ff9f1f035e702186c0aff64302471/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f696e74726f2e6a73" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lightweight, user-friendly onboarding tour library&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/usablica/intro.js/gh-pages/img/introjs-demo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M9lUjgjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/usablica/intro.js/gh-pages/img/introjs-demo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Where to get&lt;/h2&gt;
&lt;p&gt;You can obtain your local copy of Intro.js from:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; This github repository, using &lt;code&gt;git clone https://github.com/usablica/intro.js.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Using bower &lt;code&gt;bower install intro.js --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Using npm &lt;code&gt;npm install intro.js --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; Download it from CDN (&lt;a href="http://www.jsdelivr.com/projects/intro.js" rel="nofollow"&gt;1&lt;/a&gt;, &lt;a href="https://cdnjs.com/libraries/intro.js" rel="nofollow"&gt;2&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;
How to use&lt;/h2&gt;
&lt;p&gt;Intro.js can be added to your site in three simple steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; Include &lt;code&gt;intro.js&lt;/code&gt; and &lt;code&gt;introjs.css&lt;/code&gt; (or the minified version for production) in your page. Use &lt;code&gt;introjs-rtl.min.css&lt;/code&gt; for Right-to-Left language support.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CDN hosted files are available at &lt;a href="http://www.jsdelivr.com/projects/intro.js" rel="nofollow"&gt;jsDelivr&lt;/a&gt; (click Show More) &amp;amp; &lt;a href="https://cdnjs.com/libraries/intro.js" rel="nofollow"&gt;cdnjs&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; Add &lt;code&gt;data-intro&lt;/code&gt; and &lt;code&gt;data-step&lt;/code&gt; to your HTML elements. To add hints you should use &lt;code&gt;data-hint&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;a&lt;/span&gt; &lt;span class="pl-c1"&gt;href&lt;/span&gt;='&lt;span class="pl-s"&gt;http://google.com/&lt;/span&gt;' &lt;span class="pl-c1"&gt;data-intro&lt;/span&gt;='&lt;span class="pl-s"&gt;Hello step one!&lt;/span&gt;'&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;a&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;See all attributes &lt;a href="https://introjs.com/docs/intro/attributes/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; Call this JavaScript function:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-en"&gt;introJs&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;start&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/usablica/intro.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-clipboardjs"&gt;
  &lt;/a&gt;
  9. clipboard.js
&lt;/h3&gt;

&lt;p&gt;Modern copy to clipboard. No Flash. Just 3kb gzipped.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/zenorocha"&gt;
        zenorocha
      &lt;/a&gt; / &lt;a href="https://github.com/zenorocha/clipboard.js"&gt;
        clipboard.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚úÇÔ∏è Modern copy to clipboard. No Flash. Just 3kb gzipped üìã
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
clipboard.js&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/zenorocha/clipboard.js/workflows/build/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2biRUVio--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/zenorocha/clipboard.js/workflows/build/badge.svg" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1f5d5876eaf35711a403f40550d6ae77c268dd0bfef7234bec96c4bc16e831c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b696c6c696e672d666c6173682d627269676874677265656e2e7376673f7374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/1f5d5876eaf35711a403f40550d6ae77c268dd0bfef7234bec96c4bc16e831c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b696c6c696e672d666c6173682d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Killing Flash"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Modern copy to clipboard. No Flash. Just 3kb gzipped.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://clipboardjs.com/" rel="nofollow"&gt;&lt;img width="728" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZsYvBkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/398893/16165747/a0f6fc46-349a-11e6-8c9b-c5fd58d9099c.png" alt="Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;p&gt;Copying text to the clipboard shouldn't be hard. It shouldn't require dozens of steps to configure or hundreds of KBs to load. But most of all, it shouldn't depend on Flash or any bloated framework.&lt;/p&gt;
&lt;p&gt;That's why clipboard.js exists.&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;p&gt;You can get it on npm.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install clipboard --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you're not into package management, just &lt;a href="https://github.com/zenorocha/clipboard.js/archive/master.zip"&gt;download a ZIP&lt;/a&gt; file.&lt;/p&gt;
&lt;h2&gt;
Setup&lt;/h2&gt;
&lt;p&gt;First, include the script located on the &lt;code&gt;dist&lt;/code&gt; folder or load it from &lt;a href="https://github.com/zenorocha/clipboard.js/wiki/CDN-Providers"&gt;a third-party CDN provider&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;dist/clipboard.min.js&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now, you need to instantiate it by &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-selector.html#L18"&gt;passing a DOM selector&lt;/a&gt;, &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-node.html#L16-L17"&gt;HTML element&lt;/a&gt;, or &lt;a href="https://github.com/zenorocha/clipboard.js/blob/master/demo/constructor-nodelist.html#L18-L19"&gt;list of HTML elements&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;ClipboardJS&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'.btn'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Internally, we need to fetch all elements that matches with your selector and attach event listeners for each one. But guess‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/zenorocha/clipboard.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-nextsitemap"&gt;
  &lt;/a&gt;
  10. next-sitemap
&lt;/h3&gt;

&lt;p&gt;Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/iamvishnusankar"&gt;
        iamvishnusankar
      &lt;/a&gt; / &lt;a href="https://github.com/iamvishnusankar/next-sitemap"&gt;
        next-sitemap
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
next-sitemap&lt;/h1&gt;
&lt;p&gt;Sitemap generator for next.js. Generate sitemap(s) and robots.txt for all static/pre-rendered/dynamic/server-side pages.&lt;/p&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Getting started
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#create-config-file"&gt;Create config file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#building-sitemaps"&gt;Building sitemaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#splitting-large-sitemap-into-multiple-files"&gt;Splitting large sitemap into multiple files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#configuration-options"&gt;Configuration Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#custom-transformation-function"&gt;Custom transformation function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#full-configuration-example"&gt;Full configuration example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iamvishnusankar/next-sitemap/master/#generating-dynamicserver-side-sitemaps"&gt;Generating dynamic/server-side sitemaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting started&lt;/h2&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;yarn add next-sitemap -D&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Create config file&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;next-sitemap&lt;/code&gt; requires a basic config file (&lt;code&gt;next-sitemap.js&lt;/code&gt;) under your project root&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚úÖ &lt;code&gt;next-sitemap&lt;/code&gt; now loads environment variables from &lt;code&gt;.env&lt;/code&gt; files by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;module&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;exports&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;siteUrl&lt;/span&gt;: &lt;span class="pl-s1"&gt;process&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;env&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;SITE_URL&lt;/span&gt; &lt;span class="pl-c1"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;'https://example.com'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;generateRobotsTxt&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c"&gt;// (optional)&lt;/span&gt;
  &lt;span class="pl-c"&gt;// ...other options&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Building sitemaps&lt;/h3&gt;
&lt;p&gt;Add next-sitemap as your postbuild script&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative js-code-highlight"&gt;
&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;next build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;postbuild&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;next-sitemap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Having &lt;code&gt;next-sitemap&lt;/code&gt; command &amp;amp; &lt;code&gt;next-sitemap.js&lt;/code&gt; file may result in file opening instead of building sitemaps in windows machines. &lt;a href="https://github.com/iamvishnusankar/next-sitemap/issues/61#issuecomment-725999452"&gt;Please read more about the issue&lt;/a&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/iamvishnusankar/next-sitemap"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +1,056 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +908 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/algorithm-visualizer/algorithm-visualizer"&gt;Algorithm Visualizer&lt;/a&gt; +884 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +864 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tailwindlabs/tailwindcss"&gt;Tailwindcss&lt;/a&gt; +791 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +41%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nanostores/nanostores"&gt;Nano Stores&lt;/a&gt; +34%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;React Virtual Cool&lt;/a&gt; +27%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/millionjs/million"&gt;Million&lt;/a&gt; +17%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/naver/egjs-flicking"&gt;Flicking&lt;/a&gt; +17%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +11,825 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +7,051 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +5,253 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +4,050 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +3,029 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +74%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epicmaxco/vuestic-ui"&gt;Vuestic UI&lt;/a&gt; +59%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joe-bell/plaiceholder"&gt;Plaiceholder&lt;/a&gt; +50%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/naver/egjs-flicking"&gt;Flicking&lt;/a&gt; +41%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +39%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Tools for Web Developers To Work Smarter and not Harder</title>
      <author>Victor Ikechukwu</author>
      <pubDate>Fri, 25 Jun 2021 13:30:23 +0000</pubDate>
      <link>https://dev.to/mr_victor/tools-for-web-developers-to-work-smarter-and-not-harder-3c0</link>
      <guid>https://dev.to/mr_victor/tools-for-web-developers-to-work-smarter-and-not-harder-3c0</guid>
      <description>&lt;blockquote&gt;
     "A man is only as good as his tools" &lt;br&gt;
        &lt;span&gt; -Emmert Wolf&lt;/span&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the software development industry. This would closely mean &lt;code&gt;A Developer is only as good as his tools&lt;/code&gt;. As the difference in the productivity levels of two developers with the same technical knowledge is sometimes based on their toolset.&lt;/p&gt;

&lt;p&gt;Hello There üëã, Beautiful Coder on the internet. Welcome back to my blog. In this blog, I write articles about tech, programming, and my life as a teenage developer. In this article, I'm going to round up some of the most interesting front-end developer tools of 2021. Which you will definitely find useful for your own development workflow.&lt;/p&gt;

&lt;p&gt;The key to being a productive developer is to work smarter and not harder. using tools that speed up most of the tasks that you do. Making you more productive and simplify your work.&lt;/p&gt;

&lt;p&gt;These development tools aren't really the most popular or hottest in 2021 üëâüëà, but they do come in handy for me, simplifying my work and making me more productive. As am sure they will too for you üòè. Already excited, let‚Äôs get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-developer"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Web Developer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QrsLOuJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612731404/SSf1J7EqO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QrsLOuJY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612731404/SSf1J7EqO.png" alt="chrispederick.com_work_web-developer_ (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First up, &lt;a href=""&gt;Web Developer&lt;/a&gt;. This is definitely my favorite tool in the list, hence it comes first üòÑ. The &lt;a href="https://chrispederick.com/work/web-developer/"&gt;Web Developer&lt;/a&gt; is a browser extension that comes bundled with various &lt;strong&gt;web developer tools&lt;/strong&gt;.  Web Developer extension adds various web developer tools to a browser. Add it to your web browser and take development to the next level. The extension is available for Chrome, Firefox, and Opera.&lt;/p&gt;

&lt;p&gt;Once installed. you can open a panel like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zseYAdHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612685949/eBEbhkMYS.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zseYAdHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612685949/eBEbhkMYS.webp" alt="menu-600.webp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That gives you access to lot of amazing commands like, Toggle CSS and JavaScript for a site on or off, view the semantic structure of a site, inspect how it looks on various screen sizes, disable images to see if the have alt text. The list is endless üòÑ. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quokkajs"&gt;
  &lt;/a&gt;
  QUOKKA.JS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnMqRHAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613505289/wMtE2-GM-.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnMqRHAS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613505289/wMtE2-GM-.webp" alt="QUOKKA.JS"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;RAPID JAVASCRIPT PROTOTYPING IN YOUR EDITOR&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quokkajs.com/"&gt;Quokka&lt;/a&gt; is a developer productivity tool, That helps developers to rapidly prototype JavaScript or Typescript Code right in their code editor. Quokka makes &lt;strong&gt;prototyping&lt;/strong&gt;,&lt;strong&gt;learning&lt;/strong&gt; and &lt;strong&gt;testing&lt;/strong&gt; JavaScript and Typescript code &lt;strong&gt;blazingly fast&lt;/strong&gt;. With Quokka, there are no configurations required by default. All you need to do is simply start up a JavaScript/Typescript file and you are ready to go üëç. &lt;/p&gt;

&lt;p&gt;To get started using Quokka, you can install it as an extension in your code editor. Head over to their website and get the version for your code editor and directions on how to set it up. Quokka has two editions, The &lt;strong&gt;Community&lt;/strong&gt; edition which is free for everyone but has a few limitations, &lt;code&gt;bear this in mind üëÄ&lt;/code&gt;. And a commercial &lt;strong&gt;Pro&lt;/strong&gt; edition that provides some additional features but you have to pay for it.&lt;/p&gt;

&lt;p&gt;Here's a sneak peek of it in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl7QXEPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611653071/IQrIHNHvN.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yl7QXEPC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611653071/IQrIHNHvN.gif" alt="vsc-live.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-lighthouse"&gt;
  &lt;/a&gt;
  Google Lighthouse
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MfPHG5dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612660170/pxznS8mUJ.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MfPHG5dc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612660170/pxznS8mUJ.webp" alt="Google Lighthouse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coding is a very demanding task. And as such, it is common to make mistakes, decrease the overall quality of your site. And that's where Google Lighthouse comes in.&lt;br&gt;
&lt;a href="https://developers.google.com/web/tools/lighthouse/"&gt;Google Lighthouse&lt;/a&gt; is an open-source, automated development tool for testing/improving the quality of your web pages. &lt;/p&gt;

&lt;p&gt;Google Lighthouse lets you audit(examine) your web applications based on several parameters, including performance, accessibility, mobile compatibility, Progressive Web App (PWA) implementations, SEO, and more. All you have to do is run it on a page or pass it a URL, sit back and get a very elaborate report with amazing feedback on how to improve the quality and performance of your site. All  in just a few clicks. &lt;/p&gt;

&lt;p&gt;You can get started with Google Lighthouse if you have the &lt;a href="https://www.google.com/chrome/browser/desktop/?"&gt;Google Chrome for Desktop&lt;/a&gt; Browser. Or If you are a fan of the Command-Line, then you can use the &lt;a href="https://www.npmjs.com/package/lighthouse?&amp;amp;url=151?&amp;amp;url=85"&gt;Lighthouse NPM package &lt;/a&gt; and its CLI.&lt;/p&gt;

&lt;p&gt;See this article on &lt;a href="https://flexiple.com/developers/using-google-lighthouse-to-audit-your-web-application/"&gt;using Google Lighthouse &lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grammerly"&gt;
  &lt;/a&gt;
  Grammerly
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ivPE6q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612455290/b5wNLimow.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ivPE6q68--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612455290/b5wNLimow.webp" alt="grammarly"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;Say Goodbye to Textfails&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One for the Technical writers. &lt;a href="https://www.grammarly.com/"&gt;Grammerly&lt;/a&gt; is a writing assistant that puts your writing at its best. Grammerly scans what you write for common grammatical mistakes (like misused commas) and complex ones (like misplaced modifiers). Personally, as a technical writer. Grammerly has really helped me improve my writing skills and confidence in blogging, which has lead to better typo-free quality articles. As am sure it will for you üôå.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webflow"&gt;
  &lt;/a&gt;
  Webflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UMh0-n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611874913/s18KYlOot.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UMh0-n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624611874913/s18KYlOot.webp" alt="webflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.webflow.com/"&gt;Web flow&lt;/a&gt; provides a modern way for pretty much anyone (even non-technical people) to design and build for the web. It is a free low-code platform for rapidly building custom responsive web apps in a visual canvas with no code. It automatically generates Html, CSS, and JavaScript codes from your designs. That your team can quickly import and plugin into the site's codebase.&lt;/p&gt;

&lt;p&gt;With the help of Webflow, designing and building responsive web apps becomes as easy as drag and drop the UI components you need. There is no need to spend days or even months making UI/UX decisions, fighting with state management, setting up access control, or re-inventing the wheel. Saving everyone the stress of &lt;strong&gt;repetitively coding everything from scratch&lt;/strong&gt; üòç. This is especially helpful if you freelance. Designing and launching web pages would only take a matter of days.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabnine"&gt;
  &lt;/a&gt;
  Tabnine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGxtTnVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612177967/t4F_xCv-k.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGxtTnVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612177967/t4F_xCv-k.webp" alt="Tabnine"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone's favorite AI code autocompletion tool üòÑ. Trusted by over 1 million developers in all programming languages. &lt;a href="https://www.tabnine.com/"&gt;Tabnine&lt;/a&gt; helps developers write code with some magics. It's based on a system of deep learning to help developers &lt;strong&gt;code faster, reduce mistakes, and discover best coding practices&lt;/strong&gt; using Machine Learning. It removes the burden of having to remember code syntax and lets you actually focus on writing &lt;strong&gt;good&lt;/strong&gt; code. And writing it faster, which is the whole point of writing this article, right? üòè. start using Tabnine today to 10X your workflow üòé, by installing it as an extension in your code editor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css"&gt;
  &lt;/a&gt;
  Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FhLn5Qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612126087/j9ZW6jaV3.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FhLn5Qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624612126087/j9ZW6jaV3.webp" alt="Tailwind CSS "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt; is a utility-first framework for rapidly building custom user interface (UI) components. This means that, unlike other CSS libraries, it doesn‚Äôt provide pre-styled components and classes that‚Äôll have all your projects looking the same (insert Bootstrap). Instead, it provides low-level utility classes for styling virtually every single CSS property like padding (e.g. pt-10), flex (e.g. justify-between), color (e.g. blue-600), and so on. This way, you get to build &lt;strong&gt;unique custom interfaces&lt;/strong&gt;, &lt;strong&gt;make better design decisions&lt;/strong&gt; because it limits your choices via limited class variations. You‚Äôll also never have to worry about naming CSS classes anymore. In fact, With Tailwind CSS. you may almost never need to &lt;strong&gt;write CSS again&lt;/strong&gt;. Awesome, right? üòÉ&lt;/p&gt;

&lt;p&gt;If you want to start using Tailwind CSS for your project, see this article on &lt;a href="https://blog.logrocket.com/tailwind-css-is-it-tomorrows-bootstrap-ebe560f9d00b/"&gt;getting started with Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dailydev"&gt;
  &lt;/a&gt;
  Daily.dev
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://daily.dev/"&gt;Daily.dev&lt;/a&gt; is a news aggregator, especially for software developers. to help them stay up to date with the latest news in tech. With daily.dev, you will stay updated with the best articles from the best tech publications on any topic. Get all the content you love in one place -- CSS-Tricks, Smashing Magazine, web.dev, hashnode, and +350 sources.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;And that's it guys, I hope you are excited to start using these tools, cause I am too üòÅ, There are a ton more tools out there, but these are my top picks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-know-more"&gt;
  &lt;/a&gt;
  Do you know more?
&lt;/h3&gt;

&lt;p&gt;Also, if there‚Äôs any other amazing tool you‚Äôve been using that has improved your workflow somehow, The ones you are getting excited to try out yet. Drop them in the comments!. Your Feedbacks are greatly appreciated! üôå. I too, would love to expand my stash üòÑ. Have an amazing day!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enjoyed reading this as much as i enjoyed writing it for you? üòç&lt;/strong&gt; . support me üòÉ&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/molipa"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bJz-zci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520Coffee%2520%25E2%2598%2595%2520%26emoji%3D%25F0%259F%258D%25A6%26slug%3Dmolipa%26button_colour%3D40DCA5%26font_colour%3Dffffff%26font_family%3DComic%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;there's nothing more I would like than we become friends on &lt;a href="https://twitter.com/VectorIkechukwu"&gt;Twitter&lt;/a&gt; üíñ&lt;/p&gt;

&lt;p&gt;If you found this article helpful, please like and share it: really motivates me to publish more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks so much for reading! üíñ And keep on coding! üë®‚Äçüíª.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>frontenddevelopment</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Use Case of JavaScript in today's industry.</title>
      <author>bhat sumair</author>
      <pubDate>Fri, 25 Jun 2021 12:54:40 +0000</pubDate>
      <link>https://dev.to/bhatsumair/use-case-of-javascript-in-today-s-industry-53f1</link>
      <guid>https://dev.to/bhatsumair/use-case-of-javascript-in-today-s-industry-53f1</guid>
      <description>&lt;p&gt;&lt;strong&gt;Uber and javascript&lt;/strong&gt;&lt;br&gt;
Uber needs to handle loads of data in real time. They have millions of requests coming in continuously, and that‚Äôs not just hits on a page. Uber needs to track driver locations, rider locations, and incoming ride requests. It has to seamlessly sort that data and match riders as fast as possible.&lt;/p&gt;

&lt;p&gt;All of that plays to NodeJS‚Äôs and JavaScript‚Äôs strengths. Node is designed to handle requests and hand off data quickly. It‚Äôs asynchronous capabilities are a huge part of that. Node is central to Uber‚Äôs user facing stack for just that reason.&lt;/p&gt;

&lt;p&gt;Uber‚Äôs core trip execution engine was originally written in Node.js because of its asynchronous primitives and simple, single-threaded processing. (In fact, we were one of the first two companies to deploy Node.js in production.) Node.js gives us the ability to manage large quantities of concurrent connections. We‚Äôve now written many services in Go, and this number continues to increase. We like Go for its concurrency, efficiency, and type-safe operations.&lt;br&gt;
The frontline API for our mobile apps consists of over 600 stateless endpoints that join together multiple services. It routes incoming requests from our mobile clients to other APIs or services. It‚Äôs all written in Node.js&lt;br&gt;
&lt;strong&gt;Highly Available, Self-Healing, Persistent&lt;/strong&gt;&lt;br&gt;
Having to support the highest availability demands, the Marketplace stack must receive and execute in real time. Even brief interruptions in this area have major consequences for our users and our business. Much of Marketplace‚Äôs stack was built by and for Marketplace engineers first.&lt;br&gt;
Ringpop, a library for building cooperative distributed systems, solved some of Marketplace‚Äôs problems before its adoption in other teams at Uber and beyond. It gives the high-availability, partition-tolerant properties of distributed databases like DynamoDB or Riak to developers at the application level.&lt;br&gt;
The systems that handle pings from riders and drivers in real-time and then match them are written in Node.js and Go. These teams use Ringpop and Sevnup for cooperation and shifting of object ownership when a node in a hashring goes down, or when another node takes ownership of the keyspace. Riak is their distributed database. Redis provides caching.&lt;br&gt;
&lt;strong&gt;Seeing and Using Data&lt;/strong&gt;&lt;br&gt;
A group within Marketplace turns Marketplace data into useful visualizations to help the team understand and observe the state of the world. We use JavaScript for web front-end applications. React+Flux, D3, and Mapbox are the libraries and frameworks behind this group. For the back end, it‚Äôs the same Node.js server used by Uber‚Äôs web engineers.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How we make Flutter work with CallKit Call Directory</title>
      <author>Irina Maximova</author>
      <pubDate>Fri, 25 Jun 2021 12:53:56 +0000</pubDate>
      <link>https://dev.to/imaximova/how-we-make-flutter-work-with-callkit-call-directory-5334</link>
      <guid>https://dev.to/imaximova/how-we-make-flutter-work-with-callkit-call-directory-5334</guid>
      <description>&lt;p&gt;Disclaimer: This will be a long read that my colleague wrote for &lt;a href="https://habr.com/ru/company/Voximplant/blog/553422/"&gt;Habr.ru&lt;/a&gt; and I decided to translate it to share with you guys!&lt;/p&gt;

&lt;p&gt;Stock up on snacks, make yourself comfortable, and let‚Äôs begin!&lt;/p&gt;




&lt;p&gt;In this long read, I will tell you how we (at &lt;a href="https://voximplant.com/?utm_source=habr&amp;amp;utm_medium=techarticle&amp;amp;utm_campaign=vox_flutter"&gt;Voximplant&lt;/a&gt;) decided to create our own Flutter plugin to use &lt;a href="https://developer.apple.com/documentation/callkit"&gt;CallKit&lt;/a&gt; in a Flutter app. And appeared to be the first who made call blocking &amp;amp; identification work for Flutter using &lt;a href="https://developer.apple.com/documentation/callkit/cxcalldirectoryextensioncontext"&gt;Call Directory&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-callkit"&gt;
  &lt;/a&gt;
  What is CallKit?
&lt;/h2&gt;

&lt;p&gt;Apple CallKit is a framework used for integration calls from 3rd party apps to the system.&lt;/p&gt;

&lt;p&gt;If a call from a 3rd party app is displayed as native, it means that CallKit is used here. If a call from a 3rd party app is in the list of system application calls (Phone) ‚Äì it is also CallKit. Third-party applications that act as a caller ID ‚Äì CallKit. Calls from third-party apps that can't get through Do Not Disturb mode ‚Äì well, you get the idea.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4CQ9-61i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5vx5uuh7au4si5vymhk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CQ9-61i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5vx5uuh7au4si5vymhk.jpeg" alt="CallKit is"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;CallKit provides third-party developers with a system UI for displaying calls&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#whats-with-callkit-on-flutter"&gt;
  &lt;/a&gt;
  What‚Äôs with CallKit on Flutter?
&lt;/h2&gt;

&lt;p&gt;CallKit is a part of iOS SDK, but it can be accessed from Flutter by interacting with native code. To use the framework‚Äôs functionality, you need to connect a third-party plugin that encapsulates the Flutter interaction with iOS. Or you can implement everything yourself, for example, this way:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lEn5_0PS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q58upx1nmphg6ct0k6mg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lEn5_0PS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q58upx1nmphg6ct0k6mg.jpeg" alt="Scheme"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;An example of CallKit service implementation for Flutter, where iOS application code (platform code) connects Flutter application to the system&lt;/em&gt; &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#readymade-callkit-flutter-solutions"&gt;
  &lt;/a&gt;
  Ready-made CallKit Flutter solutions
&lt;/h3&gt;

&lt;p&gt;So, we needed to integrate our Flutter application for VoIP calls with the system. First, we looked through most of the existing third-party solutions and chose one of them to use for a while. However, this and the rest of the available options had their problems.&lt;/p&gt;

&lt;p&gt;Existing plugins partially or completely wrap the CallKit API in their own high-level API. Because of that flexibility is lost and some features are unavailable. Due to their implementation of architecture and interfaces, such plugins contained their bugs. The documentation was incomplete or absent, and the authors of some of them stopped supporting almost immediately, which is especially dangerous on the fast-growing Flutter.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-we-came-up-with-our-solution"&gt;
  &lt;/a&gt;
  How we came up with our solution
&lt;/h3&gt;

&lt;p&gt;For simple scenarios, this worked at first, but a specific case gave us some trouble. We had to study the source code to find out how this particular plugin interacted with CallKit. In the end, we discovered that we wouldn't be able to implement what we wanted because of the high-level API limitations.&lt;/p&gt;

&lt;p&gt;We thought about implementing our solution with those disadvantages in mind.&lt;/p&gt;

&lt;p&gt;We wanted to preserve the architecture and interfaces of CallKit. This way we would give users all the flexibility and the ability to use the original documentation, and we could protect them from potential bugs in our implementation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#our-implementation"&gt;
  &lt;/a&gt;
  Our implementation
&lt;/h2&gt;

&lt;p&gt;We managed to move the entire CallKit API to Dart, preserving the hierarchy of classes and mechanisms of interaction with them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbgBKWUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu3ez5kumg6we3a4th7j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbgBKWUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu3ez5kumg6we3a4th7j.jpeg" alt="Plugin scheme"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;Our plugin covers all work with the platform and provides an identical interface&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The communication between Flutter and iOS is asynchronous, so it took us a while to implement some of the details. The main difficulty was the functionality that required synchronous communication on one side or the other.&lt;/p&gt;

&lt;p&gt;For example, the &lt;code&gt;CXProviderDelegate.provider(_:execute:)&lt;/code&gt; native CallKit API requires synchronously returning a Bool value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;optional&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="nv"&gt;provider&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;CXProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="nv"&gt;transaction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;CXTransaction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This method is called every time a new &lt;code&gt;CXTransaction&lt;/code&gt; needs to be processed. You can return &lt;code&gt;true&lt;/code&gt; to process the transaction yourself and notify the system about it. If you return &lt;code&gt;false&lt;/code&gt; (default behavior), the corresponding handler method in &lt;code&gt;CXProviderDelegate&lt;/code&gt; is called for each &lt;code&gt;CXAction&lt;/code&gt; contained in the transaction.&lt;/p&gt;

&lt;p&gt;To use this API in the plugin, we needed to declare it in Dart code so that the user could control this behavior despite the asynchronous nature of data exchange between the platforms. By returning &lt;code&gt;true&lt;/code&gt; in native code, we managed to move transaction control to Dart code, where we perform manual or automatic &lt;code&gt;CXTransaction&lt;/code&gt; processing depending on the value received from the user.&lt;/p&gt;

&lt;p&gt;Problems with asynchrony arise in the native part as well. For example, there is the PushKit iOS framework that is not part of CallKit but they are often used together, so it was necessary to integrate it. When you receive a VoIP push, you need to immediately notify CallKit of an incoming call in native code, otherwise the application will crash. To handle this we decided to allow reporting incoming calls directly to CallKit from native code without an asynchronous "hook" in the form of Flutter. As a result, for this integration, we implemented several helpers in the native part of the plugin (available via the &lt;code&gt;FlutterCallkitPlugin&lt;/code&gt; iOS class) and several on the Flutter side (available via the &lt;code&gt;FCXPlugin&lt;/code&gt; Dart class).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We declared additional features of the plugin in its class to separate the plugin interface from the CallKit interface.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
  How to report an incoming call directly to CallKit
  &lt;p&gt;When a VoIP push is received, one of the &lt;code&gt;PKPushRegistryDelegate.pushRegistry(_: didReceiveIncomingPushWith:)&lt;/code&gt; methods is called. Here you need to create a &lt;code&gt;CXProvider&lt;/code&gt; instance and call &lt;code&gt;reportNewIncomingCall&lt;/code&gt; to notify CallKit of the call. Since the same provider instance is required to further handle the call, we added the &lt;code&gt;FlutterCallkitPlugin.reportNewIncomingCallWithUUID&lt;/code&gt; method from the native side of the plugin. When the method is called, the plugin reports the call to the &lt;code&gt;CXProvider&lt;/code&gt; and also executes &lt;code&gt;FCXPlugin.didDisplayIncomingCall&lt;/code&gt; on the Dart side to continue working with the call.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;pushRegistry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="nv"&gt;registry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PKPushRegistry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;didReceiveIncomingPushWith&lt;/span&gt; &lt;span class="nv"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PKPushPayload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;PKPushType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Retrieve the necessary data from the push&lt;/span&gt;
    &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;uuidString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"UUID"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as?&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;uuid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;uuidString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uuidString&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;localizedName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"identifier"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as?&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;callUpdate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CXCallUpdate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;callUpdate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localizedCallerName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;localizedName&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;configuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CXProviderConfiguration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;localizedName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"ExampleLocalizedName"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Report the call to the plugin and it will report it to CallKit&lt;/span&gt;
    &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reportNewIncomingCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;callUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;callUpdate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;providerConfiguration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nv"&gt;pushProcessingCompletion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;To sum up: the main feature of our plugin is that using it on Flutter is almost the same as using the native CallKit on iOS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-more-thing"&gt;
  &lt;/a&gt;
  One more thing
&lt;/h3&gt;

&lt;p&gt;But there still is one thing about Apple CallKit that we haven't implemented (and no one has implemented in available third-party solutions). It's the Call Directory App Extension support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#call-directory-is"&gt;
  &lt;/a&gt;
  Call Directory is
&lt;/h2&gt;

&lt;p&gt;CallKit can block and identify calls. Developers can access these features using a special system extension ‚Äì Call Directory. Read more about iOS app extensions in the &lt;a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214"&gt;App Extension Programming Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2kVqz9wu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kejbqm007zd4t7n5rqt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2kVqz9wu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kejbqm007zd4t7n5rqt.jpeg" alt="Call Directory"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;Call Directory app extension allows you to block and/or identify numbers&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In short, it is a separate iOS app target that runs independently of the main application at the request of the system.&lt;/p&gt;

&lt;p&gt;For example, when receiving an incoming call, iOS tries to identify or find the caller in the list of blocked by standard means. If the number is not found, the system can request data from available Call Directory extensions to somehow handle the call. At this point, the extension has to "retrieve" these numbers from storage. The application itself can add numbers from its databases in there at any time. Thus there is no interaction between the extension and the application, the data is exchanged through the shared storage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tAAu0P5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfeet9nq3n7yduyqzsss.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAAu0P5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sfeet9nq3n7yduyqzsss.jpeg" alt="Call Directory implementation"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;An example of how one can implement a Call Directory&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Read more about iOS App Extensions: &lt;a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214"&gt;App Extension Programming Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#call-directory-extension-in-flutter"&gt;
  &lt;/a&gt;
  Call Directory Extension in Flutter
&lt;/h2&gt;

&lt;p&gt;Not so long ago a user asked if we can add Call Directory support. We started to study the possibility of implementing this feature and found out that it won‚Äôt be able to provide a Flutter API without making the users write native code. The problem is that the Call Directory works in the extension. It is launched by the system, runs for a very short time, and does not depend on the application (including Flutter). Thus, to support this functionality, the user of the plugin will need to create an app extension and data storage on his own eventually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQkiuPlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cpueoh2ut2br0lk3phg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQkiuPlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cpueoh2ut2br0lk3phg.jpeg" alt="Call Directory in Flutter"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;An example of working with Call Directory in Flutter application&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#decision-we-made"&gt;
  &lt;/a&gt;
  Decision we made
&lt;/h3&gt;

&lt;p&gt;Despite the difficulties with the native code, we were determined to make using Call Directory as convenient as possible for our framework's users.&lt;/p&gt;

&lt;p&gt;Having tested the ability of such an extension to work with a Flutter app, we started designing it. The solution had to retain all the Call Directory Manager APIs, require the user to write a minimum of native code, and be easy to interact with via Flutter.&lt;/p&gt;

&lt;p&gt;This is how we created version 1.2.0 with Call Directory Extension support.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-we-implemented-call-directory-for-flutter"&gt;
  &lt;/a&gt;
  How we implemented Call Directory for Flutter
&lt;/h2&gt;

&lt;p&gt;To implement this functionality, we had to consider several aspects. We needed to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Transfer the interface of CXCallDirectoryManager class (CallKit object that allows managing Call Directory);&lt;/li&gt;
&lt;li&gt;Decide what to do with the app extension and its numbers storage;&lt;/li&gt;
&lt;li&gt;Create a convenient way to transfer data from Dart code to the native code and back to manage the list of numbers from the Flutter app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#transfer-cxcalldirectorymanager-interfaces-to-flutter"&gt;
  &lt;/a&gt;
  Transfer CXCallDirectoryManager interfaces to Flutter
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The code presented in this article was simplified on purpose to make it easy to perceive. Find the full version of the code following the links at the end of the article. We used Objective-C to implement the plugin since it was chosen as the main language in our project earlier. The CallKit interfaces are written in Swift for simplicity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h3&gt;

&lt;p&gt;First of all, let's see what exactly needs to be transferred:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="kt"&gt;EnabledStatus&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;sharedInstance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;reloadExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;withIdentifier&lt;/span&gt; &lt;span class="nv"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;completionHandler&lt;/span&gt; &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;getEnabledStatusForExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;withIdentifier&lt;/span&gt; &lt;span class="nv"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;completionHandler&lt;/span&gt; &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;@escaping&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="kt"&gt;EnabledStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;open&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;openSettings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;completionHandler&lt;/span&gt; &lt;span class="nv"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Void&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's recreate the equivalent of the &lt;code&gt;CXCallDirectoryManager.EnabledStatus&lt;/code&gt; enum with Dart:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="kt"&gt;FCXCallDirectoryManagerEnabledStatus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;enabled&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can declare the class and methods. There is no need for &lt;code&gt;sharedInstance&lt;/code&gt; in our interface, so let's make a regular Dart class with static methods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;FCXCallDirectoryManager&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;reloadExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXCallDirectoryManagerEnabledStatus&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;getEnabledStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;openSettings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Preserving the API is important, but it is just as important to consider the platform and language code style so that the interface is clear and convenient for plugin users.&lt;br&gt;
For the API in Dart, we used a shorter name (the long name was from objective-C) and replaced the completion block with Future. Future is the standard mechanism used to get the result of asynchronous methods in Dart. We also return Future from most Dart plugin methods because communication with native code is asynchronous.&lt;br&gt;
Before ‚Äì &lt;code&gt;getEnabledStatusForExtension(withIdentifier:completionHandler:)&lt;/code&gt;&lt;br&gt;
After ‚Äì &lt;code&gt;Future getEnabledStatus(extensionIdentifier)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;To make communication between Flutter and iOS possible, we use &lt;code&gt;FlutterMethodChannel&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Read more about the features of this communication channel &lt;a href="https://flutter.dev/docs/development/platform-integration/platform-channels"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;MethodChannel&lt;/code&gt; object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MethodChannel&lt;/span&gt; &lt;span class="n"&gt;_methodChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MethodChannel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'plugins.voximplant.com/flutter_callkit'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The first thing we do is subscribe the iOS plugin class to the &lt;code&gt;FlutterPlugin&lt;/code&gt; protocol to interact with Flutter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;@interface&lt;/span&gt; &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FlutterPlugin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When initializing the plugin, create a &lt;code&gt;FlutterMethodChannel&lt;/code&gt; with the same identifier we used above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;registerWithRegistrar&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kt"&gt;NSObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FlutterPluginRegistrar&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;registrar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;FlutterMethodChannel&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;FlutterMethodChannel&lt;/span&gt; 
          &lt;span class="nv"&gt;methodChannelWithName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"plugins.voximplant.com/flutter_callkit"&lt;/span&gt;
          &lt;span class="nv"&gt;binaryMessenger&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;registrar&lt;/span&gt; &lt;span class="n"&gt;messenger&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
    &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt; 
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt; &lt;span class="nv"&gt;sharedPluginWithRegistrar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;registrar&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;registrar&lt;/span&gt; &lt;span class="nv"&gt;addMethodCallDelegate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="nv"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use this channel to call iOS methods from Flutter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's take a closer look at the implementation of Dart methods and the native part of the plugin using the &lt;code&gt;getEnabledStatus&lt;/code&gt; example.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Dart implementation will be as simple as possible. We will call MethodChannel.invokeMethod with the necessary arguments and process the result of that call.&lt;/p&gt;

&lt;p&gt;
  About MethodChannel
  &lt;code&gt;MethodChannel&lt;/code&gt; API allows us to asynchronously get the result of a call from native code using &lt;code&gt;Future&lt;/code&gt; but imposes restrictions on the data types that we pass. 

&lt;/p&gt;

&lt;p&gt;We pass the method name (we'll use it in the native code to identify the call) and the &lt;code&gt;extensionIdentifier&lt;/code&gt; argument to &lt;code&gt;MethodChannel.invokeMethod&lt;/code&gt; and then convert the result from the int type to &lt;code&gt;FCXCallDirectoryManagerEnabledStatus&lt;/code&gt;. We should also handle &lt;code&gt;PlatformException&lt;/code&gt; in case of an error in the native code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXCallDirectoryManagerEnabledStatus&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getEnabledStatus&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Use MethodChannel with extensionIdentifier&lt;/span&gt;
    &lt;span class="c1"&gt;// as an argument to call the corresponding &lt;/span&gt;
    &lt;span class="c1"&gt;// method in the platform code&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_methodChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invokeMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="s"&gt;'Plugin.getEnabledStatus'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Convert the result to the&lt;/span&gt;
    &lt;span class="c1"&gt;// FCXCallDirectoryManagerEnabledStatus enum&lt;/span&gt;
    &lt;span class="c1"&gt;// and return its value to the user&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;FCXCallDirectoryManagerEnabledStatus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;

  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;PlatformException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// If we get an error, we pass it to FCXException&lt;/span&gt;
    &lt;span class="c1"&gt;// and then return it to the user in special type&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;FCXException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Pay attention to the method identifier that we used:&lt;br&gt;
&lt;code&gt;Plugin.getEnabledStatus&lt;/code&gt;&lt;br&gt;
The word before the dot is used to define the module responsible for a particular method.&lt;br&gt;
&lt;code&gt;getEnabledStatus&lt;/code&gt; is equal to the name of the method in Flutter, not in iOS (or Android).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now we move to the platform code and implement the backend for this method.&lt;/p&gt;

&lt;p&gt;Calls through &lt;code&gt;FlutterMethodChannel&lt;/code&gt; go straight to the &lt;code&gt;handleMethodCall:result:&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Using the previously passed identifier, we can determine what method was called, get the arguments from it and execute the main part of the code. Detailed information is in the comments here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;handleMethodCall&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kt"&gt;FlutterMethodCall&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;
                  &lt;span class="nv"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kt"&gt;FlutterResult&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Calls from Flutter can be initiated by name,&lt;/span&gt;
    &lt;span class="c1"&gt;// which is passed to `FlutterMethodCall.method` property&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;@"Plugin.getEnabledStatus"&lt;/span&gt; &lt;span class="nv"&gt;isEqualToString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// When passing arguments with MethodChannel, &lt;/span&gt;
        &lt;span class="c1"&gt;// they are packed to `FlutterMethodCall.arguments`.&lt;/span&gt;
        &lt;span class="c1"&gt;// Extract extensionIdentifier, which we passed &lt;/span&gt;
        &lt;span class="c1"&gt;// from the Flutter code earlier&lt;/span&gt;
        &lt;span class="kt"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;isNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If the arguments are invalid, return an error&lt;/span&gt;
            &lt;span class="c1"&gt;// using the `result` handler.&lt;/span&gt;
            &lt;span class="c1"&gt;// The error should be packed to `FlutterError`.&lt;/span&gt;
            &lt;span class="c1"&gt;// It‚Äôll be thrown as PlatformException in Dart code&lt;/span&gt;
            &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorInvalidArguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"extensionIdentifier must not be null"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// When the method is detected and the arguments&lt;/span&gt;
        &lt;span class="c1"&gt;// are extracted and validated,&lt;/span&gt;
        &lt;span class="c1"&gt;// we can write the logic&lt;/span&gt;

        &lt;span class="c1"&gt;// To interact with this CallKit functionality&lt;/span&gt;
    &lt;span class="c1"&gt;// we need the CallDirectoryManager instance&lt;/span&gt;
        &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Call the CallDirectoryManager method&lt;/span&gt;
        &lt;span class="c1"&gt;// and wait for the result&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
            &lt;span class="nv"&gt;getEnabledStatusForExtensionWithIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;
            &lt;span class="nv"&gt;completionHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;CXCallDirectoryEnabledStatus&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                           &lt;span class="kt"&gt;NSError&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_Nullable&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="c1"&gt;// completion handler (containing the result of &lt;/span&gt;
            &lt;span class="c1"&gt;// the CallDirectoryManager method) is executed, &lt;/span&gt;
            &lt;span class="c1"&gt;// now we need to pass the result to Dart&lt;/span&gt;
            &lt;span class="c1"&gt;// But first we convert it to the –≤ suitable type, &lt;/span&gt;
            &lt;span class="c1"&gt;// because only certain data types can be passed &lt;/span&gt;
            &lt;span class="c1"&gt;// through  MethodChannel&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="c1"&gt;// Our errors are packed to `FlutterError`&lt;/span&gt;
                &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorFromCallKitError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="c1"&gt;// Numbers are packed to `NSNumber`&lt;/span&gt;
                &lt;span class="c1"&gt;// This enum is `NSInteger`, so we&lt;/span&gt;
                &lt;span class="c1"&gt;// make the required conversion&lt;/span&gt;
                &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt; &lt;span class="nv"&gt;convertEnableStatusToNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;enabledStatus&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Implement the two remaining &lt;code&gt;FCXCallDirectoryManager&lt;/code&gt; methods in the same way&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;reloadExtension&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Set an identifier, pass the argument, &lt;/span&gt;
    &lt;span class="c1"&gt;// and call the platform method&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_methodChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invokeMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="s"&gt;'Plugin.reloadExtension'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;PlatformException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;FCXException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;openSettings&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// This method does not accept arguments&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_methodChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invokeMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="s"&gt;'Plugin.openSettings'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;PlatformException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;FCXException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;@"Plugin.reloadExtension"&lt;/span&gt; &lt;span class="nv"&gt;isEqualToString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;isNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorInvalidArguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"extensionIdentifier must not be null"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
        &lt;span class="nv"&gt;reloadExtensionWithIdentifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;extensionIdentifier&lt;/span&gt;
        &lt;span class="nv"&gt;completionHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;NSError&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_Nullable&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorFromCallKitError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;@"Plugin.openSettings"&lt;/span&gt; &lt;span class="nv"&gt;isEqualToString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;@available&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iOS&lt;/span&gt; &lt;span class="mf"&gt;13.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt; 
            &lt;span class="nv"&gt;openSettingsWithCompletionHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;NSError&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_Nullable&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorFromCallKitError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorLowiOSVersionWithMinimal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"13.4"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs it! CallDirectoryManager is implemented and ready to be used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flutter.dev/docs/development/platform-integration/platform-channels"&gt;Learn more about Platform-Flutter interaction&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-extension-and-number-storage"&gt;
  &lt;/a&gt;
  App Extension and number storage
&lt;/h2&gt;

&lt;p&gt;Since, due to the presence of the Call Directory in the iOS extension, we will not be able to provide its implementation with the plugin and working with platform code is usually unfamiliar for Flutter developers, we will try to help them as much as possible providing ... Documentation!&lt;/p&gt;

&lt;p&gt;Let's create a complete app extension and storage samples and connect them to the example app of our plugin.&lt;/p&gt;

&lt;p&gt;As the simplest version of the storage, we will use &lt;code&gt;UserDefaults&lt;/code&gt;, which we will wrap in &lt;code&gt;propertyWrapper&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is how the interface of our storage looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Access to the storage from the iOS app&lt;/span&gt;
&lt;span class="kd"&gt;@UIApplicationMain&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;AppDelegate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;FlutterAppDelegate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"blockedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;blockedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;BlockableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"identifiedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;IdentifiableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Access to the storage from the app extension&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;CallDirectoryHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;CXCallDirectoryProvider&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"blockedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;blockedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;BlockableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"identifiedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;IdentifiableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;@NullableUserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"lastUpdate"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;lastUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Storage implementation code: &lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/ios/Runner/UserDefault.swift"&gt;UserDefaults&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS app code: &lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/ios/Runner/AppDelegate.swift"&gt;iOS App Delegate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS extension code: &lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/ios/CallDirectoryExtensionExample/CallDirectoryHandler.swift"&gt;iOS App Extension&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that the storage and extension samples are not part of the plugin, but rather part of the example application that comes with it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#pass-numbers-from-flutter-to-ios-and-vice-versa"&gt;
  &lt;/a&gt;
  Pass numbers from Flutter to iOS and vice versa
&lt;/h2&gt;

&lt;p&gt;So, the app extension is configured and connected to the storage, the necessary methods of CallDirectoryManager are implemented, the last detail ‚Äì to learn how to take numbers from Flutter and put them in the platform storage or, conversely, request them from the platform storage.&lt;/p&gt;

&lt;p&gt;The easiest way as it may seem is to make the user of the plugin deal with the data. He'll have to set up his own MethodChannel or use other third-party storage management solutions. It will certainly suit some people! :) And for the rest, we will make a simple API to pass numbers directly through our framework. This functionality will be optional so we don‚Äôt limit those who are more comfortable using their ways of transferring data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs see which interfaces we need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add blocked/identifiable numbers to the storage&lt;/li&gt;
&lt;li&gt;Delete blocked/identifiable numbers from the repository&lt;/li&gt;
&lt;li&gt;Request blocked/identifiable numbers from the repository&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We previously decided to use the &lt;code&gt;FCXPlugin&lt;/code&gt; (Flutter) and &lt;code&gt;FlutterCallkitPlugin&lt;/code&gt; (iOS) classes for the helpers. However, Call Directory is a highly specialized functionality that is not used in every project. That's why I want to put it in a separate file but leave the access through the &lt;code&gt;FCXPlugin&lt;/code&gt; class object. The extension will do this work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin_CallDirectoryExtension&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getBlockedPhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;addBlockedPhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;removeBlockedPhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;removeAllBlockedPhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;addIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;removeIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;removeAllIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To let Flutter access numbers that are in storage on the iOS side, the user of the plugin needs to somehow connect his database of numbers and the plugin. Let‚Äôs give him the interface to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;@interface&lt;/span&gt; &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;NSObject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FlutterPlugin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;getBlockedPhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didAddBlockedPhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didRemoveBlockedPhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didRemoveAllBlockedPhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didAddIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didRemoveIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXCallDirectoryPhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;didRemoveAllIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each type of interaction with the repository has its handler. It is called by our framework every time the corresponding helper is called from the Flutter side.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Handlers are optional which allows you to use only some part of this functionality or use your own solution instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;p&gt;Now let's implement the communication between the declared helper methods in Flutter and the handlers in iOS.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are a lot of methods but they all work almost the same. That‚Äôs why we will focus on two of them, the ones with the opposite direction of data movement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#get-identifiable-numbers"&gt;
  &lt;/a&gt;
  Get identifiable numbers
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Call the platform method and save the result    List&amp;lt;dynamic&amp;gt; numbers = await _methodChannel.invokeMethod(&lt;/span&gt;
      &lt;span class="s"&gt;'Plugin.getIdentifiablePhoneNumbers'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Type the result and return it to the user&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;
      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'number'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'label'&lt;/span&gt;&lt;span class="o"&gt;]))&lt;/span&gt;
      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;PlatformException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;FCXException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;@"Plugin.getIdentifiablePhoneNumbers"&lt;/span&gt; &lt;span class="nv"&gt;isEqualToString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if the handler exists,&lt;/span&gt;
        &lt;span class="c1"&gt;// if not, return an error&lt;/span&gt;
        &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorHandlerIsNotRegistered&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"getIdentifiablePhoneNumbers"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Using the handler, request numbers from a user&lt;/span&gt;
    &lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;identifiableNumbers&lt;/span&gt;
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kt"&gt;NSMutableArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;phoneNumbers&lt;/span&gt;
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;NSMutableArray&lt;/span&gt; &lt;span class="nv"&gt;arrayWithCapacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;identifiableNumbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// Wrap each number in the dictionary type &lt;/span&gt;
    &lt;span class="c1"&gt;// so we could pass them via MethodChannel &lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;identifiableNumber&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;identifiableNumbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;NSMutableDictionary&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt; 
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;NSMutableDictionary&lt;/span&gt; &lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;@"number"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;NSNumber&lt;/span&gt; &lt;span class="nv"&gt;numberWithLongLong&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;identifiableNumber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;@"label"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;identifiableNumber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;phoneNumbers&lt;/span&gt; &lt;span class="nv"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;dictionary&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Pass the numbers to Flutter&lt;/span&gt;
    &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phoneNumbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-identifiable-numbers"&gt;
  &lt;/a&gt;
  Add identifiable numbers
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;addIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Prepare the numbers to be passed via MethodChannel&lt;/span&gt;
    &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;_toMap&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;toList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Pass the numbers to the native code&lt;/span&gt;
    &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_methodChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invokeMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="s"&gt;'Plugin.addIdentifiablePhoneNumbers'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;arguments&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;PlatformException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;FCXException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;@"Plugin.addIdentifiablePhoneNumbers"&lt;/span&gt; &lt;span class="nv"&gt;isEqualToString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;didAddIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if the handler exists,&lt;/span&gt;
        &lt;span class="c1"&gt;// if not, return an error&lt;/span&gt;
        &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorHandlerIsNotRegistered&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"didAddIdentifiablePhoneNumbers"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Get the numbers passed as arguments&lt;/span&gt;
    &lt;span class="kt"&gt;NSArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;isNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if they‚Äôre valid&lt;/span&gt;
        &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="kt"&gt;FlutterError&lt;/span&gt; &lt;span class="nv"&gt;errorInvalidArguments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@"numbers must not be null"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;NSMutableArray&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="o"&gt;*&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;identifiableNumbers&lt;/span&gt;
        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// Type the numbers&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;NSNumber&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;@"number"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;__auto_type&lt;/span&gt; &lt;span class="n"&gt;identifiableNumber&lt;/span&gt;
            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nv"&gt;initWithNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;longLongValue&lt;/span&gt;
                                                                                     &lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;@"label"&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;identifiableNumbers&lt;/span&gt; &lt;span class="nv"&gt;addObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;identifiableNumber&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Pass the typed numbers to the handler&lt;/span&gt;
    &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;didAddIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;identifiableNumbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Tell Flutter about the end of operation&lt;/span&gt;
    &lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The rest of the methods are implemented the same way, here is the full code for Flutter and iOS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/lib/src/call_directory/call_directory_extension.dart"&gt;Flutter side&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/ios/Classes/FlutterCallkitPlugin.m"&gt;iOS side&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usage-samples"&gt;
  &lt;/a&gt;
  Usage samples
&lt;/h2&gt;

&lt;p&gt;Now we move to the user side of the plugin and see how our user can use our interfaces.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reload-extension"&gt;
  &lt;/a&gt;
  Reload extension
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;reloadExtension(withIdentifier:completionHandler:)&lt;/code&gt; method is used to reload the Call Directory extension. You may need it, for example, after adding new numbers to the storage so that they get into CallKit.&lt;/p&gt;

&lt;p&gt;Use it the same way you use native CallKit API: call &lt;code&gt;FCXCallDirectoryManager&lt;/code&gt; and request reload by the given &lt;code&gt;extensionIdentifier&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;_extensionID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="s"&gt;'com.voximplant.flutterCallkit.example.CallDirectoryExtension'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;reloadExtension&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;FCXCallDirectoryManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reloadExtension&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_extensionID&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-identified-numbers"&gt;
  &lt;/a&gt;
  Get identified numbers
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We request a list of identifiable numbers using our plugin class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin&lt;/span&gt; &lt;span class="n"&gt;_plugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getIdentifiedNumbers&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_plugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Add the &lt;code&gt;getIdentifiablePhoneNumbers&lt;/code&gt; handler, which the plugin uses to pass the specified numbers to Flutter. We will use it to pass the numbers from our &lt;code&gt;identifiedNumbers&lt;/code&gt; storage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;callKitPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;

&lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"identifiedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;IdentifiableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// Add a phone number request event handler&lt;/span&gt;
&lt;span class="n"&gt;callKitPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getIdentifiablePhoneNumbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;weak&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
    &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Return the numbers from the storage to the handler&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the numbers from the user storage will go to the handler and then to Flutter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-identified-numbers"&gt;
  &lt;/a&gt;
  Add identified numbers
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;On the Flutter side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We pass the numbers that we want to identify to the plugin object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin&lt;/span&gt; &lt;span class="n"&gt;_plugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FCXPlugin&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;addIdentifiedNumber&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="kt"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FCXIdentifiablePhoneNumber&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;num&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_plugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addIdentifiablePhoneNumbers&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="n"&gt;phone&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;On the iOS side&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Add the &lt;code&gt;didAddIdentifiablePhoneNumbers&lt;/code&gt; handler, which the plugin uses to notify the platform code about receiving new numbers from Flutter. In the handler, we save the received numbers to the number storage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;callKitPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;FlutterCallkitPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sharedInstance&lt;/span&gt;

&lt;span class="kd"&gt;@UserDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"identifiedNumbers"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;IdentifiableNumber&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// Add an event handler for adding numbers&lt;/span&gt;
&lt;span class="n"&gt;callKitPlugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;didAddIdentifiablePhoneNumbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;weak&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
    &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Save the numbers to the storage &lt;/span&gt;
    &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nv"&gt;contentsOf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;IdentifiableNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;identifiableNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// The numbers in Call Directory must be sorted&lt;/span&gt;
    &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;identifiedNumbers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now numbers from Flutter go to the plugin, then to the event handler, and eventually to the user's number storage. Next time you reload the Call Directory extension, they will be available for CallKit for call identification.&lt;/p&gt;

&lt;p&gt;Full code samples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/ios/Runner/AppDelegate.swift"&gt;iOS Example App Delegate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/ios/CallDirectoryExtensionExample/CallDirectoryHandler.swift"&gt;iOS Example App Extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/example/lib/call_service.dart"&gt;Flutter Example Call Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#to-sum-it-up"&gt;
  &lt;/a&gt;
  To sum it up
&lt;/h2&gt;

&lt;p&gt;We managed to make an opportunity to use the CallKit Call Directory from Flutter!&lt;/p&gt;

&lt;p&gt;The details of platform communications are still hidden in the depths of the plugin, the native API is preserved, and the custom iOS implementation is well documented.&lt;/p&gt;

&lt;p&gt;Now it is relatively easy to block and/or identify numbers using the native Call Directory in Flutter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--177SDEih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvgo4kjurcqpd2xwwvto.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--177SDEih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvgo4kjurcqpd2xwwvto.png" alt="Final scheme"&gt;&lt;/a&gt; &lt;br&gt;
&lt;em&gt;An example of working with Call Directory in Flutter application using flutter_callkit_voximplant&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Results:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Completely moved CallDirectoryManager interface &lt;/li&gt;
&lt;li&gt;Created an easy way to pass the numbers from Flutter code to iOS, leaving the option to use your data transfer solutions&lt;/li&gt;
&lt;li&gt;Described the architecture of the solution in the README with visual diagrams for better understanding&lt;/li&gt;
&lt;li&gt;Added a full-fledged working example app that uses all Call Directory functionality and implements platform modules samples (iOS extension and data storage)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/voximplant/flutter_callkit"&gt;flutter_callkit code on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/tree/master/example"&gt;Example app code on GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/voximplant/flutter_callkit/blob/master/doc/call_directory/README.md"&gt;Full docs on usage Call Directory with flutter_callkit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.apple.com/documentation/callkit?language=objc"&gt;CallKit Framework Documentation by Apple&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/General/Conceptual/ExtensibilityPG/index.html#//apple_ref/doc/uid/TP40014214"&gt;App Extension Programming Guide by Apple&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://flutter.dev/docs/development/platform-integration/platform-channels"&gt;Writing custom platform-specific code by Flutter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>flutter</category>
      <category>ios</category>
      <category>showdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Page Speed Insights (Lighthouse) went through an upgrade on 1st June 2021 - what changed and how will it affect you? </title>
      <author>InHuOfficial</author>
      <pubDate>Fri, 25 Jun 2021 12:40:20 +0000</pubDate>
      <link>https://dev.to/inhuofficial/page-speed-insights-went-through-an-upgrade-on-1st-june-2021-what-changed-and-how-will-it-affect-you-3n8g</link>
      <guid>https://dev.to/inhuofficial/page-speed-insights-went-through-an-upgrade-on-1st-june-2021-what-changed-and-how-will-it-affect-you-3n8g</guid>
      <description>&lt;p&gt;Page Speed Insights is now running Lighthouse 8.0 and let me tell you, the changes that have been made to the scoring are going to really ruin some of your scores!&lt;/p&gt;

&lt;p&gt;With that being said, if you aren't building a site with JavaScript in the browser you will probably actually benefit!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a nutshell:&lt;/strong&gt; It is time to ditch those heavy front-end frameworks for sites that you want to rank well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-post-for"&gt;
  &lt;/a&gt;
  Who is this post for?
&lt;/h2&gt;

&lt;p&gt;People building websites that need to rank well in Google.&lt;/p&gt;

&lt;p&gt;With the upcoming &lt;a href="https://developers.google.com/search/blog/2021/04/more-details-page-experience"&gt;Web Vitals update to Google Search Algorithm starting to be rolled out&lt;/a&gt;, and being rolled out fully by the end of August, it is &lt;strong&gt;essential&lt;/strong&gt; you start working on fixing these things now if you rely on SEO for traffic.&lt;/p&gt;

&lt;p&gt;And unlike other articles on the subject I am going to assume you have at least heard of and used Page Speed Insights or a similar speed checking service before.&lt;/p&gt;

&lt;p&gt;With that being said I will refer to all of these services under the term "Lighthouse" so I better give you a super quick bit of info:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lighthouse-in-20-seconds"&gt;
  &lt;/a&gt;
  Lighthouse in 20 seconds
&lt;/h2&gt;

&lt;p&gt;For those of you who don't know, &lt;a href="https://github.com/GoogleChrome/lighthouse"&gt;Lighthouse&lt;/a&gt; is the engine that powers &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;page speed insights&lt;/a&gt;, &lt;a href="https://web.dev/measure/"&gt;web.dev/measure&lt;/a&gt;, &lt;a href="https://gtmetrix.com/"&gt;GT Metrix&lt;/a&gt; etc. &lt;/p&gt;

&lt;p&gt;It is probably the most widely used testing utility for website load speed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-so-what-have-they-changed-this-time"&gt;
  &lt;/a&gt;
  OK so what have they changed this time?
&lt;/h2&gt;

&lt;p&gt;The score weightings have been updated once again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#v6-v7-scoring"&gt;
  &lt;/a&gt;
  V6 / V7 scoring
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;First Contentful Paint        15%
Speed Index                   15%
Largest Contentful Paint      25%
Time to Interactive           15%
Total Blocking Time           25%
Cumulative Layout Shift        5%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#v8-scoring-new-scoring"&gt;
  &lt;/a&gt;
  V8 scoring (new scoring)
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;First Contentful Paint        10% -
Speed Index                   10% -
Largest Contentful Paint      25% 
Time to Interactive           10% -
Total Blocking Time           30% +
Cumulative Layout Shift       15% +
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#comparison"&gt;
  &lt;/a&gt;
  Comparison
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;metric&lt;/th&gt;
&lt;th&gt;v6 + v7 weight&lt;/th&gt;
&lt;th&gt;v8 weight&lt;/th&gt;
&lt;th&gt;change&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;First Contentful Paint (FCP)&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;-5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Speed Index (SI)&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;-5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Largest Contentful Paint (LCP)&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Time To Interactive (TTI)&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;-5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total Blocking Time (TBT)&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cumulative Layout Shift (CLS)&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#in-english-please-these-metrics-mean-nothing-to-me"&gt;
  &lt;/a&gt;
  In English please, these metrics mean nothing to me!
&lt;/h2&gt;

&lt;p&gt;In short, the focus has shifted to when the page is actually ready to use, rather than when things first start appearing.&lt;/p&gt;

&lt;p&gt;It is actually a little more complex than that and is beyond the scope of this post but here is a summary of what you need to know:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javascript-heavy-sites-are-going-to-take-a-hit"&gt;
  &lt;/a&gt;
  JavaScript heavy sites are going to take a hit.
&lt;/h3&gt;

&lt;p&gt;If you are downloading 100kb of JS just to render the above the fold content (the initial content you can see without scrolling) then your score is likely going to go down (again! It is time to take the hint! Stop using React for brochure sites unless you know how to tree shake and code split!).&lt;/p&gt;

&lt;p&gt;This is linked to the "Total Blocking Time (TBT)" metric. It measures how many tasks within your JS take longer than 50ms, then it adds up any tasks that take longer minus the original 50ms allowance.&lt;/p&gt;

&lt;p&gt;To make that more clear:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Task A: 30ms (less than 50ms so 0ms added to TBT)&lt;/li&gt;
&lt;li&gt;Task B: 55ms (55ms - 50ms, so 5ms added to TBT)&lt;/li&gt;
&lt;li&gt;Task C: 10ms (less than 50ms again so TBT is still 5ms)&lt;/li&gt;
&lt;li&gt;Task D: 95ms (95ms - 50ms, so 45ms added making TBT 50ms total).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So the TBT would be 50ms in the above scenario.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important note:&lt;/strong&gt; This may seem super easy to pass, but consider that "mobile first" is Google's policy. So when you run a report on Page Speed Insights, the Lighthouse tab in Chrome etc. look at the &lt;strong&gt;mobile scores.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;For mobile there is throttling applied to simulate a mid-tier mobile phone (a 4x CPU slowdown) and a slow 4G connection.&lt;/p&gt;

&lt;p&gt;You can find out &lt;a href="https://github.com/GoogleChrome/lighthouse/blob/master/docs/throttling.md"&gt;more info about throttling in Lighthouse here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is why I do not recommend looking at pingdom.com and GT Metrix (unless you have a PRO account), they both monitor desktop speeds and it is really easy to get a decent score there.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#inlining-critical-css-is-even-more-important"&gt;
  &lt;/a&gt;
  Inlining critical CSS is even more important
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://www.smashingmagazine.com/2015/08/understanding-critical-css/"&gt;critical CSS&lt;/a&gt; is all the CSS required to render the above the fold content.&lt;/p&gt;

&lt;p&gt;You need to inline this in a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag within the document so that the page can load and display the page without needing a second network request to have completed.&lt;/p&gt;

&lt;p&gt;This helps improve Largest Contentful Paint and minimise Layout Shifts.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#make-sure-you-stop-layout-shifts"&gt;
  &lt;/a&gt;
  Make sure you stop layout shifts
&lt;/h3&gt;

&lt;p&gt;People tend to get confused by this one. Basically if you see something load on the page, it should not move, get larger or smaller, unless it is a direct result of pressing a button etc.&lt;/p&gt;

&lt;p&gt;For this reason I would suggest you read this post on how to stop images causing a Layout Shift:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/quick-tips-how-to-fix-image-elements-do-not-have-explicit-width-and-height-in-page-speed-insights-lighthouse-3776" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Quick Tips: How to fix "Image elements do not have explicit width and height" in Page Speed Insights / Lighthouse&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Jun 6 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;If you are using JS to fetch data then make sure you have a correctly sized placeholder for it...but if you are doing that for above the fold content you are already in trouble, as for the fastest rendering all above the fold content should be served within the initial HTML.&lt;/p&gt;

&lt;p&gt;In fact the above the fold content should fit into 14kb for insane speeds, 42kb for super fast speeds or 98kb for good speeds (kind of). It is all to do with how TCP works and something called &lt;a href="https://en.wikipedia.org/wiki/TCP_congestion_control#:~:text=TCP%20uses%20a%20mechanism%20called,size%20(MSS)%20in%20size."&gt;TCP slow start&lt;/a&gt;...but that is for another post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-still-need-to-ensure-your-largest-contentful-paint-is-good"&gt;
  &lt;/a&gt;
  You still need to ensure your Largest Contentful Paint is good
&lt;/h3&gt;

&lt;p&gt;Largest Contentful Paint (LCP) is actually quite straight forward. &lt;/p&gt;

&lt;p&gt;Say you have a page with 4 elements that appear above the fold. If one of those elements takes up 40% of the space (element A) and the other 3 each take up 20% (elements B,C and D) then element A would be the element that is the Largest Paint element.&lt;/p&gt;

&lt;p&gt;The score is based on how quickly that element is rendered to the page. The quicker that element appears the better your score.&lt;/p&gt;

&lt;p&gt;Now we have covered inlining critical CSS within the HTML so we don't need to wait for an additional network request before we can render the page, but what if that element is an image?&lt;/p&gt;

&lt;p&gt;One technique is to use a &lt;a href="https://www.robinosborne.co.uk/2018/01/05/image-placeholders-do-it-right-or-dont-do-it-at-all-please/"&gt;Low Quality Image Placeholder (LQIP)&lt;/a&gt;. Yet again the detail of how to do that is for another post but in essence you use a small very low quality image (say 32px by 18px for a 16:9 aspect ratio) and then inline that using a data URI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src= &lt;/span&gt;&lt;span class="s"&gt;"data:image/jpg;base64,[data encoded with base64]"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"your alt"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"900"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You then swap in the actual image using JS once the core page content has loaded.&lt;/p&gt;

&lt;p&gt;There are loads of different ways to achieve this and so it deserves its own post as I said, the idea of this post is to give you things to research yourself and suggestions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-that-dont-affect-your-score-but-to-be-mindful-of"&gt;
  &lt;/a&gt;
  Things that don't affect your score but to be mindful of
&lt;/h2&gt;

&lt;p&gt;Nearly every major update that has been released in the last few months has had an update to do with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;Content Security Policies (CSP)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This update is no exception. &lt;/p&gt;

&lt;p&gt;They have introduced an audit called "csp-xss" under "Best practices" (which isn't on Page Speed Insights but is available in Lighthouse in developer tools etc.). &lt;/p&gt;

&lt;p&gt;This still has no scoring weight associated with it but you should start thinking about it now as they keep putting more and more effort into this.&lt;/p&gt;

&lt;p&gt;If you want to see the state of your sites security headers may I suggest using &lt;a href="https://observatory.mozilla.org/"&gt;https://observatory.mozilla.org/&lt;/a&gt; to test your site and start learning about headers that protect your clients from malicious actions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The idea of this post was not to tell you how to fix everything, but rather to let you know what has changed and what it means for you, even if you don't understand everything about Page Speed Insights.&lt;/p&gt;

&lt;p&gt;Lighthouse is trying to steer you away from using heavy JS frameworks for brochure sites or even e-commerce sites where page speed is essential and search rankings are important.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?url=https://dev.to/inhuofficial/page-speed-insights-went-through-an-upgrade-on-1st-june-2021-what-changed-and-how-will-it-affect-you-3n8g&amp;amp;text=%22Lighthouse%20is%20trying%20to%20steer%20you%20away%20from%20using%20heavy%20JS%20frameworks%20for%20brochure%20sites%20or%20even%20e-commerce%20sites%20where%20page%20speed%20is%20essential%20and%20search%20rankings%20are%20important.%22%20-%20@InHuOfficial%20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMHpmDTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coo4rtxyay0orh7gmnin.jpg" alt='Click to Tweet: "Lighthouse is trying to steer you away from using heavy JS frameworks for brochure sites or even e-commerce sites where page speed is essential and search rankings are important."'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need help with a &lt;strong&gt;specific&lt;/strong&gt; issue on your site then let me know in the comments.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>5 GitHub Projects to make you a better DevOps Engineer ‚ö°</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Fri, 25 Jun 2021 12:32:37 +0000</pubDate>
      <link>https://dev.to/ankit01oss/5-github-projects-to-make-you-a-better-devops-engineer-2fkl</link>
      <guid>https://dev.to/ankit01oss/5-github-projects-to-make-you-a-better-devops-engineer-2fkl</guid>
      <description>&lt;p&gt;DevOps is one of the most challenging fields to be in, and to stay relevant you need to learn constantly.&lt;/p&gt;

&lt;p&gt;So today, I want to share 5 amazing GitHub projects which will help you become a better DevOps engineer. These 5 Github projects can come in handy for anyone looking to learn and want good resources to dive in. üèä‚Äç‚ôÄÔ∏è&lt;/p&gt;

&lt;p&gt;So let's get startedüëä&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-book-of-secret-knowledge"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The book of secret knowledge&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Github stars: 42k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repository is a collection of various materials and tools aimed towards System and Network administrators, DevOps, Pentesters, and Security Researchers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trimstray"&gt;
        trimstray
      &lt;/a&gt; / &lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;
        the-book-of-secret-knowledge
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools and more.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7cZbHG7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trimstray/the-book-of-secret-knowledge/raw/master/static/img/the-book-of-secret-knowledge-preview.png" alt="Master"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;"&lt;i&gt;Knowledge is powerful, be careful how you use it!&lt;/i&gt;"&lt;/p&gt;

&lt;h4&gt;
A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools, and more.&lt;/h4&gt;



&lt;p&gt;
  &lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge/pulls"&gt;
    &lt;img src="https://camo.githubusercontent.com/d29d75f2930f80fe8a37354d3d3d44518d4e6b4a31f8b646b90c56e7e0d1e463/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f6c6f6e6743616368653d74727565" alt="Pull Requests"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/trimstray/the-book-of-secret-knowledge/master/LICENSE.md"&gt;
    &lt;img src="https://camo.githubusercontent.com/2ee5364f0e08ac47e00119204cf1ab24dd21ec87b4fb81bb657feae43ec88ed4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d6c69676874677265792e7376673f6c6f6e6743616368653d74727565" alt="MIT License"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://twitter.com/trimstray" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c43b110bed909475c271c4eeb9255d8aa76e2e14be650239653f02cdab85ae4c/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7472696d73747261792e7376673f6c6f676f3d74776974746572"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;div&gt;
  Created by
  &lt;a href="https://twitter.com/trimstray" rel="nofollow"&gt;trimstray&lt;/a&gt; and
  &lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge/graphs/contributors"&gt;contributors&lt;/a&gt;

&lt;/div&gt;




&lt;h2&gt;
üìî ¬†What is it?&lt;/h2&gt;
&lt;p&gt;This repository is a collection of various materials and tools that I use every day in my work. It contains a lot of useful information gathered in one piece. It is an invaluable source of knowledge for me that I often look back on.&lt;/p&gt;
&lt;h2&gt;
üöª ¬†For whom?&lt;/h2&gt;
&lt;p&gt;For everyone, really. Here everyone can find their favourite tastes. But to be perfectly honest, it is aimed towards System and Network administrators, DevOps, Pentesters, and Security Researchers.&lt;/p&gt;
&lt;h2&gt;
‚ÑπÔ∏è ¬†Contributing&lt;/h2&gt;
&lt;p&gt;If you find something which doesn't make sense, or something doesn't seem right, please make a pull request and please add valid and well-reasoned explanations about your changes or comments.&lt;/p&gt;
&lt;p&gt;A few simple rules for this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inviting and‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-awesome-scalability"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/binhnguyennus/awesome-scalability"&gt;Awesome Scalability&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Github stars: 32.5k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo has an organized reading list for illustrating the patterns of scalable, reliable, and performant large-scale systems. This is one of the best resources on scalability with real examples from large organizations.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/binhnguyennus"&gt;
        binhnguyennus
      &lt;/a&gt; / &lt;a href="https://github.com/binhnguyennus/awesome-scalability"&gt;
        awesome-scalability
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Patterns of Scalable, Reliable, and Performant Large-Scale Systems
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="http://awesome-scalability.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6a8pgi6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/logo.png" alt="Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An updated and organized reading list for illustrating the patterns of scalable, reliable, and performant large-scale systems. Concepts are explained in the articles of prominent engineers and credible references. Case studies are taken from battle-tested systems that serve millions to billions of users.&lt;/p&gt;
&lt;h4&gt;
If your system goes slow&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Understand your problems: scalability problem (fast for a single user but slow under heavy load) or performance problem (slow for a single user) by reviewing some &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#principle"&gt;design principles&lt;/a&gt; and checking how &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#scalability"&gt;scalability&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#performance"&gt;performance&lt;/a&gt; problems are solved at tech companies. The section of &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#intelligence"&gt;intelligence&lt;/a&gt; are created for those who work with data and machine learning at big (data) and deep (learning) scale.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
If your system goes down&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;"Even if you lose all one day, you can build all over again if you retain your calm!" - Thuan Pham, former CTO of Uber. So, keep calm and mind the &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#availability"&gt;availability&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#stability"&gt;stability&lt;/a&gt; matters!&lt;/p&gt;
&lt;/blockquote&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/binhnguyennus/awesome-scalability"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-devops-exercises"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/bregman-arie/devops-exercises"&gt;DevOps Exercises&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Github stars: 8.6k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo contains questions and exercises on technical topics related to DevOps and SRE.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bregman-arie"&gt;
        bregman-arie
      &lt;/a&gt; / &lt;a href="https://github.com/bregman-arie/devops-exercises"&gt;
        devops-exercises
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Linux, Jenkins, AWS, SRE, Prometheus, Docker, Python, Ansible, Git, Kubernetes, Terraform, OpenStack, SQL, NoSQL, Azure, GCP, DNS, Elastic, Network, Virtualization. DevOps Interview Questions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb09dzMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops_exercises.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‚ÑπÔ∏è ¬†This repo contains questions and exercises on various technical topics, sometimes related to DevOps and SRE :)&lt;/p&gt;
&lt;p&gt;üìä ¬†There are currently &lt;strong&gt;1553&lt;/strong&gt; questions&lt;/p&gt;
&lt;p&gt;üìö ¬†To learn more about DevOps and SRE, check the resources in &lt;a href="https://github.com/bregman-arie/devops-resources"&gt;devops-resources&lt;/a&gt; repository&lt;/p&gt;
&lt;p&gt;‚ö†Ô∏è ¬†You can use these for preparing for an interview but most of the questions and exercises don't represent an actual interview. Please read &lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/common-qa.md"&gt;Q&amp;amp;A&lt;/a&gt; for more details&lt;/p&gt;
&lt;p&gt;üë• ¬†&lt;a href="https://www.facebook.com/groups/538897960007080" rel="nofollow"&gt;Join&lt;/a&gt; our &lt;a href="https://www.facebook.com/groups/538897960007080" rel="nofollow"&gt;DevOps community&lt;/a&gt; where we have discussions and resources on DevOps&lt;/p&gt;
&lt;p&gt;üìù ¬†You can add more questions and exercises by submitting pull requests :) Read about contribution guidelines &lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#devops"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNtHkNqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/devops.png" width="70px;" height="75px;" alt="DevOps"&gt;&lt;br&gt;&lt;b&gt;DevOps&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#jenkins"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dg5AdRYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/jenkins.png" width="85px;" height="85px;" alt="Jenkins"&gt;&lt;br&gt;&lt;b&gt;Jenkins&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#git"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUlFk_8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/git.png" width="80px;" height="75px;" alt="Git"&gt;&lt;br&gt;&lt;b&gt;Git&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#ansible"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W5deOUih--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/ansible.png" width="75px;" height="75px;" alt="ansible"&gt;&lt;br&gt;&lt;b&gt;Ansible&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#Network"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m4jbLqGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/network.png" width="80x;" height="75px;" alt="Network"&gt;&lt;br&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#linux"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4gBbxA2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/linux.png" width="75x;" height="75px;" alt="Linux"&gt;&lt;br&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#terraform"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yXcBiZVI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/terraform.png" width="70px;" height="75px;" alt="Terraform"&gt;&lt;br&gt;&lt;b&gt;Terraform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#programming"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6nD1n1xQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/programming.png" width="75px;" height="75px;" alt="programming"&gt;&lt;br&gt;&lt;b&gt;Programming&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#python"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2C1IOISE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/python.png" width="80px;" height="75px;" alt="Python"&gt;&lt;br&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#go"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLtC_nLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/Go.png" width="75px;" height="75px;" alt="go"&gt;&lt;br&gt;&lt;b&gt;Go&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#shell-scripting"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L0AbH1mo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/bash.png" width="70px;" height="75px;" alt="Bash"&gt;&lt;br&gt;&lt;b&gt;Shell Scripting&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#kubernetes"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZcVsYx1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/kubernetes.png" width="75px;" height="75px;" alt="kubernetes"&gt;&lt;br&gt;&lt;b&gt;Kubernetes&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#prometheus"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9oLro69O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/prometheus.png" width="75px;" height="75px;" alt="Prometheus"&gt;&lt;br&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#mongo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yCxBdvkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/mongo.png" width="75px;" height="75px;" alt="Mongo"&gt;&lt;br&gt;&lt;b&gt;Mongo&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#cloud"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6offB----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/cloud.png" width="110px;" height="75px;" alt="Cloud"&gt;&lt;br&gt;&lt;b&gt;Cloud&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#aws"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OoSnHdDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/aws.png" width="75px;" height="75px;" alt="aws"&gt;&lt;br&gt;&lt;b&gt;AWS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#azure"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpgkvCC4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/azure.png" width="75px;" height="75px;" alt="azure"&gt;&lt;br&gt;&lt;b&gt;Azure&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#gcp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKYaZXFX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/googlecloud.png" width="80px;" height="75px;" alt="Google Cloud Platform"&gt;&lt;br&gt;&lt;b&gt;Google Cloud Platform&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openstack"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Sy93A5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openstack.png" width="75px;" height="75px;" alt="openstack"&gt;&lt;br&gt;&lt;b&gt;OpenStack&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#security"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gxLpQsn_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/security.png" width="75px;" height="75px;" alt="security"&gt;&lt;br&gt;&lt;b&gt;Security&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#puppet"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKdgDjIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/puppet.png" width="75px;" height="75px;" alt="puppet"&gt;&lt;br&gt;&lt;b&gt;Puppet&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zfbkjAzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/monitoring.png" width="75px;" height="75px;" alt="Monitoring"&gt;&lt;br&gt;&lt;b&gt;Monitoring&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#elastic"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WrKgy75--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/elastic.png" width="110px;" height="75px;" alt="Elastic"&gt;&lt;br&gt;&lt;b&gt;Elastic&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#virtualization"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3s6DIgIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/virtualization.png" width="75px;" height="75px;" alt="Virtualization"&gt;&lt;br&gt;&lt;b&gt;Virtualization&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#dns"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6oDa-4tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/dns.png" width="75px;" height="75px;" alt="DNS"&gt;&lt;br&gt;&lt;b&gt;DNS&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#operating-system"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xR1YZDBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/os.png" width="75px;" height="75px;" alt="Operating System"&gt;&lt;br&gt;&lt;b&gt;Operating System&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#distributed"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vz7c0jRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/distributed.png" width="110px;" height="75px;" alt="Distributed"&gt;&lt;br&gt;&lt;b&gt;Distributed&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#general"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mMmBNbCF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/general.png" width="110px;" height="75px;" alt="General"&gt;&lt;br&gt;&lt;b&gt;General&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#testing"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0X0X3mgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/testing.png" width="75px;" height="75px;" alt="Testing"&gt;&lt;br&gt;&lt;b&gt;Testing&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#databases"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3imgOYm7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/databases.png" width="75px;" height="75px;" alt="Databases"&gt;&lt;br&gt;&lt;b&gt;Databases&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#regex"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJDAwVtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/regex.png" width="75ph;" height="75px;" alt="RegEx"&gt;&lt;br&gt;&lt;b&gt;Regex&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#system-design"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4JiQuC29--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/design.png" width="110px;" height="75px;" alt="Design"&gt;&lt;br&gt;&lt;b&gt;System Design&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#hardware"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXLHGsIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/hardware.png" width="110px;" height="75px;" alt="Hardware"&gt;&lt;br&gt;&lt;b&gt;Hardware&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#big-data"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_yNlL3qv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/big-data.png" width="110px;" height="75px;" alt="Big Data"&gt;&lt;br&gt;&lt;b&gt;Big Data&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#questions-you-ask"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CAarJQgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/you.png" width="110px;" height="75px;" alt="you"&gt;&lt;br&gt;&lt;b&gt;Questions you ask&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#certificates"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bYoAbZam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/certificates.png" width="75px;" height="75px;" alt="Certificates"&gt;&lt;br&gt;&lt;b&gt;Certificates&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#containers"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piwJpywR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/containers.png" width="70px;" height="75px;" alt="Containers"&gt;&lt;br&gt;&lt;b&gt;Containers&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#sql"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cso8Jjt_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/sql.png" width="75px;" height="75px;" alt="sql"&gt;&lt;br&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#openshift"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TQI81TUq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/openshift.png" width="75px;" height="75px;" alt="OpenShift"&gt;&lt;br&gt;&lt;b&gt;OpenShift&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#storage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lK7GzMc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/storage.png" width="75px;" height="75px;" alt="Storage"&gt;&lt;br&gt;&lt;b&gt;Storage&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#HR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EYZxXM2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/HR.png" width="110px;" height="75px;" alt="HR"&gt;&lt;br&gt;&lt;b&gt;HR&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/#exercises"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rciNPz3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bregman-arie/devops-exercises/master/images/exercises.png" width="110px;" height="75px;" alt="Exercises"&gt;&lt;br&gt;&lt;b&gt;Exercises&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
DevOps&lt;/h2&gt;

What is‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bregman-arie/devops-exercises"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-test-your-sysadmin-skills"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/trimstray/test-your-sysadmin-skills"&gt;Test your sysadmin skills&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Github stars: 7.2k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This project contains test questions and answers that can be asked during an interview/exam for positions such as Linux System Administrator.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trimstray"&gt;
        trimstray
      &lt;/a&gt; / &lt;a href="https://github.com/trimstray/test-your-sysadmin-skills"&gt;
        test-your-sysadmin-skills
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A collection of Linux Sysadmin Test Questions and Answers. Test your knowledge and skills in different fields with these Q/A.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://github.com/trimstray/test-your-sysadmin-skills"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZLA4kAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trimstray/test-your-sysadmin-skills/raw/master/static/img/sysadmin_preview.png" alt="Master"&gt;
  &lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;‚≠ê&lt;/p&gt;

&lt;p&gt;"&lt;i&gt;A great Admin doesn't need to know everything, but they should be able to come up with amazing solutions to impossible projects.&lt;/i&gt;" - cwheeler33 (ServerFault)&lt;/p&gt;

&lt;p&gt;‚≠ê&lt;/p&gt;

&lt;p&gt;"&lt;i&gt;My skills are making things work, not knowing a billion facts. [...] If I need to fix a system I‚Äôll identify the problem, check the logs and look up the errors. If I need to implement a solution I‚Äôll research the right solution, implement and document it, the later on only really have a general idea of how it works unless I interact with it frequently... it‚Äôs why it‚Äôs documented.&lt;/i&gt;" - Sparcrypt (Reddit)&lt;/p&gt;



&lt;p&gt;
  &lt;a href="https://github.com/trimstray/test-your-sysadmin-skills/pulls"&gt;
    &lt;img src="https://camo.githubusercontent.com/d29d75f2930f80fe8a37354d3d3d44518d4e6b4a31f8b646b90c56e7e0d1e463/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f6c6f6e6743616368653d74727565" alt="Pull Requests"&gt;
  &lt;/a&gt;
  &lt;a href="https://raw.githubusercontent.com/trimstray/test-your-sysadmin-skills/master/LICENSE.md"&gt;
    &lt;img src="https://camo.githubusercontent.com/2ee5364f0e08ac47e00119204cf1ab24dd21ec87b4fb81bb657feae43ec88ed4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d6c69676874677265792e7376673f6c6f6e6743616368653d74727565" alt="MIT License"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://twitter.com/trimstray" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c43b110bed909475c271c4eeb9255d8aa76e2e14be650239653f02cdab85ae4c/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f7472696d73747261792e7376673f6c6f676f3d74776974746572"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;div&gt;
  Created by
  &lt;a href="https://twitter.com/trimstray" rel="nofollow"&gt;trimstray&lt;/a&gt; and
  &lt;a href="https://github.com/trimstray/test-your-sysadmin-skills/graphs/contributors"&gt;contributors&lt;/a&gt;

&lt;/div&gt;



&lt;br&gt;
&lt;br&gt;

&lt;p&gt;‚ÑπÔ∏è ¬†This project contains &lt;strong&gt;284&lt;/strong&gt; test questions and answers that can be used as a test your knowledge or during an interview/exam for position such as &lt;strong&gt;Linux (*nix) System Administrator&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;‚úîÔ∏è ¬†The answers are only &lt;strong&gt;examples&lt;/strong&gt; and do not exhaust‚Ä¶&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trimstray/test-your-sysadmin-skills"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#5-how-they-sre"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/upgundecha/howtheysre"&gt;How they SRE&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠ê Github stars: 4.8k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo is a curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/upgundecha"&gt;
        upgundecha
      &lt;/a&gt; / &lt;a href="https://github.com/upgundecha/howtheysre"&gt;
        howtheysre
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
How they SRE&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt; &lt;a href="https://github.com/upgundecha/howtheysre/actions/workflows/workflow.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oXEhLQc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/upgundecha/howtheysre/actions/workflows/workflow.yml/badge.svg" alt="CI"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/upgundecha/howtheysre/main/banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q9DMdVtY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/upgundecha/howtheysre/main/banner.png" alt="Alt" title="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;How They SRE&lt;/strong&gt; is a curated knowledge repository of best practices, tools, techniques, and culture of SRE adopted by the leading technology or tech-savvy organizations.&lt;/p&gt;
&lt;p&gt;Many organizations regularly come forward and share their best practices, tools, techniques and offer an insight into engineering culture on various public platforms like engineering blogs, conferences &amp;amp; meetups. The content is curated from these avenues and shared in this repository.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note to readers: This list refers to some of the articles, posts, videos, tools, and techniques published before 2015. Please use such material with caution as there may be recent advances in technology and practices which offer better alternatives and perspectives.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
Topics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Site Reliability Engineering&lt;/li&gt;
&lt;li&gt;Hiring and Building SRE teams&lt;/li&gt;
&lt;li&gt;SRE Culture&lt;/li&gt;
&lt;li&gt;DevOps&lt;/li&gt;
&lt;li&gt;Monitoring &amp;amp; Observability&lt;/li&gt;
&lt;li&gt;Alerting&lt;/li&gt;
&lt;li&gt;Incident Response‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/upgundecha/howtheysre"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;I hope you enjoyed this list. I will be coming up with more such amazing resources soon. So, stay tuned! üôÇ&lt;/p&gt;




&lt;p&gt;Currently building &lt;a href="https://bit.ly/3h6mOMc"&gt;Signoz&lt;/a&gt; - an open-source APM and observability tool. üíô&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. It is an open-source alternative to DataDog, New Relic, etc.üëá&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
üëá Features:&lt;/h3&gt;


&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>devops</category>
      <category>github</category>
      <category>cloud</category>
      <category>docker</category>
    </item>
    <item>
      <title>June 25th, 2021: What did you learn this week?</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Fri, 25 Jun 2021 12:31:01 +0000</pubDate>
      <link>https://dev.to/nickytonline/june-25th-2021-what-did-you-learn-this-week-2271</link>
      <guid>https://dev.to/nickytonline/june-25th-2021-what-did-you-learn-this-week-2271</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ojmB7lOn3VUU8/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ojmB7lOn3VUU8/giphy.gif" alt="Image of the brain"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; 
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Awesome Youtube</title>
      <author>nguy√™n</author>
      <pubDate>Fri, 25 Jun 2021 12:11:05 +0000</pubDate>
      <link>https://dev.to/npv2k1/awesome-youtube-1kej</link>
      <guid>https://dev.to/npv2k1/awesome-youtube-1kej</guid>
      <description>&lt;p&gt;github: &lt;a href="https://github.com/npv2k1/awesome-yt"&gt;https://github.com/npv2k1/awesome-yt&lt;/a&gt;&lt;br&gt;
website: &lt;a href="https://awesome-yt.vercel.app"&gt;https://awesome-yt.vercel.app&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list"&gt;
  &lt;/a&gt;
  List
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Programming"&gt;Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Web-development"&gt;Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Software-Engineers"&gt;Software Engineers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Computer-sciences"&gt;Computer sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#R"&gt;R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Julia"&gt;Julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Flutter"&gt;Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Audio-and-video"&gt;Audio and video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Cybersercurity"&gt;Cybersercurity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Internet"&gt;Internet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Math"&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Data-Science"&gt;Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Data-Engineering"&gt;Data Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Machine-Learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Game-development"&gt;Game development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#AI-Research"&gt;AI Research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Digital-Design"&gt;Digital Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Operating-Systems"&gt;Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Hardware"&gt;Hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#life-Skills-And-Job-Searching"&gt;life Skills And Job Searching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Electronics"&gt;Electronics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pobcasts"&gt;Pobcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Organizations"&gt;Organizations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#programming"&gt;
  &lt;/a&gt;
  Programming
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Freecodecamp"&gt;freeCodeCamp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GeeksLesson"&gt;Geek's Lesson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/nesoacademy/videos"&gt;Neso Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TensorProgramming"&gt;Tensor Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA"&gt;Fireship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/intellipaaat"&gt;Intellipaat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ProgrammingKnowledge"&gt;ProgrammingKnowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg"&gt;Tech With Tim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRLEADhMcb8WUdnQ5_Alk7g"&gt;Aaron Jack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/JavaBrainsChannel"&gt;Java Brains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/99baddawg"&gt;Ben Awad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/IAmTimCorey"&gt;IAmTimCorey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CSDojo/featured"&gt;CS Dojo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DevonCrawford/featured"&gt;Devon Crawford&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GiraffeAcademy/featured"&gt;Mike Dane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/programmingwithmosh"&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA"&gt;TechWorld with Nana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTjPBE9BNsmv44wgxWEy2zw"&gt;Will Kwan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKuDLsO0Wwef53qdHPjbU2Q"&gt;William Lin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/WilliamFiset-videos"&gt;WilliamFiset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCV0qA-eDDICsRR9rPcnG7tw"&gt;Joma Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwgKmJM4ZJQRJ-U5NjvR2dg"&gt;george hotz archive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCyrF_lsKS9kQ3OUKQkgYh3A"&gt;maria sitkovets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/shiffman"&gt;The Coding Train&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodingTech"&gt;Coding Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SimplifiedcodingNetOfficial"&gt;Simplified Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/smartherd"&gt;Smartherd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCQ2zUgxOwo5lzX11maTQmng"&gt;Asto Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/KennyGunderman/featured"&gt;Kenny Gunderman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/gerardonfiya/featured"&gt;Gerard Taylor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaiL2GDNpLYH6Wokkk1VNcg"&gt;mCoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DonJonesConTech"&gt;Don Jones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/derekbanas/featured"&gt;Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/briantwill"&gt;Brian Will&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LearningLad"&gt;LearningLad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CalebTheVideoMaker2"&gt;Caleb Curry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodingEntrepreneurs"&gt;CodingEntrepreneurs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SebastiaanMath%C3%B4t"&gt;Sebastiaan Math√¥t&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AngelSix"&gt;AngelSix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DataDaft"&gt;DataDaft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q"&gt;Fun Fun Function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GiraffeAcademy/"&gt;Mike Dane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXpGqiSd3BD0FQ9OP3ziFsw"&gt;KodingKevin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TheChernoProject"&gt;The Cherno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HusseinNasser-software-engineering"&gt;Hussein Nasser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_fFL5jgoCOrwAVoM_fBYwA"&gt;Alex Lee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RedisUniversity"&gt;Redis University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NeuralNine"&gt;NeuralNine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/realpython"&gt;Real Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LucidProgramming"&gt;LucidProgramming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/ElfocrashDev"&gt;Nick Chapsas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PythonIn1Minute"&gt;Python In 1 Minute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AndreasKling"&gt;Andreas Kling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCX7-Wi9ioslA9691INtFO5Q"&gt;Hackers Realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4SVo0Ue36XCfOyb5Lh1viQ"&gt;Bro Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCmWDlvMYYEbW42B8JyxFBcA"&gt;NullPointer Exception&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/dotNET"&gt;dotNET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Csharp-video-tutorialsBlogspot"&gt;kudvenkat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCg1SjE1gwO8A0xqoFtfLEAA"&gt;Ian Schoenrock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC-yuWVUplUJZvieEligKBkA"&gt;javidx9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#web-development"&gt;
  &lt;/a&gt;
  Web development
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC80PWRj_ZU8Zu0HSMNVwKWw"&gt;Codevolution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FluxWithRanSegall"&gt;Flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Techsithtube"&gt;techsith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4QVZ552Q-dXIdMSc2cewcA"&gt;CSS Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheCharmefis"&gt;Dani Krossing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/JavaScriptMastery"&gt;JavaScript Mastery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Omatum"&gt;Omatum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PunitChawla"&gt;Punit Chawla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DevEd"&gt;Dev Ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DesignCourse"&gt;DesignCourse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TraversyMedia"&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/acinteractivedesign"&gt;Thomas Bradley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RedStapler_channel"&gt;Red Stapler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsKsymTY_4BYR-wytLjex7A"&gt;Brian Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AngularFirebase"&gt;Fireship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Academind"&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FlorinPop"&gt;Florin Pop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LevelUpTuts"&gt;LevelUpTuts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/programmingwithmosh"&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/learncodeacademy"&gt;LearnCode.academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RawCoding"&gt;Raw Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LayoutLand"&gt;Layout Land&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheNetNinja"&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/kepowob"&gt;Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/hswolff"&gt;Harry Wolff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodingGarden"&gt;Coding Garden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HiteshChoudharydotcom"&gt;Hitesh Choudhary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/swyxTV"&gt;swyx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/flintyara"&gt;Yuri Artyukh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Lengstorf"&gt;Jason Lengstorf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DevTipsForDesigners/"&gt;DevTips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbwXnUipZsLfUckBPsC7Jog"&gt;Online Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Bitfumes/"&gt;Bitfumes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw"&gt;Web Dev Simplified&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/BenAwad97/"&gt;Ben Awad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ebenezerdon/"&gt;Ebenezer Don&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt;Dev Ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SteveGriffith-Prof3ssorSt3v3"&gt;Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TraversyMedia/featured"&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCzNf0liwUzMN6_pixbQlMhQ"&gt;Coder Coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FilipDev/featured"&gt;Filip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCJZv4d5rbIKd4QHMPkcABCw"&gt;Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCeU-1X402kT-JlLdAitxSMA"&gt;Florin Pop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#software-engineers"&gt;
  &lt;/a&gt;
  Software Engineers
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LearnGoogleSpreadsheets"&gt;Learn Google Spreadsheets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/amamd91"&gt;ICT Tutorial Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/OnlineTrainingforEveryone"&gt;Online Training for Everyone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Simonsezit"&gt;Simon Sez IT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TomScottGo"&gt;Tom Scott&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/KeepOnCoding"&gt;Keep On Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/EngineerMan"&gt;Engineer Man&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEDkO7wshcDZ7UZo17rPkzQ"&gt;mayuko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2WHjPDvbE6O328n17ZGcfg"&gt;ForrestKnight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKvwPt6BifPP54yzH99ff1g"&gt;Kevin Naughton Jr.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCWr0mx597DnSGLFk1WfvSkQ"&gt;Kalle Hallden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/calvinchancreates"&gt;calvin.c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaO6VoaYJv4kS-TQO_M-N_g/featured"&gt;Cl√©ment Mihailescu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NickWhite/featured"&gt;Nick White&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TwentyFi5ToLife"&gt;Coding With Zhia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/givemeabreak2469/featured"&gt;Carla Notarobot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#computer-sciences"&gt;
  &lt;/a&gt;
  Computer sciences
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/zachstar"&gt;Zach Star&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DomainofScience"&gt;Domain of Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/nesoacademy"&gt;Neso Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/Computerphile"&gt;Computerphile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/stanfordonline"&gt;stanfordonline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/FCIHOCW"&gt;FCIH OCW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/mitocw"&gt;MIT OpenCourseWare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw"&gt;3Blue1Brown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Socratica"&gt;Socratica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZCFT11CWBi3MHNlGf019nw"&gt;Abdul Bari&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClEEsT7DkdVO_fkrBw0OTrA"&gt;mycodeschool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GaryExplains"&gt;Gary Explains&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NeuralNine"&gt;NeuralNine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Coreyms/featured"&gt;Corey Schafer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/sentdex"&gt;sentdex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/KGMIT/featured"&gt;Keith Galli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/realpython/videos"&gt;Real Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC68KSmHePPePCjW4v57VPQg"&gt;Python Programmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCti8KSLHdoVd7K0VZwUZk_g"&gt;Computational Biology with Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#r"&gt;
  &lt;/a&gt;
  R
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/safe4democracy"&gt;David Robinson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/asianlongboarder"&gt;Andrew Couch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTTBgWyJl2HrrhQOOc710kA"&gt;Julia Silge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRhUp6SYaJ7zme4Bjwt28DQ/featured"&gt;David Langer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCP8l94xtoemCH_GxByvTuFQ"&gt;TidyX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#julia"&gt;
  &lt;/a&gt;
  Julia
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/JuliaLanguage"&gt;The Julia Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheFlutterWay/featured"&gt;The Flutter Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwXdFgeE9KYzlDdR7TG9cMw"&gt;Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlists?list=PLOU2XLYxmsIK0r_D-zWcmJ1plIcDNnRkK"&gt;The Boring Flutter Development Show&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FlutterExplained"&gt;Flutter Explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TadasPetra/featured"&gt;Tadas Petra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LearnFlutterCode/featured"&gt;Learn App Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FunwithFlutter/featured"&gt;Fun with Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RobertBrunhage/featured"&gt;Robert Brunhage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/FlutterCommunityVideos/featured"&gt;Flutter Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SuperDeclarative/featured"&gt;SuperDeclarative!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Afgprogrammer/featured"&gt;Afgprogrammer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ruby"&gt;
  &lt;/a&gt;
  Ruby
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkoEStUK7wxmZef2DcPuCAQ/featured"&gt;zayne - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/kadwill"&gt;Tom Kadwill - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GorailsTV/featured"&gt;GoRails - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DriftingRuby/featured"&gt;Drifting Ruby - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#audio-and-video"&gt;
  &lt;/a&gt;
  Audio and video
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Obedia"&gt;OBEDIA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/BlackMixture"&gt;Black Mixture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/avnishparker"&gt;Avnish Parker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DenyKingYoutube"&gt;Deny King&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/AndrewPPrice"&gt;Blender Guru&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/mediagabbitt"&gt;Grant Abbitt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CGFastTrack"&gt;CG Fast Track&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCuNhGhbemBkdflZ1FGJ0lUQ"&gt;DUCKY 3D&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCb_NEjjKOXV9pilaSOjlkZA"&gt;Akash Murthy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgWd1Q2dcWdqCGNl5BijFsA"&gt;Bela Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/cycling74com"&gt;Cycling '74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCf-VdHm0OyV_TKD5BU9yIXw"&gt;Digital Signal Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/elifieldsteel"&gt;Eli Fieldsteel - Supercollider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaF6fKdDrSmPDmiZcl9KLnQ"&gt;JUCE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCQB04t2hxSBVTjxpbIHdI-w"&gt;Sam Aaron - Sonic Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEMuqW8dYhhbs4uXtcAaHvQ"&gt;Seth Adams - Deep Learning Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCpKb02FsH4WH4X_2xhIoJ1A"&gt;The Audio Programmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cybersercurity"&gt;
  &lt;/a&gt;
  Cybersercurity
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Cyberspatial/about"&gt;Cyberspatial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DavidBombal"&gt;David Bombal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkefXKtInZ9PLsoGRtml2FQ"&gt;Professor Messer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodeCommand"&gt;CodeCommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LiveOverflowCTF"&gt;LiveOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgTNupxATBfWmfehv21ym-g"&gt;NullByte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0ZTPkdxlAKf-V33tqXwi3Q"&gt;Hackersploit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GeraldAuger"&gt;Gerald Auger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NetworkChuck"&gt;Network Chuck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#internet"&gt;
  &lt;/a&gt;
  Internet
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NetVNbuitronghieu"&gt;Net VN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtuXekfqj-paqsxtqVNCC2A"&gt;Network Direction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NetworKingInc"&gt;NetworKing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PowerCertAnimatedVideos"&gt;PowerCert Animated Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#math"&gt;
  &lt;/a&gt;
  Math
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/joshstarmer"&gt;StatQuest with Josh Starmer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw"&gt;3Blue1Brown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ritvikmath"&gt;ritvikmath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/zedstatistics"&gt;zedstatistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/BrandonFoltz/featured"&gt;Brandon Foltz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/jonkrohnlearns"&gt;Mathematical Foundations of ML with Jon Krohn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MathTheBeautiful/playlists"&gt;MathTheBeautiful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DrTreforBazett/playlists"&gt;Dr.Trefor Bazett&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data-science"&gt;
  &lt;/a&gt;
  Data Science
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCiT9RITQ9PW6BhXK0y2jaeg"&gt;Ken Jee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2UXDak6o7rBm23k3Vv5dww"&gt;Tina Huang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCV8e2g4IWQqK71bbzGDEI4Q"&gt;Data Professor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/krishnaik06"&gt;Krish Naik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC6VPXglDoZYMOj2kr-flNJQ"&gt;Imaad Mohamed Khan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ImportData1/featured"&gt;Import Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCv83tO5cePwHMt1952IVVHw"&gt;James Briggs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/95shawshankk19"&gt;Shashank Kalanithi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC7cs8q-gJRlGwj4A8OmCmXg"&gt;Alex The Analyst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC7T_528unh2ZgnVcx1sl7oA/channels"&gt;How to Get an Analytics Job&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCDoIFHMTKsgIweO-OZt1ecw"&gt;Chris Lovejoy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbWVgqVWcthADXHgxXJn1bA"&gt;Anastasia K&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcQx1UnmorvmSEZef4X7-6g"&gt;Data Science Jay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW8Ews7tdKKkBT6GdtQaXvQ"&gt;Nate at StrataScratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCLLw7jmFsvfIVaUFsLs8mlQ"&gt;Luke Barousse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/inferno0709"&gt;Madhav Thaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCenqe6Cvfd47aHAOb9Qe8yA/featured"&gt;Damsel in Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKPyg5gsnt6h0aA8EBw3i6A"&gt;RichardOnData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCY2ifv8iH1Dsgjrz-h3lWLQ"&gt;Part Time Larry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkYooZtwK_RJAd9SdL1jfeA/featured"&gt;The High ROI Data Scientist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCBV194XNr6CIQCCuw1v2rMQ"&gt;dataslice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCAWsBMQY4KSuOuGODki-l7A"&gt;Data Interview Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/dataschool/featured"&gt;Data School&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCQSMCVUX1HgrwxJhO_7VrJQ/featured"&gt;DataInterview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/365DataScience/videos"&gt;365 Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC5Uikv2NXsZ4ZEWOGyW__3A"&gt;Data Science Society&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data-engineering"&gt;
  &lt;/a&gt;
  Data Engineering
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SeattleDataGuy"&gt;Seattle Data Guy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCAxnMry1lETl47xQWABvH7g"&gt;Karolina Sowinska&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/atozknowledgevideos/featured"&gt;Data Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCiWjUAmiF3v91NbHOKuPNow/videos"&gt;Tuan Vu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCX5KGm1UmEFYYQfMmcluapQ"&gt;StartDataEngineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodeFirstio/featured"&gt;Code First&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AbhishekThakurAbhi"&gt;Abhishek Thakur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AhladKumar"&gt;Ahlad Kumar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AladdinPersson"&gt;Aladdin Persson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AndreasMueller"&gt;Andreas Mueller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/dataschool"&gt;Data School&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCHB9VepY6kYvZjj0Bgxnpbw"&gt;Henry AI Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/howardjeremyp"&gt;Jeremy Howard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RasaHQ"&gt;Rasa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/YannicKilcher"&gt;Yannic Kilcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXZCJLdBC09xxGZ6gcdrc6A"&gt;OpenAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/K%C3%A1rolyZsolnai"&gt;Two Minute Papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCUzGQrN-lyyc0BWTYoJM_Sg"&gt;What's AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCr8O8l5cCX85Oem1d18EezQ"&gt;Daniel Bourke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/marksaroufim"&gt;Mark Saroufim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NicholasRenotte"&gt;Nicholas Renotte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AbhishekThakurAbhi"&gt;Abhishek Thakur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AladdinPersson"&gt;Aladdin Persson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodeEmporium/featured"&gt;CodeEmporium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCmOwsoHty5PrmE-3QhUBfPQ"&gt;Jay Alammar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodeThisCodeThat/featured"&gt;Yacine Mahdid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCHB9VepY6kYvZjj0Bgxnpbw/featured"&gt;Henry AI Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsh8qhZ4Wm2IJDRsNr_5Z0A"&gt;Smitha Kolan - Machine Learning Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/aicoffeebreak"&gt;AI Coffee Break with Letitia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4UJ26WkceqONNF5S26OiVw"&gt;deeplizard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC1OLIHvAKBQy3o5LcbbxUSg"&gt;The Independent Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AlfredoCanziani/featured"&gt;Alfredo Canziani&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbOX--VOebPe-MMRkatFRxw/featured"&gt;Cassie Kozyrkov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AIEngineeringLife/featured"&gt;AIEngineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCk1u5_qq_nrdz13-o5K6beQ"&gt;Kapil Sachdeva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AICoding/featured"&gt;AI Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZPFjMe1uRSirmSpznqvJfQ"&gt;Valerio Velardo - The Sound of AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#game-development"&gt;
  &lt;/a&gt;
  Game development
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ScriptersWar"&gt;ScriptersWar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Brackeys"&gt;Brackeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/JonasTyroller"&gt;Jonas Tyroller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RealTutsGML"&gt;RealTutsGML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCX4mqbvv5lGqLpI4FYlJt4w"&gt;Mark Rise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ChrisCourses"&gt;Chris Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Zenva"&gt;Zenva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MixandJam"&gt;Mix and Jam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SebastianLague"&gt;Sebastian Lague&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DaFluffyPotato"&gt;DaFluffyPotato&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ChiliTomatoNoodle"&gt;ChiliTomatoNoodle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCxboW7x0jZqFdvMdCFKTMsQ"&gt;GDQuest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/uheartbeast"&gt;HeartBeast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MethMethMethod"&gt;Meth Meth Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ClearCode"&gt;Clear Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ai-research"&gt;
  &lt;/a&gt;
  AI Research
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AIJournal"&gt;AI Journal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCNIkB2IeJ-6AmZv7bQ1oBYg"&gt;Arxiv Insights&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/YannicKilcher/featured"&gt;Yannic Kilcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/K%C3%A1rolyZsolnai/featured"&gt;Two Minute Papers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgfe2ooZD3VJPB6aJAnuQng"&gt;bycloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#digital-design"&gt;
  &lt;/a&gt;
  Digital Design
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HowtoGraphicDesign"&gt;How to Graphic Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/armaganvideos"&gt;ArmaganVideos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TTTutorials"&gt;T&amp;amp;T Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Pixelandbracket"&gt;Pixel &amp;amp; Bracket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ZakeyDesignow"&gt;Zakey Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ArtwithFlo"&gt;Art with Flo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/tutsplus"&gt;Envato Tuts+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/logosbynick"&gt;Logos By Nick&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MohamedAchraf"&gt;Mohamed Achraf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#operating-systems"&gt;
  &lt;/a&gt;
  Operating Systems
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RibaLinux"&gt;Riba Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MSFTWebCast"&gt;MSFT WebCast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hardware"&gt;
  &lt;/a&gt;
  Hardware
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgfe2ooZD3VJPB6aJAnuQng"&gt;Ben Eater&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TeachingTech"&gt;Teaching Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LinusTechTips"&gt;Linus Tech Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Educ8s"&gt;educ8s.tv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/greatscottlab"&gt;GreatScott!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/RaspberryPiBeginners"&gt;RaspberryPiIVBeginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/explainingcomputers"&gt;ExplainingComputers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#life-skills-and-job-searching"&gt;
  &lt;/a&gt;
  Life Skills And Job Searching
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GcflearnfreeOrgplus"&gt;GCFLearnFree.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/hellomayuko"&gt;mayuko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/Tychos1"&gt;Joshua Fluke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/JomaOppa"&gt;Joma Tech&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#electronics"&gt;
  &lt;/a&gt;
  Electronics
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ALLABOUTELECTRONICS"&gt;All About Electronics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#pobcasts"&gt;
  &lt;/a&gt;
  Pobcasts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/lexfridman"&gt;Lex Fridman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsEdlkbxrAH93NVGFgGtgdA"&gt;bitgrit_official&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MachineLearningStreetTalk/videos"&gt;Machine Learning Street Talk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/WeightsBiases"&gt;Weights &amp;amp; Biases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ChaiTimeDataScience/featured"&gt;Chai Time Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC60gRMJRjTuTskBnl-LkPAg"&gt;Data Skeptic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/datafuturology"&gt;Data Futurology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/oreilly/featured"&gt;O'Reilly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TowardsDataScience/videos"&gt;Towards Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/OpenDataScienceCon/videos"&gt;Open Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/springboard/featured"&gt;Springboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DataScienceSalon/featured"&gt;Data Science Salon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Deeplearningai"&gt;DeepLearningAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4yopSSlBfw2WAykLPTYH-w/featured"&gt;The Ravit Show&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#organizations"&gt;
  &lt;/a&gt;
  Organizations
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DeepMind/videos"&gt;DeepMind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TensorFlow/featured"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/googlecloudplatform/featured"&gt;Google Cloud Tech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0rqucBdTuFTjJiefW5t-IQ"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCHlNU7kIZhRgSbhHvFoy72w"&gt;HuggingFace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXZCJLdBC09xxGZ6gcdrc6A"&gt;OpenAI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCWXI5YeOsh03QvJ59PMaXFw"&gt;PyTorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/kaggledotcom"&gt;Kaggle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/0xdata"&gt;H2O.ai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Datacamp/featured"&gt;DataCamp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>awesome</category>
      <category>programming</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Cloud Computing- An Overview</title>
      <author>Neha Soni</author>
      <pubDate>Fri, 25 Jun 2021 12:00:36 +0000</pubDate>
      <link>https://dev.to/nehasoni__/cloud-computing-an-overview-4ib3</link>
      <guid>https://dev.to/nehasoni__/cloud-computing-an-overview-4ib3</guid>
      <description>&lt;p&gt;Hi everyone üëãüèª,&lt;br&gt;&lt;br&gt;
In this blog post, I am going to give you an overview of cloud computing. We will look at the examples of cloud computing and the old way of doing things. After that, I will also discuss the service models for cloud computing. &lt;br&gt;&lt;br&gt;
&lt;em&gt;Let's get started&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#traditional-computing"&gt;
  &lt;/a&gt;
  Traditional Computing
&lt;/h1&gt;

&lt;p&gt;It is a computing environment historically used for hosting services, applications, and data that are owned, managed, and controlled by the same organization. In this computing, the user can have access to data only on the system in which data is stored. It is a possess of using physical &lt;strong&gt;data centers&lt;/strong&gt; for storing digital assets and running complete networking systems for daily operations. Now, &lt;br&gt;&lt;em&gt;What is a data center?&lt;/em&gt; &lt;br&gt;In a layman language, the data center is a building somewhere and in that building, we have routers, switches, firewalls, storage systems, servers, and application delivery controllers. And a data center is not really a cheap thing to build and maintain. For maintaining a data center there must be special air conditioning systems, redundant power supplies, redundant network connectivity, and lots of infrastructures to make sure that your services run &lt;strong&gt;24/7&lt;/strong&gt;. So there is a lot of headache in maintaining data centers. That's why many companies say goodbye to traditional IT and move to &lt;strong&gt;cloud computing&lt;/strong&gt;. But it doesn't mean it has gone away. It's still used in some companies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HL-KXqaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618019386/Th2NNlJdd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HL-KXqaw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618019386/Th2NNlJdd.jpeg" alt="traditional it.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-cloud-computing"&gt;
  &lt;/a&gt;
  What is Cloud Computing?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;"Cloud computing is the on-demand delivery of IT resources over the Internet with pay-as-you-go pricing. Instead of buying, owning, and maintaining physical data centers and servers, you can access technology services, such as computing power, storage, and databases, on an as-needed basis from a cloud provider."&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HXCj_W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618174731/dmV3tgDq7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HXCj_W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618174731/dmV3tgDq7.png" alt="cloud.png"&gt;&lt;/a&gt;&lt;br&gt;
There are many cloud service providers in the market, some of these are:-&lt;br&gt;
1.) Amazon Web services&lt;br&gt;
2.) Microsoft Azure&lt;br&gt;
3.) Google Cloud&lt;br&gt;
4.) Alibaba Cloud&lt;br&gt;
5.) IBM Cloud&lt;br&gt;
6.) Oracle Cloud&lt;br&gt;
7.) Cloud Sigma&lt;br&gt;
8.) SAP&lt;br&gt;
....and many more&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cloud-computing-examples"&gt;
  &lt;/a&gt;
  Cloud computing examples
&lt;/h1&gt;

&lt;p&gt;Let's take examples of some services or applications that use cloud services to understand what cloud computing is.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TwD1yyso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618329205/2-AQFQfPuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TwD1yyso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624618329205/2-AQFQfPuo.png" alt="examples.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;1.) Gmail, Dropbox, Facebook&lt;/strong&gt;:- These all are examples of cloud storage providers and the number of cloud storage providers is increasing day by day.&lt;br&gt;
&lt;strong&gt;Gmail&lt;/strong&gt; is one of Google‚Äôs most important email service providers that provide unlimited storage on the cloud. It is used by billions of people. Gmail is a consumer service as well as it comes as a business package too.&lt;br&gt;
&lt;strong&gt;Dropbox&lt;/strong&gt; is established in 2008 and right now is a true leader in cloud storage. It is a storage service to offers up to 1 TB of storage space for free and allows users to access files on any device through its website.&lt;br&gt;
&lt;strong&gt;Facebook&lt;/strong&gt; is the largest social media platform globally with 2.6 billion monthly active users worldwide. It can store a large amount of information, images, videos on your profile.&lt;br&gt;
&lt;strong&gt;2.) Microsoft Office 365&lt;/strong&gt;:-  Microsoft office 365 is cloud-based product access by lots of users through the internet. With the help of Office 365, you can work from anywhere and share the work documents with your colleagues worldwide. There are number of benefits of office 365 like it improves user productivity, provides 1 TB storage with OneDrive. You can easily recover data from the cloud if you lose your computer or it crashes etc.&lt;br&gt;
&lt;strong&gt;3.) Dell‚Äôs Secure Healthcare Cloud&lt;/strong&gt;:- Dell is one of the most used cloud service providers in Healthcare. It allows nurses, physicians, and administrators to share information quickly from anywhere and patients can access it remotely without any delay. It ensures patients receive the best possible care without unnecessary delay.&lt;br&gt;
There are many more examples of cloud computing in different areas like in education there is AWS(Amazon web services),  SlideRocket, Ratatype. For the government, there are IT consolidation, shared services, citizen services, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cloud-computing-deployment-models"&gt;
  &lt;/a&gt;
  Cloud Computing Deployment Models
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;"A cloud deployment model is defined according to where the infrastructure for the deployment resides and who has control over that infrastructure."&lt;/strong&gt; There are four deployment models associated with cloud computing:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KuXi_4vf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624602777282/iiOCcHU8p.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KuXi_4vf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624602777282/iiOCcHU8p.jpeg" alt="Cloud-Computing-types-Cloud-1.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-public-cloud"&gt;
  &lt;/a&gt;
  a.) Public cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4pY7zrq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605300408/H8PO0gs55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pY7zrq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605300408/H8PO0gs55.png" alt="publiccloud.png"&gt;&lt;/a&gt;&lt;br&gt;
Amazon, Google, Microsoft are examples of public cloud. These companies support all users who want to make use of a computing resource and provide both services as well as the infrastructure on a subscription basis. The main advantage of a public cloud is its &lt;strong&gt;versatility&lt;/strong&gt; and &lt;strong&gt;pay as you go&lt;/strong&gt; structure that allows customers to provide more capacity on demand. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#b-private-cloud"&gt;
  &lt;/a&gt;
  b.) Private cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LoUnV7zE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605468764/_ulsM30YK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LoUnV7zE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605468764/_ulsM30YK.png" alt="download.png"&gt;&lt;/a&gt;&lt;br&gt;
Private cloud usually resides behind the firewall and is used exclusively by a single business or organization. It may be physically located on the company‚Äôs on-site data center or sometimes companies also pay third-party service providers to host their private cloud. Private clouds are more expensive than public clouds due to the capital expenditure involved in acquiring and maintaining them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#c-hybrid-cloud"&gt;
  &lt;/a&gt;
  c.) Hybrid Cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbowYK6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605954231/phQaBrZGe.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbowYK6T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624605954231/phQaBrZGe.webp" alt="hybrid-cloud-diagram.webp"&gt;&lt;/a&gt;&lt;br&gt;
Hybrid cloud combines public cloud with private cloud. They are designed to allow the two platforms to interact seamlessly. Many organizations make use of this deployment model to scale up their IT infrastructure rapidly. It‚Äôs the perfect solution for organizations that needs a little bit of both options, usually dependent upon industry and size.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#d-community-cloud"&gt;
  &lt;/a&gt;
  d.) Community Cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPhcm-rd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624606449839/3F4ikKpib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPhcm-rd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624606449839/3F4ikKpib.png" alt="community-cloud.png"&gt;&lt;/a&gt;&lt;br&gt;
This deployment model supports multiple organizations sharing computing resources that are part of a community. The users are typically operating within the same industry or field and share common concerns in terms of security, compliance, and performance. It is not commonly used as the other three models. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-cloud-computing-over-traditional-it"&gt;
  &lt;/a&gt;
  Benefits of Cloud Computing over Traditional IT
&lt;/h1&gt;

&lt;p&gt;Let's discuss some benefits of cloud computing over Traditional IT and understands why companies choose to say goodbye to traditional IT.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Traditional IT infrastructure&lt;/th&gt;
&lt;th&gt;Cloud computing&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hardware&lt;/td&gt;
&lt;td&gt;organizations will have to acquire a large number of servers, routers, switches, firewalls, storage systems with proper security&lt;/td&gt;
&lt;td&gt;All the hardware, networking, storage, and everything is provided by cloud service provider&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maintenance&lt;/td&gt;
&lt;td&gt;organizations will have to do regular checkups of their hardware and also have to ensure software being used are regularly updated&lt;/td&gt;
&lt;td&gt;Regular maintenance of hardware is handled by cloud service providers and they also handle software updates for services managed by service provider&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disaster recovery&lt;/td&gt;
&lt;td&gt;organizations will have to do necessary backups of data and setup so in case of disaster the users don‚Äôt face any downtimes&lt;/td&gt;
&lt;td&gt;cloud service providers have a global infrastructure with multiple data centers within one region, so in case of any disaster, services are uninterrupted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IT staff&lt;/td&gt;
&lt;td&gt;a team of trained IT professionals had to be hired to monitor the entire infrastructure&lt;/td&gt;
&lt;td&gt;cloud service providers have highly trained IT staff that works 24/7 to ensure best services&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flexibility and scaling&lt;/td&gt;
&lt;td&gt;to handle increasing workloads, more powerful hardware have to be set up so the user doesn‚Äôt feel any lag in services&lt;/td&gt;
&lt;td&gt;Cloud hosting offers an enhanced level of flexibility and scalability. Cloud servers can scale up or down depending on the level of traffic your website receives.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;automation&lt;/td&gt;
&lt;td&gt;most of the processes of scaling up or down, backups, monitoring, etc. are manual and time-consuming&lt;/td&gt;
&lt;td&gt;from deploying the infrastructure, monitoring, backups to customers, and taking necessary actions in case of failures, all the things are automated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;running cost&lt;/td&gt;
&lt;td&gt;you will need to purchase equipment and additional server space upfront to adapt to business growth&lt;/td&gt;
&lt;td&gt;cloud service providers charge for the time resources are used or the amount of storage is being used.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#types-of-cloud-computing-services"&gt;
  &lt;/a&gt;
  Types of cloud computing services
&lt;/h1&gt;

&lt;p&gt;A lot of different types of cloud services fall under the overall category of cloud computing. The NIST(The National Institute of Standards and Technology) cloud computing definition identifies three cloud service models: software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lLjE1KMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613119966/Xo49fqqRL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLjE1KMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624613119966/Xo49fqqRL.png" alt="spi4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#saas"&gt;
  &lt;/a&gt;
  SaaS
&lt;/h3&gt;

&lt;p&gt;SaaS(Software as a Service) provides clients with the ability to use software applications on a remote basis via an internet web browser. Examples of SaaS include Google Applications and internet-based email applications like Mail, Hotmail, and Gmail. The most popular among online retailers, allows merchants to run direct sales applications such as shopping carts in the cloud without their customers having to download or install programs to make a purchase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paas"&gt;
  &lt;/a&gt;
  PaaS
&lt;/h3&gt;

&lt;p&gt;PaaS(Platform as a Service) provides clients with the ability to develop and publish customized applications in a hosted environment via the web. It represents a new model for software development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iaas"&gt;
  &lt;/a&gt;
  IaaS
&lt;/h3&gt;

&lt;p&gt;IaaS(Infrastructure as a Service) allows clients to remotely use IT hardware and resources on a "pay-as-you-go" basis. It is also referred to as HaaS(Hardware as service). Major IaaS players include companies like IBM, Google, and Amazon. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#future-of-cloud-computing"&gt;
  &lt;/a&gt;
  Future of cloud computing
&lt;/h1&gt;

&lt;p&gt;Cloud computing is the future of enterprise applications and solutions. The International Data Corporation (IDC) estimates that already in 2018 at least half of IT spending is cloud-based. It has many benefits that it provides to its users and businesses. There are no standards or regulations worldwide that provided data through cloud computing. &lt;/p&gt;

&lt;p&gt;If you enjoyed learning and find it useful please do like and share so that, it reaches others as well ü§ù&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading üòÉ
&lt;/h3&gt;

&lt;p&gt;I would ‚ù§ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/nehasoni05"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know in the comment section if you have any doubts or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should definitely check out my other Blogs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/how-to-build-a-strong-professional-network-online-b7k"&gt;How to Build a Strong Professional Network Online&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/plasma-donation-website-using-mern-stack-26f5"&gt;Plasma Donation Website&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/random-quote-generator-using-html-css-and-javascript-3gbp"&gt;Random Quote Generator Using HTML, CSS, and JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-javascript-basics-g6n"&gt;Introduction to JavaScript: Basics&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/playing-with-javascript-objects-k4h"&gt;Playing with JavaScript Objects&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nehasoni__/7-javascript-data-structures-you-must-know-57ah"&gt;7 JavaScript Data Structures you must know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-reactjs-3553"&gt;Introduction to ReactJS
&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Happy LearningüòÉüòÉ&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>cloudskills</category>
      <category>aws</category>
      <category>googlecloud</category>
    </item>
  </channel>
</rss>
