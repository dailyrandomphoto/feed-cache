<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to do web development only on mobile</title>
      <author>SHUBHAM </author>
      <pubDate>Sat, 11 Dec 2021 12:18:50 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/how-to-do-web-development-only-on-mobile-4ia3</link>
      <guid>https://dev.to/shubham_ingale/how-to-do-web-development-only-on-mobile-4ia3</guid>
      <description>&lt;p&gt;Hey there today I am sharing how I created &lt;a href="http://notableapp.github.io"&gt;boosted notes&lt;/a&gt; in mobile only. &lt;/p&gt;

&lt;h2 id="sharing-topics"&gt;Sharing topics&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Apps to use ( &lt;a href="#apps-to-use"&gt;@apps-to-use&lt;/a&gt; ) &lt;/li&gt;
&lt;li&gt;Console for mobile &lt;/li&gt;
&lt;li&gt;Hosting via mobiles&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="apps-to-use"&gt;Apps to use&lt;/h2&gt;

&lt;p&gt;There are many code editors on mobile I'll share two of them. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Treb edit
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TharBvqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcQrsbFN6GFcEF51PDuOT7EoMSBDEKijhhShUA%26usqp%3DCAU" alt="TrebEdit app logo" width="512" height="512"&gt; 
Teb edit is best app to use for web development on mobile. 
PROS:-
Better syntax highlight
Better app experience
JavaScript console
CONS:-
No local server &lt;/li&gt;
&lt;li&gt;Spck
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtvZFMLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcQ-RT3N4YlPB6P9CNAlsthNGNiiub5R1BDZIw%26usqp%3DCAU" alt="Spck code" width="512" height="512"&gt;
Spck is better to use if you are working with git.
PROS:-
Support git
Zip file extraction
Intellisense
Local server support
CONS:-
No better responsiveness.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="console-in-mobile"&gt;console in mobile&lt;/h2&gt;

&lt;p&gt;You can use &lt;a href="https://github.com/liriliri/eruda"&gt;eruda console&lt;/a&gt; which is very simple to use in mobile.&lt;/p&gt;

&lt;h3 id="lets-try-it"&gt;Let's try it&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;del&gt;First open any website on you browser&lt;/del&gt; (you've already opened this page)&lt;/li&gt;
&lt;li&gt; Enter following code in address bar&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;&lt;span class="hljs-attr"&gt;javascript&lt;/span&gt;:(&lt;span class="hljs-keyword"&gt;function&lt;/span&gt; (&lt;span class="hljs-params"&gt;&lt;/span&gt;) { &lt;span class="hljs-keyword"&gt;var&lt;/span&gt; script = &lt;span class="hljs-variable language_"&gt;document&lt;/span&gt;.&lt;span class="hljs-title function_"&gt;createElement&lt;/span&gt;(&lt;span class="hljs-string"&gt;'script'&lt;/span&gt;); script.&lt;span class="hljs-property"&gt;src&lt;/span&gt;=&lt;span class="hljs-string"&gt;"//cdn.jsdelivr.net/npm/eruda"&lt;/span&gt;; &lt;span class="hljs-variable language_"&gt;document&lt;/span&gt;.&lt;span class="hljs-property"&gt;body&lt;/span&gt;.&lt;span class="hljs-title function_"&gt;appendChild&lt;/span&gt;(script); script.&lt;span class="hljs-property"&gt;onload&lt;/span&gt; = &lt;span class="hljs-keyword"&gt;function&lt;/span&gt; (&lt;span class="hljs-params"&gt;&lt;/span&gt;) { eruda.&lt;span class="hljs-title function_"&gt;init&lt;/span&gt;() } })();&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="demo-images-of-console"&gt;demo images of console&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--llFUgJKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/SGI-CAPP-AT2/SGI-CAPP-AT2.github.io/main/blogs/How%2520to%2520do%2520web%2520development%2520only%2520on%2520mobile/eruda%2520console%2520button.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--llFUgJKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/SGI-CAPP-AT2/SGI-CAPP-AT2.github.io/main/blogs/How%2520to%2520do%2520web%2520development%2520only%2520on%2520mobile/eruda%2520console%2520button.jpg" alt="image of eruda button" width="880" height="269"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GTQ9wD9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/SGI-CAPP-AT2/SGI-CAPP-AT2.github.io/main/blogs/How%2520to%2520do%2520web%2520development%2520only%2520on%2520mobile/eruda%2520console%2520screenshot.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GTQ9wD9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/SGI-CAPP-AT2/SGI-CAPP-AT2.github.io/main/blogs/How%2520to%2520do%2520web%2520development%2520only%2520on%2520mobile/eruda%2520console%2520screenshot.jpg" alt="image of console eruda" width="880" height="1455"&gt;&lt;/a&gt;&lt;/p&gt; 

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>android</category>
    </item>
    <item>
      <title>Everything about Programming, in One Place</title>
      <author>Arghya Sarkar</author>
      <pubDate>Sat, 11 Dec 2021 12:08:55 +0000</pubDate>
      <link>https://dev.to/arghyasarkar/everything-about-programming-in-one-place-2ej2</link>
      <guid>https://dev.to/arghyasarkar/everything-about-programming-in-one-place-2ej2</guid>
      <description>&lt;p&gt;As a programmer, or a CS enthusiast, or even a CS student, what are the most common stuff you do except writing code?&lt;/p&gt;

&lt;p&gt;Probably it's&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Searching up articles&lt;/li&gt;
&lt;li&gt;Looking for resources here and there&lt;/li&gt;
&lt;li&gt;Finding challenges to learn from&lt;/li&gt;
&lt;li&gt;To explore happenings of the computer science world&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In any of the cases, we can feel you. I know, it just sucks to find stuff out cuz that's time taking, it affects your productivity for sure. There's not always you find suitable stuff. Me for example, find the same challenges in most of the websites, very common ones. &lt;/p&gt;

&lt;p&gt;So this post is about a Newsletter. &lt;strong&gt;WAIT&lt;/strong&gt;, before fleeing off thinking I'm acting like a salesperson, c'mon, read the whole post then judge. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cs-voyager"&gt;
  &lt;/a&gt;
  CS Voyager
&lt;/h3&gt;

&lt;p&gt;After months of work, we are on our journey to making CS Voyager more awesome&lt;/p&gt;

&lt;p&gt;If you dont know what in world this &lt;strong&gt;CS Voyager&lt;/strong&gt; is, let me brief it.&lt;/p&gt;

&lt;p&gt;We believe that, In the near future many new CS domains and techs are going to emerge to revolutionize the world.To keep ourselves updated with these changing technologies, we (youth) should also have the latest skills in the field of CS, which in turn can help us contribute to digitizing our planet and being a CS-aware citizen in the world of technology.&lt;/p&gt;

&lt;p&gt;So, To keep the motivation and knowledge flowing, We have came us with an Idea of "CS Voyager"&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CS Voyager&lt;/strong&gt; is a monthly newsletter which will keep you updated with the latest happenings around the globe in the field of Computer Science &amp;amp; will provide focused knowledge specifically designed for CS enthusiasts. Just like a person who goes on voyages, our newsletter is on its voyage &amp;amp; shall explore a different part of CS and this evolving Technology era &amp;amp; present them in front of the reader.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-all-can-i-get"&gt;
  &lt;/a&gt;
  What all can I get?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;News and Latest Happenings&lt;/strong&gt;&lt;br&gt;
You will get the latest info about fascinating thing which has happened or is going to happen, in the field of CS around the globe recently.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Programming Tips and Tricks&lt;/strong&gt;&lt;br&gt;
You will be given few coding tips &amp;amp; tricks every month to improve the execution of your coding skills &amp;amp; may be to show off your friends...&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Games and CodeJams&lt;/strong&gt;&lt;br&gt;
Bored..? So here we are with some cool games through which you can relax yourself along in your journey of learning &amp;amp; exploring CS &amp;amp; CodeJams will help you to compete with your fellow learners to know your standings at the national level&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lot to learn&lt;br&gt;
Various articles will be published on learning new skills and enriching your skills. You'll get a lot of fun stuff to explore and can get hands on with more resources without much searching.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fascinating Stories and Articles&lt;br&gt;
Stories About incidents that have happened recently in the field of CS, sometimes funny sometimes scandalous, which will make you a CS-Aware citizens &amp;amp; Fun activites will keep your motivation high to keep learning in this field.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#when-does-the-newsletter-get-updated"&gt;
  &lt;/a&gt;
  When does the newsletter get updated
&lt;/h4&gt;

&lt;p&gt;The newsletter is updated on the 7th of each month.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-should-you-read-cs-voyager"&gt;
  &lt;/a&gt;
  Why should you read CS Voyager?
&lt;/h4&gt;

&lt;p&gt;CS Voyager helps you to learn more about technology. We include articles on great inventions using technology which will help you learn more about the Computer Science field and will increase your curiosity and interest for learning more! It's not about school, it's not about limited access to education, it's totally about YOU&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#who-should-read-cs-voyager"&gt;
  &lt;/a&gt;
  Who should read CS Voyager?
&lt;/h4&gt;

&lt;p&gt;Are you interested in learning about Computer Science? Are you a technology enthusiast? Are you curious about inventions done with Computer Science? Then this website is the one for you! Go for it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subscribe-to-the-newsletter"&gt;
  &lt;/a&gt;
  Subscribe to the Newsletter
&lt;/h3&gt;

&lt;p&gt;Subscribing is as free as the Subscribe button in YouTube (without the Ads ofcourse)&lt;/p&gt;

&lt;p&gt;Just few simple steps!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Subscribe using &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSe6AqJ9IK7z16QmKeZ3REErG1QpH1ZkJGyrD_XyXVDQ69daJQ/viewform?pli=1"&gt;this form&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Referral Code: &lt;strong&gt;DEVTO&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Subscription is easy, just enter a few details and you are done!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#write-for-csv"&gt;
  &lt;/a&gt;
  Write for CSV
&lt;/h4&gt;

&lt;p&gt;Wanna publish your article at the newsletter to make it reach hundreds of other people?&lt;/p&gt;

&lt;p&gt;Join us through &lt;a href="https://discord.gg/AkR6U7eF6S"&gt;discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mail us at &lt;a href="mailto:computersciencevoyager@gmail.com"&gt;computersciencevoyager@gmail.com&lt;/a&gt; giving a brief about your article, how it will help people and attaching a link/file of your article&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#current-status"&gt;
  &lt;/a&gt;
  Current Status
&lt;/h3&gt;

&lt;p&gt;We have successfully published 2 editions of our newsletter, and are looking forward to our next one, which will arrive soon&lt;/p&gt;

&lt;p&gt;CS Voyager has crossed 100 subscribers!! Hence more than 100 people are now reading CS Voyager from around the world&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contact-us"&gt;
  &lt;/a&gt;
  Contact Us
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Official Website:&lt;/strong&gt; &lt;a href="https://csvoyager.netlify.app/"&gt;https://csvoyager.netlify.app/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="https://discord.gg/AkR6U7eF6S"&gt;https://discord.gg/AkR6U7eF6S&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Mail&lt;/strong&gt;: &lt;a href="mailto:computersciencevoyager@gmail.com"&gt;computersciencevoyager@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As always, I'm open to feedback&lt;/p&gt;

&lt;p&gt;Thank You,&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>news</category>
      <category>ai</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Using Node.js for Backend Web Development in 2022</title>
      <author>Yuriy Luchaninov</author>
      <pubDate>Sat, 11 Dec 2021 11:55:29 +0000</pubDate>
      <link>https://dev.to/yuriyl/using-nodejs-for-backend-web-development-in-2022-4jo4</link>
      <guid>https://dev.to/yuriyl/using-nodejs-for-backend-web-development-in-2022-4jo4</guid>
      <description>&lt;p&gt;Developing modern software applications is an essential undertaking for any growing business. Fortunately, the ongoing advancements in application development technology have presented business owners and project managers with a plethora of options to choose from. However, the breadth of possible technologies available can be overwhelming. It’s important to choose the right tech stack for your business based on the objectives and priorities you have established.&lt;/p&gt;

&lt;p&gt;One such technology that is widely in use today is Node.js. As a modern application framework, Node.js has been adopted by many companies to build their backend tech stack. Its usage can be seen across industries as a popular option for server-side application development.&lt;/p&gt;

&lt;p&gt;The popularity of Node.js today is increasing exponentially. Node.js is currently in use by well-known companies like &lt;a href="https://netflixtechblog.com/making-netflix-com-faster-f95d15f2e972"&gt;Netflix&lt;/a&gt;, &lt;a href="https://eng.uber.com/uber-tech-stack-part-two/"&gt;Uber&lt;/a&gt;, &lt;a href="https://medium.com/paypal-tech/node-js-at-paypal-4e2d1d08ce4f"&gt;PayPal&lt;/a&gt;, &lt;a href="https://blog.twitter.com/engineering/en_us/topics/open-source/2017/how-we-built-twitter-lite"&gt;Twitter&lt;/a&gt;, and more. And among programmers, Node.js was ranked as the 6th most popular technology (though, this includes also Javascript, SQL and TypeScript, as they are used in Node.js development) according to &lt;a href="https://insights.stackoverflow.com/survey/2021#most-popular-technologies-language"&gt;StackOverflow’s 2021 Developer Survey&lt;/a&gt;, with over one-third of professional developers ranking it in the top.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--clGQzLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2aq00wx6emsf8speqtk1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--clGQzLCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2aq00wx6emsf8speqtk1.jpg" alt="Top Languages 2021" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what is Node.js? How does it work, and is it still relevant in today’s technological and business landscape? More importantly, why are so many big-name companies and professional developers using it? These are the questions we will answer in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nodejs-and-how-it-works"&gt;
  &lt;/a&gt;
  What is Node.js and How it Works
&lt;/h2&gt;

&lt;p&gt;In terms of application stacks, Node.js presents an interesting intersection of frontend and backend technologies. Built on JavaScript, which is traditionally a frontend, client-side web scripting language, Node.js extends the capabilities of JavaScript to run on the backend, server-side portion of a web application architecture, as well as for serverless architecture.&lt;/p&gt;

&lt;p&gt;Node.js does this by executing within its own runtime on the server. A good analogy to draw is the comparison between Node.js and Java, which also runs applications within their own runtime. The Node.js runtime is designed to be lightweight and efficient, with non-blocking I/O and a package manager to make building applications in the Node.js ecosystem even easier.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzZeioQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqoyy92aw7biv661aww2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzZeioQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqoyy92aw7biv661aww2.jpg" alt="How Node.js Works" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The package manager for Node.js is called npm. Its purpose is to serve as an index of libraries built by the Node.js community of developers which are easily shared and imported by other projects. These packages provide helpful solutions to common functions and code that simplify scaffolding new projects and improving old ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-frameworks-approaches"&gt;
  &lt;/a&gt;
  Node.js Frameworks / Approaches
&lt;/h2&gt;

&lt;p&gt;Even though Node.js itself is a powerful and versatile platform, there are frameworks/approaches that have built upon Node.js to improve it even further.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nestjs"&gt;
  &lt;/a&gt;
  NESTJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.nestjs.com"&gt;NestJS&lt;/a&gt; is an open-source, extensible, and versatile Node.js framework which incorporates TypeScript (a superset of JavaScript which is a strongly typed programming language). It is built on an abstraction of other Node.js frameworks like Express and Fastify. This abstraction makes it easy to learn and get up to speed building projects.&lt;/p&gt;

&lt;p&gt;NestJS is built on the concepts of Modules, Providers, and Controllers. Modules are logical units of code organized together. Every application will have at least one root Module, but more can be built on top of that as the code is organized. Providers are abstractions of code that can be injected as dependencies. Controllers handle incoming requests from the client to perform application logic and return a response.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1gS2ZvKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5vq7j9bqf72xv261u5i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1gS2ZvKO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l5vq7j9bqf72xv261u5i.jpg" alt="NestJS Architecture" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The NestJS framework is great for the advantages of TypeScript and the benefits of other abstracted frameworks. The ease of use and extensibility are good for developing applications around a microservice architecture as well. The framework provides a strict project structure and implies a team work of several programmers, which helps set up a less buggy development process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#electron"&gt;
  &lt;/a&gt;
  ELECTRON
&lt;/h3&gt;

&lt;p&gt;JavaScript is primarily a language for web application development, so it makes sense that most of the frameworks built on it are also intended for the web. However, Electron combines the Chromium rendering engine and the Node.js runtime and allows the development of desktop applications using JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.electronjs.org"&gt;Electron&lt;/a&gt; simplifies desktop application development by allowing programmers to write these apps in platform-agnostic web languages like HTML5 and CSS. It also makes the packaging and installation of these applications much easier.&lt;/p&gt;

&lt;p&gt;Electron is therefore good to consider when your business use requires a desktop application without the complexity and redundancy of developing native applications for different platforms. The Electron framework’s usage of web languages speeds up the development process and reduces the time to market for new products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deno"&gt;
  &lt;/a&gt;
  DENO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://deno.land"&gt;Deno&lt;/a&gt; was released by the creator of Node.js in 2018 to address many of the problems Node.js developers and users had experienced. Specifically, these included addressing issues around security, modules, and compatibility.&lt;/p&gt;

&lt;p&gt;Like Node.js, the Deno runtime executes code in its own application. However, Deno programs are more secure in that the runtime executes within a sandbox, isolated from the underlying file system. This adds security that prevents attackers from “breaking out” of the executable runtime and gaining access to the server the code is running on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x28Klyq5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46d1o0pk05h6c1rc2c8f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x28Klyq5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46d1o0pk05h6c1rc2c8f.jpg" alt="Deno Sandboxing by Default" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deno also eliminates the need for a centralized package manager system like Node.js’s npm. It does this by allowing modules to be imported directly by a URL and caching those modules in case the hosting URL is unavailable.&lt;/p&gt;

&lt;p&gt;Finally, Deno supports TypeScript and strives for enhanced browser compatibility. For these reasons, there are a &lt;a href="https://github.com/denoland/deno/wiki#companies-interested-in-deno"&gt;number of companies&lt;/a&gt; who are already expressing interest in adopting Deno for their own use cases, however you should keep in mind that it is not yet supported by the major cloud providers, so &lt;a href="https://github.com/denoland/deno_docker"&gt;Docker images&lt;/a&gt; should be used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-nodejs"&gt;
  &lt;/a&gt;
  Why Use Node.js
&lt;/h2&gt;

&lt;p&gt;Node.js is an applicable solution for many different types of use cases. As a primarily server-side framework, Node.js lends itself to applications within the backend side of the technology stack. Below are a few of the instances when Node.js makes sense to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightweight-fast-applications-with-realtime-communication"&gt;
  &lt;/a&gt;
  LIGHTWEIGHT, FAST APPLICATIONS WITH REAL-TIME COMMUNICATION
&lt;/h3&gt;

&lt;p&gt;Understanding the size of your product is essential for choosing the right technology to build it with. The flexible and efficient nature of Node.js lends itself to building small, fast, and scalable applications. Real-time applications like instant messaging and collaboration tools are one example of this. This, coupled with the fast synchronization abilities of Node.js also make it useful for event-based applications. Examples of these include applications that use WebSockets and WebRTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverless-and-microservice-architecture"&gt;
  &lt;/a&gt;
  SERVERLESS AND MICROSERVICE ARCHITECTURE
&lt;/h3&gt;

&lt;p&gt;Because of its flexibility, Node.js is very good for building both serverless and microservice-based applications. These design styles are both very popular for saving resources and efficiently managing application lifecycles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.serverless.com"&gt;Serverless architecture&lt;/a&gt; is popular for its ability to save computing costs by only requiring the resources the application needs to run with no additional overhead. These applications are stateless and lightweight. This makes Node.js integration with serverless architecture a great combination. There are npm packages for serverless design, and building a serverless Node.js application works well with an overall microservice architecture in C2C and B2C use cases when the server load is volatile.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internet-of-things"&gt;
  &lt;/a&gt;
  INTERNET OF THINGS
&lt;/h3&gt;

&lt;p&gt;Node.js is very good at handling simultaneous connections. Since IoT is built on many devices sending small messages that must be handled quickly, Node.js makes a good backend for these kinds of applications, providing serverless architecture and real-time communication support.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#audiovideo-processing"&gt;
  &lt;/a&gt;
  AUDIO/VIDEO PROCESSING
&lt;/h3&gt;

&lt;p&gt;Node.js handles asynchronous input and output much better than other technologies. So, when combined with external media tools, Node.js can be used as an option for processing and handling multimedia data. For example, a streaming setup can be easily configured using Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rapid-development"&gt;
  &lt;/a&gt;
  RAPID DEVELOPMENT
&lt;/h3&gt;

&lt;p&gt;The ease of use that Node.js offers by being built on common web languages makes ramp-up times very minimal. New products can be built quickly and brought to market without delay. The amount of engineering resources required to do so is also reduced because of this.&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://mobidev.biz/case-studies/node-js-web-development-online-workplace"&gt;case study&lt;/a&gt; shows how Node.js helps meet strict deadlines. The product, an online marketplace for hail damage repair contractors and clients, was set to be launched before the high season started. Choosing between PHP and Node.js, we decided to go with Node.js to meet both the functional requirements and deadlines. Using isomorphic architecture allowed us to reduce the development time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integration-with-c-code"&gt;
  &lt;/a&gt;
  INTEGRATION WITH C++ CODE
&lt;/h3&gt;

&lt;p&gt;Node.js is able to seamlessly integrate with existing C++ libraries. This is because the Node.js runtime is essentially built on a C++ server that runs on the host node. That allows Node.js to quickly transmit data between C++ and application code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing-nodejs-to-other-backend-technologies"&gt;
  &lt;/a&gt;
  Comparing Node.js to Other Backend Technologies
&lt;/h2&gt;

&lt;p&gt;It may seem confusing that Node.js is distinct from other technologies, and the differences between them might not be immediately apparent. After all, each framework is designed for a purpose. Below are some of the most common comparisons between Node.js and similar technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-vs-java"&gt;
  &lt;/a&gt;
  Node.js vs Java
&lt;/h2&gt;

&lt;p&gt;It is common to compare Node.js to Java because each tool runs programs within its own runtime environment. However, that is where most of the similarities end. Java is a compiled, object-oriented programming language with syntax similar to C++. Java programs are typically large and costly to develop. In contrast, Node.js programs are lightweight and based on non-compiled web languages like JavaScript. It is also much more suited for I/O applications and efficient server-side handling of HTTP requests.&lt;/p&gt;

&lt;p&gt;So, even though Java and Node.js may share similarities in their runtime applications, their use cases are actually quite different. Due to the event loop, Node.js is more efficient when operating with I/O applications, whilst Java’s thread pool is more powerful for complex computations. However, we can leverage both as microservices in one project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-vs-python"&gt;
  &lt;/a&gt;
  Node.js vs Python
&lt;/h2&gt;

&lt;p&gt;Python is a widely popular programming language due to its simple syntax and easy usability. These make building new projects in Python very easy, which has led to its popularity and explains its similarity to Node.js. However, Python is another object-oriented language like Java. And even though it is interpreted (like JavaScript), its programs can consume large amounts of computing resources.&lt;/p&gt;

&lt;p&gt;It is however useful in big projects for areas like AI and math-heavy simulations, which are not areas that Node.js is useful for. Python’s libraries make it easier to build the application logic, however its architecture makes performance challenging and requires a highly skilled programmer involvement.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-not-to-use-nodejs"&gt;
  &lt;/a&gt;
  When NOT to Use Node.js
&lt;/h2&gt;

&lt;p&gt;What are the cases when Node.js should not be used?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developing-financial-software"&gt;
  &lt;/a&gt;
  DEVELOPING FINANCIAL SOFTWARE
&lt;/h3&gt;

&lt;p&gt;Unfortunately, the financial sphere is the single sphere where Node.js is definitely not recommended because of the specifics of work with the floating decimal point—it can lead to accumulation of errors in variables that deal with finances, which is unacceptable. There are tools that allow you to build logic with high-precision calculations; however, all of them have drawbacks and must be used wisely. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-with-complex-cpu-calculations"&gt;
  &lt;/a&gt;
  APPLICATION WITH COMPLEX CPU CALCULATIONS
&lt;/h3&gt;

&lt;p&gt;Node.js is not the best solution when it comes to work with highly loaded threads that involve CPU. A good example is when audio and video processing is written on the back end—as opposed to the abovementioned recommended use of external processing tools, e.g. either ffmpeg / imagemagic or external libraries of C++ or Go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-trends-in-2022-and-beyond"&gt;
  &lt;/a&gt;
  Node.js Trends in 2022 and Beyond
&lt;/h2&gt;

&lt;p&gt;The domination of Node.js as a popular backend technology is well established. And with current adoption by &lt;a href="https://javascript.plainenglish.io/top-node-js-trends-that-will-dominate-in-2021-73dbc40e9c26"&gt;over 20 million websites&lt;/a&gt;, Node.js is sure to remain in use for the foreseeable future. But looking into 2022 and beyond, how will that popularity evolve?&lt;/p&gt;

&lt;p&gt;The advent of Deno as an alternative to Node.js is one trend that looks to continue. The improvements to security and compatibility that Deno offers are much needed as more businesses expand into web technology. Along with Deno, NestJS is gaining adoption thanks to its extensibility and modularity that make it flexible for growing apps.&lt;/p&gt;

&lt;p&gt;The need for scalability is boosted by a widespread shift to serverless and microservice application design. These small, lightweight architectural styles are much different from the large monoliths of traditional software design. Lightweight applications are cheaper and easier to build, and their reactiveness makes them ideal for real-time applications and IoT.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;In summary, the number of use cases for Node.js is already large and continuing to grow as advancements in other technical areas can apply to Node.js as well. There are no indications that this growth will slow any time soon. So with the proper research and the right use cases, Node.js can be an excellent choice for building many different types of products now and in the future.&lt;/p&gt;

&lt;p&gt;There are no “good” or “bad” technologies as such. Each one is good for its particular set of tasks. Every software product owner has to identify the most important criteria of choice, according to business goals and existing constraints—and after that, the choice will be much more obvious.&lt;/p&gt;

&lt;p&gt;If you have any specific questions regarding your own project, feel free to ask!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Higher-Order Array Functions forEach, map and filter</title>
      <author>Anil Seervi</author>
      <pubDate>Sat, 11 Dec 2021 11:27:06 +0000</pubDate>
      <link>https://dev.to/anilseervi/higher-order-array-function-foreach-map-and-filter-f64</link>
      <guid>https://dev.to/anilseervi/higher-order-array-function-foreach-map-and-filter-f64</guid>
      <description>&lt;p&gt;Array methods such as &lt;code&gt;forEach()&lt;/code&gt;, &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt; are some of the &lt;em&gt;Higher Order &lt;strong&gt;Array&lt;/strong&gt; Functions&lt;/em&gt; that come in very handy when you have to work with data that's in an Array.&lt;/p&gt;

&lt;p&gt;In this article we'll be discussing the following Higher-Order Functions, with examples :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll be assuming that you have a basic understanding of what &lt;em&gt;Higher-Order Functions&lt;/em&gt; are and how to work with them, &lt;strong&gt;if not&lt;/strong&gt;, I recommend you read my previous article on it.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/anilseervi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQfVL4JM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--chCiyP9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/727026/0a94299f-f08f-4ec7-b3ca-6ac1e1145e44.png" alt="anilseervi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/anilseervi/what-are-higher-order-functions-3p0p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Higher Order Functions in JavaScript.&lt;/h2&gt;
      &lt;h3&gt;Anil Seervi ・ Dec 4 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#functions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#-raw-arrayforeach-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.forEach()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;forEach()&lt;/code&gt; method is very useful to perform certain operation(s) for every element in the Array.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;forEach()&lt;/code&gt; method on an Array executes the provided &lt;em&gt;callback function&lt;/em&gt; for each element in the array in ascending index(starting 0).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;callbackFn&lt;/code&gt;&lt;br&gt;
Function to execute on each element. It accepts one to three arguments :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;element&lt;/code&gt; : The current element being processed in the array.&lt;br&gt;
&lt;code&gt;index&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The index of &lt;code&gt;element&lt;/code&gt; in array.&lt;br&gt;
&lt;code&gt;array&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The array on which &lt;code&gt;forEach()&lt;/code&gt; was called upon.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;forEach()&lt;/code&gt; method doesn't return anything : &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you look at the signature of the callback function in this method, it looks similar to the &lt;code&gt;forEach()&lt;/code&gt; function that I created in the previous &lt;strong&gt;Higher-Order Functions&lt;/strong&gt; article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/anilseervi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQfVL4JM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--chCiyP9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/727026/0a94299f-f08f-4ec7-b3ca-6ac1e1145e44.png" alt="anilseervi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/anilseervi/what-are-higher-order-functions-3p0p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Higher Order Functions in JavaScript.&lt;/h2&gt;
      &lt;h3&gt;Anil Seervi ・ Dec 4 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#functions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#es6&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;Let's recreate the same example now using the &lt;code&gt;Array.forEach()&lt;/code&gt; method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                 &lt;span class="c1"&gt;// Array of numbers&lt;/span&gt;

&lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;              &lt;span class="c1"&gt;// n =&amp;gt; element, i =&amp;gt; index, arr =&amp;gt; array(numbs)&lt;/span&gt;
 &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;                             &lt;span class="c1"&gt;// add 2 to current element&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;        &lt;span class="c1"&gt;// logs all element one-by-one&lt;/span&gt;
&lt;span class="c1"&gt;// 7&lt;/span&gt;
&lt;span class="c1"&gt;// 11&lt;/span&gt;
&lt;span class="c1"&gt;// 12&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the &lt;code&gt;forEach()&lt;/code&gt; is a method on the array itself, we can call it on any array using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors#dot_notation"&gt;&lt;em&gt;dot notation&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the above example we've called &lt;code&gt;Array.forEach()&lt;/code&gt; &lt;em&gt;Higher-Order function&lt;/em&gt; twice with arrow functions as callbacks, defined right withing &lt;code&gt;forEach()&lt;/code&gt;'s parameters.&lt;/p&gt;




&lt;p&gt;Say we have an Array of full names and you are required to separate all the full names into &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; of an object and push them into an array that already contains same kind-of data. How'd you do it?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Adam Benson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Clare Donaldson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ben Adams&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Donald Clarkson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's how you can use the &lt;code&gt;forEach()&lt;/code&gt; to push objects containing &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; property to the &lt;code&gt;names&lt;/code&gt; array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Anil&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Seervi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;fullNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;                             &lt;span class="c1"&gt;// empty object for initialization&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="s2"&gt;` `&lt;/span&gt; &lt;span class="c1"&gt;// split at spaces and destructure initialize&lt;/span&gt;
 &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            &lt;span class="c1"&gt;// push the object to names array&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cm"&gt;/*
[
  { firstName: 'Anil', lastName: 'Seervi' }
  { firstName: 'Adam', lastName: 'Benson' },
  { firstName: 'Clare', lastName: 'Donaldson' },
  { firstName: 'Ben', lastName: 'Adams' },
  { firstName: 'Donald', lastName: 'Clarkson' }
]
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, within our callback, we create an empty object &lt;code&gt;obj&lt;/code&gt; to store the properties. Then we split the current element of the array at spaces, destructure it right away storing it to properties &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; in the object &lt;code&gt;obj&lt;/code&gt;. At last we push the object into the &lt;code&gt;names&lt;/code&gt; array.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-raw-arraymap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.map()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Array.map()&lt;/code&gt; method comes very handy when you have to create a new array from executing a certain function on an existing array.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Array.map()&lt;/code&gt; method on an Array returns a new array populated with the return value of the &lt;em&gt;callback function&lt;/em&gt; called for every element in an array in ascending index(starting 0).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// returns a new array populated with results of callbackFn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;callbackFn&lt;/code&gt;&lt;br&gt;
Function to execute on each element of &lt;code&gt;arr&lt;/code&gt;. Each time &lt;code&gt;callbackFn&lt;/code&gt; executes, the return value is added to the &lt;code&gt;newArray&lt;/code&gt;.&lt;br&gt;
It accepts one to three arguments :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;element&lt;/code&gt; : The current element being processed in the array.&lt;br&gt;
&lt;code&gt;index&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The index of &lt;code&gt;element&lt;/code&gt; in array.&lt;br&gt;
&lt;code&gt;array&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The array on which &lt;code&gt;map()&lt;/code&gt; was called upon.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#return-value"&gt;
  &lt;/a&gt;
  Return value
&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;map()&lt;/code&gt; method returns a &lt;strong&gt;new Array&lt;/strong&gt; with each element being the result of the callback function.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;Let's assume we are given the following array and are told to produce another array of consisting of the sqaures of all the respective elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;// our boring array of numbers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The easiest way to do this will be by using the &lt;code&gt;Array.map()&lt;/code&gt; method :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Yes, its easy as that!!&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [ 5, 9, 10, 1 ]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqaures&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [ 25, 81, 100, 1 ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was so easy right. All we need to do is to call the &lt;code&gt;map()&lt;/code&gt; method on our &lt;code&gt;numbs&lt;/code&gt; array and return the square of the current element within it for our logic. As the &lt;code&gt;map()&lt;/code&gt; method itself returns a new Array, we store it in the variable &lt;code&gt;sqaures&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;Now let's look at another example where we'll convert an array of objects with &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; properties that we got as our output in the &lt;a href="//#Array.forEach()"&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; and create another array which will consist of only full names. Kinda the reverse of what we did in &lt;code&gt;forEach()&lt;/code&gt; example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// array of objects with firstName and lastName&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Anil&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Adam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Benson&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Clare&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Donaldson&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ben&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Adams&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Donald&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Clarkson&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// create a new Array of fullNames using names Array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;full_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;full_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trimEnd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fullNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [ 'Anil', 'Adam Benson', 'Clare Donaldson', 'Ben Adams', 'Donald Clarkson' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, the first thing you'll notice while looking at the example is we don't have &lt;code&gt;lastName&lt;/code&gt; property for my name and our logic will have to handle that too.&lt;/p&gt;

&lt;p&gt;Within the callback of our &lt;code&gt;map()&lt;/code&gt; method we are using template literals to concatenate &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;(if any: using optional chaining) to form the &lt;code&gt;full_name&lt;/code&gt;. And returning trimmed &lt;code&gt;full_name&lt;/code&gt; from the callback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-arrayfilter-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.filter()&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;As the name implies, this method is used to filter out the array which meets a certain condition.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Array.filter()&lt;/code&gt; method on the Array returns an new Array with only the elements that pass the test condition within the &lt;em&gt;callback function&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;// returns a new array with elements that satisfy the callback condition.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;callbackFn&lt;/code&gt;&lt;br&gt;
Function is a predicate to execute on each element of &lt;code&gt;arr&lt;/code&gt;. Each time &lt;code&gt;callbackFn&lt;/code&gt; is called, only the &lt;code&gt;element&lt;/code&gt;'s that coerce to &lt;code&gt;true&lt;/code&gt; are added into the new Array.&lt;br&gt;
It accepts one to three arguments :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;element&lt;/code&gt; : The current element being processed in the array.&lt;br&gt;
&lt;code&gt;index&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The index of &lt;code&gt;element&lt;/code&gt; in array.&lt;br&gt;
&lt;code&gt;array&lt;/code&gt; (&lt;em&gt;optional&lt;/em&gt;) : The array on which &lt;code&gt;filter()&lt;/code&gt; was called upon.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#return-value"&gt;
  &lt;/a&gt;
  Return Value
&lt;/h5&gt;

&lt;p&gt;The &lt;code&gt;filter()&lt;/code&gt; method returns a &lt;strong&gt;new Array&lt;/strong&gt; with only the elements that satisfy the test condition in the &lt;code&gt;callbackFn&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;

&lt;p&gt;To keep it easier to understand I'm taking our same old &lt;code&gt;numbs&lt;/code&gt; array to work on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       &lt;span class="c1"&gt;// hey, I'm bigger this time :)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;lets pose a couple question so to &lt;code&gt;filter&lt;/code&gt; our boring array.&lt;/p&gt;

&lt;p&gt;Q1. &lt;em&gt;Obtain an array of &lt;strong&gt;Odd Numbers&lt;/strong&gt; from &lt;code&gt;numbs&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;odd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;odd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [ 5, 9, 1, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Within the callback, we return true only for &lt;em&gt;odd&lt;/em&gt; numbers in our array which in-turn returns all odd numbers in our &lt;code&gt;numbs&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;Q2. &lt;em&gt;Obtain an array of &lt;strong&gt;Prime Numbers&lt;/strong&gt; from &lt;code&gt;numbs&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numb&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numb&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;numb&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;numbs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isPrime&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// [ 5, 3 ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;isPrime&lt;/code&gt; is our callback for &lt;code&gt;filter&lt;/code&gt; method which gets called with every element in &lt;code&gt;numbs&lt;/code&gt; and acts as our condition to filter out numbers that are &lt;em&gt;prime&lt;/em&gt;.&lt;/p&gt;




&lt;p&gt;Below is a composite example of both &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt; methods. I'm going to create an Array that'll contain names of my GitHub Repos which are majorly written with &lt;strong&gt;SCSS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The example is an &lt;em&gt;async&lt;/em&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;&lt;code&gt;IIFE&lt;/code&gt;(Immediately Invoked Function Expression)&lt;/a&gt; Function that'll get &lt;em&gt;called as soon as it's defined&lt;/em&gt;. Within our async function, I'm fetching the data related to my GitHub repos in JSON format using GitHub's REST API.&lt;/p&gt;

&lt;p&gt;The API returns an Array of Objects that contain information about my public GitHub repositories listed alphabetically. You can see the response of the API by visiting the below URL:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Maximum of 30 repos: &lt;a href="https://api.github.com/users/AnilSeervi/repos"&gt;https://api.github.com/users/AnilSeervi/repos&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;All the repos : &lt;a href="https://api.github.com/users/anilseervi/repos?per_page=100"&gt;https://api.github.com/users/anilseervi/repos?per_page=100&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The API only returns a maximum of 30 repos without any query parameters.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;jsRepos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.github.com/users/AnilSeervi/repos?per_page=100&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;// fetch the JSON from API&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                                      &lt;span class="c1"&gt;// parse JSON to JavaScript Object&lt;/span&gt;

 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterJSRepos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;language&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SCSS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="c1"&gt;// filter the Repos based on language&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;repoNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filterReposData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="c1"&gt;// Create an array of filtered Repo names&lt;/span&gt;

 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repoNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="c1"&gt;// ['DevFolio', 'mdn-minimalist', 'ts-portfolio']&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The response(in JSON) fetched from the &lt;strong&gt;URL&lt;/strong&gt; is stored in &lt;code&gt;res&lt;/code&gt; and then converted to a JavaScript Object that is stored in &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The names and number of repos may change based on the time you are reading this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we have an Array of objects of all the repos which we need to be filtered based on the &lt;code&gt;language&lt;/code&gt; property. Objects whose language property is &lt;code&gt;SCSS&lt;/code&gt; are filtered into &lt;code&gt;filterJSRepos&lt;/code&gt; constant.&lt;/p&gt;

&lt;p&gt;After filtering the Repos, we can now grab just the &lt;code&gt;name&lt;/code&gt; property of the filtered Repos using &lt;code&gt;map()&lt;/code&gt; and &lt;em&gt;voila&lt;/em&gt;, there's our array that contains the names of my repos those majorly contain &lt;strong&gt;SCSS&lt;/strong&gt;.&lt;/p&gt;




&lt;p&gt;I hope this article helped you understand the &lt;strong&gt;Higher-Order Array Functions&lt;/strong&gt;(&lt;code&gt;forEach()&lt;/code&gt;, &lt;code&gt;map()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to ask questions and leave any comments down here and, let's connect on &lt;a href="https://twitter.com/linASeervi"&gt;Twitter!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day 60 of 100 Days of Code &amp; Scrum: Ninth Weekly Retrospective</title>
      <author>Rammina</author>
      <pubDate>Sat, 11 Dec 2021 11:25:06 +0000</pubDate>
      <link>https://dev.to/rammina/day-60-of-100-days-of-code-scrum-ninth-weekly-retrospective-17f9</link>
      <guid>https://dev.to/rammina/day-60-of-100-days-of-code-scrum-ninth-weekly-retrospective-17f9</guid>
      <description>&lt;p&gt;Happy weekend, everyone!&lt;/p&gt;

&lt;p&gt;This week is also one of the least productive ones in this challenge. However, I'm pretty satisfied with how my professional blog is heading towards, so that kind of evens it out. I'm hoping that the next week is productive, because the Christmas holiday getting closer.&lt;/p&gt;

&lt;p&gt;Let's move on to my weekly retrospective!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;code my blog's Next.js frontend.&lt;/li&gt;
&lt;li&gt;setup Ghost headless CMS.&lt;/li&gt;
&lt;li&gt;have the frontend communicate with Ghost Content API.&lt;/li&gt;
&lt;li&gt;fix the bugs in my company website.&lt;/li&gt;
&lt;li&gt;continue to learn Next.js and Typescript by using concepts while I build my blog or maybe just from reading documentations.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue networking.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;Here are the things I've managed to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connected the &lt;a href="https://www.rammina.com/"&gt;Rammina development blog&lt;/a&gt;'s Next.js frontend with GhostContentAPI.&lt;/li&gt;
&lt;li&gt;setup Ghost headless CMS.&lt;/li&gt;
&lt;li&gt;style the blog homepage, as well as a specific blog post's page.&lt;/li&gt;
&lt;li&gt;fix some of the bugs in my company website.&lt;/li&gt;
&lt;li&gt;learned more about Next.js, GhostContentAPI, and Typescript while working on the blog.&lt;/li&gt;
&lt;li&gt;continue my studies for PSM I (not by much).&lt;/li&gt;
&lt;li&gt;expanded my network.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I finally got my professional blog working.&lt;/li&gt;
&lt;li&gt;learn plenty regarding Ghost and Next.js.&lt;/li&gt;
&lt;li&gt;discovered a little bit more about Typescript.&lt;/li&gt;
&lt;li&gt;expanded my network a little bit more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I still had days where I didn't code at all.&lt;/li&gt;
&lt;li&gt;I pretty much neglected studying Typescript and Scrum.&lt;/li&gt;
&lt;li&gt;got distracted at times and couldn't focus much.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;learn a little bit even if it's not much, on bad days.&lt;/li&gt;
&lt;li&gt;be more disciplined with learning new things every day.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;li&gt;try to automate the things I don't really have to do myself.&lt;/li&gt;
&lt;li&gt;make some of my chores a lot easier to do in terms of workflow.&lt;/li&gt;
&lt;li&gt;I should DEFINITELY install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.creative-tim.com/blog/web-design/free-open-source-ghost-themes/"&gt;10+ Free and Open-Source Ghost Themes for 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"&gt;dangerouslySetInnerHTML | React documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ghost.org/docs/content-api/"&gt;Content API | Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/excel/typescript/nextjs-types"&gt;Next.js Specific Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for the support, everyone! Enjoy your weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Introduction to Management, Governance and Migration with AWS - Part 1</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 11 Dec 2021 10:44:45 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-management-governance-and-migration-with-aws-part-1-2h2d</link>
      <guid>https://dev.to/aws-builders/introduction-to-management-governance-and-migration-with-aws-part-1-2h2d</guid>
      <description>&lt;p&gt;With AWS, customers can enable, provision, and operate their environment for both business agility and governance control. AWS provides services for end-to-end IT lifecycle management, helping customers control and secure their environments, reduce costs, simplify compliance, and enhance operational efficiency.&lt;/p&gt;

&lt;p&gt;In this Blog Post, we will talk about AWS Management and Governance services. AWS Management and Governance services are built to manage highly dynamic cloud resources at massive scale. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3m2xY2Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgsyhswelcds85rbsp1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3m2xY2Lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgsyhswelcds85rbsp1t.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Introduction to AWS&lt;/strong&gt; is a Series containing different articles that provide a basic introduction to different aws topics/categories. Each article covers the detailed guide on how to work with particular topic/category . This series aims at providing "A Getting Started Guide on Different aws topics / categories ."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#aws-management-and-governance-services"&gt;
  &lt;/a&gt;
  AWS Management and Governance Services
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Customers can use AWS Management and Governance services to assess their resource utilization and identify ways to reduce costs.&lt;/li&gt;
&lt;li&gt;AWS reduces complexity, offering a single control plane for customers to manage and govern their resources on AWS and on-premises.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS offers the broadest partner ecosystem for customers to extend and augment their management and governance system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Usecases&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Establish a centrally managed, secure, multi-account AWS environment.&lt;/li&gt;
&lt;li&gt;Manage your operations on AWS and on-premises.&lt;/li&gt;
&lt;li&gt;Audit and remediate your resource configurations.&lt;/li&gt;
&lt;li&gt;Improve the health of infrastructure and applications.&lt;/li&gt;
&lt;li&gt;Build, provision, and share AWS and third-party resources.&lt;/li&gt;
&lt;li&gt;Transform your business with cost transparency, forecasting, and optimization.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-cloudwatch"&gt;
  &lt;/a&gt;
  Amazon CloudWatch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zhQY5qR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3uhgrb4anlef7k0te8k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zhQY5qR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3uhgrb4anlef7k0te8k.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon CloudWatch is a monitoring and management service built for developers, system operators, site reliability engineers (SRE), and IT managers. &lt;/li&gt;
&lt;li&gt;CloudWatch provides you with data and actionable insights to monitor your applications, understand and respond to system-wide performance changes, optimize resource utilization, and get a unified view of operational health. &lt;/li&gt;
&lt;li&gt;CloudWatch collects monitoring and operational data in the form of logs, metrics, and events, providing you with a unified view of AWS resources, applications and services that run on AWS, and on-premises servers. &lt;/li&gt;
&lt;li&gt;You can use CloudWatch to set high resolution alarms, visualize logs and metrics side by side, take automated actions, troubleshoot issues, and discover insights to optimize your applications, and ensure they are running smoothly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-auto-scaling"&gt;
  &lt;/a&gt;
  AWS Auto Scaling
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9JXrCorz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnebrakm3eyi892j7b93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9JXrCorz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnebrakm3eyi892j7b93.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Auto Scaling monitors your applications and automatically adjusts capacity to maintain steady, predictable performance at the lowest possible cost. &lt;/li&gt;
&lt;li&gt;Using AWS Auto Scaling, it’s easy to setup application scaling for multiple resources across multiple services in minutes. The service provides a simple, powerful user interface that lets you build scaling plans for resources including Amazon EC2 instances and Spot Fleets, Amazon ECS tasks, Amazon DynamoDB tables and indexes, and Amazon Aurora Replicas. &lt;/li&gt;
&lt;li&gt;AWS Auto Scaling makes scaling simple with recommendations that allow you to optimize performance, costs, or balance between them. If you’re already using Amazon EC2 Auto Scaling to dynamically scale your Amazon EC2 instances, you can now combine it with AWS Auto Scaling to scale additional resources for other AWS services. With AWS Auto Scaling, your applications always have the right resources at the right time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-control-tower"&gt;
  &lt;/a&gt;
  AWS Control Tower
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cJhJk25r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t792nbhm49i790wb6ck1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cJhJk25r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t792nbhm49i790wb6ck1.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Control Tower automates the set-up of a baseline environment, or landing zone, that is a secure, well-architected multi-account AWS environment. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;The configuration of the landing zone is based on best practices that have been established by working with thousands of enterprise customers to create a secure environment that makes it easier to govern AWS workloads with rules for security, operations, and compliance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As enterprises migrate to AWS, they typically have a large number of applications and distributed teams. They often want to create multiple accounts to allow their teams to work independently, while still maintaining a consistent level of security and compliance. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In addition, they use AWS’s management and security services, like AWS Organizations, AWS Service Catalog and AWS Config, that provide very granular controls over their workloads. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They want to maintain this control, but they also want a way to centrally govern and enforce the best use of AWS services across all the accounts in their environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Control Tower automates the set-up of their landing zone and configures AWS management and security services based on established best practices in a secure, compliant, multi-account environment. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Distributed teams are able to provision new AWS accounts quickly, while central teams have the peace of mind knowing that new accounts are aligned with centrally established, company-wide compliance policies. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This gives you control over your environment, without sacrificing the speed and agility AWS provides your development teams.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-systems-manager"&gt;
  &lt;/a&gt;
  AWS Systems Manager
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iu7YPW4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m22z3rkcy6hox43qgvbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iu7YPW4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m22z3rkcy6hox43qgvbj.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Systems Manager gives you visibility and control of your infrastructure on AWS. Systems Manager provides a unified user interface so you can view operational data from multiple AWS services and allows you to automate operational tasks across your AWS resources. &lt;/li&gt;
&lt;li&gt;With Systems Manager, you can group resources, like Amazon EC2 instances, Amazon S3 buckets, or Amazon RDS instances, by application, view operational data for monitoring and troubleshooting, and take action on your groups of resources. &lt;/li&gt;
&lt;li&gt;Systems Manager simplifies resource and application management, shortens the time to detect and resolve operational problems, and makes it easy to operate and manage your infrastructure securely at scale.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-systems-manager-contains-the-following-tools"&gt;
  &lt;/a&gt;
  AWS Systems Manager contains the following tools:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Resource groups:&lt;/strong&gt; Lets you create a logical group of resources associated with a particular workload such as different layers of an application stack, or production versus development environments. For example, you can group different layers of an application, such as the frontend web layer and the backend data layer. Resource groups can be created, updated, or removed programmatically through the API.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Insights Dashboard:&lt;/strong&gt; Displays operational data that the AWS Systems Manager automatically aggregates for each resource group. Systems Manager eliminates the need for you to navigate across multiple AWS consoles to view your operational data. With Systems Manager you can view API call logs from AWS CloudTrail, resource configuration changes from AWS Config, software inventory, and patch compliance status by resource group. You can also easily integrate your Amazon CloudWatch Dashboards, AWS Trusted Advisor notifications, and AWS Personal Health Dashboard performance and availability alerts into your Systems Manager dashboard. Systems Manager centralizes all relevant operational data, so you can have a clear view of your infrastructure compliance and performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run Command:&lt;/strong&gt; Provides a simple way of automating common administrative tasks like remotely executing shell scripts or PowerShell commands, installing software updates, or making changes to the configuration of OS, software, EC2 and instances and servers in your on-premises data center.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;State Manager:&lt;/strong&gt; Helps you define and maintain consistent OS configurations such as firewall settings and anti-malware definitions to comply with your policies. You can monitor the configuration of a large set of instances, specify a configuration policy for the instances, and automatically apply updates or configuration changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Inventory:&lt;/strong&gt; Helps you collect and query configuration and inventory information about your instances and the software installed on them. You can gather details about your instances such as installed applications, DHCP settings, agent detail, and custom items. You can run queries to track and audit your system configurations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Maintenance Window:&lt;/strong&gt; Lets you define a recurring window of time to run administrative and maintenance tasks across your instances. This ensures that installing patches and updates, or making other configuration changes does not disrupt business-critical operations. This helps improve your application availability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Patch Manager:&lt;/strong&gt; Helps you select and deploy operating system and software patches automatically across large groups of instances. You can define a maintenance window so that patches are applied only during set times that fit your needs. These capabilities help ensure that your software is always up to date and meets your compliance policies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Automation:&lt;/strong&gt; Simplifies common maintenance and deployment tasks, such as updating Amazon Machine Images (AMIs). Use the Automation feature to apply patches, update drivers and agents, or bake applications into your AMI using a streamlined, repeatable, and auditable process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Parameter Store:&lt;/strong&gt; Provides an encrypted location to store important administrative information such as passwords and database strings. The Parameter Store integrates with AWS KMS to make it easy to encrypt the information you keep in the Parameter Store.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Distributor:&lt;/strong&gt; Helps you securely distribute and install software packages, such as software agents. Systems Manager Distributor allows you to centrally store and systematically distribute software packages while you maintain control over versioning. You can use Distributor to create and distribute software packages and then install them using Systems Manager Run Command and State Manager. Distributor can also use AWS Identity and Access Management (IAM) policies to control who can create or update packages in your account. You can use the existing IAM policy support for Systems Manager Run Command and State Manager to define who can install packages on your hosts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Session Manager:&lt;/strong&gt; Provides a browser-based interactive shell and CLI for managing Windows and Linux EC2 instances, without the need to open inbound ports, manage SSH keys, or use bastion hosts. Administrators can grant and revoke access to instances through a central location by using AWS Identity and Access Management (IAM) policies. This allows you to control which users can access each instance, including the option to provide non-root access to specified users. Once access is provided, you can audit which user accessed an instance and log each command to Amazon S3 or Amazon CloudWatch Logs using AWS CloudTrail.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-cloudformation"&gt;
  &lt;/a&gt;
  AWS CloudFormation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2NiEK1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21ry7vmlai7pdvakwik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2NiEK1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i21ry7vmlai7pdvakwik.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS CloudFormation gives developers and systems administrators an easy way to create and manage a collection of related AWS resources, provisioning and updating them in an orderly and predictable fashion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can use the AWS CloudFormation sample templates or create your own templates to describe your AWS resources, and any associated dependencies or runtime parameters, required to run your application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don’t need to figure out the order for provisioning AWS services or the subtleties of making those dependencies work. CloudFormation takes care of this for you. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the AWS resources are deployed, you can modify and update them in a controlled and predictable way, in effect applying version control to your AWS infrastructure the same way you do with your software. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also visualize your templates as diagrams and edit them using a drag-and-drop interface with the AWS CloudFormation Designer.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-cloudtrail"&gt;
  &lt;/a&gt;
  AWS CloudTrail
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pqIUC5-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id6koxoom9dykih0na7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pqIUC5-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id6koxoom9dykih0na7q.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With CloudTrail, you can get a history of AWS API calls for your account, including API calls made using the AWS Management Console, AWS SDKs, command line tools, and higher-level AWS services (such as AWS CloudFormation). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-config"&gt;
  &lt;/a&gt;
  AWS Config
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_buqcAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue3t7zm90mq9vnthyru9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_buqcAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ue3t7zm90mq9vnthyru9.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Config is a fully managed service that provides you with an AWS resource inventory, configuration history, and configuration change notifications to enable security and governance. The Config Rules feature enables you to create rules that automatically check the configuration of AWS resources recorded by AWS Config.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With AWS Config, you can discover existing and deleted AWS resources, determine your overall compliance against rules, and dive into configuration details of a resource at any point in time. These capabilities enable compliance auditing, security analysis, resource change tracking, and troubleshooting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-opsworks"&gt;
  &lt;/a&gt;
  AWS OpsWorks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---G_BqC6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc186g9kow9a9hrruc11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---G_BqC6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc186g9kow9a9hrruc11.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS OpsWorks is a configuration management service that provides managed instances of Chef and Puppet. Chef and Puppet are automation platforms that allow you to use code to automate the configurations of your servers. &lt;/li&gt;
&lt;li&gt;OpsWorks lets you use Chef and Puppet to automate how servers are configured, deployed, and managed across your Amazon EC2 instances or on-premises compute environments. &lt;/li&gt;
&lt;li&gt;OpsWorks has three offerings, AWS OpsWorks for Chef Automate, AWS OpsWorks for Puppet Enterprise, and AWS OpsWorks Stacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-service-catalog"&gt;
  &lt;/a&gt;
  AWS Service Catalog
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_gxycwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/471ifkcoh5oced1uruvh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_gxycwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/471ifkcoh5oced1uruvh.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Service Catalog allows organizations to create and manage catalogs of IT services that are approved for use on AWS. These IT services can include everything from virtual machine images, servers, software, and databases to complete multi-tier application architectures. &lt;/li&gt;
&lt;li&gt;AWS Service Catalog allows you to centrally manage commonly deployed IT services and helps you achieve consistent governance and meet your compliance requirements, while enabling users to quickly deploy only the approved IT services they need.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-trusted-advisor"&gt;
  &lt;/a&gt;
  AWS Trusted Advisor
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OpQcnVIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4e8h760fpigw6vbtczl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OpQcnVIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4e8h760fpigw6vbtczl.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Trusted Advisor is an online resource to help you reduce cost, increase performance, and improve security by optimizing your AWS environment. Trusted Advisor provides real-time guidance to help you provision your resources following AWS best practices.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-personal-health-dashboard"&gt;
  &lt;/a&gt;
  AWS Personal Health Dashboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9YwFFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqp94s2v7dx670iyigqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9YwFFoS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqp94s2v7dx670iyigqu.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Personal Health Dashboard provides alerts and remediation guidance when AWS is experiencing events that might affect you. While the Service Health Dashboard displays the general status of AWS services, Personal Health Dashboard gives you a personalized view into the performance and availability of the AWS services underlying your AWS resources. &lt;/li&gt;
&lt;li&gt;The dashboard displays relevant and timely information to help you manage events in progress, and provides proactive notification to help you plan for scheduled activities. &lt;/li&gt;
&lt;li&gt;With Personal Health Dashboard, alerts are automatically triggered by changes in the health of AWS resources, giving you event visibility and guidance to help quickly diagnose and resolve issues.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-managed-services"&gt;
  &lt;/a&gt;
  AWS Managed Services
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDw_DtW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3iytopiwi0kzu0zvi7i4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDw_DtW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3iytopiwi0kzu0zvi7i4.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS Managed Services provides ongoing management of your AWS infrastructure so you can focus on your applications. By implementing best practices to maintain your infrastructure, AWS Managed Services helps to reduce your operational overhead and risk. &lt;/li&gt;
&lt;li&gt;AWS Managed Services automates common activities such as change requests, monitoring, patch management, security, and backup services, and provides full-lifecycle services to provision, run, and support your infrastructure. &lt;/li&gt;
&lt;li&gt;Our rigor and controls help to enforce your corporate and security infrastructure policies, and enables you to develop solutions and applications using your preferred development approach. &lt;/li&gt;
&lt;li&gt;AWS Managed Services improves agility, reduces cost, and unburdens you from infrastructure operations so you can direct resources toward differentiating your business.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-console-mobile-application"&gt;
  &lt;/a&gt;
  AWS Console Mobile Application
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JPhYlUd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6xm83scec4tcxdbhajt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JPhYlUd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6xm83scec4tcxdbhajt.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The AWS Console Mobile Application lets customers view and manage a select set of resources to support incident response while on-the-go.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Console Mobile Application allows AWS customers to monitor resources through a dedicated dashboard and view configuration details, metrics, and alarms for select AWS services. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Dashboard provides permitted users with a single view a resource's status, with real-time data on Amazon CloudWatch, Personal Health Dashboard, and AWS Billing and Cost Management. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customers can view ongoing issues and follow through to the relevant CloudWatch alarm screen for a detailed view with graphs and configuration options. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In addition, customers can check on the status of specific AWS services, view detailed resource screens, and perform select actions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-license-manager"&gt;
  &lt;/a&gt;
  AWS License Manager
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p_xnymrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj2dkhvos0edvan86oc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p_xnymrx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj2dkhvos0edvan86oc2.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS License Manager makes it easier to manage licenses in AWS and on-premises servers from software vendors such as Microsoft, SAP, Oracle, and IBM. &lt;/li&gt;
&lt;li&gt;AWS License Manager lets administrators create customized licensing rules that emulate the terms of their licensing agreements, and then enforces these rules when an instance of Amazon EC2 gets launched. &lt;/li&gt;
&lt;li&gt;Administrators can use these rules to limit licensing violations, such as using more licenses than an agreement stipulates or reassigning licenses to different servers on a short-term basis. &lt;/li&gt;
&lt;li&gt;The rules in AWS License Manager enable you to limit a licensing breach by physically stopping the instance from launching or by notifying administrators about the infringement. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Administrators gain control and visibility of all their licenses with the AWS License Manager dashboard and reduce the risk of non-compliance, misreporting, and additional costs due to licensing overages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS License Manager integrates with AWS services to simplify the management of licenses across multiple AWS accounts, IT catalogs, and on-premises, through a single AWS account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;License administrators can add rules in AWS Service Catalog, which allows them to create and manage catalogs of IT services that are approved for use on all their AWS accounts. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Through seamless integration with AWS Systems Manager and AWS Organizations, administrators can manage licenses across all the AWS accounts in an organization and on-premises environments. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Marketplace buyers can also use AWS License Manager to track bring your own license (BYOL) software obtained from the Marketplace and keep a consolidated view of all their licenses.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#aws-wellarchitected-tool"&gt;
  &lt;/a&gt;
  AWS Well-Architected Tool
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cIRKtm0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j4rs0dyd9hntim319cv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIRKtm0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j4rs0dyd9hntim319cv.png" alt="Image description" width="202" height="202"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The AWS Well-Architected Tool helps you review the state of your workloads and compares them to the latest AWS architectural best practices. &lt;/li&gt;
&lt;li&gt;The tool is based on the AWS Well-Architected Framework, developed to help cloud architects build secure, high-performing, resilient, and efficient application infrastructure. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;This Framework provides a consistent approach for customers and partners to evaluate architectures, has been used in tens of thousands of workload reviews conducted by the AWS solutions architecture team, and provides guidance to help implement designs that scale with application needs over time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To use this free tool, available in the AWS Management Console, just define your workload and answer a set of questions regarding operational excellence, security, reliability, performance efficiency, and cost optimization. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Well-Architected Tool then provides a plan on how to architect for the cloud using established best practices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;In the past, organizations have had to choose between innovating faster and maintaining control over cost, compliance, and security. &lt;/li&gt;
&lt;li&gt;With AWS Management and Governance services, customers don’t have to choose between innovation and control—they can have both. * With AWS, customers can enable, provision, and operate their environment for both business agility and governance control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope this guide helps you with the Introduction to Management, Governance and Migration with AWS- Part-1. In the next blog post, we will discuss some of the most important Migration services in AWS.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>management</category>
      <category>beginners</category>
      <category>monitoring</category>
    </item>
    <item>
      <title>Symfony &amp; Database-Part 2</title>
      <author>hanane kacemi</author>
      <pubDate>Sat, 11 Dec 2021 10:11:19 +0000</pubDate>
      <link>https://dev.to/hananekacemi/symfony-database-part-2-9b6</link>
      <guid>https://dev.to/hananekacemi/symfony-database-part-2-9b6</guid>
      <description>&lt;p&gt;In the previous post, we configured Symfony to use Docker for Database, in this post we will talk about Database creation(table, column...) using Doctrine and Symfony.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-database-"&gt;
  &lt;/a&gt;
  Create Database :
&lt;/h2&gt;

&lt;p&gt;We can create a database with a simple command : &lt;code&gt;symfony console doctrine:database:create&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Doctrine is an &lt;strong&gt;ORM&lt;/strong&gt; (Object Relational Mapper) : Each Table in Database (ex:employee) has a corresponding class in our App (known as &lt;strong&gt;Entity&lt;/strong&gt;, ex : Employee.php) and each column of this table (ex:name) is related to a property of that class (ex: &lt;code&gt;private $name;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;To create the entity class, run : &lt;code&gt;symfony console make:entity&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;New file is created under &lt;em&gt;src/Entity&lt;/em&gt; folder &lt;em&gt;(I like to run after each command &lt;code&gt;git status&lt;/code&gt; to check what has been generated by Symfony and access to the file to see its content)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;make:entity&lt;/code&gt; command can be used to create an new Entity or to update an existing one (add new property, a constraint...). &lt;/p&gt;

&lt;p&gt;Now to create the table and its columns, we need to execute 2 commands, the 1st one is : &lt;code&gt;symfony console make:migration&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command compares the actual state of the database with all Entity classes, if an Entity is newly created or modified the command creates the query for that changes under &lt;em&gt;migrations&lt;/em&gt; folder in order to make database matches entities. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EewUp3SY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtm80g9my4bajuqgsxqc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EewUp3SY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vtm80g9my4bajuqgsxqc.png" alt="query generated for table creation" width="880" height="542"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To execute this query, we run the 2nd command : &lt;code&gt;symfony console doctrine:migrations:migrate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Symfony is smart enough :D to know if a query has already been executed : The migration system create a table in Database &lt;em&gt;doctrine_migration_versions&lt;/em&gt;  where it stores all migrations executed : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F10VT7__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/982rcpkdgphkwgbtfv0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F10VT7__--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/982rcpkdgphkwgbtfv0o.png" alt="content of doctrine_migration_versions" width="697" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading and Have a nice day ;)&lt;/p&gt;

</description>
      <category>symfony</category>
      <category>doctrine</category>
      <category>php</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Huobi clone script- launch your houbi like crypto exchange</title>
      <author>master saitama</author>
      <pubDate>Sat, 11 Dec 2021 10:11:11 +0000</pubDate>
      <link>https://dev.to/radindev/huobi-clone-script-launch-your-houbi-like-crypto-exchange-3f6e</link>
      <guid>https://dev.to/radindev/huobi-clone-script-launch-your-houbi-like-crypto-exchange-3f6e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-brief-explanation-about-huobi-global"&gt;
  &lt;/a&gt;
  A brief explanation about Huobi Global
&lt;/h2&gt;

&lt;p&gt;Huobi is one of the largest Chinese exchange platforms. It’s based in Beijing, China. The trading platform was founded by Leon Li in September 2013, and the company’s focus is on the Chinese market. The Huobi holding company was forced to relocate to Singapore last year as the Chinese government banned Fiat from cryptocurrency trading.&lt;br&gt;
As the years passed since its establishment, Huobi grew despite the rallying of the markets to an expanded volume which put it in a position as the fourth-largest cryptocurrency exchange in the world. That’s why most startups and businesses are interested in launching a crypto website like Huobi with using Huobi clone script. So start your Cryptocurrency exchange like Huobi. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAga3rw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kzr17rs1y3vdhc7aln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAga3rw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0kzr17rs1y3vdhc7aln.png" alt="Huobi Global crypto exchange" width="880" height="587"&gt;&lt;/a&gt;&lt;br&gt;
Huobi has offices in Japan, Hong Kong, Mainland China, and Korea, with over 1,000 employees that make up its staff complement. In 2018, Huobi Global established an office in the United States.&lt;br&gt;
There are traders residing in over 130 countries that make use of Huobi as a cryptocurrency trading platform and Huobi Global, as the parent company, has branched out into a variety of other business ventures in the field of cryptocurrency.&lt;br&gt;
These business ventures include the mining of coins, development, and investments aimed at blockchain-based start-ups which shows Huobi’s advancement as a well-established cryptocurrency exchange.&lt;br&gt;
Huobi statistics&lt;br&gt;
• Volume(24h): $20,714,490,608.87&lt;br&gt;
• Annual Revenue: $65.9M Per Year&lt;br&gt;
• Global Rank: 5&lt;br&gt;
• Crypto assets: 386&lt;br&gt;
• App Installs: 1,000,000+&lt;br&gt;
• Votes: ‎14,053&lt;br&gt;
• Rating: 4.3&lt;br&gt;
• Market: 805&lt;br&gt;
• Market share: 5.48%&lt;br&gt;
• There are over 130 countries that Huobi exchange supports.&lt;br&gt;
• Huobi supports over 230 cryptocurrencies&lt;/p&gt;

&lt;p&gt;First, we want to have a review of an explanation about the clone script and the benefits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-clone-script"&gt;
  &lt;/a&gt;
  What is clone script?
&lt;/h2&gt;

&lt;p&gt;A clone script is a replacement code or architecture of an existing website. The purpose of the website clone script is, it helps the entrepreneurs to start business rapidly with popular and unique features and minimize the startup costs. Actually The Clone scripts are the copy of famous online businesses out there in the world. These scripts can be used by entrepreneurs to start their online business at ease.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-using-clone-script"&gt;
  &lt;/a&gt;
  Benefits of using clone script
&lt;/h3&gt;

&lt;p&gt;• Scalable and Customizable&lt;br&gt;
• Quick Launch&lt;br&gt;
• Low Cost&lt;br&gt;
• High Success Rate&lt;br&gt;
In order to build your brand-new website, you don’t have to waste too much time on market research, business planning, or analyzing various strategy implementations for UID (User interface design). You just have to invest your time in what type of website you are going to working on. That’s all that matters.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr5mT0k---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge4vq1191rcd8k60p2cc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr5mT0k---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge4vq1191rcd8k60p2cc.png" alt="Huobi clone script" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#huobi-clone-script"&gt;
  &lt;/a&gt;
  Huobi clone script
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-huobi-clone-script-and-how-does-it-work"&gt;
  &lt;/a&gt;
  What Is Huobi Clone Script and how does it work?
&lt;/h3&gt;

&lt;p&gt;Huobi is p2p cryptocurrency exchange software that offers to companies and businesses.&lt;br&gt;
&lt;strong&gt;&lt;a href="https://radindev.com/huobi-clone-script/"&gt;Huobi Clone Script&lt;/a&gt;&lt;/strong&gt; is the ready-made script has the existing functionalities, benefits, exchange options, security modules those who have present in the huobi crypto exchange.  You can just integrate huobi clone script to start cryptocurrency exchange website instantly and securely. Huobi trading clone scripts will ensure that you enter into your target market with a set of most essential features easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-huobi-clone-script-work"&gt;
  &lt;/a&gt;
  How does a Huobi Clone Script Work?
&lt;/h2&gt;

&lt;p&gt;• Register Account&lt;br&gt;
• Complete Verification&lt;br&gt;
• Deposit Cryptocurrency&lt;br&gt;
• Buy Cryptocurrency&lt;br&gt;
• Explore huobi Products&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gp1A-I-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnvhgt0vewi07eqf181u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gp1A-I-4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rnvhgt0vewi07eqf181u.png" alt="White-Label Huobi Clone Script" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whitelabel-huobi-clone-script"&gt;
  &lt;/a&gt;
  White-Label Huobi Clone Script
&lt;/h2&gt;

&lt;p&gt;A White label cryptocurrency exchange software is a ready-made product which is readily built with the primary features. With this, one can easily build their own white-label bitcoin trading platform within a few days.&lt;br&gt;
When you use a White-label Cryptocurrency Exchange software to start a crypto exchange trading platform, you can do it instantly. As you already have a ready-made software with you, building your exchange can be done at no time. If you have any urgent requirements, White-label crypto exchange platform can be more beneficial one for you.&lt;br&gt;
White-label solution huobi clone script can make your cryptocurrency exchange website development with more than huobi exchange platform. That offers more add-ons and services which build your cryptocurrency exchange more than the huobi.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#premium-features-of-huobi-clone-script"&gt;
  &lt;/a&gt;
  Premium Features of Huobi Clone Script:
&lt;/h3&gt;

&lt;p&gt;• Automatic KYC/AML verifications&lt;br&gt;
• Atomic swaps&lt;br&gt;
• User friendly Admin panel &lt;br&gt;
• Supports multiple cryptocurrencies &amp;amp; tokens &lt;br&gt;
• Multi-lingual support &lt;br&gt;
• Margin trading, otc trading, spot trading&lt;br&gt;
• Limit order, Market order, and Stop order&lt;br&gt;
• Margin trading&lt;br&gt;
• Cryptocurrency wallet integration&lt;br&gt;
• IEO module&lt;br&gt;
• Liquidity API&lt;br&gt;
• Referral program&lt;br&gt;
• Admin dashboard and user dashboard&lt;br&gt;
• Payment gateway integration&lt;br&gt;
• Site API&lt;br&gt;
• Trade engine&lt;br&gt;
• 24 X 7 Instant live chat system&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features-of-huobi-exchange-clone-script"&gt;
  &lt;/a&gt;
  Security Features of Huobi Exchange Clone Script
&lt;/h3&gt;

&lt;p&gt;1.DDOS protection method &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;KYC/AML process.&lt;/li&gt;
&lt;li&gt;Secured Admin Panel.&lt;/li&gt;
&lt;li&gt;Android / IOS Development.&lt;/li&gt;
&lt;li&gt;Fast and quick response to the transaction, receive a notification popup &lt;/li&gt;
&lt;li&gt;Multiple security layers &lt;/li&gt;
&lt;li&gt;Multi coins and multi-language support.&lt;/li&gt;
&lt;li&gt;Payment Gateway Integrations and a lot more.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gS1fKgEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kr2unx9u6cxyye9qcj0y.png" alt="Huobi clone app" width="880" height="587"&gt;
## Huobi clone app
### Mobile Application for Android &amp;amp; iOS devices
Huobi has delivered a mobile app available on iOS as well as Android devices. Deposit, withdraw, and trade 24/7 on the mobile application for those who would like to be able to trade anywhere, anytime. Huobi mobile app allows the users to easily buy and sell cryptocurrencies with other users &amp;amp; also this app has all the features and same functionalities as the web platform. 
Since most of the proprietors &amp;amp; traders make use of mobile trading devices to perform trading, turned them to reality. With white-label bitcoin exchange platform, one can instantly perform the process in seconds.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#features-of-huobi-clone-app"&gt;
  &lt;/a&gt;
  Features of huobi clone app
&lt;/h3&gt;

&lt;p&gt;• Supports many cryptocurrencies and tokens.&lt;br&gt;
• Highly Secured &amp;amp; Attractive user-friendly interface&lt;br&gt;
• You can access it anywhere at any time&lt;br&gt;
• KYC/AML process&lt;br&gt;
• Fast and secure transactions&lt;br&gt;
• Multi-language support&lt;br&gt;
• You can get 24/7 instant technical and customer support&lt;br&gt;
• Integrate advanced trading features and security features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-advantages-of-using-huobi-clone-script"&gt;
  &lt;/a&gt;
  What Are the Advantages of Using Huobi Clone Script?
&lt;/h3&gt;

&lt;p&gt;• There is a concerted effort in protecting client information and funds through strict security measures.&lt;br&gt;
• Huobi clone script offers three different exchanges instead of only featuring one.&lt;br&gt;
• Huobi clone script offers leverage of 1:3 on certain cryptocurrencies.&lt;br&gt;
• The transaction fees charged are low when compared to other trading platforms and exchanges.&lt;br&gt;
• There are over 230 tradable cryptocurrencies along with a variety of pairs that can be traded.&lt;br&gt;
• More than 230 tradable assets&lt;br&gt;
• High-level of cybersecurity&lt;br&gt;
• Strong customer support in multiple languages&lt;br&gt;
• Transaction fees quite low&lt;br&gt;
• Client protection funds provided&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compare-between-huobi-and-binance"&gt;
  &lt;/a&gt;
  Compare between Huobi and Binance!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EOe1QCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyisrgwhgp66ljz3sy36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EOe1QCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jyisrgwhgp66ljz3sy36.png" alt="Compare between Huobi and Binance" width="800" height="800"&gt;&lt;/a&gt;&lt;br&gt;
To determine how worthy, the platform's suggestion is, it needs to be compared with top companies in the cryptocurrency trading sector. That is why we will be comparing Huobi with the Binance platform, one of the preferred alternatives.&lt;br&gt;
Let's see how Huobi and Binance compare with each other.&lt;br&gt;
When trading on financial markets, you will want to know all about who Huobi or Binance are, and how they compare. You will obviously want to know how long Huobi and Binance have been in business and what reputation Huobi and Binance have. On top of this, you will need to discover if Huobi and Binance match your trading needs.&lt;br&gt;
Our Huobi vs Binance comparison will help you judge the effectiveness, price, ease of use and support, the trustworthiness of Huobi and Binance side by side.&lt;br&gt;
The Huobi online trading platform gives traders from all over the world access to over 140 financial instruments, including over 52 available instruments. There are over 10,000 customers that have taken advantage of the Huobi platform. Huobi are regulated by Japan's Financial Services Agency (FSA).&lt;br&gt;
Binance is a renowned Australian financial trading brokerage established in 2011. Binance serves customers globally and is regulated by Unregulated. Depending on the country you are trading from, Huobi may serve you from a different business entity to comply with its financial regulators.&lt;br&gt;
Binance is listed as a publically traded company on a major stock market. As part of their regulatory requirements, Binance has to disclose a yearly report publically. Because of this extra level of auditing and regulation, Binance can be considered safe. Huobi is listed as a publically traded company, so is a reputable broker.&lt;br&gt;
Huobi and Binance have multiple deposit and withdrawal options. Funding and withdrawing from your Huobi and Binance account to your chosen payment method should be straightforward. Be aware that depending on the payment method you decide upon, there may be additional processing fees from your payment provider or bank for processing and converting your funds. Not all potential fees will come from Huobi or Binance.&lt;br&gt;
Customer support is essential when trading. Even professional traders will eventually need the help of Huobi or Binance support. This is especially true of traders who are starting from a position of little knowledge. If you are starting out, you will want to make sure the Huobi and Binance support are always available when you need them. Huobi and Binance customer support are not just useful. It is crucial to your trading success.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion!
&lt;/h3&gt;

&lt;p&gt;First, when you are looking to trade, it is essential that you can guarantee that your money is in safe hands. Therefore, please keep this in mind when you sign up with Huobi or Binance.&lt;br&gt;
Huobi and Binance offer low deposits and access to a selection of educational resources. This is especially useful for beginners and people who want to improve their trading skills. This is a big plus for Huobi and Binance as it shows as they have an interest in their customers.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>Responsive Navbar</title>
      <author>Sarim Kaleem</author>
      <pubDate>Sat, 11 Dec 2021 10:04:49 +0000</pubDate>
      <link>https://dev.to/webdevsarim/responsive-navbar-59kd</link>
      <guid>https://dev.to/webdevsarim/responsive-navbar-59kd</guid>
      <description>&lt;p&gt;Just made this for practice, do share your thoughts on how I can improve and what changes I should make!&lt;/p&gt;

&lt;p&gt;Collapses to a hamburger menu on smaller screens.&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/sarimwastaken/embed/PoJGxMw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Creative Hover Menu with CSS</title>
      <author>Jatin Sharma</author>
      <pubDate>Sat, 11 Dec 2021 09:58:44 +0000</pubDate>
      <link>https://dev.to/j471n/creative-hover-menu-with-css-513c</link>
      <guid>https://dev.to/j471n/creative-hover-menu-with-css-513c</guid>
      <description>&lt;p&gt;In this article, we are going to make the navigation menu, but it will be in the verticle form, I'll recommend you to use this as the full page menu, we are not going to talk about how to toggle the hamburger and that stuff if you want me to explain that, then tell me in the comment section. I can cover that in a separate article. First Let's see what are we building- &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preview"&gt;
  &lt;/a&gt;
  Preview
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qP_bx860--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qeWj4ly.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qP_bx860--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qeWj4ly.gif" alt="preview" width="332" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we look at the whole code first let me give you an overview of some effects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Glow Effect&lt;/strong&gt;&lt;br&gt;
As you can see the glow effect in the text when you hover on it. this can be achieved by the following CSS property-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;text-shadow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;7&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nf"&gt;#fff&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nf"&gt;#fff&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;21&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="nf"&gt;#fff&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;42&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#0&lt;/span&gt;&lt;span class="nt"&gt;fa&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;82&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#0&lt;/span&gt;&lt;span class="nt"&gt;fa&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;92&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#0&lt;/span&gt;&lt;span class="nt"&gt;fa&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;102&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#0&lt;/span&gt;&lt;span class="nt"&gt;fa&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
               &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt; &lt;span class="err"&gt;151&lt;/span&gt;&lt;span class="nt"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#0&lt;/span&gt;&lt;span class="nt"&gt;fa&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Text Spaceing Effect&lt;/strong&gt;&lt;br&gt;
 I've used the animation with the letter-spacing property. you can achieve that by the following code-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;from&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav_list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!--....More Links...--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;about&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden_link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;about&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
   &lt;span class="c"&gt;&amp;lt;!--....More Links...--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In HTML we have the  &lt;code&gt;.navbar&lt;/code&gt; which wraps the whole navigation menu then we have the unordered list in which we have the &lt;code&gt;li&lt;/code&gt; and inside that we have the anchor (&lt;code&gt;a&lt;/code&gt;) tag which also contains the two paragraphs (&lt;code&gt;p&lt;/code&gt;) tag one is the bigger one (&lt;code&gt;.link&lt;/code&gt;) and the other one is hidden (&lt;code&gt;.hidden_link&lt;/code&gt;) which will only be visible on &lt;code&gt;hover&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;
&lt;span class="c"&gt;/* Default values */&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Relative navigation list item */&lt;/span&gt;
&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;300ms&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nc"&gt;.hidden_link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-40%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;21px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;42px&lt;/span&gt; &lt;span class="m"&gt;#0fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;82px&lt;/span&gt; &lt;span class="m"&gt;#0fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;92px&lt;/span&gt; &lt;span class="m"&gt;#0fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;102px&lt;/span&gt; &lt;span class="m"&gt;#0fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
               &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;151px&lt;/span&gt; &lt;span class="m"&gt;#0fa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c"&gt;/*  animation "from"  */&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Low opacity of main Link */&lt;/span&gt;
&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Show the Hidden link with animation */&lt;/span&gt;
&lt;span class="nc"&gt;.nav_list&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;.hidden_link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;show-link&lt;/span&gt; &lt;span class="m"&gt;400ms&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt; &lt;span class="n"&gt;forwards&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;show-link&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;pointer-events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Recommended Device-&lt;/strong&gt; Desktop/Laptop.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/j471n/embed/WNZxmpr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;a href="https://codepen.io/j471n/full/WNZxmpr"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8AKOF1Df--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MNtTdVp.png" alt="codepen" width="300" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Now you can make this by yourself as well. you should now make the hamburger or the navigation toggle button and display this navbar. with some sliding animation maybe. If you have any queries or any suggestions comments section is always open.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can now extend your support by buying me a Coffee.😊👇&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/j471n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GUX4imFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/2QWo3cm.png" alt="buymecoffee" width="374" height="88"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#also-read"&gt;
  &lt;/a&gt;
  Also Read
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/typing-effect-by-using-css-50p"&gt;Typing Effect by using CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/j471n/curved-css-timeline-5ab3"&gt;Curved Timeline in CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/j471n/typing-effect-with-js-34b8"&gt;Typing Effect with typed.js&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>ParseJS. An easy function I made to tokenize things.</title>
      <author>Calin Baenen</author>
      <pubDate>Sat, 11 Dec 2021 09:45:45 +0000</pubDate>
      <link>https://dev.to/baenencalin/parsejs-an-easy-function-i-made-to-tokenize-things-4e5o</link>
      <guid>https://dev.to/baenencalin/parsejs-an-easy-function-i-made-to-tokenize-things-4e5o</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/CalinZBaenen/ParseJS"&gt;ParseJS on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to make a math evaluater? A programming language mockup? A document format? A file reader?&lt;br&gt;
If you want to make any of those, my small one-function library is for you! :D&lt;/p&gt;

&lt;p&gt;This is the function signature:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parse_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;toks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How does it work?&lt;br&gt;
It takes a string to scan and a list of tokens. If a token is found; a symbol (&lt;code&gt;Symbol.for( tok )&lt;/code&gt;) is inserted, otherwise the character in the string being scanned is inserted -- and the final result is returned.&lt;/p&gt;

&lt;p&gt;Here is an example of the function in action!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4lyCXGGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06k063k9naql9t00h1rv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4lyCXGGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06k063k9naql9t00h1rv.png" alt="&amp;quot;Sonic&amp;quot;, &amp;quot;Tails&amp;quot;, and &amp;quot;Knuckles&amp;quot; are all recognized as tokens, but &amp;quot;Amy&amp;quot; isn't." width="554" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The documentation looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Parses a string and returns a list consisting of one of
length-1-`string` (`char`) or `symbol`, representing the
tokens the scanner finds.
Every time a token is successfully found, a symbol
representing the token is inserted, otherwise
the current character is used instead.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Python Code Best Practices</title>
      <author>Dollar Dhingra</author>
      <pubDate>Sat, 11 Dec 2021 09:24:32 +0000</pubDate>
      <link>https://dev.to/dollardhingra/python-code-best-practices-4k96</link>
      <guid>https://dev.to/dollardhingra/python-code-best-practices-4k96</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This article is a collection of best practices for more idiomatic python code especially if you are new to python. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contribute"&gt;
  &lt;/a&gt;
  Contribute
&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;a href="https://github.com/dollardhingra/dollardhingra.github.io/edit/master/_posts/2021-12-05-python-code-best-practices.md"&gt;contribute&lt;/a&gt; to this list, and I will thank you by including a link to your profile with the snippet!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-catching-exceptions"&gt;
  &lt;/a&gt;
  1. Catching Exceptions
&lt;/h2&gt;

&lt;p&gt;This is a sure-shot way to get your code into trouble&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# very bad practice
&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="c1"&gt;# A slightly better way(included logging), but still a bad practice:
&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# although, logging is a good practice
&lt;/span&gt;
&lt;span class="c1"&gt;# When we don't use `Exception` we will also be catching events like system exit. 
# So, using Exception means that we are only catching Exceptions.
&lt;/span&gt;
&lt;span class="c1"&gt;# A better way:
&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# some code to handle your exception gracefully if required
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have used a specific type of Exception i.e. &lt;code&gt;ValueError&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-name-casing"&gt;
  &lt;/a&gt;
  2. Name Casing
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# using camelCase is not a convention in python
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sampleArr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="c1"&gt;# instead use snake_case in python
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sample_arr&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In python, &lt;code&gt;snake_case&lt;/code&gt; is preferred for variables, functions and method names. However, for classes, &lt;code&gt;PascalCase&lt;/code&gt; is used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-chained-comparison-operators"&gt;
  &lt;/a&gt;
  3. Chained comparison operators
&lt;/h2&gt;

&lt;p&gt;There are multiple ways of comparing in Python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Don't do this:
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x is greater than 0 but less than 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Instead, do this:
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'x is greater than 0 but less than 10'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-mutable-default-arguments"&gt;
  &lt;/a&gt;
  4. Mutable default arguments
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# wrong way!
# a sure shot way to get some unintended bugs in your code
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]):&lt;/span&gt;
    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;


&lt;span class="c1"&gt;# correct way!
# recommended way for handling mutable default arguments:
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;box&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read more about mutable default arguments &lt;a href="https://dev.to/dollardhingra/1-anti-pattern-mutable-default-arguments-3bp5"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-string-formatting"&gt;
  &lt;/a&gt;
  5. String Formatting
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# Avoid using it
# %-formatting
&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"James Bond"&lt;/span&gt;
&lt;span class="n"&gt;profession&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Secret Agent"&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, %s. You are a %s."&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;profession&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# slightly better
# str.format()
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, {}. You are a {}."&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;profession&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Short, crisp and faster!
# f-strings
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello, &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;. You are a &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;profession&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The f in f-strings may as well stand for "fast." f-strings are faster than both %-formatting and str.format(). &lt;a href="https://www.python.org/dev/peps/pep-0498/#abstract"&gt;(Source)&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-toplevel-script-environment"&gt;
  &lt;/a&gt;
  6. Top-level script environment
&lt;/h2&gt;

&lt;p&gt;Executes only if it is run as a script and not as a module&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Filename: run.py
&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Hello from script!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python run.py
$ Hello from script!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Hello from script!&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; be printed if the module is imported into any other module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-conditional-expressions"&gt;
  &lt;/a&gt;
  7. Conditional expressions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can be reduced to this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-iterating-over-an-iterator"&gt;
  &lt;/a&gt;
  8. Iterating over an iterator
&lt;/h2&gt;

&lt;p&gt;You don’t necessarily need to iterate over the indices of the elements in an iterator if you don’t need them. You can iterate directly over the elements.&lt;br&gt;
This makes your code more pythonic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;list_of_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"pear"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# bad practice
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_of_fruits&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list_of_fruits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;process_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# good practice
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list_of_fruits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;process_fruit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-indexingcounting-during-iteration"&gt;
  &lt;/a&gt;
  9. Indexing/Counting during iteration
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Don't do this:
&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="c1"&gt;# Nor this:
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Definitely don't do this:
&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Instead, use `enumerate()`
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-using-context-managers"&gt;
  &lt;/a&gt;
  10. Using context managers
&lt;/h2&gt;

&lt;p&gt;Python provides context managers that manage the overhead of initializing and clearing up the resources and let&lt;br&gt;
you focus on the implementation. For example in the case of reading a file, you don't need to be concerned &lt;br&gt;
to close the file manually.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# bad practice 
&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./data.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"wb"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"some data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# KeyError
# f.close() never executes which leads to memory issues
&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# good practice
&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./data.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"wb"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"some data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# python still executes f.close() even if the KeyError exception occurs
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-using-set-for-searching-instead-of-a-list"&gt;
  &lt;/a&gt;
  11. Using set for searching instead of a list
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'p'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'m'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'p'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'m'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# ok for small no. of elements
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lookup_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'s'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="c1"&gt;# O(1)
&lt;/span&gt;

&lt;span class="c1"&gt;# better for large no. of elements
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;lookup_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'s'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="c1"&gt;# O(n)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sets are implemented using hash in python, which makes searching of element faster(O(1)) as compared to searching in a &lt;br&gt;
list(O(n)). &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#12-using-while-importing-a-module"&gt;
  &lt;/a&gt;
  12. using * while importing a module
&lt;/h2&gt;

&lt;p&gt;Imports should always be specific. Importing * from a module is a very bad practice that pollutes the namespace.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# bad practice 
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# good practice 
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;   
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# we know where ceil comes from
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#13-using-items-for-iterating-a-dictionary"&gt;
  &lt;/a&gt;
  13. using items() for iterating a dictionary
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Aarya"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
     &lt;span class="s"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Dont do this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Instead do this
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; = &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-f-strings/"&gt;RealPython f-strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/the-most-diabolical-python-antipattern/"&gt;RealPython the most diabolic anti pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arielortiz.info/s201911/pycon2019/docs/design_patterns.html"&gt;Python Idiom Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://towardsdatascience.com/18-common-python-anti-patterns-i-wish-i-had-known-before-44d983805f0f"&gt;18 Common Python Anti-Patterns I Wish I Had Known Before&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>codequality</category>
    </item>
  </channel>
</rss>
