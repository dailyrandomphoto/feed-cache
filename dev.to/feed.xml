<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top apps to learn something new every day</title>
      <author>Hyperlink InfoSystem Canada</author>
      <pubDate>Tue, 26 Oct 2021 10:33:17 +0000</pubDate>
      <link>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</link>
      <guid>https://dev.to/hyperlinkinfosystemcanada/top-apps-to-learn-something-new-every-day-2ghm</guid>
      <description>&lt;p&gt;Today, most of us live such hectic lives that it seems impossible to find time to rest or to do something that does not belong to the daily routine. But, what if instead of wasting time doing activities that are useless, we find a moment to learn something new and thus increase our cultural level?&lt;/p&gt;

&lt;p&gt;In that free time, we could learn a new language, some words of ours that we did not know, some history and culture, geography, science and nature or simply small data to retain in our memory. &lt;/p&gt;

&lt;p&gt;Thus, at bedtime, we will know that we have been able to learn something that we did not know yesterday. There are a large number of &lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;educational applications&lt;/a&gt; designed to expand our knowledge, open our sights and teach us little curiosities that will expand our horizons.&lt;/p&gt;

&lt;p&gt;To help you in this enrichment process, we are going to give you some of the best applications that will allow you to learn something new every day.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Babbel&lt;br&gt;
It is an app and also a platform for language learning. One of the most striking features of this tool is that it is intuitive and functional, and it also allows you to study at the pace you prefer: you decide how much you learn each day, and each lesson lasts only 15 minutes.&lt;/p&gt;

&lt;p&gt;In this way, you can organize yourself according to the type of person you are and it will give you greater comfort when combining it with the different activities you have to do. Babbel app includes multiple languages, so you can choose what you prefer. &lt;/p&gt;

&lt;p&gt;It is visual and attractive, easy to use and fun thanks to its great interaction. But that's not all, since Babbel is not just for learning languages in the strict sense. &lt;/p&gt;

&lt;p&gt;It will allow you to discover many other things, some curiosities about the world of languages that perhaps you did not know, such as what languages are spoken in Switzerland, what is the official language of Belgium and so on.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Curiosities of history&lt;br&gt;
It is a tool that any fan of history will not be able to avoid downloading, but it can be used by anyone. As we can guess, it is an application focused on universal history, with educational content explained in simple and easy-to-understand words. &lt;/p&gt;

&lt;p&gt;It proposes a broad and enriching review of the great epochs of history and of all the historical moments that delineated the present. It is, in short, a fun game that allows you to get closer to the knowledge of names, data and even relevant dates in the history of the world.&lt;/p&gt;

&lt;p&gt;Each day will offer you a curiosity or a different piece of information, you will not have to do anything else, simply read the entry that interests us and enjoy content written by a real and professional team of historians. &lt;/p&gt;

&lt;p&gt;Besides that, you can always have a curious fact to impress others.&lt;/p&gt;

&lt;p&gt;‚Ä¢ World geography&lt;br&gt;
As its name can anticipate, we are facing an application not only ideal for learning data about other countries or continents that we did not know, but it can also become the lifeline of many young people, who are currently trying to learn the different capitals, flags, coins even religions of each country. &lt;/p&gt;

&lt;p&gt;World Geography offers you a wide variety of games with more than 6,000 questions divided into different levels and will help you by showing you images of each place (it has a repertoire of more than 2,000 images). &lt;/p&gt;

&lt;p&gt;It will help you to place the countries of the world in a pleasant and even fun way, with quizzes and questions about the flags and capitals of all countries. Put your knowledge and intelligence to the test in this new challenge.&lt;/p&gt;

&lt;p&gt;‚Ä¢ Google Arts and Culture&lt;br&gt;
This app allows you to visit the most important museums around the world and enjoy the great variety of works of art appreciating even the smallest detail. &lt;/p&gt;

&lt;p&gt;You can also discover photographs, videos and manuscripts and even create your collection of favorite works of art to share with your friends.&lt;/p&gt;

&lt;p&gt;Google Arts and Culture has a collaboration with more than 1,200 museums, galleries and institutes in 70 countries, to offer its wonders online to users.&lt;/p&gt;

&lt;p&gt;With this application, you can receive more information about the works of art by pointing the camera of your device towards them when visiting a museum. By enabling notifications, you will know the most outstanding news from the world of art and culture every day. &lt;/p&gt;

&lt;p&gt;As you may have understood, it is the perfect application for art lovers, students of this subject or for those who want to learn something new on the subject simply through one click.&lt;/p&gt;

&lt;p&gt;‚Ä¢ 7-minute workout&lt;br&gt;
Despite the fact that physical exercise should be something common in our day to day, many of us remember it only when the good weather arrives and the time to show off our body in summer approaches. &lt;/p&gt;

&lt;p&gt;If you want to start exercising but don't have the time or desire to go to the gym, with 7-minute training, you can exercise without leaving your home. &lt;/p&gt;

&lt;p&gt;This application offers centralized training programs based on HICT (high intensity circuit training) exercises, so it can be of great help if you have little free time. &lt;/p&gt;

&lt;p&gt;You will be able to realize the first results after a few days and you will see that all the efforts are worth it. The only thing you need to carry them out is a wall and a chair to support you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hyperlinkinfosystem.ca/android-app-development"&gt;Choose the right app&lt;/a&gt; for your needs and improve your lifestyle starting with small steps. It is never too late to learn something new.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My First Bash trying.</title>
      <author>Lucifer25x</author>
      <pubDate>Tue, 26 Oct 2021 10:33:08 +0000</pubDate>
      <link>https://dev.to/lucifer25x/my-first-bash-trying-2p4</link>
      <guid>https://dev.to/lucifer25x/my-first-bash-trying-2p4</guid>
      <description>&lt;p&gt;Github: &lt;a href="https://github.com/Lucifer25x/bash-test"&gt;https://github.com/Lucifer25x/bash-test&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>github</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Any trouble debugging in Golang?</title>
      <author>Joe Groom</author>
      <pubDate>Tue, 26 Oct 2021 10:27:48 +0000</pubDate>
      <link>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</link>
      <guid>https://dev.to/joe_groom_gonaviro/any-trouble-debugging-in-golang-59j2</guid>
      <description>&lt;p&gt;This is your invite to 'Debugging in Golang' üö´üëæ&lt;/p&gt;

&lt;p&gt;Our Golang eSeries II start's this Thursday at 19.30 CET üé•üéÉüëª. We have a GopherCon speaker, Derek Parker from RedHat discussing debugging in Go&lt;/p&gt;

&lt;p&gt;üé´ Register here: &lt;a href="https://lnkd.in/dCfzQ2ZS"&gt;https://lnkd.in/dCfzQ2ZS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚è∞ 1 Hour Event format:&lt;br&gt;
‚≠ê Gopher cards ice breaker game üÉè&lt;br&gt;
‚≠ê Debugging in Go (test your knowledge with tech quiz Qs) üèÜ&lt;br&gt;
‚≠ê Q &amp;amp; A with Derek (prizes for best ranked Qs) üéÅ&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Can you find the bug in this piece of php code? ü§π</title>
      <author>Keff</author>
      <pubDate>Tue, 26 Oct 2021 09:55:19 +0000</pubDate>
      <link>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</link>
      <guid>https://dev.to/nombrekeff/can-you-find-the-bug-in-this-piece-of-php-code-g7l</guid>
      <description>&lt;p&gt;Hey there! üëã&lt;/p&gt;

&lt;p&gt;I was doing a bit of bug-hunting in an old project of mine when I found an interesting bug. Can you find it?&lt;/p&gt;

&lt;p&gt;If you know your security or PHP this might be quite easy for you. Otherwise, it might be a good exercise.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-dont-look-at-the-comments-to-prevent-spoilers-if-you-want-to-solve-it-by-yourself-"&gt;
  &lt;/a&gt;
  !! Don't look at the comments to prevent spoilers if you want to solve it by yourself !!
&lt;/h4&gt;




&lt;p&gt;This is the request you would make to the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;--location&lt;/span&gt; &lt;span class="nt"&gt;--request&lt;/span&gt; POST &lt;span class="s1"&gt;'https://super.secure-api.com/check-pin'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--header&lt;/span&gt; &lt;span class="s1"&gt;'Authorization: Bearer &amp;lt;token&amp;gt;'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;--data-raw&lt;/span&gt; &lt;span class="s1"&gt;'{
      "pin": &amp;lt;you_answer&amp;gt;
    }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the code for that given endpoint (&lt;code&gt;/check-pin&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pin'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPin&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HttpException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"The pin is incorrect"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"The pin is correct!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;PD: This is just a demo, not real code. You should never check passwords/pins/secrets like this.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#what-input-would-you-need-to-pass-as-raw-pin-endraw-to-be-able-to-bypass-the-check"&gt;
  &lt;/a&gt;
  What input would you need to pass as &lt;code&gt;pin&lt;/code&gt; to be able to bypass the check?
&lt;/h4&gt;

&lt;p&gt;I will release a post in a couple of days explaining the bug in detail and how to fix it.&lt;/p&gt;

</description>
      <category>php</category>
      <category>security</category>
      <category>beginners</category>
      <category>bugs</category>
    </item>
    <item>
      <title>Kubernetes Logging in Production</title>
      <author>Kentaro Wakayama</author>
      <pubDate>Tue, 26 Oct 2021 09:23:33 +0000</pubDate>
      <link>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</link>
      <guid>https://dev.to/coder_society/kubernetes-logging-in-production-1ld3</guid>
      <description>&lt;p&gt;Historically, in monolithic architectures, logs were stored directly on bare metal or virtual machines. They never left the machine disk and the operations team would check each one for logs as needed.&lt;/p&gt;

&lt;p&gt;This worked on long-lived machines, but machines in the cloud are ephemeral. As more companies run their services on containers and orchestrate deployments with Kubernetes, logs can no longer be stored on machines and implementing a log management strategy is of the utmost importance.&lt;/p&gt;

&lt;p&gt;Logs are an effective way of debugging and monitoring your applications, and they need to be stored on a separate backend where they can be queried and analyzed in case of pod or node failures. These separate backends include systems like Elasticsearch, GCP‚Äôs Stackdriver, and AWS‚Äô Cloudwatch.&lt;/p&gt;

&lt;p&gt;Storing logs off of the cluster in a storage backend is called cluster-level logging. In this article we‚Äôll discuss how to implement this approach in your own Kubernetes cluster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-architectures"&gt;
  &lt;/a&gt;
  Logging Architectures
&lt;/h2&gt;

&lt;p&gt;In a Kubernetes cluster there are two main log sources, your application and the system components.&lt;/p&gt;

&lt;p&gt;Your application runs as a container in the Kubernetes cluster and the container runtime takes care of fetching your application‚Äôs logs while Docker redirects those logs to the stdout and stderr streams. In a Kubernetes cluster, both of these streams are written to a JSON file on the cluster node.&lt;/p&gt;

&lt;p&gt;These container logs can be fetched anytime with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl logs podname
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other source of logs are system components. Some of the system components (namely &lt;code&gt;kube-scheduler&lt;/code&gt; and &lt;code&gt;kube-proxy&lt;/code&gt;) run as containers and follow the same logging principles as your application.&lt;/p&gt;

&lt;p&gt;The other system components (&lt;code&gt;kubelet&lt;/code&gt; and &lt;code&gt;container runtime&lt;/code&gt; itself) run as a native service. If &lt;code&gt;systemd&lt;/code&gt; is available on the machine the components write logs in &lt;code&gt;journald&lt;/code&gt;, otherwise they write a &lt;code&gt;.log&lt;/code&gt; file in &lt;code&gt;/var/log&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Now that we understand which components of your application and cluster generate logs and where they‚Äôre stored, let‚Äôs look at some common patterns to offload these logs to separate storage systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logging-patterns"&gt;
  &lt;/a&gt;
  Logging Patterns
&lt;/h2&gt;

&lt;p&gt;The two most prominent patterns for collecting logs are the sidecar pattern and the DaemonSet pattern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-pattern"&gt;
  &lt;/a&gt;
  1. DaemonSet pattern
&lt;/h3&gt;

&lt;p&gt;In the DaemonSet pattern, logging agents are deployed as pods via the DaemonSet resource in Kubernetes. Deploying a DaemonSet ensures that each node in the cluster has one pod with a logging agent running. This logging agent is configured to read the logs from &lt;code&gt;/var/logs&lt;/code&gt; directory and send them to the storage backend. You can see a diagram of this configuration in figure 1.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzJHu8lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-daemonset.png" alt="DaemonSet pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 1: A logging agent running per node via a DaemonSet&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar-pattern"&gt;
  &lt;/a&gt;
  2. Sidecar pattern
&lt;/h3&gt;

&lt;p&gt;Alternatively, in the sidecar pattern a dedicated container runs along every application container in the same pod. This sidecar can be of two types, streaming sidecar or logging agent sidecar.&lt;/p&gt;

&lt;p&gt;The streaming sidecar is used when you are running an application that writes the logs to a file instead of stdout/stderr streams, or one that writes the logs in a nonstandard format. In that case, you can use a streaming sidecar container to publish the logs from the file to its own stdout/stderr stream, which can then be picked up by Kubernetes itself.&lt;/p&gt;

&lt;p&gt;The streaming sidecar can also bring parity to the log structure by transforming the log messages to standard log format. You can see this pattern in figure 2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plvsdl6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-streaming-sidecar.png" alt="Streaming sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 2: Streaming sidecar pattern&lt;/p&gt;

&lt;p&gt;Another approach is the logging agent sidecar, where the sidecar itself ships the logs to the storage backend. Each pod contains a logging agent like Fluentd or Filebeat, which captures the logs from the application container and sends them directly to the storage backend, as illustrated in figure 3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3bIP7Sn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.codersociety.com/uploads/kubernetes-logging-logging-agent-sidecar.png" alt="Logging agent sidecar pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Figure 3: Logging agent sidecar pattern  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h2&gt;

&lt;p&gt;Now that we‚Äôve gone over both the DaemonSet and sidecar approaches, let‚Äôs get acquainted with the pros and cons of each.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-daemonset-node-level"&gt;
  &lt;/a&gt;
  1. DaemonSet (Node Level)
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Node-level logging is easier to implement because it hooks into the existing file based logging and is less resource intensive than a sidecar approach as there are less containers running per node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The logs are available via the kubectl command for debugging, as the log files are available to kubelet which returns the content of the log file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Less flexibility in supporting different log structures or applications that write to log files instead of streams. You would need to modify the application log structure to achieve parity, or handle the difference in your storage backend.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since they‚Äôre stored as JSON files on the node disk, logs can‚Äôt be held forever. You need to have a log rotation mechanism in place to recycle old logs. If you are using Container Runtime Interface, kubelet takes care of rotating the logs and no explicit solution needs to be implemented.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-sidecar"&gt;
  &lt;/a&gt;
  2. Sidecar
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have the flexibility to customize sidecars per application container. For example, an application might not have the ability to write to &lt;code&gt;stdout/stderr&lt;/code&gt;, or it might have some different logging format. In these cases, a sidecar container can bring parity to the system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a logging agent sidecar without streaming, you don't need to rotate the logs because no logs are being stored on the node disk.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Running a sidecar for each application container is quite resource intensive when compared to node-level pods.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding a sidecar to each deployment creates an extra layer of complexity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a streaming sidecar for an application that writes its logs to files, you‚Äôll use double the storage for the same logs because you‚Äôll be duplicating the entries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you‚Äôre using a logging agent sidecar without streaming, you‚Äôll lose the ability to access logs via &lt;code&gt;kubectl&lt;/code&gt;. This is because &lt;code&gt;kubelet&lt;/code&gt; no longer has access to the JSON logs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With a logging agent sidecar you also need a node-level agent, otherwise you won‚Äôt be able to collect the system component logs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#putting-theory-into-practice"&gt;
  &lt;/a&gt;
  Putting Theory into Practice
&lt;/h2&gt;

&lt;p&gt;Now that we‚Äôve looked at the possible patterns for logging in a Kubernetes cluster, let‚Äôs put them into action. We‚Äôll deploy dummy containers generating logs and create Kubernetes resources to implement the logging patterns we discussed above.&lt;/p&gt;

&lt;p&gt;For this example we‚Äôll use Fluentd as a logging agent, and we will install Elasticsearch for logging backend and Kibana for visualization purposes. We will install Elasticsearch and Kibana using Helm charts into the same cluster. Do note however that your storage backend should not be on the same cluster and we are doing it for demo purposes only. Thanks to Fluentd‚Äôs pluggable architecture, it supports various different sinks. That‚Äôs why the Elasticsearch backend can be replaced by any cloud-native solution, including Stackdriver or Cloudwatch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-installing-elasticsearch-and-kibana"&gt;
  &lt;/a&gt;
  1. Installing Elasticsearch and Kibana
&lt;/h3&gt;

&lt;p&gt;We will deploy the Elasticsearch and Kibana using the official Helm charts which can be found here(&lt;a href="https://github.com/elastic/helm-charts/blob/master/elasticsearch"&gt;Elasticsearch&lt;/a&gt;, &lt;a href="https://github.com/elastic/helm-charts/blob/master/kibana"&gt;Kibana&lt;/a&gt;). For installing via Helm you would need a helm binary on your path but installation of Helm is outside the scope of this post.&lt;/p&gt;

&lt;p&gt;Let us start by adding helm repos.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add elastic https://helm.elastic.co
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will install the Elasticsearch and Kibana charts into our cluster.&lt;br&gt;
&lt;br&gt;
¬†&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm &lt;span class="nb"&gt;install &lt;/span&gt;elasticsearch elastic/elasticsearch
helm &lt;span class="nb"&gt;install &lt;/span&gt;kibana elastic/kibana
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will install the latest version of Elasticsearch and Kibana in your cluster which can then be used as storage backend for your logs.&lt;/p&gt;

&lt;p&gt;We have used the default values in our charts but you can change any parameter based on your needs when you are installing this in production.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-daemonset"&gt;
  &lt;/a&gt;
  2. DaemonSet
&lt;/h3&gt;

&lt;p&gt;We will be deploying Fluentd as a DaemonSet. To keep the verbosity low, we won‚Äôt be creating a separate ServiceAccount and ClusterRole.  But in a production environment, Fluentd pods should run with a separate service account with limited access.&lt;/p&gt;

&lt;p&gt;You can deploy Fluentd as a DaemonSet by using following the Kubernetes resource:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DaemonSet&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kube-system&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†k8s-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd-logger&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluentd&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elasticsearch-master"&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†readOnly&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dockerlogs&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†hostPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/lib/docker/containers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we‚Äôre mounting two volumes: one at &lt;code&gt;/var/log&lt;/code&gt; and another at &lt;code&gt;/var/log/docker/containers&lt;/code&gt;, where the system components and Docker runtime put the logs, respectively.&lt;/p&gt;

&lt;p&gt;The image we are using is already configured with smart defaults to be used with DaemonSet, but &lt;a href="https://hub.docker.com/r/fluent/fluentd-kubernetes-daemonset"&gt;you can change the configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Save the above YAML resource in a file named &lt;code&gt;fluentd-ds.yaml&lt;/code&gt; and apply the resource via the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; fluentd-ds.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will start a Fluentd pod on each node in your Kubernetes cluster.¬†&lt;/p&gt;

&lt;p&gt;Now we‚Äôll see how to implement streaming and logging agent sidecar patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-sidecar"&gt;
  &lt;/a&gt;
  3. Sidecar
&lt;/h3&gt;

&lt;p&gt;First, let‚Äôs look at the streaming sidecar pattern when our application is writing logs to a file instead of stream. We‚Äôre running a sidecar to read those logs and write it back to the stdout/stderr stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;legacy-app&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- -c&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†i=0;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†do&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†done¬†¬†¬†¬†¬†¬†&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;streaming-sidecar&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;\[/bin/sh, -c, 'tail -n+1 -f /var/log/output.log'\]&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we have a dummy container writing logs to files in the &lt;code&gt;/var/log&lt;/code&gt; directory of the container. Now these logs can‚Äôt be fetched by the container runtime, that‚Äôs why we implemented a streaming sidecar to tail the logs from the &lt;code&gt;/var/log&lt;/code&gt; location and redirect it to the &lt;code&gt;stdout&lt;/code&gt; stream.&lt;/p&gt;

&lt;p&gt;This log stream will be picked up by the container runtime and stored as a JSON file at the &lt;code&gt;/var/log&lt;/code&gt; directory on the node, which will in turn be picked up by the node-level logging agent.&lt;/p&gt;

&lt;p&gt;Now, let‚Äôs look at the logging agent sidecar. In this pattern we‚Äôll deploy Fluentd as a sidecar, which will directly write to our Elasticsearch storage backend.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is no prebuilt image with an Elasticsearch plugin installed, and creating a custom Docker image is out of the scope of this article. Instead, we‚Äôll use the same Fluentd image that we used in the DaemonSet example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;my-app&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;count&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;busybox&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†args&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- /bin/sh&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- -c&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†- &amp;gt;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†i=0;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†while &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="s"&gt;;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†do&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†echo "$i&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(date)" &amp;gt;&amp;gt; /var/log/output.log;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†i=$((i+1));&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†¬†¬†sleep 1;&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†done¬†¬†¬†¬†¬†¬†&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging-agent&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;fluent/fluentd-kubernetes-daemonset:elasticsearch&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_HOST&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;elastisearch-master"&lt;/span&gt;
&lt;span class="s"&gt;¬†¬†¬†¬†¬†¬†- name:¬† FLUENT\_ELASTICSEARCH\_PORT&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†¬†¬†value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;9200"&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†¬†¬†mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/log&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†- name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;varlog&lt;/span&gt;
&lt;span class="na"&gt;¬†¬†¬†¬†emptyDir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Given the ephemeral nature of pods and nodes, it‚Äôs very important to store logs from your Kubernetes cluster in a separate storage backend. There are multiple patterns that you can use to set up the logging architecture that we discussed in this article.&lt;/p&gt;

&lt;p&gt;Note that we suggest a mix of both sidecar and node-level patterns for your production systems. This includes setting up cluster-wide, node-level logging using a DaemonSet pattern, and implementing a streaming sidecar container for applications that do not support writing logs to stream (&lt;code&gt;stdout/stderr&lt;/code&gt;) or that don‚Äôt write in a standard log format. This streaming container will automatically surface logs for node-level agents to be picked up.&lt;/p&gt;

&lt;p&gt;For the choice of storage backend, you can choose self-hosted, open-source solutions such as Elasticsearch, or you can go the managed service route with options like cloud-hosted Elasticsearch, Stackdriver, or Cloudwatch. The choice of backend that‚Äôs right for you will depend on the cost, query, and log analysis requirements that you want to implement with your architecture.&lt;/p&gt;

&lt;p&gt;For our latest insights and updates, &lt;a href="https://www.linkedin.com/company/codersociety/"&gt;follow us on LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>logging</category>
      <category>devops</category>
    </item>
    <item>
      <title>Let's program the Arduino with Javascriptü§Ø</title>
      <author>Patrick</author>
      <pubDate>Tue, 26 Oct 2021 09:17:10 +0000</pubDate>
      <link>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</link>
      <guid>https://dev.to/patik123/lets-program-the-arduino-with-javascript-3doj</guid>
      <description>&lt;p&gt;Have you ever programmed an Arduino? Did you know that Arduino can be programmed with JavaScript?üòè&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://store.arduino.cc/products/arduino-uno-rev3"&gt;Arduino UNO microcontroller&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;LED,&lt;/li&gt;
&lt;li&gt;220-ohm resistor,&lt;/li&gt;
&lt;li&gt;Arduino IDE installed,&lt;/li&gt;
&lt;li&gt;NodeJS installed (I recommend the latest LTS version),&lt;/li&gt;
&lt;li&gt;Visual Studio Code (or another code editor).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must first assemble the circuit we are going to work with.&lt;/p&gt;

&lt;p&gt;A circuit similar to this is created in TinkerCad.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djPPccT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tf7kr02x6h4d9d74b33n.png" alt="Arduino circuit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we have the circuit assembled we need to prepare our Arduino for programming with JavaScript not yet completely.&lt;/p&gt;

&lt;p&gt;We must first install the Firmata library on it.&lt;/p&gt;

&lt;p&gt;Navigate to File&amp;gt; Examples&amp;gt; Firmata&amp;gt; StandardFirmataPlus and upload the file that opens to our Arduino.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpMTrRWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3aig949h01ou5jdu2aw.png" alt="Where can find Firmata Library in Arduino IDE"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upload the code to the Arduino board by pressing the Upload.&lt;/p&gt;

&lt;p&gt;After a successful upload, we need to install some pre-required tools.&lt;/p&gt;

&lt;p&gt;Now is the time to make a directory where we will write our code for Arduino.&lt;/p&gt;

&lt;p&gt;Since I'm using a Windows computer, I had to do a couple of things before I could start programming Arduino with JavaScript.&lt;/p&gt;

&lt;p&gt;In the console with administrative privileges, enter two commands to install two more programs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;--add-python-to-path&lt;/span&gt; &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; &lt;span class="nt"&gt;--production&lt;/span&gt; windows-build-tools
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and install the &lt;code&gt;node-gyp&lt;/code&gt; JavaScript library with the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; node-gyp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For your operating system, check what you need to install before starting at &lt;a href="https://github.com/rwaldron/johnny-five/wiki/Getting-Started#trouble-shooting"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After installing everything you need, we can start working.&lt;/p&gt;

&lt;p&gt;We will use the &lt;code&gt;johnny-five&lt;/code&gt; library to program the Arduino, which is one of the better libraries for programming microcontrollers. It supports Arduino, Raspberry Pi and more ... A list of all is available at &lt;a href="http://johnny-five.io/platform-support/"&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The library allows us to program many components for the Arduino. The advantage I see is that it makes many tasks easier for us compared to C ++.&lt;/p&gt;

&lt;p&gt;Code for our simple circuit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;johnny-five&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COM3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// Check if is your Arduino on this port (this you can make in Arduino IDE)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Led&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;led&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, all we have to do is run the program on our Arduino. To do this, type in the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node main.js &lt;span class="c"&gt;# In case if our file is named main.js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's your turn to start creating a variety of circuits with JavaScript and the Arduino microcontroller.&lt;/p&gt;

&lt;p&gt;If you like the content I create, you can start following me on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>arduino</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Automated Magento Extension for Facebook Shop</title>
      <author>Ashutoshsonker786</author>
      <pubDate>Tue, 26 Oct 2021 09:08:35 +0000</pubDate>
      <link>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</link>
      <guid>https://dev.to/ashutoshsonker786/automated-magento-extension-for-facebook-shop-56gg</guid>
      <description>&lt;p&gt;Looking to improve your sales on the world's most popular social media platform? Here's the perfect shop connector to help you grow your online store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cedcommerce.com/magento-2-extensions/magento-2-facebook-shop-integration?utm_source=Quora&amp;amp;utm_campaign=sonker"&gt;Magento 2 Facebook Shop Integration&lt;/a&gt; is a tool that connects the Magento 2 seller panel to Facebook Shop. With its revolutionary Facebook shop product feed management, which automatically refreshes and provides updated data to the Magento store, it establishes flawless sync between Facebook shop and Magento store. Merchants can use this interface to gain access to cutting-edge online selling services such as automated product listing, synced inventory, and more. This integration acts as a link between the Facebook shop and the Magento store, allowing you to create and expand your Facebook business.&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>java</category>
      <category>react</category>
    </item>
    <item>
      <title>Server-Side Rendering of DataTables in Laravel</title>
      <author>Arman Hassan</author>
      <pubDate>Tue, 26 Oct 2021 09:03:20 +0000</pubDate>
      <link>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</link>
      <guid>https://dev.to/sharman/server-side-rendering-of-datatables-in-laravel-4c1i</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello&lt;/strong&gt; artisans how's everything going as a Laravel developer? Hopefully great. Working in Laravel locally or in production we need to work with datatables in many manners. Now We will see the yajra datatable with proper oriented steps to handle small and huge data records. Usually most of the developers render data on the client-side using jQuery Datatables. But when the volume of data is big, server-side rendering can boost performance. In this article, I'll discuss the process of rendering datatables on server-side using one of the most popular packages out there.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#Prerequisite"&gt;Prerequisite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Installation&amp;amp;Configuration"&gt;Installation &amp;amp; Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ModelandMigrations"&gt;Model and Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DatabaseConnection"&gt;Database Connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#DummyDataWithFaker"&gt;Dummy Data With Faker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Controller&amp;amp;Routes"&gt;Controller &amp;amp; Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SetupBladeFile"&gt;Setup Blade File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
&lt;a href="#p"&gt;&lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Basically the prerequisite will already filled up with Laravel installation because you have to have &lt;em&gt;composer&lt;/em&gt; and installed &lt;em&gt;Laravel&lt;/em&gt; project to use yajra as well&lt;br&gt;
To install Laravel demo application latest version use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt; &lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#Installation&amp;amp;Configuration"&gt;&lt;/a&gt;
  Installation &amp;amp; Configuration
&lt;/h3&gt;

&lt;p&gt;In the Laravel project folder &lt;code&gt;demoapp&lt;/code&gt; and open command prompt to execute this command to get the latest updated version of yajra package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;composer&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="n"&gt;yajra&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;laravel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datatables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now need to published the vendod files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in your 'demoapp/composer.json' file you can see this yajra added to your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt; &lt;span class="s2"&gt;"require"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"yajra/laravel-datatables-oracle"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^9.18"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you have to add those providers and aliases array's in &lt;code&gt;root/config/app.php&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="s1"&gt;'providers'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       
    &lt;span class="nc"&gt;Yajra\DataTables\DataTablesServiceProvider&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="s1"&gt;'aliases'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; 
    &lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'DataTables'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Yajra\DataTables\Facades\DataTables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after adding the line in provider list&lt;br&gt;
then need to run this command to update and published the vendor files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;publish&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Yajra\DataTables\DataTablesServiceProvider"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now good to go and serve the application, with artisan command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;serve&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 now type this url in the browser to see the welcome page of laravel  &lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--le8ZFIoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnl19slj28sfobqwwmvu.png" alt="Laravel welcome page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ModelandMigrations"&gt;&lt;/a&gt;
  Model and Migrations
&lt;/h3&gt;

&lt;p&gt;To set up the database we need to create a model and migration table for the schema. run this command to create a model and migration at the same time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are creating a &lt;code&gt;customer&lt;/code&gt; schema table for our &lt;code&gt;demoapp&lt;/code&gt; and the &lt;code&gt;-m&lt;/code&gt; is responsible for creating the migration table.&lt;br&gt;
Open up the &lt;code&gt;database/migrations/2021_10_05_100745_create_customers_table&lt;/code&gt; file and create the customer table schema.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Migrations\Migration&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Schema\Blueprint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Schema&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CreateCustomersTable&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Migration&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Blueprint&lt;/span&gt; &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Schema&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;dropIfExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open up the &lt;code&gt;app/Models/Customer.php&lt;/code&gt; to add the $fillable array in the &lt;code&gt;Customer Model&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Model&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;HasFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$fillable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'phone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DatabaseConnection"&gt;&lt;/a&gt;
  Database Connection
&lt;/h3&gt;

&lt;p&gt;Create a database to connect with the laravel application. I'm using &lt;code&gt;MySQl&lt;/code&gt; database for my &lt;code&gt;demoapp&lt;/code&gt; now got to the &lt;code&gt;demoapp/.env&lt;/code&gt; file and the database name and connection setup&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="no"&gt;DB_CONNECTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;
&lt;span class="no"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;
&lt;span class="no"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3306&lt;/span&gt;
&lt;span class="no"&gt;DB_DATABASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;demoapp&lt;/span&gt;
&lt;span class="no"&gt;DB_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;
&lt;span class="no"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#DummyDataWithFaker"&gt;&lt;/a&gt;
  Dummy Data With Faker
&lt;/h3&gt;

&lt;p&gt;we need to create some dummy data to test the yajra-datatables. using faker and DatabaseSeeder.&lt;br&gt;
need to this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;Customer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;command to create &lt;code&gt;CustomerFactory&lt;/code&gt; go to the &lt;code&gt;database/factories/CustomerFactory.php&lt;/code&gt; and add those code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Factories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Eloquent\Factories\Factory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerFactory&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Factory&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;"name"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="s2"&gt;"phone"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;phoneNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"email"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;safeEmail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;"address"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in the &lt;code&gt;database/seeds/DatabaseSeeder.php&lt;/code&gt; file add this line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;Database\Seeders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Database\Seeder&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseSeeder&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Seeder&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now run this command to seed data into the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now we got 1000 customer data in the database&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9MbkD3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og5ia2txfba9nsdyobd4.png" alt="database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Controller&amp;amp;Routes"&gt;&lt;/a&gt;
  Controller &amp;amp; Routes
&lt;/h3&gt;

&lt;p&gt;Need to create a CustomerController for the functions for fetch data and display in the Yajra database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;app/Http/Controllers/CustomerController.php&lt;/code&gt; need to write the method for fetching the data dynamically into the yajra datatables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;DataTables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomerController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customers'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Datatables&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addIndexColumn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;addColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                    &lt;span class="nv"&gt;$actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
                    &lt;span class="s1"&gt;'&amp;lt;a href="#" class="btn btn-sm btn-primary"&amp;gt;Edit&amp;lt;/a&amp;gt;
                    &amp;lt;a href="#" class="btn btn-sm btn-danger"&amp;gt;Delete&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$actions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;rawColumns&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's create a route for handling the request responses&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Support\Facades\Route&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\CustomerController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'welcome'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/customer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;CustomerController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customer'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#SetupBladeFile"&gt;&lt;/a&gt;
  Setup Blade Files
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;resources/views/welcome.blade.php&lt;/code&gt; file and set the blade file to show datatable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"csrf-token"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"{{ csrf_token() }}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"margin: 1rem;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center "&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Laravel Yajra Datatable&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:40px; border-radius: 5px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;table&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"table table-striped yajra-datatable"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"padding-top:10px;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;thead&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;No&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Name&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Phone&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Address&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;th&amp;gt;&lt;/span&gt;Action&lt;span class="nt"&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/tbody&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.yajra-datatable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;DataTable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;processing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;serverSide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{{ url('customer') }}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;phone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;orderable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                &lt;span class="na"&gt;searchable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's all the data loaded in server-side&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SdpnbS7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/na456hi927prxj9pache.png" alt="welcome page with data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#Conclusion"&gt;&lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Yajra DataTables server-side processing system is much easier to use and render huge datas within a few minutes. Highly recommended to use yajra datatables.&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>UI Design Process</title>
      <author>Krutik Raut</author>
      <pubDate>Tue, 26 Oct 2021 08:49:11 +0000</pubDate>
      <link>https://dev.to/reboot13_dev/ui-design-process-1g5k</link>
      <guid>https://dev.to/reboot13_dev/ui-design-process-1g5k</guid>
      <description>&lt;p&gt;Here are the 6 steps I go through whenever I create &lt;strong&gt;UI Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Understand the problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Albert Einstein said: "If I had an hour to solve a problem, I would spend 55 minutes thinking about the problem and 5 minutes about the solutions.&lt;/p&gt;

&lt;p&gt;It's probably the crucial part of any process that ensures that design will be usable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create very rough sketches&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next step is to create super rough sketches of my ideas after thinking about the problem and solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.Create detailed Wireframes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After I'm happy with the sketches (they need to be perfect)&lt;br&gt;
I use Figma to create detailed wireframes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.Selects Assets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eg: Fonts and Colors&lt;br&gt;
After the wireframes done, I choose fonts, colors and icons for the project , and also pick some photos and illustrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.Apply Assets to wireframes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After this step I am pretty much done. It's basically connecting together to an actual screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.Present it Properly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After applying assets, now its time to enhance your design presentation.&lt;/p&gt;

&lt;p&gt;Credits: &lt;a href="https://dribble.com/yasirnoori"&gt;https://dribble.com/yasirnoori&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me&lt;/strong&gt;&lt;br&gt;
Instagram: &lt;a href="https://instagram.com/reboot13_dev"&gt;https://instagram.com/reboot13_dev&lt;/a&gt;&lt;br&gt;
Telegram: &lt;a href="https://telegram.me/reboot13_dev"&gt;https://telegram.me/reboot13_dev&lt;/a&gt;&lt;br&gt;
Twitter: &lt;a href="https://twitter.com/reboot13_dev"&gt;https://twitter.com/reboot13_dev&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://linkedin.com/in/reboot13"&gt;https://linkedin.com/in/reboot13&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/reboot13-git"&gt;https://github.com/reboot13-git&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>ui</category>
      <category>uidesign</category>
      <category>design</category>
    </item>
    <item>
      <title>Another reason why developers leave their jobs: to escape from a bad codebase</title>
      <author>Alex Omeyer</author>
      <pubDate>Tue, 26 Oct 2021 08:43:43 +0000</pubDate>
      <link>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</link>
      <guid>https://dev.to/alexomeyer/another-reason-why-developers-leave-their-jobs-to-escape-from-a-bad-codebase-2324</guid>
      <description>&lt;p&gt;Recently, we have surveyed 200+ Software Engineers from different industries to learn how codebase health impacts Engineering hiring and retention.&lt;/p&gt;

&lt;p&gt;In this article, I‚Äôll share some of the key stats from the survey, why investing in a codebase is crucial for businesses, and questions you can ask on the interview as an Engineer to learn about the company‚Äôs codebase health.&lt;/p&gt;

&lt;p&gt;You can download &lt;a href="https://www.stepsize.com/how-codebase-health-impacts-hiring-and-retention-2021-report"&gt;the full report here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is what we found out:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;51% of Engineers left or considered leaving a job because of technical debt.&lt;/li&gt;
&lt;li&gt;82% believe that lack of proper development practices affects their job satisfaction.&lt;/li&gt;
&lt;li&gt;62% consider code quality as an important factor when choosing a new job.&lt;/li&gt;
&lt;li&gt;For 21% of engineers, excessive amounts of technical debt have been the number one reason for changing a job.&lt;/li&gt;
&lt;li&gt;Both junior and senior developers equally consider codebase health to be an important factor when choosing a new job.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today, hiring and retaining developers is one of the biggest challenges for tech companies. And while recruiters, hiring managers, and leaders are focusing on attracting new tech talent, they might be ignoring one of the biggest reasons they are losing them in the first place ‚Äî codebase health.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-debt-leads-to-employee-churn"&gt;
  &lt;/a&gt;
  Technical debt leads to employee churn
&lt;/h2&gt;

&lt;p&gt;More than half of the Engineers (51%) have left a company or considered leaving a company due to large amounts of technical debt, and 20% of Engineers say that technical debt is the primary reason for them to leave the company.&lt;/p&gt;

&lt;p&gt;As discovered in &lt;a href="https://www.stepsize.com/report"&gt;The State of Technical Debt 2021 Report&lt;/a&gt;, technical debt has a huge impact on developer team morale, causing frustration and hindering innovation.&lt;/p&gt;

&lt;p&gt;Given how much it costs to hire new engineers, companies need to keep their staff turnover as low as possible. And the best way to do that is to carefully manage technical debt to maintain a healthy codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-engineers-care-about-when-looking-for-a-new-role"&gt;
  &lt;/a&gt;
  What do Engineers care about when looking for a new role?
&lt;/h2&gt;

&lt;p&gt;Salary, technical challenges, and remote work opportunities are the 3 most important factors that Engineers pay attention to during their interview process.&lt;/p&gt;

&lt;p&gt;Compensation and workplace flexibility is at the top of the list for engineers when they‚Äôre looking for a new job. But 62% admit that they also consider code quality as an important factor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZx3nwQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bpo27uym542dgdx3kv.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code health or code quality refers to the characteristics of the code, such as clean, consistent, easy to understand, testable. Engineers often feel pressure to sacrifice code quality to meet deadlines and ship features fast which leads to frustration and decreases team morale.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Code quality definition is very unique for each engineering team and product. However, every engineer wants to write code that is scalable, performant, reliable, and most of all easy to maintain for future engineers,‚Äù says Shamma Pathan, Senior Software Engineer at LinkedIn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#10-questions-engineers-ask-to-get-a-gauge-of-your-codebase-health"&gt;
  &lt;/a&gt;
  10 questions engineers ask to get a gauge of your codebase health
&lt;/h2&gt;

&lt;p&gt;Unlike salary and remote work opportunities, understanding the state of the codebase and software development practices can be challenging.&lt;/p&gt;

&lt;p&gt;Engineers suggest asking the following questions during the interview process:&lt;/p&gt;

&lt;p&gt;‚Ä¢ What are the complexity metrics, defect metrics, and coding standards of the codebase?&lt;br&gt;
What does the workflow before deployment look like?&lt;br&gt;
‚Ä¢ Do all projects for each tech stack have consistent and identical CI/CD pipelines?&lt;br&gt;
‚Ä¢ How is refactoring built into your development process?&lt;br&gt;
What does the code review process look like?&lt;br&gt;
‚Ä¢ Do you dedicate time to fixing technical debt?&lt;br&gt;
‚Ä¢ How do you balance building new functionality and resolving technical debt?&lt;br&gt;
‚Ä¢ How much time does the team spend on refactoring?&lt;br&gt;
‚Ä¢ What processes are set up to ensure the company uses all the modern/latest stack?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job-satisfaction"&gt;
  &lt;/a&gt;
  Job satisfaction
&lt;/h2&gt;

&lt;p&gt;When it comes to the job itself, 82% of Engineers admit that lack of proper development practices plays a crucial role in their job satisfaction.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúThe mess slows developers down and sometimes even prevents them from doing their actual job. Technical debt can make it difficult to be proud of the work you‚Äôre doing, as a lot of time is lost dealing with annoying obstacles,‚Äù says Maarten Dalmijn is the head of product at Rodeo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tM65uXZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq2533zdvo4ozx8vwuyz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The right way to fight technical debt is to talk about codebase-related issues across the whole company so that everyone can understand why it‚Äôs vital to manage it carefully.&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>programming</category>
      <category>career</category>
      <category>news</category>
    </item>
    <item>
      <title>How to make a Glassorphism Calculator</title>
      <author>Codeflix</author>
      <pubDate>Tue, 26 Oct 2021 08:30:15 +0000</pubDate>
      <link>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</link>
      <guid>https://dev.to/codeflix/how-to-make-a-glassorphism-calculator-dhk</guid>
      <description>&lt;p&gt;Hello Readers, welcome to my new blog, today in this blog I'm going to make a calculator using HTML CSS &amp;amp; JavaScript. Earlier I have shared, How To Make a Responsive Website With HTML &amp;amp; CSS, that website was in glassmorphism UI, and now this calculator design is also in glass morphism UI.&lt;br&gt;
As we know, a Calculator is a mechanical device that is used to calculate numerical numbers. There are various types and designs of calculators that we can found but the main motive of the calculator is calculation.&lt;/p&gt;

&lt;p&gt;As you can see on the given image of this program [Glasss Morphism Calculator], on the webpage. There is one calculator design in glassmorphism UI. All essential buttons are available there like addition, subtraction, multiplication, divide, and so on. These all buttons worked perfectly. Those different sizes of small boxes around that calculator make this glassmorphism design of the calculator really awesome. These all small boxes move upward direction continuously.&lt;/p&gt;

&lt;p&gt;If you want the real animation of these small boxes and the code behind making this calculator, you can watch the full video tutorial of this program [Animated Glass Morphism Calculator].&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tutorial-of-calculator-using-html-css-amp-javascript"&gt;
  &lt;/a&gt;
  Tutorial of Calculator using HTML CSS &amp;amp; JavaScript
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/S44SDUwWHIQ"&gt;Glassorphism Calculator Preview&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  STEPS
&lt;/h2&gt;
&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;Make a file named index.html and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;

&amp;lt;html lang="en" dir="ltr"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
   &amp;lt;!--- &amp;lt;title&amp;gt; Glassmorphism Calculator| Codeflix &amp;lt;/title&amp;gt;---&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
   &amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This is the animation part (Do it carefully). Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class="bubbles"&amp;gt;
  &amp;lt;span class="one"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="two"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="three"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="four"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="five"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="six"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
  &amp;lt;span class="seven"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code will make the container of the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div class="container"&amp;gt;
   &amp;lt;form action="#" name="forms"&amp;gt;
     &amp;lt;input type="text" name="answer"&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="AC" onclick="forms.answer.value = ''"&amp;gt;
       &amp;lt;input type="button" value="DEL" onclick="forms.answer.value = forms.answer.value.substr(0 , forms.answer.value.length -1)"&amp;gt;
       &amp;lt;input type="button" value="%" onclick="forms.answer.value += '%'"&amp;gt;
       &amp;lt;input type="button" value="/" onclick="forms.answer.value += '/'"&amp;gt;
     &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  STEP 4
&lt;/h2&gt;

&lt;p&gt;This code represents how buttons should function and their size and all other content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="7" onclick="forms.answer.value += '7'"&amp;gt;
       &amp;lt;input type="button" value="8" onclick="forms.answer.value += '8'"&amp;gt;
       &amp;lt;input type="button" value="9" onclick="forms.answer.value += '9'"&amp;gt;
       &amp;lt;input type="button" value="*" onclick="forms.answer.value += '*'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="4" onclick="forms.answer.value += '4'"&amp;gt;
       &amp;lt;input type="button" value="5" onclick="forms.answer.value += '5'"&amp;gt;
       &amp;lt;input type="button" value="6" onclick="forms.answer.value += '6'"&amp;gt;
       &amp;lt;input type="button" value="-" onclick="forms.answer.value += '-'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="1" onclick="forms.answer.value += '1'"&amp;gt;
       &amp;lt;input type="button" value="2" onclick="forms.answer.value += '2'"&amp;gt;
       &amp;lt;input type="button" value="3" onclick="forms.answer.value += '3'"&amp;gt;
       &amp;lt;input type="button" value="+" onclick="forms.answer.value += '+'"&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class="buttons"&amp;gt;
       &amp;lt;input type="button" value="0"  onclick="forms.answer.value += '0'"&amp;gt;
       &amp;lt;input type="button" value="00" onclick="forms.answer.value += '00'"&amp;gt;
       &amp;lt;input type="button" value="." onclick="forms.answer.value += '.'"&amp;gt;
       &amp;lt;input type="button" value="=" onclick="forms.answer.value = eval(forms.answer.value)"&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  Css
&lt;/h2&gt;

&lt;p&gt;CSS is designed to enable the separation of presentation and content, including layout, colors, and fonts.  This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file which reduces complexity and repetition in the structural content as well as enabling the .css file to be cached to improve the page load speed between the pages that share the file and its formatting.&lt;/p&gt;

&lt;p&gt;Separation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or screen reader), and on Braille-based tactile devices. CSS also has rules for alternate formatting if the content is accessed on a mobile device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-codes-in-this-project"&gt;
  &lt;/a&gt;
  Css codes in this project
&lt;/h2&gt;

&lt;h6&gt;
  &lt;a href="#css-plays-an-important-role-in-this-project-and-css-codes-are-also-available-below"&gt;
  &lt;/a&gt;
  Css plays an important role in this project and Css codes are also available below.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#css-codes"&gt;
  &lt;/a&gt;
  Css codes
&lt;/h2&gt;

&lt;p&gt;Now we will make a file named style.css and write paste the following code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  STEP 1
&lt;/h2&gt;

&lt;p&gt;This code represents Fonts, Container, Background Colour&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins',sans-serif;
}
body{
  height: 100vh;
  width: 100%;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#2196f3 , #e91e63);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  STEP 2
&lt;/h2&gt;

&lt;p&gt;This Css code is used to add animation,Colour to the bubbles. &lt;br&gt;
Each lot contains 7 bubbles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.bubbles{
  position: absolute;
  bottom: -120px;
  display: flex;
  flex-wrap: wrap;
  margin-top: 70px;
  width: 100%;
  justify-content: space-around;
}
.bubbles span{
  height: 60px;
  width: 60px;
  background: rgba(255, 255, 255, 0.1);
  animation: move 10s linear infinite;
  position: relative;
  overflow: hidden;
}
@keyframes move {
  100%{
    transform: translateY(-100vh);
  }
}
.bubbles span.one{
  animation-delay: 2.2s;
  transform: scale(2.15)
}
.bubbles span.two{
  animation-delay: 3.5s;
  transform: scale(1.55)
}
.bubbles span.three{
  animation-delay: 0.2s;
  transform: scale(0.35)
}
.bubbles span.four{
  animation-delay: 6s;
  transform: scale(2.15)
}
.bubbles span.five{
  animation-delay: 7s;
  transform: scale(0.5)
}
.bubbles span.six{
  animation-delay: 4s;
  transform: scale(2.5)
}
.bubbles span.seven{
  animation-delay: 3
  transform: scale(1.5)
}
.bubbles span:before{
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 60px;
  width: 40%;
  transform: skew(45deg) translateX(150px);
  background: rgba(255, 255, 255, 0.15);
  animation: mirror 3s linear infinite;
}
@keyframes mirror {
  100%{
    transform: translateX(-450px);
  }
}
.bubbles span.one:before{
  animation-delay: 1.5s;
}
.bubbles span.two:before{
  animation-delay: 3.5s;
}
.bubbles span.three:before{
  animation-delay: 2.5s;
}
.bubbles span.four:before{
  animation-delay: 7.5s;
}
.bubbles span.five:before{
  animation-delay: 4.5s;
}
.bubbles span.six:before{
  animation-delay: 0.5s;
}
.bubbles span.seven:before{
  animation-delay: 6s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  STEP 3
&lt;/h2&gt;

&lt;p&gt;This code represents container's colour, Text input in the container , Colour Of the buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  z-index: 12;
  width: 360px;
  padding: 15px;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
  border-top: 1px solid rgba(255, 255, 255, 0.5);
  border-left: 1px solid rgba(255, 255, 255, 0.5);
}
.container input[type="text"]{
  width: 100%;
  height: 100px;
  margin: 0 3px;
  outline: none;
  border: none;
  color: #fff;
  font-size: 20px;
  text-align: right;
  padding-right: 10px;
  pointer-events: none;
  background: transparent;
}
.container input[type="button"]{
  height: 65px;
  color: #fff;
  width: calc(100% / 4 - 5px);
  background: transparent;
  border-radius: 12px;
  margin-top: 15px;
  outline: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.container input[type="button"]:hover{
  background: rgba(255, 255, 255, 0.1);
}```




&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>css</category>
    </item>
    <item>
      <title>Bottom navigation for mobile screens</title>
      <author>Ustariz Enzo</author>
      <pubDate>Tue, 26 Oct 2021 08:18:25 +0000</pubDate>
      <link>https://dev.to/ziratsu/bottom-navigation-for-mobile-screens-23mk</link>
      <guid>https://dev.to/ziratsu/bottom-navigation-for-mobile-screens-23mk</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let's learn how to create a &lt;em&gt;dead&lt;/em&gt; easy &lt;strong&gt;bottom navigation&lt;/strong&gt; for small screens!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8WS4BN2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jq83xeyx8bngmg2yipm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8WS4BN2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jq83xeyx8bngmg2yipm.png" alt="Navigation bar on the bottom of the screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nG_BFzE8Cgk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-html-structure"&gt;
  &lt;/a&gt;
  1. The HTML Structure.
&lt;/h2&gt;

&lt;p&gt;Create a navigation with your links. Here, I am using svg files that I organised in a folder called "ressources".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mobile-nav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bloc-icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/home.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bloc-icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/heart.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bloc-icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/magnifying-glass.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bloc-icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/plus.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bloc-icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/user.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-style-the-navigation-bar"&gt;
  &lt;/a&gt;
  2. Style the navigation bar.
&lt;/h2&gt;

&lt;p&gt;First, let's style the navigation bar at the bottom of the screen and make sure to space each icon evenly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.mobile-nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#F1F1F1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;65px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, center the icons horizontally and vertically in the navigation bar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.bloc-icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also need to adjust the size of your icons so that they're neither too small nor too big. I'll size them down like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.bloc-icon&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-add-a-media-query"&gt;
  &lt;/a&gt;
  3. Add a media query.
&lt;/h2&gt;

&lt;p&gt;Since this is a navigation bar only for mobile (or small screens), you need to add the following code so that the navigation will disappear for screens larger than 600 pixels.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.mobile-nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! It's &lt;em&gt;dead simple&lt;/em&gt; ;)&lt;/p&gt;

&lt;p&gt;However, if you have more links in your nav, a bottom navigation like this wouldn't really work. Another option would then be the &lt;strong&gt;hamburger menu&lt;/strong&gt;, but it's harder to use for average users, since they prefer a simpler nav like this. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;You could also mix the two!&lt;/em&gt; For instance, your first or last link could be a hamburger menu, and once you click on it it could slide the menu on the left or right side of the screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have fun coding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out my Youtube channel: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on my social medias:&lt;br&gt;
Instagram : &lt;a href="https://www.instagram.com/learn_to_create1"&gt;https://www.instagram.com/learn_to_create1&lt;/a&gt;&lt;br&gt;
TikTok : &lt;a href="https://www.tiktok.com/@learn_to_create"&gt;https://www.tiktok.com/@learn_to_create&lt;/a&gt;&lt;br&gt;
Twitter : &lt;a href="https://twitter.com/Learn_To_Create"&gt;https://twitter.com/Learn_To_Create&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you soon for other quick and easy tutorials !&lt;/p&gt;

&lt;p&gt;Enzo.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>mobile</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
