<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How should you prepare for your first interview as a developer? </title>
      <author>Ankur Tyagi</author>
      <pubDate>Thu, 01 Jul 2021 14:26:26 +0000</pubDate>
      <link>https://dev.to/tyaga001/how-should-you-prepare-for-your-first-interview-as-a-developer-3g79</link>
      <guid>https://dev.to/tyaga001/how-should-you-prepare-for-your-first-interview-as-a-developer-3g79</guid>
      <description>&lt;p&gt;Over the last few years, I‚Äôve mentored over 300+ students and working professionals on how to prepare for interviews to land their dream job. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-my-top-tips-on-how-to-prepare-for-your-first-interview"&gt;
  &lt;/a&gt;
  Here are my top tips on how to prepare for your first interview.
&lt;/h2&gt;

&lt;p&gt;Before your interview, you have to immensely prepare. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before you say a word in your interview, the recruiter will instantly notice if you have done your homework and practiced. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do all of the work upfront so that when you go into the interview, you‚Äôve already won.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do you need to do before your interview?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-do-your-research"&gt;
  &lt;/a&gt;
  1 - Do your research.
&lt;/h2&gt;

&lt;p&gt;15 - 30 minutes skimming the website is NOT research.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúOne of the biggest complaints of hiring managers is that many job interview candidates know very little about the company they‚Äôre interviewing for‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#2-remember-that-no-one-cares-about-you"&gt;
  &lt;/a&gt;
  2- Remember that no one cares about you.
&lt;/h2&gt;

&lt;p&gt;The recruiters have a job to do. &lt;/p&gt;

&lt;p&gt;They need to hire good talent that will positively help the company.&lt;/p&gt;

&lt;p&gt;They will look for below in you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are YOU going to be a good team player?&lt;/li&gt;
&lt;li&gt;Are YOU going to exceed at your position?&lt;/li&gt;
&lt;li&gt;Are YOU going to be the right fit for the company?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This mentality isn‚Äôt evil, it‚Äôs just life.&lt;/p&gt;

&lt;p&gt;But now you know the rules, let‚Äôs learn how to play the game.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-make-the-interview-a-conversation"&gt;
  &lt;/a&gt;
  3- Make the interview a conversation.
&lt;/h2&gt;

&lt;p&gt;"The biggest lesson I‚Äôve learned" in my career. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;People do business with people they love, trust, and respect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If they have the vibe that you are not trustworthy or that you‚Äôre not easy to work with,&lt;/p&gt;

&lt;p&gt;THEY WILL NOT HIRE YOU.&lt;/p&gt;

&lt;p&gt;End of story.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-time-for-the-show-now-interview-conversation"&gt;
  &lt;/a&gt;
  4- Time for the show now (Interview conversation)
&lt;/h2&gt;

&lt;p&gt;Real winners PLAN things out before they start.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To start acing interviews, write down 5 focus points in your life that you want to highlight about yourself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It could be your past work experience, volunteer work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-about-the-interviewer"&gt;
  &lt;/a&gt;
  5- Learn about the interviewer
&lt;/h2&gt;

&lt;p&gt;Read your email carefully which HR shared with you, you‚Äôll be told the names of the people who‚Äôll be on the interview panel.&lt;/p&gt;

&lt;p&gt;Google them and find their Twitter/LinkedIn account and search if they‚Äôve published any pages or articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-remember-to-breath"&gt;
  &lt;/a&gt;
  6- Remember to breath
&lt;/h2&gt;

&lt;p&gt;When I first started interviewing, I would get super nervous. &lt;/p&gt;

&lt;p&gt;I was so afraid of failing and it reflected in my interviews. &lt;/p&gt;

&lt;p&gt;I would speak really quickly and often rush to answer the question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs a secret I wish someone told me when I first started out&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You don‚Äôt always have to answer right away.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Slow down, take a breath &amp;amp; really spend time being thoughtful about your answer to the question. &lt;br&gt;
And even if you don‚Äôt know the answer, remember that it‚Äôs okay to say No.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-i-dont-know"&gt;
  &lt;/a&gt;
  7- I don‚Äôt know
&lt;/h2&gt;

&lt;p&gt;Be prepared to say it. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don‚Äôt know the answer, don‚Äôt pretend as you do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;People will often read right through it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-know-your-own-resume"&gt;
  &lt;/a&gt;
  8- Know your own resume?
&lt;/h2&gt;

&lt;p&gt;Again, so obvious. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yet folks come into an interview not having looked at their resume in a while. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I've had people have to think a bit when I ask them about something right there on the resume they sent me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please give yourself some time to look at it before you arrive at the interview. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should also review it carefully when preparing stories to help you answer interview questions.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow your mentor  on Twitter üëâ &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;TheAnkurTyagi&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you would like to discuss about your career growth issues in detail with me 1-1, you can hire me on HireTheAuthor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hiretheauthor.com/theankurtyagi"&gt;Book 1-1 Call or Chat Subscription &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can buy me a beer if you feel generous. Happy coding!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ankurtyagi"&gt;BUY Me a Beer.&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>career</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Hand Wave Animation Using HTML &amp; CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Thu, 01 Jul 2021 14:13:51 +0000</pubDate>
      <link>https://dev.to/nikhil27b/hand-wave-animation-using-html-css-3klh</link>
      <guid>https://dev.to/nikhil27b/hand-wave-animation-using-html-css-3klh</guid>
      <description>&lt;p&gt;Hello Guys,&lt;/p&gt;

&lt;p&gt;Today I created an Amazing Hand Wave Animation. In this animation, I am using only HTML CSS to create animation.&lt;/p&gt;

&lt;p&gt;In this html I am using &lt;code&gt;a&lt;/code&gt; tag &amp;amp; &lt;code&gt;span&lt;/code&gt; tag and in the simple css to wave the hand emoji I'm use &lt;code&gt;transform: rotate&lt;/code&gt; so please checkout this post. I hope you find this useful like and save this post also comments about your thoughts and new ideas for a topic. For more content follow me on Instagram &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/qBmdayV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="instagram-position"&gt;
  &lt;iframe id="instagram-liquid-tag" src="https://www.instagram.com/p/CQTooauBwo2/embed/captioned"&gt;
  &lt;/iframe&gt;
  
&lt;/div&gt;


</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Five JS Libraries to Help you Build a Standout Personal¬†Website</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 01 Jul 2021 14:05:30 +0000</pubDate>
      <link>https://dev.to/codesphere/five-js-libraries-to-help-you-build-a-standout-personal-website-44ef</link>
      <guid>https://dev.to/codesphere/five-js-libraries-to-help-you-build-a-standout-personal-website-44ef</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;For web developers, personal websites can be a great way to stand out among the crowd. More than just serving as a way to host your resume and portfolio, the website itself can convey a lot about your creativity, ability to code, and design skills.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#here-are-five-libraries-that-can-help-your-personal-website-stand-out"&gt;
  &lt;/a&gt;
  Here are five libraries that can help your personal website stand out:
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#1-bootstrap"&gt;
  &lt;/a&gt;
  1. Bootstrap
&lt;/h3&gt;

&lt;p&gt;For web developers, a poorly designed personal website can do more harm than good. That's why it's helpful to use a design framework like Bootstrap to help make your website both responsive and aesthetically pleasing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getbootstrap.com/"&gt;https://getbootstrap.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you haven't worked with Bootstrap before, it is essentially a library full of CSS and Javascript-based templates, components, and design tools. It can save you a lot of time, especially when it comes to making your website responsive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-emailjs"&gt;
  &lt;/a&gt;
  2. EmailJS
&lt;/h3&gt;

&lt;p&gt;If you're looking to create a great contact form without too much backend work, look no further than EmailJS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.emailjs.com/"&gt;https://www.emailjs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;EmailJS is a super-intuitive tool for sending emails securely with vanilla Javascript. In addition, if all you are looking to do is set up a contact form, their free tier will be more than sufficient for your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-threejs"&gt;
  &lt;/a&gt;
  3. ThreeJS
&lt;/h3&gt;

&lt;p&gt;If you're a front-end developer and are up for the challenge, ThreeJS allows you to build and render beautiful 3D graphics with Javascript. When done well, this can make your personal website really stand out to hiring managers. Check out these personal websites that leveraged ThreeJS to make themselves more memorable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://richardmattka.com/"&gt;https://richardmattka.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bruno-simon.com/"&gt;https://bruno-simon.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://tkmh.me/"&gt;https://tkmh.me/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-seo-improvement-libraries"&gt;
  &lt;/a&gt;
  4. SEO Improvement libraries
&lt;/h3&gt;

&lt;p&gt;Ideally, you want your website to be a top result in google search rankings. A common problem that people face is that the web framework that they are using (such as create-react-app) doesn't prerender the site's content and therefore has trouble being crawled by Google's Web Crawlers. While Google's bots have gotten better over the years, this can still harm your SEO.&lt;/p&gt;

&lt;p&gt;While the James Smiths of the dev world might need to throw in the towel, there are plenty of great tools that can improve your website's SEO to ensure you're on the front page. Libraries like NextJS for React and NuxtJS for Vue use Server-Side Rendering(SSR) to increase performance for web crawlers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-sanityio%E2%80%8A%E2%80%8Aheadless%C2%A0cms"&gt;
  &lt;/a&gt;
  5. SanityIO‚Ää-‚ÄäHeadless¬†CMS
&lt;/h3&gt;

&lt;p&gt;If you have content that is frequently being edited or replicated, it may be helpful to have a CMS so you do not have to constantly dive into HTML and CSS to format content. SanityIO is a personal favorite, but there are countless headless CMS's on the market.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sanity.io/"&gt;https://www.sanity.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With a CMS, updating resumes, portfolios, and blogs can be seamless.&lt;/p&gt;




&lt;p&gt;What did we leave off the list? If you're proud of your personal website, drop the URL down below.&lt;br&gt;
Happy coding from your friends at &lt;a href="https://link.codesphere.com/AS"&gt;Codesphere&lt;/a&gt;, the next-generation cloud provider.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to create a chat similar to Discord with TalkJS</title>
      <author>Andrew</author>
      <pubDate>Thu, 01 Jul 2021 13:54:56 +0000</pubDate>
      <link>https://dev.to/talkjs/how-to-create-a-chat-like-discord-with-talkjs-4660</link>
      <guid>https://dev.to/talkjs/how-to-create-a-chat-like-discord-with-talkjs-4660</guid>
      <description>&lt;p&gt;In this article, we‚Äôll look at how we can use the &lt;a href="https://talkjs.com/"&gt;TalkJS chat API&lt;/a&gt; and &lt;a href="https://talkjs.com/resources/announcing-themesv2/"&gt;TalkJS Themes&lt;/a&gt; to mimic the appearance and functionality of Discord. Themes allow you to change the look and feel of user interfaces to match your site or app's particular style. Let‚Äôs set up our project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-project"&gt;
  &lt;/a&gt;
  Setting up our project
&lt;/h2&gt;

&lt;p&gt;There are a few steps we need to complete before we can start playing using themes. We need to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a simple conversation&lt;/li&gt;
&lt;li&gt;Create a role&lt;/li&gt;
&lt;li&gt;Create a theme for that role and activating that theme.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-simple-conversation"&gt;
  &lt;/a&gt;
  Creating a simple conversation
&lt;/h3&gt;

&lt;p&gt;First of all, we‚Äôll set up a simple conversation. Follow this &lt;a href="https://talkjs.com/dashboard/tG5nSzBD/docs/Getting_Started/index.html"&gt;Getting Started guide&lt;/a&gt;. However, You will also need to change the role of &lt;strong&gt;both&lt;/strong&gt; users from ‚Äúdefault‚Äù to ‚Äúdiscord‚Äù. Your end result will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const me = new Talk.User({
    id: "123456",
    name: "Alice",
    email: "alice@example.com",
    photoUrl: "https://demo.talkjs.com/img/alice.jpg",
    welcomeMessage: "Hey there! How are you? :-)",
    role: "discord"
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add some more users so we can have a realistic conversation. You will want to update the photoUrl of each user to an actual image address. You can find the free images &lt;a href="https://www.pexels.com/search/faces/?size=small"&gt;here&lt;/a&gt; to act as the profile pictures of your users. &lt;/p&gt;

&lt;p&gt;Another feature we should add is a group chat. Follow this &lt;a href="https://talkjs.com/docs/Features/Group_Chats/index.html"&gt;documentation&lt;/a&gt; to set up your group chat.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-our-role"&gt;
  &lt;/a&gt;
  Creating our role
&lt;/h3&gt;

&lt;p&gt;Now we need to create this role in our &lt;a href="https://talkjs.com/dashboard"&gt;dashboard&lt;/a&gt;. In the header of the dashboard click &lt;strong&gt;Roles&lt;/strong&gt; and add a role called ‚Äúdiscord‚Äù: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kfbHkbZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0u4sw5ab4h8wwpn1hi6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfbHkbZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0u4sw5ab4h8wwpn1hi6.PNG" alt="Create Role Button screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#activating-a-theme"&gt;
  &lt;/a&gt;
  Activating a theme
&lt;/h3&gt;

&lt;p&gt;Which theme is used when displaying the TalkJS UI depends on the current user's &lt;a href="https://talkjs.com/docs/Reference/Concepts/Roles.html"&gt;role&lt;/a&gt;. When a user has no role set, the TalkJS default theme will be used.&lt;/p&gt;

&lt;p&gt;To configure a theme for a role, &lt;a href="https://talkjs.com/dashboard"&gt;go to the dashboard&lt;/a&gt;, and click &lt;strong&gt;Roles&lt;/strong&gt;. Then, create or select a role, and scroll down to the "UI Theme" section:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oQQJ6Tm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0b37cacz71hepqp7hut.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oQQJ6Tm6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0b37cacz71hepqp7hut.PNG" alt="UI Theme section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, navigate to the &lt;a href="https://talkjs.com/dashboard/tG5nSzBD/themes"&gt;Theme Editor&lt;/a&gt; and click the &lt;strong&gt;Create new theme&lt;/strong&gt; button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UTwyGgKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0onn203fbn385iujs7ul.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UTwyGgKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0onn203fbn385iujs7ul.PNG" alt="Create new theme button screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a theme named ‚Äúdiscord‚Äù. To make this theme active, &lt;a href="https://talkjs.com/dashboard"&gt;go to the dashboard&lt;/a&gt;, and click &lt;strong&gt;Roles&lt;/strong&gt;. Then, create or select a role, and scroll down to the "UI Theme" section, and select your new theme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GB_b6_p9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxsm322mlm6ux0vwn9om.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GB_b6_p9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxsm322mlm6ux0vwn9om.PNG" alt="Selecting your theme image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Run your program to ensure it works. After all of this work you should have a chat resembling  the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8nKUftKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dq0ur6bennqqtp9ucv5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8nKUftKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dq0ur6bennqqtp9ucv5t.png" alt="Inbox conversation image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are now ready to start customizing our theme!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-a-chat-like-discord-using-talkjs-themes"&gt;
  &lt;/a&gt;
  Make a chat like Discord using TalkJS themes
&lt;/h2&gt;

&lt;p&gt;For those unfamiliar with Discord, it is a popular chatting application like Skype or Telegram. A chat in Discord looks like the following screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UXZw6USi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jqs2soaargolewqpxgr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXZw6USi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jqs2soaargolewqpxgr.jpg" alt="Screenshot of Discord"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will be using themes to make our existing TalkJS chat look like this. Let‚Äôs get started!&lt;/p&gt;

&lt;p&gt;First, go to the &lt;a href="https://talkjs.com/dashboard/tG5nSzBD/themes"&gt;Theme Editor&lt;/a&gt; and make sure you have our new ‚Äúdiscord‚Äù theme selected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YRc0YGRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebej3xngsc8gqz4e6mnr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YRc0YGRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebej3xngsc8gqz4e6mnr.PNG" alt="Image showing discord theme selected"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-the-fonts"&gt;
  &lt;/a&gt;
  Changing the fonts
&lt;/h3&gt;

&lt;p&gt;We will make our first set of changes in the layout section. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--no_qPPKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyeswfsx8ctyacyil04m.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--no_qPPKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iyeswfsx8ctyacyil04m.PNG" alt="Screenshot of layout section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on Global under Layout Settings and make the following changes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Change the value of &lt;strong&gt;webFontUrl&lt;/strong&gt; from &lt;a href="https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i&amp;amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese"&gt;https://fonts.googleapis.com/css?family=Open+Sans:400,400i,700,700i&amp;amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese&lt;/a&gt; to &lt;a href="https://fonts.googleapis.com/css?family=Uni+Sans:400,400i,700,700i&amp;amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese"&gt;https://fonts.googleapis.com/css?family=Uni+Sans:400,400i,700,700i&amp;amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Change the value of &lt;strong&gt;fontFamily&lt;/strong&gt; from &lt;em&gt;"Open Sans", "Helvetica", sans-serif&lt;/em&gt; to &lt;em&gt;"Uni Sans", "Helvetica", sans-serif.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Change the &lt;strong&gt;color&lt;/strong&gt; from &lt;em&gt;#111&lt;/em&gt; (black) to &lt;em&gt;#fcfcfc&lt;/em&gt; (a grey-ish white).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We‚Äôve updated the font to the exact font used by discord. You should now have the following values for the Global section:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27Qpf9SA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21p0g910b249jd6d6xoi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27Qpf9SA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21p0g910b249jd6d6xoi.PNG" alt="Image of global settings section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs see what our app looks like now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pg3RTvX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7ddb96e2cngblu9rucq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pg3RTvX0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7ddb96e2cngblu9rucq.PNG" alt="Image showing chat inbox after settings change"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôve made it look worse! Don‚Äôt worry we‚Äôll fix this with the next set of changes. Discord is known for its dark theme, and use of purple and grey colors. Let‚Äôs update our theme to feature these darker colors. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-panel-colors"&gt;
  &lt;/a&gt;
  Changing Panel colors
&lt;/h3&gt;

&lt;p&gt;In the Panels section of Layout Settings, update the value of &lt;strong&gt;backgroundColor&lt;/strong&gt; to &lt;em&gt;#3d4454&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HzQA5iJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed2ujwm7857xujtnxwi0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HzQA5iJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed2ujwm7857xujtnxwi0.PNG" alt="Image showing panels settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In Discord, the panel header is the same color as the panel itself, separated by a black border.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DxYpr-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgo769xghcivn48753bp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DxYpr-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgo769xghcivn48753bp.PNG" alt="Example image of discord panel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will replicate this. In the Panel headers section of Layout Settings, make the following changes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Change the value of &lt;strong&gt;backgroundColor&lt;/strong&gt; from &lt;em&gt;#e7ecee&lt;/em&gt; to &lt;em&gt;#3d4454&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Change the value of &lt;strong&gt;borderBottomColor&lt;/strong&gt; from &lt;em&gt;transparent&lt;/em&gt; to &lt;em&gt;black&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We‚Äôll make similar changes to the Panel footer. In the Panel footers section of Layout Settings, change the value of &lt;strong&gt;backgroundColor&lt;/strong&gt; from &lt;em&gt;#e7ecee&lt;/em&gt; to &lt;em&gt;#3d4454&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l7vadRtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijun22366si11dwvotgi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l7vadRtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijun22366si11dwvotgi.PNG" alt="Image showing panel header and footer settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs see the effect of these changes by launching our application again:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jodWJT0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h40gwv3r9x287tdxhb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jodWJT0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h40gwv3r9x287tdxhb8.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, that looks much better! However, there are still some things we need to address. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The chat header is still the wrong color. We‚Äôve changed the Panel header but not the chat header, we need to change the chat header component.&lt;/li&gt;
&lt;li&gt;The message bubbles are not needed at all, Discord does not have these.&lt;/li&gt;
&lt;li&gt;The input box (showing the prompt &lt;em&gt;Say something&lt;/em&gt;) should be a light grey, not white.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let‚Äôs start making these improvements!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-the-chatheader-component-in-talkjs"&gt;
  &lt;/a&gt;
  Changing the ChatHeader component in TalkJS
&lt;/h3&gt;

&lt;p&gt;Under the Top-level Components section, click on ChatHeader. This will open the CSS for this component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OuKG9HQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu8l9oc6285tr79gdj5c.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OuKG9HQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu8l9oc6285tr79gdj5c.PNG" alt="Image showing top level components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Change the value of &lt;code&gt;background-color&lt;/code&gt; to &lt;em&gt;#3d4454&lt;/em&gt;. The final code should look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.header {
  display: flex;
  align-items: center;
  height: 4.5rem;
  background-color: #3d4454;
  flex-shrink: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Refresh the page to see our new and improved chat header:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aZ7-3e0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipa328q5ty6gimh4yte7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aZ7-3e0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipa328q5ty6gimh4yte7.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow, that looks much better! Next up, removing the message ‚Äúbubbles‚Äù that appear. The CSS distinguishes between messages sent by the other user, and messages sent by ‚Äúme‚Äù. We will have to make changes in both places to successfully format our chat to be like discord. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removing-the-chat-bubbles-in-talkjs"&gt;
  &lt;/a&gt;
  Removing the chat bubbles in TalkJS
&lt;/h3&gt;

&lt;p&gt;The properties of the messages are handled by the UserMessage component. Under the Top-level Components section, click on UserMessage. This will open the CSS for this component. Navigate to the .message class and make the following changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Delete &lt;code&gt;border-style: solid;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  Delete &lt;code&gt;border-color: #E7ECEE;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  Delete &lt;code&gt;background-color: #E7ECEE;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  Change color from &lt;code&gt;color: #111;&lt;/code&gt; to &lt;code&gt;color: #fff;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After making these changes your final code should look like the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.message {
    white-space: normal;
    overflow: hidden;
    border-radius: 1.5rem;
    border-width: 1px;
    word-wrap: break-word;
    position: relative;
    display: inline-block;
    max-width: calc(100% - 6rem - 0.25rem - 0.25rem);
    color: #fff;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs see the effect this has on our chat:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tI-_wsoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0srz98m22h48ulswqiyr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tI-_wsoq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0srz98m22h48ulswqiyr.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fantastic! This is what we wanted. However, you can see the bubble still appears for the messages that we send. The message also appears on the other side of the chat. Discord displays all messages on the left side of the chat, so we need to change this. Let‚Äôs make these changes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To make all messages appear on the left side of the chat, open the UserMessage component and find the class &lt;code&gt;.message-row.by-me&lt;/code&gt;. Remove the line &lt;code&gt;flex-direction: row-reverse;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;In the UserMessage component, find the class &lt;code&gt;.by-me .message&lt;/code&gt;. Delete &lt;code&gt;border-color&lt;/code&gt; and &lt;code&gt;background-color&lt;/code&gt;. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Open our application again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkf3tOrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwt0zscb31dyn1tslcz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qkf3tOrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwt0zscb31dyn1tslcz1.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs more like it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-the-text-input-box-in-talkjs"&gt;
  &lt;/a&gt;
  Changing the text input box in TalkJS
&lt;/h3&gt;

&lt;p&gt;The next change concerns the input box (showing the prompt &lt;em&gt;Say something&lt;/em&gt;) should be grey, not white. To change this, select layout in the left pane and click on the Message field dropdown. Change the &lt;strong&gt;backgroundColor&lt;/strong&gt; and &lt;strong&gt;borderColor&lt;/strong&gt; to &lt;em&gt;#81858f&lt;/em&gt;. Change the &lt;strong&gt;color&lt;/strong&gt; to &lt;em&gt;#fcfcfc&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8lnCciNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j47dkrqc4wlpvxiq1gp5.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lnCciNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j47dkrqc4wlpvxiq1gp5.PNG" alt="Image showing Message settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs launch the application again, and see our new input box:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ReduYh9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cuprk3z3lagylpim7lbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReduYh9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cuprk3z3lagylpim7lbn.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great, this is what we wanted! The only change that remains is the selected conversation being that bright blue. On Discord, grey is used to show the selected conversation. Let‚Äôs make this change now.&lt;/p&gt;

&lt;p&gt;We can change the color of selected conversations by clicking on layouts in the left pane and choosing the Highlights dropdown. Change the &lt;strong&gt;backgroundColor&lt;/strong&gt; from &lt;em&gt;#1E60E1&lt;/em&gt; to &lt;em&gt;#81858f&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ryS7sAgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04yg1moy7eb7swtlihfy.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ryS7sAgL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04yg1moy7eb7swtlihfy.PNG" alt="Image showing Highlights dropdown settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs view the effect of these changes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2JPwPb5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvhxk717alychma9qrwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2JPwPb5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dvhxk717alychma9qrwj.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So far our chat inbox has been small, taking up only a portion of the screen. What if we wanted to make it bigger, and have it act as a full-screen application?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#making-the-talkjs-chat-inbox-bigger"&gt;
  &lt;/a&gt;
  Making the TalkJS chat inbox bigger
&lt;/h3&gt;

&lt;p&gt;The first thing that influences the size of the chat inbox is the div you instantiated to act as the container for the inbox. For example, when following the guide we used the following div:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!-- container element in which TalkJS will display a chat UI --&amp;gt;
    &amp;lt;div id="talkjs-container" style="width: 90%; margin: 30px; height: 500px"&amp;gt;
        &amp;lt;i&amp;gt;Loading chat...&amp;lt;/i&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see we‚Äôve set the width and height here. Change this code to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="talkjs-container" style="width: 100%; height: 100%"&amp;gt;
        &amp;lt;i&amp;gt;Loading chat...&amp;lt;/i&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our height and width will no longer be restricted. &lt;/p&gt;

&lt;p&gt;Go back to our Theme Editor. Click on ‚Äòlayout‚Äô in the left pane. We are concerned with two dropdowns under the Layout Settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Inbox feed panel - This is the panel on the left side that shows our conversations.&lt;/li&gt;
&lt;li&gt;  Inbox chat panel - This is the panel on the right side where we read and write to our conversations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Customize these heights as you see fit. For this example, I changed the &lt;strong&gt;maxWidth&lt;/strong&gt; of the Inbox chat panel from 420px to 1680px. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lvva9OPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7yp5br5iu1qp1kk3lyg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lvva9OPp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7yp5br5iu1qp1kk3lyg.png" alt="Image showing inbox chat panel settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Relaunch the application to view the effect of this change:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eB9MxVCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub405b6h3qffsqcz7v52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eB9MxVCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ub405b6h3qffsqcz7v52.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fantastic, it‚Äôs even closer to Discord! You can continue to remove margins and make panels even wider if you want the application to take up more of the screen.&lt;/p&gt;

&lt;p&gt;Another feature of Discord is how it always displays the usernames in the conversation. The default for TalkJS is to only show the user names of other people in group chats. Let‚Äôs update this user name setting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-always-show-user-names-in-a-talkjs-chat"&gt;
  &lt;/a&gt;
  How to always show user names in a TalkJS chat
&lt;/h3&gt;

&lt;p&gt;To have the usernames constantly showing in a TalkJS chat, click on the UserMessage component under the Top-level Components heading in the left pane. &lt;/p&gt;

&lt;p&gt;Find the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div t:if="{{ sender.isMe == false and conversation.others.length &amp;gt; 1 }}"
                 class="message-author"
                 style="color: {{ sender.id | random_color }}"&amp;gt;
                {{ sender.name }}
            &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see the conditions being checked, the default being to only show the usernames of other people in group chats. Change this by updating the code to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div t:if="{{ conversation.others.length &amp;gt; 0 }}"
                 class="message-author"
                 style="color: {{ sender.id | random_color }}"&amp;gt;
                {{ sender.name }}
            &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The new condition will show a username as long as there is a single user in a conversation. It doesn‚Äôt matter if it is a group chat or not.&lt;/p&gt;

&lt;p&gt;Let‚Äôs see the effect of this code change on our application:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QHqOyRCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r4lwouqhgovl9bhszwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QHqOyRCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4r4lwouqhgovl9bhszwz.png" alt="Image showing chat inbox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our usernames are always on display, in both 1-on-1 conversations and group chats. This is exactly what we wanted!&lt;/p&gt;

&lt;p&gt;There we have it, our final result! We will make no further changes in this post. We have gotten very close to the appearance and functionality of Discord by making some very simple changes to our existing theme. You can see the flexibility of themes and how they can be quickly configured to fit your needs. &lt;/p&gt;

</description>
      <category>chat</category>
      <category>api</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Git Merge vs Rebase</title>
      <author>Cihat G√ºnd√ºz</author>
      <pubDate>Thu, 01 Jul 2021 13:22:23 +0000</pubDate>
      <link>https://dev.to/jeehut/git-merge-vs-rebase-5afh</link>
      <guid>https://dev.to/jeehut/git-merge-vs-rebase-5afh</guid>
      <description>&lt;p&gt;&lt;strong&gt;An FAQ that explains and answers when to use which and¬†why.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There's a common discussion among developers about how teams should use &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; to make sure everyone is always up-to-date with the latest changes in the &lt;code&gt;main&lt;/code&gt; branch. The typical situation this question arises is when someone worked on a new branch and then once the work is done and ready to be merged, the main branch had changes in the meantime in a way that the work branch is outdated and now has &lt;strong&gt;merge conflicts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Obviously, they need to be resolved before the work branch can be merged. But the question is: &lt;em&gt;How&lt;/em&gt; should this situation be resolved? Should we &lt;em&gt;&lt;strong&gt;merge&lt;/strong&gt;&lt;/em&gt; the &lt;code&gt;main&lt;/code&gt; branch into the work branch? Or should we &lt;em&gt;&lt;strong&gt;rebase&lt;/strong&gt;&lt;/em&gt; the work branch onto the latest &lt;code&gt;main&lt;/code&gt; branch?&lt;/p&gt;

&lt;p&gt;In my opinion, there's only one correct answer to this question. From my experience, the main reason why so many discussions arise around this topic is that there's a lot of misunderstandings out there about how &lt;code&gt;merge&lt;/code&gt; and &lt;code&gt;rebase&lt;/code&gt; differ from each other in this context and a general lack of understanding, what a &lt;code&gt;rebase&lt;/code&gt; even is.&lt;/p&gt;

&lt;p&gt;So I created an FAQ for my team which tries to clarify things. Let me share:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-raw-merge-endraw-"&gt;
  &lt;/a&gt;
  What is a &lt;code&gt;merge&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;A commit, that combines all changes of a different branch into the current.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  What is a &lt;code&gt;rebase&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;Re-comitting all commits of the current branch onto a different base commit.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-main-differences-between-raw-merge-endraw-and-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  What are the main differences between &lt;code&gt;merge&lt;/code&gt; and &lt;code&gt;rebase&lt;/code&gt;?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;merge&lt;/code&gt; executes only &lt;strong&gt;one&lt;/strong&gt; new commit. &lt;code&gt;rebase&lt;/code&gt; typically executes &lt;strong&gt;multiple&lt;/strong&gt; (number of commits in current branch).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;merge&lt;/code&gt; produces a &lt;strong&gt;new&lt;/strong&gt; generated commit (the so called merge-commit). &lt;code&gt;rebase&lt;/code&gt; only moves &lt;strong&gt;existing&lt;/strong&gt; commits.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#in-which-situations-should-we-use-a-raw-merge-endraw-"&gt;
  &lt;/a&gt;
  In which situations should we use a &lt;code&gt;merge&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;merge&lt;/code&gt; whenever you want to add changes of a branched out branch &lt;strong&gt;back&lt;/strong&gt; into the base branch.&lt;/p&gt;

&lt;p&gt;Typically, you do this by clicking the "Merge" button on Pull/Merge Requests, e.g. on GitHub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-which-situations-should-we-use-a-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  In which situations should we use a &lt;code&gt;rebase&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;rebase&lt;/code&gt; whenever you want to add &lt;strong&gt;changes of a base branch&lt;/strong&gt; back to a branched out branch.&lt;/p&gt;

&lt;p&gt;Typically, you do this in &lt;code&gt;work&lt;/code&gt; branches whenever there's a change in the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-not-use-raw-merge-endraw-to-merge-changes-from-the-base-branch-into-a-work-branch"&gt;
  &lt;/a&gt;
  Why not use &lt;code&gt;merge&lt;/code&gt; to merge changes from the base branch into a work branch?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;The git history will include many &lt;strong&gt;unnecessary merge commits&lt;/strong&gt;. If multiple merges were needed in a work branch, then the work branch might even hold more merge commits than actual commits!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This creates a loop which &lt;strong&gt;destroys the mental model that Git was designed by&lt;/strong&gt; which causes troubles in any visualization of the Git history.&lt;/p&gt;

&lt;p&gt;Imagine there's a river (e.g. the "Nile"). Water is flowing in one direction (direction of time in Git history). Now and then, imagine there's a branch to that river and suppose most of those branches merge back into the river. That's what the flow of a river might look like naturally. It makes sense.&lt;/p&gt;

&lt;p&gt;But then imagine there's a small branch of that river. Then, for some reason, &lt;strong&gt;the river merges into the branch&lt;/strong&gt; and the branch continues from there. The river has now technically disappeared, it's now in the branch. But then, somehow magically, that branch is merged back into the river. Which river you ask? I don't know. The river should actually be in the branch now, but somehow it still continues to exist and I can merge the branch back into the river. So, the river is in the river. Kind of doesn't make sense.&lt;/p&gt;

&lt;p&gt;This is exactly what happens when you &lt;code&gt;merge&lt;/code&gt; the base branch into a &lt;code&gt;work&lt;/code&gt; branch and then when the &lt;code&gt;work&lt;/code&gt; branch is done, you merge that back into the base branch again. The mental model is broken. And because of that, you end up with a branch visualization that's not very helpful.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#example-git-history-when-using-raw-merge-endraw-"&gt;
  &lt;/a&gt;
  Example Git History when using &lt;code&gt;merge&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.stack.imgur.com/Oqqmm.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ilJ2xCcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/Oqqmm.png" alt="Example Git History when using  raw `merge` endraw "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note the many commits starting with &lt;code&gt;Merge branch 'main' into ...&lt;/code&gt; (marked with yellow boxes). They don't even exist if you rebase (there, you will only have pull request merge commits). Also note the many visual branch merge loops (&lt;code&gt;main&lt;/code&gt; into &lt;code&gt;work&lt;/code&gt; into &lt;code&gt;main&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-git-history-when-using-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  Example Git History when using &lt;code&gt;rebase&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.stack.imgur.com/0ZVla.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bv2tXqbc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/0ZVla.png" alt="Example Git History when using  raw `rebase` endraw "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Much cleaner Git history with much less merge commits and no cluttered visual branch merge loops whatsoever.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-there-any-downsides-pitfalls-with-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  Are there any downsides / pitfalls with &lt;code&gt;rebase&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;Yes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Because a &lt;code&gt;rebase&lt;/code&gt; moves commits (technically re-executes them), the commit date of all moved commits will be the time of the rebase and the &lt;strong&gt;git history loses the initial commit time&lt;/strong&gt;. So, if the exact date of a commit is needed for some reason, then &lt;code&gt;merge&lt;/code&gt; is the better option. But typically, a clean git history is much more useful than exact commit dates.&lt;/li&gt;
&lt;li&gt;If the rebased branch has multiple commits that change the same line and that line was also changed in the base branch, you might need to solve merge conflicts for that same line multiple times, which you never need to do when merging. So, on average, there's more merge conflicts to solve.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#tips-to-reduce-merge-conflicts-when-using-raw-rebase-endraw-"&gt;
  &lt;/a&gt;
  Tips to reduce merge conflicts when using &lt;code&gt;rebase&lt;/code&gt;:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Rebase often&lt;/strong&gt;. I typically recommend doing it at least once a day.&lt;/li&gt;
&lt;li&gt;Try to &lt;strong&gt;squash changes&lt;/strong&gt; on the same line into one commit as much as possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope this FAQ helps some teams out there. Like ‚ù§Ô∏è it if you liked it! üòâ&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was written &lt;strong&gt;by &lt;a href="https://twitter.com/Jeehut"&gt;Cihat G√ºnd√ºz&lt;/a&gt;&lt;/strong&gt;,&lt;br&gt;
Head of Mobile at &lt;strong&gt;&lt;a href="https://www.papershift.com/"&gt;Papershift&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>merge</category>
      <category>rebase</category>
      <category>beginners</category>
    </item>
    <item>
      <title>WebRTC ‚ûï Build Yet another Chatting appüí≠ but P2P/E2EEü§Ø.!!</title>
      <author>Kushagra Mehta</author>
      <pubDate>Thu, 01 Jul 2021 13:21:50 +0000</pubDate>
      <link>https://dev.to/kushagra_mehta/webrtc-build-yet-another-chatting-app-but-p2p-e2ee-1l7j</link>
      <guid>https://dev.to/kushagra_mehta/webrtc-build-yet-another-chatting-app-but-p2p-e2ee-1l7j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-does-this-title-mean"&gt;
  &lt;/a&gt;
  What does this title mean
&lt;/h1&gt;

&lt;p&gt;If by reading the title of this article you're thinking that we're going to build just a chatting app then you're thinking wrong, no we're notüòÖ. Hey-Hey.!!! We all have built some kind of chat app in our free time then why to built one more again. So before you leave, let me explain why We're not going to create just a chatting app and why it is different from what you have built in the past as it does not use any REST API, not even a well-known WebSocket. we're going to build something much better faster, which is End-To-End encrypted, don't need any server And its code is short to write(Size matters, and sometimes it should be small).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-thought-behind-why-im-writing-this-article"&gt;
  &lt;/a&gt;
  Some thought behind Why I'm writing this article
&lt;/h2&gt;

&lt;p&gt;So when I start searching about how to create any Real-time communication between two peers I didn't get many results. Everything was just hard to understand and not much help for a beginner. While searching one word was coming, again and again, it was WebRTC. So I want to understand what it is and how it works.&lt;/p&gt;

&lt;p&gt;The first thing I found out about it is that it is really hard to find good content over WebRTC and second misconception. I'm just focusing on the second one in this article. Most of us when start learning WebRTC think it is just related to Video/Audio streaming and it is only restricted to client-client connection because it is only present in the browser. But WebRTC is much more than Video/Audio it is something much greater and much dynamic. It is built over some great legendary protocols.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webrtc-101"&gt;
  &lt;/a&gt;
  WebRTC 101
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Just for a quick note I'm not going in depth how WebRTC work. If you're interested you can read &lt;a href="https://webrtcforthecurious.com/"&gt;WebRTC For The Curious&lt;/a&gt; book.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;WebRTC, short for Web Real-Time Communication, is both an API and a Protocol. The WebRTC API allows developers to use the WebRTC protocol. With WebRTC, you can add real-time communication capabilities to your application. The WebRTC API has been specified only for JavaScript defined by &lt;a href="https://www.w3.org/TR/webrtc/"&gt;W3C&lt;/a&gt; and Protocol defined By &lt;a href="https://datatracker.ietf.org/wg/rtcweb/documents/"&gt;IETF&lt;/a&gt;. It is just a bundle of different protocols. It is not just limited to Video/Audio it is much greater than that, you can also send text, binary or generic data. To increase your curiosity &lt;a href="https://webrtc.ventures/2021/02/webrtc-cloud-gaming-unboxing-stadia/"&gt;Cloud gaming is going to be build around WebRTC&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-feature-provided-by-webrtc"&gt;
  &lt;/a&gt;
  Some feature provided by WebRTC
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;By default Feature E2EE.&lt;/li&gt;
&lt;li&gt;Connect two users with no public IP (NAT traversal, ICE).&lt;/li&gt;
&lt;li&gt;Stay connected on Move(Auto-negotiation by ICE Restart).&lt;/li&gt;
&lt;li&gt;Connect without knowing IP(mDNS).&lt;/li&gt;
&lt;li&gt;No more headline blocking(By SCTP).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can understand WebRTC Lingo by clicking &lt;a href="https://bits.ashleyblewer.com/blog/2021/06/03/webrtc-common-lingo/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#lets-understand-how-webrtc-do-all-these-magics"&gt;
  &lt;/a&gt;
  Let's understand how WebRTC do all these magics.
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Signaling Offer/Answer&lt;/strong&gt; :- So let's understand this by an eg. I don't know you &amp;amp; you don't know me. We have no idea about each other than how we're going to communicate with and what they are going to communicate about. So by &lt;em&gt;Signaling&lt;/em&gt; we explain to each other, Hey man this is my address(NAT mapping) and this is the language(codec) I support, We can talk about Media(MediaStream) or some generic data(DataChannel), the man just chill and talk whatever you want I'm here for you. This is all done by sharing &lt;strong&gt;SDP&lt;/strong&gt; with each other.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Connecting&lt;/strong&gt;:- Now we know enough about each other. But the problem arises that we only know each other at a higher level in a networking term at the &lt;em&gt;application layer&lt;/em&gt;, we should know each other's limitations and find a better way to communicate at the &lt;em&gt;network layer&lt;/em&gt; that's why we share ICE candidates.&lt;a href="https://temasys.io/ice-and-webrtc-what-is-this-sorcery-we-explain/"&gt;Why we need ICE more here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;ICE candidate in layman's terms would be like hey this is my phone number, this is my email, my house address these all can be an ICE candidate. In simple terms, ICE candidate is just "These are some paths by which you can access me" it can be HostName(local Ip Addr), Server reflexive(NAT mapping), Relay(Proxy server/TURN server), etc.&lt;/p&gt;

&lt;p&gt;Because of ICE candidates, we can be stay connected on the move:- New ICE candidate as you move(Wifi/LTE). Switch to between better connection when present(Auto-negotiation by ICE Restart)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Securing&lt;/strong&gt;:-DTLS(TLS over UDP)+SRTP, Encryption over RTP. That mean now you have End to End Encryption(E2EE). No more man-in-middle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Communication&lt;/strong&gt;:- Now lets communicate, MediaCommunication or DataChannel whatever you want.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-build-chat-app-using-webrtc"&gt;
  &lt;/a&gt;
  Let's build Chat app using WebRTC
&lt;/h2&gt;

&lt;p&gt;In the chat app there will be two peer Local and Remote. We're going to use WebRTC API in browser.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/YMwcy2pjfZc7bqON1x/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/YMwcy2pjfZc7bqON1x/giphy.gif" alt="Build"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-initial-js-setup"&gt;
  &lt;/a&gt;
  Step 1:- Initial JS setup
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uIM-tV4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3gl1uy35dd2eu6s4a2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uIM-tV4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3gl1uy35dd2eu6s4a2t.png" alt="HTML"&gt;&lt;/a&gt;&lt;br&gt;
As we have this HTML now connect it with JavaScript and add some event to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;localmessageInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;local&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;localMessageArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;localmsg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;localmessageInput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;keyup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Enter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;addChildMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localMessageArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;localChannel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Get reference to Input element and message are.&lt;/li&gt;
&lt;li&gt;Add an event on input element whenever &lt;code&gt;ENTER&lt;/code&gt; is pressed.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Add message to text area, with &lt;code&gt;right&lt;/code&gt; align.&lt;/li&gt;
&lt;li&gt;Call some &lt;code&gt;localChannel.send&lt;/code&gt; function and pass our input value.&lt;/li&gt;
&lt;li&gt;clear the input value.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Everything is same for remote peer part of code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// config = {&lt;/span&gt;
&lt;span class="c1"&gt;//   iceServers: [&lt;/span&gt;
&lt;span class="c1"&gt;//     {&lt;/span&gt;
&lt;span class="c1"&gt;//       urls: ["stun:stun1.l.google.com:19302", "stun:stun2.l.google.com:19302"],&lt;/span&gt;
&lt;span class="c1"&gt;//     },&lt;/span&gt;
&lt;span class="c1"&gt;//   ],&lt;/span&gt;
&lt;span class="c1"&gt;//   iceCandidatePoolSize: 10,&lt;/span&gt;
&lt;span class="c1"&gt;// };&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;localPeer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;RTCPeerConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;remotePeer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;RTCPeerConnection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection"&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object which provides methods to connect to a remote peer, maintain and monitor the connection. In our setting config is &lt;code&gt;null&lt;/code&gt; as our project is running in local enironment if you are connecting two peer over internet then you can use the commented config.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-establishing-a-connection-signaling"&gt;
  &lt;/a&gt;
  Step 3 Establishing a connection: signaling:-
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Step define here are not proper way of signalling so please refer &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Perfect_negotiation"&gt;The WebRTC perfect negotiation pattern&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;localPeer&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createOffer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;localOffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocalDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localOffer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRemoteDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localDescription&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAnswer&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;remoteSDP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setLocalDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remoteSDP&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRemoteDescription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localDescription&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;So anyone can start the offering here localPeer start it by calling .&lt;code&gt;createOffer()&lt;/code&gt; this will return SDP of localPeer.&lt;/li&gt;
&lt;li&gt;We store &lt;code&gt;localOffer&lt;/code&gt; in the &lt;code&gt;localPeer&lt;/code&gt; by calling &lt;code&gt;setRemoteDescription&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now we can send the &lt;strong&gt;LocalDescription&lt;/strong&gt; by any method like webSocket, or REST API. but As our both the peer are present locally we'll directly set &lt;code&gt;setRemoteDescription&lt;/code&gt; for the &lt;code&gt;remotePeer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now &lt;em&gt;localPeer&lt;/em&gt; has its own &lt;em&gt;Description&lt;/em&gt; and &lt;em&gt;remotePeer&lt;/em&gt; has &lt;em&gt;Description&lt;/em&gt; of &lt;em&gt;localPeer&lt;/em&gt;, Now &lt;em&gt;remotePeer&lt;/em&gt; will create its own &lt;em&gt;Description&lt;/em&gt; by calling &lt;code&gt;createAnswer()&lt;/code&gt; which will create the &lt;em&gt;Description&lt;/em&gt; but also initiate the connection process.&lt;/li&gt;
&lt;li&gt;Same as &lt;code&gt;localOffer&lt;/code&gt; we can also share &lt;code&gt;remoteSDP&lt;/code&gt; by any proccess. Here we're just passing it to &lt;code&gt;localPeer&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now both the peer have &lt;em&gt;Description&lt;/em&gt; or knowledge about each other. Now they can start connection.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you didn't understand the proccess above then you can refer flow diagram from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#step-4-connecting"&gt;
  &lt;/a&gt;
  Step 4. Connecting:-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onicecandidate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;candidate&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addIceCandidate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onicecandidate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;candidate&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addIceCandidate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidate"&gt;&lt;code&gt;onicecandidate&lt;/code&gt;&lt;/a&gt; Is an event-handler which specifies a function to be called whenever the local ICE agent needs to deliver a message to the other peer through the signaling server. What it does share the Info of ICE candidate it found and share to other peer, other peer just add the candidate. By this WebRTC API will try every ICE candidate and establish the throght the optimal ICE Candidate. After this step complete our connection is established. üéâüéä.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-datachannel"&gt;
  &lt;/a&gt;
  Step 5. DataChannel:-
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;localChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localPeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createDataChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;chat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;remoteChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;localChannel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Got message at local side&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;addChildMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localMessageArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;remotePeer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ondatachannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;remoteChannel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;remoteChannel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Got msg at remote side&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;addChildMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;remoteMessageArea&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;After Connection is establish, By calling &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel"&gt;&lt;code&gt;createDataChannel&lt;/code&gt;&lt;/a&gt; on localPeer creates a new channel linked with the remote peer, over which any kind of data may be transmitted.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onmessage&lt;/code&gt; is an event handler which specifies a function which is called when the a meessage is sent over the DataChannel by other peer.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ondatachannel&lt;/code&gt; is an event handler which specifies a function which is called when an &lt;code&gt;RTCDataChannel&lt;/code&gt; is added to the connection by the remote peer calling &lt;code&gt;RTCPeerConnection.createDataChannel&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#success"&gt;
  &lt;/a&gt;
  Success ü§ùüèª
&lt;/h3&gt;

&lt;p&gt;We have build the simplest chatting app you can think of. You can find the whole code &lt;a href="https://github.com/KushagraMehta/Yet-Another-ChatApp"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gB8mkcwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivivp400txvn1b3hm9ti.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gB8mkcwA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ivivp400txvn1b3hm9ti.gif" alt="Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awesome-idea-implemented-over-webrtc"&gt;
  &lt;/a&gt;
  Awesome Idea implemented Over WebRTC
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.formant.io/en_US/98620-working-in-formant/teleoperate-your-robot"&gt;Control robot over internet on browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rtctunnel/rtctunnel"&gt;LiveShare type application from VScode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piepacker.com/"&gt;Cloud game, player can be all aroung the world. It'll recreate the experince like you're sitting on the crouch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://strivecast.com/"&gt;Better CDN, download one file in local area network and sharer data P2P&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mzyy94/ns-remote"&gt;Stream your Nintendo switch into Oculus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wiretrustee/wiretrustee"&gt;Secure P2P Wireguard VPN tunnel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nurdism/neko"&gt;Share browser with friends, watch movie, Shop or do whatever together&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ragnar-H/TelloGo"&gt;Control drone over browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxmcd/webtty"&gt;Terminal over Internet without any port-forwording, setting up a proxy-server or it can be behind firewall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#multiple-language-implementation"&gt;
  &lt;/a&gt;
  Multiple Language implementation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aiortc/aiortc"&gt;aiortc(python)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gstreamer.freedesktop.org/documentation/webrtc/index.html?gi-language=c"&gt;GStreamer's webrtcbin(C)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shinyoshiaki/werift-webrtc"&gt;werift(TypeScript)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pion/"&gt;Pion(Golang)‚ù§&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shiguredo"&gt;Shiguredo(Erlang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ipipel(Java)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rawrtc/rawrtc"&gt;rawrtc(C++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/webrtc-rs/webrtc"&gt;webrtc-rs(Rust)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awslabs/amazon-kinesis-video-streams-webrtc-sdk-c"&gt;AWS webRTC(C/Embedded)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Many More&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to find sustainable jobs and projects as a web developer in Germany</title>
      <author>Ingo Steinke</author>
      <pubDate>Thu, 01 Jul 2021 12:56:51 +0000</pubDate>
      <link>https://dev.to/ingosteinke/how-to-find-sustainable-jobs-and-projects-as-a-web-developer-389b</link>
      <guid>https://dev.to/ingosteinke/how-to-find-sustainable-jobs-and-projects-as-a-web-developer-389b</guid>
      <description>&lt;p&gt;One of the main reasons I wanted to work self-employed again was independence and freedom of choice. Working where and when, but most importantly how and for whom seemed appealing enough to quit my 9-to-5.&lt;/p&gt;

&lt;p&gt;Sustainable jobs, to me, are jobs that do not only pay my bills, but that are ethically and ecologically sustainable as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#high-standards-and-compromise"&gt;
  &lt;/a&gt;
  High Standards and Compromise üçèüçêüß∫
&lt;/h2&gt;

&lt;p&gt;Many employers seem to see themselves as modern and "green", eco-friendly companies. Proud about first steps towards sustainability, like the weekly fruit basket from a local organic farm, but maybe also driven by unscrupulous greenwashing marketing, you won't expect a lot of self-criticism.&lt;/p&gt;

&lt;p&gt;In consequence, as a web developer who favors ethical and ecological jobs, I keep getting a lot of work offers that simply do not match my standards. I am willing to make a compromise, but at least some aspects should match.&lt;/p&gt;

&lt;p&gt;This is especially true for mainstream business sites like LinkedIn that seem to attract a lot of recruiters who target the masses and don't care about collateral damage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#job-search-alternatives"&gt;
  &lt;/a&gt;
  Job Search Alternatives üîçüêï
&lt;/h2&gt;

&lt;p&gt;Alternative: use special job sites like &lt;a href="https://impactify.de/"&gt;Impactify&lt;/a&gt; or &lt;a href="https://www.greenjobs.de/"&gt;Greenjobs&lt;/a&gt; (German).&lt;/p&gt;

&lt;p&gt;You can also use job platforms that specialize in IT, like &lt;a href="http://app.honeypot.io/ref/aZzaqWYBd7DPoMwxVz4gAiGx"&gt;Honeypot&lt;/a&gt; and  &lt;a href="http://4scotty.com/beam/Yx9FCiGgWA3C64jBp"&gt;4Scotty&lt;/a&gt;, or freelancing sites like &lt;a href="https://www.freelance.de/Freiberufler/145774-Frontend-Web-Developer"&gt;Freelance&lt;/a&gt; or &lt;a href="https://www.freelancermap.de/freelancer-verzeichnis/profile/it/170185-profil-ingo-steinke-frontend-web-developer-aus-duesseldorf.html"&gt;Freelancermap&lt;/a&gt;. Once you tune your preferences, you might get some useful offers.&lt;/p&gt;

&lt;p&gt;All of them seem to focus on the German market, so you only compete with other developers who have to pay the same taxes and high German living costs, and you can check other profiles for daily and hourly rates to see if your own rates are within the normal limits.&lt;/p&gt;

&lt;p&gt;I also get occasional useful contacts via &lt;a href="https://stackoverflow.com/users/5069530/ingo-steinke"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have been using all of the above, and I should add the disclaimer, that the links to &lt;a href="http://4scotty.com/beam/Yx9FCiGgWA3C64jBp"&gt;4Scotty&lt;/a&gt; and &lt;a href="http://app.honeypot.io/ref/aZzaqWYBd7DPoMwxVz4gAiGx"&gt;Honeypot&lt;/a&gt; are affiliate links, so they might hopefully give me some financial compensation if someone registers for their service.&lt;/p&gt;

&lt;p&gt;In my personal experience, all of those are still much better for a green web developer than Xing or LinkedIn.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sprechen-sie-deutsch"&gt;
  &lt;/a&gt;
  Sprechen Sie Deutsch
&lt;/h2&gt;

&lt;p&gt;As a native speaker, I tend not to notice the language barrier. But even at jobs and companies where you don't need to speak any German, you might stumble upon code comments, chat messages or legal forms in German.&lt;/p&gt;

&lt;p&gt;So if you're an expat having plans to stay in Germany at least for some years, learn the language! It is hard, as I have been told, but it can also be funny and poetic, and it helps to boost your chances both professionally and personally if you speak the local language at least a little bit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unintentionally-amusing"&gt;
  &lt;/a&gt;
  Unintentionally amusing
&lt;/h2&gt;

&lt;p&gt;As most of those companies focus on their actual business, they have to rely on stock photography for marketing, which contradicts any effort to be modern and inclusive by using pictures full of stereotypes, like this one showing a bearded young man using a computer at the office:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-back-bearded-hipster"&gt;
  &lt;/a&gt;
  Welcome back, bearded hipster!
&lt;/h3&gt;

&lt;p&gt;"Willkommen zur√ºck!" (Welcome back!)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O6F4k6V---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dvtegpx5dyxie5iodvt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6F4k6V---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dvtegpx5dyxie5iodvt.png" alt="Stereotype stock photograph mentioned above"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Parts of this article have already been published in my personal weblog at &lt;a href="https://www.open-mind-culture.org"&gt;open-mind-culture.org&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>jobs</category>
      <category>stereotypes</category>
      <category>greenwashing</category>
      <category>sustainability</category>
    </item>
    <item>
      <title>The Engineer's Complete Guide to Legacy Code</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 01 Jul 2021 12:41:17 +0000</pubDate>
      <link>https://dev.to/alexomeyer/the-engineer-s-complete-guide-to-legacy-code-16gb</link>
      <guid>https://dev.to/alexomeyer/the-engineer-s-complete-guide-to-legacy-code-16gb</guid>
      <description>&lt;p&gt;We live in a world where progress is king - complete tasks, meet goals, commit more, deploy frequently, ship faster. But what happens when something is lurking in the codebase that‚Äôs holding you back? That‚Äôs right, legacy code. Let‚Äôs take a look at how you can deal with legacy code, once and for all.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This guide will cover the following topicsüëá&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is legacy code?&lt;/li&gt;
&lt;li&gt;The characteristics of legacy code&lt;/li&gt;
&lt;li&gt;The problem of legacy code and technical debt&lt;/li&gt;
&lt;li&gt;Tips and tools for working effectively with legacy code&lt;/li&gt;
&lt;li&gt;Legacy code migration and cultural shift&lt;/li&gt;
&lt;li&gt;Resources for dealing with legacy code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-legacy-code"&gt;
  &lt;/a&gt;
  What is legacy code?
&lt;/h2&gt;

&lt;p&gt;When we talk about legacy code, your first thought might be of old, obsolete code. Yes, it may be written for operating systems that are no longer supported. However, it may also mean code which is: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inherited code: it may be from another developer, team, or older software version.&lt;/li&gt;
&lt;li&gt;Code that the original developer no longer maintains.&lt;/li&gt;
&lt;li&gt;A code base that is no longer engineered but continually patched. &lt;/li&gt;
&lt;li&gt;Legacy code can also refer to unsupported operating systems, hardware and formats.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-characteristics-of-legacy-code"&gt;
  &lt;/a&gt;
  The characteristics of legacy code.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.ionos.com/digitalguide/websites/web-development/what-is-legacy-code/"&gt;Ionis characterises&lt;/a&gt; legacy code as ‚Äúthe antithesis of clean code which is easy to understand, maintain, and adapt. Legacy code is unwieldy, outdated, and messy, which can lead to numerous problems.‚Äù It‚Äôs typically resistant to bug finding through automated tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://understandlegacycode.com/blog/what-is-legacy-code-is-it-code-without-tests/"&gt;Nicolas Carlo&lt;/a&gt; calls legacy code code you‚Äôre not comfortable changing but also ‚Äúvaluable code you‚Äôre afraid to change‚Äù and ‚Äúthe code you need to change, and you struggle to understand.‚Äù He suggests that you may, in fact, be responsible for ‚Äúthat code you wrote because you can‚Äôt remember the hell you had in mind when you did. Yes, our past self often makes silly mistakes. (If you ever need a good reason for great documentation, this is it).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problems-of-legacy-code-and-technical-debt"&gt;
  &lt;/a&gt;
  The problems of legacy code and technical debt
&lt;/h2&gt;

&lt;p&gt;Sometimes legacy code exists for a reason. It may point to a team with a crazy high turnover, making little effort in their documentation. Or a team of more experienced developers who are comfortable with older languages. A company may keep legacy code due to competitive advantages over other businesses. They may fear that rewriting code may introduce new bugs or remove hidden functionality.&lt;/p&gt;

&lt;p&gt;However, legacy code may also operate in a black box that is less accessible to a broader development community, meaning insufficient quality improvement, security, and maintainability. When people leave, it may be hard to find new developers appropriately skilled to work with it. As time goes on, the code may struggle to work with new and emerging apps and hardware. The company risks falling behind and is drowning in technical debt. Do you hate legacy code?&lt;/p&gt;

&lt;p&gt;Ivo Lukaƒç did a survey which &lt;a href="https://netgen.io/blog/how-to-cope-with-legacy-code-and-technical-debt"&gt;revealed&lt;/a&gt; over half of the respondents would rather not work on it, and an additional 11% hate it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Z-XUkwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w37xr8al4ie3juqs8mrk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Z-XUkwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w37xr8al4ie3juqs8mrk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Specifically, their pain points are many, with spaghetti code and fear of breaking something the most common concerns followed by the frustration of sticking to depreciated technology. This survey offers an insight into the complexities of dealing with legacy code and explains some of the reasons developers prioritise other work.&lt;/p&gt;

&lt;p&gt;Intrinsic to legacy code is technical debt - each time the code changes hands, it needs more and more features and bug fixing, all of which is time-consuming and frustrating, and the amount of technical debt continues to grow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hI9g8XzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ag5szk05rbdt7o7fycg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hI9g8XzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ag5szk05rbdt7o7fycg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-and-tools-for-working-effectively-with-legacy-code"&gt;
  &lt;/a&gt;
  Tips and tools for working effectively with legacy code
&lt;/h2&gt;

&lt;p&gt;When working with legacy code, time and energy is precious and you need to know where to concentrate your efforts. Planning and purpose are critical - you need to know what can be changed and what to ignore. Fortunately, there‚Äôs plenty of tools available to make life easier:‚Äç&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#static-code-analysis%E2%80%8D"&gt;
  &lt;/a&gt;
  Static code analysis‚Äç
&lt;/h3&gt;

&lt;p&gt;Static code analysis is the process of debugging by examining source code before a program is run. Code is analyzed against a set (or multiple sets) of coding rules. Then you get a diagnosis report of any violations of these rules based on their severity. This helps you prioritise the most urgent or important tasks.&lt;/p&gt;

&lt;p&gt;In general, static code analysis is a good practice even beyond legacy code. It creates the opportunity to identify and eliminate code defects before code is pushed for functional QA, saving a lot of later pain and reducing technical debt. Some examples of static code tools:&lt;/p&gt;

&lt;p&gt;‚Ä¢ &lt;a href="https://www.grammatech.com/products/source-code-analysis"&gt;Code sonar&lt;/a&gt;&lt;br&gt;
‚Ä¢ &lt;a href="https://www.castsoftware.com/glossary/static-analysis-tool"&gt;CAST&lt;/a&gt;&lt;br&gt;
‚Ä¢ &lt;a href="http://www.klocwork.com/capabilities/static-code-analysis"&gt;Klocwork&lt;/a&gt;&lt;br&gt;
‚Ä¢ &lt;a href="https://www.sonarqube.org/"&gt;SonarQube‚Äç&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A lot of IDEs that are used for code refactoring already use static analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-refactoring-legacy-code"&gt;
  &lt;/a&gt;
  Code refactoring legacy code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.stepsize.com/blog/the-ultimate-engineers-guide-to-refactoring"&gt;Code refactoring&lt;/a&gt; is one way to deal with legacy code. It‚Äôs about overhauling code to make it more understandable, maintainable and adaptable through optimizing code, simplifying and merging variables and classes and rewriting command methods. &lt;/p&gt;

&lt;p&gt;As &lt;a href="https://martinfowler.com/aboutMe.html"&gt;Martin Fowler&lt;/a&gt;, author of two books on refactoring, explains:&lt;/p&gt;

&lt;p&gt;‚ÄùRefactoring is the process of changing a software system in such a way that it does not alter the external behavior of the code yet improves its internal structure. It is a disciplined way to clean up code that minimizes the chances of introducing bugs. In essence, when you refactor you are improving the design of the code after it has been written.‚Äù&lt;/p&gt;

&lt;p&gt;However, you can only begin refactoring once it is clear how the code works - and doesn‚Äôt work. The code is then optimized piece by piece. Any unnecessary code is removed or rewritten. Classes and variables in the code are simplified and merged. Command methods are adapted and rewritten. In the end, refactoring is basically a general overhaul of the legacy code. The resulting code is easier to understand, maintain, and adapt.&lt;/p&gt;

&lt;p&gt;Developers should test code after refactoring to check for any breaks. Continuous integration is useful as it enables you to revert to a previous build if something goes wrong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-context-to-your-code"&gt;
  &lt;/a&gt;
  Add context to your code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3hi3DiB"&gt;Stepsize VS Code&lt;/a&gt; and &lt;a href="https://bit.ly/3gZ6OeF"&gt;JetBrains extensions&lt;/a&gt; help Engineering teams gain actionable insights into their technical debt, including those caused by legacy code. Engineers can track debt, add bookmarks, and organise their TODOs in their code editor, plus see the impact of technical debt and prioritise it &lt;a href="https://bit.ly/3AdAPAo"&gt;in the webapp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZU7Y0PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3crkhnr721fl2fhq9cmd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZU7Y0PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3crkhnr721fl2fhq9cmd.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#legacy-code-migration-and-cultural-shift"&gt;
  &lt;/a&gt;
  Legacy code migration and cultural shift
&lt;/h3&gt;

&lt;p&gt;There‚Äôs increased interest in migrating legacy systems to low code development platforms. Sylvain Leroy wrote a succinct but in-depth &lt;a href="https://dzone.com/articles/how-to-do-a-legacy-software-migration-a-successful-1"&gt;guide to legacy software migration&lt;/a&gt; a few years back that‚Äôs worth a read. There are also practices like migrating desktop or on-premise data centres to the cloud and the shift from monoliths to microservices. While discussing all of these in great detail is beyond the scope of this article, it‚Äôs important to explore these trends in regard to cultural change and company culture:&lt;/p&gt;

&lt;p&gt;How do developers collaborate?&lt;br&gt;
 How is knowledge passed down from developer to developer?&lt;br&gt;
 What efforts are made to retain knowledge when someone leaves? &lt;br&gt;
What are the company standards for documentation and who ensures they are met? &lt;br&gt;
How does the company prioritise time spent dealing with technical debt? What incentives do they offer (especially important if everyone hates doing it: maybe they need to provide more time off or bring in specialists? &lt;br&gt;
How do you ensure that the new code is clean and error-free from here on? What about training and development?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-for-dealing-with-legacy-code"&gt;
  &lt;/a&gt;
  Resources for dealing with legacy code
&lt;/h2&gt;

&lt;p&gt;‚Ä¢ &lt;a href="https://www.youtube.com/watch?v=KjOyLKu4piM"&gt;4 Techniques to Work with Legacy Codebases&lt;/a&gt;‚ÄîA talk by Nicolas Carlo at the Managing Technical Debt Meetup.&lt;br&gt;
‚Ä¢ &lt;a href="https://blogs.oracle.com/javamagazine/refactoring-java-part-1-driving-agile-development-with-test-driven-development"&gt;Refactoring Java, Part 1: Driving agile development with test-driven development&lt;/a&gt;‚ÄîKata-based series by Oracle on refactoring basics to help set up a test-driven development environment.&lt;br&gt;
‚Ä¢ &lt;a href="http://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052"&gt;Working Effectively with Legacy Code&lt;/a&gt; by Michael Feathers.&lt;br&gt;
‚Ä¢ &lt;a href="https://timwise.co.uk/2020/07/09/approaches-to-refactoring-and-technical-debt/"&gt;Approaches to refactoring, technical debt and legacy code&lt;/a&gt;‚Äî Tim Wise has put together a great list of resources.&lt;/p&gt;

</description>
      <category>refactorit</category>
      <category>codequality</category>
      <category>agile</category>
      <category>tooling</category>
    </item>
    <item>
      <title>50 Great Websites for Web Developers!</title>
      <author>Rahul Khinchi</author>
      <pubDate>Thu, 01 Jul 2021 12:36:14 +0000</pubDate>
      <link>https://dev.to/rk7/50-great-websites-for-web-developers-27cc</link>
      <guid>https://dev.to/rk7/50-great-websites-for-web-developers-27cc</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[Hidden Tools] -&lt;br&gt;
&lt;a href="https://hiddentools.dev/"&gt;https://hiddentools.dev/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Music For Programming] -&lt;br&gt;
&lt;a href="https://musicforprogramming.net/"&gt;https://musicforprogramming.net/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Programming Language Convertor] -&lt;br&gt;
&lt;a href="https://ide.onelang.io/"&gt;https://ide.onelang.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[HTTP Cat] -&lt;br&gt;
&lt;a href="https://http.cat/"&gt;https://http.cat/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Iconscout] -&lt;br&gt;
&lt;a href="https://iconscout.com/"&gt;https://iconscout.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Zen Garden] -&lt;br&gt;
&lt;a href="http://www.csszengarden.com/"&gt;http://www.csszengarden.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[A List Apart] -&lt;br&gt;
&lt;a href="https://alistapart.com/"&gt;https://alistapart.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Code Project] -&lt;br&gt;
&lt;a href="https://www.codeproject.com/"&gt;https://www.codeproject.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Scotch] -&lt;br&gt;
&lt;a href="https://scotch.io/"&gt;https://scotch.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[TutsPlus] -&lt;br&gt;
&lt;a href="https://tutsplus.com/"&gt;https://tutsplus.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Creative Blog] -&lt;br&gt;
&lt;a href="https://www.creativebloq.com/"&gt;https://www.creativebloq.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Codrops] -&lt;br&gt;
&lt;a href="https://tympanus.net/codrops/"&gt;https://tympanus.net/codrops/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[MDN Web Docs] -&lt;br&gt;
&lt;a href="https://developer.mozilla.org/zh-CN/"&gt;https://developer.mozilla.org/zh-CN/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[The Odin Project] -&lt;br&gt;
&lt;a href="https://www.theodinproject.com/"&gt;https://www.theodinproject.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Code Wars] -&lt;br&gt;
&lt;a href="https://www.codewars.com/"&gt;https://www.codewars.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[WpSessions]-&lt;br&gt;
&lt;a href="https://wpsessions.com/"&gt;https://wpsessions.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Autor] -&lt;br&gt;
&lt;a href="https://cssauthor.com/"&gt;https://cssauthor.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Laracasts]-&lt;br&gt;
&lt;a href="https://laracasts.com/"&gt;https://laracasts.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Web Design News] -&lt;br&gt;
&lt;a href="https://www.webdesignernews.com/"&gt;https://www.webdesignernews.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[UX Movement] -&lt;br&gt;
&lt;a href="https://uxmovement.com/"&gt;https://uxmovement.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Gradient Magic] -&lt;br&gt;
&lt;a href="https://www.gradientmagic.com/"&gt;https://www.gradientmagic.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Trianglify] - &lt;br&gt;
&lt;a href="https://trianglify.io/"&gt;https://trianglify.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Tricks] -&lt;br&gt;
&lt;a href="https://css-tricks.com/"&gt;https://css-tricks.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Free Frontend] -&lt;br&gt;
&lt;a href="https://freefrontend.com/"&gt;https://freefrontend.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Code My UI] -&lt;br&gt;
&lt;a href="https://codemyui.com/"&gt;https://codemyui.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Reference] -&lt;br&gt;
&lt;a href="https://cssreference.io/"&gt;https://cssreference.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[HTML Reference] -&lt;br&gt;
&lt;a href="https://htmlreference.io/"&gt;https://htmlreference.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Frontend Mentor] -&lt;br&gt;
&lt;a href="https://www.frontendmentor.io/"&gt;https://www.frontendmentor.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Site Point] -&lt;br&gt;
&lt;a href="https://www.sitepoint.com/"&gt;https://www.sitepoint.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Free CSS] -&lt;br&gt;
&lt;a href="https://www.free-css.com/"&gt;https://www.free-css.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Awesome Python] -&lt;br&gt;
&lt;a href="https://pythonawesome.com/"&gt;https://pythonawesome.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Fun JavaScript Projects] -&lt;br&gt;
&lt;a href="https://fun-javascript-projects.com/"&gt;https://fun-javascript-projects.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Daily Dev] -&lt;br&gt;
&lt;a href="https://daily.dev/"&gt;https://daily.dev/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Dev Docs] -&lt;br&gt;
&lt;a href="https://devdocs.io/"&gt;https://devdocs.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[ShortCode Dev] -&lt;br&gt;
&lt;a href="https://shortcode.dev/"&gt;https://shortcode.dev/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[What Runs] -&lt;br&gt;
&lt;a href="https://www.whatruns.com/"&gt;https://www.whatruns.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[1LOC] -&lt;br&gt;
&lt;a href="https://1loc.dev/"&gt;https://1loc.dev/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Web Code Tools] -&lt;br&gt;
&lt;a href="https://webcode.tools/"&gt;https://webcode.tools/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Am I Responsive] -&lt;br&gt;
&lt;a href="http://ami.responsivedesign.is/"&gt;http://ami.responsivedesign.is/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Shape Divider] - &lt;br&gt;
&lt;a href="https://www.shapedivider.app/"&gt;https://www.shapedivider.app/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[Fancy Border Radius] -&lt;br&gt;
&lt;a href="https://9elements.github.io/fancy-border-radius/"&gt;https://9elements.github.io/fancy-border-radius/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Gradient] -&lt;br&gt;
&lt;a href="https://cssgradient.io/"&gt;https://cssgradient.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Clip Path] -&lt;br&gt;
&lt;a href="https://bennettfeely.com/clippy/"&gt;https://bennettfeely.com/clippy/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[CSS Layout] -&lt;br&gt;
&lt;a href="https://csslayout.io/"&gt;https://csslayout.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;30 Seconds Of Code -&lt;br&gt;
&lt;a href="https://www.30secondsofcode.org/"&gt;https://www.30secondsofcode.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Undraw -&lt;br&gt;
&lt;a href="https://undraw.co/"&gt;https://undraw.co/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Humaaans -&lt;br&gt;
&lt;a href="https://www.humaaans.com/"&gt;https://www.humaaans.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;W3 Layouts -&lt;br&gt;
&lt;a href="https://w3layouts.com/"&gt;https://w3layouts.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Templatemo -&lt;br&gt;
&lt;a href="https://templatemo.com/"&gt;https://templatemo.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tooplate -&lt;br&gt;
&lt;a href="https://www.tooplate.com/"&gt;https://www.tooplate.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>news</category>
      <category>webdev</category>
      <category>webpack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Running Weblogic Server when connected to VPN</title>
      <author>Ravi Nagubandi</author>
      <pubDate>Thu, 01 Jul 2021 12:17:20 +0000</pubDate>
      <link>https://dev.to/naguban123/running-weblogic-server-when-connected-to-vpn-1l4o</link>
      <guid>https://dev.to/naguban123/running-weblogic-server-when-connected-to-vpn-1l4o</guid>
      <description>&lt;p&gt;As part of my development work, I tried to run my Weblogic Server when I am connected to VPN network.&lt;/p&gt;

&lt;p&gt;The weblogic server failed with error saying:&lt;/p&gt;

&lt;p&gt;(thread=Cluster, member=n/a): Delaying formation of a new cluster; unicast networking appears to be inoperable on interface as this process isn't receiving even its own transmissions; consider forcing IPv4 via -Djava.net.preferIPv4Stack=true&amp;gt;&lt;/p&gt;

&lt;p&gt;We can resolve this error by setting a JAVA_OPTIONS in setDomainEnv.cmd file located in \bin folder. The setting is as follows:&lt;/p&gt;

&lt;p&gt;set JAVA_OPTIONS=%JAVA_OPTIONS% -Djava.net.preferIPv4Stack=true&lt;/p&gt;

&lt;p&gt;Now the weblogic server starts without any issue when connected to VPN Network.&lt;/p&gt;

&lt;p&gt;Happy Learning!!&lt;/p&gt;

</description>
      <category>weblogic</category>
      <category>vpn</category>
    </item>
    <item>
      <title>Debug Selenium Tests in Docker using VNC¬†Viewer</title>
      <author>Dilpreet Johal</author>
      <pubDate>Thu, 01 Jul 2021 12:04:32 +0000</pubDate>
      <link>https://dev.to/automationbro/debug-selenium-tests-in-docker-using-vnc-viewer-59nj</link>
      <guid>https://dev.to/automationbro/debug-selenium-tests-in-docker-using-vnc-viewer-59nj</guid>
      <description>&lt;p&gt;In the &lt;a href="https://dev.to/automationbro/selenium-docker-tutorial-4dkg"&gt;previous post&lt;/a&gt;, we learned how to integrate Selenium tests with Docker. In this tutorial, we will take a look at how to integrate VNC Viewer with Docker and debug Selenium tests in Docker using VNC Viewer. We will also learn why it's important to run tests through VNC Viewer as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-run-selenium-tests-in-docker-using-vnc%C2%A0viewer"&gt;
  &lt;/a&gt;
  Why run Selenium tests in Docker using VNC¬†viewer?
&lt;/h3&gt;

&lt;p&gt;Originally, when I was preparing this post, I was going to name the title "View Selenium Tests in Docker using VNC Viewer". Because I thought the goal is to be able to view the tests running in VNC.&lt;/p&gt;

&lt;p&gt;However, the main reason we want to view tests in VNC viewer is to be able to debug any test issues that are happening inside the Docker. Typically, when tests are being triggered inside Docker container, you are not able to see anything that's happening inside. But, with the help of the VNC viewer, you get a visual representation of exactly what's going on inside Docker which makes it easier to debug your test issues.¬†&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Install a VNC client&lt;/strong&gt;: the one I am using in this tutorial is the RealVNC&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Use Selenium Debug images&lt;/strong&gt;: to be able to see what's going inside the Docker container, you will need to use an image that has a VNC server installed. Any image that ends with &lt;code&gt;-debug&lt;/code&gt; will have a VNC server installed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Map external VNC port to the Docker VNC port (5900)&lt;/strong&gt;: when you will run the docker image you will need to map the local VNC port to Docker VNC port (5900)&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#run-selenium-standalone-debug-docker%C2%A0image%C2%A0"&gt;
  &lt;/a&gt;
  Run Selenium Standalone Debug Docker¬†image¬†
&lt;/h3&gt;

&lt;p&gt;Let's run the selenium/standalone-chrome-debug image and map the VNC port with it‚Ää-&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -d -p 4444:4444 -p 5900:5900 --shm-size=2g selenium/standalone-chrome-debug:3.141.59-20210607&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-p 4444:4444 is the port for your local machine mapping to Docker Selenium server port 4444&lt;/li&gt;
&lt;li&gt;-p 5900:5900 is the port for your local VNC server mapping to Docker VNC server&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#open-real-vnc%C2%A0client"&gt;
  &lt;/a&gt;
  Open Real VNC¬†client
&lt;/h3&gt;

&lt;p&gt;Now that we have a docker image running mapped to port 5900, we can open that port in VNC viewer. To do that, open up the RealVNC client and type in the URL‚Ää-‚Ää&lt;code&gt;127.0.0.1:5900&lt;/code&gt;, and hit Enter.¬†&lt;/p&gt;

&lt;p&gt;When prompted for a password, type &lt;code&gt;secret&lt;/code&gt; and continue.¬†&lt;br&gt;
VNC server pointed to port¬†5900&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-EAQGgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm3fb6feimdjb8wvhz2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-EAQGgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm3fb6feimdjb8wvhz2d.png" alt="realvnc"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#run-tests-in%C2%A0docker"&gt;
  &lt;/a&gt;
  Run tests in¬†Docker
&lt;/h3&gt;

&lt;p&gt;Now it's time to run tests in Docker, make sure your tests are pointed to port 4444 as that is what we have set up for our docker container (you can check out my previous post to learn more about that).¬†&lt;/p&gt;

&lt;p&gt;Once you will run your tests, you will notice the tests can be viewable in the VNC viewer. üôåüèº&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BiKuS90w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m37ib9b6fslp3prfti7c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BiKuS90w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m37ib9b6fslp3prfti7c.gif" alt="run tests in docker"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h4&gt;
  &lt;a href="#check-out-the-video-below-to-learn-more-about-how-to-execute-selenium-tests-in-docker-and-view-it-in-vnc-viewer-"&gt;
  &lt;/a&gt;
  Check out the video below to learn more about how to execute Selenium tests in Docker and view it in VNC Viewer ‚Äì
&lt;/h4&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SCHs3XMf1yY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üìß Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this as well as free access to a Private Facebook community&lt;/p&gt;

&lt;p&gt;üëç You can follow my content here as well - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/automationbro"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/automation-bro"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>javascript</category>
      <category>testing</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to make a share button html | Awesome button effect CSS | Modern web Coding Tutorial</title>
      <author>Modern Web</author>
      <pubDate>Thu, 01 Jul 2021 11:33:58 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-a-share-button-html-awesome-button-effect-css-modern-web-coding-tutorial-2app</link>
      <guid>https://dev.to/kunaal438/how-to-make-a-share-button-html-awesome-button-effect-css-modern-web-coding-tutorial-2app</guid>
      <description>&lt;p&gt;Hello, I am kunaal, glad you are here. Today we will see how to make share button for your website. We'll see how can we make a share options in HTML for our website.&lt;/p&gt;

&lt;p&gt;Share Button is very useful in this days as everything is online and everybody uses social media. Share button is used to enable sharing image, audio, link or anything. We'll make share options UI only in this article.&lt;/p&gt;

&lt;p&gt;So without wasting more time let's start. You can see the demo of the button in the video below or you can watch video for better understanding.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lSO6FvNCFLU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-code-this"&gt;
  &lt;/a&gt;
  Let's Code This
&lt;/h1&gt;

&lt;p&gt;So to start we need 3 files HTML, CSS and JS file. Create an &lt;code&gt;index.html&lt;/code&gt; file and paste this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"share-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-share-alt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"share-options"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;share&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"far fa-folder-open"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-whatsapp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-instagram"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-twitter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-facebook-f"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"social-media-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-linkedin-in"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;https://example.com/share&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"copy-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;copy&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is our share button structure now let's style this. For that create a &lt;code&gt;style.css&lt;/code&gt; file. Inside that code this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff7d7d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.share-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff7d7d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.share-options&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom-right-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.share-options.active&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FFA654&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#25D366&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#E4405F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1DA1F2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1877F2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.social-media-btn&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0A66C2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.copy-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.share-options.active&lt;/span&gt; &lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.share-options.active&lt;/span&gt; &lt;span class="nc"&gt;.social-media&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.share-options.active&lt;/span&gt; &lt;span class="nc"&gt;.link-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are done with styles also. Now we need JS to toggle our share button's active class. Now create &lt;code&gt;app.js&lt;/code&gt; and code this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shareBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.share-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shareOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.share-options&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;shareBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;shareOptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all We are done with our share button. Great work.&lt;/p&gt;

&lt;p&gt;Thank you for reading If you like the article show your support by following me. And if you have any doubts feel free to ask me in comments.&lt;/p&gt;

&lt;p&gt;Have a nice day.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#you-may-like-reading-these"&gt;
  &lt;/a&gt;
  You may like reading these.
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/kunaal438/navbar-in-css-how-to-make-3d-navigation-in-css-4g4d"&gt;üî•Awesome 3d navbar you have never seen it before üî•üî•&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/kunaal438/how-to-make-fully-working-login-form-with-database-full-backend-685"&gt;üî•üî•backend for login form. Easy to make fully working form&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.&lt;a href="https://dev.to/kunaal438/how-to-make-fully-animated-header-that-you-have-never-seen-before-38ic"&gt;Awesome animation üî•üî• you have never seen it before&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://dev.to/kunaal438/how-to-make-header-with-amazing-animations-pure-css-3n9"&gt;Awesome header design you have never seen it before&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kunaal438/share-button"&gt;Source Code&lt;/a&gt;, &lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Follow me on Instagram&lt;/a&gt;, &lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe my youtube channel&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>uiweekly</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
