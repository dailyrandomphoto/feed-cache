<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I made an app that shows you your keyboard and mouse usage (with a keyboard heatmap)</title>
      <author>Virej Dasani</author>
      <pubDate>Wed, 14 Jul 2021 14:00:17 +0000</pubDate>
      <link>https://dev.to/virejdasani/i-made-an-app-that-shows-you-your-keyboard-and-mouse-usage-with-a-keyboard-heatmap-532l</link>
      <guid>https://dev.to/virejdasani/i-made-an-app-that-shows-you-your-keyboard-and-mouse-usage-with-a-keyboard-heatmap-532l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-keystroke-count"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://virejdasani.github.io/KeystrokeCount/"&gt;Keystroke Count&lt;/a&gt;?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Keystroke Count is an open-source, desktop app that you can use to get data for your keystrokes!&lt;/li&gt;
&lt;li&gt;Keystroke Count keeps all your keystroke data locally stored and NO data including your keystrokes is ever collected.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rFWJ2cmRuBM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-what-the-app-looks-like"&gt;
  &lt;/a&gt;
  This is what the app looks like
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiqIsMrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iawlo5pn5iow59rgh6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiqIsMrw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0iawlo5pn5iow59rgh6g.png" alt="keystroke Count"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;After about 20 minutes of using it üëÜ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkCVFqOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyh8szrzw3ha68yskik.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkCVFqOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyh8szrzw3ha68yskik.png" alt="keystroke Count"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;After gaming on my laptop üëÜ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#how-is-it-made"&gt;
  &lt;/a&gt;
  How is it made?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Keystroke Count is made using ElectronJS&lt;/li&gt;
&lt;li&gt;It uses JavaScript, HTML and CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-star-on-the-github-repo-would-be-much-appreciated"&gt;
  &lt;/a&gt;
  A star ‚≠ê on &lt;a href="https://github.com/virejdasani/KeystrokeCount"&gt;the GitHub repo&lt;/a&gt; would be much appreciated!
&lt;/h2&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Let's do some animations in native Javascript</title>
      <author>Romain Trotard</author>
      <pubDate>Wed, 14 Jul 2021 13:59:54 +0000</pubDate>
      <link>https://dev.to/romaintrotard/let-s-do-some-animations-in-native-javascript-23jl</link>
      <guid>https://dev.to/romaintrotard/let-s-do-some-animations-in-native-javascript-23jl</guid>
      <description>&lt;p&gt;Did you ever wanted to do some animation in your application but didn't know how to do it.&lt;/p&gt;

&lt;p&gt;In this article we are gonna see how to throw particles at click, like in the gif below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--56E_sHiY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58lztrjd94dn3iy0uoh9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--56E_sHiY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58lztrjd94dn3iy0uoh9.gif" alt="Firework animation at click"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#elementanimate-api"&gt;
  &lt;/a&gt;
  Element.animate API
&lt;/h2&gt;

&lt;p&gt;To animate a DOM element, we have to call the function &lt;code&gt;animate&lt;/code&gt;. The function signature is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;domElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;keyframes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;keyframes&lt;/code&gt; are the parts of the animation. If you pass an array with a single Element, the initial position will be the actual position of the element. Otherwise it will be the first value in the &lt;code&gt;keyframes&lt;/code&gt; array.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If the initial position of the animation is different from the position in the DOM, there will be a glitch at the beginning or at the end of the animation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcl1CDTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsuex3l5asfgej41ccgx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcl1CDTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsuex3l5asfgej41ccgx.gif" alt="Animation glitch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; can be an integer that represents the duration of the animation or an object with multiple properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;duration&lt;/code&gt;: the duration of the animation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;iterations&lt;/code&gt;: the number of iteration of the animation (Infinity for an endless animation)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;delay&lt;/code&gt;: to put some delay to the animation&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#infinity-square"&gt;
  &lt;/a&gt;
  Infinity square
&lt;/h2&gt;

&lt;p&gt;In this part, we are going to make a circle move on a square:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;point 1: the initial point&lt;/li&gt;
&lt;li&gt;point 2: translation by the axe y from the point 1&lt;/li&gt;
&lt;li&gt;point 3: translation by the axes x and y from the point 1&lt;/li&gt;
&lt;li&gt;point 4: translation by the axe x from the point 1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We finally get the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's get our circle element&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Knowing the square 150px sides&lt;/span&gt;
&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="c1"&gt;// The initial position is the current one&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translateY(150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(150px, 150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translateX(150px)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// The final position is the current one&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;Infinity&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We finally get the following animation: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dZMR3gYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5r1m3u9r9yye432g65y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dZMR3gYK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5r1m3u9r9yye432g65y.gif" alt="Circle makes square animation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-code-the-click-firework"&gt;
  &lt;/a&gt;
  Let's code the click firework
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#add-element-dynamically"&gt;
  &lt;/a&gt;
  Add element dynamically
&lt;/h3&gt;

&lt;p&gt;For this example we will have to add element dynamically. Let's create a div on click:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we want to put some style on this element, we gonna add some inline styles with &lt;code&gt;element.style.myStyleProperty&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A list of all possible colors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get the position of the cursor in the document&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;border&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// The elements are in absolute position&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;absolute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// We want our cursor to be centered in the square&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(-50%, -50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Get a color randomly&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#animation"&gt;
  &lt;/a&gt;
  Animation
&lt;/h3&gt;

&lt;p&gt;Aright, currently we have a square that spawns under the mouse on click.&lt;/p&gt;

&lt;p&gt;Let's add some random diagonal animation to this square.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
      &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;1500&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice, it's working, but actually it's not perfect, because the square stays visible at the end of the animation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OuxfKF3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hhxkzyhi504yt891bxr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OuxfKF3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hhxkzyhi504yt891bxr.gif" alt="Problem of display at the end of animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Actually, we could just change the initialization of the &lt;code&gt;div&lt;/code&gt; and the animation to add the &lt;code&gt;border&lt;/code&gt; and &lt;code&gt;background-color&lt;/code&gt; during the animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
      &lt;span class="na"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
      &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
      &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="mi"&gt;1500&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, there is no more, display's problem, but if you look at the DOM the div stays. It can be a problem when we are going to do the fireworks with a lot of &lt;code&gt;div&lt;/code&gt;, the DOM will at each click increases.&lt;/p&gt;

&lt;p&gt;Luckily, &lt;code&gt;domElement.animate&lt;/code&gt; returns an animation, on which we can get a Promise which is resolved when the animation is finished. Let's just remove the dom element when the animation is ended:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;finished&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;createdElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also do this with an event handler &lt;code&gt;onfinish&lt;/code&gt; put on the animation:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onfinish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;createdElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#firework"&gt;
  &lt;/a&gt;
  Firework
&lt;/h3&gt;

&lt;p&gt;Now, let's code the easy part: create multiple particles (with a loop):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A list of all possible colors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="c1"&gt;// Defines the particle number&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PARTICLES_NUMBER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createParticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;30px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;border&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1px solid black&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// The elements are in absolute position&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;absolute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// We want our cursor to be centered in the square&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate(-50%, -50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Get a color randomly&lt;/span&gt;
  &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;COLORS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Math.random() - 0.5 returns integer between -0.5 and 0.5&lt;/span&gt;
        &lt;span class="na"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px) rotate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;520&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;deg)`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;// We want to reduce the opacity until 0&lt;/span&gt;
        &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="mi"&gt;1500&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Remove the particle at the end of animation&lt;/span&gt;
  &lt;span class="nx"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onfinish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get the position of the cursor in the document&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Create multiple particles&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;PARTICLES_NUMBER&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;createParticle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this little article, we've just seen how to do basic animations in javascript, with a nice firework animation on click, but the power is unlimited.&lt;/p&gt;

&lt;p&gt;Now it's your turn to play with animations :D&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/firework-animation-at-click-4ovk0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Want to see more ? Follow me on &lt;a href="https://twitter.com/romain_trotard"&gt;Twitter&lt;/a&gt; or go to my &lt;a href="https://rainbowapps.io/"&gt;Website&lt;/a&gt;. üêº&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>O que √© SCORM?</title>
      <author>meydele</author>
      <pubDate>Wed, 14 Jul 2021 13:47:32 +0000</pubDate>
      <link>https://dev.to/feygele/o-que-e-scorm-4il2</link>
      <guid>https://dev.to/feygele/o-que-e-scorm-4il2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-scorm"&gt;
  &lt;/a&gt;
  O que √© SCORM?
&lt;/h2&gt;

&lt;p&gt;SCORM √© um padr√£o internacional para e-cursos. Se o seu curso for publicado no formato SCORM, voc√™ pode ter certeza de que praticamente qualquer sistema de gerenciamento de aprendizagem (EaD) ir√° reconhec√™-lo.&lt;/p&gt;

&lt;p&gt;Padr√µes s√£o importantes em qualquer campo. Tomemos como exemplo a ind√∫stria cinematogr√°fica. Quando voc√™ compra um DVD, voc√™ tem certeza que ser√° capaz de assistir em qualquer DVD player: Toshiba ou Panasonic ‚Äî isso simplesmente n√£o importa. Isso √© poss√≠vel porque o DVD √© um padr√£o aceito; √© por isso que os est√∫dios de cinema n√£o t√™m que produzir diferentes tipos de discos para cada marca de player.&lt;/p&gt;

&lt;p&gt;Infelizmente, essa era a situa√ß√£o no e-learning no √≠nicio dos anos 2000: os cursos eram criados para uma plataforma. Um e-curso criado para um sistema n√£o funcionaria em outro. Se uma universidade mudasse o seu EaD, perderia toda a sua cole√ß√£o de cursos, bem como os milhares de d√≥lares gastos no seu desenvolvimento. Em 2001, o formato SCORM colocou o mercado de e-learning em ordem.&lt;/p&gt;

&lt;p&gt;De fato, SCORM √© uma lista de requisitos t√©cnicos. Esta lista nos diz como criar um curso que ir√° funcionar em qualquer plataforma ‚Äì h√° uma descri√ß√£o detalhada da estrutura do e-curso e dos princ√≠pios de sua intera√ß√£o com os EaDs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispringpro.com.br/blog/que-e-scorm"&gt;Ler mais&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>O que √© um LMS?</title>
      <author>meydele</author>
      <pubDate>Wed, 14 Jul 2021 13:42:25 +0000</pubDate>
      <link>https://dev.to/feygele/o-que-e-um-lms-28ce</link>
      <guid>https://dev.to/feygele/o-que-e-um-lms-28ce</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-um-lms"&gt;
  &lt;/a&gt;
  O que √© um LMS?
&lt;/h2&gt;

&lt;p&gt;Um LMS √© uma plataforma para aprendizagem digital. Suas principais caracter√≠sticas podem ser encontradas na abrevia√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;L ‚Äî Learning (Aprendizado)&lt;/strong&gt;. Com um LMS, voc√™ pode criar uma √∫nica fonte de &lt;a href="https://www.ispringpro.com.br/blog/como-criar-um-curso-online"&gt;cursos online&lt;/a&gt; e materiais de treinamento. Isso se tornar√° uma fonte √∫nica de conhecimento em sua √°rea, para que voc√™ possa manter e aumentar a expertise interna de sua empresa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;M ‚Äî Management (Gerenciamento)&lt;/strong&gt;. Voc√™ pode gerenciar cursos e alunos e at√© mesmo melhorar a sua pr√≥pria efici√™ncia.&lt;/p&gt;

&lt;p&gt;Ao contr√°rio dos servi√ßos de compartilhamento de arquivos, um LMS n√£o √© apenas um amontoado de arquivos; pelo contr√°rio, √© um sistema bem organizado onde voc√™ gerencia o processo de treinamento. Para iniciar o treinamento, basta adicionar colaboradores e atribuir cursos.&lt;/p&gt;

&lt;p&gt;Voc√™ contratou novos colaboradores recentemente? Envie-lhes convites para o curso de treinamento de integra√ß√£o. Est√° tendo problemas com vendas baixas? Pe√ßa a seus vendedores para praticar com clientes virtuais.&lt;/p&gt;

&lt;p&gt;Gra√ßas a fun√ß√µes como calend√°rio, voc√™ poder√° atribuir e gerenciar n√£o apenas o treinamento online, mas tamb√©m as sess√µes em &lt;a href="https://www.ispringpro.com.br/blog/sala-de-aula-invertida"&gt;sala de aula&lt;/a&gt;. Dessa forma, um LMS pode ser uma esp√©cie de app de tarefas projetado especialmente para alunos √† dist√¢ncia.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S ‚Äî Sistema&lt;/strong&gt;. Sistema de computador, para ser exato. Um LMS automatiza o trabalho mais chato e tedioso, como atribuir notas, processar estat√≠sticas e preparar relat√≥rios. Al√©m disso, voc√™ pode treinar seus colaboradores sem sair do escrit√≥rio, gerenciando todos os processos diretamente do seu computador de trabalho.&lt;/p&gt;

&lt;p&gt;Em outras palavras, um LMS √© como sua pr√≥pria universidade online. O sistema permite que voc√™ armazene e crie cursos online, fornece aos alunos acesso ao conte√∫do e ajuda a avaliar os resultados.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispringpro.com.br/blog/o-que-e-lms"&gt;Ler mais&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Styled Components 101 üíÖ Lecture 1: Introduction + Setup in a React Environment ‚öõÔ∏è</title>
      <author>_CODE</author>
      <pubDate>Wed, 14 Jul 2021 13:36:15 +0000</pubDate>
      <link>https://dev.to/underscorecode/styled-components-101-lecture-1-introduction-setup-in-a-react-environment-476c</link>
      <guid>https://dev.to/underscorecode/styled-components-101-lecture-1-introduction-setup-in-a-react-environment-476c</guid>
      <description>&lt;p&gt;Hello, everybody! üëã&lt;br&gt;
And welcome to the first lecture of the &lt;strong&gt;Styled Components 101 series&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this series, we will be thoroughly covering different topics related with Styled Components.&lt;/p&gt;

&lt;p&gt;Still don't know what Styled Components are? It seems like you're in luck because we start with the first lesson right now! üëá&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-are-styled-components"&gt;
  &lt;/a&gt;
  What are Styled Components? üíÖ
&lt;/h1&gt;

&lt;p&gt;Styled Components is a &lt;strong&gt;modern tool used to generate components&lt;/strong&gt; out of the most basic HTML elements, which also allows you to &lt;strong&gt;write your custom CSS styles&lt;/strong&gt; for them in JavaScript by making use of the &lt;em&gt;tagged template literals&lt;/em&gt; feature.&lt;/p&gt;

&lt;p&gt;Styled Components &lt;strong&gt;gets rid of the mapping between components and styles&lt;/strong&gt;, so, when declaring your CSS, what you're actually doing is creating a regular React component that has its own styles attached.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#installation-%F0%9F%96%A5"&gt;
  &lt;/a&gt;
  Installation üñ•
&lt;/h1&gt;

&lt;p&gt;If you use &lt;strong&gt;&lt;em&gt;npm&lt;/em&gt;&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you use &lt;strong&gt;&lt;em&gt;yarn&lt;/em&gt;&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#getting-styled-components-ready-to-work-with-react"&gt;
  &lt;/a&gt;
  Getting Styled Components ready to work with React ‚öõÔ∏è
&lt;/h1&gt;

&lt;p&gt;This is the best part: &lt;strong&gt;no extra configuration is needed to start using Styled Components with React&lt;/strong&gt;. In next lectures, we'll see how to configure Styled Components to get it to work with frameworks like Next.js and how to integrate them with SSR (&lt;em&gt;Server Side Rendering&lt;/em&gt;). But, for now, everything's ready on React side. Keep tuned to this series of Styled Components if you want to learn further üò∫&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-our-first-styled-component"&gt;
  &lt;/a&gt;
  Creating our first &lt;em&gt;styled&lt;/em&gt; component üê£
&lt;/h1&gt;

&lt;p&gt;There are a couple ways to define a &lt;em&gt;styled&lt;/em&gt; component. Personally, my favorite is to &lt;strong&gt;keep the component independent&lt;/strong&gt;, defined in its own file, as we regularly do with React components. But, although conceptually speaking, this is the best way of &lt;strong&gt;keeping an app properly modularized and making a good use of abstraction&lt;/strong&gt;, the approach of declaring a styled component within another component is widely extended as well. Not my favorite, but also valid. &lt;/p&gt;

&lt;p&gt;Our first &lt;em&gt;styled&lt;/em&gt; component will be a &lt;strong&gt;Button&lt;/strong&gt;. Let's see how we can define it using the Styled Components syntax:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: #7b4cd8;
   color: #fff;
   padding: 10px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in the example above, we're using plain CSS syntax inside of &lt;em&gt;backticks&lt;/em&gt; to make our styles understandable to JavaScript.&lt;/p&gt;

&lt;p&gt;And then, we just have to import our component wherever we want it to be rendered:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a styled button! üòº&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our first &lt;em&gt;styled&lt;/em&gt; button will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4SrliOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niao7kcx4r2e25f1vruo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4SrliOn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/niao7kcx4r2e25f1vruo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#styling-our-component-through-props"&gt;
  &lt;/a&gt;
  Styling our component through &lt;em&gt;props&lt;/em&gt; üíÅ‚Äç‚ôÇÔ∏è
&lt;/h1&gt;

&lt;p&gt;In the previous example, all the styles have been predefined by us and every rendered &lt;code&gt;StyledButton&lt;/code&gt; will have the exact same appearance. &lt;/p&gt;

&lt;p&gt;But, &lt;strong&gt;can we render the same type of component multiple times to create different components and apply different styles to them?&lt;/strong&gt; The answer is yes and what we're going to do to get this behavior is &lt;strong&gt;passing props&lt;/strong&gt; with custom values to our &lt;em&gt;styled&lt;/em&gt; button.&lt;/p&gt;

&lt;p&gt;Let's say we want to have three buttons with different background and text colors, but with the same padding, border radius and font size.&lt;/p&gt;

&lt;p&gt;Then, we're going to do something like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButtonWithProps.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   padding: 10px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's now call our three buttons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButtonWithProps&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ffc3c3"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#b6201e"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçì&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#ffdaca"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#d85d16"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçë&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#fff4c7"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#bb9922"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Button üçã&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButtonWithProps&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqi4a-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj7jv428wwt4s4m2aj0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqi4a-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xj7jv428wwt4s4m2aj0l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#styling-our-component-conditionally"&gt;
  &lt;/a&gt;
  Styling our component conditionally üíÅ
&lt;/h1&gt;

&lt;p&gt;Let's now have a look at how we can style our button component by adding some conditions.&lt;/p&gt;

&lt;p&gt;This time, let's say we want to have a different background color for our button depending on its type value, which will be passed in to the component through the &lt;em&gt;prop&lt;/em&gt; &lt;strong&gt;&lt;em&gt;buttonType&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then we should do the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttonType&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttonType&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;
   &lt;span class="s2"&gt;`background-color: #7b4cd8; color: #fff; font-size: 1.25rem;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="s2"&gt;`background-color: #ff31ca; color: #ffe6f9; font-size: 0.95rem;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
   padding: 10px;
   border: none;
   border-radius: 5px;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the prop &lt;em&gt;buttonType&lt;/em&gt; exists and has a value of &lt;em&gt;primary&lt;/em&gt;, then the component will get the first set of style properties. Otherwise, the second.&lt;/p&gt;

&lt;p&gt;Note that the style properties defined outside the condition block, &lt;strong&gt;remain the same for all components&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's now call our buttons:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt; &lt;span class="na"&gt;buttonType&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a Primary Button! üëÜ&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I am a different kind of button! üëá&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there we are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jKjQjuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl38wif2w5qtw4ztnpfs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jKjQjuV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl38wif2w5qtw4ztnpfs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#inheriting-styles-from-another-component"&gt;
  &lt;/a&gt;
  Inheriting styles from another component üë®‚Äçüëß‚Äçüë¶
&lt;/h1&gt;

&lt;p&gt;Even though the aforementioned method of passing style properties by using component props works well in every scenario, if our app starts to grow, we can find the process of creating components tedious and repetitive.&lt;/p&gt;

&lt;p&gt;And now's when &lt;strong&gt;&lt;em&gt;constructors&lt;/em&gt;&lt;/strong&gt; come to rescue: we can have a &lt;em&gt;supercomponent&lt;/em&gt;  (like a &lt;em&gt;superclass&lt;/em&gt;, making reference to inheritance in OOP ü§ì), which styles can be inherited by other components.&lt;/p&gt;

&lt;p&gt;This means that every &lt;em&gt;children&lt;/em&gt; component that inherit from the &lt;em&gt;supercomponent&lt;/em&gt; will have the supercomponent styles in addition to its own custom styles. &lt;/p&gt;

&lt;p&gt;Let's see how we can &lt;em&gt;connect&lt;/em&gt; them:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SuperButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
   color: #fff;
   width: 200px;
   height: 50px;
   border: none;
   border-radius: 5px;
   font-size: 1.25rem;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ChildrenButton.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SuperButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./SuperButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SuperButton&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`
   background-color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ChildrenButton&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/ChildrenButton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"deeppink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hotpink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"coral"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello! üëã &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ChildrenButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOBt2k2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o74t82cubwt62d71qmr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOBt2k2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o74t82cubwt62d71qmr3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#can-i-use-css-preprocessors-like-sass-or-less-to-write-my-styles-instead-of-plain-css"&gt;
  &lt;/a&gt;
  Can I use CSS preprocessors like SASS or LESS to write my styles instead of plain CSS?
&lt;/h1&gt;

&lt;p&gt;Not really. But you can still make use of their most common features. &lt;/p&gt;

&lt;p&gt;Styled Components is based on the paradigm &lt;strong&gt;&lt;em&gt;CSS-in-JS&lt;/em&gt;&lt;/strong&gt;, so, technically, we need to use plain CSS to define them. However, we can kinda &lt;em&gt;emulate&lt;/em&gt; the behavior of a preprocessor: Styled Components allows us to define variables or nest selectors, for example.&lt;/p&gt;

&lt;p&gt;The following snippet would be far correct in Styled Components:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledDiv.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
   p{
      font-family: 'Arial', sans-serif;
      font-size: 1.5rem;
      color: deeppink;
      &amp;amp;.primary{
         font-weight: bold;
      }
   }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And by calling it like this...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledDiv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledDiv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledDiv&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello from a Styled Div!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledDiv&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...this is what we get: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yk8VY4a_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsbcvd06qpg9ff9ex0kf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yk8VY4a_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dsbcvd06qpg9ff9ex0kf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This behavior is doable because Styled Components uses a preprocessor, called &lt;strong&gt;&lt;em&gt;stylis&lt;/em&gt;&lt;/strong&gt;, under the hood, so it supports &lt;strong&gt;scss-like syntax&lt;/strong&gt;, which is really cool for nesting and using pseudo-elements and pseudo-classes out of the box.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-that-means-i-can-also-add-a-nested-pseudoelement-to-my-styled-component-right"&gt;
  &lt;/a&gt;
  So, that means I can also add a nested pseudo-element to my &lt;em&gt;styled&lt;/em&gt; component, right? ü§î
&lt;/h1&gt;

&lt;p&gt;Absolutely yes.&lt;/p&gt;

&lt;p&gt;This time, we'll define a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element to append it some content. Let's take a step further and let's add that content based on a condition.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;StyledP.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="s2"&gt;`
   {$props =&amp;gt; props.before ? `&lt;/span&gt;
   &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="nx"&gt;b4cd8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${props.before}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;` : 
   `&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ff31ca&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="s2"&gt;`
   }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;StyledP&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/StyledP&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt; &lt;span class="na"&gt;before&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;CODE&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;I don't have a ::before üò¢&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;StyledP&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Et &lt;em&gt;voil√†&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOMUeWH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpnbau749jnumwwmmksm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOMUeWH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpnbau749jnumwwmmksm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If a &lt;em&gt;prop&lt;/em&gt; called &lt;em&gt;before&lt;/em&gt; is found, its value will be appended in front of the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element itself, and the component will also receive the specified text color. Otherwise, since the condition would never be satisfied, the only style property the component would get would be the color.&lt;/p&gt;




&lt;p&gt;And this is all for this first Styled Components 101 lecture! &lt;/p&gt;

&lt;p&gt;In next episodes, we'll keep delving into all the amazing features of Styled Components and how we can integrate them into our projects.&lt;/p&gt;

&lt;p&gt;I hope you found this article useful and I see you all in the next üëã&lt;/p&gt;




&lt;p&gt;üéâ Don't forget to follow &lt;a class="mentioned-user" href="https://dev.to/underscorecode"&gt;@underscorecode&lt;/a&gt;
 on &lt;a href="https://instagram.com/underscorecode"&gt;Instagram&lt;/a&gt; and &lt;a href="https://twitter.com/underscorecode"&gt;Twitter&lt;/a&gt; for more daily webdev content üñ•üñ§&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#and-last-but-not-least-a-quick-friendly-reminder-before-we-go"&gt;
  &lt;/a&gt;
  And last but not least... A quick friendly reminder before we go üòä
&lt;/h4&gt;

&lt;p&gt;We all know there are million ways to get things done when it comes to programming and development, and we're here to &lt;strong&gt;help and learn&lt;/strong&gt;, so, if you know another possible way to do what others are sharing (&lt;strong&gt;not better, not worse, just different&lt;/strong&gt;), feel free to share it if you feel like it, but, please, &lt;strong&gt;always be kind and respectful&lt;/strong&gt; with the author and the rest of the community. Thank you and happy coding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tamper Resistant Nature of a Blockchain ‚õì</title>
      <author>The Nerdy Dev</author>
      <pubDate>Wed, 14 Jul 2021 13:35:15 +0000</pubDate>
      <link>https://dev.to/thenerdydev/tamper-resistant-nature-of-a-blockchain-123i</link>
      <guid>https://dev.to/thenerdydev/tamper-resistant-nature-of-a-blockchain-123i</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, let us understand the &lt;strong&gt;Tamper Resistant Nature of a Blockchain&lt;/strong&gt;. This is the third part of my &lt;strong&gt;Blockchain Series&lt;/strong&gt; on Dev.  &lt;/p&gt;

&lt;p&gt;üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ ‚Üî üì¶ &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9C%8F-tamper-resistant-nature-of-a-blockchain-%E2%9B%93"&gt;
  &lt;/a&gt;
  ‚úè Tamper Resistant Nature of a Blockchain ‚õì
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--28J3Yrdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jr27o1cu2udviq4g9fl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28J3Yrdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3jr27o1cu2udviq4g9fl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every block üì¶ of the blockchain contains its own hash value and the hash of the previous block (&lt;strong&gt;previous block hash&lt;/strong&gt;) in the blockchain. These hash values chain the blockchain together in order in which the most recent block was made and goes all the way to the very first block that was created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AC58UORf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl5bvw7qfmt9h7uppdow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AC58UORf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl5bvw7qfmt9h7uppdow.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever the data of a block gets changed, the hash of the block needs to be &lt;strong&gt;re-computed&lt;/strong&gt; and this &lt;strong&gt;invalidates&lt;/strong&gt; the block.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AbfB-OeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgesngl9wjt5rgt7a7w2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AbfB-OeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgesngl9wjt5rgt7a7w2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now as a &lt;em&gt;consequence&lt;/em&gt; of this (hash of the block changing), it also changes the hash of the block that exists on the next block. This changes the data in that block as well changing the hash value and hence this block will also get invalidated too. This change of hash values will run all the way down to the set of the blocks effectively breaking the entire chain. This proves that blockchain is &lt;strong&gt;TAMPER PROOF&lt;/strong&gt; ! &lt;/p&gt;

&lt;p&gt;So this is it for the third article on Blockchain. Thanks for reading !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Jun 10 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üëâüèª Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>blockchaindeveloper</category>
      <category>100daysofcode</category>
      <category>blockchainengineer</category>
    </item>
    <item>
      <title>O que √© e-learning? Defini√ß√£o, exemplos e guia r√°pido</title>
      <author>meydele</author>
      <pubDate>Wed, 14 Jul 2021 13:23:18 +0000</pubDate>
      <link>https://dev.to/feygele/o-que-e-e-learning-definicao-exemplos-e-guia-rapido-4hbp</link>
      <guid>https://dev.to/feygele/o-que-e-e-learning-definicao-exemplos-e-guia-rapido-4hbp</guid>
      <description>&lt;p&gt;Desde cursos tradicionais por correspond√™ncia a treinamentos digitais abrangentes, o ensino √† dist√¢ncia percorreu um longo caminho e agora atingiu seu auge como e-learning. Hoje j√° n√£o √© uma novidade, mas sim uma ind√∫stria em crescimento. De acordo com estat√≠sticas da Ambient Insight, o mercado global de e-learning continuar√° a crescer 5% ao ano, e com o tempo substituir√° os formatos offline.&lt;/p&gt;

&lt;p&gt;O e-learning continua a ganhar terreno no setor empresarial. As empresas implementam-o para treinar seus colaboradores, agilizar os seus processos e estender seu alcance.&lt;/p&gt;

&lt;p&gt;Ent√£o o que √© e-learning em um contexto real e por que ele √© t√£o atraente? Vamos dar uma olhada.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-elearning"&gt;
  &lt;/a&gt;
  O que √© e-learning?
&lt;/h2&gt;

&lt;p&gt;Hoje, quando as pessoas falam ‚Äúe-learning‚Äù, elas est√£o se referindo a &lt;a href="https://www.ispringpro.com.br/blog/treinamento-corporativo"&gt;treinamento&lt;/a&gt; em qualquer dispositivo digital. Assistir a um v√≠deo educacional, ler um artigo interessante ou fazer um question√°rio ‚Äî tudo isso √© e-learning.&lt;/p&gt;

&lt;p&gt;Comparar e-learning com m√©todos de educa√ß√£o tradicional √© como comparar formatos de e-book com livros em papel. Assim como os textos digitais n√£o podem substituir a autenticidade de um livro real, o e-learning n√£o pode substituir a educa√ß√£o em larga escala. Entretanto, ele est√° sempre dispon√≠vel desde que voc√™ tenha seu dispositivo digital com voc√™, e assim se torna mais conveniente.&lt;/p&gt;

&lt;p&gt;A conveni√™ncia √© uma das principais raz√µes pelas quais as pessoas adoram o e-learning. Outra raz√£o √© que voc√™ pode personalizar sua experi√™ncia de aprendizagem com outras novidades, como a realidade aumentada e a realidade virtual (as pessoas adoram novas tecnologias!). Por exemplo, com cursos de RV, trabalhadores de armaz√©ns e locais de constru√ß√£o recebem treinamento de seguran√ßa, e os alunos de medicina aprendem a localizar ossos e vasos sangu√≠neos.&lt;/p&gt;

&lt;p&gt;Usamos o e-learning diariamente para nos desenvolvermos como indiv√≠duos. N√≥s lemos artigos, assistimos v√≠deos do YouTube e jogamos jogos em nossos smartphones para exercitar nossa mente. Empresas, desde pequenas startups a grandes empresas, tamb√©m utilizam o e-learning para &lt;a href="https://www.ispringpro.com.br/blog/e-learning-corporativo"&gt;treinar colaboradores&lt;/a&gt; e ajudar com processos internos. Mas voc√™ n√£o gostaria de saber como tudo come√ßou?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispringpro.com.br/blog/que-e-elearning"&gt;Ler mais&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to automatically clear old files from a folder on Linux</title>
      <author>Seth</author>
      <pubDate>Wed, 14 Jul 2021 13:15:40 +0000</pubDate>
      <link>https://dev.to/saluki/how-to-automatically-clear-old-files-from-a-folder-on-linux-4gmb</link>
      <guid>https://dev.to/saluki/how-to-automatically-clear-old-files-from-a-folder-on-linux-4gmb</guid>
      <description>&lt;p&gt;One of the greatest things about Linux is how easily you can automate it. It gives you a huge amount of flexibility and control over your system, and it allows you to offload all the mundane or repetitive tasks to the system.&lt;/p&gt;

&lt;p&gt;In this guide, I‚Äôll briefly show you how you can periodically clear old files and folders from a directory. I use this to clear down my downloads folder, but you could use it anywhere.&lt;/p&gt;

&lt;p&gt;You can view the guide here: &lt;a href="https://www.saluki.tech/2021/07/14/how-to-automatically-clear-your-downloads-or-any-folder-on-linux/"&gt;https://www.saluki.tech/2021/07/14/how-to-automatically-clear-your-downloads-or-any-folder-on-linux/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>automation</category>
    </item>
    <item>
      <title>I tracked every minute of my time for the last 4 months. Here are 7 totally unexpected results</title>
      <author>Bilaniuc Dragos</author>
      <pubDate>Wed, 14 Jul 2021 13:11:09 +0000</pubDate>
      <link>https://dev.to/dragosbln/i-tracked-every-minute-of-my-time-for-the-last-4-months-here-are-7-totally-unexpected-results-2dna</link>
      <guid>https://dev.to/dragosbln/i-tracked-every-minute-of-my-time-for-the-last-4-months-here-are-7-totally-unexpected-results-2dna</guid>
      <description>&lt;p&gt;A 30 minutes lunch break? Time entry. 12 minutes of arguing with mom? Time entry. 7 minutes of stalking my ex on Instagram? You guessed it!&lt;/p&gt;

&lt;p&gt;That was my life over the last 4 months, being my own time tracking cop while carrying out the most outrageous experiment of my life so far. The results amazed me in ways that I would never have expected, so I decided to write about them. Who knows, maybe you‚Äôre also going to find something of value in my journey.&lt;/p&gt;

&lt;p&gt;But first‚Ä¶&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-the-hell-made-me-do-it"&gt;
  &lt;/a&gt;
  What the hell made me do it?
&lt;/h1&gt;

&lt;p&gt;To be honest, it was a combination of frustration, guilt and fear‚Ää‚Äî‚Ääall generated by the fact that I kept setting big goals for myself, but never seemed to make any progress towards them. Time was passing, and I had nothing to show for it.&lt;/p&gt;

&lt;p&gt;All I had were vague reports at work, where ‚Äúworking‚Äù covered everything from writing code, to talking to people, to watching Russian slapping contests on youtube. &lt;/p&gt;

&lt;p&gt;I knew I had to do start tracking my time if I wanted to keep my sanity. And I‚Äôve seen how something casual/half-hearted would quickly become too vague to be of any use. If I wanted to do it, I had to go all-in.&lt;/p&gt;

&lt;p&gt;So‚Ä¶&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-exactly-did-i-do-it"&gt;
  &lt;/a&gt;
  How exactly did I do it?
&lt;/h1&gt;

&lt;p&gt;I used an app called Toggl to do all my tracking. I chose this specific app because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it‚Äôs available on all platforms and syncs very nicely between them&lt;/li&gt;
&lt;li&gt;it has an intuitive UI, with suggestions that become more and more accurate over time&lt;/li&gt;
&lt;li&gt;it allows for very fine customization and reporting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At first, I devised 7 main areas where all my entries would fall, using tags and colors to mark them in the app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Wak0pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1whxgy6oalqmzo09yjjo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Wak0pq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1whxgy6oalqmzo09yjjo.png" alt="areas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, I created some high-level projects that I knew I was already spending time on:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2TqGdl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmvgtnv0grk1n7x4rolj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2TqGdl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmvgtnv0grk1n7x4rolj.png" alt="projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the setup was done, I would simply start a new time entry, every time I would move from one activity to the other.&lt;/p&gt;

&lt;p&gt;One important note here was that, because I decided to go all-in, I had to be particularly careful not to have any entries ‚Äúcover up‚Äù unrelated things that I was doing. For example, if I would be writing code on my project and I‚Äôd receive a call, I‚Äôd have to create a separate time entry for it, even if it only took 5 minutes.&lt;/p&gt;

&lt;p&gt;This level of strictness was a bit taxing at the beginning, but after a while, Toggl‚Äôs UI came in very handy. I rarely had to create new entries. Most of the times when I‚Äôd switch to something else (even just short interruptions), I would just have to press ‚Äúcontinue‚Äù on a previous entry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xyXE9u7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed886sh38nmdoryvk4or.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xyXE9u7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ed886sh38nmdoryvk4or.png" alt="continue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the end of the week, here‚Äôs how my timetable would look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3i-JC3w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2hb3mi44c4z062mlafa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3i-JC3w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2hb3mi44c4z062mlafa.png" alt="timetable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now that the ‚Äúhow‚Äù is also out of the way, let‚Äôs move on to the exciting stuff. Here are the biggest changes I noticed, over these 4 months:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-drastically-improved-my-focus-and-productivity"&gt;
  &lt;/a&gt;
  1. Drastically improved my focus and productivity
&lt;/h1&gt;

&lt;p&gt;Yep, the biggest impact of this time tracking journey didn‚Äôt come in the form of a mind-blowing insight at the end of the week, when I was looking over my timetable. The biggest impact was in how I was spending my time &lt;em&gt;while I was doing the tracking.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At first, nothing big happened. But after a while, I found myself more and more often in an interesting situation. Whenever I was working and felt the need to ‚Äúzone out‚Äù by jumping ‚Äújust a bit‚Äù on youtube or Instagram, I‚Äôd find myself thinking ‚Äúnah, I don‚Äôt want to start a new entry now. I‚Äôll just get this thing done, and then take a bigger break for that‚Äù.&lt;/p&gt;

&lt;p&gt;And, more often than not, I wouldn‚Äôt even feel that need for youtube or Instagram anymore, once I actually finished the task. The feeling of accomplishment was enough to give me the refreshment I needed.&lt;/p&gt;

&lt;p&gt;This increase in focus sent my productivity through the roof. Yes, I‚Äôve always read and heard of how context switching is a very bad idea. But, until I tracked it down, I never knew how often I was doing it ‚Äî and I never knew that getting rid of it would make me get things done literally twice as fast! After seeing all this for myself, I felt like I somehow hacked my own life.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-saved-a-lot-of-time-from-unexpected-places"&gt;
  &lt;/a&gt;
  2. Saved a lot of time from unexpected places
&lt;/h1&gt;

&lt;p&gt;One of the most shocking insights that I had in the beginning, after looking at my reports for a week, was that I was spending over 20 hours a week on food-related activities (buying food, cooking, eating).&lt;/p&gt;

&lt;p&gt;Every day, 3 times a day, I would take some time off to cook. And, since eating healthy was always an important thing for me, I didn‚Äôt feel bad if it sometimes took a little longer. But I never knew I was doing the work of a part-time cook out there! At least if I‚Äôd learned to cook something more exciting than this boring salad:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QFhoffCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih3ep2rs57plb0ii97h1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QFhoffCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih3ep2rs57plb0ii97h1.jpg" alt="salad"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once I became aware of this, I automatically started thinking about how I could make it a bit more efficient. A simple thing that popped into mind was that, instead of cooking everything from scratch in each of the 3 breaks, I could simply prepare everything in the evening before, and have my food ready to go for the next day, with minimum adjustments.&lt;/p&gt;

&lt;p&gt;This trick solved all my cooking for the day in under 1 hour, instead of 2‚Äì3, which amounted to over 10 hours of saved time, per week. And the best part was that I didn‚Äôt have to sacrifice anything in terms of how healthy or tasty my food was!&lt;/p&gt;

&lt;p&gt;Such a simple solution. However, I would never have thought of it, if there wasn‚Äôt this table that was telling me straight to my face: ‚Äúhere‚Äôs how much time you‚Äôre actually spending on this thing‚Äù.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-formed-habits-amp-routines-much-easier"&gt;
  &lt;/a&gt;
  3. Formed habits &amp;amp; routines much easier
&lt;/h1&gt;

&lt;p&gt;Turns out time tracking helped with my habits and routines, as well, in two not-so-obvious ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If I would have the same entries at roughly the same hours, Toggl‚Äôs mobile app would start suggesting them, in those time intervals. This made my tracking way easier, and turned the clock into a kind of trigger for the habits I was trying to form:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zvxnn3yl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4xypkxk53w0xmoflige.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zvxnn3yl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4xypkxk53w0xmoflige.png" alt="suggestions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;There was a deep satisfaction when I would look at my weekly timetable and see all the entries nicely aligned. Here‚Äôs one of the weeks that I‚Äôm most proud of. Just look at how satisfying those morning entries look:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GeplErJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qh2d9wt03fpeuiqtl2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GeplErJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qh2d9wt03fpeuiqtl2h.png" alt="habits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It might sound trivial, but just these two simple tricks were enough to make me form and cement very helpful habits, without thinking too much about them.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-enjoyed-my-chill-time-more-than-ever"&gt;
  &lt;/a&gt;
  4. Enjoyed my ‚Äúchill time‚Äù more than ever
&lt;/h1&gt;

&lt;p&gt;Here‚Äôs something interesting. This experiment, which was chiefly meant to increase my productivity, had another very unexpected ‚Äî but very welcomed ‚Äî effect: it increased the quality of my ‚Äúchill time‚Äù, as well!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i8rANMYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h66gso3imtvopke017p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8rANMYk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h66gso3imtvopke017p.jpg" alt="chill"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Firstly, as I was doing my work much more efficiently and saving time from all kinds of unexpected places, I found myself with more and bigger blocks of time on my hands. That meant I could fit in some leisure activities that were more time-consuming ‚Äî but that I really enjoyed doing.&lt;/p&gt;

&lt;p&gt;Secondly, all this increased amount of ‚Äúchill time‚Äù came without the usual guilt I felt before, when I was ‚Äúchilling‚Äù by scrolling through the Instagram feed, while I knew I had to fix that stupid programming bug at work.&lt;/p&gt;

&lt;p&gt;This made me enjoy my free time like never before, and rekindle old passions like salsa &amp;amp; bachata ‚Äîpassions that I forgot how good they made me feel, amongst all this clutter of work and guilt and continuous distractions.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-made-better-decisions-overall"&gt;
  &lt;/a&gt;
  5. Made better decisions, overall
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gzoM50K7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/550qasv72f2vac0cs6w1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gzoM50K7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/550qasv72f2vac0cs6w1.jpg" alt="choices"&gt;&lt;/a&gt;&lt;em&gt;one of the toughest decisions in life&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since I was being as honest as I could with those time entries, weighing my decisions wasn‚Äôt that complicated anymore: I would look over my timetable, see exactly how much time I spent on something I decided to do, and look at how much I got out of it.&lt;/p&gt;

&lt;p&gt;This way, ‚ÄúIs it a good idea to write that article for my 23rd birthday?‚Äù became ‚ÄúIs it a good idea to write that article for my 23rd birthday, given the fact that last week I spent 11 hours, and got nowhere with it?‚Äù. Not so hard to see the issue, from that perspective.&lt;/p&gt;

&lt;p&gt;As a bonus, tracking my time solved another one of the biggest problems I had, in terms of decision making. I always had the tendency to overestimate my abilities and take on much more than I could actually handle. This obviously had some very bad consequences, like frustrating other people that were working with me.&lt;/p&gt;

&lt;p&gt;Well, once I had this sheet that was telling me ‚Äúthis is how much it actually takes you to do it‚Äù and ‚Äúthis is how much free time you have on your hands right now‚Äù, deciding whether I could or could not handle something new became a factual decision, rather than a whim of my arrogant ego.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-i-finally-felt-in-control-of-my-time"&gt;
  &lt;/a&gt;
  6. I finally felt in control of my time
&lt;/h1&gt;

&lt;p&gt;As I said in the beginning, the irreversible passing of time was one of the biggest sources of stress and anxiety for me. And, while I‚Äôm still having my fair share of existential crises about it, doing this experiment drastically reduced that stress and anxiety. The main reason was that, again,&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I finally felt in control of my time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes, I was still binge-watching cat videos on youtube, probably more than I should. But at least it was a conscious decision, rather than a reaction to some algorithms designed by smart people to make me mindlessly spend hours on end on their website. And this ‚Äúconscious decision‚Äù part was what made all the difference, for me.&lt;/p&gt;

&lt;p&gt;And the coolest thing was that I didn‚Äôt have to change anything in the way I was spending my time, in order to feel better about it. Simply having it noted down was enough to give me that empowering feeling of control.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-felt-more-tense-uneasy-and-guilty-at-first"&gt;
  &lt;/a&gt;
  7. Felt more tense, uneasy and guilty (at first)
&lt;/h1&gt;

&lt;p&gt;Surprise-surprise: this is not a silver bullet to shoot down all of life‚Äôs problems. It actually came with some not-so-nice consequences that I have to mention, if I am to paint an honest picture of my journey.&lt;/p&gt;

&lt;p&gt;First up, I became more tensed and uneasy, especially in the beginning. I think that‚Äôs not too unexpected ‚Äî just imagine having a cop on your back, 24/7, that sees every single thing your doing, and tracks it down on a sheet that‚Äôs gonna stare you in the face every Sunday. Quite a reason to feel uneasy‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uVHoqH9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bc514o3pa2fk2i8xcrxt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uVHoqH9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bc514o3pa2fk2i8xcrxt.jpeg" alt="police"&gt;&lt;/a&gt;&lt;em&gt;shoutout to Mr. policeman, for not arresting me when I randomly asked him to pose for my blog&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The other thing was guilt. Again, especially in the beginning. After the first few weeks, I was confronted with a hard truth: I was wasting time. Lots of it. And not in a vague way. I could actually count the hours I spent on things that were totally unproductive, projects that failed and times when I did something completely different than what I had to. Talk about pills that are hard to swallow‚Ä¶&lt;/p&gt;

&lt;p&gt;I eventually managed to keep those bad sides under control through other habits, like meditation. That being said, this journey was definitely not all fun and rainbows.&lt;/p&gt;




&lt;p&gt;So, that‚Äôs about it for my journey. Currently, I got so used to this system and it seems to work so well for me, that I‚Äôm gonna keep doing it ‚Äî as long as I‚Äôll be able to keep those negative sides under control.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#afterthought-its-not-as-hard-as-it-seems"&gt;
  &lt;/a&gt;
  Afterthought: it‚Äôs not as hard as it seems
&lt;/h1&gt;

&lt;p&gt;I‚Äôve been showing this article to some friends, to get some feedback before publishing it. A common response was: ‚ÄúWow, that‚Äôs so impressive! You must be so disciplined! I could never do that.‚Äù And while it tickled my ego to hear this, the truth is, it‚Äôs really not that hard.&lt;/p&gt;

&lt;p&gt;Yes, like all things, it requires effort in the beginning. But after you got it all set up and run it for a few days, it becomes pretty easy. 99% of the time, you‚Äôll just press ‚Äúcontinue‚Äù on a previous entry, which only takes 5 seconds. And since you‚Äôll have to do it dozens of times a day, it will become instinctive much sooner than the usual ‚Äú3‚Äì8 weeks to form a new habit‚Äù.&lt;/p&gt;

&lt;p&gt;Even now, my timer runs ‚ÄúBlog ‚Äî time tracking‚Äù for 9 minutes and 20 seconds. I don‚Äôt remember having made a conscious decision to start it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; tricks
&lt;/h1&gt;

&lt;p&gt;If you like the idea and consider trying it for yourself, here are some things I wish I knew when I started, and that I hope will help you in your journey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Try to be as honest as possible&lt;/strong&gt;. The benefits are gone if you find yourself scrolling through your Instagram feed, while your timer says ‚Äúpreparing yearly report‚Äù&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Keep it personal.&lt;/strong&gt; Don‚Äôt mix it up with any tracking software from work. Don‚Äôt tell anyone about it. Basically, don‚Äôt do anything that would make you feel even remotely uncomfortable about recording those 2 hours of binge-watching Japanese eating contests on youtube.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lS_awUER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rq6hgm2b4lwugw5nqfqk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lS_awUER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rq6hgm2b4lwugw5nqfqk.jpg" alt="private"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Keep it simple. As simple as possible.&lt;/strong&gt; Don‚Äôt overkill it with tags and projects (the way I did, in the beginning). You can always add those later. The whole system should be a pleasure to use, or you‚Äôll have trouble using it at all.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;One step at a time.&lt;/strong&gt; At first, don‚Äôt change anything in how you spend your time. Just get used to tracking down what you‚Äôre already doing. The main focus is to get used to pressing ‚Äúplay‚Äù every time you‚Äôre doing something new.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Be patient with yourself.&lt;/strong&gt; Once you start doing this in full honesty, you‚Äôll probably see that your time isn‚Äôt really spent the way you imagined. That‚Äôs an easy way for guilt to creep in. But don‚Äôt despair. Once you become aware of this, things will get better by themselves. And keep in mind that, just by trying it out, you‚Äôve already done something very courageous that‚Äôs a huge achievement in and of itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Tracking every minute of my time is, by far, the most effective thing I‚Äôve ever tried, in terms of becoming more focused, getting more done and improving the quality of my time.&lt;/p&gt;

&lt;p&gt;But, at the end of the day, this is just another way in which someone on this planet is trying to deal with the fact that life is hard. And if my trick doesn‚Äôt work for you, what will definitely work is keeping this healthy mindset that makes you read these kinds of articles, in the first place. Kudos to you, for keeping an open mind in the face of life‚Äôs hardships!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We‚Äôre all trying to make the most out of our time. Thank you for spending some of yours with me, today!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jpNx_Y73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vvoxex6a5xbfyjg3kz7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jpNx_Y73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vvoxex6a5xbfyjg3kz7.jpg" alt="light"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS: This is the first article I‚Äôve ever written, so I think you can imagine how anxious I am about it üò¨ Any though (positive or constructive), clap, comment, share, or feedback in any form would be very, very much appreciated!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>motivation</category>
    </item>
    <item>
      <title>How To Write Clean Code in Python</title>
      <author>Jerry Ng</author>
      <pubDate>Wed, 14 Jul 2021 13:09:55 +0000</pubDate>
      <link>https://dev.to/jerrynsh/how-to-write-clean-code-in-python-2pf3</link>
      <guid>https://dev.to/jerrynsh/how-to-write-clean-code-in-python-2pf3</guid>
      <description>&lt;p&gt;What exactly is ‚Äúclean code‚Äù? Generally speaking, clean code is code that is easy to understand and easy to change or maintain.&lt;/p&gt;

&lt;p&gt;As code is more often read than written, practice writing clean code is crucial in our career.&lt;/p&gt;

&lt;p&gt;Today, I am sharing some tips that I have gathered over the years while also giving some examples in Python. &lt;/p&gt;

&lt;p&gt;With that said, these principles should generally apply to most programming languages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Be consistent when naming things&lt;/li&gt;
&lt;li&gt;Avoid room for confusion when naming things&lt;/li&gt;
&lt;li&gt;Avoid double negatives&lt;/li&gt;
&lt;li&gt;Write self-explanatory code&lt;/li&gt;
&lt;li&gt;Do not abuse comments&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-name-things-properly"&gt;
  &lt;/a&gt;
  1. Name Things Properly
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#avoid-any-room-for-confusion"&gt;
  &lt;/a&gt;
  Avoid any room for confusion
&lt;/h3&gt;

&lt;p&gt;Despite being the oldest trick in the book, this is the simplest rule that we often forget. Before naming a folder, function, or variable, always asks ‚Äúif I name it like this, could it mean something else or confuse other people?‚Äù&lt;/p&gt;

&lt;p&gt;The general idea here is to always remove any room for confusion while naming anything.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# For example, you're naming a variable that represents the user‚Äôs membership:
&lt;/span&gt;
&lt;span class="c1"&gt;# Example 1
# ^^^^^^^^^
# Don't
&lt;/span&gt;&lt;span class="n"&gt;expired&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Do
&lt;/span&gt;&lt;span class="n"&gt;is_expired&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Example 2
# ^^^^^^^^^
# Don't
&lt;/span&gt;&lt;span class="n"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2021-04-17 03:25:37.403283'&lt;/span&gt;

&lt;span class="c1"&gt;# Do
&lt;/span&gt;&lt;span class="n"&gt;expiration_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2021-04-17 03:25:37.403283'&lt;/span&gt; &lt;span class="c1"&gt;# OR
&lt;/span&gt;&lt;span class="n"&gt;expiration_date_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2021-04-17 03:25:37.403283'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reason why &lt;code&gt;expired&lt;/code&gt; is a less ideal name is because &lt;code&gt;expired&lt;/code&gt; on its own is ambiguous. A new developer working on the project wouldn‚Äôt know whether &lt;code&gt;expired&lt;/code&gt; is a date or a boolean.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-consistent-with-naming"&gt;
  &lt;/a&gt;
  Be consistent with naming
&lt;/h3&gt;

&lt;p&gt;Maintaining consistency throughout a team project is crucial to avoid confusion and doubts. This applies to variable names, file names, function names, and even directory structures.&lt;/p&gt;

&lt;p&gt;Nothing should be named solely based on your individual preferences. Always check what other people already wrote and discuss it before changing anything.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# For example if the existing project names a Response object as "res" already:
&lt;/span&gt;
&lt;span class="c1"&gt;# Existing functions
# ^^^^^^^^^^^^^^^^^^
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;existing_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
  &lt;span class="c1"&gt;# Do something...
&lt;/span&gt;  &lt;span class="k"&gt;pass&lt;/span&gt; 

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;another_existing_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
  &lt;span class="c1"&gt;# Do something...
&lt;/span&gt;  &lt;span class="k"&gt;pass&lt;/span&gt; 

&lt;span class="c1"&gt;# Example 1
# ^^^^^^^^^
# Don't
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;your_new_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
  &lt;span class="c1"&gt;# Do something...
&lt;/span&gt;  &lt;span class="k"&gt;pass&lt;/span&gt; 

&lt;span class="c1"&gt;# Do
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;your_new_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
  &lt;span class="c1"&gt;# Do something...
&lt;/span&gt;  &lt;span class="k"&gt;pass&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#extra-tips-when-choosing-names"&gt;
  &lt;/a&gt;
  Extra tips when choosing names
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Variables are nouns (i.e.&lt;code&gt;product_name&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Functions that do something are verbs (i.e. &lt;code&gt;def compute_user_score()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Boolean variables or functions returning boolean are questions (i.e. &lt;code&gt;def is_valid()&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Names should be descriptive but not overly verbose (i.e. &lt;code&gt;def compute_fibonacci()&lt;/code&gt; rather than &lt;code&gt;def compute_fibonacci_with_dynamic_programming()&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#2-avoid-double-negatives"&gt;
  &lt;/a&gt;
  2. Avoid Double Negatives
&lt;/h2&gt;

&lt;p&gt;‚ÄúCan you make sure that you do not forget to not switch off the lights later?‚Äù&lt;/p&gt;

&lt;p&gt;Ugh. So, should I switch the lights off or not? Hang on, let me read that again.&lt;/p&gt;

&lt;p&gt;Let‚Äôs agree that a double negative is plain confusing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example to check if a user's membership is valid or not:
&lt;/span&gt;
&lt;span class="c1"&gt;# Don't
&lt;/span&gt;&lt;span class="n"&gt;is_invalid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;is_invalid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"User's membership is valid!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Do
&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"User's membership is invalid!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have to read it more than once to be sure, it smells.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-write-selfexplanatory-code"&gt;
  &lt;/a&gt;
  3. Write Self-Explanatory Code
&lt;/h2&gt;

&lt;p&gt;In the past, I remember being told that engineers should sprinkle comments everywhere to ‚Äúimprove code quality.‚Äù&lt;/p&gt;

&lt;p&gt;Those days are long gone. Instead, engineers need to write self-explanatory code that makes sense to people. For instance, we should try to capture a complicated piece of logic in a descriptive and self-reading variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Don't write long conditionals
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'admin'&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'moderator'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_cancelled&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'# Do something...'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Do capture them in many variables that reads like English
&lt;/span&gt;&lt;span class="n"&gt;is_meeting_scheduled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_cancelled&lt;/span&gt;
&lt;span class="n"&gt;has_meeting_started&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current_time&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start_time&lt;/span&gt;
&lt;span class="n"&gt;has_user_permission&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'admin'&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'moderator'&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_meeting_scheduled&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;has_meeting_started&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;has_user_permission&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'# Do something...'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#do-not-abuse-comments"&gt;
  &lt;/a&gt;
  Do not abuse comments
&lt;/h3&gt;

&lt;p&gt;Like code itself, comments can go out of date too.&lt;/p&gt;

&lt;p&gt;People often forget to update the comments as the code gets refactored. When this happens, comments themselves would indirectly become the root of the confusion.&lt;/p&gt;

&lt;p&gt;Whenever you feel the need to write a comment, you should always re-evaluate the code you have written to see how it could be made clearer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#examples-of-when-to-write-comments"&gt;
  &lt;/a&gt;
  Examples of when to write comments
&lt;/h3&gt;

&lt;p&gt;One of the scenarios where I would consider using comments is when I have to use slicing. This would beg questions like ‚ÄúWhy do we do it this way? Why not other indexes?‚Äù and so on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example of getting an email returned from a 3rd party API:
&lt;/span&gt;
&lt;span class="c1"&gt;# Example 1
# ^^^^^^^^^
# Do
&lt;/span&gt;&lt;span class="n"&gt;raw_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw_string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'|'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxsplit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# NOTE: raw_string e.g. "Magic Rock|jerry@example.com"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example of a function calling a random time.sleep():
&lt;/span&gt;
&lt;span class="c1"&gt;# Example 2
# ^^^^^^^^^
# Don't
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;make_xyz_api_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine you‚Äôre a new developer looking at the code above for the first time.&lt;/p&gt;

&lt;p&gt;The first thing that would cross my mind is ‚ÄúWhy are we randomly waiting two seconds for every request that we make?‚Äù&lt;/p&gt;

&lt;p&gt;It turns out the original developer who wrote the code just wanted us to limit our number of requests sent to the third-party API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Do
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_ids&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;make_xyz_api_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# NOTE: service 'xyz' has a rate limit of 100 requests/min, so we should slow our requests down
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Always put yourself in others‚Äô shoes (i.e. ‚ÄúHow would the others interpret my code?‚Äù). If you‚Äôre slicing or using a specific index from a list (i.e. &lt;code&gt;array[3]&lt;/code&gt;), no one would know exactly why you are doing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-apply-this-knowledge"&gt;
  &lt;/a&gt;
  How Do I Apply This Knowledge?
&lt;/h2&gt;

&lt;p&gt;No one is capable of writing clean code from day one. As a matter of fact, everyone starts by writing ‚Äúbad‚Äù or ‚Äúugly‚Äù code.&lt;/p&gt;

&lt;p&gt;Like most things in life, to be good at something, you have to keep practicing over and over again. You have to put in the hours.&lt;/p&gt;

&lt;p&gt;Besides practicing, here are the things that work for me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keep asking yourself questions like ‚ÄúIs there a better way of writing it? Is this confusing for others to read?‚Äù&lt;/li&gt;
&lt;li&gt;Take part in code reviews.&lt;/li&gt;
&lt;li&gt;Explore other well-written code bases. If you want some examples of well-written, clean, and Pythonic code, check out the Python &lt;a href="https://github.com/psf/requests"&gt;requests&lt;/a&gt; library.&lt;/li&gt;
&lt;li&gt;Talk to people, discuss or exchange opinions, and you will learn a lot more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Writing clean code is hard to explain to a lot of non-technical people because. For them, it seems to provide little to no immediate value to the business impact of the company.&lt;/p&gt;

&lt;p&gt;Writing clean code also takes up a lot of extra time and attention, and these two factors translate to costs for businesses.&lt;/p&gt;

&lt;p&gt;Yet, over a period of time, the effect of having clean code in a codebase is crucial for engineers. With a cleaner code base, engineers will be able to deliver code and deploy applications faster to meet business objectives.&lt;/p&gt;

&lt;p&gt;On top of that, having clean code is crucial so that new collaborators or contributors can hit the ground running faster as they start on a new project.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codequality</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to examine moles at home: Review of the personal mole tracker NOTA</title>
      <author>forktestlab</author>
      <pubDate>Wed, 14 Jul 2021 13:07:18 +0000</pubDate>
      <link>https://dev.to/forktestlab/how-to-examine-moles-at-home-review-of-the-personal-mole-tracker-nota-33da</link>
      <guid>https://dev.to/forktestlab/how-to-examine-moles-at-home-review-of-the-personal-mole-tracker-nota-33da</guid>
      <description>&lt;p&gt;NOTA mole tracker (&lt;a href="https://notamole.com/199?utm_sourse=dev"&gt;https://notamole.com/199?utm_sourse=dev&lt;/a&gt;) - this is another device for the study of moles and the diagnosis of skin cancer, which stands out in a special way among others. For example, a magnifying glass is not attached to the phone, but this is an independent device that uses bioimpedance technology for measurements, i.e. it literally penetrates the skin by 2 mm with a weak electrical pulse and measures the resistance of cells. &lt;/p&gt;

&lt;p&gt;Here I will make a digression: healthy and cancer cells have different resistance (impedance), which is recorded and transmitted to the application on the phone. Here the data is processed and the result is given - whether the mole is dangerous or not.&lt;br&gt;
Bioimpedance can also be found in smart scales that determine body composition, as well as fitness trackers that count calories.&lt;br&gt;
Yes, the device has a fairly high price - $300, but if you compare, for example, with an annual subscription to the SkinVision application, you get $25 versus $45 monthly. And at the same time, the application is installed only on one phone(not every device is suitable), takes up the lion's share of the device's memory and can be used by only one person. NOTA can measure the moles of all family members, and the application for it is free, supported by almost any device and takes up 50 MB of memory.&lt;/p&gt;

&lt;p&gt;After several months of use, I can share my impressions, as well as tell you how quickly moles get injured while being unprotected in the open sun.&lt;/p&gt;

&lt;p&gt;Filling and appearance&lt;br&gt;
Let's start with the fact that NOTA is a small black gadget that looks like a thick handle with a button, on one side of which there are removable heads with 4 electrodes, on the other - a charging connector. The case material is a pleasant-to-touch plastic covered with soft-touch, which prevents the device from sliding in your hand when measuring a mole.&lt;br&gt;
NOTA weighs a little more than 40 grams, takes up little space when carrying, so you can take it with you on long trips or business trips without fear of overweight.&lt;/p&gt;

&lt;p&gt;The kit includes a replaceable head in an individual velvet bag, a USB charging cable(which, by the way, can be replaced by charging from an iPhone), alcohol wipes and a velvet case for storing the device itself.&lt;/p&gt;

&lt;p&gt;Inside the device there is a board, the components of which are produced by the American company Texas Industry.&lt;br&gt;
The sensitive brass electrodes of the device's head, which record changes in the cells, are coated with gold to prevent corrosion and increase the service life. For convenience, the device has 2 heads - a large one for measuring flat or large moles and a small one for measuring nevi protruding above the surface of the skin.&lt;/p&gt;

&lt;p&gt;Cost.&lt;br&gt;
I propose to close this issue immediately. What you need to understand is that you are not buying another gadget, but the opportunity to detect cancer at an early stage and cure it. Even if you have insurance, getting an appointment with an oncoderatologist(especially in California) is still a quest, and your meeting can be scheduled in 4-5 months. You can use the services of applications that analyze moles using AI, but at the end of the review I will clearly show why this is pointless. And if you have more than 100 moles on your body, then using NOTA will pay for itself in the first month and will save you a lot of time and nerves, since you buy the device once and for a long time.&lt;/p&gt;

&lt;p&gt;Maintenance and technical specifications&lt;br&gt;
The NOTA is equipped with a 370 mAh lithium-ion battery, which is enough for an hour of active work, during which you can measure about 180 moles. If we talk about periodic use, then I charged the device only once in 3 months. Full charging via the USB type C connector takes 4 hours, so you can put the device on at night, and actively use it in the morning. One of the huge advantages is that if it is not possible to charge the device completely, and the mole needs to be measured here and now, then you can use the fast charging function: put NOTA to charge for 20 minutes, and then take measurements. This amount of charge is enough for 5-6 scans. You will not be able to use the device while charging.&lt;br&gt;
For the convenience of "communicating" with the device, there is an indicator light near the charging connector that flashes or lights up in different colors and means a particular state. For example, flashing yellow - charging is required, flashing blue-the device is looking for a Bluetooth connection, flashing green quickly - scanning is underway, and so on.&lt;br&gt;
It is required to store Nota, as well as one of the replaceable heads, in a special velvet case in a dry place. Using the device in the bathroom or near the water is possible, but undesirable. Also, you can not immerse the device in water or take measurements of the skin wet from water.&lt;br&gt;
The tracker is made of eco-friendly recyclable plastic.&lt;/p&gt;

&lt;p&gt;Appointment&lt;br&gt;
I should immediately note that this is not a medical device, but its results can be a step towards an early meeting with a dermatologist, which will help get rid of possible skin cancer at an early stage, when treatment is limited only to removing a mole and subsequent observation. I would also like to note that the bioimpedance method used by the NOTA itself was approved by the FDA as a method for non-invasive (i.e., without taking a mole sample - biopsy) detection of skin cancer/melanoma at an early stage. Therefore, I use the NOTA also as a 2-opinion after consulting a dermatologist. Here I want to note as a user: I like the fact that I can measure my moles at any time(for example, the nevus began to itch) and understand whether it is worth worrying about this and looking for an early appointment with a doctor or everything is fine.&lt;/p&gt;

&lt;p&gt;Application&lt;br&gt;
For NOTA to work, need a phone with the NOTA mole tracker application installed, which can be downloaded from the AppStore or Google Play, and Bluetooth.&lt;br&gt;
When I started using the app, I needed to create a personal account that will store all the surveys, and when I replace my phone, I will be able to transfer all the measurement data to a new device.&lt;br&gt;
All moles are stored as a list with brief information - the location of the mole, the time of the last scan, a reminder and an icon with a green or red dot-the result of the last examination. Moles can be sorted by the time of creation, the last scan, and so on.&lt;/p&gt;

&lt;p&gt;To view detailed information, as well as compare photos of moles and the results of all scans, need to click on the desired item from the list of nevi.&lt;/p&gt;

&lt;p&gt;On this screen, in the upper part, we can see the title, the date and time of the study, the number of measurements(here, for example, there are 3 of them)&lt;br&gt;
In the center we see a photo of a mole, and by the arrow to the side can see and compare the previous photos according to the ABCDE rule.&lt;br&gt;
In the lower left part of the screen there is an icon with a part of the body where the nevus is located, as well as 2 buttons: highlighted in green shows the measurement result without decoding, white makes it possible to create a new study of the same mole.&lt;br&gt;
I'll go back a little: there is a green notepad that lights up at the top of the screen. If click it, the result of the selected measurement will open with the possibility of entering feedback from the doctor.&lt;/p&gt;

&lt;p&gt;Here you can also put a reminder about repeated testing and read the result of the survey.&lt;br&gt;
I think that the theoretical part can be finished with this.&lt;/p&gt;

&lt;p&gt;The second part will be devoted to practice, i.e. I will show how the examination takes place and share the data of an interesting experiment from life, which shows how dangerous the sun is for an unprotected mole.&lt;/p&gt;

&lt;p&gt;II. Home examination of moles with the help of a NOTA and an experiment.&lt;/p&gt;

&lt;p&gt;In the first part, we have analyzed the theory, here will be an exclusively practical description of the use of the device. So, let's start with the introductory data of the subject: 30 years old, more than 150 moles on the body. I'm getting a bad tan, the skin type according to Fitzpatrick is 2. New moles appear periodically.&lt;br&gt;
The NOTA is needed to quickly determine whether everything is in order with the old moles and whether the new ones are not malignant.&lt;br&gt;
For an example of the work of the device and the application, I will make a measurement of the birthmark on the right leg, above the knee.&lt;/p&gt;

&lt;p&gt;To start, log in to the application and select the New mole item&lt;/p&gt;

&lt;p&gt;Next, a body map opens, where you can mark the location of the nevus. Gray dots are moles that are already in the application, green is a new mole.&lt;/p&gt;

&lt;p&gt;After clicking Save, the nevus examination process begins with entering the size. For this, I used a soft meter. I will make a digression - the size of the mole affects the number of measurements, but not the quality. If you do not have a ruler at hand, then you can enter the approximate dimensions of the nevus.&lt;/p&gt;

&lt;p&gt;The next screen is a photo of a mole. There is nothing new here - we point the camera at the nevus and take a photo.&lt;/p&gt;

&lt;p&gt;In the same screen, the tools for enlarging the mole appear. We save the photo and proceed to the next stage - connecting NOTA to the phone.&lt;/p&gt;

&lt;p&gt;Everything is simple here - you need to turn on Bluetooth on your phone and hold down the button on the device. While the Note is flashing blue, the device is being searched for, and then the device indicator switches to static blue.&lt;/p&gt;

&lt;p&gt;After connecting the NOTA, you can immediately see which head is connected. Click Done and proceed to scanning the nevus.&lt;/p&gt;

&lt;p&gt;A tip appears on the application screen - wipe the skin with an alcohol napkin and measure the skin next to the nevus. This will be a reference measurement, that is, it will determine how much the cells of the mole differ from the cells of healthy skin.&lt;br&gt;
An alcohol napkin in this case cleanses and slightly moisturizes the skin, making it more sensitive to the signal passing through the electrodes of the device.&lt;/p&gt;

&lt;p&gt;After the reference measurement, the application will offer to measure the mole itself. I also wipe it with an alcohol napkin and apply the NOTA with electrodes to the mole.&lt;/p&gt;

&lt;p&gt;The scanning process&lt;/p&gt;

&lt;p&gt;After about 10 seconds, I see a screen with the result - the mole is fine.&lt;/p&gt;

&lt;p&gt;The next screen provides a transcript, as well as the ability to enter feedback or set a reminder about the next scan.&lt;/p&gt;

&lt;p&gt;That's it, the process of measuring the mole is over and I got the result.&lt;/p&gt;

&lt;p&gt;And now, as promised, I will share the results of an interesting experiment and clearly show how dangerous the sun's rays are for open moles and how useless photo applications are.&lt;/p&gt;

&lt;p&gt;Everyone has heard about the dangers of ultraviolet radiation. And many people know that excessive exposure to the sun can cause skin cancer. But, any person believes that "this will not affect me/ I don't sunbathe/ this is for the benefit/ for the production of vitamin D/ I have a vacation" and everything like that.&lt;br&gt;
Therefore, I wanted to clearly show that even a short stay in the direct sun without protective equipment causes harm, which can be noticed with the help of NOTA.&lt;/p&gt;

&lt;p&gt;To do this, I take a device, an application and choose a mole that is initially healthy. The location is the upper part of the abdomen, that is, the mole is constantly hidden from the sun by clothing.&lt;/p&gt;

&lt;p&gt;Next, I packed my things and went to the place of the experiment - to the river, to take sun and river baths. At the time of collection, the UV-index application showed 6 points, that is, a person with my skin type (according to Fitzpatrick-2) can be in the open sun without protective equipment for no more than 50 minutes.&lt;/p&gt;

&lt;p&gt;It would seem that I will not do this, because the primary desire is to be in the water, and only then in the sun.&lt;/p&gt;

&lt;p&gt;...It took 1.5 hours. I make a measurement of the mole.&lt;/p&gt;

&lt;p&gt;As you can see, the device noticed changes in the mole. And this is despite the fact that most of these one and a half hours I was in the water(ratio: about 60 minutes in the water, 30 minutes in the sun). Additional symptoms: the skin is hot and itches a little near the mole, which means getting a slight sunburn.&lt;/p&gt;

&lt;p&gt;In an additional load, I checked the mole through a photo application with AI.&lt;/p&gt;

&lt;p&gt;Not concerning...And if there is really nothing suspicious outwardly, then the sensations say the opposite!&lt;/p&gt;

&lt;p&gt;Conclusions from the experiment:&lt;/p&gt;

&lt;p&gt;1) The bioimpedance method used by NOTA notices changes in the mole even after a short stay in the sun without protection(sunscreen, clothing).&lt;/p&gt;

&lt;p&gt;2) Applications for detecting changes in moles using photos are ineffective. And if you really want to know the "fate of the mole from the photo" - send the image to the doctor.&lt;/p&gt;

&lt;p&gt;3) Always use sun protection, even if you think that you will not burn in the sun!&lt;/p&gt;

&lt;p&gt;P.S. A day later, when the itching and skin temperature passed, I measured the mole again - everything is fine.&lt;/p&gt;

&lt;p&gt;Be healthy and take care of your moles:)&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>testing</category>
      <category>monitoring</category>
      <category>a</category>
    </item>
    <item>
      <title>How to Trigger an AWS Lambda from Kinesis</title>
      <author>Alex Kates</author>
      <pubDate>Wed, 14 Jul 2021 13:03:17 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-kinesis-5381</link>
      <guid>https://dev.to/aws-builders/how-to-trigger-an-aws-lambda-from-kinesis-5381</guid>
      <description>&lt;p&gt;In this post we are going to use the AWS CDK to build an AWS Lambda Function that triggers from an AWS Kinesis Stream.&lt;/p&gt;

&lt;p&gt;All of the code &lt;a href="https://github.com/alexkates/how-to-trigger-lambda-from-kinesis"&gt;can be found in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;We need to run a few commands to setup our CDK app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;how-to-trigger-lambda-from-kinesis
&lt;span class="nb"&gt;cd &lt;/span&gt;how-to-trigger-lambda-from-kinesis
npx cdk init app &lt;span class="nt"&gt;--language&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should give you the following directory structure.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g5EjN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cg1jou7runutz1lf1g4k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g5EjN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cg1jou7runutz1lf1g4k.png" alt="Directory structure after running the CDK init command"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also make sure you have your AWS CLI configured. For more information follow &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html"&gt;the AWS CLI quickstart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-a-kinesis-stream"&gt;
  &lt;/a&gt;
  Create a Kinesis Stream
&lt;/h2&gt;

&lt;p&gt;Install the Kinesis CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-kinesis
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-kinesis-stack.ts&lt;/code&gt;, add a new Kinesis stream, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nice! Let's deploy the stack.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm run cdk deploy&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-lambda"&gt;
  &lt;/a&gt;
  Create a Lambda
&lt;/h2&gt;

&lt;p&gt;Install the Lambda CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploying a Lambda function requires bootstrapping your CDK app which gives us an S3 bucket where our Lambda's source code will live. This is a one time operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create src/index.js and paste the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Records&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Record: %j&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;record&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open &lt;code&gt;lib/how-to-trigger-lambda-from-kinesis-stack.ts&lt;/code&gt;, add a new Lambda function, and deploy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KinesisMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy again ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to confirm some IAM changes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N9_MJn3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewtlhu4258gagawawm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9_MJn3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewtlhu4258gagawawm2.png" alt="IAM changes after deploying stack with Lambda function"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-the-event-source"&gt;
  &lt;/a&gt;
  Create the Event Source
&lt;/h2&gt;

&lt;p&gt;Install the Lambda Event Sources CDK package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @aws-cdk/aws-lambda-event-sources
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open lib/how-to-trigger-lambda-from-kinesis-stack.ts, add a new KinesisEventSource to the Lambda Function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-kinesis&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-lambda-event-sources&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HowToTriggerLambdaFromKinesisStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;kinesis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;streamName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyKinesisStream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;index.handler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KinesisMessageHandler&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Runtime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODEJS_12_X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;lambdaEventSources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;KinesisEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;startingPosition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StartingPosition&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TRIM_HORIZON&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="nx"&gt;lambdaFunction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One more deployment ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last time, you may need to approve IAM changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPm4YUlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jkyoi25rqossad8of1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPm4YUlb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jkyoi25rqossad8of1f.png" alt="IAM changes approval after deploying the Kinesis event source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;We are going to make use of the AWS CLI to test our stack.&lt;/p&gt;

&lt;p&gt;First, we need the Stream name of our Kinesis queue, which you can get using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws kinesis list-streams
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, using the Stream name from the previous command, use the AWS CLI to send a new message to &lt;code&gt;MyKinesisStream&lt;/code&gt;. Please refer to &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/kinesis/put-record.html"&gt;the Kinesis docs&lt;/a&gt; for information about these arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws kinesis put-record &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--data&lt;/span&gt; &lt;span class="s2"&gt;"aGVsbG8sIHdvcmxk"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--stream-name&lt;/span&gt; MyKinesisStream &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--partition-key&lt;/span&gt; pk1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify that the Lambda executed by looking in CloudWatch. Find the LogGroup named &lt;code&gt;/aws/lambda/KinesisMessageHandler&lt;/code&gt; and open up the latest LogStream. You should see some log messages that look similar to this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6Wc9T1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alub8zfeac2dg1wqsr4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6Wc9T1q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/alub8zfeac2dg1wqsr4r.png" alt="CloudWatch results after sending a new Kinesis record"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-up"&gt;
  &lt;/a&gt;
  Clean Up
&lt;/h2&gt;

&lt;p&gt;Don't forget to delete your stack when you are finished!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run cdk destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! If you found this useful, please follow me here &lt;br&gt;
&lt;a href="https://dev.to/thealexkates"&gt;https://dev.to/thealexkates&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/thealexkates"&gt;https://twitter.com/thealexkates&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>eventdriven</category>
    </item>
  </channel>
</rss>
