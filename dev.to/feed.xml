<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>A dev new word - 
    Condensing</title>
      <author>Rushan S J</author>
      <pubDate>Wed, 27 Oct 2021 08:41:51 +0000</pubDate>
      <link>https://dev.to/rushannotofficial/a-dev-new-word-condensing-5hln</link>
      <guid>https://dev.to/rushannotofficial/a-dev-new-word-condensing-5hln</guid>
      <description>&lt;p&gt;Hmm..., You already know what is condensing? Maybe not. You might have heard about pickling which is converting an object in a character stream. This character stream can be used to reconstruct the object and the object retains its properties.&lt;br&gt;
I made a word just like it !&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#origins"&gt;
  &lt;/a&gt;
  Origins:
&lt;/h4&gt;

&lt;p&gt;There isn't a word for some stuff so, I made one. &lt;br&gt;
I thought about it while writing my exams. (I'm in 9th grade)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#meaning"&gt;
  &lt;/a&gt;
  Meaning:
&lt;/h4&gt;

&lt;p&gt;Ok, let's imagine that we have a web server which renders a web page about blogs. When a user posts a blog, we save the content to a file and then render all blogs written so far in a page. The process of getting content and saving it to a file is called (&lt;strong&gt;Drum roll&lt;/strong&gt;) &lt;em&gt;Condensation&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h6&gt;
  &lt;a href="#q-why-did-i-choose-condensation-"&gt;
  &lt;/a&gt;
  Q. Why did I choose condensation ?
&lt;/h6&gt;

&lt;p&gt;A. When water vapour (in our case, raw data),&lt;br&gt;
  condenses in liquid water (ordered data in &lt;br&gt;
      a file) is called CONDENSATION. 🤣&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#how-would-you-use-this-word-"&gt;
  &lt;/a&gt;
  How would you use this word ?
&lt;/h4&gt;

&lt;p&gt;Examples are: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I built a micro service to &lt;em&gt;condense&lt;/em&gt; the 
 users data.&lt;/li&gt;
&lt;li&gt;Let's process the condensed data
&lt;p&gt; &lt;/p&gt;
&lt;em&gt;NOTE: Condensing doesn't mean to write data to a file. It simply means to get data from a remote/non-local system. (In our case, a web server hosted on &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt;)&lt;/em&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Btw, you're free to use this word anywhere. No Copyrights. 😅&lt;/p&gt;

&lt;p&gt;What do y'all think about this post? Lemme know in the comments. Bye&lt;/p&gt;

</description>
      <category>news</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Switch to a darker image when on dark mode!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Wed, 27 Oct 2021 07:41:58 +0000</pubDate>
      <link>https://dev.to/ziratsu/switch-to-a-darker-image-when-on-dark-mode-2lkh</link>
      <guid>https://dev.to/ziratsu/switch-to-a-darker-image-when-on-dark-mode-2lkh</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Let's learn how to switch images when using a &lt;strong&gt;dark/light mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/D5VuRHCfaxA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-how-to-handle-the-dark-mode"&gt;
  &lt;/a&gt;
  1. How to handle the dark mode.
&lt;/h2&gt;

&lt;p&gt;You only need to add a media query so that, when you change the mode from light to dark in your computer settings, the theme of your app changes from light to dark. Here's how to do it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, there are two ways to change images when you switch from dark to light mode (or the other way around). Let's take a look at the first one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-the-first-way-to-switch-images"&gt;
  &lt;/a&gt;
  2. The first way to switch images.
&lt;/h2&gt;

&lt;p&gt;You can wrap the images inside a picture element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"ressources/dark-empire.jpg"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(prefers-color-scheme:dark)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"ressources/light-empire.jpg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That way, if you've selected dark theme in your settings, then it will choose the first image, if not it will choose the second one.&lt;/p&gt;

&lt;p&gt;Then, you can style the images however you want! Here's how I did it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-the-second-way-to-switch-images"&gt;
  &lt;/a&gt;
  3. The second way to switch images.
&lt;/h2&gt;

&lt;p&gt;But there's another way to do this! You can create an empty div in HTML and then add the image as a background of this div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.img-toggle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(ressources/light-empire.jgp)&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you then need to update your media query so that you have the darker image for the dark mode and not the lighter image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="nc"&gt;.img-toggle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sx"&gt;url(ressources/dark-empire.jgp)&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;You've done it!&lt;/em&gt; Now your dark theme can be even &lt;strong&gt;darker&lt;/strong&gt; than before ;)&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on my &lt;strong&gt;social medias&lt;/strong&gt;:&lt;br&gt;
Instagram : &lt;a href="https://www.instagram.com/learn_to_create1"&gt;https://www.instagram.com/learn_to_create1&lt;/a&gt;&lt;br&gt;
TikTok : &lt;a href="https://www.tiktok.com/@learn_to_create"&gt;https://www.tiktok.com/@learn_to_create&lt;/a&gt;&lt;br&gt;
Twitter : &lt;a href="https://twitter.com/Learn_To_Create"&gt;https://twitter.com/Learn_To_Create&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon for some easy-to-learn tutorials!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>C Language Cheatsheet</title>
      <author>Rohan Kiratsata</author>
      <pubDate>Wed, 27 Oct 2021 07:39:52 +0000</pubDate>
      <link>https://dev.to/rohankiratsata/c-language-cheatsheet-1fg0</link>
      <guid>https://dev.to/rohankiratsata/c-language-cheatsheet-1fg0</guid>
      <description>&lt;p&gt;Hello Developers ! Today I'm starting cheatsheet Series. I'll be posting cheatsheet for programming languages and many more.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;These cheatsheets are also available on my &lt;a href="https://github.com/rohan-kiratsata"&gt;GitHub&lt;/a&gt;.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Improve &lt;a href="https://github.com/rohan-kiratsata/coding-cheatsheets"&gt;this&lt;/a&gt; GitHub repository by contributing to it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Download PDF from &lt;a href="https://github.com/rohan-kiratsata/coding-cheatsheets/tree/main/PDFs"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#c-cheatsheet"&gt;
  &lt;/a&gt;
  C Cheatsheet
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#c-cheatsheet"&gt;C Cheatsheet&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#table-of-content"&gt;Table of content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#boilerplate-code"&gt;Boilerplate Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#printf-function"&gt;printf() function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scanf-function"&gt;scanf() function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-data-types"&gt;Basic Data Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#format-specifiers"&gt;Format Specifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#escape-sequences"&gt;Escape Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#operators"&gt;Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conditional-statements"&gt;Conditional Statements&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#if-statement"&gt;If Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#if-else-statements"&gt;If-Else Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#if-else-if-statements"&gt;If Else-If Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#switch-case-statements"&gt;Switch Case Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#iterative-statements"&gt;Iterative Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#while-loop"&gt;While loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#do-while-loop"&gt;Do-While Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#for-loop"&gt;For Loop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#break-statement"&gt;Break Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continue-statement"&gt;Continue Statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recursion"&gt;Recursion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pointers"&gt;Pointers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#strings"&gt;Strings&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#important-string-functions"&gt;Important String Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#structures"&gt;Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynamic-memory-allocation"&gt;Dynamic Memory Allocation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#file-handling"&gt;File Handling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;h3&gt;
  &lt;a href="#boilerplate-code"&gt;
  &lt;/a&gt;
  Boilerplate Code
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#printf-function"&gt;
  &lt;/a&gt;
  printf() function
&lt;/h3&gt;

&lt;p&gt;It is used to print anything/show output on console&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scanf-function"&gt;
  &lt;/a&gt;
  scanf() function
&lt;/h3&gt;

&lt;p&gt;It is used to take input from user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"format specifier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;variable_name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;It is data name that is used to store the data value in the memory.&lt;/p&gt;

&lt;p&gt;Rules to declare variables:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable Name&lt;/th&gt;
&lt;th&gt;Valid?&lt;/th&gt;
&lt;th&gt;Why?&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;Not Valid&lt;/td&gt;
&lt;td&gt;keywords are not allowed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amount$&lt;/td&gt;
&lt;td&gt;Not Valid&lt;/td&gt;
&lt;td&gt;Dollar Sign is not allowed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;your name&lt;/td&gt;
&lt;td&gt;Not Valid&lt;/td&gt;
&lt;td&gt;Space between variable name is not allowed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;average_score&lt;/td&gt;
&lt;td&gt;Valid&lt;/td&gt;
&lt;td&gt;underscore can be used as space&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;First_name&lt;/td&gt;
&lt;td&gt;Valid&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int_type&lt;/td&gt;
&lt;td&gt;Valid&lt;/td&gt;
&lt;td&gt;Keywords can be used as combination&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#basic-data-types"&gt;
  &lt;/a&gt;
  Basic Data Types
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;char&lt;/strong&gt; - It stores single character. Size - 1 byte&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;var_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Another example&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;var_name2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;int&lt;/strong&gt; - It stores an integer value. Size - 4 bytes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//Another example&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;float&lt;/strong&gt; - It stores an floating point value with 6 digit precision. Size - 4 bytes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//Another example&lt;/span&gt;
&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;area&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;double&lt;/strong&gt; - It stores an float value with 14 digit precision. Size - 8 bytes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1531452&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//Another Example&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;more_var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;542&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12452&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;void&lt;/strong&gt; - Represents the absence of type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="c1"&gt;//does not return anything.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#format-specifiers"&gt;
  &lt;/a&gt;
  Format Specifiers
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Format Specifier&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;Integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%f&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%lf&lt;/td&gt;
&lt;td&gt;double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%l&lt;/td&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%Lf&lt;/td&gt;
&lt;td&gt;long double&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%lld&lt;/td&gt;
&lt;td&gt;long long&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%o&lt;/td&gt;
&lt;td&gt;octal representation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%p&lt;/td&gt;
&lt;td&gt;pointer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%s&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%%&lt;/td&gt;
&lt;td&gt;prints % symbol&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#escape-sequences"&gt;
  &lt;/a&gt;
  Escape Sequences
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Escape Sequence&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;Produces Alarm/Beep Sound&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;Backspace&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;Form Feed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;New Line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;Tab Space&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\v&lt;/td&gt;
&lt;td&gt;Tab Space - Vertically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\\&lt;/td&gt;
&lt;td&gt;Backslash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\"&lt;/td&gt;
&lt;td&gt;Double Quote&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\'&lt;/td&gt;
&lt;td&gt;Single Quote&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\?&lt;/td&gt;
&lt;td&gt;Question Mark&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#operators"&gt;
  &lt;/a&gt;
  Operators
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Arithmetic Operators&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operators&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;a+b&lt;/td&gt;
&lt;td&gt;Addition or unary plus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;a-b&lt;/td&gt;
&lt;td&gt;Subtraction or unary minus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;a*b&lt;/td&gt;
&lt;td&gt;Multiplication&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;a/b&lt;/td&gt;
&lt;td&gt;Division&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;a%b&lt;/td&gt;
&lt;td&gt;Modulo Division-Gives remainder&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Relational Operators&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;a &amp;lt; b&lt;/td&gt;
&lt;td&gt;is less than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;gt; b&lt;/td&gt;
&lt;td&gt;is greater than&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;a&amp;lt;=b&lt;/td&gt;
&lt;td&gt;is less than or equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;a&amp;gt;=b&lt;/td&gt;
&lt;td&gt;is greater than or equal to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Logical Operators&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;a &amp;amp;&amp;amp; b&lt;/td&gt;
&lt;td&gt;logical AND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;a || b&lt;/td&gt;
&lt;td&gt;logical OR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;a ! b&lt;/td&gt;
&lt;td&gt;logical NOT&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Increment and Decrement Operators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;variable_name++&lt;/code&gt; Here &lt;code&gt;++&lt;/code&gt; is a increment operator, it increments the value of variable by 1.&lt;br&gt;
&lt;code&gt;variable_name--&lt;/code&gt; Here &lt;code&gt;--&lt;/code&gt; is a decrement operator and it decrements the value of variable by 1.&lt;/p&gt;

&lt;p&gt;More examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// a value is 1&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Now Value becomes 2&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// b value is 5&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;span class="c1"&gt;// Now, b value is 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conditional-statements"&gt;
  &lt;/a&gt;
  Conditional Statements
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#if-statement"&gt;
  &lt;/a&gt;
  If Statement
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;codition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//statements or code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//example&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A is smaller"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#ifelse-statements"&gt;
  &lt;/a&gt;
  If-Else Statements
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//statements&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//statements&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//example&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"A is smaller"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"B is smaller"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#if-elseif-statements"&gt;
  &lt;/a&gt;
  If Else-If Statements
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condtion&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;another_condtion&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#switch-case-statements"&gt;
  &lt;/a&gt;
  Switch Case Statements
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;statement1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;statements2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;another_statements&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;.....(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;cases&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;statements&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#iterative-statements"&gt;
  &lt;/a&gt;
  Iterative Statements
&lt;/h4&gt;

&lt;p&gt;It executes the statements inside a block of loop until condition is false&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#while-loop"&gt;
  &lt;/a&gt;
  While loop
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//example&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;//will print 1 to 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#dowhile-loop"&gt;
  &lt;/a&gt;
  Do-While Loop
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;codition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#for-loop"&gt;
  &lt;/a&gt;
  For Loop
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#break-statement"&gt;
  &lt;/a&gt;
  Break Statement
&lt;/h5&gt;

&lt;p&gt;Break keyword is used to terminate the loop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#continue-statement"&gt;
  &lt;/a&gt;
  Continue Statement
&lt;/h5&gt;

&lt;p&gt;Continue keyword skips the rest of iterative code of loop and return to starting point of loop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h3&gt;

&lt;p&gt;Functions are used to divide the code and to avoid repetitive task. It provides reusability and readability to code.&lt;br&gt;
&lt;strong&gt;Function Declaration&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;return_type&lt;/span&gt; &lt;span class="nf"&gt;function_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_type&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//  Example of function to add two numbers&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#recursion"&gt;
  &lt;/a&gt;
  Recursion
&lt;/h3&gt;

&lt;p&gt;Recursion is the process of repeating items in a self-similar way.If a program allows you to call a function inside the same function, then it is called a recursive call of the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;   &lt;span class="c1"&gt;//Function calling itself&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Factorial Using Recursion&lt;/span&gt;
&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="nf"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Factorial of %d is %l."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//OUTPUT : Factorial of 5 is 120.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pointers"&gt;
  &lt;/a&gt;
  Pointers
&lt;/h3&gt;

&lt;p&gt;Pointer is a variable that contains the address of another variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;datatype&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;var_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h3&gt;

&lt;p&gt;Array is an collection of data of same data-type.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Declaration&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;data_type&lt;/span&gt; &lt;span class="n"&gt;array_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;array_size&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Fetching Array Element&lt;/strong&gt;&lt;br&gt;
Array index starts from 0.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;data_type&lt;/span&gt; &lt;span class="n"&gt;variable_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Example&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;//OUTPUT : 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strings"&gt;
  &lt;/a&gt;
  Strings
&lt;/h3&gt;

&lt;p&gt;It is basically 1D character array. It character of string is null character (\0)&lt;br&gt;
&lt;strong&gt;Declaration&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;string_name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#important-string-functions"&gt;
  &lt;/a&gt;
  Important String Functions
&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;gets() function&lt;/strong&gt;&lt;br&gt;
It is used to take input of multi-character string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;puts() function&lt;/strong&gt;&lt;br&gt;
It is used to show string output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;puts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;strlen() function&lt;/strong&gt;&lt;br&gt;
It prints the length of string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;strcat() function&lt;/strong&gt;&lt;br&gt;
It is used to concatenate two strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;strcat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;strcmp() function&lt;/strong&gt;&lt;br&gt;
It is used to compare two strings. Gives output in 0/1.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;strcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;strcpy() function&lt;/strong&gt;&lt;br&gt;
It is used to copy the content of 1st string to another string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#structures"&gt;
  &lt;/a&gt;
  Structures
&lt;/h3&gt;

&lt;p&gt;A structure creates a data type that can be used to group items of possibly different types into a single type.&lt;br&gt;
&lt;strong&gt;Declaration&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;student&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;college&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;      &lt;span class="c1"&gt;//Notice the semicolon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dynamic-memory-allocation"&gt;
  &lt;/a&gt;
  Dynamic Memory Allocation
&lt;/h3&gt;

&lt;p&gt;If you are aware of the size of an array, then it is easy and you can define it as an array. For example, to store a name of any person, it can go up to a maximum of 100 characters. But now let us consider a situation where you have no idea about the length of the text you need to store, for example, you want to store a detailed description about a topic. Here we need to define a pointer to character without defining how much memory is required and later. So we use Dynamic Memory Allocation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;malloc() function&lt;/strong&gt;&lt;br&gt;
Stands for 'Memory allocation' and reserves a block of memory with the given amount of bytes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;casting_type&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Example&lt;/span&gt;
&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;calloc() function&lt;/strong&gt;&lt;br&gt;
Stands for “contiguous allocation” method in C is used to dynamically allocate the specified number of blocks of memory of the specified type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cast_type&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;calloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;realloc() function&lt;/strong&gt;&lt;br&gt;
If the allocated memory is insufficient, then we can change the size of previously allocated memory using this function for efficiency purposes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;realloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#file-handling"&gt;
  &lt;/a&gt;
  File Handling
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating File Pointer&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;FILE&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Opening a File&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;fscanf() function&lt;/strong&gt;&lt;br&gt;
Used to read file content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;fscanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;FILE&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;..);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;fprintf() function&lt;/strong&gt;&lt;br&gt;
Used to write the file content&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;fprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;FILE&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,..);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Closing a File&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;This cheatsheet is written and managed by &lt;a href="https://rohan-kiratsata.github.io"&gt;Rohan Kiratsata&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Something is missing? Contribute to this &lt;a href="https://github.com/rohan-kiratsata/coding-cheatsheets"&gt;repo&lt;/a&gt; and improve.&lt;/em&gt;&lt;/p&gt;




</description>
      <category>tutorial</category>
      <category>100daysofcode</category>
      <category>c</category>
      <category>programming</category>
    </item>
    <item>
      <title>Building Projects  to impress 🤯🤯 Employers or Hiring Managers -- Intro [VoteSub]</title>
      <author>kiranbansode</author>
      <pubDate>Wed, 27 Oct 2021 07:35:20 +0000</pubDate>
      <link>https://dev.to/kiranbansode/building-projects-to-impress-employers-or-hiring-managers-intro-votesub-2cec</link>
      <guid>https://dev.to/kiranbansode/building-projects-to-impress-employers-or-hiring-managers-intro-votesub-2cec</guid>
      <description>&lt;p&gt;Hey everyone, My name is Kiran A. Bansode. I'm a self-taught Full-Stack web developer.&lt;/p&gt;

&lt;p&gt;As judging from this post's title, you can say that I'm building this web application to impress or to showcase my skills as a Full-Stack web developer to future Employers or Hiring Managers. From this project I think that those peoples can evaluate my abilities and would offer me a &lt;br&gt;
job(fingers cross 🤞🏻🤞🏻) or atleast give me a chance for interview.&lt;/p&gt;

&lt;p&gt;Okay. Mr. Kiran.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-your-project-"&gt;
  &lt;/a&gt;
  So, What is your Project ?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;VoteSub&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A place where students or any other users can vote their favourite school subjects so they will stay on top of famous subjects ranking list.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-features-of-this-project-"&gt;
  &lt;/a&gt;
  What are the features of this project ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A new user will be able to sign in using the Registration page.&lt;/li&gt;
&lt;li&gt;Existing users will be able to log in using the Login page.&lt;/li&gt;
&lt;li&gt;Dashboard page will show current status or rank of user’s favourite subject and remaining votes that user has&lt;/li&gt;
&lt;li&gt;Subject information page will show that subject’s little bit of information with some high quality and stunning images.&lt;/li&gt;
&lt;li&gt;A Voting history page will show who voted for that subject&lt;/li&gt;
&lt;li&gt;A Profile page of voters where visitors can see only basic information.&lt;/li&gt;
&lt;li&gt;There will be some admin functionality to help manage voters in the Admin page which will be hidden from normal users.&lt;/li&gt;
&lt;li&gt;Every week the admin will release some votes for users so they can give those votes to their favourite subject.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Above features are going to make a MVP(Minimum viable product), which I want release for my students(Yes! I'm a teacher 🧑🏻‍🏫) on Monday, 22 November, 2022, when schools are going re-open after Diwali Vacations. So consider this date as my deadline 👹 for MVP.&lt;/p&gt;

&lt;p&gt;Features that will have in my project after MVP get released&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Works like native app [ PWA ]&lt;/li&gt;
&lt;li&gt;Offline data capabilities&lt;/li&gt;
&lt;li&gt;pdf generation at server&lt;/li&gt;
&lt;li&gt;users can upload their own profile pictures&lt;/li&gt;
&lt;li&gt;more controls for admin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…and much more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-your-tech-stack-"&gt;
  &lt;/a&gt;
  What is your tech stack ?
&lt;/h2&gt;

&lt;p&gt;I'm going use following technologies -&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;HTML  |  CSS  |  JavaScript&lt;/li&gt;
&lt;li&gt;React  |  React Hooks&lt;/li&gt;
&lt;li&gt;Redux Toolkit  |  React-Redux&lt;/li&gt;
&lt;li&gt;Style-components  |  SASS&lt;/li&gt;
&lt;li&gt;Material-UI (MUI)&lt;/li&gt;
&lt;li&gt;React Hook Form  |  Yup&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#backend-firebase-"&gt;
  &lt;/a&gt;
  Backend [Firebase 🔥🔥]
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;Firestore&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Cloud Functions &lt;/li&gt;
&lt;li&gt;Hosting&lt;/li&gt;
&lt;li&gt;Emulators&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;VSCode 🧑🏻‍🎤&lt;/li&gt;
&lt;li&gt;Vite - React&lt;/li&gt;
&lt;li&gt;Nodejs  |  Yarn&lt;/li&gt;
&lt;li&gt;ESLint  |  Prettier  |  Husky  📸&lt;/li&gt;
&lt;li&gt;Figma  |  Draw.io&lt;/li&gt;
&lt;li&gt;Trello&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...and some other tools&lt;/p&gt;

&lt;p&gt;OK. That some pretty impressive tech stack Mr. Kiran. But&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-exactly-do-you-want-to-show-to-employers-or-hiring-managers-so-that-they-can-be-impressed-"&gt;
  &lt;/a&gt;
  What exactly do you want to show to employers or hiring managers, so that they can be impressed ?
&lt;/h2&gt;

&lt;p&gt;Few days ago, I read &lt;a href="https://dev.to/profydev/how-to-build-a-react-portfolio-that-gets-you-a-job-part-1-5fh9"&gt;this&lt;/a&gt; blog on Dev.to. In that blog Johannes describes what differs a newbie from a professional developer.&lt;/p&gt;

&lt;p&gt;I was very impresssed. So I decided I should try this to impress employers or hiring managers. I'm going to follow what Johannes suggested in his blog. Also I'm going to add my own twists.&lt;/p&gt;

&lt;p&gt;Also our tech industry is having pretty rough time for hiring skilled developers. Companies are looking for more than what tradional collages are teaching their students. It is becoming very hard to find right candidate for different roles or who can do most of things.&lt;/p&gt;

&lt;p&gt;So, by completing this project I want demonstrate that I have  such required skills that needs to have in a developer. Following is a list of the things that I want to show to my future employers or hiring managers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git Branching Strategies&lt;/li&gt;
&lt;li&gt;Git Issues&lt;/li&gt;
&lt;li&gt;CI/CD using GitHub Actions or other tools&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;Conventional Commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trello Tasks management&lt;/li&gt;
&lt;li&gt;Wireframes using Diagrams.io&lt;/li&gt;
&lt;li&gt;Designs using Figma&lt;/li&gt;
&lt;li&gt;How I document my codebase ?&lt;/li&gt;
&lt;li&gt;What is my strategy to convert a design into working code.&lt;/li&gt;
&lt;li&gt;If I have issues, How I solve them ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...and many more &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-can-you-find-my-project-related-stuff-"&gt;
  &lt;/a&gt;
  Where can you find my project related stuff ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Source Code : &lt;a href="https://github.com/kiranbansode/votesub"&gt;GitHub VoteSub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Project Managment : &lt;a href="https://trello.com/b/dPmDCweY"&gt;Trello VoteSub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Issues Tracker : &lt;a href="https://github.com/kiranbansode/votesub/issues"&gt;VoteSub GitHub Issues Tracker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Designs : &lt;a href="https://www.figma.com/file/ibh6SGKzcY9jgaTqusZy7b/VoteSub?node-id=0%3A1"&gt;Figma VotSub&lt;/a&gt; (I'm not a designer 😔😔, but I tried).&lt;/li&gt;
&lt;li&gt;Wireframes : &lt;a href="https://drive.google.com/file/d/1rGm_qjTJ-w6HtVl2RtIug5fPSDrH39co/view?usp=sharing"&gt;Diagrams.net VoteSub&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Wireframes link will only show image(not good quality). I don't know other way to show Diagrams.net files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#to-open-wireframes-file-in-your-computer-do-the-following-steps"&gt;
  &lt;/a&gt;
  To open wireframes file in your computer do the following steps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click on download button.&lt;/li&gt;
&lt;li&gt;Go to &lt;a href="https://app.diagrams.net"&gt;Diagrams.net&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click on Device &amp;gt; Open Existing Diagram&lt;/li&gt;
&lt;li&gt;Choose downloaded file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#when-you-will-able-to-see-my-progess-on-this-project-"&gt;
  &lt;/a&gt;
  When you will able to see my progess on this project ?
&lt;/h2&gt;

&lt;p&gt;This is going to be a weekly blog series. From now on, every Sunday[IST] you will get a new blog related to this project. That blog will contain all projects related info like prior week's plan or design and past week's completed tasks, calendar schedules, screenshots of git commits and issues, and all ups and downs and last but not list, What did I learn new ?&lt;/p&gt;

&lt;p&gt;Guys if think this is exciting comment this blog. If you want to suggest or want to add something, comment it. I'll be happy to read your comments.&lt;/p&gt;

&lt;p&gt;So, see you on Sunday, till then sit tight. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pssss.... this is my first ever blog on internet, so please go easy on me in comment section for my grammatical errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bye 👋🏻👋🏻 ...&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>firebase</category>
      <category>votesub</category>
    </item>
    <item>
      <title>How to be a Productive Web Developer?</title>
      <author>Danish Saleem</author>
      <pubDate>Wed, 27 Oct 2021 07:34:09 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/how-to-be-a-productive-web-developer-l1f</link>
      <guid>https://dev.to/mrdanishsaleem/how-to-be-a-productive-web-developer-l1f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-use-frameworks"&gt;
  &lt;/a&gt;
  1. Use Frameworks
&lt;/h2&gt;

&lt;p&gt;Frameworks are crucial for a Frontend Developer! Frameworks are the package of inbuilt templates, which we can use to build our own projects on top of it. Although learning a framework seems hard, the productivity is high.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-create-a-library-of-your-code-snippets"&gt;
  &lt;/a&gt;
  2. Create a library of your code Snippets
&lt;/h2&gt;

&lt;p&gt;This habit will increase your productivity at its peak! Any API or Code your write for a project will definitely be used in the other one. So, maintaining the library for your own code helps you to recycle the function and save a lot of time in debugging!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-write-a-blog-of-your-own-project"&gt;
  &lt;/a&gt;
  3. Write a blog of your own project
&lt;/h2&gt;

&lt;p&gt;This can be your Buy 1, Get 1 Offer!&lt;/p&gt;

&lt;p&gt;After any project or task, you made, you can write up a small blog of how you did it! This is a huge productive task as it helps you to understand the project more and also build a platform network for yourself from &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem/"&gt;Blogs&lt;/a&gt;, &lt;a href="https://www.youtube.com/"&gt;YouTube&lt;/a&gt;, and so on...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-tools-amp-extensions"&gt;
  &lt;/a&gt;
  4. Use Tools &amp;amp; Extensions
&lt;/h2&gt;

&lt;p&gt;Tools and Extensions will help you to save time tremendously! There are plenty of browsers and IDE Extensions available to make the tasks simple and clean. And also, many tools to recreate or perform the function you wanted!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-learn-amp-master-git"&gt;
  &lt;/a&gt;
  5. Learn &amp;amp; Master Git
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; is one of the most powerful and life-saving tools for web developers! Upon mastering Git will help you to perform the wide dimensions in it and make your productivity level to the highest! Git can perform a task in seconds that takes unimaginable time without!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CwzNk0Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh2ipcpv1hzlwj24eop1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CwzNk0Zq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lh2ipcpv1hzlwj24eop1.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>tooling</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Inspired by Apple's web animations, I have written a JavaScript library.</title>
      <author>Steven Lei</author>
      <pubDate>Wed, 27 Oct 2021 07:16:04 +0000</pubDate>
      <link>https://dev.to/stevenlei/inspired-by-apples-web-animations-i-have-written-a-javascript-library-2ll5</link>
      <guid>https://dev.to/stevenlei/inspired-by-apples-web-animations-i-have-written-a-javascript-library-2ll5</guid>
      <description>&lt;p&gt;Hello, I am Steven Lei.&lt;/p&gt;

&lt;p&gt;I love Apple products, and so do their website. They did a lot of fantastic animations for presenting their products, primarily scrolled-based, when we scroll the webpage up and down, the animation plays forward and backward.&lt;/p&gt;

&lt;p&gt;As a web developer, I tried to reproduce their animation work, learn from the process, and record it as screencasts.&lt;/p&gt;

&lt;p&gt;To achieve the scroll-based animation, we have to do some calculation work with JavaScript, like whether the element has appeared on screen, the scrolled distance, the element offset, and so forth. And we will update the element style accordingly.&lt;/p&gt;

&lt;p&gt;As they have the common requirements mentioned above, I wondered if this development process could be more straightforward. What if we can achieve the same goal without writing a single line of JavaScript?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initial-design"&gt;
  &lt;/a&gt;
  Initial Design
&lt;/h2&gt;

&lt;p&gt;Scroll-based animations are based on the scrolling distance and position of elements. I would like to have a number when the element starts to appear from the bottom of the page, and disappear from the top. Numbers between &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; would be simple enough, at least in this stage.&lt;/p&gt;

&lt;p&gt;I have used the &lt;code&gt;IntersectionObserver&lt;/code&gt; API to explore if the element is on-screen or not. And next, we have to think about how to use this number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-flexibility"&gt;
  &lt;/a&gt;
  The Flexibility
&lt;/h2&gt;

&lt;p&gt;As animation involves a variety of requirements, for instance, fading in an element, moving the element, changing the color of a text etc. We cannot limit the ability just on some of those. So I have decided to put the number as a CSS variable, this would be flexible enough for working out different animation scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-name-of-the-library"&gt;
  &lt;/a&gt;
  The Name of the Library
&lt;/h2&gt;

&lt;p&gt;I have started to develop the library and named it &lt;strong&gt;Trigger JS&lt;/strong&gt; because every scroll triggers a new value, just a literal meaning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thoughts-on-the-usage-of-javascript"&gt;
  &lt;/a&gt;
  Thoughts on the usage of JavaScript
&lt;/h2&gt;

&lt;p&gt;I want to simplify the development process, so this library's purpose is to let developers create scroll-based animation without writing JavaScript. I have decided to use HTML attributes and CSS variables.&lt;/p&gt;

&lt;p&gt;As the library name is &lt;strong&gt;Trigger JS&lt;/strong&gt;, I have used &lt;code&gt;tg-&lt;/code&gt; as the prefix of the related HTML attributes. I know &lt;code&gt;tg-&lt;/code&gt; does not quite fulfil the standard of HTML5, that's okay, I will keep an option to set the prefix, for example, &lt;code&gt;data-tg-*&lt;/code&gt;, to completely get rid of this concern. But for now, I will keep using &lt;code&gt;tg-&lt;/code&gt; here first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-first-attribute-raw-tgname-endraw-"&gt;
  &lt;/a&gt;
  The First Attribute: &lt;code&gt;tg-name&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;tg-name&lt;/code&gt; HTML attribute is mainly for two purposes: elements to be monitored and the name of the CSS variable.&lt;/p&gt;

&lt;p&gt;We will add the &lt;code&gt;tg-name&lt;/code&gt; attribute to the element that we want to monitor, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"opacity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Hello World
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Trigger JS&lt;/strong&gt; will fetch all HTML elements with &lt;code&gt;tg-name&lt;/code&gt; attribute into an array called &lt;code&gt;activeElements&lt;/code&gt; (via &lt;code&gt;document.querySelector('[tg-name'])&lt;/code&gt;), and observe them with &lt;code&gt;IntersectionObserver&lt;/code&gt; API.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;scroll&lt;/code&gt; event listener is attached to &lt;code&gt;window&lt;/code&gt;, which will calculate the relative position of elements in &lt;code&gt;activeElements&lt;/code&gt; within the browser window: &lt;code&gt;0&lt;/code&gt; when the element appears from the bottom, and &lt;code&gt;1&lt;/code&gt; when the element disappears from the top, and &lt;code&gt;0.5&lt;/code&gt; when it is in the middle.&lt;/p&gt;

&lt;p&gt;Finally, we will put this calculation result to the element with CSS variable, for instance, &lt;code&gt;--opacity: 0.5&lt;/code&gt;. So that we can use the value in the appropriate CSS property, in this example, &lt;code&gt;opacity: var(--opacity);&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-range-setting"&gt;
  &lt;/a&gt;
  The Range Setting
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; is excellent in some situations. But if we want to move an element with &lt;code&gt;transform&lt;/code&gt;, it would be good to adjust the start and end value (We can do the calculation in CSS with &lt;code&gt;calc()&lt;/code&gt; though, but let's make it simpler).&lt;/p&gt;

&lt;p&gt;That's why I have added &lt;code&gt;tg-from&lt;/code&gt; and &lt;code&gt;tg-to&lt;/code&gt;. If we want to move an element by &lt;code&gt;400px&lt;/code&gt; from the right to the left when scrolling up the page, we can set &lt;code&gt;tg-from="200"&lt;/code&gt; and &lt;code&gt;tg-to="-200"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And yes, we have to define the frequency of movement. We can set &lt;code&gt;tg-steps="400"&lt;/code&gt; so that the element is moving pixel-by-pixel. But what if we want to keep the increment to be &lt;code&gt;1&lt;/code&gt; but change the range of &lt;code&gt;tg-from&lt;/code&gt; and &lt;code&gt;tg-to&lt;/code&gt;? We can do the calculation ourselves or use another attribute &lt;code&gt;tg-step="1"&lt;/code&gt; to avoid doing the math.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#numbers-are-not-perfect"&gt;
  &lt;/a&gt;
  Numbers are not Perfect
&lt;/h2&gt;

&lt;p&gt;Sometimes, we need an exact value. Let's say we want to change the text color, what we need is a color code instead.&lt;/p&gt;

&lt;p&gt;That's why &lt;code&gt;tg-map&lt;/code&gt; is being added, this gave us the ability to &lt;em&gt;convert&lt;/em&gt; a value from a number to a value. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
  &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;
  &lt;span class="na"&gt;tg-from=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
  &lt;span class="na"&gt;tg-to=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;
  &lt;span class="na"&gt;tg-step=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;
  &lt;span class="na"&gt;tg-map=&lt;/span&gt;&lt;span class="s"&gt;"0: black; 1: blue; 2: purple"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Hello World
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The calculation value will be 0, 1 or 2 throughout the scroll, and convert to a final value with the setting in &lt;code&gt;tg-map&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;0&lt;/code&gt; -&amp;gt; &lt;code&gt;black&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1&lt;/code&gt; -&amp;gt; &lt;code&gt;blue&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;2&lt;/code&gt; -&amp;gt; &lt;code&gt;purple&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we can update the text color easily with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#noice-reduction"&gt;
  &lt;/a&gt;
  Noice Reduction
&lt;/h2&gt;

&lt;p&gt;Sometimes we are only interested in certain values. For example, we only want to know when &lt;code&gt;25&lt;/code&gt;, &lt;code&gt;50&lt;/code&gt;, &lt;code&gt;75&lt;/code&gt; happens from 0 to 100 (&lt;code&gt;tg-from="0"&lt;/code&gt; and &lt;code&gt;tg-to="100"&lt;/code&gt;). In this situation, &lt;code&gt;tg-filter&lt;/code&gt; takes part.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt;
  &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;
  &lt;span class="na"&gt;tg-name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;
  &lt;span class="na"&gt;tg-from=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
  &lt;span class="na"&gt;tg-to=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;
  &lt;span class="na"&gt;tg-step=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;
  &lt;span class="na"&gt;tg-filter=&lt;/span&gt;&lt;span class="s"&gt;"25,50,75"&lt;/span&gt;
  &lt;span class="na"&gt;tg-map=&lt;/span&gt;&lt;span class="s"&gt;"25: red; 50: yellow; 75: green"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Red (25), Yellow (50), Green (75)
&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* In order to make the page have enough rooms for scrolling */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nf"&gt;#heading&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h2&gt;

&lt;p&gt;The above is the introduction of creating this library, and this project is available on &lt;a href="https://github.com/triggerjs/trigger"&gt;GitHub - triggerjs/trigger&lt;/a&gt;. Please feel free to try out, submit pull requests and share your thoughts. Your opinion is precious.&lt;/p&gt;

&lt;p&gt;Please star it if you like it, and that would be great to have your participation.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>animation</category>
      <category>webdev</category>
    </item>
    <item>
      <title>SQL - Stored Procedure 📦</title>
      <author>Sharanjeet kaur</author>
      <pubDate>Wed, 27 Oct 2021 06:54:52 +0000</pubDate>
      <link>https://dev.to/sharan_710/sql-stored-procedure-4n2m</link>
      <guid>https://dev.to/sharan_710/sql-stored-procedure-4n2m</guid>
      <description>&lt;p&gt;SQL is the standard language for the Relational Database, for storing, manipulating and retrieving stored data. For basics of SQL (&lt;a href="https://www.tutorialspoint.com/sql/"&gt;link&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A Stored Procedure is a SQL code that we can save, so the code can be reused again and again. &lt;br&gt;
So, if we have any SQL query which we write over and over again, we can use it as a stored procedure so that we can just call it to execute it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-syntax-for-creating-the-stored-procedure"&gt;
  &lt;/a&gt;
  The Syntax for creating the stored procedure
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bjc-QcNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j2wlzz9nq0w9hvy63mr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bjc-QcNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j2wlzz9nq0w9hvy63mr.png" alt="Image description" width="880" height="307"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#executing-stored-procedure"&gt;
  &lt;/a&gt;
  Executing stored procedure
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njw88bhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qcs3s7xf0r86s7jae3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njw88bhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qcs3s7xf0r86s7jae3f.png" alt="Image description" width="880" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#stored-procedure-with-parameters"&gt;
  &lt;/a&gt;
  Stored Procedure with Parameters
&lt;/h4&gt;

&lt;p&gt;To add Parameters in the procedure, first, we need to alter the procedure for which we can use ALTER procedure statement as follows: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SPNz-03N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi67hi2habd6ye7f3o9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SPNz-03N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi67hi2habd6ye7f3o9i.png" alt="Image description" width="880" height="235"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To Execute the above stored procedure, we have to declare a variable for output parameter and specify the parameter as out&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UHmvR7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysdwj14a3gj17nkphv0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHmvR7FL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysdwj14a3gj17nkphv0k.png" alt="Image description" width="880" height="215"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like this, we can also set multiple parameters by separating each parameter and the data type with a comma &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#drop-a-stored-procedure"&gt;
  &lt;/a&gt;
  Drop a stored procedure
&lt;/h4&gt;

&lt;p&gt;To drop a stored procedure, use the DROP statement as follows:&lt;/p&gt;

&lt;p&gt;DROP PROCEDURE usp_proc;&lt;/p&gt;

&lt;p&gt;Thank you!! Feel free to comment on any type of feedback or error you have 😄✌ &lt;/p&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JS Tip Series: Use Objects than Arrays For Large Data</title>
      <author>Jenuel Oras Ganawed</author>
      <pubDate>Wed, 27 Oct 2021 06:41:39 +0000</pubDate>
      <link>https://dev.to/brojenuel/js-tip-series-use-objects-than-arrays-for-large-data-187</link>
      <guid>https://dev.to/brojenuel/js-tip-series-use-objects-than-arrays-for-large-data-187</guid>
      <description>&lt;p&gt;Most of the time, we have been using data in an array type and we have been using a lot of functions to filter arrays.&lt;/p&gt;

&lt;p&gt;If your using array for &lt;code&gt;small amount of data&lt;/code&gt;, its fine since its just small amount of data. But if your working with a lot of data, might as well save it as an &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-us-look-at-performance"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Let's us look at performance&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;When it comes to performance, getting data from an array takes time, cause you have to check every items inside an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Samuel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;marvin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;james&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// output: { id: 3, name: 'marvin', age: 26 }&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While in Object You can change the property names as an id (you can be creative in naming properties for your objects), this makes even faster when fetching data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// in this example the properties name I did, is a string "id_"+id&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;id_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Samuel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;id_3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;marvin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;id_4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;james&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id_4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// or objects['id_4']&lt;/span&gt;
&lt;span class="c1"&gt;//{ id: 4, name: 'james', age: 28 }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you look at objects, we can easily get data using property names makes it even faster, you don't have to loop every data.&lt;/p&gt;

&lt;p&gt;Here is a performance testing using a low spec laptop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32994&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}];&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// this is the array&lt;/span&gt;
&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32994&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32994&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt; &lt;span class="c1"&gt;// this is the object&lt;/span&gt;
&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;29938&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;32994&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32994&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// lets generate 2000 data on each.&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//lets add items to our array a2 and object variable called o,&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;newNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60000&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()])&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newNo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first test is array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// this took 1049 ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the 2nd test is the associative array (object).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;29938&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// this took 43ms!!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The 3rd test is the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;29938&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// this took 51ms!!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we have generated 2000+ data, and associative array (objects) and the object type are a clear winner here.&lt;/p&gt;




&lt;p&gt;Thanks for Reading my short articles, If you like to Buy me coffee, click the image.&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/BroJenuel"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9AgwkMw4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/BroJenuel/BroJenuel/master/images/buymecoffee.svg" alt="drawing" title="buy me coffee" width="400" height="150"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>news</category>
      <category>typescript</category>
    </item>
    <item>
      <title>k8s-the-hard-way</title>
      <author>Haider Raed</author>
      <pubDate>Wed, 27 Oct 2021 06:39:42 +0000</pubDate>
      <link>https://dev.to/haydercyber/k8s-the-hard-way-4nmc</link>
      <guid>https://dev.to/haydercyber/k8s-the-hard-way-4nmc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#kubernetes-the-hard-way"&gt;
  &lt;/a&gt;
  Kubernetes The Hard Way
&lt;/h2&gt;

&lt;p&gt;This tutorial walks you through setting up Kubernetes the hard way. This guide is not for people looking for a fully automated command to bring up a Kubernetes cluster. If that's you then check out &lt;a href="https://cloud.google.com/kubernetes-engine"&gt;Google Kubernetes Engine&lt;/a&gt;, or the &lt;a href="https://kubernetes.io/docs/setup"&gt;Getting Started Guides&lt;/a&gt;. the repo &lt;a href="https://github.com/haydercyber/k8s-the-hard-way"&gt;k8s-the-hard-way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kubernetes The Hard Way is optimized for learning, which means taking the long route to ensure you understand each task required to bootstrap a Kubernetes cluster.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The results of this tutorial should not be viewed as production ready, and may receive limited support from the community, but don't let that stop you from learning!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#target-audience"&gt;
  &lt;/a&gt;
  Target Audience
&lt;/h2&gt;

&lt;p&gt;The target audience for this tutorial is someone planning to support a production Kubernetes cluster and wants to understand how everything fits together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cluster-details"&gt;
  &lt;/a&gt;
  Cluster Details
&lt;/h2&gt;

&lt;p&gt;Kubernetes The Hard Way guides you through bootstrapping a highly available Kubernetes cluster with end-to-end encryption between components and RBAC authentication.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/kubernetes/kubernetes"&gt;kubernetes&lt;/a&gt; v1.21.0&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/containerd/containerd"&gt;containerd&lt;/a&gt; v1.4.4&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coredns/coredns"&gt;coredns&lt;/a&gt; v1.8.3&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/containernetworking/cni"&gt;cni&lt;/a&gt; v0.9.1&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt; v3.4.15&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#labs"&gt;
  &lt;/a&gt;
  Labs
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;its Need 6 centos vm 

&lt;ul&gt;
&lt;li&gt;A compatible Linux host. The Kubernetes project provides generic instructions &lt;/li&gt;
&lt;li&gt;2 GB or more of RAM per machine (any less will leave little room for your apps).&lt;/li&gt;
&lt;li&gt;2 CPUs or more.&lt;/li&gt;
&lt;li&gt;Full network connectivity between all machines in the cluster (public or private network is fine).&lt;/li&gt;
&lt;li&gt; Unique hostname, MAC address, and product_uuid for every node. See here for more details.&lt;/li&gt;
&lt;li&gt;Swap disabled. You MUST disable swap in order for the kubelet to work properly
&amp;gt; you can see the lab digram  in your case you only to change the ip for your machine edit hostname and mapping to your machines ip then add to /etc/hosts
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" alt="digram screenshot" width="880" height="929"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#editing-host-file"&gt;
  &lt;/a&gt;
  editing host file
&lt;/h2&gt;

&lt;p&gt;note: the ip will change to your ip range&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; /etc/hosts 
192.168.0.1 kubecon01.k8s.com
192.168.0.2 kubecon02.k8s.com
192.168.0.5 worknode01.k8s.com
192.168.0.6 worknode02.k8s.com
192.168.0.3 api_loadbalancer.k8s.com
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-some-package-in-machine-will-help-you"&gt;
  &lt;/a&gt;
  Install Some Package in machine will help you
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# yum install bash-completion vim telnet -y 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#make-sure-the-firewalld-servies-is-stop-and-disabled"&gt;
  &lt;/a&gt;
  make sure the firewalld servies is stop and disabled
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# systemctl disable --now firewalld
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#make-sure-the-selinux-is-disabled"&gt;
  &lt;/a&gt;
  make sure the Selinux is disabled
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# setenforce 0
# sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#installing-the-client-tools"&gt;
  &lt;/a&gt;
  Installing the Client Tools
&lt;/h2&gt;

&lt;p&gt;In this lab you will install the command line utilities required to complete this tutorial: &lt;a href="https://github.com/cloudflare/cfssl"&gt;cfssl&lt;/a&gt;, &lt;a href="https://github.com/cloudflare/cfssl"&gt;cfssljson&lt;/a&gt;, and &lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl"&gt;kubectl&lt;/a&gt;.&lt;br&gt;
in this lissions will work on remote kubectl &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-cfssl"&gt;
  &lt;/a&gt;
  Install CFSSL
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;cfssl&lt;/code&gt; and &lt;code&gt;cfssljson&lt;/code&gt; command line utilities will be used to provision a &lt;a href="https://en.wikipedia.org/wiki/Public_key_infrastructure"&gt;PKI Infrastructure&lt;/a&gt; and generate TLS certificates.&lt;/p&gt;

&lt;p&gt;Download and install &lt;code&gt;cfssl&lt;/code&gt; and &lt;code&gt;cfssljson&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# wget https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssl
# wget https://storage.googleapis.com/kubernetes-the-hard-way/cfssl/1.4.1/linux/cfssljson
# chmod +x cfssl cfssljson
# sudo mv cfssl cfssljson /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h2&gt;

&lt;p&gt;Verify &lt;code&gt;cfssl&lt;/code&gt; and &lt;code&gt;cfssljson&lt;/code&gt; version 1.4.1 or higher is installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cfssl version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Version: 1.4.1
Runtime: go1.12.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cfssljson --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Version: 1.4.1
Runtime: go1.12.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-kubectl"&gt;
  &lt;/a&gt;
  Install kubectl
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;kubectl&lt;/code&gt; command line utility is used to interact with the Kubernetes API Server. Download and install &lt;code&gt;kubectl&lt;/code&gt; from the official release binaries:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# wget https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
# chmod +x kubectl
# sudo mv kubectl /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h3&gt;

&lt;p&gt;Verify &lt;code&gt;kubectl&lt;/code&gt; version 1.21.0 or higher is installed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl version --client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Client Version: version.Info{Major:"1", Minor:"21", GitVersion:"v1.21.0", GitCommit:"cb303e613a121a29364f75cc67d3d580833a7479", GitTreeState:"clean", BuildDate:"2021-04-08T16:31:21Z", GoVersion:"go1.16.1", Compiler:"gc", Platform:"linux/amd64"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#provisioning-a-ca-and-generating-tls-certificates"&gt;
  &lt;/a&gt;
  Provisioning a CA and Generating TLS Certificates
&lt;/h1&gt;

&lt;p&gt;In this lab you will provision a &lt;a href="https://en.wikipedia.org/wiki/Public_key_infrastructure"&gt;PKI Infrastructure&lt;/a&gt; using CloudFlare's PKI toolkit, &lt;a href="https://github.com/cloudflare/cfssl"&gt;cfssl&lt;/a&gt;, then use it to bootstrap a Certificate Authority, and generate TLS certificates for the following components: etcd, kube-apiserver, kube-controller-manager, kube-scheduler, kubelet, and kube-proxy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-need-a-ca-and-tls-certificates"&gt;
  &lt;/a&gt;
  Why Do We Need a CA and TLS Certificates?
&lt;/h2&gt;

&lt;p&gt;Note: In this section, we will be provisioning a certificate authority (CA). We will then use the CA to generate several certificates&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#certificates"&gt;
  &lt;/a&gt;
  Certificates.
&lt;/h2&gt;

&lt;p&gt;are used to confirm (authenticate) identity. They are used to prove that you are who you say you are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#certificate-authority"&gt;
  &lt;/a&gt;
  Certificate Authority
&lt;/h2&gt;

&lt;p&gt;provides the ability to confirm that a certificate is valid. A certificate authority can be used to validate any certificate that was issued using that certificate authority. Kubernetes uses certificates for a variety of security functions, and the different parts of our cluster will validate certificates using the certificate authority. In this section, we will generate all of these certificates and copy the necessary files to the servers that need them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-certificates-do-we-need"&gt;
  &lt;/a&gt;
  What Certificates Do We Need?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Client Certificates 

&lt;ul&gt;
&lt;li&gt;These certificates provide client authentication for various users: admin, kubecontroller-manager, kube-proxy, kube-scheduler, and the kubelet client on each worker node. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Kubernetes API Server Certificate

&lt;ul&gt;
&lt;li&gt;This is the TLS certificate for the Kubernetes API.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Service Account Key Pair 

&lt;ul&gt;
&lt;li&gt;Kubernetes uses a certificate to sign service account tokens, so we need to provide a certificate for that purpose.
## Provisioning the Certificate Authority
In order to generate the certificates needed by Kubernetes, you must first provision a certificate authority. This lesson will guide you through the process of provisioning a new certificate authority for your Kubernetes cluster. After completing this lesson, you should have a certificate authority, which consists of two files: ca-key.pem and ca.pem
lets create dir that contains all certificates 
## Generating Client Certificates
Now that you have provisioned a certificate authority for the Kubernetes cluster, you are ready to begin generating certificates. The first set of certificates you will need to generate consists of the client certificates used by various Kubernetes components. In this lesson, we will generate the following client certificates: admin , kubelet (one for each worker node), kube-controller-manager , kube-proxy , and kube-scheduler . After completing this lesson, you will have the client certificate files which you will need later to set up the cluster. Here are the commands used in the demo. The command blocks surrounded by curly braces can be entered as a single command: 
In this lab you will provision a PKI Infrastructure using CloudFlare's PKI toolkit, cfssl, then use it to bootstrap a Certificate Authority, and generate TLS certificates for the following components: etcd, kube-apiserver, kube-controller-manager, kube-scheduler, kubelet, and kube-proxy.
## Certificate Authority
In this section you will provision a Certificate Authority that can be used to generate additional TLS certificates.
Generate the CA configuration file, certificate, and private key:
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir k8s
# cd k8s 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use this command to generate the certificate authority. Include the opening and closing curly braces to run this entire block as a single command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; ca-config.json &amp;lt;&amp;lt;EOF
{
  "signing": {
    "default": {
      "expiry": "8760h"
    },
    "profiles": {
      "kubernetes": {
        "usages": ["signing", "key encipherment", "server auth", "client auth"],
        "expiry": "8760h"
      }
    }
  }
}
EOF

cat &amp;gt; ca-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "Kubernetes",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "Kubernetes",
      "OU": "CA",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert -initca ca-csr.json | cfssljson -bare ca

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ca-key.pem
ca.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#client-and-server-certificates"&gt;
  &lt;/a&gt;
  Client and Server Certificates
&lt;/h2&gt;

&lt;p&gt;In this section you will generate client and server certificates for each Kubernetes component and a client certificate for the Kubernetes &lt;code&gt;admin&lt;/code&gt; user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-admin-client-certificate"&gt;
  &lt;/a&gt;
  The Admin Client Certificate
&lt;/h3&gt;

&lt;p&gt;Generate the &lt;code&gt;admin&lt;/code&gt; client certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; admin-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "admin",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "system:masters",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  admin-csr.json | cfssljson -bare admin

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;admin-key.pem
admin.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-kubelet-client-certificates"&gt;
  &lt;/a&gt;
  The Kubelet Client Certificates
&lt;/h2&gt;

&lt;p&gt;Kubernetes uses a &lt;a href="https://kubernetes.io/docs/admin/authorization/node/"&gt;special-purpose authorization mode&lt;/a&gt; called Node Authorizer, that specifically authorizes API requests made by &lt;a href="https://kubernetes.io/docs/concepts/overview/components/#kubelet"&gt;Kubelets&lt;/a&gt;. In order to be authorized by the Node Authorizer, Kubelets must use a credential that identifies them as being in the &lt;code&gt;system:nodes&lt;/code&gt; group, with a username of &lt;code&gt;system:node:&amp;lt;nodeName&amp;gt;&lt;/code&gt;. In this section you will create a certificate for each Kubernetes worker node that meets the Node Authorizer requirements.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Kubelet Client certificates. Be sure to enter your actual machines values for all four of the variables at the top:&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" alt="digram screenshot" width="880" height="929"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# WORKER0_HOST=worknode01.k8s.com
# WORKER0_IP=192.168.0.5
# WORKER1_HOST=worknode02.k8s.com
# WORKER1_IP=192.168.0.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for instance in worknode01.k8s.com worknode02.k8s.com; do
cat &amp;gt; ${instance}-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "system:node:${instance}",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "system:nodes",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF
cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -hostname=${instance} \
  -profile=kubernetes \
  ${instance}-csr.json | cfssljson -bare ${instance}
done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;worknode01.k8s.com-key.pem
worknode01.k8s.com.pem
worknode02.k8s.com-key.pem
worknode02.k8s.com.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-controller-manager-client-certificate"&gt;
  &lt;/a&gt;
  The Controller Manager Client Certificate
&lt;/h3&gt;

&lt;p&gt;Generate the &lt;code&gt;kube-controller-manager&lt;/code&gt; client certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; kube-controller-manager-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "system:kube-controller-manager",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "system:kube-controller-manager",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-controller-manager-key.pem
kube-controller-manager.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-kube-proxy-client-certificate"&gt;
  &lt;/a&gt;
  The Kube Proxy Client Certificate
&lt;/h3&gt;

&lt;p&gt;Generate the &lt;code&gt;kube-proxy&lt;/code&gt; client certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; kube-proxy-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "system:kube-proxy",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "system:node-proxier",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  kube-proxy-csr.json | cfssljson -bare kube-proxy

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-proxy-key.pem
kube-proxy.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-scheduler-client-certificate"&gt;
  &lt;/a&gt;
  The Scheduler Client Certificate
&lt;/h3&gt;

&lt;p&gt;Generate the &lt;code&gt;kube-scheduler&lt;/code&gt; client certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; kube-scheduler-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "system:kube-scheduler",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "system:kube-scheduler",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  kube-scheduler-csr.json | cfssljson -bare kube-scheduler

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-scheduler-key.pem
kube-scheduler.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-kubernetes-api-server-certificate"&gt;
  &lt;/a&gt;
  The Kubernetes API Server Certificate
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;kubernetes-the-hard-way&lt;/code&gt; static IP address will be included in the list of subject alternative names for the Kubernetes API Server certificate. This will ensure the certificate can be validated by remote clients.&lt;br&gt;
We have generated all of the the client certificates our Kubernetes cluster will need, but we also need a server certificate for the Kubernetes API. In this lesson, we will generate one, signed with all of the hostnames and IPs that may be used later in order to access the Kubernetes API. After completing this lesson, you will have a Kubernetes API server certificate in the form of two files called kubernetes-key.pem  and kubernetes.pem . &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here are the commands used in the demo. Be sure to replace all the placeholder values in CERT_HOSTNAME with their real values from your machines .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" alt="digram screenshot" width="880" height="929"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# CERT_HOSTNAME=10.32.0.1,&amp;lt;controller node 1 Private IP&amp;gt;,&amp;lt;controller node 1 hostname&amp;gt;,&amp;lt;controller node 2 Private IP&amp;gt;,&amp;lt;controller node 2 hostname&amp;gt;,&amp;lt;API load balancer Private IP&amp;gt;,&amp;lt;API load balancer hostname&amp;gt;,127.0.0.1,localhost,kubernetes.default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CERT_HOSTNAME=10.32.0.1,192.168.0.1,kubecon01.k8s.com,192.168.0.2,kubecon02.k8s.com,192.168.0.3,api_loadbalancer.k8s.com,127.0.0.1,localhost,kubernetes.default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generate the Kubernetes API Server certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
cat &amp;gt; kubernetes-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "kubernetes",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "Kubernetes",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -hostname=${CERT_HOSTNAME} \
  -profile=kubernetes \
  kubernetes-csr.json | cfssljson -bare kubernetes

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The Kubernetes API server is automatically assigned the &lt;code&gt;kubernetes&lt;/code&gt; internal dns name, which will be linked to the first IP address (&lt;code&gt;10.32.0.1&lt;/code&gt;) from the address range (&lt;code&gt;10.32.0.0/24&lt;/code&gt;) reserved for internal cluster services during the &lt;a href="//07-bootstrapping-kubernetes-controllers.md#configure-the-kubernetes-api-server"&gt;control plane bootstrapping&lt;/a&gt; lab.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubernetes-key.pem
kubernetes.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kubernetes provides the ability for service accounts to authenticate using tokens. It uses a key-pair to provide signatures for those tokens. In this lesson, we will generate a certificate that will be used as that key-pair. After completing this lesson, you will have a certificate ready to be used as a service account key-pair in the form of two files: service-account-key.pem and service-account.pem . Here are the commands used&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-service-account-key-pair"&gt;
  &lt;/a&gt;
  The Service Account Key Pair
&lt;/h2&gt;

&lt;p&gt;The Kubernetes Controller Manager leverages a key pair to generate and sign service account tokens as described in the &lt;a href="https://kubernetes.io/docs/admin/service-accounts-admin/"&gt;managing service accounts&lt;/a&gt; documentation.&lt;/p&gt;

&lt;p&gt;Generate the &lt;code&gt;service-account&lt;/code&gt; certificate and private key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{

cat &amp;gt; service-account-csr.json &amp;lt;&amp;lt;EOF
{
  "CN": "service-accounts",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "Kubernetes",
      "OU": "Kubernetes The Hard Way",
      "ST": "Oregon"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  service-account-csr.json | cfssljson -bare service-account

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service-account-key.pem
service-account.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#distribute-the-client-and-server-certificates"&gt;
  &lt;/a&gt;
  Distribute the Client and Server Certificates
&lt;/h2&gt;

&lt;p&gt;Copy the appropriate certificates and private keys to each worker instance:&lt;br&gt;
Now that all of the necessary certificates have been generated, we need to move the files onto the appropriate servers. In this lesson, we will copy the necessary certificate files to each of our cloud servers. After completing this lesson, your controller and worker nodes should each have the certificate files which they need. Here are the commands used in the demo. Be sure to replace the placeholders with the actual values from from your cloud servers. Move certificate files to the worker nodes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# scp ca.pem $WORKER0_HOST-key.pem $WORKER0_HOST.pem root@$WORKER0_HOST:~/
# scp ca.pem $WORKER1_HOST-key.pem $WORKER1_HOST.pem root@$WORKER1_HOST:~/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move certificate files to the controller nodes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# scp ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem service-account-key.pem service-account.pem root@kubecon01.k8s.com:~/
# scp ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem service-account-key.pem service-account.pem root@kubecon02.k8s.com:~/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#generating-kubernetes-configuration-files-for-authentication"&gt;
  &lt;/a&gt;
  Generating Kubernetes Configuration Files for Authentication
&lt;/h1&gt;

&lt;p&gt;In this lab you will generate &lt;a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/"&gt;Kubernetes configuration files&lt;/a&gt;, also known as kubeconfigs, which enable Kubernetes clients to locate and authenticate to the Kubernetes API Servers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-kubeconfigs-and-why-do-we-need-them"&gt;
  &lt;/a&gt;
  What Are Kubeconfigs and Why Do We Need Them?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Kubeconfigs

&lt;ul&gt;
&lt;li&gt;A Kubernetes configuration file, or kubeconfig, is a file that stores “information about clusters, users, namespaces, and authentication     mechanisms.” It contains the configuration data needed to connect to and interact with one or more Kubernetes clusters. You can find more information about kubeconfigs in the Kubernetes documentation: &lt;a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/"&gt;Kubernetes configuration files&lt;/a&gt;, Kubeconfigs contain information such as

&lt;ul&gt;
&lt;li&gt;The location of the cluster you want to connect to&lt;/li&gt;
&lt;li&gt;What user you want to authenticate as&lt;/li&gt;
&lt;li&gt;Data needed in order to authenticate, such as tokens or client certificates&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;You can even define multiple contexts in a kubeconfig file, allowing you to easily switch between multiple clusters.
&lt;h2&gt;
  &lt;a href="#why-do-we-need-kubeconfigs" class="anchor"&gt;
  &lt;/a&gt;
  Why Do We Need Kubeconfigs? &lt;/h2&gt;
&lt;/li&gt;



&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to Generate a Kubeconfig 

&lt;ul&gt;
&lt;li&gt;Kubeconfigs can be generated using kubectl
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl config set-cluster // set up the configuration for the location of the cluster.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl config set-credentials // set the username and client certificate that will be used to authenticate.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl config set-context default // set up the default context
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl config use-context default // set the current context to the configuration we provided
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-kubeconfigs-do-we-need-to-generate"&gt;
  &lt;/a&gt;
  What Kubeconfigs Do We Need to Generate?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We will need several Kubeconfig files for various components of the Kubernetes cluster:

&lt;ul&gt;
&lt;li&gt;Kubelet(one for each worker node)&lt;/li&gt;
&lt;li&gt;Kube-proxy&lt;/li&gt;
&lt;li&gt;Kube-controller-manager&lt;/li&gt;
&lt;li&gt;Kube-scheduler &lt;/li&gt;
&lt;li&gt;Admin&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The next step in building a Kubernetes cluster the hard way is to generate kubeconfigs which will be used by the various services that will make up the cluster. In this lesson, we will generate these kubeconfigs. After completing this lesson, you should have a set of kubeconfigs which you will need later in order to configure the Kubernetes cluster. Here are the commands used in the demo. Be sure to replace the placeholders with actual values from your machine . Create an environment variable to store the address of the Kubernetes API, and set it to the  IP of your load balancer
&amp;gt; in our digram the ip for loadblancer is 192.168.0.3 you can see blow 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" alt="digram screenshot" width="880" height="929"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# KUBERNETES_PUBLIC_ADDRESS=192.168.0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#client-authentication-configs"&gt;
  &lt;/a&gt;
  Client Authentication Configs
&lt;/h2&gt;

&lt;p&gt;In this section you will generate kubeconfig files for the &lt;code&gt;controller manager&lt;/code&gt;, &lt;code&gt;kubelet&lt;/code&gt;, &lt;code&gt;kube-proxy&lt;/code&gt;, and &lt;code&gt;scheduler&lt;/code&gt; clients and the &lt;code&gt;admin&lt;/code&gt; user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-kubelet-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The kubelet Kubernetes Configuration File
&lt;/h3&gt;

&lt;p&gt;When generating kubeconfig files for Kubelets the client certificate matching the Kubelet's node name must be used. This will ensure Kubelets are properly authorized by the Kubernetes &lt;a href="https://kubernetes.io/docs/admin/authorization/node/"&gt;Node Authorizer&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The following commands must be run in the same directory used to generate the SSL certificates during the &lt;a href="//04-certificate-authority.md"&gt;Generating TLS Certificates&lt;/a&gt; lab.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Generate a kubeconfig file for each worker node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for instance in worknode01.k8s.com worknode02.k8s.com; do
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 \
    --kubeconfig=${instance}.kubeconfig

  kubectl config set-credentials system:node:${instance} \
    --client-certificate=${instance}.pem \
    --client-key=${instance}-key.pem \
    --embed-certs=true \
    --kubeconfig=${instance}.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:node:${instance} \
    --kubeconfig=${instance}.kubeconfig

  kubectl config use-context default --kubeconfig=${instance}.kubeconfig
done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;worknode01.k8s.com.kubeconfig
worknode02.k8s.com.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-kubeproxy-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The kube-proxy Kubernetes Configuration File
&lt;/h3&gt;

&lt;p&gt;Generate a kubeconfig file for the &lt;code&gt;kube-proxy&lt;/code&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 \
    --kubeconfig=kube-proxy.kubeconfig

  kubectl config set-credentials system:kube-proxy \
    --client-certificate=kube-proxy.pem \
    --client-key=kube-proxy-key.pem \
    --embed-certs=true \
    --kubeconfig=kube-proxy.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-proxy \
    --kubeconfig=kube-proxy.kubeconfig

  kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-proxy.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-kubecontrollermanager-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The kube-controller-manager Kubernetes Configuration File
&lt;/h3&gt;

&lt;p&gt;Generate a kubeconfig file for the &lt;code&gt;kube-controller-manager&lt;/code&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=kube-controller-manager.kubeconfig

  kubectl config set-credentials system:kube-controller-manager \
    --client-certificate=kube-controller-manager.pem \
    --client-key=kube-controller-manager-key.pem \
    --embed-certs=true \
    --kubeconfig=kube-controller-manager.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-controller-manager \
    --kubeconfig=kube-controller-manager.kubeconfig

  kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-controller-manager.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-kubescheduler-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The kube-scheduler Kubernetes Configuration File
&lt;/h3&gt;

&lt;p&gt;Generate a kubeconfig file for the &lt;code&gt;kube-scheduler&lt;/code&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=kube-scheduler.kubeconfig

  kubectl config set-credentials system:kube-scheduler \
    --client-certificate=kube-scheduler.pem \
    --client-key=kube-scheduler-key.pem \
    --embed-certs=true \
    --kubeconfig=kube-scheduler.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-scheduler \
    --kubeconfig=kube-scheduler.kubeconfig

  kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kube-scheduler.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-admin-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The admin Kubernetes Configuration File
&lt;/h3&gt;

&lt;p&gt;Generate a kubeconfig file for the &lt;code&gt;admin&lt;/code&gt; user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=admin.kubeconfig

  kubectl config set-credentials admin \
    --client-certificate=admin.pem \
    --client-key=admin-key.pem \
    --embed-certs=true \
    --kubeconfig=admin.kubeconfig

  kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=admin \
    --kubeconfig=admin.kubeconfig

  kubectl config use-context default --kubeconfig=admin.kubeconfig
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;admin.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#distribute-the-kubernetes-configuration-files"&gt;
  &lt;/a&gt;
  Distribute the Kubernetes Configuration Files
&lt;/h2&gt;

&lt;p&gt;Copy the appropriate &lt;code&gt;kubelet&lt;/code&gt; and &lt;code&gt;kube-proxy&lt;/code&gt; kubeconfig files to each worker instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for instance in worknode01.k8s.com worknode02.k8s.com; do
    scp ${instance}.kubeconfig kube-proxy.kubeconfig ${instance}:~/
done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the appropriate &lt;code&gt;kube-controller-manager&lt;/code&gt; and &lt;code&gt;kube-scheduler&lt;/code&gt; kubeconfig files to each controller instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for instance in kubecon01.k8s.com kubecon02.k8s.com; do 
    scp admin.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig ${instance}:~/
done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#generating-the-data-encryption-config-and-key"&gt;
  &lt;/a&gt;
  Generating the Data Encryption Config and Key
&lt;/h1&gt;

&lt;p&gt;Kubernetes stores a variety of data including cluster state, application configurations, and secrets. Kubernetes supports the ability to &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data"&gt;encrypt&lt;/a&gt; cluster data at rest.&lt;/p&gt;

&lt;p&gt;In this lab you will generate an encryption key and an &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#understanding-the-encryption-at-rest-configuration"&gt;encryption config&lt;/a&gt; suitable for encrypting Kubernetes Secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ist-he-kubernetes-data-encryption-config"&gt;
  &lt;/a&gt;
  What Ist he Kubernetes Data Encryption Config?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Kubernetes Secret Encryption &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kubernetes supports the ability to encrypt secret data at rest. This means that secrets are encrypted so that they are never stored on disc in plain text. This feature is important for security, but in order to use it we need to provide Kubernetes with an encryption key. We will generate an encryption key and put it into a configuration file. We will then copy that file to our Kubernetes controller servers.&lt;/li&gt;
&lt;li&gt;In order to make use of Kubernetes' ability to encrypt sensitive data at rest, you need to provide Kubernetes with an encrpytion key using a data encryption config file. This lesson walks you through the process of creating a encryption key and storing it in the necessary file, as well as showing how to copy that file to your Kubernetes controllers. After completing this lesson, you should have a valid Kubernetes data encryption config file, and there should be a copy of that file on each of your Kubernetes controller servers. 
## The Encryption Key
Here are the commands used in the demo. Generate the Kubernetes Data encrpytion config file containing the encrpytion key&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Generate an encryption key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-encryption-config-file"&gt;
  &lt;/a&gt;
  The Encryption Config File
&lt;/h2&gt;

&lt;p&gt;Create the &lt;code&gt;encryption-config.yaml&lt;/code&gt; encryption config file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;gt; encryption-config.yaml &amp;lt;&amp;lt;EOF
kind: EncryptionConfig
apiVersion: v1
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
            - name: key1
              secret: ${ENCRYPTION_KEY}
      - identity: {}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#distribute-the-kubernetes-encryption-config"&gt;
  &lt;/a&gt;
  Distribute the Kubernetes Encryption Config
&lt;/h2&gt;

&lt;p&gt;Copy the &lt;code&gt;encryption-config.yaml&lt;/code&gt; encryption config file to each controller instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for instance in kubecon01.k8s.com kubecon02.k8s.com; do
     scp encryption-config.yaml ${instance}:~/
done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#bootstrapping-the-etcd-cluster"&gt;
  &lt;/a&gt;
  Bootstrapping the etcd Cluster
&lt;/h1&gt;

&lt;p&gt;Kubernetes components are stateless and store cluster state in &lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt;. In this lab you will bootstrap a three node etcd cluster and configure it for high availability and secure remote access.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-etcd"&gt;
  &lt;/a&gt;
  What Is etcd?
&lt;/h2&gt;

&lt;p&gt;“etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines.” &lt;a href="https://coreos.com/etcd/"&gt;etcd&lt;/a&gt; etcd provides a way to store data across a distributed cluster of machines and make sure the data is synchronized across all machines. You can find more information, as well as the etcd source code, in the etcd GitHub repository &lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-etcd-used-in-kubernetes"&gt;
  &lt;/a&gt;
  How Is etcd Used in Kubernetes?
&lt;/h2&gt;

&lt;p&gt;Kubernetes uses etcd to store all of its internal data about cluster state. This data needs to be stored, but it also needs to be reliably synchronized across all controller nodes in the cluster. etcd fulfills that purpose. We will need to install etcd on each of our Kubernetes controller nodes and create an etcd cluster that includes all of those controller nodes. You can find more information on managing an etcd cluster for Kubernetes here &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/"&gt;k8setcd&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-etcd-cluster"&gt;
  &lt;/a&gt;
  Creating the etcd Cluster
&lt;/h2&gt;

&lt;p&gt;Before you can stand up controllers for a Kubernetes cluster, you must first build an etcd cluster across your Kubernetes control nodes. This lesson provides a demonstration of how to set up an etcd cluster in preparation for bootstrapping Kubernetes. After completing this lesson, you should have a working etcd cluster that consists of your Kubernetes control nodes. Here are the commands used in the demo (note that these have to be run on both controller servers, with a few differences between them): &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#download-and-install-the-etcd-binaries"&gt;
  &lt;/a&gt;
  Download and Install the etcd Binaries
&lt;/h3&gt;

&lt;p&gt;Download the official etcd release binaries from the &lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt; GitHub project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget "https://github.com/etcd-io/etcd/releases/download/v3.4.15/etcd-v3.4.15-linux-amd64.tar.gz"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Extract and install the &lt;code&gt;etcd&lt;/code&gt; server and the &lt;code&gt;etcdctl&lt;/code&gt; command line utility:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# tar -xvf etcd-v3.4.15-linux-amd64.tar.gz
# mv etcd-v3.4.15-linux-amd64/etcd* /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-etcd-server"&gt;
  &lt;/a&gt;
  Configure the etcd Server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p /etc/etcd /var/lib/etcd
# chmod 700 /var/lib/etcd
# cp ca.pem kubernetes-key.pem kubernetes.pem /etc/etcd/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up the following environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ETCD_NAME=$(hostname -s)
# INTERNAL_IP=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up the following environment variables. Be sure you replace all of the with their corresponding real values: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;you can see the lab digram  in your case you only to change the ip for varaible &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUdjhKlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5epqrljtutp1kecem38.png" alt="digram screenshot" width="880" height="929"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# CONTROLLER0_IP=192.168.0.1
# CONTROLLER0_host=kubecon01
# CONTROLLER1_IP=192.168.0.2
# CONTROLLER1_host=kubecon02
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;etcd.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/etcd.service
[Unit]
Description=etcd
Documentation=https://github.com/coreos

[Service]
Type=notify
ExecStart=/usr/local/bin/etcd \\
  --name ${ETCD_NAME} \\
  --cert-file=/etc/etcd/kubernetes.pem \\
  --key-file=/etc/etcd/kubernetes-key.pem \\
  --peer-cert-file=/etc/etcd/kubernetes.pem \\
  --peer-key-file=/etc/etcd/kubernetes-key.pem \\
  --trusted-ca-file=/etc/etcd/ca.pem \\
  --peer-trusted-ca-file=/etc/etcd/ca.pem \\
  --peer-client-cert-auth \\
  --client-cert-auth \\
  --initial-advertise-peer-urls https://${INTERNAL_IP}:2380 \\
  --listen-peer-urls https://${INTERNAL_IP}:2380 \\
  --listen-client-urls https://${INTERNAL_IP}:2379,https://127.0.0.1:2379 \\
  --advertise-client-urls https://${INTERNAL_IP}:2379 \\
  --initial-cluster-token etcd-cluster-0 \\
  --initial-cluster ${CONTROLLER0_host}=https://${CONTROLLER0_IP}:2380,${CONTROLLER1_host}=https://${CONTROLLER1_IP}:2380 \\
  --initial-cluster-state new \\
  --data-dir=/var/lib/etcd
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#start-the-etcd-server"&gt;
  &lt;/a&gt;
  Start the etcd Server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# systemctl daemon-reload
# systemctl enable etcd
# systemctl start etcd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Remember to run the above commands on each controller node: &lt;code&gt;kubecon01&lt;/code&gt;, &lt;code&gt;kubecon02&lt;/code&gt; .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h2&gt;

&lt;p&gt;List the etcd cluster members:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo ETCDCTL_API=3 etcdctl member list \
  --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/etcd/ca.pem \
  --cert=/etc/etcd/kubernetes.pem \
  --key=/etc/etcd/kubernetes-key.pem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;19e6cf768d9d542e, started, kubecon02, https://192.168.0.2:2380, https://192.168.0.2:2379, false
508e54ff346cdb88, started, kubecon01, https://192.168.0.1:2380, https://192.168.0.1:2379, false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#bootstrapping-the-kubernetes-control-plane"&gt;
  &lt;/a&gt;
  Bootstrapping the Kubernetes Control Plane
&lt;/h1&gt;

&lt;p&gt;In this lab you will bootstrap the Kubernetes control plane across three compute instances and configure it for high availability. You will also create an external load balancer that exposes the Kubernetes API Servers to remote clients. The following components will be installed on each node: Kubernetes API Server, Scheduler, and Controller Manager.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;The commands in this lab must be run on each controller instance: &lt;code&gt;kubecon01&lt;/code&gt;, &lt;code&gt;kubecon02&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#provision-the-kubernetes-control-plane"&gt;
  &lt;/a&gt;
  Provision the Kubernetes Control Plane
&lt;/h2&gt;

&lt;p&gt;The first step in bootstrapping a new Kubernetes control plane is to install the necessary binaries on the controller servers. We will walk through the process of downloading and installing the binaries on both Kubernetes controllers. This will prepare your environment for the lessons that follow, in which we will configure these binaries to run as  systemd  services. You can install the control plane binaries on each control node like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p /etc/kubernetes/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#download-and-install-the-kubernetes-controller-binaries"&gt;
  &lt;/a&gt;
  Download and Install the Kubernetes Controller Binaries
&lt;/h3&gt;

&lt;p&gt;Download the official Kubernetes release binaries&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# wget "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-apiserver" \
  "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-controller-manager" \
  "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-scheduler" \
  "https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets change the permission to be executable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# chmod +x kube-apiserver kube-controller-manager kube-scheduler kubectl 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets mv binary to /usr/local/bin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mv kube-apiserver kube-controller-manager kube-scheduler kubectl /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-kubernetes-api-server"&gt;
  &lt;/a&gt;
  Configure the Kubernetes API Server
&lt;/h3&gt;

&lt;p&gt;The Kubernetes API server provides the primary interface for the Kubernetes control plane and the cluster as a whole. When you interact with Kubernetes, you are nearly always doing it through the Kubernetes API server. This lesson will guide you through the process of configuring the kube-apiserver service on your two Kubernetes control nodes. After completing this lesson, you should have a  systemd  unit set up to run kube-apiserver as a service on each Kubernetes control node. You can configure the Kubernetes API server like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p /var/lib/kubernetes/
# mv ca.pem ca-key.pem kubernetes-key.pem kubernetes.pem \
    service-account-key.pem service-account.pem \
    encryption-config.yaml /var/lib/kubernetes/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set some environment variables that will be used to create the  systemd  unit file. Make sure you replace the placeholders with their actual values&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# INTERNAL_IP=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
# CONTROLLER0_IP=192.168.0.1
# KUBERNETES_PUBLIC_ADDRESS=$(/sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
# CONTROLLER1_IP=192.168.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generate the kube-apiserver unit file for  systemd :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/kube-apiserver.service
[Unit]
Description=Kubernetes API Server
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-apiserver \\
  --advertise-address=${INTERNAL_IP} \\
  --allow-privileged=true \\
  --apiserver-count=3 \\
  --audit-log-maxage=30 \\
  --audit-log-maxbackup=3 \\
  --audit-log-maxsize=100 \\
  --audit-log-path=/var/log/audit.log \\
  --authorization-mode=Node,RBAC \\
  --bind-address=0.0.0.0 \\
  --client-ca-file=/var/lib/kubernetes/ca.pem \\
  --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \\
  --etcd-cafile=/var/lib/kubernetes/ca.pem \\
  --etcd-certfile=/var/lib/kubernetes/kubernetes.pem \\
  --etcd-keyfile=/var/lib/kubernetes/kubernetes-key.pem \\
  --etcd-servers=https://${CONTROLLER0_IP}:2379,https://${CONTROLLER1_IP}:2379 \\
  --event-ttl=1h \\
  --encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml \\
  --kubelet-certificate-authority=/var/lib/kubernetes/ca.pem \\
  --kubelet-client-certificate=/var/lib/kubernetes/kubernetes.pem \\
  --kubelet-client-key=/var/lib/kubernetes/kubernetes-key.pem \\
  --service-account-key-file=/var/lib/kubernetes/service-account.pem \\
  --service-account-signing-key-file=/var/lib/kubernetes/service-account-key.pem \\
  --service-account-issuer=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 \\
  --service-cluster-ip-range=10.32.0.0/24 \\
  --service-node-port-range=30000-32767 \\
  --tls-cert-file=/var/lib/kubernetes/kubernetes.pem \\
  --tls-private-key-file=/var/lib/kubernetes/kubernetes-key.pem \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-kubernetes-controller-manager"&gt;
  &lt;/a&gt;
  Configure the Kubernetes Controller Manager
&lt;/h3&gt;

&lt;p&gt;Move the &lt;code&gt;kube-controller-manager&lt;/code&gt; kubeconfig into place:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv kube-controller-manager.kubeconfig /var/lib/kubernetes/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kube-controller-manager.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/kube-controller-manager.service
[Unit]
Description=Kubernetes Controller Manager
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-controller-manager \\
  --bind-address=0.0.0.0 \\
  --cluster-cidr=10.200.0.0/16 \\
  --cluster-name=kubernetes \\
  --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \\
  --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \\
  --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \\
  --leader-elect=true \\
  --root-ca-file=/var/lib/kubernetes/ca.pem \\
  --service-account-private-key-file=/var/lib/kubernetes/service-account-key.pem \\
  --service-cluster-ip-range=10.32.0.0/24 \\
  --use-service-account-credentials=true \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-kubernetes-scheduler"&gt;
  &lt;/a&gt;
  Configure the Kubernetes Scheduler
&lt;/h3&gt;

&lt;p&gt;Move the &lt;code&gt;kube-scheduler&lt;/code&gt; kubeconfig into place:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo mv kube-scheduler.kubeconfig /var/lib/kubernetes/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kube-scheduler.yaml&lt;/code&gt; configuration file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/kubernetes/config/kube-scheduler.yaml
apiVersion: kubescheduler.config.k8s.io/v1beta1
kind: KubeSchedulerConfiguration
clientConnection:
  kubeconfig: "/var/lib/kubernetes/kube-scheduler.kubeconfig"
leaderElection:
  leaderElect: true
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kube-scheduler.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/kube-scheduler.service
[Unit]
Description=Kubernetes Scheduler
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-scheduler \\
  --config=/etc/kubernetes/config/kube-scheduler.yaml \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#start-the-controller-services"&gt;
  &lt;/a&gt;
  Start the Controller Services
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# systemctl daemon-reload
# systemctl enable kube-apiserver kube-controller-manager kube-scheduler
# systemctl start kube-apiserver kube-controller-manager kube-scheduler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Allow up to 10 seconds for the Kubernetes API Server to fully initialize.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#enable-http-health-checks"&gt;
  &lt;/a&gt;
  Enable HTTP Health Checks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Why Do We Need to Enable HTTP Health Checks? 

&lt;ul&gt;
&lt;li&gt;In Kelsey Hightower’s original Kubernetes the Hard Way guide, he uses a Good Cloud Platform (GCP) load balancer. The load balancer needs to  be able to perform health checks against the Kubernetes API to measure the health status of API nodes. The GCP load balancer cannot easily perform health checks over HTTPS, so the guide instructs us to set up a proxy server to allow these health checks to be performed over HTTP. Since we are using Nginx as our load balancer, we don’t actually need to do this, but it will be good practice for us. This exercise will help you understand the methods used in the original guide.&lt;/li&gt;
&lt;li&gt;Part of Kelsey Hightower's original Kubernetes the Hard Way guide involves setting up an nginx proxy on each controller to provide access    to
&lt;/li&gt;
&lt;li&gt;the Kubernetes API /healthz endpoint over http  This lesson explains the reasoning behind the inclusion of that step and guides you through
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- the process of implementing the http /healthz proxy. You can set up a basic nginx proxy for the healthz endpoint by first installing nginx" 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;/healthz&lt;/code&gt; API server endpoint does not require authentication by default.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Install a basic web server to handle HTTP health checks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# yum install epel-release  nginx -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an nginx configuration for the health check proxy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;gt; /etc/nginx/conf.d/kubernetes.default.svc.cluster.local.conf &amp;lt;&amp;lt;EOF
server {
  listen      80;
  server_name kubernetes.default.svc.cluster.local;

  location /healthz {
     proxy_pass                    https://127.0.0.1:6443/healthz;
     proxy_ssl_trusted_certificate /var/lib/kubernetes/ca.pem;
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Started and enabled nginx&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# systemctl enable --now nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl cluster-info --kubeconfig admin.kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Kubernetes control plane is running at https://127.0.0.1:6443
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Test the nginx HTTP health check proxy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -H "Host: kubernetes.default.svc.cluster.local" -i http://127.0.0.1/healthz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: nginx/1.18.0 (Ubuntu)
Date: Sun, 02 May 2021 04:19:29 GMT
Content-Type: text/plain; charset=utf-8
Content-Length: 2
Connection: keep-alive
Cache-Control: no-cache, private
X-Content-Type-Options: nosniff
X-Kubernetes-Pf-Flowschema-Uid: c43f32eb-e038-457f-9474-571d43e5c325
X-Kubernetes-Pf-Prioritylevel-Uid: 8ba5908f-5569-4330-80fd-c643e7512366

ok
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Remember to run the above commands on each controller node: &lt;code&gt;kubecon01&lt;/code&gt;, &lt;code&gt;kubecon02&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#rbac-for-kubelet-authorization"&gt;
  &lt;/a&gt;
  RBAC for Kubelet Authorization
&lt;/h2&gt;

&lt;p&gt;One of the necessary steps in setting up a new Kubernetes cluster from scratch is to assign permissions that allow the Kubernetes API to access various functionality within the worker kubelets. This lesson guides you through the process of creating a ClusterRole and binding it to the kubernetes user so that those permissions will be in place. After completing this lesson, your cluster will have the necessary role-based access control configuration to allow the cluster's API to access kubelet functionality such as logs and metrics. You can configure RBAC for kubelet authorization with these commands. Note that these commands only need to be run on one control node. Create a role with the necessary permissions&lt;/p&gt;

&lt;p&gt;In this section you will configure RBAC permissions to allow the Kubernetes API Server to access the Kubelet API on each worker node. Access to the Kubelet API is required for retrieving metrics, logs, and executing commands in pods.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This tutorial sets the Kubelet &lt;code&gt;--authorization-mode&lt;/code&gt; flag to &lt;code&gt;Webhook&lt;/code&gt;. Webhook mode uses the &lt;a href="https://kubernetes.io/docs/admin/authorization/#checking-api-access"&gt;SubjectAccessReview&lt;/a&gt; API to determine authorization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The commands in this section will effect the entire cluster and only need to be run once from one of the controller nodes.&lt;/p&gt;

&lt;p&gt;Create the &lt;code&gt;system:kube-apiserver-to-kubelet&lt;/code&gt; &lt;a href="https://kubernetes.io/docs/admin/authorization/rbac/#role-and-clusterrole"&gt;ClusterRole&lt;/a&gt; with permissions to access the Kubelet API and perform most common tasks associated with managing pods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply --kubeconfig admin.kubeconfig -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-apiserver-to-kubelet
rules:
  - apiGroups:
      - ""
    resources:
      - nodes/proxy
      - nodes/stats
      - nodes/log
      - nodes/spec
      - nodes/metrics
    verbs:
      - "*"
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Kubernetes API Server authenticates to the Kubelet as the &lt;code&gt;kubernetes&lt;/code&gt; user using the client certificate as defined by the &lt;code&gt;--kubelet-client-certificate&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;Bind the &lt;code&gt;system:kube-apiserver-to-kubelet&lt;/code&gt; ClusterRole to the &lt;code&gt;kubernetes&lt;/code&gt; user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply --kubeconfig admin.kubeconfig -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:kube-apiserver
  namespace: ""
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-apiserver-to-kubelet
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: kubernetes
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-up-a-kube-api-frontend-load-balancer"&gt;
  &lt;/a&gt;
  Setting up a Kube API Frontend Load Balancer
&lt;/h3&gt;

&lt;p&gt;In order to achieve redundancy for your Kubernetes cluster, you will need to load balance usage of the Kubernetes API across multiple control nodes. In this lesson, you will learn how to create a simple nginx server to perform this balancing. After completing this lesson, you will be able to interact with both control nodes of your kubernetes cluster using the nginx load balancer. Here are the commands you can use to set up the nginx load balancer. Run these on the server that you have designated as your load balancer server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ssh root@192.168.0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note will use stream module for nginx for easy wiil create a docker image that contain the all moudle config first lets install docker&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# yum install -y yum-utils
# yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
# yum-config-manager --enable docker-ce-nightly
# yum install docker-ce docker-ce-cli containerd.io -y  
# systemctl enable --now docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#config-the-loadbalancer"&gt;
  &lt;/a&gt;
  Config the Loadbalancer
&lt;/h3&gt;

&lt;p&gt;Now will create the dir for image to configure all image nassry&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir nginx &amp;amp;&amp;amp; cd nginx 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up some environment variables for the lead balancer config file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# CONTROLLER0_IP=192.168.0.1
# CONTROLLER1_IP=192.168.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the load balancer nginx config file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt; EOF | sudo tee k8s.conf
   stream {
    upstream kubernetes {
        least_conn;
        server $CONTROLLER0_IP:6443;
        server $CONTROLLER1_IP:6443;
     }
    server {
        listen 6443;
        listen 443;
        proxy_pass kubernetes;
    }
}
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets create a nginx config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt; EOF |  tee nginx.conf 
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}
include /etc/nginx/tcpconf.d/*;
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets create a Dockerfile&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt; EOF |  tee Dockerfile
FROM ubuntu:16.04
RUN apt-get update -y &amp;amp;&amp;amp; apt-get upgrade -y &amp;amp;&amp;amp; apt-get install -y nginx &amp;amp;&amp;amp; mkdir -p  /etc/nginx/tcpconf.d
RUN rm -rf /etc/nginx/nginx.conf
ADD nginx.conf /etc/nginx/
ADD k8s.conf /etc/nginx/tcpconf.d/
CMD ["nginx", "-g", "daemon off;"]
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets build and run docker&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# docker build -t nginx .
# docker run -d --network host --name nginx --restart unless-stopped nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make a HTTP request for the Kubernetes version info:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --cacert ca.pem https://${KUBERNETES_PUBLIC_ADDRESS}:6443/version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "major": "1",
  "minor": "21",
  "gitVersion": "v1.21.0",
  "gitCommit": "cb303e613a121a29364f75cc67d3d580833a7479",
  "gitTreeState": "clean",
  "buildDate": "2021-04-08T16:25:06Z",
  "goVersion": "go1.16.1",
  "compiler": "gc",
  "platform": "linux/amd64"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#bootstrapping-the-kubernetes-worker-nodes"&gt;
  &lt;/a&gt;
  Bootstrapping the Kubernetes Worker Nodes
&lt;/h1&gt;

&lt;p&gt;In this lab you will bootstrap three Kubernetes worker nodes. The following components will be installed on each node: &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt;, &lt;a href="https://github.com/containernetworking/cni"&gt;container networking plugins&lt;/a&gt;, &lt;a href="https://github.com/containerd/containerd"&gt;containerd&lt;/a&gt;, &lt;a href="https://kubernetes.io/docs/admin/kubelet"&gt;kubelet&lt;/a&gt;, and &lt;a href="https://kubernetes.io/docs/concepts/cluster-administration/proxies"&gt;kube-proxy&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-kubernetes-worker-nodes"&gt;
  &lt;/a&gt;
  What Are the Kubernetes Worker Nodes?
&lt;/h3&gt;

&lt;p&gt;Kubernetes worker nodes are responsible for the actual work of running container applications managed by Kubernetes. “The Kubernetes node has the services necessary to run application containers and be managed from the master systems.” You can find more information about Kubernetes worker nodes in the Kubernetes documentation:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-worker-node-components"&gt;
  &lt;/a&gt;
  Kubernetes Worker Node Components
&lt;/h3&gt;

&lt;p&gt;Each Kubernetes worker node consists of the following components&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kubelet

&lt;ul&gt;
&lt;li&gt;Controls each worker node, providing the APIs that are used by the control plane to manage nodes and pods, and interacts with the container runtime to manage containers&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Kube-proxy

&lt;ul&gt;
&lt;li&gt;Manages iptables rules on the node to provide virtual network access to pods.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Container runtime

&lt;ul&gt;
&lt;li&gt;Downloads images and runs containers. Two examples of container runtimes are Docker and containerd (Kubernetes the Hard Way uses containerd)
###  Prerequisites
The commands in this lab must be run on each worker instance: &lt;code&gt;worknode01&lt;/code&gt;, &lt;code&gt;worknode01&lt;/code&gt;
## Provisioning a Kubernetes Worker Node&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the OS dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# yum install socat conntrack ipset -y 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The socat binary enables support for the &lt;code&gt;kubectl port-forward&lt;/code&gt; command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#disable-swap"&gt;
  &lt;/a&gt;
  Disable Swap
&lt;/h3&gt;

&lt;p&gt;By default the kubelet will fail to start if &lt;a href="https://help.ubuntu.com/community/SwapFaq"&gt;swap&lt;/a&gt; is enabled. It is &lt;a href="https://github.com/kubernetes/kubernetes/issues/7294"&gt;recommended&lt;/a&gt; that swap be disabled to ensure Kubernetes can provide proper resource allocation and quality of service.&lt;/p&gt;

&lt;p&gt;Verify if swap is enabled:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo swapon --show
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If output is empthy then swap is not enabled. If swap is enabled run the following command to disable swap immediately:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# swapoff -a 
# sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#download-and-install-worker-binaries"&gt;
  &lt;/a&gt;
  Download and Install Worker Binaries
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz \
  https://github.com/opencontainers/runc/releases/download/v1.0.0-rc93/runc.amd64 \
  https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz \
  https://github.com/containerd/containerd/releases/download/v1.4.4/containerd-1.4.4-linux-amd64.tar.gz \
  https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl \
  https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kube-proxy \
  https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the installation directories:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p \
  /etc/cni/net.d \
  /opt/cni/bin \
  /var/lib/kubelet \
  /var/lib/kube-proxy \
  /var/lib/kubernetes \
  /var/run/kubernetes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the worker binaries:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir containerd
# tar -xvf crictl-v1.21.0-linux-amd64.tar.gz
# tar -xvf containerd-1.4.4-linux-amd64.tar.gz -C containerd
# tar -xvf cni-plugins-linux-amd64-v0.9.1.tgz -C /opt/cni/bin/
# mv runc.amd64 runc
# chmod +x crictl kubectl kube-proxy kubelet runc 
# mv crictl kubectl kube-proxy kubelet runc /usr/local/bin/
# mv containerd/bin/* /bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-containerd"&gt;
  &lt;/a&gt;
  Configure containerd
&lt;/h3&gt;

&lt;p&gt;Create the containerd configuration file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p /etc/containerd/
# cat &amp;lt;&amp;lt; EOF | sudo tee /etc/containerd/config.toml
[plugins]
  [plugins.cri.containerd]
    snapshotter = "overlayfs"
    [plugins.cri.containerd.default_runtime]
      runtime_type = "io.containerd.runtime.v1.linux"
      runtime_engine = "/usr/local/bin/runc"
      runtime_root = ""
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;containerd.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/containerd.service
[Unit]
Description=containerd container runtime
Documentation=https://containerd.io
After=network.target

[Service]
ExecStartPre=/sbin/modprobe overlay
ExecStart=/bin/containerd
Restart=always
RestartSec=5
Delegate=yes
KillMode=process
OOMScoreAdjust=-999
LimitNOFILE=1048576
LimitNPROC=infinity
LimitCORE=infinity

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-kubelet"&gt;
  &lt;/a&gt;
  Configure the Kubelet
&lt;/h3&gt;

&lt;p&gt;Kubelet is the Kubernetes agent which runs on each worker node. Acting as a middleman between the Kubernetes control plane and the underlying container runtime, it coordinates the running of containers on the worker node. In this lesson, we will configure our systemd service for kubelet. After completing this lesson, you should have a systemd service configured and ready to run on each worker node. You can configure the kubelet service like so. Run these commands on both worker nodes. Set a HOSTNAME environment variable that will be used to generate your config files. Make sure you set the HOSTNAME appropriately for each worker node:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mv ${HOSTNAME}-key.pem ${HOSTNAME}.pem /var/lib/kubelet/
# mv ${HOSTNAME}.kubeconfig /var/lib/kubelet/kubeconfig
# mv ca.pem /var/lib/kubernetes/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kubelet-config.yaml&lt;/code&gt; configuration file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt;EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: "/var/lib/kubernetes/ca.pem"
authorization:
  mode: Webhook
clusterDomain: "cluster.local"
clusterDNS:
  - "10.32.0.10"
runtimeRequestTimeout: "15m"
tlsCertFile: "/var/lib/kubelet/${HOSTNAME}.pem"
tlsPrivateKeyFile: "/var/lib/kubelet/${HOSTNAME}-key.pem"
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kubelet.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/kubelet.service
[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/kubernetes/kubernetes
After=containerd.service
Requires=containerd.service

[Service]
ExecStart=/usr/local/bin/kubelet \\
  --config=/var/lib/kubelet/kubelet-config.yaml \\
  --container-runtime=remote \\
  --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock \\
  --image-pull-progress-deadline=2m \\
  --kubeconfig=/var/lib/kubelet/kubeconfig \\
  --network-plugin=cni \\
  --register-node=true \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-the-kubernetes-proxy"&gt;
  &lt;/a&gt;
  Configure the Kubernetes Proxy
&lt;/h3&gt;

&lt;p&gt;Kube-proxy is an important component of each Kubernetes worker node. It is responsible for providing network routing to support Kubernetes networking components. In this lesson, we will configure our kube-proxy systemd service. Since this is the last of the three worker node services that we need to configure, we will also go ahead and start all of our worker node services once we're done. Finally, we will complete some steps to verify that our cluster is set up properly and functioning as expected so far. After completing this lesson, you should have two Kubernetes worker nodes up and running, and they should be able to successfully register themselves with the cluster. You can configure the kube-proxy service like so. Run these commands on both worker nodes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mv kube-proxy.kubeconfig /var/lib/kube-proxy/kubeconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kube-proxy-config.yaml&lt;/code&gt; configuration file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt;EOF | sudo tee /var/lib/kube-proxy/kube-proxy-config.yaml
kind: KubeProxyConfiguration
apiVersion: kubeproxy.config.k8s.io/v1alpha1
clientConnection:
  kubeconfig: "/var/lib/kube-proxy/kubeconfig"
mode: "iptables"
clusterCIDR: "10.200.0.0/16"
EOF

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the &lt;code&gt;kube-proxy.service&lt;/code&gt; systemd unit file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cat &amp;lt;&amp;lt;EOF | sudo tee /etc/systemd/system/kube-proxy.service
[Unit]
Description=Kubernetes Kube Proxy
Documentation=https://github.com/kubernetes/kubernetes

[Service]
ExecStart=/usr/local/bin/kube-proxy \\
  --config=/var/lib/kube-proxy/kube-proxy-config.yaml
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the Worker Services&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# systemctl daemon-reload
# systemctl enable containerd kubelet kube-proxy
# systemctl start containerd kubelet kube-proxy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h2&gt;

&lt;p&gt;Finally, verify that both workers have registered themselves with the cluster. Log in to one of your control nodes and run this: &lt;br&gt;
First should we create a dir in both of controller nodes &lt;br&gt;
will crate dir for kubectl to containe the certificate and config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# mkdir -p $HOME/.kube
# cp -i admin.kubeconfig $HOME/.kube/config
# chown $(id -u):$(id -g) $HOME/.kube/config
# kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME                 STATUS     ROLES    AGE     VERSION
worknode01.k8s.com   NotReady   &amp;lt;none&amp;gt;   5m28s   v1.21.0
worknode02.k8s.com   NotReady   &amp;lt;none&amp;gt;   5m31s   v1.21.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;dotnot wary about &lt;code&gt;NotReady&lt;/code&gt; because in networking will fix this issues &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#configuring-kubectl-for-remote-access"&gt;
  &lt;/a&gt;
  Configuring kubectl for Remote Access
&lt;/h1&gt;

&lt;p&gt;In this lab you will generate a kubeconfig file for the &lt;code&gt;kubectl&lt;/code&gt; command line utility based on the &lt;code&gt;admin&lt;/code&gt; user credentials.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-kubectl"&gt;
  &lt;/a&gt;
  What Is Kubectl?
&lt;/h3&gt;

&lt;p&gt;Kubectl&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;is the Kubernetes command line tool. It allows us to interact with Kubernetes clusters from the command line.
We will set up kubectl to allow remote access from our machine in order to manage the cluster remotely. To do this, we will generate a local kubeconfig that will authenticate as the admin user and access the Kubernetes API through the load balancer.
In this lab you will generate a kubeconfig file for the kubectl command line utility based on the admin user credentials.
Run the commands in this lab from the same directory used to generate the admin client certificates.
There are a few steps to configuring a local kubectl installation for managing a remote cluster. This lesson will guide you through that process. After completing this lesson, you should have a local kubectl installation that is capable of running kubectl commands against your remote Kubernetes cluster. In a separate shell, open up an ssh tunnel to port 6443 on your Kubernetes API load balancer: 
The Admin Kubernetes Configuration File
Each kubeconfig requires a Kubernetes API Server to connect to. To support high availability the IP address assigned to the external load balancer fronting the Kubernetes API Servers will be used. 
Generate a kubeconfig file suitable for authenticating as the admin user:
Lets configure the
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# cd /k8s
# mkdir -p $HOME/.kube
# cp -i admin.kubeconfig $HOME/.kube/config
# chown $(id -u):$(id -g) $HOME/.kube/config
# KUBERNETES_PUBLIC_ADDRESS=192.168.0.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-admin-kubernetes-configuration-file"&gt;
  &lt;/a&gt;
  The Admin Kubernetes Configuration File
&lt;/h2&gt;

&lt;p&gt;Each kubeconfig requires a Kubernetes API Server to connect to. To support high availability the IP address assigned to the external load balancer fronting the Kubernetes API Servers will be used.&lt;/p&gt;

&lt;p&gt;Generate a kubeconfig file suitable for authenticating as the &lt;code&gt;admin&lt;/code&gt; user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.pem \
    --embed-certs=true \
    --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443

  kubectl config set-credentials admin \
    --client-certificate=admin.pem \
    --client-key=admin-key.pem

  kubectl config set-context kubernetes-the-hard-way \
    --cluster=kubernetes-the-hard-way \
    --user=admin

  kubectl config use-context kubernetes-the-hard-way
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h2&gt;

&lt;p&gt;Check the version of the remote Kubernetes cluster:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Client Version: version.Info{Major:"1", Minor:"21", GitVersion:"v1.21.0", GitCommit:"cb303e613a121a29364f75cc67d3d580833a7479", GitTreeState:"clean", BuildDate:"2021-04-08T16:31:21Z", GoVersion:"go1.16.1", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"21", GitVersion:"v1.21.0", GitCommit:"cb303e613a121a29364f75cc67d3d580833a7479", GitTreeState:"clean", BuildDate:"2021-04-08T16:25:06Z", GoVersion:"go1.16.1", Compiler:"gc", Platform:"linux/amd64"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List the nodes in the remote Kubernetes cluster:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME                 STATUS     ROLES    AGE     VERSION
worknode01.k8s.com   NotReady   &amp;lt;none&amp;gt;   5m28s   v1.21.0
worknode02.k8s.com   NotReady   &amp;lt;none&amp;gt;   5m31s   v1.21.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;dotnot wary about &lt;code&gt;NotReady&lt;/code&gt; because in networking will fix this issues &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#provisioning-pod-network-routes"&gt;
  &lt;/a&gt;
  Provisioning Pod Network Routes
&lt;/h1&gt;

&lt;p&gt;In this lab you will use &lt;a href="https://docs.projectcalico.org/getting-started/kubernetes/"&gt;calico &lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are &lt;a href="https://kubernetes.io/docs/concepts/cluster-administration/networking/#how-to-achieve-this"&gt;other ways&lt;/a&gt; to implement the Kubernetes networking model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-kubernetes-networking-model"&gt;
  &lt;/a&gt;
  The Kubernetes Networking Model
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What Problems Does the Networking Model Solve?

&lt;ul&gt;
&lt;li&gt;How will containers communicate with each other?&lt;/li&gt;
&lt;li&gt;What if the containers are on different hosts (worker nodes)?&lt;/li&gt;
&lt;li&gt;How will containers communicate with services?&lt;/li&gt;
&lt;li&gt;How will containers be assigned unique IP addresses? What port(s) will be used?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-docker-model"&gt;
  &lt;/a&gt;
  The Docker Model
&lt;/h3&gt;

&lt;p&gt;Docker allows containers to communicate with one another using a virtual network bridge configured on the host. Each host has its own virtual network serving all of the containers on that host. But what about containers on different hosts? We have to proxy traffic from the host to the containers, making sure no two containers use the same port on a host. The Kubernetes networking model was created in response to the Docker model. It was designed to improve on some of the limitations of the Docker model&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-kubernetes-networking-model"&gt;
  &lt;/a&gt;
  The Kubernetes Networking Model
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;One virtual network for the whole cluster.&lt;/li&gt;
&lt;li&gt;Each pod has a unique IP within the cluster.&lt;/li&gt;
&lt;li&gt;Each service has a unique IP that is in a different range than pod IPs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cluster-network-architecture"&gt;
  &lt;/a&gt;
  Cluster Network Architecture
&lt;/h3&gt;

&lt;p&gt;Some Important CIDR ranges:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cluster CIDR

&lt;ul&gt;
&lt;li&gt;IP range used to assign IPs to pods in the cluster. In this course, we’ll be using a cluster CIDR of 10.200.0.0/16&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Service Cluster IP Range

&lt;ul&gt;
&lt;li&gt;IP range for services in the cluster. This should not overlap with the cluster CIDR range! In this course, our service cluster IP range is 10.32.0.0/24.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Pod CIDR

&lt;ul&gt;
&lt;li&gt;IP range for pods on a specific worker node. This range should fall within the cluster CIDR but not overlap with the pod CIDR of any other worker node. In this course,    our networking plugin will automatically handle IP allocation to nodes, so we do not need to manually set a pod CIDR.
### Install Calico Networking  on  Kubernetes
We will be using calico Net to implement networking in our Kubernetes cluster.
We are now ready to set up networking in our Kubernetes cluster. This lesson guides you through the process of installing Weave Net in the cluster. It also shows you how to test your cluster network to make sure that everything is working as expected so far. After completing this lesson, you should have a functioning cluster network within your Kubernetes cluster. You can configure Weave Net like this: First, log in to both worker nodes and enable IP forwarding
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# sysctl net.ipv4.conf.all.forwarding=1
# echo "net.ipv4.conf.all.forwarding=1" | sudo tee -a /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;login in remote kubectl then install clico&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;note it take between 10 to 15 min to be up &lt;br&gt;
Now calico Net is installed, but we need to test our network to make sure everything is working. First, make sure the calico Net pods are up and running:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl get pods -n kube-system 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h3&gt;

&lt;p&gt;Next, we want to test that pods can connect to each other and that they can connect to services. We will set up two Nginx pods and a service for those two pods. Then, we will create a busybox pod and use it to test connectivity to both Nginx pods and the service. First, create an Nginx deployment with 2 replicas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#  cat &amp;lt;&amp;lt; EOF |  tee nginx.yml 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
     matchLabels:
      run: nginx
  replicas: 2
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx
        ports:
        - containerPort: 80
EOF
# kubectl apply -f nginx.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a service for that deployment so that we can test connectivity to services as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl expose deployment/nginx 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's start up another pod. We will use this pod to test our networking. We will test whether we can connect to the other pods and services from this pod.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl run busybox --image=radial/busyboxplus:curl --command -- sleep 3600
# POD_NAME=$(kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.name}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's get the IP addresses of our two Nginx pods:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl get ep nginx 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's make sure the busybox pod can connect to the Nginx pods on both of those IP addresses&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl exec $POD_NAME -- curl &amp;lt;first nginx pod IP address&amp;gt;
# kubectl exec $POD_NAME -- curl &amp;lt;second nginx pod IP address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both commands should return some HTML with the title "Welcome to Nginx!" This means that we can successfully connect to other pods. Now let's verify that we can connect to services.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl get svc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see if we can access the service from the busybox pod!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl exec $POD_NAME -- curl &amp;lt;nginx service IP address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should also return HTML with the title "Welcome to Nginx!" This means that we have successfully reached the Nginx service from inside a pod and that our networking configuration is working!&lt;br&gt;
Now that we have networking set up in the cluster, we need to clean up the objects that were created in order to test the networking. These object could get in the way or become confusing in later lessons, so it is a good idea to remove them from the cluster before proceeding. After completing this lesson, your networking should still be in place, but the pods and services that were used to test it will be cleaned up.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl get deploy 
# kubectl delete deployment nginx
# kubectl delete svc nginx
# kubectl delete pod busybox
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dns-in-a-kubernetes-pod-network"&gt;
  &lt;/a&gt;
  DNS in a Kubernetes Pod Network
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Provides a DNS service to be used by pods within the network.&lt;/li&gt;
&lt;li&gt;Configures containers to use the DNS service to perform DNS lookups for example

&lt;ul&gt;
&lt;li&gt;You can access services using DNS names assigned to them.&lt;/li&gt;
&lt;li&gt;You can access other pods using DNS names&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#deploying-the-dns-cluster-addon"&gt;
  &lt;/a&gt;
  Deploying the DNS Cluster Add-on
&lt;/h1&gt;

&lt;p&gt;In this lab you will deploy the &lt;a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"&gt;DNS add-on&lt;/a&gt; which provides DNS based service discovery, backed by &lt;a href="https://coredns.io/"&gt;CoreDNS&lt;/a&gt;, to applications running inside the Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;Deploying the DNS Cluster Add-on&lt;br&gt;
In this lab you will deploy the DNS add-on which provides DNS based service discovery, backed by CoreDNS, to applications running inside the Kubernetes cluster.&lt;br&gt;
The DNS Cluster Add-on&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-dns-cluster-addon"&gt;
  &lt;/a&gt;
  The DNS Cluster Add-on
&lt;/h2&gt;

&lt;p&gt;Deploy the &lt;code&gt;coredns&lt;/code&gt; cluster add-on:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f https://storage.googleapis.com/kubernetes-the-hard-way/coredns-1.8.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;serviceaccount/coredns created
clusterrole.rbac.authorization.k8s.io/system:coredns created
clusterrolebinding.rbac.authorization.k8s.io/system:coredns created
configmap/coredns created
deployment.apps/coredns created
service/kube-dns created
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List the pods created by the &lt;code&gt;kube-dns&lt;/code&gt; deployment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods -l k8s-app=kube-dns -n kube-system
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it take 3 min then the pods will up &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;coredns-8494f9c688-j97h2   1/1     Running   5          3m31s
coredns-8494f9c688-wjn4n   1/1     Running   1          3m31s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#verification"&gt;
  &lt;/a&gt;
  Verification
&lt;/h2&gt;

&lt;p&gt;Create a &lt;code&gt;busybox&lt;/code&gt; deployment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl run busybox --image=busybox:1.28 --command -- sleep 3600
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List the pod created by the &lt;code&gt;busybox&lt;/code&gt; deployment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods -l run=busybox
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NAME      READY   STATUS    RESTARTS   AGE
busybox   1/1     Running   0          3s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Retrieve the full name of the &lt;code&gt;busybox&lt;/code&gt; pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POD_NAME=$(kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.name}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Execute a DNS lookup for the &lt;code&gt;kubernetes&lt;/code&gt; service inside the &lt;code&gt;busybox&lt;/code&gt; pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl exec -ti $POD_NAME -- nslookup kubernetes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Server:    10.32.0.10
Address 1: 10.32.0.10 kube-dns.kube-system.svc.cluster.local

Name:      kubernetes
Address 1: 10.32.0.1 kubernetes.default.svc.cluster.local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#smoke-test"&gt;
  &lt;/a&gt;
  Smoke Test
&lt;/h2&gt;

&lt;p&gt;In this lab you will complete a series of tasks to ensure your Kubernetes cluster is functioning correctly.&lt;br&gt;
Now we want to run some basic smoke tests to make sure everything in our cluster is working correctly. We will test the following features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data encryption&lt;/li&gt;
&lt;li&gt;Deployments&lt;/li&gt;
&lt;li&gt;Port forwarding&lt;/li&gt;
&lt;li&gt;Logs&lt;/li&gt;
&lt;li&gt;Exec&lt;/li&gt;
&lt;li&gt;Services&lt;/li&gt;
&lt;li&gt;Untrusted workloads&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#data-encryption"&gt;
  &lt;/a&gt;
  Data Encryption
&lt;/h2&gt;

&lt;p&gt;In this section you will verify the ability to &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#verifying-that-data-is-encrypted"&gt;encrypt secret data at rest&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create a generic secret:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Goal: 

&lt;ul&gt;
&lt;li&gt;Verify that we can encrypt secret data at rest. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Strategy:

&lt;ul&gt;
&lt;li&gt;Create a generic secret in the cluster. &lt;/li&gt;
&lt;li&gt;Dump the raw data from etcd and verify that it is encrypted
we set up a data encryption config to allow Kubernetes to encrypt sensitive data. In this lesson, we will smoke test that functionality by creating some secret data and verifying that it is stored in an encrypted format in etcd. After completing this lesson, you will have verified that your cluster can successfully encrypt sensitive data
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl create secret generic kubernetes-the-hard-way \
  --from-literal="mykey=mydata"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Print a hexdump of the &lt;code&gt;kubernetes-the-hard-way&lt;/code&gt; secret stored in etcd:&lt;br&gt;
Log in to one of your controller servers, and get the raw data for the test secret from etcd&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#  ETCDCTL_API=3 etcdctl get   \
   --endpoints=https://127.0.0.1:2379 \
   --cacert=/etc/etcd/ca.pem \
   --cert=/etc/etcd/kubernetes.pem \
   --key=/etc/etcd/kubernetes-key.pem\
    /registry/secrets/default/kubernetes-the-hard-way | hexdump -C
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;00000000  2f 72 65 67 69 73 74 72  79 2f 73 65 63 72 65 74  |/registry/secret|
00000010  73 2f 64 65 66 61 75 6c  74 2f 6b 75 62 65 72 6e  |s/default/kubern|
00000020  65 74 65 73 2d 74 68 65  2d 68 61 72 64 2d 77 61  |etes-the-hard-wa|
00000030  79 0a 6b 38 73 3a 65 6e  63 3a 61 65 73 63 62 63  |y.k8s:enc:aescbc|
00000040  3a 76 31 3a 6b 65 79 31  3a ea 5f 64 1f 22 63 ac  |:v1:key1:._d."c.|
00000050  e5 a0 2d 7f 1e cd e3 03  64 a0 8e 7f cf 58 db 50  |..-.....d....X.P|
00000060  d7 d0 12 a1 31 2e 72 53  e3 51 de 31 53 96 d7 3f  |....1.rS.Q.1S..?|
00000070  71 f5 e3 3f 07 bc 33 56  55 ed 9c 67 6a 91 77 18  |q..?..3VU..gj.w.|
00000080  52 bb ad 61 64 76 43 df  00 b5 aa 7e 8e cb 16 e9  |R..advC....~....|
00000090  9b 5a 21 04 49 37 63 a5  6c df 09 b7 2b 5c 96 69  |.Z!.I7c.l...+\.i|
000000a0  02 03 42 02 93 7d 42 57  c9 8d 28 2d 1c 9d dd 2b  |..B..}BW..(-...+|
000000b0  a3 69 fa ca c8 8f a0 0e  66 c8 5b 5a 40 29 80 0d  |.i......f.[Z@)..|
000000c0  06 c3 56 87 27 ba d2 19  a6 b0 e6 b5 70 b3 18 02  |..V.'.......p...|
000000d0  69 ed ae b1 4d 03 be 92  08 9e 20 62 41 cd e6 a4  |i...M..... bA...|
000000e0  8c e0 fd b0 5f 44 11 a1  e0 99 a4 61 71 b2 c2 98  |...._D.....aq...|
000000f0  b1 f3 bf 48 a5 26 11 8c  9e 4e 12 7a 81 f4 20 11  |...H.&amp;amp;...N.z.. .|
00000100  05 0d db 62 82 53 2c d9  71 0d 9f af d7 e2 b6 94  |...b.S,.q.......|
00000110  4c 67 98 2e 66 21 77 5e  ea 4d f5 23 6c d4 4b 56  |Lg..f!w^.M.#l.KV|
00000120  58 a7 f1 3b 23 8d 5b 45  14 2c 05 3a a9 90 95 a4  |X..;#.[E.,.:....|
00000130  9a 5f 06 cc 42 65 b3 31  d8 9c 78 a9 f1 da a2 81  |._..Be.1..x.....|
00000140  5a a6 f6 d8 7c 2e 8c 13  f0 30 b1 25 ab 6e bb 2f  |Z...|....0.%.n./|
00000150  cd 7f fd 44 98 64 97 9b  31 0a                    |...D.d..1.|
0000015a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The etcd key should be prefixed with &lt;code&gt;k8s:enc:aescbc:v1:key1&lt;/code&gt;, which indicates the &lt;code&gt;aescbc&lt;/code&gt; provider was used to encrypt the data with the &lt;code&gt;key1&lt;/code&gt; encryption key.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deployments"&gt;
  &lt;/a&gt;
  Deployments
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Goal:

&lt;ul&gt;
&lt;li&gt;Verify that we can create a deployment and that it can successfully create pods. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strategy:

&lt;ul&gt;
&lt;li&gt;Create a simple deployment. &lt;/li&gt;
&lt;li&gt;Verify that the deployment successfully creates a pod
Deployments are one of the powerful orchestration tools offered by Kubernetes. In this lesson, we will make sure that deployments are working in our cluster. We will verify that we can create a deployment, and that the deployment is able to successfully stand up a new pod and container.
In this section you will verify the ability to create and manage &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/"&gt;Deployments&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a deployment for the &lt;a href="https://nginx.org/en/"&gt;nginx&lt;/a&gt; web server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl create deployment nginx --image=nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;List the pod created by the &lt;code&gt;nginx&lt;/code&gt; deployment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods -l app=nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx-6799fc88d8-vtz4c   1/1     Running   0          21s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#port-forwarding"&gt;
  &lt;/a&gt;
  Port Forwarding
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Goal:

&lt;ul&gt;
&lt;li&gt;Verify that we can use port forwarding to access pods remotely&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strategy:

&lt;ul&gt;
&lt;li&gt;Use kubectl port-forward to set up port forwarding for an Nginx pod&lt;/li&gt;
&lt;li&gt;Access the pod remotely with curl.
In this section you will verify the ability to access applications remotely using &lt;a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/"&gt;port forwarding&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Retrieve the full name of the &lt;code&gt;nginx&lt;/code&gt; pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POD_NAME=$(kubectl get pods -l app=nginx -o jsonpath="{.items[0].metadata.name}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Forward port &lt;code&gt;8080&lt;/code&gt; on your local machine to port &lt;code&gt;80&lt;/code&gt; of the &lt;code&gt;nginx&lt;/code&gt; pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl port-forward $POD_NAME 8080:80
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Forwarding from 127.0.0.1:8080 -&amp;gt; 80
Forwarding from [::1]:8080 -&amp;gt; 80
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In a new terminal make an HTTP request using the forwarding address:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl --head http://127.0.0.1:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: nginx/1.19.10
Date: Sun, 02 May 2021 05:29:25 GMT
Content-Type: text/html
Content-Length: 612
Last-Modified: Tue, 13 Apr 2021 15:13:59 GMT
Connection: keep-alive
ETag: "6075b537-264"
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Switch back to the previous terminal and stop the port forwarding to the &lt;code&gt;nginx&lt;/code&gt; pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Forwarding from 127.0.0.1:8080 -&amp;gt; 80
Forwarding from [::1]:8080 -&amp;gt; 80
Handling connection for 8080
^C
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#logs"&gt;
  &lt;/a&gt;
  Logs
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Goal:

&lt;ul&gt;
&lt;li&gt;Verify that we can get container logs with kubectl logs.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strategy: 

&lt;ul&gt;
&lt;li&gt;Get the logs from the Nginx pod container.
When managing a cluster, it is often necessary to access container logs to check their health and diagnose issues. Kubernetes offers access to container logs via the kubectl logs command. In this lesson, In this section you will verify the ability to &lt;a href="https://kubernetes.io/docs/concepts/cluster-administration/logging/"&gt;retrieve container logs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Print the &lt;code&gt;nginx&lt;/code&gt; pod logs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl logs $POD_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2021/10/26 18:07:29 [notice] 1#1: start worker processes
2021/10/26 18:07:29 [notice] 1#1: start worker process 30
2021/10/26 18:07:29 [notice] 1#1: start worker process 31
127.0.0.1 - - [26/Oct/2021:18:20:44 +0000] "HEAD / HTTP/1.1" 200 0 "-" "curl/7.29.0" "-"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#exec"&gt;
  &lt;/a&gt;
  Exec
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Goal: 

&lt;ul&gt;
&lt;li&gt;Verify that we can run commands in a container with kubectl exec&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strategy: 

&lt;ul&gt;
&lt;li&gt;Use kubectl exec to run a command in the Nginx pod container.
The kubectl exec command is a powerful management tool that allows us to run commands inside of Kubernetes-managed containers. In order to verify that our cluster is set up correctly, we need to make sure that kubectl exec is working. 
In this section you will verify the ability to &lt;a href="https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/#running-individual-commands-in-a-container"&gt;execute commands in a container&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Print the nginx version by executing the &lt;code&gt;nginx -v&lt;/code&gt; command in the &lt;code&gt;nginx&lt;/code&gt; container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl exec -ti $POD_NAME -- nginx -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx version: nginx/1.21.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#services"&gt;
  &lt;/a&gt;
  Services
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Goal:

&lt;ul&gt;
&lt;li&gt;Verify that we can create and access services.&lt;/li&gt;
&lt;li&gt;Verify that we can run an untrusted workload under gVisor (runsc) &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Strategy: 

&lt;ul&gt;
&lt;li&gt;Create a NodePort service to expose the Nginx deployment.&lt;/li&gt;
&lt;li&gt;Access the service remotely using the NodePort.&lt;/li&gt;
&lt;li&gt;Run a pod as an untrusted workload.&lt;/li&gt;
&lt;li&gt;Log in to the worker node that is running the pod and verify that its container is running using runsc.
In order to make sure that the cluster is set up correctly, we need to ensure that services can be created and accessed appropriately. In this lesson, we will smoke test our cluster's ability to create and access services by creating a simple testing service, and accessing it using a node port. If we can successfully create the service and use it to access our nginx pod, then we will know that our cluster is able to correctly handle services! 
In this section you will verify the ability to expose applications using a &lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/"&gt;Service&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Expose the &lt;code&gt;nginx&lt;/code&gt; deployment using a &lt;a href="https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"&gt;NodePort&lt;/a&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl expose deployment nginx --port 80 --type NodePort
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Retrieve the node port assigned to the &lt;code&gt;nginx&lt;/code&gt; service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NODE_PORT=$(kubectl get svc nginx \
  --output=jsonpath='{range .spec.ports[0]}{.nodePort}')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make an HTTP request using the external IP address and the &lt;code&gt;nginx&lt;/code&gt; node port:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -I http://${EXTERNAL_IP}:${NODE_PORT}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: nginx/1.19.10
Date: Sun, 02 May 2021 05:31:52 GMT
Content-Type: text/html
Content-Length: 612
Last-Modified: Tue, 13 Apr 2021 15:13:59 GMT
Connection: keep-alive
ETag: "6075b537-264"
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#cleaning-up"&gt;
  &lt;/a&gt;
  Cleaning Up
&lt;/h1&gt;

&lt;p&gt;In this lab you will delete the compute resources created during this tutorial.&lt;br&gt;
Now that we have finished smoke testing the cluster, it is a good idea to clean up the objects that we created for testing. In this lesson, we will spend a moment removing the objects that were created in our cluster in order to perform the smoke testing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# kubectl delete secret kubernetes-the-hard-way 
# kubectl delete svc nginx 
# kubectl delete deployment nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>linux</category>
    </item>
    <item>
      <title>How to Excel in Remote Meetings?</title>
      <author>Daniel M. Wolken</author>
      <pubDate>Wed, 27 Oct 2021 06:38:39 +0000</pubDate>
      <link>https://dev.to/fgeurson/how-to-excel-in-remote-meetings-4hpm</link>
      <guid>https://dev.to/fgeurson/how-to-excel-in-remote-meetings-4hpm</guid>
      <description>&lt;p&gt;Meetings have long been an essential part of how workers communicate in an organization. They allow workers to come together and discuss a topic in-depth, strategize, and help ensure everyone is aligned on their priorities and goals while working from home.&lt;/p&gt;

&lt;p&gt;For remote workers, meetings are especially important. While tools like Gmail, Slack, Jira, and Asana are useful to communicate information about projects, they come with limitations. Running meetings is an essential part of maintaining order and structure on a remote team. But how can you run an effective remote meeting? What should you do to ensure everything runs smoothly?&lt;/p&gt;

&lt;p&gt;According to a report by &lt;a href="https://lp.buffer.com/state-of-remote-work-2020"&gt;Buffer&lt;/a&gt;, 20% of remote workers cite collaboration and communication as their top struggle while telecommuting. With this in mind, it’s clear how important it is to think about what you can do to run a more effective meeting. In this guide, we will share a few top tips you can use to run an efficient and effective meeting in your remote company.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-the-meeting"&gt;
  &lt;/a&gt;
  Before the meeting
&lt;/h2&gt;

&lt;p&gt;A remote meeting is successful when everyone feels engaged and can contribute to the discussion. This process starts before the meeting even begins. There are a few things you can do to set up your meeting for higher engagement and participation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ask-why-you-need-this-meeting"&gt;
  &lt;/a&gt;
  Ask why you need this meeting?
&lt;/h3&gt;

&lt;p&gt;Do you really need to schedule a meeting? This is the first question you should ask. A large number of meetings end up being unproductive because there was not a clear intention set for it.&lt;/p&gt;

&lt;p&gt;Don't want people to say, "this meeting could have been an email", ask why you need it?Tweet this&lt;br&gt;
Before you run a remote meeting, ask yourself whether the problem a meeting is designed to address can be solved without a meeting. Could you use chat or email to communicate on a particular topic, or can you answer the question without a meeting?&lt;/p&gt;

&lt;p&gt;If so, don’t schedule a meeting, because unless it is clear that a meeting will be valuable, it will likely not be productive for all involved. Instead of scheduling a meeting, you could also record a loom for team announcements that don't require any input. Make sure to consider time zones when looking for a suitable time for your meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prepare-the-agenda"&gt;
  &lt;/a&gt;
  Prepare the agenda
&lt;/h3&gt;

&lt;p&gt;If a meeting is appropriate, take some time to prepare an agenda that outlines what you want to discuss and what action items should be raised.&lt;/p&gt;

&lt;p&gt;For every meeting, it’s essential to create a clear meeting agenda that might include the following points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Key talking points&lt;/li&gt;
&lt;li&gt;Meeting structure including when and for how long you plan to discuss key talking points&lt;/li&gt;
&lt;li&gt;Team members that will be in attendance and what each team member/team is responsible for bringing to the meeting.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#choose-the-right-tools"&gt;
  &lt;/a&gt;
  Choose the right tools.
&lt;/h3&gt;

&lt;p&gt;There are a number of tools out there to take a meeting remotely, such as Google Hangouts, Zoom, Skype, or other programs. With that said, you should spend some time figuring out which tools work best for you and invest in making sure everyone knows how to use them.&lt;/p&gt;

&lt;p&gt;Before a meeting starts, consider what you hope to accomplish in the call and what tools you will use. The more time you spend preparing the tools upfront, the less likely you encounter technical issues during the meeting.&lt;/p&gt;

&lt;p&gt;Here are a few popular remote working tools from the massive list of &lt;a href="https://dailyremote.com/remote-work-blog/top-remote-working-tools/"&gt;remote working tools&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.skype.com/en/"&gt;Skype&lt;/a&gt; - A communication tool that’s available for free.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://zoom.us/"&gt;Zoom&lt;/a&gt; - A video conferencing app that offers screen sharing options&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; - A free chat tool with user-friendly voice and video calling options.&lt;/li&gt;
&lt;li&gt;Google Hangouts - A video conferencing option for teams using the Google ecosystem.&lt;/li&gt;
&lt;li&gt;Google Docs - Easily collaborate on a document with remote team&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.goto.com/meeting"&gt;GoToMeeting&lt;/a&gt; - A good option for large companies hosting large meetings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#during-the-meeting"&gt;
  &lt;/a&gt;
  During the meeting
&lt;/h2&gt;

&lt;p&gt;After considering whether a meeting is necessary and you have set up the right tools, you’ll be ready to start running a meeting. Follow these tips to make sure the meeting runs smoothly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduce-everyone-amp-start-with-a-friendly-chat"&gt;
  &lt;/a&gt;
  Introduce everyone &amp;amp; Start with a friendly chat
&lt;/h3&gt;

&lt;p&gt;In an office, there are plenty of opportunities for team members to get together and chat. These informal conversations are a crucial part of building strong teams, and they make everyone feel more connected to each other. However, in the case of a remote team, these interactions usually take place over chat—if at all, hence making &lt;a href="https://dailyremote.com/remote-work-blog/how-to-master-remote-communication-as-a-remote-worker/"&gt;remote communication a challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can increase engagement by ensuring that all attendees are introduced and announced at the meeting, including their roles. Before commencing the meeting, give people an opportunity to catch up for a minute or two. Encourage everyone to say “hello,” and ask questions like “so, where are you calling in from or how was your weekend?” to encourage people to be more open and set a good tone for the call.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-clear-expectations"&gt;
  &lt;/a&gt;
  Set Clear Expectations
&lt;/h3&gt;

&lt;p&gt;Once you’ve introduced everyone, set clear expectations, and present an agenda for the call, this will allow everyone to understand what you hope to accomplish in the meeting and ensure everyone stays on track. Finally, ask your team if anyone has any other business they want to raise before the meeting officially starts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#discuss-action-items"&gt;
  &lt;/a&gt;
  Discuss action items
&lt;/h3&gt;

&lt;p&gt;The key to a good remote meeting is for there to be a clear intention set. While an agenda goes a long way to explaining the purpose of a call, you should also make sure that action items are discussed. Establish the next steps, and get your remote team members involved with the process.&lt;/p&gt;

&lt;p&gt;Are you looking for feedback on a project? Does a team member need to do something specific? Are you planning a release? If so, make sure these are all recorded. This is especially important because if someone goes away with the wrong idea of their next steps, they can’t walk up to you after the meeting and ask you about action items like they would in an office. So, make sure everyone is on the same page about the next steps during the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#establish-proper-meeting-etiquette"&gt;
  &lt;/a&gt;
  Establish Proper Meeting Etiquette
&lt;/h3&gt;

&lt;p&gt;In an office, during a meeting, everyone pays attention and is not involved with their phones. But when you are calling into a meeting remotely, it’s easier to disobey these rules. So, when you’re running a meeting, maintain a code of conduct about speaking in meetings and proper meeting etiquettes which includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Everyone should have an opportunity to speak.&lt;/li&gt;
&lt;li&gt;Phones, all Slack, and email notifications should be turned off.&lt;/li&gt;
&lt;li&gt;Turn on the video when required and is possible.&lt;/li&gt;
&lt;li&gt;Don’t interrupt other people when they’re speaking.&lt;/li&gt;
&lt;li&gt;All technology should be tested before the meeting.&lt;/li&gt;
&lt;li&gt;Read the agenda, and come prepared&lt;/li&gt;
&lt;li&gt;Team members should be in a quiet and uninterrupted place.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#after-the-meeting"&gt;
  &lt;/a&gt;
  After the meeting
&lt;/h2&gt;

&lt;p&gt;After a remote meeting has ended, you can do a few things to make sure that everyone is on the same page and is ready to get to work on what was discussed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#send-followups-to-team-members"&gt;
  &lt;/a&gt;
  Send follow-ups to team members
&lt;/h3&gt;

&lt;p&gt;After the meeting, send an email or a Slack message to all attendees with minutes of the meeting reminding them of what was discussed. In addition, follow-ups will ensure that everyone has a record of a meeting, including people who were unable to attend. Documentation is particularly important to ensure that everyone is clear on the action items and implementing them.&lt;/p&gt;

&lt;p&gt;The follow up should tell everyone the following key things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deliverables and next steps&lt;/li&gt;
&lt;li&gt;Who’s responsible for following up on what&lt;/li&gt;
&lt;li&gt;When the next check-in will be&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#checkin-on-action-items"&gt;
  &lt;/a&gt;
  Check-in on action items
&lt;/h3&gt;

&lt;p&gt;In the following hours and days after a call, check in with people in the meeting and ask them about their progress toward their action items. Have they met their goals? If they are struggling, you can offer to lend a hand and seek feedback on improving your communication in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-successful-remote-meetings"&gt;
  &lt;/a&gt;
  Running successful remote meetings.
&lt;/h3&gt;

&lt;p&gt;Successfully operating a remote meeting can sound intimidating, but with the help of the outlined steps in this article, you’ll be ready to run a meeting like a pro and &lt;a href="https://dailyremote.com/remote-work-blog/work-from-home-tips/"&gt;work from home like a boss&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ultimately, successful remote meetings have a clear purpose and make everyone feel involved. By the end of a meeting, people should feel like they were able to contribute and should have clear next steps set for themselves.&lt;/p&gt;

&lt;p&gt;If you prepare adequately for a meeting, establish a set of rules, and take proper steps to follow-up after a meeting, you’ll be on your way to running great remote calls where everyone feels empowered, involved, and part of the team!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-ahead-and-meet-virtually-like-a-pro"&gt;
  &lt;/a&gt;
  Go ahead and meet, virtually like a Pro!
&lt;/h3&gt;

&lt;p&gt;While remote meetings might seem difficult to manage, they’re not. A little planning is all you need to ensure a successful and productive remote meeting.If you are searching for remote jobs, go over our guide on &lt;a href="https://dailyremote.com/remote-work-blog/how-to-find-a-remote-job/"&gt;how to find a remote job&lt;/a&gt;? If you're interested in looking for remote work, there's no better place to start than DailyRemote. Plus, it's totally free to sign up. So, what are you waiting for? Get started today. Join like-minded remote working people in our LinkedIn community.&lt;/p&gt;

</description>
      <category>remote</category>
      <category>productivity</category>
      <category>career</category>
      <category>job</category>
    </item>
    <item>
      <title>Next.js posting data to Postgres through Prisma</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 27 Oct 2021 06:29:08 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/nextjs-posting-data-to-postgres-through-prisma-11p7</link>
      <guid>https://dev.to/dailydevtips1/nextjs-posting-data-to-postgres-through-prisma-11p7</guid>
      <description>&lt;p&gt;Hi everyone! In the past couple of articles, we have been looking at Prisma and Postgres databases.&lt;/p&gt;

&lt;p&gt;In this article, I will create a Next.js app that can post data to a Postgres database.&lt;/p&gt;

&lt;p&gt;What we'll be building:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User signs in with Spotify&lt;/li&gt;
&lt;li&gt;User loads their playlists from Spotify&lt;/li&gt;
&lt;li&gt;User can sync one of the playlists to our Postgres database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--msjw3iHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634477800714/AYIILKoPa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--msjw3iHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634477800714/AYIILKoPa.gif" alt="Next.js posting data to Postgres through Prisma" width="500" height="282"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-starting-point"&gt;
  &lt;/a&gt;
  Setting up the starting point
&lt;/h2&gt;

&lt;p&gt;I'm going to use the &lt;a href="https://daily-dev-tips.com/posts/retrieving-a-persons-spotify-playlist-in-nextjs/"&gt;Spotify login example&lt;/a&gt; we made yesterday as the starting point for today's article.&lt;/p&gt;

&lt;p&gt;If you want to follow along, download it from &lt;a href="https://github.com/rebelchris/next-spotify-login"&gt;GitHub&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;The first thing we need to do is add the Prisma dependencies to our application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; prisma
npm i @prisma/client
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to initialize the Prisma client.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will generate the Prisma folder and add a database URL to our &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Open up the &lt;code&gt;.env&lt;/code&gt; file and paste your &lt;a href="https://daily-dev-tips.com/posts/setting-up-a-free-postgresql-database-on-heroku/"&gt;Postgres database URL&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-the-database"&gt;
  &lt;/a&gt;
  Set up the database
&lt;/h2&gt;

&lt;p&gt;The next thing we need to do is define a schema for our playlist. Open the &lt;code&gt;prisma/schema.prisma&lt;/code&gt; file and add the following schema at the bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="nx"&gt;Playlist&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;id&lt;/span&gt;           &lt;span class="nx"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;default&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;autoincrement&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;title&lt;/span&gt;        &lt;span class="nb"&gt;String&lt;/span&gt;
  &lt;span class="nx"&gt;image&lt;/span&gt;        &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
  &lt;span class="nx"&gt;uri&lt;/span&gt;          &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;unique&lt;/span&gt;
  &lt;span class="nx"&gt;addedBy&lt;/span&gt;      &lt;span class="nb"&gt;String&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From here, we need to build our database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma db push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As well as generate the local schema:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma generate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-an-api-endpoint-to-post-our-entity"&gt;
  &lt;/a&gt;
  Creating an API endpoint to post our entity
&lt;/h2&gt;

&lt;p&gt;We already have a &lt;code&gt;playlists&lt;/code&gt; endpoint so let's leverage that one but modify it to accept &lt;code&gt;POST&lt;/code&gt; requests.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;pages/api/playlists.js&lt;/code&gt; file and start by importing the Prisma requirements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@prisma/client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's modify the handler to do something on &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;GET&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getSession&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Do post stuff&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getUsersPlaylists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As for the &lt;code&gt;POST&lt;/code&gt; section, we want to extract the correct data from our post query and create a new object to send to our database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;playlistItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;addedBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then all we need to do is call our Prisma client and use the &lt;code&gt;create&lt;/code&gt; function to insert our item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;playlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;playlistItem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;playlist&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it, if we now perform a &lt;code&gt;POST&lt;/code&gt; request to this API endpoint, our playlist will be added.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-frontend-action"&gt;
  &lt;/a&gt;
  Creating the frontend action
&lt;/h2&gt;

&lt;p&gt;For the frontend part, let's open up our &lt;code&gt;index.js&lt;/code&gt; page.&lt;br&gt;
Inside the map function add a button with a click action like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]?.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;100&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;saveToDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;Save&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;database&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's go ahead and make this &lt;code&gt;saveToDatabase&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveToDatabase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;api/playlists&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our case, we are just passing the API request but not doing anything with the return data yet.&lt;/p&gt;

&lt;p&gt;This is perfect as once we click the button, it will call this function and post it to our API.&lt;br&gt;
Which in return adds a new entry in our database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ETWNHMP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634477581356/AS1_2nxU7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ETWNHMP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634477581356/AS1_2nxU7.png" alt="Database entries from Prisma Next.js" width="880" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find the complete code on &lt;a href="https://github.com/rebelchris/next-spotify-login/tree/post-data"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>postgres</category>
      <category>database</category>
    </item>
    <item>
      <title>Cool Features Of Next JS 12</title>
      <author>Raghav Mrituanjaya</author>
      <pubDate>Wed, 27 Oct 2021 06:16:24 +0000</pubDate>
      <link>https://dev.to/raghavmri/cool-features-of-next-js-12-3md1</link>
      <guid>https://dev.to/raghavmri/cool-features-of-next-js-12-3md1</guid>
      <description>&lt;p&gt;Today at &lt;a href="https://nextjs.org/conf"&gt;Next.js conf&lt;/a&gt;, &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; the company behind next.js announced the public availability of next.js 12 which brings a lot of cool features into action&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rust-compiler-makes-build-and-refreshes-more-faster"&gt;
  &lt;/a&gt;
  Rust Compiler Makes build and Refreshes more faster
&lt;/h3&gt;

&lt;p&gt;Next.js 12 includes a brand new Rust compiler that takes advantage of native compilation which gives &lt;strong&gt;3x faster refresh&lt;/strong&gt; locally and &lt;strong&gt;5x faster builds&lt;/strong&gt; for production which can reduce your CI/CD build time drastically. To turn on the Rust minify feature add &lt;code&gt;swcMinify: true&lt;/code&gt; to your next.config.js file&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#url-module-imports"&gt;
  &lt;/a&gt;
  URL Module Imports 😍
&lt;/h3&gt;

&lt;p&gt;Next.js 12 supports CDN module imports which means you can import any HTTP(S) dependencies as a local module. To import any HTTP(S) module just add the following lines to your next.config.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
experimental: {
urlImports: ['https://cdn.skypack.dev', 'https://cdn.anymodule.site']
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can import the module by&lt;br&gt;
&lt;code&gt;import confetti from 'https://cdn.skypack.dev/canvas-confetti'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I think it's time to say goodbye to hefty node_modules 🤔. What do you guys think do let me know in the comments below&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#middleware-supports"&gt;
  &lt;/a&gt;
  Middleware supports
&lt;/h3&gt;

&lt;p&gt;If your app has a common logic for all the server-side rendering this is an amazing feature that lets you share logic between different pages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// pages/_middleware.js
export function middleware(req, ev) {
return new Response('Hello, world!')
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#avif-support"&gt;
  &lt;/a&gt;
  AVIF support 😍
&lt;/h3&gt;

&lt;p&gt;Out of the box Next.js 12 supports &lt;a href="https://netflixtechblog.com/avif-for-next-generation-image-coding-b1d75675fe4"&gt;AVIF&lt;/a&gt; image optimization, Reducing your image size by 20% than &lt;a href="https://developers.google.com/speed/webp"&gt;WebP&lt;/a&gt;&lt;br&gt;
To enable this feature just add the following to your next.config.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;images: {
formats: ['image/avif', 'image/webp']
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There were more features that were introduced on Next.js 12 which were not listed here as it contains only some of the cool features that I personally like. To know about all the features kindly read their &lt;a href="https://nextjs.org/blog/next-12"&gt;blog post&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;yarn add next@12.0.1&lt;/code&gt; or &lt;code&gt;npm i next@12.0.1&lt;/code&gt; to install Next.js 12&lt;/li&gt;
&lt;li&gt;Support me on &lt;a href="https://patreon.com/gogamic"&gt;Patreon&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>nextjs</category>
    </item>
  </channel>
</rss>
