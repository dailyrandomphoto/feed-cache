<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Set Up a Decentralized Database with React and GunDB</title>
      <author>Saji Wang</author>
      <pubDate>Thu, 07 Oct 2021 11:17:42 +0000</pubDate>
      <link>https://dev.to/codesphere/set-up-a-decentralized-database-with-react-and-gundb-2e5m</link>
      <guid>https://dev.to/codesphere/set-up-a-decentralized-database-with-react-and-gundb-2e5m</guid>
      <description>&lt;p&gt;Earlier this week, &lt;a href="https://codesphere.com/articles/are-dapps-the-future-of-software-6d1ebf10a779"&gt;we spoke about decentralized applications&lt;/a&gt;, and the implications they might have on the future of the web. Now I'm not sure if we at Codesphere have unexpectedly been endowed with the power of prophecy, but only a few hours after publishing our article, Facebook sent the world a massive reminder on the dangers of centralized infrastructure, as a DNS error shut down all their services for nearly 24 hours.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/CodesphereCloud/status/1445075779545706508"&gt;https://twitter.com/CodesphereCloud/status/1445075779545706508&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the major benefits of decentralized apps is that these sorts of infrastructure failures become much rarer. While building a dApp might feel like a monumental endeavor, it's actually not too difficult.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this tutorial, we're going to build a decentralized Google Docs clone with React and GunDB.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#how-gundb%C2%A0works"&gt;
  &lt;/a&gt;
  How GunDB Works
&lt;/h3&gt;

&lt;p&gt;GunDB is an easy-to-use peer-to-peer decentralized database that will allow you to store data on a network of individual users, instead of a singular server. Each peer in the app's network stores some amount of the web app's data, but in aggregate, the entire network will contain all the necessary information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIE4NCIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlkptglybi6nhgsn358g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIE4NCIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlkptglybi6nhgsn358g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While this approach to decentralized data storage has many similarities to Blockchain, it is important to note that it is its own technology. In fact, just like Blockchain, decentralized databases are a hot topic in Computer Science research. You can learn more about GunDB here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gun.eco/"&gt;https://gun.eco/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While our database could hypothetically run without any kind of additional servers, this is going to require a sufficient number of users to make sure that you can always access enough nodes in the network.&lt;/p&gt;

&lt;p&gt;To account for this, we're going to host our own relay peer that users can connect to even if no one else is using the app.&lt;/p&gt;

&lt;p&gt;In terms of data formatting, every node in our database is going to have a 'soul' which is its unique identifier, and then data stored in a standard JSON format.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-our-relay%C2%A0peer"&gt;
  &lt;/a&gt;
  Setting up our Relay Peer
&lt;/h3&gt;

&lt;p&gt;For our relay peer, we are going to create a simple express server that uses the GunDB npm package.&lt;/p&gt;

&lt;p&gt;Install these in a new npm project with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install express gun&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For our node, we're only going to need one file with the following code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;This will create our express server and set it up with Gun.&lt;/p&gt;

&lt;p&gt;Keep in mind that in this example we are running everything locally, but for a production-grade app you are going to want to deploy it in the cloud. We of course recommend &lt;a href="https://link.codesphere.com/EL"&gt;Codesphere&lt;/a&gt; to deploy and configure your relay peer with ease.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setting-up-our-react-application"&gt;
  &lt;/a&gt;
  Setting up Our React Application
&lt;/h3&gt;

&lt;p&gt;Next, we are going to create a React App to interact with a textbox along with other nodes in our network. Again, make sure to install Gun, and then we can do the following in the relevant component:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;And as simple as that, we have a working app!&lt;/p&gt;

&lt;p&gt;We can then run our react app with:&lt;br&gt;
&lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And our node relay script with&lt;br&gt;
&lt;code&gt;node server.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And now we can edit these live.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7_ikaERu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elw4d1bbrkxk954gc7i2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7_ikaERu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elw4d1bbrkxk954gc7i2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The full project repo can be accessed &lt;a href="https://github.com/LiorB-D/GunJSDemo"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#where-to-go-from%C2%A0here"&gt;
  &lt;/a&gt;
  Where to Go From Here
&lt;/h3&gt;

&lt;p&gt;This is only the tip of the iceberg of what can be accomplished with GunDB and decentralized web technologies. There are countless applications of GunDB in areas like gaming, communication, and Defi. We also haven't even scratched the surface of the data storage, encryption, and P2P features that Gun includes. I encourage you to check out the full documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gun.eco/docs/API"&gt;https://gun.eco/docs/API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contrary to popular belief, decentralization and cloud aren't mutually exclusive. When dApps are first starting to grow, it's important to use the cloud to maximize your app's efficiency.&lt;/p&gt;

&lt;p&gt;Now when you're choosing your provider, ditch the big tech companies, and come check out what we're building at &lt;a href="https://link.codesphere.com/EL"&gt;Codesphere&lt;/a&gt;, an all-in-one code editor, DevOps toolkit, and cloud provider!&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>database</category>
      <category>react</category>
      <category>gundb</category>
      <category>webdev</category>
    </item>
    <item>
      <title>🦩 5 Free coding resources that helped me get my first frontend developer job</title>
      <author>Stefi Rosca</author>
      <pubDate>Thu, 07 Oct 2021 10:43:17 +0000</pubDate>
      <link>https://dev.to/stefirosca/5-free-coding-resources-that-helped-me-get-my-first-frontend-developer-job-4ak4</link>
      <guid>https://dev.to/stefirosca/5-free-coding-resources-that-helped-me-get-my-first-frontend-developer-job-4ak4</guid>
      <description>&lt;p&gt;When I wanted to learn how to code I thought the only available options were either to go to university or attend a bootcamp. Given I wasn't sure if this was what I wanted to do long-term, I wasn't ready to invest. Luckily I found out about some great free online resources and some amazing communities that I am sharing in this article.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: I've attended a paid bootcamp as well and paid for the Scrimba subscription plan but I do believe that all the resources mentioned together with the paid ones helped me land the job. Some of the courses I've done post-bootcamp.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Free coding courses&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/"&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/introduction-computer-science-harvardx-cs50x"&gt;CS50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrimba.com/"&gt;Scrimba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLRD1Niz0lz1uR4W3ms6DygWMjXW-6hDB_"&gt;JavaScript Games with Ania Kubow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://javascript30.com/"&gt;Javascript30&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Bonus:&lt;/strong&gt; &lt;a href="https://medium.com/coding-artist/a-beginners-guide-to-pure-css-images-ef9a5d069dd2"&gt;A Beginners Guide To Pure CSS Images&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Communities:&lt;/strong&gt; &lt;a href="https://codebar.io/"&gt;codebar&lt;/a&gt;, &lt;a href="https://mentors.codingcoach.io/"&gt;Coding Coach&lt;/a&gt; and &lt;a href="https://www.recurse.com/"&gt;the Recurse Center&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More details on each option below. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-free-coding-courses"&gt;
  &lt;/a&gt;
  5 Free coding courses
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-freecodecamp"&gt;
  &lt;/a&gt;
  1. Freecodecamp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wH0IwKf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u99t3vxx2pwb0tuayxkf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wH0IwKf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u99t3vxx2pwb0tuayxkf.gif" alt="freecodecamp demo"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://www.freecodecamp.org/"&gt;&amp;gt;&amp;gt;&amp;gt; Sign up for freecodecamp here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It's a great resource for beginners as it doesn't require any previous experience and covers in detail basic as well as advanced concepts.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since joining I've completed the Responsive Web Design, the JavaScript Algorithms and Data Structures certification and the React part from the Front End Development Libraries certification. Although I had already done a course on React I choose to go through this again. It really helped as I got to go through everything again at a slower pace.&lt;/p&gt;

&lt;p&gt;In this Responsive Web Design Certification, you'll learn  HTML and CSS and will have a few projects build on your own. What I liked about this curriculum is that you get to put everything into practice with the projects you will have to build.&lt;/p&gt;

&lt;p&gt;In the JavaScript Algorithm and Data Structures Certification, you get to learn the fundamentals of JavaScript including variables, arrays, objects, loops, and functions. Even are already familiar with these concepts I still recommend going through them as a repetition exercise. &lt;/p&gt;

&lt;p&gt;Additionally, there is a Coding Interview Prep section where one can practice coding challenges in JS. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My advice:&lt;/strong&gt; don't try to do the curriculum all at once and just to complete it. Take the time to make sure you understand. Some things you will forget especially with HTML and CSS. By building things on your own these concepts will be easier to remember and hey, there is nothing wrong with going back and looking up things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-cs50-introduction-to-computer-science-harvard-university"&gt;
  &lt;/a&gt;
  2. CS50: Introduction to Computer Science | Harvard University
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QNfeTJW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y57plzysin3pb94lhrcn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QNfeTJW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y57plzysin3pb94lhrcn.jpeg" alt="Prof. David J. Malan"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://www.edx.org/course/introduction-computer-science-harvardx-cs50x"&gt;&amp;gt;&amp;gt;&amp;gt; Sign up for CS50 here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Even though it's labeled as a beginner course, for me it was the most challenging one I took so far.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Why? First, it starts with C and then there is no walkthrough with the solutions, but you learn a lot during this struggle. I remember watching the lectures 2-3 times to realize some things just weren't discussed. That's when I bought the recommended book and improved my search skills. This is what actually happens in real life and I am grateful to have learned it early on. &lt;/p&gt;

&lt;p&gt;Prof. David J. Malan's energy is contagious. The passion he has teaching can make one fall in love with coding and also believe they can definitely learn it too. &lt;/p&gt;

&lt;p&gt;The reason I took this course was because I thought I needed a university diploma to prove I could be a real developer, and one from Harvard is not a small thing. &lt;/p&gt;

&lt;p&gt;They say the course can be completed in 12 weeks by investing around 10-12 hours a week. It took me around 8 months and I've reached out to various developers for help throughout the journey. Many times I wanted to through the laptop but once I've finished I felt everything was possible. &lt;/p&gt;

&lt;p&gt;Languages in this course include C, Python, SQL, and JavaScript plus CSS and HTML. The goal, ultimately, is for students to feel not that they “learned how to program in X” but that they “learned how to program.”&lt;/p&gt;

&lt;p&gt;Students who earn a satisfactory score on 9 of the 9 programming assignments and submit a final project are eligible for a certificate. This is a self-paced course–you may take CS50x on your own schedule but you can also attend live via Zoom.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-scrimba"&gt;
  &lt;/a&gt;
  3. Scrimba
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8QEN90TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz55c0v2geopm0v0hj70.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8QEN90TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz55c0v2geopm0v0hj70.gif" alt="Scrimba demo free courses"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://scrimba.com/"&gt;&amp;gt;&amp;gt;&amp;gt; Sign up for Scrimba here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ideal for beginners who want to learn Frontend Development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While learning CSS on freecodecamp I was told that there are 2 courses that might explain better &lt;a href="https://scrimba.com/learn/flexbox"&gt;Flexbox&lt;/a&gt; and &lt;a href="https://scrimba.com/learn/cssgrid"&gt;CSS Grid&lt;/a&gt;, on Scrimba. Once I started going through the course I've found this platform to be amazing. It's because you can pause the course and immediately code in the course. Cannot explain it very well you have to try it yourself.&lt;/p&gt;

&lt;p&gt;Besides this, I've completed also the &lt;a href="https://scrimba.com/learn/design"&gt;Learn UI Design Fundamentals&lt;/a&gt;, &lt;a href="https://scrimba.com/learn/learnreact"&gt;Learn React course&lt;/a&gt; and &lt;a href="https://scrimba.com/learn/portfolio"&gt;Build and deploy your portfolio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since I've joined Scrimba they have created a &lt;strong&gt;paid subscription&lt;/strong&gt; which can be around 15 Euros per month (depending on where you are located and the plan you choose) which gives you access to all paid courses as well as the &lt;a href="https://scrimba.com/learn/frontend"&gt;The Frontend Developer Career Path&lt;/a&gt;. Before paying though I recommend trying it out and doing the free courses. There are plenty of them and if you feel you want more then sign up.&lt;/p&gt;

&lt;p&gt;I did 80% of the Frontend Developer Career Path and as a bootcamp graduate can tell you this is an incredibly valuable course that includes way more material.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-javascript-games-with-ania-kubow"&gt;
  &lt;/a&gt;
  4. JavaScript Games with Ania Kubow
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bIvl1I-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hvvqeolt4hzkbdlqjjj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bIvl1I-9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hvvqeolt4hzkbdlqjjj.gif" alt="JavaScript Games with Ania Kubow Youtube Playlist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://www.youtube.com/playlist?list=PLRD1Niz0lz1uR4W3ms6DygWMjXW-6hDB_"&gt;&amp;gt;&amp;gt;&amp;gt; Checkout the JavaScript Games with Ania Kubow playlist on YouTube&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To go to these you need to have a basic understanding of JS, HTML and CSS.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This was one of my favorite JS tutorials. There are no frameworks involved and you get to build retro games that you might have played growing up if you were born in the 80s. From PacMan to the Nokia 3310 Snake game to a Tetris game and way more, with these tutorials you not only get a better JS understanding but you also have something to show off in your portfolio. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/ania_kubow?lang=en"&gt;Ania Kubow&lt;/a&gt; is an amazing teacher, who explains very well what she is building so I highly recommend following her on YouTube where all her videos and tutorials can be found. Good stuff I promise! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://stefi.codes/Nokia3310-Snake/"&gt;Here's a demo of my Nokia Snake Game&lt;/a&gt; build with Ania's tutorial.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-javascript30"&gt;
  &lt;/a&gt;
  5. JavaScript30
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--os0pP2v0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yres582qsl981x86ph22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--os0pP2v0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yres582qsl981x86ph22.png" alt="JS30 website screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://javascript30.com/"&gt;&amp;gt;&amp;gt;&amp;gt; Sign up for JavaScript30 here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To go through this course you have to already know the basics of JavaScript.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Repetition is the mother of learning. The more I code, the better I get at it which makes it seem easier. Therefore I signed up for JS30. It has 30 chapters/challenges which take between 30-60 min to complete. It won't involve any frameworks or libraries.&lt;/p&gt;

&lt;p&gt;I'm currently at 21/30 and I can tell you I've learned a lot of new things, understood better some concepts, and had fun too. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#bonus-a-beginners-guide-to-pure-css-images"&gt;
  &lt;/a&gt;
  Bonus: A Beginners Guide To Pure CSS Images
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWRg798y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv230lms80g7io3rx4f3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWRg798y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv230lms80g7io3rx4f3.png" alt="Screenshot A Beginners Guide To Pure CSS Images article"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://medium.com/coding-artist/a-beginners-guide-to-pure-css-images-ef9a5d069dd2"&gt;&amp;gt;&amp;gt;&amp;gt; Checkout the beginners guide to pure css images here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CSS basic knowledge required.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When browsing on &lt;a href="https://codepen.com/"&gt;Codepen&lt;/a&gt; I've kept seeing amazing art being created with only CSS. I looked at the code but was quite intimidated by it and thought I'd never be able to do something similar. One day I decided to look into it and searched for a  beginner’s guide. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/michaelmangial1?lang=en"&gt;Michael Mangialardi&lt;/a&gt; wrote a great intro guide on the topic. After following this I got a better basic understanding and tried to create a few myself like the one shared below. If you'd like to get started I recommend starting with this detailed explanation of how to create pure CSS images. It starts with an overview and then you will learn how to create a Koala in pure CSS in less than an hour. Total fun!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc9Ei1Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lr67m2ygaipzjit5tgs7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc9Ei1Pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lr67m2ygaipzjit5tgs7.png" alt="Screenshot Recurse Center Logo made with CSS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code at:  &lt;a href="https://codepen.io/stefi23/pen/poEpeNX"&gt;https://codepen.io/stefi23/pen/poEpeNX&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#communities"&gt;
  &lt;/a&gt;
  Communities:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1codebar"&gt;
  &lt;/a&gt;
  1.Codebar
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mmy_Nyw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygfbmrsf79hud1rs1nyo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mmy_Nyw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ygfbmrsf79hud1rs1nyo.jpeg" alt="codebar event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://codebar.io/"&gt;&amp;gt;&amp;gt;&amp;gt; Checkout codebar here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Codebar is a non-profit organization that facilitates the growth of a diverse tech community by running regular programming workshops in various cities around the world, currently running remotely. Besides their meetups, codebar has a very active Slack channel where you can ask for help on #helpdesk or find out about events as well as jobs. &lt;/p&gt;

&lt;p&gt;What I like about the community is how involved they are in helping minorities get into tech. They are all volunteers that offer their time to help people with code. They played  crucial role in journey becoming a developer. &lt;/p&gt;

&lt;p&gt;Sign up for the next codebar event either as a coach or student at &lt;a href="https://codebar.io/events"&gt;https://codebar.io/events&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-recurse-center"&gt;
  &lt;/a&gt;
  2. The Recurse Center
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cDbFH61B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmxtudiah883poiu0fk1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cDbFH61B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmxtudiah883poiu0fk1.png" alt="cover recurse center"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;RC is a free educational retreat for people who already know how to program, and for programmers of all experience levels. In oder to attend a batch you have to get through an application process and get accepted.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is quite hard to describe what doing a batch at the Recurse Center is like, I'd say it's a life-changing experience. I've learned and grew a tone! I can't even believe it. Of course, I wish I've done more but luckily I'm never graduating and the journey will continue 🐙&lt;/p&gt;

&lt;p&gt;At RC you are surrounded by programmers of all levels who program in different languages. You don't have any set curriculum and can work on any project you want or get into play with a technology you're curious about. The only goal is to become a better programmer by the end of it and along the way you will get  the support needed.&lt;/p&gt;

&lt;p&gt;The Recurse Center is a free 12-week programming retreat in New York where you can go to learn fun new things about programming. I've done a remote batch in Spring 2020. RC is about learning whatever interests you and allowing yourself to change your mind. As a junior, I've had a lot of pairing opportunities, got code reviews, was able to give a talk and learned a lot from my peers through various groups. Besides coding, we also had a feelings checking and job support group. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3coding-coach"&gt;
  &lt;/a&gt;
  3.Coding Coach
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gw-g8uq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh27q8lxz8ohdknebdnv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gw-g8uq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh27q8lxz8ohdknebdnv.gif" alt="Demo search on Coding Coach"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
   &lt;a href="https://mentors.codingcoach.io/"&gt;&amp;gt;&amp;gt;&amp;gt; Checkout Coding Coach here&amp;lt;&amp;lt;&amp;lt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Coding Coach is a free, open-source platform that aims to connect software developers and mentors all over the world. You can filter by technology, language and country. Once you have an account you can get the contact details and reach out to a mentor and ask if they are available to help. Here I've found a few wonderful coaches who offered their time for free to help me.&lt;/p&gt;




&lt;p&gt;There are other places where you can find communities for example on Twitter or there are various Discord channels, the one from Scrimba(free) or my favorite one &lt;a href="https://www.patreon.com/cassidoo"&gt;cassidoo's patron-only Discord chat&lt;/a&gt;(paid).&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Open Source in Everyday Life</title>
      <author>Anish De</author>
      <pubDate>Thu, 07 Oct 2021 10:19:51 +0000</pubDate>
      <link>https://dev.to/byteslash/open-source-in-everyday-life-j84</link>
      <guid>https://dev.to/byteslash/open-source-in-everyday-life-j84</guid>
      <description>&lt;p&gt;We often don't realize but open-source projects play a huge role in our life. Today, in this article, I am going to talk about how we use open-source technologies in our everyday life and what would happen if they didn't exist 😱.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WZyNXkdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633524503879/t56B1bvDk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WZyNXkdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633524503879/t56B1bvDk.gif" alt="let-us-get-started-minions.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-examples"&gt;
  &lt;/a&gt;
  Some Examples
&lt;/h2&gt;

&lt;p&gt;Let us start with some open-source technologies we use in our daily life - &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#android"&gt;
  &lt;/a&gt;
  Android
&lt;/h3&gt;

&lt;p&gt;Many of us have phones running the &lt;a href="https://www.android.com/"&gt;Android Operating System&lt;/a&gt;. Android by itself is an open-source project maintained by Google. The base version of android is popularly referred to as Android Open Source Project (AOSP). Now, what do I mean by the base version of android? Well most of us aren't running pure AOSP on our phones as companies put on their proprietary code on top of AOSP. In fact &lt;a href="https://developers.google.com/android/guides/overview"&gt;Google Play Services&lt;/a&gt; is closed-source. You can use AOSP without Google Play Services but then you are going to miss out on Google Services and will face weird issues if you do so. Many third-party apps will also have trouble working as many of them rely on Google APIs like the Google Maps API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chromium"&gt;
  &lt;/a&gt;
  Chromium
&lt;/h3&gt;

&lt;p&gt;Most people use some chromium-based browser, be it Google Chrome, Microsoft Edge, Vivaldi, Brave, or even Opera. Chromium by itself is an &lt;a href="https://www.chromium.org/Home"&gt;open-source project&lt;/a&gt;. Now, to be fair, none of the aforementioned browsers are open-source (with the exception of Brave). This is usually done to pack more proprietary features. For example, Google Chrome comes with a suite of Google features like syncing across different devices. These browsers are a chromium fork with more features, different themes, better integration with operating systems, and more optimization. It is a lot like how Android works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-studio-code"&gt;
  &lt;/a&gt;
  Visual Studio Code
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; is an extremely popular code editor and it is open source. You can take a look at the &lt;a href="https://github.com/microsoft/vscode"&gt;source code on GitHub&lt;/a&gt;. There is a small caveat, the version of Visual Studio Code distributed by Microsoft does have telemetry which the open-source version doesn't. You can download &lt;a href="https://vscodium.com/"&gt;VSCodium&lt;/a&gt; which has binaries built from the source code on GitHub but you might face issues. &lt;/p&gt;

&lt;p&gt;Most applications depend on some open-source project, be it a web framework like &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; or some other package. In fact, all programming languages are open-source (at least I have never heard of a closed-source programming language). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-open-source"&gt;
  &lt;/a&gt;
  Advantages of Open Source
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#great-community"&gt;
  &lt;/a&gt;
  Great Community
&lt;/h3&gt;

&lt;p&gt;You will have a great community built around your project that will trust your project. Many people are open-source enthusiasts and will try their best to use open-source software. These people will be your users if the application fulfills their needs!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contributors"&gt;
  &lt;/a&gt;
  Contributors
&lt;/h3&gt;

&lt;p&gt;When an application is open-source, open-source contributors get a chance to contribute to your project. Any contribution is extremely valuable as it usually fixes a problem. There will be spam but that is just part of the game.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learning"&gt;
  &lt;/a&gt;
  Learning
&lt;/h3&gt;

&lt;p&gt;Contributing to open-source is something that gives not only beginners but also advanced developers something to work on and learn from contributing. You, as the developer of the project, will also learn a lot from the community of developers who find something not right with your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  Fixes
&lt;/h3&gt;

&lt;p&gt;We all make mistakes and there will be loopholes or bugs in your code. Other contributors will not only let you know about the issue but also help you in fixing the problem or even fix the problem themselves. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-understanding"&gt;
  &lt;/a&gt;
  Better Understanding
&lt;/h3&gt;

&lt;p&gt;If one encounters a problem in an open-source project, one can look at the source code and better understand the cause of the problem. This will help resolve the bug more quickly making it a win-win situation for you, as the developer and the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#portfolio"&gt;
  &lt;/a&gt;
  Portfolio
&lt;/h3&gt;

&lt;p&gt;Contributing to open-source is something of great importance in your portfolio. It is a great starting point that will help you later on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-would-happen-if-opensource-didnt-exist"&gt;
  &lt;/a&gt;
  What would happen if open-source didn't exist
&lt;/h2&gt;

&lt;p&gt;Now that we have seen examples of open-source in our day-to-day life and have seen the advantages, let us discuss what would happen if everything would be proprietary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#it-wouldnt-be-good-for-developers"&gt;
  &lt;/a&gt;
  It wouldn't be good for developers
&lt;/h3&gt;

&lt;p&gt;Developers usually rely on programming languages, libraries, and frameworks when developing an application. If these were not open-source, developers would fear that they might be shipping applications with trackers which they didn't intend to add. This would also mean that there would be lesser flexibility. When something is open-source, there is a great community making tutorials, understanding how a framework works, working on making it better, and making plugins for it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wouldnt-be-good-for-beginners"&gt;
  &lt;/a&gt;
  Wouldn't be good for beginners
&lt;/h3&gt;

&lt;p&gt;Beginners learn a lot from contributing to open-source. If this opportunity was to be taken away from their learning path, they would lose a lot. From my personal experience, I can say that I have learned a lot by contributing to others' projects on GitHub. Even seeing and understanding the source code of an application and how it works teaches one a lot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tinkerers-wouldnt-be-happy"&gt;
  &lt;/a&gt;
  Tinkerers wouldn't be happy
&lt;/h3&gt;

&lt;p&gt;Many people don't want a company to decide what is best for them. They want to customize their things as much as they can to fit their needs and likings. This makes one more comfortable and gives people options.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h3&gt;

&lt;p&gt;As things would become closed-source, corporations would try to make the most out of it by pricing their products high. Due to many things being open-source, the community has developed many open-source alternatives which may better suit a person. Not only are open-source projects usually free or cheap but also they are better when it comes to privacy. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#privacy"&gt;
  &lt;/a&gt;
  Privacy
&lt;/h3&gt;

&lt;p&gt;This takes us to privacy. Closed-source applications are known to have trackers which is a direct invasion of privacy. Open-source applications usually don't have such trackers. If someone is concerned about their privacy, they can even self-host an application they want to use.&lt;/p&gt;

&lt;p&gt;Other than these, closed-source applications would take away the advantages open-source applications tend to have (as mentioned above).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you have found this article helpful in understanding the importance of open-source in our everyday life. Feel free to leave a comment down below if you have a doubt and you can reach out to me on &lt;a href="https://twitter.com/anishde12020"&gt;Twitter&lt;/a&gt; as well. I am also going to write a lot about open-source this month so keep an eye on my blog or follow me so you are notified whenever I release a new post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7I9xPEMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633593281303/Bjk6EPRvy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7I9xPEMH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633593281303/Bjk6EPRvy.gif" alt="bye-close-door-mionion.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Finding the Right Open Source Projects to Contribute to</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Thu, 07 Oct 2021 10:11:18 +0000</pubDate>
      <link>https://dev.to/byteslash/finding-the-right-open-source-projects-to-contribute-to-500j</link>
      <guid>https://dev.to/byteslash/finding-the-right-open-source-projects-to-contribute-to-500j</guid>
      <description>&lt;p&gt;One of the biggest question marks while contributing to open source is what to contribute to?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RuWCPxqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/3ohzAfg9idAylNIpoY/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RuWCPxqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/3ohzAfg9idAylNIpoY/giphy.gif" alt="thinking"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let's see where to find these repositories-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-searchexplore"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/explore"&gt;GitHub search/explore&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Github is a great way to find other open-source projects to work on. Here you can search by-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Topics&lt;/li&gt;
&lt;li&gt;Languages&lt;/li&gt;
&lt;li&gt;Stars&lt;/li&gt;
&lt;li&gt;Trending&lt;/li&gt;
&lt;li&gt;And many more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A great topic to search for is &lt;a href="https://github.com/search?q=good+first+issue&amp;amp;type=issues"&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt;. You can find beginner friendly issues that are easier to contribute&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUf-AdOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633571537845/YaNlm2dBu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUf-AdOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633571537845/YaNlm2dBu.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-first-issuesdev"&gt;
  &lt;/a&gt;
  &lt;a href="https://goodfirstissue.dev/"&gt;Good first issues.dev&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Easily find beginner-friendly issues to work on. You can find repositories of different languages easily and start working on them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OjsrGN18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633571657257/OBAfiYl_R.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OjsrGN18--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633571657257/OBAfiYl_R.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#awesome-for-beginners-github-repository"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;Awesome for beginners GitHub repository&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is a collection of open-source projects on GitHub that you can contribute to. They are sorted based on the language so it is easy to find what you want to work on-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbHUPJ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633572083827/5un3fCJLH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbHUPJ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633572083827/5un3fCJLH.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-first-issuescom"&gt;
  &lt;/a&gt;
  &lt;a href="https://goodfirstissues.com/"&gt;Good First Issues.com&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another website with a list of many beginner friendly projects. You can search by labels, languages, repositories&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--voQyt5e6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633572608557/qdF_X4sTM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voQyt5e6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633572608557/qdF_X4sTM.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contribute-to-the-apps-and-tools-you-use"&gt;
  &lt;/a&gt;
  Contribute to the apps and tools you use
&lt;/h3&gt;

&lt;p&gt;Give back to the free open-source tools, websites, and apps you have been using by contributing to them! Here are a few to list-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;FreeCodeCamp&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/microsoft/vscode"&gt;Vscode&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/vuejs/vue"&gt;Vue&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vercel/next.js"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tailwindlabs/tailwindcss"&gt;TailwindCSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h3&gt;

&lt;p&gt;Since this is the month of hacktoberfest, here are 2 websites to find open source projects participating in hacktoberfest-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://hacktoberfest-projects.vercel.app/"&gt;Hacktoberfest projects&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This site lets you find projects based on a preferred language and even search for projects!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4tCVcGNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633573307634/pbHazdYLZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4tCVcGNt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633573307634/pbHazdYLZ.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;**&lt;a href="https://hacktosearch.vercel.app/"&gt;Hacktosearch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Search for projects you can contribute to by topics and languages. This is a great tool for finding more personalized projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4hWtdjpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633573762264/3M1BjiJj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4hWtdjpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633573762264/3M1BjiJj0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you found some great projects to contribute to from these resources. &lt;/p&gt;

&lt;p&gt;What else do you use to find great projects? Let me know in the comments ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.avneesh.tech/what-is-open-source"&gt;What is Open Source and how to get started?&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.avneesh.tech/how-to-contribute-to-an-open-source-project"&gt;How to contribute to an open-source project and make a PR?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;All socials&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React timeline animation component</title>
      <author>Alex Kashuba</author>
      <pubDate>Thu, 07 Oct 2021 10:10:09 +0000</pubDate>
      <link>https://dev.to/akashuba/react-timeline-animation-component-6h2</link>
      <guid>https://dev.to/akashuba/react-timeline-animation-component-6h2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ozg5QmlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lihj5p7el615ih3a5vf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ozg5QmlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7lihj5p7el615ih3a5vf.gif" alt="timeline animation"&gt;&lt;/a&gt;&lt;br&gt;
Hi! &lt;br&gt;
In this post, I'd like to introduce a react component, that was designed for animating the timelines and the scroll-dependent animations. &lt;/p&gt;

&lt;p&gt;Firstly I try to find existing solutions, but they work with a solid timeline. In my case, I have a banner in the middle of the timeline. It gives me an idea to create a wrapper component for any part of the timeline, sticks or step circles whatever. You can see the full &lt;a href="https://codesandbox.io/s/brave-kepler-fdbzv?file=/src/App.js:2443-2454"&gt;demo&lt;/a&gt; &lt;br&gt;
The component uses the "render prop" pattern.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TimelineObserver&lt;/span&gt;
  &lt;span class="nx"&gt;initialColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#e5e5e5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;fillColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#53b374&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="nx"&gt;handleObserve&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;setObserver&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Timeline&lt;/span&gt;
      &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;setObserver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setObserver&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we pass a ref to the setObserver function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;timeline1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

 &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeline1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;timeline1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;timeline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to filter already filled elements and prevent further position recalculations, we use the "id" prop.&lt;/p&gt;

&lt;p&gt;In terms of optimization, we use the "IntersectionObserver" to interact with elements only if they are in the viewport. And the requestAnimationFrame to handle the color fill animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isIntersecting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setObservable&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;obs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;observableList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;observablesStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;callbacks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;callbacks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IntersectionObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also can add a callback that fired after the element will fully cross the middle of the screen. (watch the demo)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someCallback3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setMessage3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Finish&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;fireConfetti&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;circle3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;someCallback3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is react-timeline-animation at first glance. Be free to suggest ideas or contributions, contacts in github below.&lt;br&gt;
Code can be found in &lt;a href="https://github.com/akashuba/react-timeline-animation"&gt;github&lt;/a&gt;.&lt;br&gt;
And &lt;a href="https://www.npmjs.com/package/react-timeline-animation"&gt;npm&lt;/a&gt; package.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Cryptourism.io on Google Maps</title>
      <author>Cryptourism.io</author>
      <pubDate>Thu, 07 Oct 2021 10:05:34 +0000</pubDate>
      <link>https://dev.to/cryptourism/cryptourism-io-on-google-maps-4j0b</link>
      <guid>https://dev.to/cryptourism/cryptourism-io-on-google-maps-4j0b</guid>
      <description>&lt;p&gt;Cryptourism.io on Google Maps&lt;/p&gt;

&lt;p&gt;And another milestone achieved. Cryptourism.io just got added to the Google Maps and paving the way to complete the Pre-Sale stage.&lt;br&gt;
For more info visit us today &lt;a href="https://cryptourism.io/"&gt;https://cryptourism.io/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#google-marketplace-cryptourism-ctr-blockchain-tourism-mortagua-portugal"&gt;
  &lt;/a&gt;
  google #marketplace #cryptourism #CTR #blockchain #tourism #Mortagua #Portugal
&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>Tips to develop an effective logo for the Digital World!
</title>
      <author>Marcus Shires</author>
      <pubDate>Thu, 07 Oct 2021 09:37:01 +0000</pubDate>
      <link>https://dev.to/marcusshires/tips-to-develop-an-effective-logo-for-the-digital-world-fce</link>
      <guid>https://dev.to/marcusshires/tips-to-develop-an-effective-logo-for-the-digital-world-fce</guid>
      <description>&lt;p&gt;Are you here to gain some know-how regarding your next logo? Well, if yes then you would be as enthusiastic about logo making as every other logo designer. So, keep yourself hooked to this blog as you will be guided on some of the best logotypes, their significance and simply how you could design them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-for-a-logo-design"&gt;
  &lt;/a&gt;
  Tools for a Logo Design
&lt;/h2&gt;

&lt;p&gt;The tools that you would need to equip your brand logo with are basically the combination of a beginner level to an advanced level. However, you should not go lost in the ambiguity of various logo builders. In this instance, for each logo type, you have to opt for software that is specified in that particular domain. For example, if you aim to design an anime logo then you have to purchase an &lt;a href="https://logozila.com/logo-maker/anime/"&gt;anime logo creator&lt;/a&gt;. For most that are oblivious, an anime logo can revolutionize your brand as it adds a spark into it that is more engaging and relatable. There is a wide array of anime logo types and designs on the web that you can surf for a blur-free insight!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-sensible-color-pallet"&gt;
  &lt;/a&gt;
  A Sensible Color Pallet
&lt;/h2&gt;

&lt;p&gt;Colors undoubtedly play a massive role in signifying the base of your logo. So, what’s the trick? Well, logo designers are intelligent people who have an eye for details. If you are an emerging learner, then it is important to develop a sense of brand image, and then making it align with the colors. For example, it is common that whenever people refer to earth friendly brands some of the colors hitting their mind would be blue, green and brown. At times, a logo structure is too complex that using multiple colors would make it further complicated. On the contrary, using multiple colors in a basic logo can be as appealing!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-original-for-personalization"&gt;
  &lt;/a&gt;
  Be Original for Personalization
&lt;/h2&gt;

&lt;p&gt;While it’s great to get inspired, there is a fine line between copying and duplicating someone’s work rather than getting mere inspiration. If you are new to the market and striving for customization then investing into highly innovative and advanced logo generators with qualities of artificial intelligence. This will make you learn immensely and at the same time serve you with endless ideas, that won’t require you to pressurize your thoughts in case you are facing a creative block. One of the best tricks of dealing with this is to merge different inspirations that should be something you aspire to achieve.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-go-overboard-with-everything"&gt;
  &lt;/a&gt;
  Don’t go overboard with everything
&lt;/h2&gt;

&lt;p&gt;Do you know why some of the brands are successful today while the rest aren’t? It is majorly because they are well-recognized and well established worldwide. And ultimately the credits go to an exceptional logo! Why don’t you check it on your end? Just close your eyes and ask yourself about any top 3 logos clicking your mind first. There are chances that the simplest yet attractive logos will make space in your head. For many reasons, the retention of those logos is more than any other logo that is composed with multiple elements. This however shouldn’t be confused with the idea that you should limit the use of tools; you definitely can do that but the proportion should be within the range.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-of-shapes"&gt;
  &lt;/a&gt;
  Use of shapes
&lt;/h2&gt;

&lt;p&gt;Shapes come in different sizes, perimeters, and dimensions. So when you are using them you should emphasize whether they make sense, especially with the ideas that you have brainstormed. For example, you are using a triangle while being clueless about the concept of using it in your logo. On the positive side though, shapes are illusionary objects that can bring an ultimate glistening effect in your logo. More than anything else, you are never curbing with options in shapes, the range is as wide as it gets depending on your pick.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-the-right-steps-at-the-right-time"&gt;
  &lt;/a&gt;
  Follow the right steps at the right time!
&lt;/h2&gt;

&lt;p&gt;If you are moving through a descending order with your logo designing, then you better stop. This is because choosing the template first and then drafting your logo is not the right idea. There are specific steps for everything that you aim to do and therefore, you have to follow that pathway. As you do so, your success is ensured for the brand. So the first step to be taken for the logo design is to hunt for the tool. Once you do so, experiment and explore the interfaces of the software. Upon that, you have to find a template that is similar to your draft that you had already practiced and saved on other apps. Next, you have to import it on the software and edit it, bring required changes and see where alterations are required. It is always recommended to check with your team before sending it to the final client. So before you reach that stage, download the logo and see if the colors are right, and the pixels are also appropriate, only then you should forward it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-sum-up"&gt;
  &lt;/a&gt;
  To Sum Up
&lt;/h2&gt;

&lt;p&gt;You would only know what the best logo in the world is, as you will find it worth admiration from your clients and the target audience. Just implement these and your brand can reach skies of success. &lt;/p&gt;

</description>
      <category>design</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build Music Player using HTML, CSS, and Javascript</title>
      <author>Divyamcm</author>
      <pubDate>Thu, 07 Oct 2021 08:56:43 +0000</pubDate>
      <link>https://dev.to/divyamcm/build-music-player-using-html-css-and-javascript-58lb</link>
      <guid>https://dev.to/divyamcm/build-music-player-using-html-css-and-javascript-58lb</guid>
      <description>&lt;p&gt;==================================================&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gwIY4ajy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/10922/0%2AniDJTZkfKkb1GcYB" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gwIY4ajy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/10922/0%2AniDJTZkfKkb1GcYB" alt=""&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@leecampbell?utm_source=medium&amp;amp;utm_medium=referral"&gt;Lee Campbell&lt;/a&gt; on &lt;a href="https://unsplash.com?utm_source=medium&amp;amp;utm_medium=referral"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dear Reader,&lt;/p&gt;

&lt;p&gt;How about building a Music player on your own from scratch? Exciting right! Let’s start.&lt;/p&gt;

&lt;p&gt;Folder Structure of the project&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;em&gt;index.html - contains the HTML layout which defines the element structure that would be shown on the page.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;images folder - contains .jpg images used in our project.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;music folder - contains .mp3 audio files used in our project.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;style.css- contains CSS code for styling. Using CSS we can style the different portions to make it more visually appealing&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;script.js - contains Javascript code. There are several functions that work together to handle all the functions of the player. Ex: play, pause, to switch the songs back and forth, popup title of the song with the progress bar when we play the song, able to click on the progress bar to go to that spot in the song etc.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#html-layout"&gt;
  &lt;/a&gt;
  HTML Layout
&lt;/h2&gt;

&lt;p&gt;Open VSCode and create the basic HTML structure in an &lt;strong&gt;index.html&lt;/strong&gt; file by ! and then pressing tab. Give the &lt;strong&gt;title&lt;/strong&gt; as ‘&lt;strong&gt;Music Player’&lt;/strong&gt;. Link &lt;strong&gt;style.css&lt;/strong&gt; and &lt;strong&gt;script.js&lt;/strong&gt; to the created HTML file and link FontAwesome css to use play, pause,next and previous icons.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O4ioSOXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img2_b42te2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4ioSOXG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img2_b42te2.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;Basic index.html&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Inside the body, Create a &lt;strong&gt;audio-container&lt;/strong&gt; class which will wrap around everything.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class =“audio-container" id =“audio-container"&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Inside &lt;strong&gt;audio-container&lt;/strong&gt; class, create a &lt;strong&gt;audio-info&lt;/strong&gt; class which holds the title of the song and the progress when we click play.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”audio-info”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;strong&gt;h4&lt;/strong&gt; tag with &lt;strong&gt;id = ‘title’&lt;/strong&gt; inside &lt;strong&gt;audio-info&lt;/strong&gt; class and this is going to be populated dynamically with javascript with the current playing song.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h4 id=”title”&amp;gt;&amp;lt;/h4&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create &lt;strong&gt;progress-container&lt;/strong&gt; class and inside that add &lt;strong&gt;progress&lt;/strong&gt; class which will be filled dynamically&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”audio-container” id=”audio-container”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”audio-info”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;h4 id=”title”&amp;gt;&amp;lt;/h4&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”progress-container” id=”progress-container”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”progress” id=”progress”&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Underneath &lt;strong&gt;audio-info&lt;/strong&gt; class add &lt;strong&gt;audio&lt;/strong&gt; tag with the source of the song and id .&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;audio src=”music/melody.mp3" id=”audio”&amp;gt;&amp;lt;/audio&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To hold images&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img src=”images/melody.jpg” alt=”music-cover” id=”cover”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create a navigation class and we will have three buttons inside that to play the song, to play previous song and next song&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”navigation”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button id=”prev” class=”action-btn”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;i class=”fas fa-backward”&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button id=”play” class=”action-btn action-btn-big”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;i class=”fas fa-play”&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button id=”next” class=”action-btn”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;i class=”fas fa-forward”&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6xKsv4_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img3_gwordo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xKsv4_v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img3_gwordo.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;index.html&lt;/em&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K1wc4XDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img4_bxtcxb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1wc4XDC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img4_bxtcxb.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;Music Player view&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-styling"&gt;
  &lt;/a&gt;
  CSS Styling
&lt;/h2&gt;

&lt;p&gt;Quite a bit of CSS coding is required and I explained the only the important parts here and rest of the CSS code mostly deals with positioning,size and color of the elements.I shared the github link at the end of the post where you can see the complete code.&lt;/p&gt;

&lt;p&gt;For the styling of the &lt;strong&gt;body,&lt;/strong&gt; I have used linear gradient of yellow and orange color shades as background image.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;background-image: linear-gradient(0deg, rgba(251,252,13,1) 23.8%, rgba(255,170,1,0.99) 92%);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Added &lt;strong&gt;background-color&lt;/strong&gt; as black and also added the shadow for the &lt;strong&gt;audio-container&lt;/strong&gt; class which wraps around everything except the h1 tag&lt;/p&gt;

&lt;p&gt;&lt;code&gt;background-color: #000;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;box-shadow: 0 20px 20px 0 rgb(247, 148, 1);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To make the image circular set the &lt;strong&gt;border-radius&lt;/strong&gt; to 50% in the &lt;strong&gt;img-container&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;border-radius: 50%;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set animation in the &lt;strong&gt;img-container&lt;/strong&gt; to make the circular image rotate when the song is playing&lt;/p&gt;

&lt;p&gt;&lt;code&gt;animation: rotate 3s linear infinite;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create rotate keyframes starting at 0 degree to 360 degree&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@keyframes rotate {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;from {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transform: rotate(0deg);&lt;/code&gt;}&lt;/p&gt;

&lt;p&gt;&lt;code&gt;to {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transform: rotate(360deg);}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If &lt;strong&gt;audio-container&lt;/strong&gt; has a &lt;strong&gt;play&lt;/strong&gt; class on it then the image will rotate&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.audio-container.play .img-container img {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;animation-play-state: running;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Only when the music is playing the &lt;strong&gt;audio-info&lt;/strong&gt; will popup. Refer the following CSS implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D56oZGn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img5_lype7e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D56oZGn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img5_lype7e.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;style.css&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Below is the CSS code for progress bar to show the percentage of song completed. I used white color as background and black color to show the progression.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGx--d7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img6_rnui49.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGx--d7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img6_rnui49.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;style.css&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-logic"&gt;
  &lt;/a&gt;
  Javascript logic
&lt;/h2&gt;

&lt;p&gt;The logic of the player is defined in the script.js file. There are several functions that work together to handle all the functions of the player.&lt;br&gt;&lt;br&gt;
Defining all the variables and accessing the HTML elements.&lt;br&gt;&lt;br&gt;
The required elements in the HTML layout that are to be dynamically changed are first selected using the getElementById() method and then assigned to a variable names so that they could be accessed and modified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rAuGaUrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2732/1%2AZIKr0VDr3AHdJfQd61M_eg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAuGaUrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2732/1%2AZIKr0VDr3AHdJfQd61M_eg.jpeg" alt=""&gt;&lt;/a&gt;&lt;em&gt;script.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Write a function &lt;strong&gt;loadSong(song)&lt;/strong&gt; to dynamically update the audio source and respective image source. Call the function to load the song details into DOM by passing the &lt;strong&gt;songIndex&lt;/strong&gt; value.I considered &lt;strong&gt;songIndex&lt;/strong&gt; value to be 1 which means music player starts from second song in the list (index starts from 0).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5Zvn2pr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img8_qwf99y.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5Zvn2pr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img8_qwf99y.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s create event listeners which listens to particular event (for ex: click) and perform particular actions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event listener on clicking Play button&lt;/strong&gt;: Clicking on play button should start the song and if the song is already playing then it should stop. Implement &lt;strong&gt;playSong()&lt;/strong&gt; function and &lt;strong&gt;pauseSong()&lt;/strong&gt; function which also includes the logic to change the icons from play icon to pause icon and vice versa.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKvc2pNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img9_ral5w3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKvc2pNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592632/JavaScript/Music%2520Player/BLOG_1_img9_ral5w3.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;script.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event listener on clicking Previous and Next button:&lt;/strong&gt; Clicking on previous button will call &lt;strong&gt;prevSong()&lt;/strong&gt; function which should play the previous song in the list so we are decrementing the &lt;strong&gt;songIndex&lt;/strong&gt; value. If the &lt;strong&gt;songIndex&lt;/strong&gt; value is lesser than 0 then we are setting &lt;strong&gt;songIndex&lt;/strong&gt; value such that it should point to the last song in the list so, the songs will be played in loop.Similarly, clicking on next button will call &lt;strong&gt;nextSong()&lt;/strong&gt; function which should play the next song in the list so we are incrementing the &lt;strong&gt;songIndex&lt;/strong&gt; value. If the &lt;strong&gt;songIndex&lt;/strong&gt; value is greater than or equal to the number of songs in the list then we are setting &lt;strong&gt;songIndex&lt;/strong&gt; value to 0.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJME_6WN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img10_gv9vcj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJME_6WN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img10_gv9vcj.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;script.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event listener to update song progress:&lt;/strong&gt; On HTML audio tag there is an event called &lt;strong&gt;timeupdate.&lt;/strong&gt; Everytime when the song is playing constantly this will be called and on this event we will call &lt;strong&gt;updateProgress()&lt;/strong&gt; function. In the &lt;strong&gt;updateProgress()&lt;/strong&gt; function we will get the &lt;strong&gt;duration&lt;/strong&gt; of the song from the event and the &lt;strong&gt;currentTime&lt;/strong&gt;. Calculate &lt;strong&gt;progressPercent&lt;/strong&gt; by using formula &lt;strong&gt;(currentTime/ duration)*100&lt;/strong&gt; and set that &lt;strong&gt;progressPercent&lt;/strong&gt; value to &lt;strong&gt;width&lt;/strong&gt; of the progress bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUh6dW30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img11_luyuva.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUh6dW30--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img11_luyuva.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;script.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event listener on clicking progress bar&lt;/strong&gt;: To go to that spot in the song when we click anywhere on the &lt;strong&gt;progress-container&lt;/strong&gt; then we will call &lt;strong&gt;setProgress()&lt;/strong&gt; function. This function will change the song progression based on user’s click on progress bar by getting the X-axis offset value to know where the user clicked and calculate the &lt;strong&gt;currentTime&lt;/strong&gt; by using formula &lt;strong&gt;(clickX / width) * duration.&lt;/strong&gt; In this way we can move anywhere in the song.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sC7GzBww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img12_cwndnv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sC7GzBww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633592631/JavaScript/Music%2520Player/BLOG_1_img12_cwndnv.jpg" alt=""&gt;&lt;/a&gt;&lt;em&gt;style.css&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event listener to check end of the song:&lt;/strong&gt; The HTML audio API gives us an event called &lt;strong&gt;ended&lt;/strong&gt;. When song ends we will call the &lt;strong&gt;nextSong()&lt;/strong&gt; function which was created before.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;audio.addEventListener(‘ended’, nextSong);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;VOILA !!!!! Music player is ready for the demo&lt;/p&gt;

&lt;p&gt;Final Demo &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=Xyss5NABwOc"&gt;https://www.youtube.com/watch?v=Xyss5NABwOc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Complete source code can be found in the Git hub repo, link is &lt;a href="https://github.com/Divyamcm/Projects/tree/main/Music-Player"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for your interest.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Divya M C M&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
      <category>programming</category>
    </item>
    <item>
      <title>Drum Kit using HTML, CSS, and Javascript</title>
      <author>Divyamcm</author>
      <pubDate>Thu, 07 Oct 2021 08:53:01 +0000</pubDate>
      <link>https://dev.to/divyamcm/drum-kit-using-html-css-and-javascript-9ha</link>
      <guid>https://dev.to/divyamcm/drum-kit-using-html-css-and-javascript-9ha</guid>
      <description>&lt;p&gt;========================================&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1eO-HgkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595460/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/background_image_bq4d1e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1eO-HgkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595460/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/background_image_bq4d1e.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dear Reader,&lt;/p&gt;

&lt;p&gt;How about building drum kit on your own virtually with the help of some scripting language?Sounds cool right! Let’s start building a simple drum kit using HTML, CSS, and Javascript that runs in a browser which will play the sound when the user press on particular key on the keyboard.&lt;/p&gt;

&lt;p&gt;Folder Structure of the project&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;em&gt;index.html — contains the HTML layout which defines the element structure that would be shown on the page.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;images folder — contains .jpg images used in our project.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;sounds folder — contains . wav files used in our project.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;em&gt;style.css — contains CSS code for styling. Using CSS we can style the different portions to make it more visually appealing.&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#html-layout"&gt;
  &lt;/a&gt;
  HTML Layout
&lt;/h1&gt;

&lt;p&gt;Open VSCode and create the basic HTML structure in an &lt;strong&gt;index.html&lt;/strong&gt; file by ! and then pressing tab. Give the &lt;strong&gt;title&lt;/strong&gt; as ‘Drum Kit*&lt;em&gt;’&lt;/em&gt;&lt;em&gt;. Link **style.css&lt;/em&gt;* to the created HTML file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt;Drum Kit&amp;lt;/title&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=”stylesheet” href=”style.css”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Inside the body, Create a div element with the class of &lt;strong&gt;keys&lt;/strong&gt; which will wrap all the drum kit keys used in our application.Inside the div class we have another set of div’s with a class of &lt;strong&gt;key.&lt;/strong&gt; Now each one of these keys here has a sound associated with it. For every key on the keyboard when we do key up or key down action, there is going to be something called the &lt;strong&gt;key code&lt;/strong&gt; that is associated with that key. For ex: key code of &lt;em&gt;‘A’&lt;/em&gt; is 65.&lt;/p&gt;

&lt;p&gt;In our project, we are using &lt;strong&gt;&lt;em&gt;‘A’, ‘S’, ‘D’, ‘F’, ‘G’ ‘H’, ‘J’, ‘K’, ‘L’&lt;/em&gt;&lt;/strong&gt; keys  to play the sounds of the drum kit. When we press any of the above keys on the keyboard then we’re going to play the corresponding audio element.For example when we press key &lt;strong&gt;&lt;em&gt;‘A’ (_Keycode ‘65’&lt;/em&gt;)_&lt;/strong&gt;  on keyboard we’re going to check if that was the &lt;strong&gt;&lt;em&gt;‘A’&lt;/em&gt;&lt;/strong&gt; Key then we’re going to play the corresponding audio that also has the same &lt;strong&gt;data-key&lt;/strong&gt; and we’re going to find the key &lt;strong&gt;div&lt;/strong&gt; element,add a class of &lt;strong&gt;playing&lt;/strong&gt; so it will animate itself on in.&lt;/p&gt;

&lt;p&gt;Now, &lt;strong&gt;what is this data-key?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data-*&lt;/code&gt; attribute is used to store custom data private to the page or application.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data-*&lt;/code&gt; attribute gives us the ability to embed custom data attributes on all HTML elements.&lt;/p&gt;

&lt;p&gt;The stored (custom) data can then be used in the page’s JavaScript to create a more engaging user experience&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data-*&lt;/code&gt; attribute consist of two parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The attribute name should not contain any uppercase letters, and must be at least one character long after the prefix “data-”. In our case it is &lt;strong&gt;data-key.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt; The attribute value can be any string. In our case value is a number which represents keycode.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the HTML code,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div class=”keys”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div data-key=”65" class=”key”&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;kbd&amp;gt;A&amp;lt;/kbd&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;span class=”sound”&amp;gt;clap&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;audio data-key=”83" src=”sounds/hihat.wav”&amp;gt;&amp;lt;/audio&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--548p0nMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/HTML_code_y0u80e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--548p0nMk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/HTML_code_y0u80e.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;index.html&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-styling"&gt;
  &lt;/a&gt;
  CSS Styling
&lt;/h1&gt;

&lt;p&gt;CSS is used to style the different portions and make it more visually appealing.Experiment on color, background, font-family, margin and font size you want to give to the body,heading and the keys.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ReAixCM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/CSS_1_phawta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ReAixCM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/CSS_1_phawta.png" alt=""&gt;&lt;/a&gt;style.css&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When we press any of these keys &lt;strong&gt;&lt;em&gt;‘A’, ‘S’, ‘D’, ‘F’, ‘G’ ‘H’, ‘J’, ‘K’, ‘L’&lt;/em&gt;&lt;/strong&gt; on keyboard then let’s do some animation on key &lt;strong&gt;div&lt;/strong&gt; element . On key press from the keyboard the corresponding key &lt;strong&gt;div&lt;/strong&gt; element on the UI should scale a bit and the border should be changed to yellow with shadow which means we have to change the existing property value.This transition should happen on key down(key press)and we will use &lt;strong&gt;CSS transitions&lt;/strong&gt; which allows you to change property values smoothly, over a given duration.&lt;/p&gt;

&lt;p&gt;we will define the property values that has to be changed in &lt;strong&gt;playing&lt;/strong&gt; class which will get added to the key &lt;strong&gt;div&lt;/strong&gt; element on key down action using Javascript function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLZ7ZpSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/CSS_2_p5qdni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLZ7ZpSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/CSS_2_p5qdni.png" alt=""&gt;&lt;/a&gt;&lt;em&gt;style.css&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-logic"&gt;
  &lt;/a&gt;
  Javascript logic
&lt;/h1&gt;

&lt;p&gt;The logic of the player is defined inside the &lt;strong&gt;script&lt;/strong&gt; tag.Our first goal is to listen to the key down event and call &lt;strong&gt;playSound&lt;/strong&gt; function. We are passing the event object to the function where event object holds all kinds of info like what key was actually hit which also contains the &lt;strong&gt;keycode&lt;/strong&gt;.Take an example, we press &lt;strong&gt;keycode 65&lt;/strong&gt; (‘A’) on the keyboard. Next, we are finding out is there an &lt;strong&gt;audio&lt;/strong&gt; element on the page that has a &lt;strong&gt;data-key&lt;/strong&gt; of 65 for that we are going to use &lt;strong&gt;document.querySelector()&lt;/strong&gt; to select an audio element where it has a &lt;strong&gt;data — key&lt;/strong&gt; same as &lt;strong&gt;e.keycode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;window.addEventListener(‘keydown’, playSound);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;function playSound(e) {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const audio = document.querySelector(`audio[data-key=”${e.keyCode}”]`);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In a similar way, find out is there an &lt;strong&gt;div&lt;/strong&gt; element on the page that has a &lt;strong&gt;data&lt;/strong&gt;-&lt;strong&gt;key&lt;/strong&gt; of 65 for that we are going to use &lt;strong&gt;document.querySelector()&lt;/strong&gt; to select an &lt;strong&gt;div&lt;/strong&gt; element where it has a &lt;strong&gt;data — key&lt;/strong&gt; same as &lt;strong&gt;e.keycode&lt;/strong&gt;. The returned element is assigned to a constant variable called &lt;strong&gt;key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const key = document.querySelector(`div[data-key=”${e.keyCode}”]`);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If &lt;strong&gt;audio&lt;/strong&gt; element is not present i.e If the pressed key on the keyboard don’t have an audio element associated with it then &lt;strong&gt;return&lt;/strong&gt; in other words statement stops the execution of a function.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;if (!audio) return;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We are going to add the &lt;strong&gt;playing&lt;/strong&gt; class on the &lt;strong&gt;div&lt;/strong&gt; element which is assigned to constant variable &lt;strong&gt;key .&lt;/strong&gt; This &lt;strong&gt;playing&lt;/strong&gt; class will add animation to the &lt;strong&gt;div&lt;/strong&gt; element of the corresponding key pressed as mentioned in CSS section before.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;key.classList.add(‘playing’);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we are going to the play the audio. Before playing the audio we will&lt;br&gt;&lt;br&gt;
rewind it to the start of the element so that if you hit key in succession over and over again it will just rewind it to the start. So let’s say,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;audio.currentTime = 0;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;audio.play();&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;we are done with &lt;strong&gt;playSound&lt;/strong&gt; function*&lt;em&gt;.&lt;/em&gt;* As we already discussed,we are adding the animation once the listed key is pressed but we also want to remove the animation in sometime. The requirement is to add the animation only during the key press. we can use a &lt;strong&gt;transitionend&lt;/strong&gt; event that will fire when the element has stopped animating itself on in*&lt;em&gt;.&lt;/em&gt;*&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const keys = Array.from(document.querySelectorAll(‘.key’));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;keys.forEach(key =&amp;gt; key.addEventListener(‘transitionend’, removeTransition));&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now, what is the transitionend event?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As we already discussed,when the listed key is pressed the &lt;strong&gt;div&lt;/strong&gt; element CSS will be transitioned to scale a bit and the border will be changed to yellow with shadow.The &lt;code&gt;**transitionend**&lt;/code&gt; event is fired when a CSS transition has completed. Once the &lt;strong&gt;transitionend&lt;/strong&gt; event occurs we will call &lt;strong&gt;removeTransition&lt;/strong&gt; function by passing event object. The event object contains a propertyName called ‘&lt;strong&gt;transform&lt;/strong&gt;’ which indicates the transform has finished. If the transition is completed then we will remove the animation by removing the class &lt;strong&gt;playing.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;function removeTransition(e) {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;if (e.propertyName !== ‘transform’) return;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;e.target.classList.remove(‘playing’);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wIEsCX8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/javascript_evpd7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wIEsCX8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/thewebdev/image/upload/v1633595459/JavaScript/MEDIUM%2520BLOG%25202_Drumkit/javascript_evpd7c.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are done!! Time to run the code and check the results.&lt;br&gt;
 &lt;a href="https://www.youtube.com/watch?v=fqnWbdOG2-U"&gt;https://www.youtube.com/watch?v=fqnWbdOG2-U&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find the complete source code &lt;a href="https://github.com/Divyamcm/Projects/tree/main/Drumkit"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for your interest.&lt;/p&gt;

&lt;p&gt;-Divya M C M&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Blogue: A blogging site for Vue</title>
      <author>Sam Zhang</author>
      <pubDate>Thu, 07 Oct 2021 08:50:45 +0000</pubDate>
      <link>https://dev.to/samzhangjy/blogue-a-blogging-site-for-vue-3p60</link>
      <guid>https://dev.to/samzhangjy/blogue-a-blogging-site-for-vue-3p60</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-blogue"&gt;
  &lt;/a&gt;
  What is Blogue?
&lt;/h2&gt;

&lt;p&gt;Blogue is a light-weight blogging site for Vue.js.&lt;/p&gt;

&lt;p&gt;I developed it for a reason: there isn't really a simple blogging tool for Vue. VuePress works, but it's to complicated. So for that purpose, I developed this light-weight blogging site for Vue: Blogue.&lt;/p&gt;

&lt;p&gt;You can host it on any server that has Nodejs and Vue installed. Actually, you even don't need them if you already built your blog on your own laptop: just host the HTML and JavaScript files directly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#behind-blogue"&gt;
  &lt;/a&gt;
  Behind Blogue
&lt;/h3&gt;

&lt;p&gt;At first, I just wanted to build a lightweight blog for myself. However, I found that if I publish the source code and write a tutorial on how to use it, developers can spend less time on building the blog but more time writing the posts.&lt;/p&gt;

&lt;p&gt;So I decided to make Blogue open source. And that's why this post appeared.&lt;/p&gt;

&lt;p&gt;Of course, Blogue is not quite complete: there might be bugs, and the UI might not work properly. However, from my own usage, there aren't any issues till now. I will try to add some more features and make Blogue more customizable in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-blogue"&gt;
  &lt;/a&gt;
  How to use Blogue?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure you have &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://vuejs.org/"&gt;Vue 2&lt;/a&gt; installed before continuing.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h3&gt;

&lt;p&gt;You need to config your blog before using.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#general-configuration"&gt;
  &lt;/a&gt;
  General Configuration
&lt;/h4&gt;

&lt;p&gt;Write your configuration for the entire blog in &lt;code&gt;/posts/data/config.json&lt;/code&gt;. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your username"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"avatarPath"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your avatar image url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your blog description"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"blogTitle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Your blog title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"blogStartYear"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;year&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;blog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;started.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Used&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;copyrights&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;footer.&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"contacts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Contact method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"value"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Contact information, such as your email address"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Contact link, such as `mailto:email@example.com`"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Please fill in all information above, or Blogue might crash.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#projects-configuration"&gt;
  &lt;/a&gt;
  Projects Configuration
&lt;/h4&gt;

&lt;p&gt;First, provide a list of your projects needed to be shown on your blog. Configure them in &lt;code&gt;/posts/data/projects.json&lt;/code&gt;. E.g.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"projects"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Project name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"des"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Project description"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"img"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Project cover image url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Project homepage url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"github"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Project GitHub url"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, please fill in all information above.&lt;/p&gt;

&lt;p&gt;Then, please create a file called &lt;code&gt;project-des.md&lt;/code&gt; under &lt;code&gt;/posts/data/&lt;/code&gt;. In this markdown file, you can write some text which will be shown in the projects page above the projects. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;Below are my personal projects made in my free time.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can write in MarkDown format.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#about-yourself-configuration"&gt;
  &lt;/a&gt;
  About Yourself Configuration
&lt;/h4&gt;

&lt;p&gt;You needed to provide a MarkDown file to display on the &lt;code&gt;about&lt;/code&gt; page. Write something about your self in the Markdown file &lt;code&gt;/posts/data/about.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to use Markdown!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-posts"&gt;
  &lt;/a&gt;
  Writing Posts
&lt;/h3&gt;

&lt;p&gt;You can write your posts in Markdown format, under &lt;code&gt;/posts/&lt;/code&gt;. The file structure of &lt;code&gt;/posts/&lt;/code&gt; is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;posts                             
├─ data                           
│  ├─ about.md                    
│  ├─ config.json                 
│  ├─ posts.json                  
│  ├─ project-des.md              
│  └─ projects.json               
├─ post-1-title.md                      
├─ post-2-title.md              
├─ post-3-title.md                  
└─ post-4-title.md  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, you need to do one more configuration on the posts: &lt;code&gt;/posts/data/posts.json&lt;/code&gt;. Write down the posts you wanted to display on the blog and provide some information about it. Such as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Blogue: A simple blogging site for Vue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;title&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Vue.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"project"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"frontend"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;tags&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"cover"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://dev-to-uploads.s3.amazonaws.com/i/95lvt23xz4ozer5byomi.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;cover&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;image&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;url&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"des"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"There isn't really a simple blogging tool for Vue. VuePress works, but it's to complicated. So for that purpose, I developed this light-weight blogging site for Vue: Blogue."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;description&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;publish&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;date&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Year&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Month&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Day&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"blogue"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Post&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;stored&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;under&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`/posts/`&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the &lt;code&gt;id&lt;/code&gt; of a post is its &lt;strong&gt;filename&lt;/strong&gt;, &lt;strong&gt;NOT&lt;/strong&gt; its title. Wrong configuration can led to a 404 response for a mis-configured post. Be sure to check the configuration!&lt;/p&gt;

&lt;p&gt;So, every time you wanted to publish a post, you need to add it to the configuration file. Otherwise, it won't show up at all in your blog.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publish-your-blog"&gt;
  &lt;/a&gt;
  Publish your blog
&lt;/h3&gt;

&lt;p&gt;If this is the first time you publish your blog, you need to install Blogue dependencies first.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;yarn&lt;/code&gt; (or &lt;code&gt;npm install&lt;/code&gt; for &lt;code&gt;npm&lt;/code&gt;) to install Blogue dependencies.&lt;/p&gt;

&lt;p&gt;Currently, Blogue supports only GitHub pages to publish automatically. You need to build and publish your site manually if you wanted to host on other platforms.&lt;/p&gt;

&lt;p&gt;First, create a repository named &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;your-github-username&amp;gt;&lt;/code&gt; with your real GitHub username.&lt;/p&gt;

&lt;p&gt;Then, run &lt;code&gt;source publish.sh&lt;/code&gt; to build and publish your blog to GitHub pages. After running this script, your blog should be live on &lt;code&gt;&amp;lt;your-github-username&amp;gt;.github.io&lt;/code&gt; in a few minutes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-your-blog-locally"&gt;
  &lt;/a&gt;
  Running your blog locally
&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;yarn serve&lt;/code&gt; (or &lt;code&gt;npm run serve&lt;/code&gt; if you're using &lt;code&gt;npm&lt;/code&gt;) to start a hot-reloading development server on &lt;code&gt;localhost:8080&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-your-blog-manually"&gt;
  &lt;/a&gt;
  Building your blog manually
&lt;/h3&gt;

&lt;p&gt;If you're not using GitHub Pages as your hosting provider, you'll need to build your site manually.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;yarn build&lt;/code&gt; (or &lt;code&gt;npm run build&lt;/code&gt; for &lt;code&gt;npm&lt;/code&gt;) to build Blogue.&lt;/p&gt;

&lt;p&gt;After building, the &lt;code&gt;/dist&lt;/code&gt; directory contains the build assets for your blog (HTML, CSS, JavaScript, etc).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#last-words"&gt;
  &lt;/a&gt;
  Last words
&lt;/h2&gt;

&lt;p&gt;Please star or fork &lt;a href="https://github.com/samzhangjy/Blogue"&gt;Blogue&lt;/a&gt; on GitHub to support me!&lt;/p&gt;

&lt;p&gt;As always, feel free to report issues and open a PR to help the development!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Have you sell anything using Gumroad?</title>
      <author>Madza</author>
      <pubDate>Thu, 07 Oct 2021 08:42:48 +0000</pubDate>
      <link>https://dev.to/madza/have-you-sell-anything-using-gumroad-5e8d</link>
      <guid>https://dev.to/madza/have-you-sell-anything-using-gumroad-5e8d</guid>
      <description>&lt;p&gt;Selling digital products like e-books, courses, videos and graphics can be an awesome source of passive income.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/"&gt;Gumroad&lt;/a&gt; provides a great platform for that and is one of the most popular choices among the developers.&lt;/p&gt;

&lt;p&gt;Have you sold anything with it? Do you make a living of it?&lt;br&gt;
Share your links below! 👇&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>gumroad</category>
    </item>
    <item>
      <title>When was the last time you asked for a raise? </title>
      <author>Madza</author>
      <pubDate>Thu, 07 Oct 2021 08:41:21 +0000</pubDate>
      <link>https://dev.to/madza/when-was-the-last-time-you-asked-for-a-raise-b1o</link>
      <guid>https://dev.to/madza/when-was-the-last-time-you-asked-for-a-raise-b1o</guid>
      <description>&lt;p&gt;Getting a raise keeps you motivated, lifts your self-esteem and adapts your income to all the increasing living costs.&lt;/p&gt;

&lt;p&gt;When was the last time you asked for a raise?&lt;/p&gt;

&lt;p&gt;Also, what arguments do you usually use in the discussion and have you ever switched the jobs due to not getting the raise?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
      <category>finances</category>
    </item>
  </channel>
</rss>
