<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create React App without create-react-app (Typescript)</title>
      <author>Riddhi Agrawal</author>
      <pubDate>Mon, 16 Aug 2021 10:55:14 +0000</pubDate>
      <link>https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-typescript-5ea2</link>
      <guid>https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-typescript-5ea2</guid>
      <description>&lt;p&gt;In my &lt;a href="https://dev.to/riddhiagrawal001/create-react-app-without-create-react-app-2lgd"&gt;previous post&lt;/a&gt; on Create react App from scratch using JS , I got positive responses and many comments on making a post on typescript, hence i decided to do the same task using Typescript with Fast Refresh. Hope you would like this as well! :)&lt;/p&gt;

&lt;p&gt;The simplest way to create a basic react app is to run npx create-react-app my-app --template typescript and boom your basic react app will be created but have you ever wondered, can I do that whole process on my own? Well yes, you can. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-requisites&lt;/strong&gt;: Node js and Vs code. That’s all you need.&lt;/p&gt;

&lt;p&gt;Let’s go..!!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/S5yqNNTQlEZfqQ7InC/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/S5yqNNTQlEZfqQ7InC/giphy.gif" alt="Yeayyy..!!"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-open-your-vs-code-terminal-and-run-the-below-commands"&gt;
  &lt;/a&gt;
  1. Open your vs code terminal and run the below commands:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;By running this command package.json will be formed, which holds important information required before publishing to NPM and defines attributes of a project that is used by npm to install dependencies, run scripts, and identify the entry point of the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React will be needed to create user interfaces whereas React-Dom is a glue between React and browser DOM.&lt;/p&gt;

&lt;p&gt;After running this command, node_modules and package.lock.json will be created. Node modules hold all the dependencies downloaded from npm. Package.lock.json keeps track of the exact version of every package installed and the dependency tree of every package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;typescript&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;types&lt;/span&gt;&lt;span class="sr"&gt;/react @types/&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get the support of typescript the above command is used along with types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;babel&lt;/span&gt;&lt;span class="sr"&gt;/core @babel/&lt;/span&gt;&lt;span class="nx"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;babel&lt;/span&gt;&lt;span class="sr"&gt;/preset-react @babel/&lt;/span&gt;&lt;span class="nx"&gt;preset&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;typescript&lt;/span&gt; &lt;span class="nx"&gt;babel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Babel is a JS Compiler that converts modern JS code into vanilla Js code that can be supported in older browsers and environments. Babel-loader transpile JS files using Babel and webpack. Babel’s preset-typescript is used to generate your JS files and you get the ability to work with existing build pipelines.&lt;/p&gt;

&lt;p&gt;For further reading visit &lt;a href="https://babeljs.io/docs/en/"&gt;https://babeljs.io/docs/en/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2create-a-file-babelrc-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  2.Create a file .babelrc and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;presets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;runtime&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;automatic&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@babel/preset-typescript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is a configuration file for babel whereas presets act as a shareable set of Babel plugins and/or config options.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3create-a-file-tsconfigjson-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  3.Create a file tsconfig.json and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;compilerOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;target&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ES5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ESNext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;moduleResolution&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DOM&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ESNext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noEmit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isolatedModules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;esModuleInterop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;skipLibCheck&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;forceConsistentCasingInFileNames&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;resolveJsonModule&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;include&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/**/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is a configuration file for typescript. The presence of a tsconfig.json file in a directory indicates that the directory is the root of a TypeScript project. The tsconfig.json file specifies the root files and the compiler options required to compile the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cli&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;pmmmwh&lt;/span&gt;&lt;span class="sr"&gt;/react-refresh-webpack-plugin react-refres&lt;/span&gt;&lt;span class="err"&gt;h
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Webpack is a tool that lets you compile JavaScript modules, also known as module bundlers.Given a large number of files, it generates a single file (or a few files) that run your app. Webpack-CLI provides the interface of options webpack uses in its configuration file.React-refresh-webpack-plugin and React-refresh helps in fast Refresh with state retention property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All these are loaders that help in bundling various files along with webpack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4create-a-file-webpackconfigjs-and-copy-the-code-below"&gt;
  &lt;/a&gt;
  4.Create a file webpack.config.js and copy the code below
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;html-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReactRefreshWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pmmmwh/react-refresh-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;devServer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;hot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;web&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bundle.[hash].js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReactRefreshWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node_modules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;ts$|tsx/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-refresh/babel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;css$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;png|svg|jpg|gif$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This config file provides all the required information like an entry point,bundle output filename and path , plugins and various loaders that are being used for webpack to bundle and resolve various kinds of files.&lt;br&gt;
For further reading visit: &lt;a href="https://webpack.js.org/concepts/"&gt;https://webpack.js.org/concepts/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5create-a-folder-src-and-inside-that-create-a-file-apptsx"&gt;
  &lt;/a&gt;
  5.Create a folder “src” and inside that create a file “App.tsx”
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;  &lt;span class="nx"&gt;Counter&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Counter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;Scratch&lt;/span&gt; &lt;span class="nx"&gt;Using&lt;/span&gt; &lt;span class="nx"&gt;Typescript&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;!!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a basic arrow function that returns  Create React App from Scratch Using Typescript wrapped inside an h1 tag along with Counter Component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6create-another-file-countertsx-inside-src-folder"&gt;
  &lt;/a&gt;
  6.Create another file "Counter.tsx " inside “src” folder.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Update&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tsx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;preserved&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component returns a basic button with Counter increasing on every click. This components uses react hook "useState" to store the current value of counter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7create-a-file-indextsx-which-will-be-the-entry-point-of-our-code"&gt;
  &lt;/a&gt;
  7.Create a file “index.tsx” which will be the entry point of our code.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;  &lt;span class="nx"&gt;App&lt;/span&gt;  &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8create-another-file-indexhtml"&gt;
  &lt;/a&gt;
  8.Create another file “index.html”
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;React with Typescript &lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our configuration, we specified that it should read ./src/index.HTML as a template. We have also set the inject option to true. With that option, Html-webpack-plugin adds a script tag with the path provided by Webpack right into the final HTML page. This final page is the one you get in dist/index.html after running npm run build, and the one that gets served from / when you run npm start.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9in-your-packagejson-write-the-following-lines-of-code-in-place-of-the-script-tag"&gt;
  &lt;/a&gt;
  9.In your package.json write the following lines of code in place of the script tag
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack serve  --hot --open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack --config webpack.config.js --mode development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can start your react app by writing npm start and you will see a blank page with Hello React written on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTkXyTJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie38jxccp8n3sjs7rlpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTkXyTJo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ie38jxccp8n3sjs7rlpu.png" alt="Final Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-you-are-done-"&gt;
  &lt;/a&gt;
  Finally you are done ..!!
&lt;/h2&gt;

&lt;p&gt;As Fast Refresh was included, even after doing some changes the state would be preserved and the previous state would not be lost. This comes in very handy during development.&lt;/p&gt;

&lt;p&gt;It was a longer process than creating React app from scratch with Js as Fast Refresh was included  and that’s what create-react-app makes it easier for you. It automates this whole hefty process of making every single file by replacing it with just a single command .&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Some cool JavaScript Shorthand that will make your code cleaner than your peer's</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Mon, 16 Aug 2021 10:35:30 +0000</pubDate>
      <link>https://dev.to/shubhracodes/some-cool-javascript-shorthand-that-will-make-your-code-cleaner-than-your-peer-s-5fh8</link>
      <guid>https://dev.to/shubhracodes/some-cool-javascript-shorthand-that-will-make-your-code-cleaner-than-your-peer-s-5fh8</guid>
      <description>&lt;p&gt;Here are 7 JavaScript shorthands that you as a JavaScript developer should know because who doesn't like shorter and cleaner code ¯_(ツ)_/¯&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#convert-string-to-number"&gt;
  &lt;/a&gt;
  Convert string to number
&lt;/h2&gt;

&lt;p&gt;Normally we use the &lt;code&gt;parseInt()&lt;/code&gt; to do this. But, you can do this using the unary operator &lt;code&gt;+&lt;/code&gt;. Sick right?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pC3M8cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhn4bsi89k0cvqfwbn1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pC3M8cas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhn4bsi89k0cvqfwbn1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also do this by just adding the unary operator to an empty string&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OId0vNe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3b6pui1dzzz6ct4ixp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OId0vNe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr3b6pui1dzzz6ct4ixp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ternary-operator"&gt;
  &lt;/a&gt;
  The ternary operator
&lt;/h2&gt;

&lt;p&gt;I'm pretty sure all of you must be aware about this but what's the harm in sharing it again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vaJLWilY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebwt1x5mfqtm0mfe9izp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaJLWilY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebwt1x5mfqtm0mfe9izp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-short-circuit"&gt;
  &lt;/a&gt;
  The short circuit
&lt;/h2&gt;

&lt;p&gt;Ever wanted to check for a condition and output something only if the condition was true? Were you also using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; like me? Well, not anymore, I present to you the short circuit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DmvtLDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz2cwm82jmng6uospgp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DmvtLDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz2cwm82jmng6uospgp7.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5rNM0M---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdezbqwpmyvhr6tyqrrs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5rNM0M---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdezbqwpmyvhr6tyqrrs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flattening-an-array"&gt;
  &lt;/a&gt;
  Flattening an array
&lt;/h2&gt;

&lt;p&gt;A lot of people use various methods to flatten an array like filter(), concat etc. But using the flat() method can get the job done quicker and better.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zUggbvXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t50dcuxvaiqj0v95wr5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zUggbvXC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t50dcuxvaiqj0v95wr5x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merging-arrays"&gt;
  &lt;/a&gt;
  Merging arrays
&lt;/h2&gt;

&lt;p&gt;Merging of arrays is one of the tasks that we need to do in our day to day coding. Be it the data from an API or whatever. Using the spread operator can get this job done in no time.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XhjXKmnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fweqma08sp5imreecehi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhjXKmnF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fweqma08sp5imreecehi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloning-arrays"&gt;
  &lt;/a&gt;
  Cloning Arrays
&lt;/h2&gt;

&lt;p&gt;Just like merging, spread operator comes in handy even when you want to clone an array&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wjEnRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7g0gcd832a15gm79nm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1wjEnRu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh7g0gcd832a15gm79nm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-shorthand-of-raw-for-endraw-loops"&gt;
  &lt;/a&gt;
  The shorthand of &lt;code&gt;for&lt;/code&gt; loops
&lt;/h2&gt;

&lt;p&gt;We all have been writing for loops the C++ way up until now, but now it's time to do it the modern way. &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1xNXbUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3x3pq8a9oijqes52r44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1xNXbUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3x3pq8a9oijqes52r44.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Convert string to number&lt;/li&gt;
&lt;li&gt;Ternary Operator&lt;/li&gt;
&lt;li&gt;Short Circuit&lt;/li&gt;
&lt;li&gt;Flattening an array&lt;/li&gt;
&lt;li&gt;Merging arrays&lt;/li&gt;
&lt;li&gt;Cloning Arrays&lt;/li&gt;
&lt;li&gt;The shorthand &lt;code&gt;for&lt;/code&gt; loop&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>shorthands</category>
      <category>javascript</category>
    </item>
    <item>
      <title>My Internship </title>
      <author>Cali-Bae</author>
      <pubDate>Mon, 16 Aug 2021 10:32:33 +0000</pubDate>
      <link>https://dev.to/calibae/my-internship-17b</link>
      <guid>https://dev.to/calibae/my-internship-17b</guid>
      <description>&lt;p&gt;Hi, my name is Amarachi Nwachukwu. I just got out of school and I got a smart internship on front end development from Zuri training. I am so excited about this internship especially now I am out of school. I hope to acquire a lot of knowledge from it, meet new people, expand my knowledge of HTML, CSS, JavaScript and all round development. I also hope to be gain knowledge about design, user interface and expectations. &lt;br&gt;
I have also watched some tutorial online in preparation of this internship, I know it is a great opportunity for me and I really thank The Zuri Team for making it possible.&lt;br&gt;
&lt;a href="https://internship.zuri.team"&gt;https://internship.zuri.team&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/dI_CUlVKrFw"&gt;https://youtu.be/dI_CUlVKrFw&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/1MbQaYCCzzI"&gt;https://youtu.be/1MbQaYCCzzI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/W6NZfCO5SIk"&gt;https://youtu.be/W6NZfCO5SIk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Step By Step Guide To Push Your First Project On GitHub</title>
      <author>Code Hunter </author>
      <pubDate>Mon, 16 Aug 2021 10:30:20 +0000</pubDate>
      <link>https://dev.to/codehunterbd/step-by-step-guide-to-push-your-first-project-on-github-3aag</link>
      <guid>https://dev.to/codehunterbd/step-by-step-guide-to-push-your-first-project-on-github-3aag</guid>
      <description>&lt;p&gt;Depending on your situation, or what you are trying to do, there are probably a dozen ways to push your source code for for the first time to GitHub. But I’m these six git commands are the only ones I use.&lt;br&gt;
My situation is a little simpler. I use GitHub just for my personal work. I don’t really collaborate with anyone. I don’t use branches. I work on the master directly. I use Windows. If this is your situation as well, then this post might help you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#set-up-your-environment"&gt;
  &lt;/a&gt;
  Set Up Your Environment
&lt;/h2&gt;

&lt;p&gt;I assume that you have already set up your environment to use the git commands. If not, make sure you do the following first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://git-scm.com/"&gt;Git SCM&lt;/a&gt; on your computer to enable you to use git on the command line.&lt;/li&gt;
&lt;li&gt;Register at GitHub. Then, create an empty repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#the-six-commands"&gt;
  &lt;/a&gt;
  The Six Commands
&lt;/h2&gt;

&lt;p&gt;I run these six commands in this order:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m “your message”
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin https://github.com/username/reponame.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git pull –rebase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-init"&gt;
  &lt;/a&gt;
  git init
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Initializes and prepares your directory for git. Suffice it to say that you need to open a command prompt or PowerShell » CD to your source code directory » type git init and Enter. You can execute git status at any point in time to see where you’re at in the process.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-add-a"&gt;
  &lt;/a&gt;
  git add -A
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Prepares all changes on staging. The -A means all changes are staged including edits, additions, and deletes. I do this because I don’t have to think!&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-commit-m"&gt;
  &lt;/a&gt;
  git commit -m
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Commits all the changes. After commit, you are ready to push to GitHub.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-remote-add-origin"&gt;
  &lt;/a&gt;
  git remote add origin
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Associates your directory with a remote git server and repo. The URL of your repo is that URL that you see when you click the Clone or download button. You can execute git remote -v to verify that your directory has been associated with your remote repo.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-pull-rebase"&gt;
  &lt;/a&gt;
  git pull –rebase
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;This step is somewhat controversial. I only use this because I am pushing directly to a master, so I need to pull from the remote first before pushing. In fact, if I don’t use this, it won’t let me push! According to Atlassian, it’s like saying, “I want to put my changes on top of what everybody else has done.” So, this is perfectly fine for my situation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1&gt;
  &lt;a href="#git-push-f-origin-master"&gt;
  &lt;/a&gt;
  git push -f origin master
&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because I did a pull –rebase, I need to force or use the -f directive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That’s it
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#let-me-know-what-you-think"&gt;
  &lt;/a&gt;
  Let me know what you think!
&lt;/h4&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>vscode</category>
      <category>code</category>
    </item>
    <item>
      <title>Integrating Krisp with Google Meet - Enjoy Hassle-Free Calls with Improved Noise Cancellation
</title>
      <author>Bala Priya C </author>
      <pubDate>Mon, 16 Aug 2021 10:22:01 +0000</pubDate>
      <link>https://dev.to/balapriya/integrating-krisp-with-google-meet-enjoy-hassle-free-calls-with-improved-noise-cancellation-34fj</link>
      <guid>https://dev.to/balapriya/integrating-krisp-with-google-meet-enjoy-hassle-free-calls-with-improved-noise-cancellation-34fj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The pandemic has certainly brought about a paradigm shift to virtual. It has been over a year of video conferencing - from classes in schools and grad schools going online to remote work bringing in the need for several sync calls in a day. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the major challenges of using conferencing apps, such as Google Meet and Zoom is the inevitable background noise from various sources during the call, which often can come in the way of effectively listening and taking part in discussions, especially more impactful in a call with a large audience.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Over the next few minutes, let’s see how we can possibly mitigate the effect of noise by integrating Krisp, an AI-powered app that removes background noise and echos making meeting experiences much more pleasant, with Google Meet, widely used for conferencing  in academia. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please note that if you already have a subscription to an enterprise G-Suite workspace, you may want to try out the built-in noise cancellation feature that you have access to, and use Krisp for overhauling existing performance.&lt;/p&gt;

&lt;p&gt;Kindly read ahead and find the steps to install Krisp and integrate it with Google Meet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-install-krisp-and-integrate-with-google-meet"&gt;
  &lt;/a&gt;
  Steps to install Krisp and integrate with Google Meet
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Visit krisp.ai to download your Krisp client. You’d be prompted to sign up for a free account. Yes, it’s completely free; You don’t have to provide your card details.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JCg4DJQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en2pc0t77qizzs50fsiz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JCg4DJQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/en2pc0t77qizzs50fsiz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; You may download the client for the Operating System that you use. This tutorial would focus on Windows OS.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RCGKAsX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10gp63525uur11yxkzax.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RCGKAsX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10gp63525uur11yxkzax.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; When you click on the Install on Windows option, you'll see this screen which has the next steps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qVSkjwny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poumvvccn2j9dy6g6e91.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qVSkjwny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poumvvccn2j9dy6g6e91.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; When you click on the Install on Windows option, you'll see this screen which has the next steps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGvJfeFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqjp7yo1l1vnwlu2aboe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGvJfeFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eqjp7yo1l1vnwlu2aboe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; The setup process takes a few minutes to complete.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbyTp_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a66ub65f8v2qvlqpy016.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbyTp_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a66ub65f8v2qvlqpy016.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Once the setup is complete, you should be able to launch Krisp client to check if it works for background noise cancellation on your device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MmA_7fKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/997d5d3p7t8qhce6s3fn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmA_7fKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/997d5d3p7t8qhce6s3fn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; So far so good? The next step is to launch Google Meet and choose &lt;code&gt;krisp microphone (Virtual)&lt;/code&gt; and &lt;code&gt;krisp speaker (Virtual)&lt;/code&gt; as the devices of choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; When you join a call, please be sure to toggle the Mute Noise option for both your speaker and microphone to enable noise cancellation. And yes,noise cancellation has been successfully enabled.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N2ZU4QVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q15fgxhshtunaxmgp7o2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N2ZU4QVz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q15fgxhshtunaxmgp7o2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That said, maybe it’s time to get Krisp up and running on your system as well?&lt;/p&gt;

</description>
      <category>tutorial</category>
    </item>
    <item>
      <title>Practical Introduction to CSS Grid</title>
      <author>Albert Chang</author>
      <pubDate>Mon, 16 Aug 2021 10:09:51 +0000</pubDate>
      <link>https://dev.to/a89529294/practical-introduction-to-css-grid-22go</link>
      <guid>https://dev.to/a89529294/practical-introduction-to-css-grid-22go</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-css-grid"&gt;
  &lt;/a&gt;
  What is CSS Grid
&lt;/h3&gt;

&lt;p&gt;A two dimensional system made up of rows and columns that helps you position your html elements.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-enable-and-use-css-grid"&gt;
  &lt;/a&gt;
  How to enable and use CSS Grid
&lt;/h3&gt;

&lt;p&gt;On any element, declare &lt;code&gt;display:grid ;&lt;/code&gt;&lt;br&gt;
Every item that is added to that element will by default occupy a row.&lt;br&gt;
So if I add five divs to the grid, you will see five rows created and occupied by the divs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-modify-default-behaviour-of-the-grid-container-element"&gt;
  &lt;/a&gt;
  How to modify default behaviour of the grid container element
&lt;/h3&gt;

&lt;p&gt;If you want to create a 3x2 (3 rows x 2 columns) grid then this is what you need to declare on the grid element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;display:grid;
grid-template-rows: 1fr 1fr 1fr;
grid-template-columns: 1fr 1fr;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: There are many other units you can use here in place of fr, like px, %, and many more. Fr units means the remaining space so in this example all the rows have the same height and all the columns have the same width.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-the-items-position-themselves-in-a-grid-container"&gt;
  &lt;/a&gt;
  How the items position themselves in a grid container
&lt;/h3&gt;

&lt;p&gt;By default, items flow from left to right, top to bottom. So continuing last section's example, the 1st item will occupy the top left cell, the 2nd item will occupy the top center cell and so on, until the first row is filled up. Then the items will move down to the next row. &lt;br&gt;
Note: This is the default behaviour which can be changed by specifying &lt;code&gt;grid-auto-flow: column&lt;/code&gt;, then the items will flow from top to bottom then left to right.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-position-a-specific-element-into-a-certain-cell"&gt;
  &lt;/a&gt;
  How to position a specific element into a certain cell
&lt;/h3&gt;

&lt;p&gt;Say we have a 3x3 grid. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8NvYX35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9v7imr256vylvlur4b2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8NvYX35--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9v7imr256vylvlur4b2.png" alt="grid_lines"&gt;&lt;/a&gt;&lt;br&gt;
If we want to position an element with class &lt;code&gt;item&lt;/code&gt; into the center cell we have to declare&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.item {
  grid-area: 2/2/3/3;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;grid-area: row-start/ col-start/ row-end/ col-end;&lt;br&gt;
Here the row-start etc, refer to the lines.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#there-are-many-different-ways-to-define-a-grid-and-to-position-items-on-a-grid-this-only-serves-as-a-very-basic-starting-point-so-you-can-start-using-grids-in-your-projects"&gt;
  &lt;/a&gt;
  There are many different ways to define a grid and to position items on a grid. This only serves as a very basic starting point so you can start using grids in your projects.
&lt;/h6&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>backdrop-filter: blur / header sticky</title>
      <author>Asagiri</author>
      <pubDate>Mon, 16 Aug 2021 10:09:16 +0000</pubDate>
      <link>https://dev.to/asagiri/backdrop-filter-blur-header-sticky-1120</link>
      <guid>https://dev.to/asagiri/backdrop-filter-blur-header-sticky-1120</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pistol/embed/abWxgqz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Maths Game (Made for Mathnasium [mathnasium.com)</title>
      <author>FRADAR</author>
      <pubDate>Mon, 16 Aug 2021 09:52:01 +0000</pubDate>
      <link>https://dev.to/fradar/maths-game-made-for-mathnasium-mathnasium-com-39e9</link>
      <guid>https://dev.to/fradar/maths-game-made-for-mathnasium-mathnasium-com-39e9</guid>
      <description>&lt;p&gt;Just another small maths game that I made for a tuition.&lt;/p&gt;

&lt;p&gt;Comment your scores to be on the leaderboard!&lt;/p&gt;

&lt;p&gt;Check out the leaderboard!:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/QWvPXwQ"&gt;https://codepen.io/FRADAR/full/QWvPXwQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Play the game here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/WNjLQON"&gt;https://codepen.io/FRADAR/full/WNjLQON&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like my games?&lt;br&gt;
Follow me:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until next time, folks!&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>maths</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Check out my portfolio!</title>
      <author>Siddharth</author>
      <pubDate>Mon, 16 Aug 2021 09:47:24 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/check-out-my-portfolio-4oi</link>
      <guid>https://dev.to/siddharthshyniben/check-out-my-portfolio-4oi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;It's &lt;a href="https://siddharthshyniben.github.io/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like it? Bugs? Tell me in the comments!&lt;/p&gt;

&lt;p&gt;There's also a bunch of easter eggs :D&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#portfolio"&gt;
  &lt;/a&gt;
  Portfolio!
&lt;/h3&gt;

&lt;p&gt;I just built a &lt;a href="https://siddharthshyniben.github.io/"&gt;portfolio&lt;/a&gt;. It's pretty empty (I haven't built anything big yet), but I think it's a great design, especially for me who is bad at CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UnvpR2i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg1zt3qa2fqq45w7s2xo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnvpR2i2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg1zt3qa2fqq45w7s2xo.png" alt="Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try &lt;code&gt;cd&lt;/code&gt;ing around, &lt;code&gt;ch&lt;/code&gt;anging the &lt;code&gt;root&lt;/code&gt;, maybe &lt;code&gt;shred&lt;/code&gt; a few files, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;fortune&lt;/code&gt;, &lt;code&gt;lolcat&lt;/code&gt; and more. &lt;code&gt;cat help.txt&lt;/code&gt; for some help. Also try &lt;code&gt;vim&lt;/code&gt; or &lt;code&gt;nano&lt;/code&gt; or &lt;code&gt;emacs&lt;/code&gt; or &lt;code&gt;ed&lt;/code&gt; or more...&lt;/p&gt;

&lt;p&gt;There's also multiline prompt: Try typing &lt;code&gt;cat help &amp;amp;&amp;amp;&lt;/code&gt; and hitting enter.&lt;/p&gt;

&lt;p&gt;There's also a bunch of easter eggs (5 to be exact). Let me see how many you can find!&lt;/p&gt;

&lt;p&gt;There's also a text version. Just click the link at the bottom left.&lt;/p&gt;

&lt;p&gt;Like it? Comment down below :D&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Implementing Domain Driven Design: Part IV</title>
      <author>Salah Elhossiny</author>
      <pubDate>Mon, 16 Aug 2021 09:27:44 +0000</pubDate>
      <link>https://dev.to/salah856/implementing-domain-driven-design-part-iv-29m2</link>
      <guid>https://dev.to/salah856/implementing-domain-driven-design-part-iv-29m2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#object-to-object-mapping"&gt;
  &lt;/a&gt;
  Object to Object Mapping
&lt;/h1&gt;

&lt;p&gt;Automatic object to object mapping is a useful approach to copy values from one object to another when two objects have same or similar properties.&lt;/p&gt;

&lt;p&gt;DTO and Entity classes generally have same/similar properties and you typically need to create DTO objects from Entities.&lt;/p&gt;

&lt;p&gt;ABP's object to object mapping system with AutoMapper integration makes these operations much easier comparing to manual mapping.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use auto object mapping only for Entity to output DTO mappings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not use auto object mapping for input DTO to Entity mappings.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some reasons why you should not use input DTO to Entity auto mapping;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An Entity class typically has a constructor that takes parameters and ensures valid object creation. Auto object mapping operation generally requires an empty constructor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most of the entity properties will have private setters and you should use methods to change these properties in a controlled way.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You typically need to carefully validate and process the user/client input rather than blindly mapping to the entity properties.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#example-use-cases"&gt;
  &lt;/a&gt;
  Example Use Cases
&lt;/h2&gt;

&lt;p&gt;This section will demonstrate some example use cases and discuss alternative scenarios.&lt;/p&gt;

&lt;p&gt;Entity Creation&lt;/p&gt;

&lt;p&gt;Creating an object from an Entity / Aggregate Root class is the ﬁrst step of the lifecycle of that entity. &lt;/p&gt;

&lt;p&gt;The Aggregate / Aggregate Root Rules &amp;amp; Best Practices section suggests to create a primary constructor for the Entity class that guarantees to create a valid entity. &lt;/p&gt;

&lt;p&gt;So, whenever we need to create an instance of that entity, we should always use that constructor.&lt;/p&gt;

&lt;p&gt;See the Issue Aggregate Root class below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0vTmFkeb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9eii5qan5n2spx0eu8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0vTmFkeb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9eii5qan5n2spx0eu8r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see an Application Service method that is used to create an issue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thCU2GRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x77ae1u3vb7nybhst0vh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thCU2GRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x77ae1u3vb7nybhst0vh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CreateAsync method;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Uses the Issue constructor to create a valid issue. It passes the Id using the IGuidGenerator service. It doesn't use auto object mapping here.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the client wants to assign this issue to a user on object creation, it uses the IssueManager to do it by allowing the IssueManager to perform the necessary checks before this assignment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Saves the entity to the database&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally uses the IObjectMapper to return an IssueDto that is automatically created by mapping from the new Issue entity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#applying-domain-rules-on-entity-creation"&gt;
  &lt;/a&gt;
  Applying Domain Rules on Entity Creation
&lt;/h2&gt;

&lt;p&gt;The example Issue entity has no business rule on entity creation, except some formal validations in the constructor. &lt;/p&gt;

&lt;p&gt;However, there maybe scenarios where entity creation should check some extra business rules.&lt;/p&gt;

&lt;p&gt;For example, assume that you don't want to allow to create an issue if there is already an issue with exactly the same Title.&lt;/p&gt;

&lt;p&gt;Where to implement this rule? It is not proper to implement this rule in the Application Service, because it is a core business (domain) rule that should always be checked.&lt;/p&gt;

&lt;p&gt;This rule should be implemented in a Domain Service, IssueManager in this case. &lt;/p&gt;

&lt;p&gt;So, we need to force the Application Layer always to use the IssueManager to create a new Issue.&lt;/p&gt;

&lt;p&gt;First, we can make the Issue constructor internal, instead of public:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5Kzci_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irf8wxagqczajoz0l66x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5Kzci_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irf8wxagqczajoz0l66x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This prevents Application Services to directly use the&lt;br&gt;
constructor, so they will use the IssueManager. &lt;/p&gt;

&lt;p&gt;Then we can add a CreateAsync method to the IssueManager:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0qanMmGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79dfs24v2t3h7aupbet2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0qanMmGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/79dfs24v2t3h7aupbet2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CreateAsync method checks if there is already an issue with the same title and throws a business exception in this case.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is no duplication, it creates and returns a new Issue.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The IssueAppService is changed as shown below in order to use the IssueManager's CreateAsync method:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g7CbPeoH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gciqlf34kyge6n2dpnv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7CbPeoH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gciqlf34kyge6n2dpnv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#updating-manipulating-an-entity"&gt;
  &lt;/a&gt;
  Updating / Manipulating An Entity
&lt;/h2&gt;

&lt;p&gt;Once an entity is created, it is updated/manipulated by the use cases until it is deleted from the system. &lt;/p&gt;

&lt;p&gt;There can be different types of the use cases directly or indirectly changes an entity.&lt;/p&gt;

&lt;p&gt;In this section, we will discuss a typical update operation that changes multiple properties of an Issue.&lt;/p&gt;

&lt;p&gt;This time, beginning from the Update DTO:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5lP07Mli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ee1o2pg23gq5trqro8or.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5lP07Mli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ee1o2pg23gq5trqro8or.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By comparing to IssueCreationDto, you see no RepositoryId.&lt;/p&gt;

&lt;p&gt;Because, our system doesn't allow to move issues across repositories (think as GitHub repositories). &lt;/p&gt;

&lt;p&gt;Only Title is required and the other properties are optional.&lt;/p&gt;

&lt;p&gt;Let's see the Update implementation in the IssueAppService:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kxbcbiM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4stiw17nd9aqan12znn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxbcbiM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4stiw17nd9aqan12znn8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#domain-logic-amp-application-logic"&gt;
  &lt;/a&gt;
  Domain Logic &amp;amp; Application Logic
&lt;/h3&gt;

&lt;p&gt;Business Logic in the Domain Driven Design is split into two parts (layers): Domain Logic and Application Logic:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g0pu7qfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz3ry9thetuxqr5bqwwp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0pu7qfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz3ry9thetuxqr5bqwwp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Domain Logic consists of the Core Domain Rules of the system while Application Logic implements application speciﬁc Use Cases.&lt;/p&gt;

&lt;p&gt;While the deﬁnition is clear, the implementation may not be&lt;br&gt;
easy. You may be undecided which code should stand in the&lt;br&gt;
Application Layer, which code should be in the Domain Layer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#multiple-application-layers"&gt;
  &lt;/a&gt;
  Multiple Application Layers
&lt;/h4&gt;

&lt;p&gt;DDD helps to deal with complexity when your system is large. Especially, if there are multiple applications are being developed in a single domain, then the Domain Logic vs Application Logic separation becomes much more important.&lt;/p&gt;

&lt;p&gt;Assume that you are building a system that has multiple&lt;br&gt;
applications;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A Public Web Site Application, built with ASP.NET Core MVC, to show your products to users. Such a web site doesn't require authentication to see the products. The users login to the web site, only if they are performing some actions (like adding a product to the basket).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A Back Ofﬁce Application, built with Angular UI (that uses REST APIs). This application used by ofﬁce workers of the company to manage the system (like editing product descriptions).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A Mobile Application that has much simpler UI compared to the Public Web Site. It may communicate to the server via REST APIs or another technology (like TCP sockets).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---XdQbYaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2ejb7acnwr0b2g06v5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---XdQbYaO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2ejb7acnwr0b2g06v5z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every application will have different requirements, different use cases (Application Service methods), different DTOs, different validation and authorization rules... etc.&lt;/p&gt;

&lt;p&gt;Mixing all these logics into a single application layer makes your services contain too many if conditions with complicated&lt;br&gt;
business logic makes your code harder to develop, maintain and test and leads to potential bugs.&lt;/p&gt;

&lt;p&gt;If you've multiple applications with a single domain;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create separate application layers for each application/client type and implement application speciﬁc business logic in these separate layers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use a single domain layer to share the core domain logic.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Such a design makes it even more important to distinguish between Domain logic and Application Logic.&lt;/p&gt;

&lt;p&gt;To be more clear about the implementation, you can create different projects (.csproj) for each application types. For example: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IssueTracker.Admin.Application IssueTracker.Admin.Application.Contracts projects for the Back Ofﬁce (admin) Application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IssueTracker.Public.Application &amp;amp;&lt;br&gt;
IssueTracker.Public.Application.Contracts projects for the Public Web Application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IssueTracker.Mobile.Application &amp;amp; IssueTracker.Mobile.Application.Contracts projects for the&lt;br&gt;
Mobile Application&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Creating a new Organization in a Domain Service&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r1dceGxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgahgbt9zb6v6nfwilbm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1dceGxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgahgbt9zb6v6nfwilbm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see the CreateAsync method step by step to discuss if the code part should be in the Domain Service, or not: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CORRECT: It ﬁrst checks for duplicate organization name and and throws exception in this case. This is something related to core domain rule and we never allow duplicated names.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WRONG: Domain Services should not perform authorization. Authorization should be done in the Application Layer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WRONG: It logs a message with including the Current User's UserName. Domain service should not be depend on the Current User. Domain Services should be usable even if there is no user in the system. Current User (Session) should be a Presentation/Application Layer related concept.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WRONG: It sends an email about this new organization creation. We think this is also a use case speciﬁc business logic. You may want to create different type of emails in different use cases or don't need to send emails in some cases.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: Creating a new Organization in an Application Service&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VBBaD2ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsipjmpzvslb61ze2ho3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VBBaD2ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qsipjmpzvslb61ze2ho3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see the CreateAsync method step by step to discuss if the code part should be in the Application Service, or not: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CORRECT: Application Service methods should be unit of work (transactional). ABP's Unit Of Work system makes this automatic (even without need to add [UnitOfWork] attribute for the Application Services).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CORRECT: Authorization should be done in the application layer. Here, it is done by using the [Authorize] attribute.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CORRECT: Payment (an infrastructure service) is called to charge money for this operation (Creating an Organization is a paid service in our business).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CORRECT: Application Service method is responsible to save changes to the database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CORRECT: We can send email as a notiﬁcation to the system admin.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WRONG: Do not return entities from the Application Services. Return a DTO instead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example: CRUD Operations&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zl2X0fiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/643xq3xbm2pgzaicwcd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zl2X0fiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/643xq3xbm2pgzaicwcd7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Application Service does nothing itself and delegates all the work to the Domain Service. It even passes the DTOs to the IssueManager.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Do not create Domain Service methods just for simple CRUD operations without any domain logic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Never pass DTOs to or return DTOs from the Domain Services.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Application Services can directly work with repositories to query, create, update or delete data unless there are some domain logics should be performed during these operations. &lt;/p&gt;

&lt;p&gt;In such cases, create Domain Service methods, but only for those really necessary.&lt;/p&gt;

&lt;p&gt;Congratulations, thank you for reading all the series parts. &lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>Five Common Cloud Security Threats and Data Breaches</title>
      <author>Andreas Dann</author>
      <pubDate>Mon, 16 Aug 2021 09:01:39 +0000</pubDate>
      <link>https://dev.to/aws-builders/five-common-cloud-security-threats-and-data-breaches-6n6</link>
      <guid>https://dev.to/aws-builders/five-common-cloud-security-threats-and-data-breaches-6n6</guid>
      <description>&lt;p&gt;In November 2020, an outage of Amazon Web Services (AWS) in the us-east-1 region rendered Roomba vacuum cleaners, Ring doorbells, and even Christmas lights dysfunctional for thousands of people in the US. &lt;br&gt;
For one full day, popular websites like Flickr, Adobe, and the Washington Post were unreachable.&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;It didn't take long for people to tweet about the issue :)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My f---ing doorbell doesn't work because AWS us-east-1 is having issues&lt;/p&gt;

&lt;p&gt;I... can't vacuum... because us-east-1 is down&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While this incident might seem funny at first, it is also a true testament of how extremely dependent we are on cloud computing nowadays.&lt;br&gt;
In fact, within the last 15 years, cloud computing has become a must-have for almost every company developing or using software.&lt;br&gt;&lt;br&gt;
As an increasing number of organizations rely on cloud services or even start shifting to go full cloud-native, cloud security has become a hot topic in the security community.&lt;br&gt;
Unfortunately, the amount of cyberattacks targeting cloud systems has also increased.&lt;/p&gt;

&lt;p&gt;To raise awareness of the threats that lurk in the cloud world, we present in the following &lt;strong&gt;five common security threats in the cloud&lt;/strong&gt; and illustrate their risks with real-world examples.&lt;br&gt;
The five identified threats are based on the Cloud Security Alliance Report &lt;em&gt;Top Threats to Cloud Computing - The Egregious 11&lt;/em&gt;&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;, the OWASP &lt;em&gt;Serverless Top 10&lt;/em&gt;&lt;sup id="fnref3"&gt;&lt;a href="#fn3"&gt;3&lt;/a&gt;&lt;/sup&gt;, and the Cloud Native Computing Foundation &lt;em&gt;Security Whitepaper&lt;/em&gt;&lt;sup id="fnref4"&gt;&lt;a href="#fn4"&gt;4&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#cloudsecuritymisconfigurations"&gt;Cloud-(Security)-Misconfigurations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overpermissioned-cloud-resources"&gt;Over-Permissioned Cloud Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#insufficient-credential-management"&gt;Insufficient Credential Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#insecure-apis"&gt;Insecure APIs &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-components-with-known-vulnerabilities"&gt;Using Components with Known Vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#references-and-material"&gt;References and Material&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cloudsecuritymisconfigurations"&gt;
  &lt;/a&gt;
  Cloud-(Security)-Misconfigurations
&lt;/h2&gt;

&lt;p&gt;A leading cause of data breaches are cloud (security) misconfigurations, enabling data breaches, or the corruption of company networks.&lt;br&gt;
Cloud resources like micro-services, object and database storage solutions, or networking components are the subject of such misconfiguration.&lt;br&gt;
Typical examples of misconfigurations are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;unencrypted data storage or containers&lt;/li&gt;
&lt;li&gt;publicly accessible data storage&lt;/li&gt;
&lt;li&gt;open SSH or database ports&lt;/li&gt;
&lt;li&gt;using default credentials&lt;/li&gt;
&lt;li&gt;too open firewall and security group settings&lt;/li&gt;
&lt;li&gt;deactivated security controls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Such issues are a concern in cloud environments as in any other architecture. &lt;br&gt;
Nevertheless, the fast pace at which cloud infrastructure regularly changes, makes it difficult to find and control these issues.&lt;br&gt;
Whereas in traditional applications changes in the infrastructure and assets involved multiple roles and approvals to reach production, the cloud infrastructure is much more flexible and dynamic.&lt;br&gt;
Modern technologies and tools for provisioning, maintaining, and changing an infrastructure like Infrastructure-as-Code enable rapid changes in the infrastructure.&lt;/p&gt;

&lt;p&gt;The use of multiple cloud providers and the combination of private and public clouds, surely does not make tracking down misconfigurations easy.&lt;/p&gt;

&lt;p&gt;Since misconfigurations are easy to make but difficult to spot in complex cloud environments, they are the root cause of several recent and massive data breaches.&lt;br&gt;
In the following, we can only present a small subset of data breaches showing the impact of misconfigurations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In 2018, an unsecured Elasticsearch database of the marketing company Exactis exposed nearly 340 million individual records containing personal information of American adults as well as millions of businesses.&lt;br&gt;
The database server was erroneously configured to be publicly accessible. &lt;sup id="fnref5"&gt;&lt;a href="#fn5"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In 2019, the personal information of thousands of hotel guests including members of the US government and military was publicly exposed due to an open Elasticsearch database of AutClerk, which is a combined reservations system for hotels, accommodation providers, travel agencies.&lt;br&gt;
&lt;sup id="fnref6"&gt;&lt;a href="#fn6"&gt;6&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In 2020, the personal and payment information of 7 million users of the mobile payment app Bharat Interface Money (BHIM) was exposed.&lt;br&gt;
The breach was caused by a misconfigured AWS S3 bucket.  In fact, user data was stored unencrypted on a &lt;strong&gt;publicly&lt;/strong&gt; accessible S3 bucket, making it vulnerable to misuse for frauds and theft. &lt;sup id="fnref7"&gt;&lt;a href="#fn7"&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In 2020, the companies Advantage Capital Funding and Argus Capital Funding didn’t set up encryption, authentication, or access credentials for their database, which contained highly sensitive financial and personal data.&lt;br&gt;
As a result, almost half a million gigabytes of confidential legal and financial documents were leaked.&lt;sup id="fnref8"&gt;&lt;a href="#fn8"&gt;8&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#overpermissioned-cloud-resources"&gt;
  &lt;/a&gt;
  Over-Permissioned Cloud Resources
&lt;/h2&gt;

&lt;p&gt;Even a simple cloud-native application can consist of dozens or hundreds of micro-services.&lt;br&gt;
Each reading, writing, and updating different databases, object storages, data streams, and APIs.&lt;br&gt;
A secure orchestration of the micro-services and assets requires a careful access control configuration for each of the resources, which is tedious. &lt;br&gt;
However, attackers target over-permissioned cloud resources to escalate their privileges and to gain unauthorized access to other resources in the account rather than having control over these resources directly.&lt;br&gt;
Unnecessary cloud resources or excessive permissions on resources are a potential backdoor that can lead to data leakage from not only the over-permissioned resources themselves but also from their related resources. &lt;br&gt;
And, in the worst-case, may even give an attacker full control over cloud resources or the whole account.&lt;/p&gt;

&lt;p&gt;An example in which an over-permissioned cloud resource caused a massive data breach is the Capital One hack.&lt;br&gt;
In 2019, an attacker gained access to 80,000 account numbers, 140,000 Social Security numbers, 1 million Canadian Social Insurance Numbers by abusing an over-permissioned web application firewall (WAF).&lt;/p&gt;

&lt;p&gt;By abusing the over-permissioned WAF the attacker could craft a Server-Side-Request Forgery (SSRF) attack to steal the data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--suEcclyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjj0wc8ls6456dp8ikrf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suEcclyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjj0wc8ls6456dp8ikrf.png" alt="Capital One Hack based on MIT Report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The attack involved multiple steps visualized in the figure and described in a report of the MIT &lt;sup id="fnref9"&gt;&lt;a href="#fn9"&gt;9&lt;/a&gt;&lt;/sup&gt;, which we cite here: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The FBI and Capital One identified several accesses through anonymizing services such as TOR Network and VPN service provider IPredator, both used to hide the source IP address of the malicious accesses; 

&lt;ol&gt;
&lt;li&gt;The SSRF attack allowed the criminal to trick the server into executing commands as a remote user, which gave the attacker access to a private server.&lt;/li&gt;
&lt;li&gt;The WAF misconfiguration allowed the intruder to trick the firewall into relaying commands to a default back-end resource on the AWS platform, known as the metadata service with temporary credentials for such environment (accessed through the URL &lt;a href="http://169.254.169.254"&gt;http://169.254.169.254&lt;/a&gt;); &lt;/li&gt;
&lt;li&gt;By combining the SSRF attack and the WAF misconfiguration, the attacker used the URL “&lt;a href="http://169.254.169.254/iam/security-credentials%E2%80%9D"&gt;http://169.254.169.254/iam/security-credentials”&lt;/a&gt; to obtain the AccessKeyId and SecretAccessKey credentials from a role described in the FBI indictment as “*****-WAF-Role” (name was partially redacted). The resulting temporary credentials allowed the criminal to run commands in AWS environment via API, CLI or SDK; &lt;/li&gt;
&lt;li&gt;By using the credentials, the attacker ran the “ls” command7 multiple times, which returned a complete list of all AWS S3 Buckets of the compromised Capital One account ("$ aws s3 ls"); &lt;/li&gt;
&lt;li&gt;Lastly, the attacker used the AWS “sync” command8 to copy nearly 30 GB of Capital One credit application data from these buckets to the local machine of the attacker ("$ aws s3 sync s3://bucketone."). This command gave the attacker access to more than 700 buckets, according to the FBI report.&lt;sup id="fnref9"&gt;&lt;a href="#fn9"&gt;9&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#insufficient-credential-management"&gt;
  &lt;/a&gt;
  Insufficient Credential Management
&lt;/h2&gt;

&lt;p&gt;One of the biggest threats to cloud security is human error when handling credentials or sensitive information.&lt;br&gt;
Sensitive data like secrets, access tokens, and passwords can be accidentally uploaded to a Git repo, put on a public bucket, or even hardcoded in application code.&lt;br&gt;
Since cloud systems are often globally and publicly available, stolen credentials can be easily abused by attackers.&lt;br&gt;
Typical examples are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Insufficient protection of credentials, like encryption&lt;/li&gt;
&lt;li&gt;Use of weak passwords&lt;/li&gt;
&lt;li&gt;No automatic rotation of keys, passwords, and certificates&lt;/li&gt;
&lt;li&gt;No use of multi-factor authentication&lt;/li&gt;
&lt;li&gt;Storing credentials in Version Control Systems, Source-Code, or Environment Variables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In 2014, attackers scraped public GitHub repositories for cloud service credentials and hijacked accounts to mine cryptocurrency at other people's expense.&lt;br&gt;
The attackers were able to discover and misuse the cloud service provider credentials within 36 hours of the credentials being pushed to GitHub accidentally.&lt;sup id="fnref10"&gt;&lt;a href="#fn10"&gt;10&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#insecure-apis"&gt;
  &lt;/a&gt;
  Insecure APIs
&lt;/h2&gt;

&lt;p&gt;Almost every cloud application exposes its services in the form of APIs or UIs.&lt;br&gt;
Since they act as the &lt;em&gt;front door&lt;/em&gt; of the system, they are attacked and scanned continuously.&lt;br&gt;
Thus, the API of each system must follow established security guidelines and all APIs must be protected by adequate means of authentication and authorization.&lt;/p&gt;

&lt;p&gt;In 2018, Facebook experienced a breach that affected more than 50 million accounts that was the result of a credential theft vulnerability introduced as a feature back in 2017.&lt;br&gt;
Facebook admitted that it didn’t know what information was stolen, nor how many user accounts were compromised.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-components-with-known-vulnerabilities"&gt;
  &lt;/a&gt;
  Using Components with Known Vulnerabilities
&lt;/h2&gt;

&lt;p&gt;This threat is neither bound to cloud applications nor cloud environments, but a general threat every application developer and security expert should be aware of.&lt;br&gt;
Nowadays, applications are not re-written from scratch but contain a sustainable amount of third-party/open-source libraries and frameworks to execute the desired tasks.&lt;br&gt;
Even for commercial applications easily as much as 75% of the code comes from open-source libraries and frameworks.&lt;sup id="fnref11"&gt;&lt;a href="#fn11"&gt;11&lt;/a&gt;&lt;/sup&gt;&lt;br&gt;
Vulnerabilities in the used (open-source) components are a common risk these days and attackers will target applications that make use of vulnerabilities in included open-source components, &lt;br&gt;
as they are easy to exploit - often even publicly accessible exploits exist.&lt;/p&gt;

&lt;p&gt;An (in)famous example, which shows the impact of vulnerable libraries, is the data breach of the largest consumer credit reporting agency Equifax in 2017 &lt;sup id="fnref12"&gt;&lt;a href="#fn12"&gt;12&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref13"&gt;&lt;a href="#fn13"&gt;13&lt;/a&gt;&lt;/sup&gt;. &lt;br&gt;
Attackers exploited a vulnerability (CVE-2017-5638) in the open-source framework Apache Struts2 - which had already been patched but which Equifax had not updated on their server, to gain access to the corporate network.&lt;br&gt;
The attackers pulled personal data including Social Security numbers, birth dates, and residential addresses of an estimated 152 million American, 44 million British, and 8000 Canadian residents.&lt;br&gt;
In the end, the data breach cost Equifax more than 1.7 billion US dollar and Equifax's Chief Security Officer (CSO) and Chief Information Officer (CIO) resigned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-material"&gt;
  &lt;/a&gt;
  References and Material
&lt;/h2&gt;

&lt;p&gt;concerns-in-2021/&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;&lt;a href="https://www.dailymail.co.uk/sciencetech/article-8994907/Widespread-Amazon-cloud-service-outage-disables-Roombas-Ring-doorbells-Christmas-lights.html"&gt;https://www.dailymail.co.uk/sciencetech/article-8994907/Widespread-Amazon-cloud-service-outage-disables-Roombas-Ring-doorbells-Christmas-lights.html&lt;/a&gt; &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;Cloud Security Alliance (CSA), Report 2020, Top Threats to Cloud Computing - The Egregious 11 &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;&lt;a href="https://owasp.org/www-project-serverless-top-10/"&gt;https://owasp.org/www-project-serverless-top-10/&lt;/a&gt;) &lt;a href="#fnref3"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;Cloud Native Computing Foundation (CNCF), Report 2020, Security Whitepaper &lt;a href="#fnref4"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn5"&gt;
&lt;p&gt;&lt;a href="https://www.wired.com/story/exactis-database-leak-340-million-records/"&gt;https://www.wired.com/story/exactis-database-leak-340-million-records/&lt;/a&gt; &lt;a href="#fnref5"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn6"&gt;
&lt;p&gt;&lt;a href="https://www.itpro.co.uk/security/34671/us-military-data-exposed-in-179gb-autoclerk-leak"&gt;https://www.itpro.co.uk/security/34671/us-military-data-exposed-in-179gb-autoclerk-leak&lt;/a&gt; &lt;a href="#fnref6"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn7"&gt;
&lt;p&gt;&lt;a href="https://www.newindianexpress.com/nation/2020/jun/01/hackers-claim-to-have-found-vulnerability-in-bhim-app-npci-denies-data-compromise-2150840.html"&gt;https://www.newindianexpress.com/nation/2020/jun/01/hackers-claim-to-have-found-vulnerability-in-bhim-app-npci-denies-data-compromise-2150840.html&lt;/a&gt; &lt;a href="#fnref7"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn8"&gt;
&lt;p&gt;&lt;a href="https://www.zdnet.com/article/financial-apps-leak-425gb-in-company-data-through-open-database/"&gt;https://www.zdnet.com/article/financial-apps-leak-425gb-in-company-data-through-open-database/&lt;/a&gt; &lt;a href="#fnref8"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn9"&gt;
&lt;p&gt;MIT, A Case Study of the Capital One Data Breach, &lt;a href="http://web.mit.edu/smadnick/www/wp/2020-16.pdf"&gt;http://web.mit.edu/smadnick/www/wp/2020-16.pdf&lt;/a&gt; &lt;a href="#fnref9"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn10"&gt;
&lt;p&gt;&lt;a href="https://www.forbes.com/sites/runasandvik/2014/01/14/attackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency/"&gt;https://www.forbes.com/sites/runasandvik/2014/01/14/attackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency/&lt;/a&gt; &lt;a href="#fnref10"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn11"&gt;
&lt;p&gt;L. Heinemann et al. “On the extent and nature of software reuse in open source java projects" &lt;a href="#fnref11"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn12"&gt;
&lt;p&gt;&lt;a href="https://krebsonsecurity.com/tag/equifax-breach/"&gt;https://krebsonsecurity.com/tag/equifax-breach/&lt;/a&gt; &lt;a href="#fnref12"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn13"&gt;
&lt;p&gt;&lt;a href="https://medium.com/cloud-security/cves-security-vulnerabilities-1830aee64904"&gt;https://medium.com/cloud-security/cves-security-vulnerabilities-1830aee64904&lt;/a&gt; &lt;a href="#fnref13"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>cloudnative</category>
      <category>security</category>
      <category>cloudsecurity</category>
    </item>
    <item>
      <title>AdonisJs - Installation and Database Setup</title>
      <author>Ted Ngeene</author>
      <pubDate>Mon, 16 Aug 2021 08:58:44 +0000</pubDate>
      <link>https://dev.to/tngeene/part-2-installation-and-database-setup-3o0n</link>
      <guid>https://dev.to/tngeene/part-2-installation-and-database-setup-3o0n</guid>
      <description>&lt;p&gt;Now that you have all the requirements we need to be installed, let's set up the project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're having any problems setting up or installing the dependencies, feel free to leave a comment or shoot me a DM.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What we'll be covering in this post.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#create-a-new-project"&gt;Creating a new project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adonis-project-structures"&gt;Adonis Project Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vs-code-setup"&gt;IDE Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#starting-the-development-server"&gt;Starting the Development Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-setup"&gt;Database Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-project"&gt;
  &lt;/a&gt;
  Create a new project
&lt;/h2&gt;

&lt;p&gt;To initialize a new project, all we need is a simple command on the terminal.&lt;br&gt;
Simply navigate to the directory you'd like the project to be located and type the following;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init adonis-ts-app fitit&lt;/code&gt; or &lt;code&gt;yarn create adonis-ts-app fitit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's break down this command for context.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;npm init&lt;/code&gt; - this is simply initializing the project. Since we're using npm as the package manager, we use &lt;code&gt;npm&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;adonis-ts-app&lt;/code&gt; - we're initializing the project as a typescript project. If you wish not to use typescript and stick to vanilla JavaScript, you can use the &lt;code&gt;adonis new fitit&lt;/code&gt;. This would involve installing the adonis cli. For more details on this, head over to &lt;a href="https://legacy.adonisjs.com/docs/3.2/adonis-blog-part1#_creating_new_application"&gt;this link.&lt;/a&gt; However, I recommend using the typescript version.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;fitit&lt;/code&gt; - this is the name of the application.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In general, the general structure of creating a new Adonis application is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init adonis-ts-app &amp;lt;project_name&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After you've typed the project initialization command, npm first installs the necessary adonis packages, which then prompts you to choose a preferred project structure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCoXAbNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhd6lkqz09ilulc1qljr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCoXAbNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhd6lkqz09ilulc1qljr.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhd6lkqz09ilulc1qljr.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adonis-project-structures"&gt;
  &lt;/a&gt;
  Adonis Project structures
&lt;/h2&gt;

&lt;p&gt;You can choose between one of the following project structures.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;web project&lt;/code&gt; structure is ideal for creating classic server-rendered applications. We configure the support for sessions and also install the AdonisJS template engine(edge). Also, the support for serving static files like images is provided.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;api project&lt;/code&gt; structure is ideal for creating an API server. This also configures the support for CORS.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;slim project&lt;/code&gt; structure creates the smallest possible AdonisJS application and does not install any additional packages, except the framework core. This sort of allows for flexibility. It's up to the developer to build the application ground-up.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's worth noting that apart from some minor differences, the overall project structure is almost similar.&lt;/p&gt;

&lt;p&gt;For this project, we'll be using the &lt;code&gt;api project&lt;/code&gt; structure. The reason for this is that I'm mostly going to be using Adonis as an API server, which I'll then hook to a vue.js frontend.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you're using vs code, the command prompt will ask for additional configurations. These are prettier and eslint-related. I advise using both formatters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the project has been created, you'll get a message like this on the terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UEwLZOfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx9s29si21l3kyrpyuxf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UEwLZOfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx9s29si21l3kyrpyuxf.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx9s29si21l3kyrpyuxf.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vs-code-setup"&gt;
  &lt;/a&gt;
  Vs Code Setup
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This section is intended for anyone using vs code as their IDE. If you use any other IDE, you can skip over to the next section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some extensions will make your adonis development easier in vs code. These are;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt; and &lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;eslint&lt;/a&gt; - As I'd mentioned earlier you need to have prettier and eslint installed. This will be set up during the installation process.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-next"&gt;JavaScript and TypeScript Nightly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=hridoy.adonisjs-snippets"&gt;Adonis JS Snippets&lt;/a&gt; - provides insightful snippets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=stef-k.adonis-js-goto-controller"&gt;Adonis Js Go to controller&lt;/a&gt; will come in handy when we start working with routes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#starting-the-development-server"&gt;
  &lt;/a&gt;
  Starting the Development server
&lt;/h2&gt;

&lt;p&gt;Navigate to the project directory and open it on your IDE now that the project has been created.&lt;br&gt;
Run the following command to spin up your local development server&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node ace serve --watch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zSPGunI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pip6qxqqllqxdxv45hmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zSPGunI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pip6qxqqllqxdxv45hmj.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pip6qxqqllqxdxv45hmj.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open up your browser, and visit &lt;code&gt;localhost:3333&lt;/code&gt;. If you did everything right, then you should see a screen with &lt;code&gt;hello world&lt;/code&gt; text. Congratulations on setting up your first Adonis project! 🎉🎊&lt;/p&gt;

&lt;p&gt;From here, things start to get interesting, we'll set up the database but before we head there, you might be wondering what &lt;code&gt;node ace serve --watch&lt;/code&gt; is.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ace&lt;/code&gt; is a command-line framework that is embedded within your app. It allows you to create project-specific commands and run them using &lt;code&gt;node ace&lt;/code&gt;. We'll be using ace commands throughout the tutorial, each with it's own purpose. For a more detailed explanation on ace commands, head over to this &lt;a href="https://dev.to/amanvirk1/introducing-adonisjs-part-3-65k"&gt;article&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/amanvirk1"&gt;@amanvirk1&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;For the above command, let's break down what it does.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;serve&lt;/code&gt; command starts the HTTP server and performs an in-memory compilation of TypeScript to JavaScript.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;-watch&lt;/code&gt; flag is meant to watch the file system for changes and restart the server automatically(hot reload).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#database-setup"&gt;
  &lt;/a&gt;
  Database Setup
&lt;/h2&gt;

&lt;p&gt;Before we wind up, let's connect our application to a database.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'll assume that you have some knowledge of setting up Postgres or SQL databases and already have one on your computer. If this is not the case, you can use sqlite, which will be a file created on your machine once we start defining the database configuration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;AdonisJS has first class support for SQL databases. The data layer of the framework is powered by Lucid(AdonisJs ORM) and the package must be installed separately.&lt;/p&gt;

&lt;p&gt;Simply run &lt;code&gt;npm i @adonisjs/lucid&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Upon successful installation, we'll configure our database driver and create a database. For this tutorial, I'll be using postgres. So my configs will be postgres-related. However, if you're using SQL, then use relevant configuration.&lt;br&gt;
If you choose sqlite, no configuration will be required.&lt;/p&gt;

&lt;p&gt;Once done, run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace configure @adonisjs/lucid

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node ace invoke @adonisjs/lucid

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tAOchYRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a89rfw84vqrd02v4poy7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAOchYRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a89rfw84vqrd02v4poy7.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a89rfw84vqrd02v4poy7.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The ace configure and invoke commands executes the instructions Javascript file exposed by the package.&lt;/p&gt;

&lt;p&gt;Since I decided to go with postgres, I'll copy the code for validating the environment variables to the env.ts file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t8NKlST3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xd58875vcey8sokk2z9s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t8NKlST3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xd58875vcey8sokk2z9s.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xd58875vcey8sokk2z9s.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Environment variables are injected from outside. The env.ts file validates that they type match and that the app is always running with the correct set of configuration values.&lt;br&gt;
Your env.ts file should now look like this.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Env from '@ioc:Adonis/Core/Env'

export default Env.rules({
  HOST: Env.schema.string({ format: 'host' }),
  PORT: Env.schema.number(),
  APP_KEY: Env.schema.string(),
  APP_NAME: Env.schema.string(),
  PG_HOST: Env.schema.string({ format: 'host' }),
  PG_PORT: Env.schema.number(),
  PG_USER: Env.schema.string(),
  PG_PASSWORD: Env.schema.string.optional(),
  PG_DB_NAME: Env.schema.string(),
  NODE_ENV: Env.schema.enum(['development', 'production', 'testing'] as const),
})

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;config/database.ts&lt;/code&gt; file holds all the configuration related to the database. For more details on this, check out the &lt;a href="https://docs.adonisjs.com/guides/database/introduction"&gt;documentation.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, we'll configure our database on postgres.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fxAY8Sol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dj0r18jifd8bcx183qn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxAY8Sol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dj0r18jifd8bcx183qn0.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dj0r18jifd8bcx183qn0.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can name your database whatever name you wish.&lt;/p&gt;

&lt;p&gt;Finally, go to your &lt;code&gt;.env&lt;/code&gt; file and modify these values&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
DB_CONNECTION=pg
PG_HOST=localhost
PG_PORT=5432
PG_USER=postgres
PG_PASSWORD=&amp;lt;your_postgres_password&amp;gt;
PG_DB_NAME=&amp;lt;your_db_name&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-database-connection"&gt;
  &lt;/a&gt;
  Testing Database connection.
&lt;/h2&gt;

&lt;p&gt;Adonis comes with a neat health checker that checks if the database connection is working.&lt;/p&gt;

&lt;p&gt;Navigate to &lt;code&gt;start/routes.ts&lt;/code&gt; and paste the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
import HealthCheck from '@ioc:Adonis/Core/HealthCheck'
import Route from '@ioc:Adonis/Core/Route'

// check db connection
Route.get('health', async ({ response }) =&amp;gt; {
  const report = await HealthCheck.getReport()

  return report.healthy ? response.ok(report) : response.badRequest(report)
})

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With your server still running, open a browser tab and type &lt;code&gt;localhost:3333/health&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If everything worked fine and your database is connected, it should display the following screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w815TYZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oprh8itnvqyzl8a1xx4f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w815TYZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oprh8itnvqyzl8a1xx4f.png" alt="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oprh8itnvqyzl8a1xx4f.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;Thank you for following along, if you like the content and would like to know more about Adonis Development, bookmark this series, head over to my &lt;a href="https://tngeene.com/"&gt;personal website&lt;/a&gt; or follow me on &lt;a href="https://twitter.com/Ngeene_kihiu"&gt;Twitter&lt;/a&gt;. You can also leave a comment in case you need any clarification or would like to point out an addition.&lt;/p&gt;

&lt;p&gt;For the next piece, I'll be covering database models and relationships.&lt;/p&gt;

&lt;p&gt;You can also follow the series on my &lt;a href="https://tngeene.com/blog/series/everything-you-need-to-know-about-adonisjs"&gt;personal website.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stay tuned!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>adonis</category>
      <category>typescript</category>
      <category>node</category>
    </item>
  </channel>
</rss>
