<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>7 things you should know about CYBERSECURITY for 2022</title>
      <author>Dotnetsafer</author>
      <pubDate>Fri, 20 Aug 2021 16:54:57 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/7-things-you-should-know-about-cybersecurity-for-2022-4pe7</link>
      <guid>https://dev.to/dotnetsafer/7-things-you-should-know-about-cybersecurity-for-2022-4pe7</guid>
      <description>&lt;p&gt;Every time everything is being digitalized more and more, many companies and &lt;strong&gt;SMEs&lt;/strong&gt; choose to redefine and adapt their business model to adapt to the changes that have occurred in the habits and customs of both consumers; &lt;strong&gt;B2C&lt;/strong&gt; (Business to client), as well as from other companies; &lt;strong&gt;B2B&lt;/strong&gt; (Bussiness to Bussiness).&lt;/p&gt;

&lt;p&gt;The digitization of a company &lt;strong&gt;allows&lt;/strong&gt; them to be much closer to their client, find new business opportunities and improve productivity.&lt;/p&gt;

&lt;p&gt;But not everything is so good, the increase in the digitization of companies also implies an &lt;strong&gt;increase in cyberattacks&lt;/strong&gt;, which can make companies lose millions, even lead them to bankruptcy.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-are-the-costs-of-cybercrime"&gt;
  &lt;/a&gt;
  How much are the costs of cybercrime?
&lt;/h2&gt;

&lt;p&gt;The costs related to cybercrime in the world will reach &lt;strong&gt;6 trillion dollars&lt;/strong&gt; this year, a figure that slightly exceeds the size of the GDP of Japan, the third largest global economy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X1CwMvWv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AVbMvlHQJocdMOSUCfDqGOA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1CwMvWv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AVbMvlHQJocdMOSUCfDqGOA.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-the-probability-of-suffering-a-cyber-attack"&gt;
  &lt;/a&gt;
  What is the probability of suffering a cyber attack?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;39%&lt;/strong&gt; of companies (4 out of 10) confirm having suffered cybersecurity breaches or attacks in the last 12 months (it has dropped from &lt;strong&gt;46% in 2020&lt;/strong&gt;). These attacks were highest in medium-sized companies (50 to 249 employees) and closely matched with large companies (250 employees or more): &lt;strong&gt;65% and 64%&lt;/strong&gt; respectively.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YW_vzj5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfDFwMX1Cmjp4eF8p1kRNvA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YW_vzj5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AfDFwMX1Cmjp4eF8p1kRNvA.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-the-cybersecurity-budget-of-a-company"&gt;
  &lt;/a&gt;
  What is the cybersecurity budget of a company?
&lt;/h2&gt;

&lt;p&gt;Gartner expects enterprise IT security budgets to &lt;strong&gt;rise by 50% this year&lt;/strong&gt;. Given the risk of theft of corporate information, which, according to the latest Accenture diagnosis, is the most expensive component of cyberattacks, which cause disbursements of &lt;strong&gt;5.9 million dollars&lt;/strong&gt; per affected company per year, also on average.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DqpMtvJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A3IrzJ_47Z1M6rsLdmHtoEQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DqpMtvJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2A3IrzJ_47Z1M6rsLdmHtoEQ.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-does-a-company-spend-on-cybersecurity"&gt;
  &lt;/a&gt;
  How much does a company spend on cybersecurity?
&lt;/h2&gt;

&lt;p&gt;50% of large companies, with more than 10,000 employees, as explained by the Ponemon Institute, allocate &lt;strong&gt;1 million dollars&lt;/strong&gt; or more in security expenses, and &lt;strong&gt;43%&lt;/strong&gt;, more than &lt;strong&gt;250,000 dollars.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KtMdOxzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AvV2uLL0sZPoqEIq7nXPW_g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KtMdOxzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AvV2uLL0sZPoqEIq7nXPW_g.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-is-the-loss-caused-by-a-cyberattack-on-a-company"&gt;
  &lt;/a&gt;
  How much is the loss caused by a cyberattack on a company?
&lt;/h2&gt;

&lt;p&gt;It is estimated that the loss of data caused by computer attacks causes damages worth between &lt;strong&gt;2,000&lt;/strong&gt; and &lt;strong&gt;50,000&lt;/strong&gt; dollars for small and medium-sized corporations, according to the Incibe. In contrast, losses for large firms amount to &lt;strong&gt;3.6 million dollars&lt;/strong&gt;, according to &lt;strong&gt;IBM.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVFBa3uW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AZSqrI5Vq8T_mdHMq-2ZKOQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVFBa3uW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AZSqrI5Vq8T_mdHMq-2ZKOQ.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-the-worldwide-loss-of-companies-due-to-cyberattacks"&gt;
  &lt;/a&gt;
  What is the worldwide loss of companies due to cyberattacks?
&lt;/h2&gt;

&lt;p&gt;At the international level, economic losses from cyberattacks in 2020 exceeded &lt;strong&gt;million dollars&lt;/strong&gt;. Undoubtedly, a figure that reveals the magnitude of the consequences caused by these incidents and the urgent need for companies and public administrations to be well prepared in this matter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SUxFpg_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AaR8exB5omaYGAK-MBcTPGA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SUxFpg_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AaR8exB5omaYGAK-MBcTPGA.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-long-does-it-take-for-a-business-to-recover-from-a-cyber-attack"&gt;
  &lt;/a&gt;
  How long does it take for a business to recover from a cyber attack?
&lt;/h2&gt;

&lt;p&gt;Everything would depend on the size of the company, the amount invested in cybersecurity per year, the type of attack and the affected part. But it is estimated that it causes &lt;strong&gt;50 days&lt;/strong&gt; of repair time in malware actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uxxgKcOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ARlDa_lUaLwztFx-gmV5NYg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uxxgKcOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ARlDa_lUaLwztFx-gmV5NYg.png" alt="cybersecurity"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-is-cybersecurity-important-for-a-company"&gt;
  &lt;/a&gt;
  Why is Cybersecurity important for a company?
&lt;/h2&gt;

&lt;p&gt;Cybersecurity is important because it protects all categories of data from theft and damage. This includes sensitive data, personally identifiable information &lt;strong&gt;(PII)&lt;/strong&gt;, protected health information &lt;strong&gt;(PHI)&lt;/strong&gt;, personal information, intellectual property, data, and governmental and industry information systems.&lt;/p&gt;

&lt;p&gt;Without a cybersecurity program, your organization &lt;strong&gt;cannot defend itself&lt;/strong&gt; against data breach campaigns, making it an irresistible target for cybercriminals.&lt;/p&gt;

&lt;p&gt;Both inherent risk and residual risk is increasing, driven by global connectivity and usage of cloud services, like &lt;strong&gt;Amazon Web Services&lt;/strong&gt;, to store sensitive data and personal information. Widespread poor configuration of cloud services paired with increasingly sophisticated cybercriminals means the risk that your organization suffers from a successful cyber attack or data breach is on the rise.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
      <category>dotnet</category>
      <category>technology</category>
    </item>
    <item>
      <title>How Unicode helps to ruin your software</title>
      <author>Catherine Galkina</author>
      <pubDate>Fri, 20 Aug 2021 16:47:49 +0000</pubDate>
      <link>https://dev.to/typeable/how-unicode-helps-to-ruin-your-software-246j</link>
      <guid>https://dev.to/typeable/how-unicode-helps-to-ruin-your-software-246j</guid>
      <description>&lt;p&gt;Author: Ville Tirronen&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLFAt89q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.typeable.io/images/unicode/unicode_en.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLFAt89q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.typeable.io/images/unicode/unicode_en.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-unicode-erases-most-of-our-assumptions-on-how-strings-actually-work"&gt;
  &lt;/a&gt;
  How Unicode erases most of our assumptions on How Strings Actually Work
&lt;/h2&gt;

&lt;p&gt;We programmers mostly fly by the seat of our pants when it comes to writing simple stuff. For simple things, we have a strong set of assumptions instead of specific knowledge of how things work. These are assumptions, such as knowing that if &lt;code&gt;b = a + 1&lt;/code&gt;, then &lt;code&gt;b&lt;/code&gt; is greater than &lt;code&gt;a&lt;/code&gt; or that if we &lt;code&gt;malloc&lt;/code&gt; some buffer, we now have the requested amount of memory we can write on. We don't go and look at the specifications for each and everything small thing we do.&lt;/p&gt;

&lt;p&gt;We do this because checking everything would slow us down. But, if we did check, we'd find out that we're usually wrong in our assumptions. There are numeric overflows and then &lt;code&gt;a + 1&lt;/code&gt; might be a lot less than &lt;code&gt;a&lt;/code&gt;. Sometimes &lt;code&gt;malloc&lt;/code&gt; will give us a &lt;code&gt;null&lt;/code&gt; instead of a buffer and were hosed.&lt;/p&gt;

&lt;p&gt;We usually have to be bitten by these issues before we update our assumptions even a little bit. And even then, we usually correct them in broad strokes. After having a nasty overflow bug, we might correct our assumptions on integers  to "&lt;code&gt;a + 1&lt;/code&gt; is greater than &lt;code&gt;a&lt;/code&gt; unless there's a chance that &lt;code&gt;a&lt;/code&gt; is a very big number". And we work based on that instead of having any precise rules how overflows work in our minds.&lt;/p&gt;

&lt;p&gt;Adjusted assumptions are called experience. They make you faster and correct more often.  However, we might relocate some stuff, like proper handling of &lt;code&gt;malloc&lt;/code&gt;,  entirely from our internal category of 'easy stuff' to our internal category of 'complex stuff'. And then we might actually go and look up how it works.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about-strings"&gt;
  &lt;/a&gt;
  About Strings
&lt;/h1&gt;

&lt;p&gt;For beginners, Strings are the archetypal example of 'easy stuff'. Most likely, we learned letters and numbers as children and they feel very familiar to us. Secondly, when learning to program most of us have done lot's of programming exercises using Strings, because they are about the only interesting pre-built data type in most languages. We feel quite confident how Strings work when programming with them.  Thirdly, we might have a good number of assumptions related to functioning of some simple character set, like ASCII or ISO-8859-1. Either because we're that old, or because our teachers were that old. Those were character sets of the simpler times!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DuucR4x3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/UNIVAC_1050-II.jpg/1280px-UNIVAC_1050-II.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DuucR4x3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/UNIVAC_1050-II.jpg/1280px-UNIVAC_1050-II.jpg" alt="Univac 1050-II, 1964, first computer using ASCII (wikipedia)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Origin:&lt;a href="https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/UNIVAC_1050-II.jpg/1280px-UNIVAC_1050-II.jpg"&gt;https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/UNIVAC_1050-II.jpg/1280px-UNIVAC_1050-II.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, in the real, Strings are a very complicated thing. Contrast them to, for example, your usual, found in any language, &lt;code&gt;Int&lt;/code&gt;. We know and understand the representation (64 bits, two's complement) ^[Or we can spend 15 minutes in Wikipedia to learn it] and we understand its semantics (behaves like a number, except if too large or too small). For Strings, we &lt;em&gt;used&lt;/em&gt; to know the representation (one byte per character, check the ASCII table for what character it is), but we almost never know the semantics. Our String could contain our customers name. It could contain a number, bit of JSON or even an SQL statement.&lt;/p&gt;

&lt;p&gt;Strings are the ultimate &lt;code&gt;Any&lt;/code&gt;-type and chances are that if there is no ready made representation for some item in a program, it will be stored and operated as a String. Regardless of whether you have dynamic or static types, this throws all type safety to the wind. And, to compound, many of the things we use Strings for are bloody dangerous, like SQL or HTML. And for that reason, SQL injections and cross site scripting lead the vulnerability top lists year after year.&lt;/p&gt;

&lt;p&gt;But, at least we understand how Strings work, as you know, Strings? We know how to concatenate, change case and so on, right?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#unicode"&gt;
  &lt;/a&gt;
  Unicode
&lt;/h1&gt;

&lt;p&gt;Understanding Strings is lot harder now than it was in around year 2000. We have been transitioning to Unicode for few decades now and its already been few years since I've heard anyone complain why their characters aren't displayed right. ^[Printing them is another matter. I hope that it will be solved in 22th century]&lt;/p&gt;

&lt;p&gt;While being otherwise awesome, Unicode effectively erases most of our 'useful' assumptions on how Strings actually work, but we haven't been very verbal on that happening. And unfortunately, many of us are probably still working with outdated assumptions on how Strings work. And, to make it worse, many of us no longer understand the memory representation of Strings either. ^[Admittedly, I don't, really]&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#broken-assumptions"&gt;
  &lt;/a&gt;
  Broken assumptions
&lt;/h1&gt;

&lt;p&gt;Next, lets go through some of my old assumptions that I needed to throw out with ISO-8859-1 character set.  Surely, this is not an exhaustive list, but hopefully it is enough to kick the (Unicode) Strings out of your mental compartment of 'simple things'.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-character-is-representable-by-single-byte"&gt;
  &lt;/a&gt;
  A character is representable by single byte
&lt;/h2&gt;

&lt;p&gt;In the olden days of ASCII, each character fitted it seven bytes, making it easy to size buffers and scan memory. With Unicode this is an terrible assumption. Let's walk through one arbitrary example to show why.&lt;/p&gt;

&lt;p&gt;At some point, Wordpress devs were fighting to stop SQL-injections from happening.  The one example issue they were trying to fix was someone adding unwanted single quotes in the user input and messing their database with it.&lt;br&gt;
Something like this imaginary example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select 1 from accounts 
where user = '%s' 
    and password = '%s'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;↓↓ (User supplies "whocares' or true -- " as password)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;select 1 from accounts 
where user = 'Avery' 
    and password = 'whocares' or true -- '
-- And now everyone can log in as Avery!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the simplest imaginable way to solve this is to properly encode the single quote in the user input. ^[But, that is simple in imagination only. Don't.] That is, each single quote &lt;code&gt;'&lt;/code&gt; must be encoded as &lt;code&gt;\'&lt;/code&gt;, or backslash-single-quote.&lt;/p&gt;

&lt;p&gt;PHP devs then wrote &lt;code&gt;addslashes&lt;/code&gt; function and everything was well for a while. The only problem was that they did the escaping byte by byte and not character by character. The devs were also blind to the problem as they only worked with single byte Unicode characters (mostly old ASCII). Then, someone figured out that if you fed the system a String like &lt;code&gt;"뼧 or true -- "&lt;/code&gt; you'd get the SQL injection again.&lt;/p&gt;

&lt;p&gt;To understand why lets look up how these characters are represented in Unicode:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;code&lt;/th&gt;
&lt;th&gt;character&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0xbf27&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;뼧&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0xbf5c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;뽜&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0x27&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;'&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;0x5c&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;What the &lt;code&gt;addslashes&lt;/code&gt; actually did was to replace all the value &lt;code&gt;27&lt;/code&gt; -bytes with bytes &lt;code&gt;5c 27&lt;/code&gt;. So,  &lt;code&gt;"뼧 or true -- "&lt;/code&gt; turned into &lt;code&gt;"뽜' or true -- "&lt;/code&gt; and again, there were injections.&lt;/p&gt;

&lt;p&gt;It is not hard to imagine other similar disasters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#string-lengths-are-somewhat-stable"&gt;
  &lt;/a&gt;
  String lengths are somewhat stable
&lt;/h2&gt;

&lt;p&gt;In ASCII, the many of the common String processing operations were invariant regards to the length of the Strings. This is not so with Unicode. And though this property is probably relevant only if you're manually allocating buffers, or trying to size up graphics, let's look at few cases where String lengths change unexpectedly.&lt;/p&gt;

&lt;p&gt;Firstly, to pick a common String operation as an example, does &lt;code&gt;length(x) = length(toUpper(x))&lt;/code&gt; hold for Unicode &lt;code&gt;x&lt;/code&gt;?  No, since Unicode has, among other things, ligature characters such as &lt;code&gt;ﬁ&lt;/code&gt;, which expand 2 fold to &lt;code&gt;FI&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Second example concerns normalization. Since there are multiple code points for the same character, Unicode forces you to do normalization so that two users don't, for example, end up with identical screen names. One would guess that normalization, or the process of picking up a canonical representation for some set of characters would not affect the number of normalized characters, but it indeed does: single character &lt;code&gt;ﷺ&lt;/code&gt; expands 18 fold into &lt;code&gt;صلى الله عليه وسلم&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, it is probably better not to assume anything about lengths of Strings after any operation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#upper-and-lowercase-are-somehow-linked"&gt;
  &lt;/a&gt;
  Upper and lowercase are somehow linked
&lt;/h2&gt;

&lt;p&gt;We, who lived with variants of ASCII tend make lot of use of upper and lower casing operations. Besides of them now being able to change the lengths of the Strings, there are some additional sharp edges. Most importantly, the old assumption that upper and lower case letters are in unique correspondence is lost.&lt;/p&gt;

&lt;p&gt;With Unicode, converting string to uppercase can lose more information than just what case the characters were in. For example if you lowercase the Kelvin symbol &lt;code&gt;K&lt;/code&gt;, you get an ordinary lowercase &lt;code&gt;k&lt;/code&gt; back, with no way of converting it back. This has surprisingly lot of relevance when doing case insensitive comparisons, since &lt;code&gt;toLower('K') == toLower('k')&lt;/code&gt; but &lt;code&gt;toUpper('K') != toUpper('k')&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wJsYKYnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Upper_case_and_lower_case_types.jpg/800px-Upper_case_and_lower_case_types.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJsYKYnL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Upper_case_and_lower_case_types.jpg/800px-Upper_case_and_lower_case_types.jpg" alt="Reason for calling them upper and lower case letters: Uppercase ones go to the 'upper case'. (wikipedia)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Origin: &lt;a href="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Upper_case_and_lower_case_types.jpg/800px-Upper_case_and_lower_case_types.jpg"&gt;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Upper_case_and_lower_case_types.jpg/800px-Upper_case_and_lower_case_types.jpg&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#space-is-0x20"&gt;
  &lt;/a&gt;
  Space is 0x20
&lt;/h2&gt;

&lt;p&gt;This assumption is still true. The byte 0x20 represents space in Unicode. But so do U+2000, U+2001, U+2002 and many others, including a zero width space character U+FEFF.  Whitespace is special. We can't allow screen names like "TheAlex" and "TheAlex " at the same time because HTML will not show that whitespace and other users couldn't tell the difference. So we must remove leading and trailing whitespace before processing.&lt;/p&gt;

&lt;p&gt;And now, Unicode makes it possible to screw up royally here. All it takes is one spot in the code where someone forgets about multitude of whitespace and we end up with unnormalized data in our database. And things start to go fail here and there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#characters-look-different"&gt;
  &lt;/a&gt;
  Characters look different
&lt;/h2&gt;

&lt;p&gt;Unlike ASCII, Unicode has multiple code points for the same character and multiple characters that look nearly, or completely, identical without being the same character. As a concrete example, paste &lt;code&gt;"tyрeablе" == "typeable"&lt;/code&gt; to your favourite REPL. ^[repl.it is handy if you have none at the hand]&lt;/p&gt;

&lt;p&gt;Got &lt;code&gt;False&lt;/code&gt;? That is because the p is not a p but a Russian character for 'er' sound. &lt;/p&gt;

&lt;p&gt;As to why this is a problem, let's take this bit of our database schema as an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"uniq_address" UNIQUE CONSTRAINT, btree (country, city, address)
"uniq_name" UNIQUE CONSTRAINT, btree (name)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I would posit that in Unicode era, these constraints make no sense at all.&lt;br&gt;
Being user input the user is free to mimic whatever address or name they want. This allows the user to attempt all kinds of heists by, say having same screen name as someone else. Also, things like addresses don't stay&lt;br&gt;
digital. Sooner or later, it's going to be read or printed and then the difference, which the database was keen to notice, will be gone. Is there anything analog in your process that could be exploited by pretending to be an another user?&lt;/p&gt;

&lt;p&gt;This problem certainly preceded Unicode, especially in some character sets like ISO-8859-5, but Unicode makes this much worse and more widely applicable. Getting down to it, you can't assume almost anything about how the string is going to l̷o̵o̷k̵ ̶l̴i̴k̵e̷.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#text-goes-from-left-to-right"&gt;
  &lt;/a&gt;
  Text goes from left to right
&lt;/h2&gt;

&lt;p&gt;Quickly, what happens if I'd paste this to my terminal?&lt;/p&gt;

&lt;p&gt;‮rm -rf your_home_directory # dlrow olleh ohce&lt;/p&gt;

&lt;p&gt;I dare you to try yourself. You can use any reasonable dumb thing to paste this in instead of your terminal if you care about your home directory.&lt;/p&gt;

&lt;p&gt;Some languages are not written from left to right, and to accommodate them, Unicode has these 'flip the direction of writing' -codes. The actual text is the same even though it is written from right to left, so your terminal probably would try to wipe your files if you had tried my example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u66hX8o9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/8/82/003151_Al-Imran_UrduScript.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u66hX8o9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/8/82/003151_Al-Imran_UrduScript.jpg" alt="Urdu script, which is written from right to left (check the last line) (wikipedia)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Origin: &lt;a href="https://upload.wikimedia.org/wikipedia/commons/8/82/003151_Al-Imran_UrduScript.jpg"&gt;https://upload.wikimedia.org/wikipedia/commons/8/82/003151_Al-Imran_UrduScript.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Besides messing with my colleagues on Teams with this, this bidirectional writing has been used for quite a many hoaxes, the longtime favourite being flipping long URLs backwards so they look innocent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strings-have-the-same-decoding"&gt;
  &lt;/a&gt;
  Strings have the same decoding
&lt;/h2&gt;

&lt;p&gt;One of the things we happily assumed with ASCII (and variants) was that the decoding was trivial and unlikely to go wrong. Some of my University colleagues can read ASCII fluently from hex dumps! This meant that the only problem when transmitting data as Strings was to correctly parse the contents of the String.&lt;/p&gt;

&lt;p&gt;Unicode, being a multibyte encoding adds another step. You must first parse the String, before you can get started on the content.&lt;/p&gt;

&lt;p&gt;Now, parsing is one of the problem areas that is known to cause security issues. One of the key problems is that the same String may get parsed differently in one program than in another. A good contemporary example of this is having and html sanitizer (thing that stops XSS) speak bit different dialect of HTML than the browser that the user is using. If these bits disagree on the interpretation of some String, the sanitizer might judge it to be free of scripts and other malicious items, while the browser could interpret things slightly differently and start executing bits of the input as scripts. ^[Using the same channel for control and content must be worth more than the billion dollar mistake of including null in programming languages!]&lt;/p&gt;

&lt;p&gt;Now this is exacerbated by Unicode, since not all Unicode parsers agree on all sets of bytes. Mostly, it is the illegal Unicode sequences that get handled differently. For example "e3 80 22" is an invalid Unicode sequence and one Unicode parser might judge it to be one illegal character while another could be more lax and interpret it as three: &lt;code&gt;ã&lt;/code&gt;, &lt;code&gt;\x80&lt;/code&gt; and &lt;code&gt;"&lt;/code&gt;. Now, to put this into web context, the last of the three could be a problem since&lt;br&gt;
it would allow XSS through attribute values.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#concluding-thoughts"&gt;
  &lt;/a&gt;
  Concluding thoughts
&lt;/h1&gt;

&lt;p&gt;As a software engineer, Unicode puts a lot of complexity on my table and much of that I really wouldn't need. The individual gotchas listed above are not so hard to handle by themselves, but the effect their presence has on the whole system can be significant. Now you need to decide what kind of strings you allow in your system, you need figure out how to properly normalize them, how to eliminate homoglyphs and strip and trim whitespace. &lt;/p&gt;

&lt;p&gt;The problem with this is that all such things must happen uniformly. If you normalize a String in a certain way in one bit of your program and some other bit does it differently, you have an inconsistency, or a security issue at the worst. You also have to take this into account, because, well mistakes happen and try to record precisely what has been done to each String so you can take that into account when using them.&lt;/p&gt;

&lt;p&gt;And, unfortunately, no, you cannot just 'fix your strings' at every use point. Some string operations are only safe to do once or you lose information or worse. You need to know and track the semantics of Strings to know what steps you need, and what steps you can't take in the context you are working on.&lt;/p&gt;

</description>
      <category>unicode</category>
      <category>ascii</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>Pin Match JS</title>
      <author>Al Siam</author>
      <pubDate>Fri, 20 Aug 2021 16:29:06 +0000</pubDate>
      <link>https://dev.to/alsiamworld/pin-match-js-3m2k</link>
      <guid>https://dev.to/alsiamworld/pin-match-js-3m2k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-10-"&gt;
  &lt;/a&gt;
  100daysofcode [ day -10 ]
&lt;/h1&gt;

&lt;p&gt;Today I did a pin match. You can create a pin and if it matches, it will show you success otherwise it will show you an error.&lt;/p&gt;

&lt;p&gt;live Site: &lt;a href="https://100daysofcode-day10-alsiam.netlify.app/"&gt;https://100daysofcode-day10-alsiam.netlify.app/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0xrYnz6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cbr9yso3dxoqx8dl1ic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xrYnz6b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cbr9yso3dxoqx8dl1ic.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#devcommunity-bootstrap-webdevelopment"&gt;
  &lt;/a&gt;
  DEVCommunity #bootstrap  #webdevelopment
&lt;/h1&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Portfolio Website Design with HTML &amp; JavaScript</title>
      <author>Aniket</author>
      <pubDate>Fri, 20 Aug 2021 16:25:32 +0000</pubDate>
      <link>https://dev.to/anikets_1801/portfolio-website-design-with-html-javascript-4la2</link>
      <guid>https://dev.to/anikets_1801/portfolio-website-design-with-html-javascript-4la2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx_DrSUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob603gt1toly2thm2kfv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wx_DrSUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob603gt1toly2thm2kfv.png" alt="Portfolio Landing Page by Code Savvy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Dear Developers, In this post we'll create a Portfolio Page design using HTML, CSS &amp;amp; Some of the Powerful JavaScript Animations from GSAP Library.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow the Below Given link to watch full tutorial along with me :&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;&lt;a href="https://youtu.be/uNPola_h_Oo"&gt;Click to watch&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you want to skip the tutorial and want to grab the &lt;strong&gt;source code&lt;/strong&gt;, follow below given &lt;strong&gt;Repo link&lt;/strong&gt; : &lt;br&gt;
&lt;a href="https://github.com/ananikets18/Portfolio-Landing-Page-Design-HTML-CSS-Javascript-GSAP"&gt;Repository Link&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#%E2%8F%B1-outline"&gt;
  &lt;/a&gt;
  ⏱ Outline
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;0:00 - Intro&lt;/li&gt;
&lt;li&gt;0:34 - Structure&lt;/li&gt;
&lt;li&gt;4:21 - Setting CSS&lt;/li&gt;
&lt;li&gt;4:48 - Wrapper&lt;/li&gt;
&lt;li&gt;5:05 - Left Menu&lt;/li&gt;
&lt;li&gt;5:20 - Logo&lt;/li&gt;
&lt;li&gt;6:04 - Social Icons&lt;/li&gt;
&lt;li&gt;7:34 - Nav&lt;/li&gt;
&lt;li&gt;8:58 - Large Text&lt;/li&gt;
&lt;li&gt;9:36 - Red Box&lt;/li&gt;
&lt;li&gt;10:27 - See Photos&lt;/li&gt;
&lt;li&gt;11:01 - Desc Content&lt;/li&gt;
&lt;li&gt;13:08 - Slide&lt;/li&gt;
&lt;li&gt;13:30 - Overlay&lt;/li&gt;
&lt;li&gt;14:26 - Navbar Links JS&lt;/li&gt;
&lt;li&gt;15:11 - TweenMax (GSAP) Animations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;👍 Thanks for watching!&lt;/p&gt;

&lt;p&gt;Happy Coding :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Time Management for Programmers</title>
      <author>Alec</author>
      <pubDate>Fri, 20 Aug 2021 16:12:58 +0000</pubDate>
      <link>https://dev.to/alecbsherman/time-management-for-programmers-ge3</link>
      <guid>https://dev.to/alecbsherman/time-management-for-programmers-ge3</guid>
      <description>&lt;p&gt;You have too much work and it's impossible to get it all done in 40, 60 or even 80 hours per week.&lt;/p&gt;

&lt;p&gt;This is often the case for successful, talented software developers.  Your time is valuable so how do you schedule your time to increase your productivity?&lt;/p&gt;

&lt;p&gt;This article is not about coding tips like writing macros and using coding standards.  I have a &lt;a href="https://youtu.be/3mlWO01OWIo"&gt;Coding Standards&lt;/a&gt; video about that.  This is about prioritizing tasks and optimizing how you schedule your time.&lt;/p&gt;

&lt;p&gt;This article is also available in video form:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nMZA7Emr5z4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-step-make-a-list"&gt;
  &lt;/a&gt;
  First Step - Make a List
&lt;/h2&gt;

&lt;p&gt;Write down all your current tasks.   You're not writing a functional or technical here.  Just one-liner descriptions of each to-do item.  If the item doesn't need to be done this week it should not even be on the list.  If you're worried you'll forget it, then put it in a separate list for "To Do Later" but have that in a separate document.  The whole process of making your list and prioritizing it should not take more than 20 minutes.  If the task list is really long it could take up to an hour but then you'll be in a much better place for the whole week.&lt;/p&gt;

&lt;p&gt;Once you have your full list (and you'll be adding to this during the day), then you want to move the tasks into three categories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tasks where people are waiting on me before they can continue&lt;/li&gt;
&lt;li&gt;Tasks you can delegate&lt;/li&gt;
&lt;li&gt;Everything else&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most cases you want to take care of the first two categories first.  That way other people can be productive and working on the project while you are being productive.  &lt;/p&gt;

&lt;p&gt;If you are part of a team and other staff cannot do their job until you finish yours... this really should be your top priority.  You don't want to finish a month-long task and then the company has to wait another 2 weeks for someone to do their part because they couldn't start until you delivered a module.  Work on the module they need first so they can be productive while you finish your other tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tasks-you-can-delegate"&gt;
  &lt;/a&gt;
  Tasks You Can Delegate
&lt;/h2&gt;

&lt;p&gt;These can be little easy things that are tedious and time consuming.  Like updating the company Wiki regarding the project you are working on.  Creating test data sets.  Writing an API integration.  Or tasks that just make your life easier - like setting up a development server, setting up the social media accounts which will later be needed once the project is completed.  Picking the icons and graphics to be used by the user interface.&lt;/p&gt;

&lt;p&gt;Do you have a technical problem that you can submit to a forum or to the company providing an API you are working on?  Don't let your OCD lure you into wasting hours because you don't want to let this puzzle get the best of you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if you are not overloaded with work you should reach-out to some high-level techs you know and offer your services.  Offer to create test data, provide unit testing, write the user documentation, or build the OOP API integration they need.  Even choosing all the icons to use for the app can save them an hour or two.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quit-unnecessary-tasks"&gt;
  &lt;/a&gt;
  Quit Unnecessary Tasks
&lt;/h2&gt;

&lt;p&gt;One way to be more productive is to stop wasting time on things you can avoid.&lt;/p&gt;

&lt;p&gt;Notify your manager that you are overloaded and in order to meet deadlines you will need to reduce the number of mandatory meetings you go to.&lt;/p&gt;

&lt;p&gt;In your personal life, order groceries online and let them deliver.  This can save you hours every week.  I could go on but basically if you are overloaded with work also look to see if there are non-work activities that are taking up a lot of your time which you can delegate, quit or find alternatives to.  If you are earning good money consider hiring someone to do these tasks.  Don't waste your time mowing the lawn when you can hire someone to do that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-to-prioritize-everything-else"&gt;
  &lt;/a&gt;
  Now to Prioritize Everything Else
&lt;/h2&gt;

&lt;p&gt;Now to sub-categorize the remaining tasks based on &lt;strong&gt;Mental Acuity Requirement&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;complex&lt;/li&gt;
&lt;li&gt;easy&lt;/li&gt;
&lt;li&gt;no challenge&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#complex-tasks"&gt;
  &lt;/a&gt;
  Complex Tasks
&lt;/h3&gt;

&lt;p&gt;These include programming and anything else that you find mentally challenging.  When coding even a single character could cause a crash or problem that takes literally hours to debug; put a colon in where there should be a semi-colon and you have a big problem in most languages.  Coding is not the only "complex" task.  If you make a bad design decision it could have a long-term negative impact on the project so database design and similar activities should be in the  "Complex" category.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easy-tasks"&gt;
  &lt;/a&gt;
  Easy Tasks
&lt;/h3&gt;

&lt;p&gt;What is easy for one person may be complex for others.  Like designing and creating SQL table definitions.  The relational DB design regarding how it will integrate with the rest of the database may be complex, but the creating of the SQL scripts to make the tables after the conceptual design is outlined may be "Easy".   Similar with writing functionals or help documentation.  Generally things you have done hundreds of times before and a single-character being off won't crash the program should be considered &lt;strong&gt;Easy&lt;/strong&gt; tasks for you.&lt;/p&gt;

&lt;p&gt;Put the ones that are time-sensitive as highest priority for this category.  For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Registering for an API&lt;/li&gt;
&lt;li&gt;Registering for a developer account from Apple&lt;/li&gt;
&lt;li&gt;Applying to join a group or anything that has an application process&lt;/li&gt;
&lt;li&gt;Submitting a bug to a third-party tool you use&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do these things first so you can be productive while waiting for responses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-challenge-tasks"&gt;
  &lt;/a&gt;
  No Challenge Tasks
&lt;/h3&gt;

&lt;p&gt;These tasks must be done and sometimes are very time-consuming but just aren't mentally challenging.  Like picking icons for your user interface and navigation.  Or creating test data.  Do not squander your best mental acuity hours working on these menial tasks!&lt;/p&gt;

&lt;p&gt;Now hopefully you can delegate some of these tasks to someone else.  &lt;/p&gt;

&lt;p&gt;If not then postpone them to end of day when you are not at your best.  Sometimes these can even be done as multi-tasking projects.  For example this week I was on an obligatory 4 hour Zoom meeting where my interaction was only required 20% of the time.  During the other 80% of the time I multi-tasked and created new thumbnails for YouTube videos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-zone"&gt;
  &lt;/a&gt;
  In The Zone
&lt;/h2&gt;

&lt;p&gt;Most people do not take into consideration that every human has peak and off-peak times for their mental acuity.  Figure out when you are at your brightest during the day.  When you can get "in the zone" and really focus.&lt;/p&gt;

&lt;p&gt;As an example, when a programmer is "in the zone" they can accomplish a task in 10 minutes.  That same task can easily take 40 minutes if distracted, they make a typo, or they didn't think far enough ahead to realize a design flaw.  If that happens 3 times in a day, then what could have been completed in 30 minutes now took 2 hours.  Your goal is to get "in the zone" and do the most complex tasks during that time.&lt;/p&gt;

&lt;p&gt;When you really want to focus and get "in the zone" remove all distractions.  No email, put your phone in airplane mode, close your door or have some visual indicator to let people know not to bother you.  Only work on the Complex tasks while you are in the zone.  Don't squander these peak productivity times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;With all this in mind, you should schedule your complex mental tasks for when you are at your peak mental ability each day.  Schedule your tasks in the Easy Mental Tasks category for the rest of the day.  Don't schedule the "No Mental Requirement" tasks at all.  These tasks you do when eating lunch, multi-tasking during a Zoom meeting, or on your laptop while unwinding and watching Netflix.&lt;/p&gt;

&lt;p&gt;Also, if you want to increase productivity do not multi-task while working on complex or even "easy" mental tasks.  You may think it doesn't have a big impact on your effectiveness but having a video on in the background is going to slow you down.  Put on music instead.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>timemanagement</category>
      <category>programming</category>
    </item>
    <item>
      <title>Those “Pesky” Pull Requests are Totally Worth It </title>
      <author>Nick Hodges</author>
      <pubDate>Fri, 20 Aug 2021 16:01:45 +0000</pubDate>
      <link>https://dev.to/linearb/those-pesky-pull-requests-are-totally-worth-it-578b</link>
      <guid>https://dev.to/linearb/those-pesky-pull-requests-are-totally-worth-it-578b</guid>
      <description>&lt;p&gt;Pretty much everyone does code reviews. They’ve been around a long time. I remember back in my Borland days when the Chief Scientist would come in every morning and review all the code that had been checked into the Subversion(!) repository the previous day and send emails out to folks whose code wasn’t up to snuff. That’s old school.&lt;/p&gt;

&lt;p&gt;Slightly less old school? Saving all the check-ins up until Friday for the Dev Leads and/or Dev Managers to review and approve. Both of these techniques leave a lot to be desired — the main thing being a complete lack of interaction between the developer, the code, and the reviewer.&lt;/p&gt;

&lt;p&gt;Code Reviews have a number of purposes. Probably the most important one is preserving the quality and integrity of the code in the repository. Even the two old-school ways above do that.&lt;/p&gt;

&lt;p&gt;But almost as important is the learning opportunity that code reviews can provide. If the only feedback a developer gets from a code review is mistakes in formatting or other trivial things like that, then nobody learns and gets better. The old school ways above provide for few opportunities for a developer to increase their skills. To provide learning opportunities, code reviews evolved into meetings where everyone looked at the code written that week and commented on it, criticized it, or otherwise ran it through the gauntlet. This did provide a learning opportunity for developers, but it took more time, as it was 100% synchronous and required all code to wait for the next scheduled meeting to be reviewed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWxG9sW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AlkPeY9sJ_As_KZfE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KEWxG9sW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AlkPeY9sJ_As_KZfE.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, almost no one is doing these old-school code reviews anymore. All the cool kids are doing pull requests. (Some folks call them “merge requests.”) Pull requests have a number of advantages over the previously mentioned methods, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Being done completely asynchronously, but in public for all to see.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No one needs to wait to review the code — it can happen almost immediately after a pull request is issued.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A history of all the comments stays with the code in a repository. This allows a developer to come back to the code a year later and see all the thought that went into writing it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pull Requests can be tracked, monitored, and measured. &lt;a href="https://linearb.io/blog/three-git-pull-request-review-strategies/"&gt;A whole lot of good things can come out of that &lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#should-you-do-code-reviews-at-all"&gt;
  &lt;/a&gt;
  Should you do code reviews at all?
&lt;/h2&gt;

&lt;p&gt;Interestingly, some say no, you shouldn’t.&lt;/p&gt;

&lt;p&gt;Not only is Jessica Kerr a great speaker and a good Twitter follow, but she also has some interesting ideas about code reviews in her article of March 27 entitled “Those pesky pull request reviews .” In fact, she doesn’t like pull requests, and argues that you should sidestep them by just working on a given task as a team, so that everyone sees everything as the work gets done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--99NnCfk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AEBaePGd857-v63hu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--99NnCfk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AEBaePGd857-v63hu.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She believes that pull requests work great for open source projects where a “team” is really a set of individuals coordinating work together. For true development teams, she believes that if a team all works together on a single task, everyone learns and understands the code, and thus there is no task switching between coding and doing pull requests because the pull requests are unnecessary.&lt;/p&gt;

&lt;p&gt;Jessica’s idea is radical — basically going beyond Pair Programming and moving into mob programming. Mob programming is the idea of having whole teams work together on projects in serial rather than individually in parallel. Mob programming can eliminate the need for pull requests by causing all of the communication and learning to take place during the coding phase, without any review.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-a-fan"&gt;
  &lt;/a&gt;
  Not a Fan
&lt;/h2&gt;

&lt;p&gt;I’m having a hard time agreeing with her idea for a couple of reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The transaction costs are too high. It seems to me that having four people work on a project together makes for many communication channels, increases the likelihood of interruptions, and reduces the amount of code that will actually get written. It’s sort of a “Too many cooks spoil the broth” notion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It doesn’t capture the discussions and history that will remain long after the code is committed. One of the most important and powerful benefits of pull requests is the learning that can take place during and even long after code has been reviewed and deployed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally — not all projects are conducive to multiple team members working together. Some are small and multiple people working together would be overkill. Some are esoteric and require the focus of one person. Some will match the team and can be worked on together. There’s no one size fits all solution for all projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, not doing pull requests pretty much eliminates all the benefits of metrics systems like &lt;a href="https://linearb.io/"&gt;LinearB &lt;/a&gt;. Tracking the progress of pull requests and code reviews through the pipeline is a critical process for knowing how your team is performing. Without that, you can't measure things and if you can’t measure things, you can’t improve.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As part of a discussion about code reviews, Rob Kraft, one of the Development Leaders in our vibrant Dev Interrupted Discord Server (&lt;a href="https://discord.gg/wHvgytX9P7"&gt;you should join&lt;/a&gt;!) made the following comment that I agree with:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1rTPmF3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AKLA7-yvVpEIAmygh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1rTPmF3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AKLA7-yvVpEIAmygh.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think that what Jessica needs is a good look at LinearB. 🙂&lt;/p&gt;

&lt;p&gt;Let me address some of her more specific objections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;“&lt;strong&gt;Let’s face it: nobody wants to review pull requests.&lt;/strong&gt;” Well, I don’t think that is true. We here at LinearB see customers every day that are doing pull requests efficiently and effectively. Sure, pull requests can be hard and nobody wants to do them if you aren’t correctly incenting the team to create pull requests that are easy to review. No one likes a huge pull request. But through monitoring metrics like Pull Request Size, you can encourage your team to create small, easy-to-review pull requests. And voila! People don’t hate pull requests anymore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“&lt;strong&gt;They’re a social interaction minefield!&lt;/strong&gt;” People complain that code reviews can cause strife on a team. Well, so can conversations during Mob Programming. I’m not sure that I see a distinction. And if doing a code review causes strife, then you have a cultural problem that no development methodology is going to solve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“&lt;strong&gt;We could blame the people. We could nag them more. We could even automate the nagging!&lt;/strong&gt;” Well, if code reviews are small, concise, and easy to do, “automating the nagging” via our &lt;a href="https://linearb.io/blog/workerb-developer-automation/"&gt;WorkerB product&lt;/a&gt; is usually more than enough to get the ball rolling and keep it rolling. Notifications and tracking of any reviews that do happen to languish keep things moving as well. LinearB customers have seen drastic improvements in code pipeline productivity as a result of this so-called “nagging”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“&lt;strong&gt;Maybe instead of trying to work a bit more together, we could work together.”&lt;/strong&gt; Well sure, but if you do that, checking in code without a process of pull requests and code reviews, well, then you aren’t getting all the benefits listed above, nor those of a metrics tool that can show you what your &lt;a href="https://linearb.io/blog/cycle-time-measuring-and-improving-team-process/"&gt;Cycle Time&lt;/a&gt; is doing. And I don’t believe that mob programming will prevent the cultural problems that can arise from code reviews. People will be people whether in a mob programming environment or in an asynchronous code review process.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;Okay — so what rubber is hitting the road here?&lt;/p&gt;

&lt;p&gt;If pull requests and code reviews are hard and people don’t want to do them, then you are doing them wrong. So the trick is to make them easy to do.&lt;/p&gt;

&lt;p&gt;We here at LinearB see many, many customers improve their Cycle Time and their overall software development process by using and tracking pull requests. By combining metrics tracking around pull requests with tools like &lt;a href="https://linearb.io/developer-automation/"&gt;WorkerB&lt;/a&gt;, many, many development organizations have seen smaller pull requests, better reviews, shorter Cycle Times, and an overall sense that things are really humming.&lt;/p&gt;

&lt;p&gt;Monitoring things like the size of pull requests, when pull requests are assigned, picked up, and commented on, as well as monitoring the depth of reviews that take place all create an environment of small, discrete, easy to review pull requests.&lt;/p&gt;

&lt;p&gt;And of course, if you want to find out more about what our customers already know, you can &lt;a href="https://linearb.io/demo/"&gt;book a free demo of LinearB &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the end, while her ideas are intriguing and thought-provoking, I can’t say I agree with Jessica’s argument. There doesn’t seem to be any good reason not to do pull requests with code reviews.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Jessica’s blog post &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;can be read on her Jessitron blog&lt;/a&gt;&lt;/em&gt; and you can follow her on Twitter at &lt;a href="https://twitter.com/jessitron"&gt;@jessitron&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you haven't already heard, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: The interactive, community-driven, digital conference that takes place September 30th. Designed by engineering leaders, for engineering leaders, INTERACT will feature 10 speakers, 100s of engineers and engineering leaders, and is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;p&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;https://devinterrupted.com&lt;/a&gt; on June 30, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>codereview</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>GuardianForge Planning &amp; Discovery</title>
      <author>Brian Morrison II</author>
      <pubDate>Fri, 20 Aug 2021 15:56:58 +0000</pubDate>
      <link>https://dev.to/brianmmdev/guardianforge-planning-discovery-33dd</link>
      <guid>https://dev.to/brianmmdev/guardianforge-planning-discovery-33dd</guid>
      <description>&lt;p&gt;Today I'm going to write about something quite different than anything I've done yet. Most of my articles to date have been very specific tutorials on how to accomplish something in a given language or framework. Today I'm going more conceptual and I'll explain my thought process behind how I built a web app from start to finish. This article specifically will cover a lot of the brainstorming, discovery, and project planning, whereas the others will cover specific features and how they were implemented.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-guardianforge"&gt;
  &lt;/a&gt;
  Introducing GuardianForge
&lt;/h2&gt;

&lt;p&gt;Over the last few months, I've been building a web app called GuardianForge, which acts as something of a social media for players of the game Destiny 2. It allows users to create snapshots of their current equipment in the game and share with other players. The equipment you have on your character in the game affects how the game plays, and can make activities either harder or easier depending on how you setup your loadout.&lt;/p&gt;

&lt;p&gt;Build crafting in Destiny seems to be on the rise, and one thing I personally do before going into high level activities is ask around to find the best items to have equipped. A lot of Destiny content creators also produce build video for these activities which describe the items you should have equipped. Here is a small sample of one of my favorite creators Castle explaining a build in the game and how it works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hI00BZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://imgur.com/MTvZu1q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hI00BZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://imgur.com/MTvZu1q.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video: &lt;a href="https://youtu.be/KV1lVBPg4oA"&gt;https://youtu.be/KV1lVBPg4oA&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem is there are so many combinations I often cant remember much of the equipment they suggest, so one day I thought &lt;em&gt;"Wouldn't it be nice if there was a convenient way to share an entire loadout using just a link?"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that thought was the beginning of GuardianForge.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GuardianForge is still a work in progress, but the basic gist is;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find a players character &amp;amp; view the loadout.&lt;/li&gt;
&lt;li&gt;Create a build snapshot containing all the equipment, along with optional notes.&lt;/li&gt;
&lt;li&gt;Share the unique link for that build to...anyone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twLCvC0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/85ccc0aa-07a2-40e5-90a0-619cb58f8914" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twLCvC0h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/85ccc0aa-07a2-40e5-90a0-619cb58f8914" alt="https://cdn.brianmorrison.me/media/2021/85ccc0aa-07a2-40e5-90a0-619cb58f8914"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guardianforge.net/build/226dee1e-6b03-4074-8de9-576f60443e7e"&gt;https://guardianforge.net/build/226dee1e-6b03-4074-8de9-576f60443e7e&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-the-destiny-api"&gt;
  &lt;/a&gt;
  Exploring The Destiny API
&lt;/h2&gt;

&lt;p&gt;Before I even start writing any code or planning infrastructure, I always explore APIs to see if my idea is even possible with what's provided. Bungie has a decently documented API located at &lt;a href="https://bungie-net.github.io/multi/index.html"&gt;https://bungie-net.github.io/multi/index.html&lt;/a&gt; so that's where I started. In order to access it, I first needed to register an application in their developer portal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qc70s6zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/3bd7727b-4b47-4f92-a686-794dcafcf9f1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qc70s6zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/3bd7727b-4b47-4f92-a686-794dcafcf9f1" alt="https://cdn.brianmorrison.me/media/2021/3bd7727b-4b47-4f92-a686-794dcafcf9f1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYHRQp8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f33a2ed2-075e-46c0-ab84-0bd74904ffe5" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYHRQp8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f33a2ed2-075e-46c0-ab84-0bd74904ffe5" alt="https://cdn.brianmorrison.me/media/2021/f33a2ed2-075e-46c0-ab84-0bd74904ffe5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the API call that seemed to give me some of the data I wanted is the GET Character API. There were a few pieces of info I needed first, the &lt;code&gt;membershipId&lt;/code&gt; and &lt;code&gt;membershipType&lt;/code&gt;. After doing some digging, I found that I was able to find this info on the GET User API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5AC3aJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/044ed22f-f00d-47c2-86ae-5377cd307cf5" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5AC3aJC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/044ed22f-f00d-47c2-86ae-5377cd307cf5" alt="https://cdn.brianmorrison.me/media/2021/044ed22f-f00d-47c2-86ae-5377cd307cf5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before I could call GET User, I needed the unique ID for that user in Bungie's system. I traced that back to the GET SearchUsers call, which let me search by username.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GG707l5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/ff413e05-e945-4473-9392-2ad57a9e0284" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GG707l5G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/ff413e05-e945-4473-9392-2ad57a9e0284" alt="https://cdn.brianmorrison.me/media/2021/ff413e05-e945-4473-9392-2ad57a9e0284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perfect, now back to the GET Character API. Bungie's API uses a query parameter called components that lets you request only the info you need from that specific call. Unfortunately I didn't know what each of these components returned (and although it was documented, it still didn't mean much to me at the time).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-how-other-apps-work"&gt;
  &lt;/a&gt;
  Exploring How Other Apps Work
&lt;/h2&gt;

&lt;p&gt;Its about here that I started exploring other third party Destiny apps to see how they did it. So I reviewed one of these app's network requests using the Chrome dev tools' Network tab. The numbers at the end all look weird, but that's because they are URL Encoded (meaning they are changed to be more compatible with URLs). You can swap the &lt;code&gt;%2C&lt;/code&gt; with a &lt;code&gt;,&lt;/code&gt; and it looks more like &lt;code&gt;100,101,103...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WiNV641o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/6aa38cd9-bf29-4dc7-8df2-695e5a485478" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiNV641o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/6aa38cd9-bf29-4dc7-8df2-695e5a485478" alt="https://cdn.brianmorrison.me/media/2021/6aa38cd9-bf29-4dc7-8df2-695e5a485478"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I can match up those numbers with the API documentation to figure out what each really does.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLdnChAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/b9f69932-ce1d-4b76-9da7-462e7383ef91" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLdnChAF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/b9f69932-ce1d-4b76-9da7-462e7383ef91" alt="https://cdn.brianmorrison.me/media/2021/b9f69932-ce1d-4b76-9da7-462e7383ef91"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now Ive got a list of components that I needed to request. Requesting it resulted in a rather large response and a whole lot of data that meant very little to me. I had no idea how to decipher it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OSEatYFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/56607ee3-20c1-4b8f-9788-f8909b978d54" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OSEatYFo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/56607ee3-20c1-4b8f-9788-f8909b978d54" alt="https://cdn.brianmorrison.me/media/2021/56607ee3-20c1-4b8f-9788-f8909b978d54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-destiny-manifest"&gt;
  &lt;/a&gt;
  The Destiny Manifest
&lt;/h2&gt;

&lt;p&gt;Now Ive used third party Destiny apps for a number of years and I've always heard about the "Manifest" that is downloaded whenever you use one of these apps. I saw there was a call to GET Manifest in the API docs, so I ran that call to see what came back. To my surprise, it was a bunch of URLs along with some other metadata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TDcz0gas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/6c6cc55c-542f-49b7-aab8-528026731473" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TDcz0gas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/6c6cc55c-542f-49b7-aab8-528026731473" alt="https://cdn.brianmorrison.me/media/2021/6c6cc55c-542f-49b7-aab8-528026731473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attempting to grab one of these URLs resulted in a key/value JSON file. The keys in this dataset actually correspond to some of the data in the GET Character response. The Manifest is essentially a database with a massive amount of info on everything in the game. &lt;/p&gt;

&lt;p&gt;Now these files can be rather large (one of the largest I use is about 60MB) and attempting to view them in the browser or VS Code resulted in a crash every time. Its just too much data to render in those apps. So I did a bit of digging and discovered &lt;a href="https://dadroit.com/"&gt;Dadroit JSON Viewer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NDzxZk9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/537b09d3-cf1f-4f24-a5ad-c7607fb030ed" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NDzxZk9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/537b09d3-cf1f-4f24-a5ad-c7607fb030ed" alt="https://cdn.brianmorrison.me/media/2021/537b09d3-cf1f-4f24-a5ad-c7607fb030ed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using Dadroit, I was able to search the entire manifest for the various &lt;code&gt;hash&lt;/code&gt; values to figure out in which manifest file, and where, the info I needed was. If there was info I didn't have a hash for, I also leveraged some of the text found in game to discover the location of that info.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OrLSXmqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f2404f44-4f9f-4440-9da5-1377bb17d909" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OrLSXmqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f2404f44-4f9f-4440-9da5-1377bb17d909" alt="https://cdn.brianmorrison.me/media/2021/f2404f44-4f9f-4440-9da5-1377bb17d909"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MzZ8rxgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/b2ed11b5-558c-4722-a29d-7c40d914ae5d" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MzZ8rxgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/b2ed11b5-558c-4722-a29d-7c40d914ae5d" alt="https://cdn.brianmorrison.me/media/2021/b2ed11b5-558c-4722-a29d-7c40d914ae5d"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So after many hours of tracing data around the manifest, I realized that I could totally build an app that does what I needed it to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infrastructure-planning"&gt;
  &lt;/a&gt;
  Infrastructure Planning
&lt;/h2&gt;

&lt;p&gt;Now my original goal with this project was to build something on AWS using as many services as I can to make this thing fly. I generally use these projects as opportunities to do something new, and this was no exception.&lt;/p&gt;

&lt;p&gt;So whenever I approach a new app, I split it all up into three categories;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Front end: Where will the user get access to the app?&lt;/li&gt;
&lt;li&gt;Back end: Where will I make API requests to?&lt;/li&gt;
&lt;li&gt;Storage: Where will all the data be stored?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also break out the things I want to user to do;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Search for Destiny users &amp;amp; select any of their characters&lt;/li&gt;
&lt;li&gt;Create a build, adding notes and other meta info&lt;/li&gt;
&lt;li&gt;View &amp;amp; share builds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And here is ultimately how the project was broken up:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--19X0-d1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/22b5c266-5172-436b-ad11-5787ffc2cd2f" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--19X0-d1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/22b5c266-5172-436b-ad11-5787ffc2cd2f" alt="https://cdn.brianmorrison.me/media/2021/22b5c266-5172-436b-ad11-5787ffc2cd2f"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When first hits &lt;a href="http://guardianforge.net"&gt;guardianforge.net&lt;/a&gt;, they will access a CloudFront CDN instance which returns the Vue application to the user. &lt;/li&gt;
&lt;li&gt;The built Vue app is stored in an S3 bucket, where CloudFront Accesses it.&lt;/li&gt;
&lt;li&gt;Requests to the API go to API Gateway.&lt;/li&gt;
&lt;li&gt;API Gateway forwards those requests to a Lightsail VM, where the main API code is running.&lt;/li&gt;
&lt;li&gt;The API accesses relevant data from a DynamoDB table.&lt;/li&gt;
&lt;li&gt;When a build page is loaded, the Vue app will request the raw JSON file from a separate S3 bucket directly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Read on for more info on how each of these components work and how they are used in GuardianForge.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pAB2_D4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/5d6f700d-bc25-4f99-8184-3770e4b149bf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAB2_D4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/5d6f700d-bc25-4f99-8184-3770e4b149bf" alt="https://cdn.brianmorrison.me/media/2021/5d6f700d-bc25-4f99-8184-3770e4b149bf"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  DynamoDB
&lt;/h3&gt;

&lt;p&gt;DynamoDB is a NoSQL solution in AWS. I wanted to use GuardianForge as an opportunity to get practice modelling a schema for Dynamo. The main idea was to use Dynamo as more of an index than a full database. I would store build summaries as stubs of the real data. This reduces the amount of data stored in Dynamo, which reduces cost on both storage and egress (data leaving AWS) charges. &lt;/p&gt;

&lt;p&gt;Dynamo is VERY fast if the schema is designed properly. I'll be covering my schema design process in a later entry in this series.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ugmmbGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/bf81b727-aaf7-4b5a-b5c8-49a536534571" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ugmmbGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/bf81b727-aaf7-4b5a-b5c8-49a536534571" alt="https://cdn.brianmorrison.me/media/2021/bf81b727-aaf7-4b5a-b5c8-49a536534571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#s3"&gt;
  &lt;/a&gt;
  S3
&lt;/h3&gt;

&lt;p&gt;I decided to use AWS S3, which is their solution for storing unstructured data (think like files &amp;amp; folders). I'm using it for two functions. &lt;/p&gt;

&lt;p&gt;The first is storing the front end Vue.js application files. S3 has static web hosting feature on its own, but in order to use my own domain name, I ended up connecting to it via a CloudFront CDN Instance (more on that in a moment).&lt;/p&gt;

&lt;p&gt;The second is the actual build data. Each build has a corresponding JSON file that's stored in S3 that contains all of the necessary build data to render it in the Vue app. Now why wouldn't I just store this in Dynamo? Well from a cost perspective, Dynamo generally charges more for storage and less for transmitting data, whereas S3 is the opposite. &lt;/p&gt;

&lt;p&gt;In general, the actual build files will not be hit too frequently (unless one gets really popular), so Id rather pay less for storing this data. In either case, I could put them behind the same CDN as the application files to increase performance and decrease actual hits to the file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xqQjPflO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/9f42ca3e-c8f6-4321-b23e-3db04df125cf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xqQjPflO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/9f42ca3e-c8f6-4321-b23e-3db04df125cf" alt="https://cdn.brianmorrison.me/media/2021/9f42ca3e-c8f6-4321-b23e-3db04df125cf"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudfront-cdn"&gt;
  &lt;/a&gt;
  CloudFront CDN
&lt;/h3&gt;

&lt;p&gt;Now in the previous section, I mentioned putting the app files behind CloudFront CDN. A CDN is a service that distributes static pages to various endpoints throughout the world. This results in decreased latency when a user hits those pages.&lt;/p&gt;

&lt;p&gt;Using the combination of CloudFront &amp;amp; S3, I can not only optimize performance for my users, but also add my own domain name &amp;amp; acquire a free SSL certificate using Amazon Certificate Manager (ACM). &lt;/p&gt;

&lt;p&gt;I can also setup some pretty fancy routing rules, which I end up doing when implementing social opengraph meta info. More on that in a later entry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7b3eEWjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/75eda23c-44f3-4d29-8110-a41b9f70a13c" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7b3eEWjH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/75eda23c-44f3-4d29-8110-a41b9f70a13c" alt="https://cdn.brianmorrison.me/media/2021/75eda23c-44f3-4d29-8110-a41b9f70a13c"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightsail"&gt;
  &lt;/a&gt;
  Lightsail
&lt;/h3&gt;

&lt;p&gt;Lightsail was one of those new services I wanted to try out. From my understanding, it lets you setup databases, servers, and containers at a fixed price in AWS. I'd worked with EC2, which is the server platform in AWS, so this was quote similar. &lt;/p&gt;

&lt;p&gt;Essentially I just had a Linux server that would run the API written in Go. Go was also another thing I wanted out of this project. I hadn't built a real world project with Go up 'til this point. When a Go app is compiled, it produces a native executable binary that can run on the same platform it was built on. So I ended up writing a Systemd Unit file to manage &amp;amp; run the service when the server starts. This was also something I hadn't done before, so it was a neat learning experience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UEaUW1fJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/4a17d5f6-a227-4071-8b2c-7383961b0072" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UEaUW1fJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/4a17d5f6-a227-4071-8b2c-7383961b0072" alt="https://cdn.brianmorrison.me/media/2021/4a17d5f6-a227-4071-8b2c-7383961b0072"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-gateway"&gt;
  &lt;/a&gt;
  API Gateway
&lt;/h3&gt;

&lt;p&gt;Now API Gateway was a pretty late addition to my infrastructure. The main reason (and its not a good one) was to add SSL to my API. This was admittedly just a band-aid instead of a permanent solution. I wanted to buy myself some time to figure out how I wanted to secure the API properly.&lt;/p&gt;

&lt;p&gt;API Gateway acts as an API management platform in AWS. So you get one URL and you can route requests to other URLs or services within AWS. I actually decided to leave API Gateway in the diagram because it becomes much more important later on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-storage-project-management-amp-continuous-deployment"&gt;
  &lt;/a&gt;
  Code Storage, Project Management &amp;amp; Continuous Deployment
&lt;/h2&gt;

&lt;p&gt;The final pieces of this puzzle are less about the infrastructure and more about managing things. While the obvious thought would be GitHub, I've been a huge fan of Azure DevOps for years. Name aside, it actually has very little to do with Azure. &lt;/p&gt;

&lt;p&gt;Ultimately this is personal preference. I like the UI in Azure DevOps, the more advanced project management tools, and the better ability to create pipelines for deploying and managing builds. &lt;/p&gt;

&lt;p&gt;Azure DevOps has built in support for sprints &amp;amp; breaking down work items into features or epics if needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fcMUtEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/7f552c6d-968a-4256-9bf4-da015d981815" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fcMUtEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/7f552c6d-968a-4256-9bf4-da015d981815" alt="https://cdn.brianmorrison.me/media/2021/7f552c6d-968a-4256-9bf4-da015d981815"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mdzXldd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f9fb5baa-61ff-49f6-ac41-301276637911" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mdzXldd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/f9fb5baa-61ff-49f6-ac41-301276637911" alt="https://cdn.brianmorrison.me/media/2021/f9fb5baa-61ff-49f6-ac41-301276637911"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now if I want to somehow link a commit to a work item, all I have to do is include the task number in the commit message and I can trace my comments to whatever tasks I have.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCNhoD6G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/a22e86ee-bade-47d7-81e6-bf5810f6566e" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCNhoD6G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/a22e86ee-bade-47d7-81e6-bf5810f6566e" alt="https://cdn.brianmorrison.me/media/2021/a22e86ee-bade-47d7-81e6-bf5810f6566e"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FLMsENW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c59c8933-3e86-4626-a51a-e333437f4e00" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FLMsENW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c59c8933-3e86-4626-a51a-e333437f4e00" alt="https://cdn.brianmorrison.me/media/2021/c59c8933-3e86-4626-a51a-e333437f4e00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally I can control my builds/deployments using their Pipelines feature. Pipelines is essentially a glorified task runner. I can pick from predefined step templates, or just write my own scripts to run at certain parts of the process (which I generally lean towards).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hMV7cg-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c4099414-d58a-46ac-972c-d18a100d0f09" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hMV7cg-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c4099414-d58a-46ac-972c-d18a100d0f09" alt="https://cdn.brianmorrison.me/media/2021/c4099414-d58a-46ac-972c-d18a100d0f09"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr7HAvyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c1435ec0-6bc2-4d77-a7f3-a07a5a59ada2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gr7HAvyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.brianmorrison.me/media/2021/c1435ec0-6bc2-4d77-a7f3-a07a5a59ada2" alt="https://cdn.brianmorrison.me/media/2021/c1435ec0-6bc2-4d77-a7f3-a07a5a59ada2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#looking-ahead"&gt;
  &lt;/a&gt;
  Looking Ahead
&lt;/h2&gt;

&lt;p&gt;Working on GuardianForge has helped me learn a bunch of interesting little tidbits that I didn't know before. I plan to identify some of the features of GuardianForge and create articles &amp;amp; videos on them, as well as overcoming some issues, in the near future. Happy coding!&lt;/p&gt;

</description>
      <category>go</category>
      <category>aws</category>
      <category>fullstack</category>
    </item>
    <item>
      <title>I18n and React, a simple and easy solution</title>
      <author>John B</author>
      <pubDate>Fri, 20 Aug 2021 15:40:53 +0000</pubDate>
      <link>https://dev.to/johnb8005/i18n-and-react-a-simple-and-easy-solution-3403</link>
      <guid>https://dev.to/johnb8005/i18n-and-react-a-simple-and-easy-solution-3403</guid>
      <description>&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@nexys/react-i18n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NY4B5u2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://badge.fury.io/js/%2540nexys%252Freact-i18n.svg" alt="package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Internationalization can be a headache and is oftentimes heavy; both in terms of code size and overhead.&lt;/p&gt;

&lt;p&gt;With this in mind, I wrote a very simple, lightweight package for react (7.1kB minified, no dependencies).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unconventional-features"&gt;
  &lt;/a&gt;
  Unconventional features:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#backend-independent"&gt;
  &lt;/a&gt;
  Backend independent
&lt;/h3&gt;

&lt;p&gt;It can be linked to any backend. I assume here that the list of translations is stored somewhere on the internet (typically served from the backend). &lt;/p&gt;

&lt;p&gt;Once loaded, the list of translations is stored in the local storage so that the application can be reloaded quickly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#untranslated-strings"&gt;
  &lt;/a&gt;
  Untranslated strings
&lt;/h3&gt;

&lt;p&gt;I have always found it hard to know which strings were translated and which were not. With this package, we store all the untranslated strings in an array in the local storage, so that you can see at anytime all the missing strings - all you need to do is browse through the application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;n&lt;/code&gt; languages&lt;/li&gt;
&lt;li&gt;string interpolation&lt;/li&gt;
&lt;li&gt;typescript&lt;/li&gt;
&lt;li&gt;0 dependencies&lt;/li&gt;
&lt;li&gt;Built with react in mind, but can be used with any JS framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#get-it"&gt;
  &lt;/a&gt;
  Get it!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/nexys-system/react-i18n"&gt;https://github.com/nexys-system/react-i18n&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NPM:  &lt;a href="https://www.npmjs.com/package/@nexys/react-i18n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NY4B5u2W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://badge.fury.io/js/%2540nexys%252Freact-i18n.svg" alt="package"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>i18n</category>
      <category>typescript</category>
      <category>package</category>
      <category>frontend</category>
    </item>
    <item>
      <title>AWS Certified Developer Associate DVA-C01 Exam Questions Part 4</title>
      <author>awslagi.com</author>
      <pubDate>Fri, 20 Aug 2021 15:40:35 +0000</pubDate>
      <link>https://dev.to/iam_awslagi/aws-certified-developer-associate-dva-c01-exam-questions-part-4-6j3</link>
      <guid>https://dev.to/iam_awslagi/aws-certified-developer-associate-dva-c01-exam-questions-part-4-6j3</guid>
      <description>&lt;p&gt;Source:&lt;/p&gt;

&lt;p&gt;For AWS: &lt;a href="https://www.awslagi.com"&gt;https://www.awslagi.com&lt;/a&gt; \&lt;br&gt;
For GCP: &lt;a href="https://www.gcp-examquestions.com"&gt;https://www.gcp-examquestions.com&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A legacy service has an XML-based SOAP interface. The Developer wants to expose the functionality of the service to external clients with the Amazon API Gateway. Which technique will accomplish this?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Create a RESTful API with the API Gateway; transform the incoming JSON into a valid XML message for the SOAP interface using mapping templates.
        B. Create a RESTful API with the API Gateway; pass the incoming JSON to the SOAP interface through an Application Load Balancer.
        C. Create a RESTful API with the API Gateway; pass the incoming XML to the SOAP interface through an Application Load Balancer.
        D. Create a RESTful API with the API Gateway; transform the incoming XML into a valid message for the SOAP interface using mapping templates.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A supplier is writing a new RESTful API for customers to query the status of orders. The customers requested the following API endpoint. &lt;a href="http://www.supplierdomain.com/status/customerID"&gt;http://www.supplierdomain.com/status/customerID&lt;/a&gt; Which of the following application designs meet the requirements? (Select two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Amazon SQS; Amazon SNS
        B. Elastic Load Balancing; Amazon EC2
        C. Amazon ElastiCache; Amazon Elacticsearch Service
        D. Amazon API Gateway; AWS Lambda
        E. Amazon S3; Amazon CloudFront
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A company developed a set of APIs that are being served through the Amazon API Gateway. The API calls need to be authenticated based on OpenID identity providers such as Amazon or Facebook. The APIs should allow access based on a custom authorization model. Which is the simplest and MOST secure design to use to build an authentication and authorization model for the APIs?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use Amazon Cognito user pools and a custom authorizer to authenticate and authorize users based on JSON Web Tokens.
        B. Build a OpenID token broker with Amazon and Facebook. Users will authenticate with these identity providers and pass the JSON Web Token to the API to authenticate each API call.
        C. Store user credentials in Amazon DynamoDB and have the application retrieve temporary credentials from AWS STS. Make API calls by passing user credentials to the APIs for authentication and authorization.
        D. Use Amazon RDS to store user credentials and pass them to the APIs for authentication and authorization.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A game stores user game data in an Amazon DynamoDB table. Individual users should not have access to other users’ game data. How can this be accomplished?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Encrypt the game data with individual user keys.
        B. Restrict access to specific items based on certain primary key values.
        C. Stage data in SQS queues to inject metadata before accessing DynamoDB.
        D. Read records from DynamoDB and discard irrelevant data client-side.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is developing an application that manages financial transactions. To improve security, multi-factor authentication (MFA) will be required as part of the login protocol. What services can the Developer use to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Amazon DynamoDB to store MFA session data, and Amazon SNS to send MFA codes
        B. Amazon Cognito with MFA
        C. AWS Directory Service
        D. AWS IAM with MFA enabled
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a deployment using AWS CodeDeploy, what is the run order of the hooks for in-place deployments?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Before Install -&amp;gt; Application Stop -&amp;gt; Application Start -&amp;gt; After Install
        B. Application Stop -&amp;gt; Before Install -&amp;gt; After Install -&amp;gt; Application Start
        C. Before Install -&amp;gt; Application Stop -&amp;gt; Validate Service -&amp;gt; Application Start
        D. Application Stop -&amp;gt; Before Install -&amp;gt; Validate Service -&amp;gt; Application Start
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon S3 has the following structure: S3://BUCKET/FOLDERNAME/FILENAME.zip Which S3 best practice would optimize performance with thousands of PUT request each second to a single bucket?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Prefix folder names with user id; for example, s3://BUCKET/2013-FOLDERNAME/FILENAME.zip
        B. Prefix file names with timestamps; for example, s3://BUCKET/FOLDERNAME/2013-26-05-15-00- 00-FILENAME.zip
        C. Prefix file names with random hex hashes; for example, s3://BUCKET/FOLDERNAME/23a6- FILENAME.zip
        D. Prefix folder names with random hex hashes; for example, s3://BUCKET/23a6-FOLDERNAME/FILENAME.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A static website is hosted in an Amazon S3 bucket. Several HTML pages on the site use JavaScript to download images from another Amazon S3 bucket. These images are not displayed when users browse the site. What is the possible cause for the issue?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. The referenced Amazon S3 bucket is in another region.
        B. The images must be stored in the same Amazon S3 bucket.
        C. Port 80 must be opened on the security group in which the Amazon S3 bucket is located.
        D. Cross Origin Resource Sharing must be enabled on the Amazon S3 bucket.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer has set up an Amazon Kinesis Stream with 4 shards to ingest a maximum of 2500 records per second. A Lambda function has been configured to process these records. In which order will these records be processed?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Lambda will receive each record in the reverse order it was placed into the stream following a LIFO (last-in, first-out) method
        B. Lambda will receive each record in the exact order it was placed into the stream following a FIFO (first-in, first-out) method.
        C. Lambda will receive each record in the exact order it was placed into the shard following a FIFO (first-in, first-out) method. There is no guarantee of order across shards.                 D. The Developer can select FIFO, (first-in, first-out), LIFO (last-in, last-out), random, or request specific records using the getRecords API.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is creating an application that needs to locate the public IPv4 address of the Amazon EC2 instance on which it runs. How can the application locate this information?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Get the instance metadata by retrieving http://169.254.169.254/latest/metadata/.
        B. Get the instance user data by retrieving http://169.254.169.254/latest/userdata/.
        C. Get the application to run IFCONFIG to get the public IP address.
        D. Get the application to run IPCONFIG to get the public IP address
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application under development is required to store hundreds of video files. The data must be encrypted within the application prior to storage, with a unique key for each video file. How should the Developer code the application?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use the KMS Encrypt API to encrypt the data. Store the encrypted data key and data.
        B. Use a cryptography library to generate an encryption key for the application. Use the encryption key to encrypt the data. Store the encrypted data.
        C. Use the KMS GenerateDataKey API to get a data key. Encrypt the data with the data key. Store the encrypted data key and data.
        D. Upload the data to an S3 bucket using server side-encryption with an AWS KMS key.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is writing a Linux-based application to run on AWS Elastic Beanstalk. Application requirements state that the application must maintain full capacity during updates while minimizing cost. Which type of Elastic Beanstalk deployment policy should the Developer specify for the environment?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Immutable
        B. Rolling
        C. All at Once
        D. Rolling with additional batch
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is creating a Lambda function and will be using external libraries that are not included in the standard Lambda libraries. What action would minimize the Lambda compute time consumed?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Install the dependencies and external libraries at the beginning of the Lambda function.
        B. Create a Lambda deployment package that includes the external libraries.
        C. Copy the external libraries to Amazon S3, and reference the external libraries to the S3 location.
        D. Install the external libraries in Lambda to be available to all Lambda functions.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During non-peak hours, a Developer wants to minimize the execution time of a full Amazon DynamoDB table scan without affecting normal workloads. The workloads average half of the strongly consistent read capacity units during non-peak hours. How would the Developer optimize this scan?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Use parallel scans while limiting the rate
        B. Use sequential scans
        C. Increase read capacity units during the scan operation
        D. Change consistency to eventually consistent during the scan operation
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is writing transactions into a DynamoDB table called “SystemUpdates” that has 5 write capacity units. Which option has the highest read throughput?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Eventually consistent reads of 5 read capacity units reading items that are 4 KB in size
        B. Strongly consistent reads of 5 read capacity units reading items that are 4 KB in size
        C. Eventually consistent reads of 15 read capacity units reading items that are 1 KB in size
        D. Strongly consistent reads of 15 read capacity units reading items that are 1 KB in size
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A deployment package uses the AWS CLI to copy files into any S3 bucket in the account, using access keys stored in environment variables. The package is running on EC2 instances, and the instances have been modified to run with an assumed IAM role and a more restrictive policy that allows access to only one bucket. After the change, the Developer logs into the host and still has the ability to write into all of the S3 buckets in that account. What is the MOST likely cause of this situation?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. An IAM inline policy is being used on the IAM role
        B. An IAM managed policy is being used on the IAM role
        C. The AWS CLI is corrupt and needs to be reinstalled
        D. The AWS credential provider looks for instance profile credentials last
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application is designed to use Amazon SQS to manage messages from many independent senders. Each sender’s messages must be processed in the order they are received. Which SQS feature should be implemented by the Developer?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Configure each sender with a unique MessageGroupId
        B. Enable MessageDeduplicationIds on the SQS queue
        C. Configure each message with unique MessageGroupIds.
        D. Enable ContentBasedDeduplication on the SQS queue
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An application has hundreds of users. Each user may use multiple devices to access the application. The Developer wants to assign unique identifiers to these users regardless of the device they use. Which of the following methods should be used to obtain unique identifiers?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Create a user table in Amazon DynamoDB as key-value pairs of users and their devices. Use these keys as unique identifiers.
        B. Use IAM-generated access key IDs for the users as the unique identifier, but do not store secret keys.
        C. Implement developer-authenticated identities by using Amazon Cognito, and get credentials for these identities.
        D. Assign IAM users and roles to the users. Use the unique IAM resource ID as the unique identifier.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer created a Lambda function for a web application backend. When testing the Lambda function from the AWS Lambda console, the Developer can see that the function is being executed, but there is no log data being generated in Amazon CloudWatch Logs, even after several minutes. What could cause this situation?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. The Lambda function does not have any explicit log statements for the log data to send it to CloudWatch Logs.
        B. The Lambda function is missing CloudWatch Logs as a source trigger to send log data.
        C. The execution role for the Lambda function is missing permissions to write log data to the CloudWatch Logs.
        D. The Lambda function is missing a target CloudWatch Log group.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An Amazon RDS database instance is used by many applications to look up historical data. The query rate is relatively constant. When the historical data is updated each day, the resulting write traffic slows the read query performance and affects all application users. What can be done to eliminate the performance impact on application users?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Make sure Amazon RDS is Multi-AZ so it can better absorb increased traffic.
        B. Create an RDS Read Replica and direct all read traffic to the replica.
        C. Implement Amazon ElastiCache in front of Amazon RDS to buffer the write traffic.
        D. Use Amazon DynamoDB instead of Amazon RDS to buffer the read traffic.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is trying to make API calls using SDK. The IAM user credentials used by the application require multi-factor authentication for all API calls. Which method the Developer use to access the multi-factor authentication protected API?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. GetFederationToken
        B. GetCallerIdentity
        C. GetSessionToken
        D. DecodeAutherizationMessage
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Developer is testing a Docker-based application that uses the AWS SDK to interact with Amazon DynamoDB. In the local development environment, the application has used IAM access keys. The application is now ready for deployment onto an ECS cluster. How should the application authenticate with AWS services in production?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Configure an ECS task IAM role for the application to use
        B. Refactor the application to call AWS STS AssumeRole based on an instance role
        C. Configure AWS access key/secret access key environment variables with new credentials
        D. Configure the credentials file with a new access key/secret access key
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An application is running on a cluster of Amazon EC2 instances. While trying to read objects stored within a single Amazon S3 bucket that are encrypted with server-side encryption with AWS KMS managed keys (SSE-KMS), the application receives the following error:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Service: AWSKMS; Status Code: 400; Error Code: ThrottlingException&lt;/p&gt;

&lt;p&gt;Which combination of steps should be taken to prevent this failure? (Choose two.)&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;            A. Contact AWS Support to request an AWS KMS rate limit increase.
            B. Perform error retries with exponential backoff in the application code.
            C. Contact AWS Support to request a S3 rate limit increase.
            D. Import a customer master key (CMK) with a larger key size.
            E. Use more than one customer master key (CMK) to encrypt S3 data.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Hint Answers: C,D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer has an e-commerce API hosted on Amazon ECS. Variable and spiking demand on the application is causing order processing to take too long. The application processes Amazon SQS queues. The ApproximateNumberOfMessagesVisible metric spikes at very high values throughout the day, which cause Amazon CloudWatch alarm breaches. Other ECS metrics for the API containers are well within limits. What can the Developer implement to improve performance while keeping costs low?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Target tracking scaling policy
        B. Docker Swarm
        C. Service scheduler
        D. Step scaling policy
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer wants to build an application that will allow new users to register and create new user accounts. The application must also allow users with social media accounts to log in using their social media credentials. Which AWS service or feature can be used to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. AWS IAM
        B. Amazon Cognito identity pools
        C. Amazon Cognito user pools
        D. AWS Directory Service
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is developing a web application that allows its employees to upload a profile picture to a private Amazon S3 bucket. There is no size limit for the profile pictures, which should be displayed every time an employee logs in. For security reasons, the pictures cannot be publicly accessible. What is a viable long-term solution for this scenario?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Generate a pre-signed URL when a picture is uploaded. Save the URL in an Amazon DynamoDB table. Return the URL to the browser when the employee logs in.
        B. Save the picture’s S3 key in an Amazon DynamoDB table. Create an Amazon S3 VPC endpoint to allow the employees to download pictures once they log in.
        C. Encode a picture using base64. Save the base64 string in an Amazon DB table. Allow the browser to retrieve the string and convert it to a picture.
        D. Save the picture’s S3 key in an Amazon DynamoDB table. Use a function to generate a presigned URL every time an employee logs in. Return the URL to the browser.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is going to deploy an AWS Lambda function that requires significant CPU utilization. Which approach will MINIMIZE the average runtime of the function?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Deploy the function into multiple AWS Regions.
        B. Deploy the function into multiple Availability Zones.
        C. Deploy the function using Lambda layers.
        D. Deploy the function with its memory allocation set to the maximum amount.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has a legacy application that was migrated to a fleet of Amazon EC2 instances. The application stores data in a MySQL database that is currently installed on a single EC2 instance. The company has decided to migrate the database from the EC2 instance to MySQL on Amazon EDS. What should the Developer do to update the application to support data storage in Amazon RDS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Update the database connection parameters in the application to point to the new RDS instance.
        B. Add a script to the EC2 instance that implements an AWS SDK for requesting database credentials.
        C. Create a new EC2 instance with an IAM role that allows access to the new RDS database.
        D. Create an AWS Lambda function that will route traffic, from the EC2 instance to the RDS database.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is working on an AWS Lambda function that accesses Amazon DynamoDB. The Lambda function must retrieve an item and update some of its attributes, or create the item if it does not exist. The Lambda function has access to the primary key. Which IAM permissions should the Developer request for the Lambda function to achieve this functionality?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. dynamodb:DeleteItem
        dynamodb:GetItem
        dynamodb:PutItem
        B. dynamodb:UpdateItem
        dynamodb:GetItem
        dynamodb:DescribeTable
        C. dynamodb:GetRecords
        dynamodb:PutItem
        dynamodb:UpdateTable
        D. dynamodb:UpdateItem
        dynamodb:GetItem
        dynamodb:PutItem
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A Developer is storing sensitive data generated by an application in Amazon S3. The Developer wants to encrypt the data at rest. A company policy requires an audit trail of when the master key was used and by whom. Which encryption option will meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        A. Server-side encryption with Amazon S3 managed keys (SSE-S3)
        B. Server-side encryption with AWS KMS managed keys (SSE-KMS)
        C. Server-side encryption with customer-provided keys (SSE-C)
        D. Server-side encryption with self-managed keys
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hint Answers: B&lt;/p&gt;

</description>
      <category>awslagi</category>
      <category>aws</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>Microservice Architecture Vs Monolithic Architecture</title>
      <author>Isaac Tonyl</author>
      <pubDate>Fri, 20 Aug 2021 15:33:22 +0000</pubDate>
      <link>https://dev.to/isaacdevs/microservice-architecture-vs-monolithic-architecture-jbb</link>
      <guid>https://dev.to/isaacdevs/microservice-architecture-vs-monolithic-architecture-jbb</guid>
      <description>&lt;p&gt;The success of a new software product hugely depends on the type of architecture that is adopted by an organization. For many decades the monolithic architecture has been the most widely adopted architecture, however with the recent development of new technologies Microservices architecture has also received huge support especially among the FANG companies.&lt;br&gt;
MONOLITHIC ARCHITECURE.&lt;br&gt;
The name Monolith was adopted from an ancient term that was used to refer to a single block of stone. This architecture categorizes a software product into three distinct but highly interdependent parts: the database, the client side interface and the server side component (backend). The aforementioned parts are unified by a set of functions that ensure seamless communication between each of the sections to achieve the intended goal.&lt;br&gt;
Although this architecture is friendly and easy to adopt among small teams especially in startups, it has also a number of cons;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Any developer who intends to make changes to the Codebase must redeploy the new version of the software to the server. This poses a great risk to an organization or business especially if inexperienced developers have to make the changes.&lt;/li&gt;
&lt;li&gt;Limited reusability of code makes this architecture less efficient.&lt;/li&gt;
&lt;li&gt;Scaling a Software product based on this architecture can be a time consuming process.&lt;/li&gt;
&lt;li&gt;In cases of huge products involving millions of lines of code and hundreds of components, it may be overwhelming to manage such a product especially if a company has to hire new inexperienced developers developers.&lt;/li&gt;
&lt;li&gt;It is also impossible to adopt a new technology without rewriting the whole application from scratch, this is costly in terms of time and money.
Pros of Monolithic Architecture.
Fairly easy to develop and understand even among new developers.
As compared to the Microservice the monolithic architecture experiences less network latency and security related problems.
MICROSERVICES ARCHITECTURE.
It is a new trend in Software development that adopts DevOps principles where by an application is made up of small services that communicate with each other through various common protocols such as the HTTP. Each component or service is loosely coupled and more often than not each service may run on it own database, this offers more flexibility.
Furthermore, each services is defined by its own functionality but work together through well managed distributed system.
Why You Should Adopt this Architecture.
This architecture offer more:&lt;/li&gt;
&lt;li&gt;Flexibility as compares to its counterpart, since developers ca n make changes , fix bugs and updates without worrying about the entire application.&lt;/li&gt;
&lt;li&gt;Increased productivity among Software developers since the ability to develop components independently means that tasks can be distributed equally among a small team of developers.&lt;/li&gt;
&lt;li&gt;The overall Downtime of a Product in cases such as when making updates or fixing a bug is reduced since this can be resolved by just redeploying a single service without affecting the entire application.&lt;/li&gt;
&lt;li&gt;Since these services behave as standalone applications that means different programming languages can be adopted when building different services, this improves Scalability and encourages easy adoption of new technologies.
The benefits of Microservice architecture outwheigh those of the monolithic architecture and besides it is a widely discussed topic on different platforms. However, any organization that wants to adopt this model needs to carefully consider whether it suits their needs an whether they have the human resources to adopt it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@andersjilden?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Anders Jildén&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/architecture?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>devops</category>
      <category>apis</category>
    </item>
    <item>
      <title>Optimizing React apps: Hardcore edition</title>
      <author>Wojciech Maj</author>
      <pubDate>Fri, 20 Aug 2021 15:30:52 +0000</pubDate>
      <link>https://dev.to/wojtekmaj/optimizing-react-app-hardcore-edition-2h1</link>
      <guid>https://dev.to/wojtekmaj/optimizing-react-app-hardcore-edition-2h1</guid>
      <description>&lt;p&gt;You've heard of minifying. You've heard of lazy-loading. You've heard of tree shaking. You've done it all. Or did you? Here are some optimizations you may have never heard of before. Until now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enable-loose-transformations-in-raw-babelpresetenv-endraw-"&gt;
  &lt;/a&gt;
  Enable "loose" transformations in &lt;code&gt;@babel/preset-env&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Enabling &lt;a href="http://2ality.com/2015/12/babel6-loose-mode.html"&gt;"loose" transformations&lt;/a&gt; may make your application considerably smaller. I &lt;strong&gt;shaved off roughly 230.9 KB, or 16.2%&lt;/strong&gt; from my bundle!&lt;/p&gt;

&lt;p&gt;This, however, comes at a price: your application may break, both when enabling, and disabling these transformations.&lt;/p&gt;

&lt;p&gt;In my case, the only fix I needed to do was related to iterating over &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; (&lt;code&gt;form.elements&lt;/code&gt;). I was no longer able to do e.g. &lt;code&gt;[...form.elements]&lt;/code&gt;, I had to swap it out for &lt;code&gt;Array.from(form.elements)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Still tempted by the large savings? Give it a go by enabling &lt;code&gt;loose&lt;/code&gt; flag in Babel config:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "presets": [
&lt;span class="gd"&gt;-   "@babel/preset-env"
&lt;/span&gt;&lt;span class="gi"&gt;+   ["@babel/preset-env", {
+     "loose": true
+   }]
&lt;/span&gt;  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-proptypes-from-your-production-bundle"&gt;
  &lt;/a&gt;
  Remove prop-types from your production bundle
&lt;/h2&gt;

&lt;p&gt;PropTypes are incredibly helpful during development, but they are of no use for your users. You can use &lt;code&gt;babel-plugin-transform-react-remove-prop-types&lt;/code&gt; to remove PropTypes from your bundle.&lt;/p&gt;

&lt;p&gt;To install, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev babel-plugin-transform-react-remove-prop-types
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D babel-plugin-transform-react-remove-prop-types
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add it to your Babel config like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "env": {
    "production": {
      "plugins": [
&lt;span class="gi"&gt;+        "transform-react-remove-prop-types"
&lt;/span&gt;      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Savings will vary depending on the size of your app. In my case, &lt;strong&gt;I shaved off 16.5 KB or about 1.2%&lt;/strong&gt; from my bundle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consider-raw-unsafewrap-endraw-mode"&gt;
  &lt;/a&gt;
  Consider &lt;code&gt;unsafe-wrap&lt;/code&gt; mode
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;unsafe-wrap&lt;/code&gt; mode is, as the name states, a bit &lt;em&gt;unsafe&lt;/em&gt; for the reasons &lt;a href="https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types#options"&gt;well explained in plugin's docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, in my case, PropTypes were not accessed from anywhere and the application worked flawlessly.&lt;/p&gt;

&lt;p&gt;To enable this mode, you need to change your Babel config like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "env": {
    "production": {
      "plugins": [
&lt;span class="gd"&gt;-       "transform-react-remove-prop-types"
&lt;/span&gt;&lt;span class="gi"&gt;+       ["transform-react-remove-prop-types", {
+         "mode": "unsafe-wrap"
+       }]
&lt;/span&gt;      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, &lt;strong&gt;I shaved off a total of 35.9 KB or about 2.5%&lt;/strong&gt; from my bundle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enable-new-jsx-transform"&gt;
  &lt;/a&gt;
  Enable new JSX transform
&lt;/h2&gt;

&lt;p&gt;Enabling new JSX transform will change the way Babel React preset transpiles JSX to pure JavaScript. &lt;/p&gt;

&lt;p&gt;I explained the benefits of enabling it in my other article: &lt;a href="https://dev.to/wojtekmaj/how-to-enable-automatic-runtime-in-react-17-with-babel-preset-react-52l"&gt;How to enable new JSX transform in React 17?&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I highly recommend you to have a read. If that's TL;DR though, all you need to do for quick results is make sure that &lt;code&gt;@babel/core&lt;/code&gt; and &lt;code&gt;@babel/preset-env&lt;/code&gt; in your project are both on version &lt;code&gt;7.9.0&lt;/code&gt; or newer, and change your Babel config like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "presets": [
&lt;span class="gd"&gt;-   "@babel/preset-react"
&lt;/span&gt;&lt;span class="gi"&gt;+   ["@babel/preset-react", {
+     "runtime": "automatic"
+   }]
&lt;/span&gt;  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And poof! Roughly &lt;strong&gt;10.5 KB, or 0.7%&lt;/strong&gt; of my bundle was gone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minify-your-html"&gt;
  &lt;/a&gt;
  Minify your HTML
&lt;/h2&gt;

&lt;p&gt;Chances are your bundler is smart enough to minify JavaScript by default when ran in production mode. But did you know you can minify HTML, too? And JavaScript &lt;em&gt;in that HTML&lt;/em&gt; as well?&lt;/p&gt;

&lt;p&gt;You're in? Great! Here's what you need to do:&lt;/p&gt;

&lt;p&gt;Install &lt;code&gt;html-minifier-terser&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev html-minifier-terser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D html-minifier-terser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and change your Webpack config to use it. Define minifier options:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;minifyOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Defaults used by HtmlWebpackPlugin&lt;/span&gt;
  &lt;span class="na"&gt;collapseWhitespace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;removeComments&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;removeRedundantAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;removeScriptTypeAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;removeStyleLinkTypeAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useShortDoctype&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Custom&lt;/span&gt;
  &lt;span class="na"&gt;minifyCSS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;minifyJS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and use them in &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt;…:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;    new HtmlWebpackPlugin({
&lt;span class="gi"&gt;+     minify: minifyOptions,
&lt;/span&gt;      template: 'index.html',
    }),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;…as well as in &lt;code&gt;CopyWebpackPlugin&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;minify&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;html-minifier-terser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  plugins: [
    new CopyWebpackPlugin({
      patterns: [
        {
          from: 'index.html',
          to: '',
&lt;span class="gi"&gt;+         transform(content) {
+           return minify(content.toString(), minifyOptions);
+         },
&lt;/span&gt;        },
      ]
    }),
  ],
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#use-raw-babelpluginstyledcomponents-endraw-raw-styledcomponents-endraw-users-only"&gt;
  &lt;/a&gt;
  Use &lt;code&gt;babel-plugin-styled-components&lt;/code&gt; (&lt;code&gt;styled-components&lt;/code&gt; users only)
&lt;/h2&gt;

&lt;p&gt;If you use &lt;code&gt;styled-components&lt;/code&gt;, make sure to use &lt;a href="https://styled-components.com/docs/tooling#babel-plugin"&gt;their Babel plugin&lt;/a&gt;, too. Not only it adds minification of styles, but also adds support for server-side rendering, and provides with a nicer debugging experience.&lt;/p&gt;

&lt;p&gt;To install, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev babel-plugin-styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add -D babel-plugin-styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and add it to your Babel config like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "env": {
    "production": {
      "plugins": [
&lt;span class="gi"&gt;+        "styled-components"
&lt;/span&gt;      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will shave off a few kilobytes on its own, but due to added &lt;code&gt;displayName&lt;/code&gt;s the savings will not be so apparent just yet. So now…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disable-raw-displayname-endraw-in-production-builds"&gt;
  &lt;/a&gt;
  Disable &lt;code&gt;displayName&lt;/code&gt; in production builds
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;babel.config.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "env": {
    "production": {
      "plugins": [
&lt;span class="gi"&gt;+       ["styled-components", {
+         "displayName": false,
+       }]
&lt;/span&gt;      ]
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doing so in my app gave me a &lt;strong&gt;surprisingly large savings of 50.4 KB or 3.5%&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-raw-createglobalstyle-endraw-contents-in-raw-css-endraw-raw-styledcomponents-endraw-users-only"&gt;
  &lt;/a&gt;
  Wrap &lt;code&gt;createGlobalStyle&lt;/code&gt; contents in &lt;code&gt;css&lt;/code&gt; (&lt;code&gt;styled-components&lt;/code&gt; users only)
&lt;/h2&gt;

&lt;p&gt;Apparently, while &lt;code&gt;babel-plugin-styled-components&lt;/code&gt; is capable of minifying styles, it doesn't minify anything within &lt;code&gt;createGlobalStyle&lt;/code&gt;. So, chances are you're shipping your app with tons of unnecessary whitespace.&lt;/p&gt;

&lt;p&gt;Remove them by simply wrapping &lt;code&gt;createGlobalStyle&lt;/code&gt; contents in &lt;code&gt;css&lt;/code&gt; as well, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;-const GlobalStyle = createGlobalStyle`
&lt;/span&gt;&lt;span class="gi"&gt;+const GlobalStyle = createGlobalStyle`${css`
&lt;/span&gt;   // Your global style goes here
&lt;span class="gd"&gt;-`;
&lt;/span&gt;&lt;span class="gi"&gt;+`}`;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#replace-raw-reactlifecyclescompat-endraw-with-an-empty-mock"&gt;
  &lt;/a&gt;
  Replace &lt;code&gt;react-lifecycles-compat&lt;/code&gt; with an empty mock
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;react-lifecycles-compat&lt;/code&gt; is a dependency that polyfills lifecycle methods introduced in React 16.3 so that the components polyfilled would work with older React versions. Some dependencies may still use this polyfill in order not to break older React version support.&lt;/p&gt;

&lt;p&gt;If you use React 16.3 or newer, you don't need &lt;code&gt;react-lifecycles-compat&lt;/code&gt;. You can replace it with a mocked version like so:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;__mocks__/reactLifecyclesCompatMock.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;polyfill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  resolve: {
    alias: {
&lt;span class="gi"&gt;+     'react-lifecycles-compat': path.resolve(__dirname, '__mocks__', 'reactLifecyclesCompatMock.js'),
&lt;/span&gt;    },
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doing so &lt;strong&gt;will save you 2.5 KB&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#replace-raw-classnames-endraw-with-raw-clsx-endraw-"&gt;
  &lt;/a&gt;
  Replace &lt;code&gt;classnames&lt;/code&gt; with &lt;code&gt;clsx&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;classnames&lt;/code&gt; is not a large dependency, only 729 bytes, but &lt;code&gt;clsx&lt;/code&gt; is fully compatible with &lt;code&gt;classnames&lt;/code&gt; at just 516 bytes. So, replacing &lt;code&gt;classnames&lt;/code&gt; with &lt;code&gt;clsx&lt;/code&gt; in your app &lt;strong&gt;will save you 213 bytes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Chances are you'll have &lt;em&gt;both&lt;/em&gt; &lt;code&gt;classnames&lt;/code&gt; and &lt;code&gt;clsx&lt;/code&gt; in your app, e.g. because dependencies may require one or the other. In this case, you can use Webpack's &lt;code&gt;alias&lt;/code&gt; to get rid of &lt;code&gt;classnames&lt;/code&gt; from your bundle:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  resolve: {
    alias: {
&lt;span class="gi"&gt;+     classnames: 'clsx',
&lt;/span&gt;    },
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doing so &lt;strong&gt;will save you 729 bytes&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#missing-something"&gt;
  &lt;/a&gt;
  Missing something?
&lt;/h2&gt;

&lt;p&gt;Please share your ideas for not-so-obvious optimizations in the comments below!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webpack</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Simple work with Git Fork</title>
      <author>Dawid</author>
      <pubDate>Fri, 20 Aug 2021 15:26:19 +0000</pubDate>
      <link>https://dev.to/daw888/simple-work-with-git-fork-3cdj</link>
      <guid>https://dev.to/daw888/simple-work-with-git-fork-3cdj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;"A fork is a copy of a repository that you manage. Forks let you make changes to a project without affecting the original repository."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/about-forks"&gt;Link for github docs&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#on-the-start"&gt;
  &lt;/a&gt;
  On the start
&lt;/h1&gt;

&lt;p&gt;We have 2 repos&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;original&lt;/strong&gt; &lt;code&gt;github/OWNER/original&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;forked&lt;/strong&gt; &lt;code&gt;github/YOU/forked&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In forked repo we can check our settings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the next we need to add original repo as &lt;strong&gt;upstream&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we should see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; origin    https://github.com/YOUR_USERNAME/YOUR_FORK.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#get-changes-from-original-to-forked"&gt;
  &lt;/a&gt;
  Get changes from original to forked
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git fetch upstream
git checkout main
git merge upstream/main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#creating-pull-request-from-forked-to-original"&gt;
  &lt;/a&gt;
  Creating Pull Request from forked to original
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# FORKED repo&lt;/span&gt;

&lt;span class="c"&gt;# make changes&lt;/span&gt;

git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"message"&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then go to github and create Pull Request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qooWUGPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dit11pxe9tf2j5oq9mr6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qooWUGPe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dit11pxe9tf2j5oq9mr6.png" alt="PR on github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h1&gt;

&lt;p&gt;To keep workflow clean: &lt;/p&gt;

&lt;p&gt;✅ original → forked&lt;/p&gt;

&lt;p&gt;⛔ forked → original (do it only when you are sure what are you doing!)&lt;/p&gt;

</description>
      <category>git</category>
      <category>fork</category>
      <category>github</category>
      <category>bitbucket</category>
    </item>
  </channel>
</rss>
