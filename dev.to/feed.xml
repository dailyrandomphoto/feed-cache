<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The #1 tip to familiarize with new JavaScript codebases</title>
      <author>Kevin Peters</author>
      <pubDate>Fri, 28 May 2021 09:04:06 +0000</pubDate>
      <link>https://dev.to/igeligel/the-1-tip-to-familiarize-with-new-javascript-codebases-2m1</link>
      <guid>https://dev.to/igeligel/the-1-tip-to-familiarize-with-new-javascript-codebases-2m1</guid>
      <description>&lt;h1&gt;
  &lt;a href="#the-1-tip-to-familiarize-with-new-javascript-codebases"&gt;
  &lt;/a&gt;
  The #1 tip to familiarize with new JavaScript Codebases
&lt;/h1&gt;

&lt;p&gt;In my years as a software engineer, I have probably looked at hundreds of codebases. Too many to count. I struggled a lot with understanding where the relevant code is most of the time. Normally, asking for help what I should look for and guidance in tickets will bring me forward. Slowly and surely I will understand what the code is doing. And you will too. Some people are better at this and some people will be slow. No shame. Most code is complex. But I found a simple tool that will make it easier for you. It is called &lt;a href="https://github.com/simonrenoult/code-complexity"&gt;code-complexity&lt;/a&gt; and you can use it as the following code snippet shows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx code-complexity &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--limit&lt;/span&gt; 20 &lt;span class="nt"&gt;--sort&lt;/span&gt; ratio
&lt;span class="c"&gt;# You can also use --filter '**/*.js' to use glob patterns to filter files&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will return an output like the following:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;file&lt;/th&gt;
&lt;th&gt;complexity&lt;/th&gt;
&lt;th&gt;churn&lt;/th&gt;
&lt;th&gt;ratio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src/cli.ts&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;824&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;test/code-complexity.test.ts&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;749&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.idea/workspace.xml&lt;/td&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;738&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This will show the biggest and most changed files. The likelihood that these files are crucial for understanding the application is quite high. Read through them and understand them. What this data means in detail will be explained in this blog article now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complexity-and-churn"&gt;
  &lt;/a&gt;
  Complexity and Churn
&lt;/h2&gt;

&lt;p&gt;In this chapter, I will explain to you the concepts of complexity and churn when it comes to code. It is the baseline to understand the technique we are using here to improve your understanding of a codebase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-complexity"&gt;
  &lt;/a&gt;
  What is Complexity?
&lt;/h3&gt;

&lt;p&gt;Complexity can be defined in different ways. The level of nesting of functions is normally used as a measurement of how complex code is. Code with small functions and composed behavior is normally more readable and easy to understand. So we could say that complex code also consists of a few functions that are far nested and it is mostly true. Nesting is hard to track though so we could find another metric somehow.&lt;/p&gt;

&lt;p&gt;With long functions normally there comes large files as well. People tend to put everything into one file if they also put a lot into one function. So in theory we could take the lines of code as a measurement as well. There are a lot of utility packages out there that solve this problem. One of these tools is called &lt;a href="https://github.com/flosse/sloc#readme"&gt;sloc&lt;/a&gt;. It will output the number of lines of code within a file. But do not use it directly. The tool I mentioned before includes this by default.&lt;/p&gt;

&lt;p&gt;So in conclusion we can say complex files are either super nested or super long. One of these things normally comes with the other so that’s great to hear because analyzing the length of a file tends to be easier than nesting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-churn"&gt;
  &lt;/a&gt;
  What is Churn?
&lt;/h3&gt;

&lt;p&gt;Churn is a bit more complicated to explain. But let us start somewhere. A churned file is a file that has a lot of changes. But what does this mean?&lt;/p&gt;

&lt;p&gt;A lot of changes to a file happens when yeah, a lot of people have changed the file. But how can someone measure that? The git history is telling us how often a file was checked in. So we can make sure with that how likely a file is to be changed. Normally this means files of this type are the main point of the application. A problem that occurs though is that often there are configuration files included here, but you can simply exclude them for this analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-complexity-churn-teach-us"&gt;
  &lt;/a&gt;
  What can Complexity + Churn teach us?
&lt;/h3&gt;

&lt;p&gt;Now, after learning what complexity and churn mean, we can focus on the combination of them. Files that normally charge a lot but are also really complex should be normally refactored. And most of the time, with that, it is natural that these files might be the core of the application. The basic logic is written in them directly or in files related to that. So let us check how we can analyze that further.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checking-the-files-in-detail"&gt;
  &lt;/a&gt;
  Checking the files in detail
&lt;/h2&gt;

&lt;p&gt;My technique to check the files in detail is quite simple. I first look over the file and check what the exported functions are called. Ideally, I write them down. Internal functions are firstly not important to understand. Once I have an overview of all the exported functions I foremost check if there are any unit tests. If the functions have parameters as well, then I will try to write them down as well. With TypeScript or Flow types, this gets, even more, easier to get an overall feeling of the structure.\&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_UBs29Aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3cu6ecs975isakftm4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_UBs29Aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zx3cu6ecs975isakftm4.gif" alt="Spongebob checking the code in detail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unit tests are a good first approach to see how the functions are working. To understand functions you probably just need to look at the input, the function name, and what it is returning. In most of the cases, types even support you with that, and unit tests will show you edge cases for the function and how it can be used. So that’s mostly enough to understand the function. At least if you know the programming language. If you want to get deeper into the function feel free to, but you do not have to do that. Why? Explained in the next chapter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-not-understand-every-detail"&gt;
  &lt;/a&gt;
  Why do not understand every detail?
&lt;/h2&gt;

&lt;p&gt;Understanding a function in detail can be important. But during onboarding, a lot of other things are more important. You will not be able to understand every bit of the application within a short time frame, but understanding the core parts should give you a track of where the core logic of the application is executed.&lt;/p&gt;

&lt;p&gt;With that knowledge, you can jump into the first issues for you. Ideally, the team has prepared smaller tasks in the codebase to give you a nice onboarding experience. If that is not the case, ask your manager or senior engineers in your team if any of the current issues is suitable for you. Make sure to transmit your gained knowledge of the codebase though so they understand your knowledge level.&lt;/p&gt;

&lt;p&gt;A good idea for the first issue is also to do pair programming with other software engineers from the team. Make sure to tell them that you want to type mostly and they should be more of supervisors so you learn how to navigate the codebase by yourself. Because of that guided onboarding or easier tickets, you do not have to jump into details. The details of the code will be discovered now during the implementation phase of fixing bugs or adding features. The more tickets you will do the more you learn about the codebase in detail. But look back at churn and complexity because it can change over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debugging-the-details"&gt;
  &lt;/a&gt;
  Debugging the details?
&lt;/h2&gt;

&lt;p&gt;Having to work on the code base now will also involve another bigger thing: Debugging. With your first tasks, you will probably learn already how to run the application locally, run unit tests, and integration or E2E tests if these exist. These become vital once you implement the feature because adding tests will make sure your application is working as expected. Often these tests cover a lot of code though and are kind of abstract. In these cases, you have to learn to debug your code. Because most of the tests are being run in a Node.js environment we will have a quick peek into how to debug Node.js-based applications. Most engineers use &lt;code&gt;console.log&lt;/code&gt; to debug and it is completely valid. But if you need to follow larger structures of code I can recommend using a proper debugger. JavaScript and TypeScript support the &lt;code&gt;debugger&lt;/code&gt; keyword, nevertheless, it is a bit tricky to run your test suite and have a nice debugger experience because within Node.js it is a bit difficult to spawn a browser instance’s developer tools and connect it to the program. Another option would be to use your IDE or Editor to connect a debugger supported by your coding user interface. For example, Visual Studio Code supports debugging Node.js applications directly in the IDE. A guide on how &lt;a href="https://code.visualstudio.com/docs/nodejs/nodejs-debugging"&gt;"Node.js debugging in VS Code" can be found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Debugging is an art in itself. You should get comfortable using breakpoints and what the debugging functions "step over" and "step into" mean. These will be extremely helpful when debugging nested functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-examples"&gt;
  &lt;/a&gt;
  Some examples
&lt;/h2&gt;

&lt;p&gt;In this chapter, I will go through some codebases with this technique to explain where the main core of the application is and how the process mentioned above can help you to get familiar with the code base quicker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blitzjs"&gt;
  &lt;/a&gt;
  Blitz.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/blitz-js/blitz"&gt;Blitz.js&lt;/a&gt; is a framework built on top of Next.js. It describes itself as the Ruby on Rails for JavaScript/TypeScript. The team is working for more than a year on this framework and it would be quite interesting to see where the core of their logic is being placed.&lt;/p&gt;

&lt;p&gt;The first step, of course, is to clone the repository to a local folder and then run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx code-complexity &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--limit&lt;/span&gt; 20 &lt;span class="nt"&gt;--sort&lt;/span&gt; ratio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will output the following table:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;file&lt;/th&gt;
&lt;th&gt;complexity&lt;/th&gt;
&lt;th&gt;churn&lt;/th&gt;
&lt;th&gt;ratio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;nextjs/packages/next/compiled/webpack/bundle5.js&lt;/td&gt;
&lt;td&gt;91501&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;91501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nextjs/packages/next/compiled/webpack/bundle5.js&lt;/td&gt;
&lt;td&gt;91501&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;91501&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nextjs/packages/next/compiled/webpack/bundle4.js&lt;/td&gt;
&lt;td&gt;74436&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;74436&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/cli/src/commands/generate.ts&lt;/td&gt;
&lt;td&gt;228&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;6384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/cli/src/commands/new.ts&lt;/td&gt;
&lt;td&gt;177&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;6195&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/generator/src/generators/app-generator.ts&lt;/td&gt;
&lt;td&gt;235&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;5405&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/generator/src/generator.ts&lt;/td&gt;
&lt;td&gt;283&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;5377&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/server/src/stages/rpc/index.ts&lt;/td&gt;
&lt;td&gt;184&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;5152&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/server/test/dev.test.ts&lt;/td&gt;
&lt;td&gt;190&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;5130&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/core/src/types.ts&lt;/td&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;4480&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/server/src/next-utils.ts&lt;/td&gt;
&lt;td&gt;176&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;4400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/generator/templates/app/app/pages/index.tsx&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;4320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/server/src/config.ts&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;4292&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/core/src/use-query-hooks.ts&lt;/td&gt;
&lt;td&gt;184&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;4048&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nextjs/test/integration/file-serving/test/index.test.js&lt;/td&gt;
&lt;td&gt;3561&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3561&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;examples/auth/app/pages/index.tsx&lt;/td&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;3360&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/cli/src/commands/db.ts&lt;/td&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;3300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.github/workflows/main.yml&lt;/td&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;3168&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/cli/test/commands/new.test.ts&lt;/td&gt;
&lt;td&gt;141&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;2679&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;examples/store/app/pages/index.tsx&lt;/td&gt;
&lt;td&gt;181&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;2534&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/display/src/index.ts&lt;/td&gt;
&lt;td&gt;158&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;2528&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;As you can see, there are a lot of unrelated files that could be filtered out like the compiled folder but for an initial analysis, this is enough.&lt;/p&gt;

&lt;p&gt;We can see multiple directories being important here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;packages/cli&lt;/li&gt;
&lt;li&gt;packages/generator&lt;/li&gt;
&lt;li&gt;packages/server&lt;/li&gt;
&lt;li&gt;packages/core&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we get a task we would at least know already where to look for related code. Initially, I would try to understand the &lt;code&gt;packages/core&lt;/code&gt; files to understand what they are doing. Understand the tests if they exist and then you should have a good grasp of what Blitz is doing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reactjs"&gt;
  &lt;/a&gt;
  React.js
&lt;/h3&gt;

&lt;p&gt;React.js is a frontend framework that almost every web developer knows by now. What most people do not know is how the codebase is structured and what are the core parts. So let us have a look at it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx code-complexity &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--limit&lt;/span&gt; 20 &lt;span class="nt"&gt;--sort&lt;/span&gt; ratio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the command will lead to the following result:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;file&lt;/th&gt;
&lt;th&gt;complexity&lt;/th&gt;
&lt;th&gt;churn&lt;/th&gt;
&lt;th&gt;ratio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;packages/eslint-plugin-react-hooks/**tests**/ESLintRuleExhaustiveDeps-test.js&lt;/td&gt;
&lt;td&gt;7742&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;394842&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react/src/**tests**/ReactProfiler-test.internal.js&lt;/td&gt;
&lt;td&gt;4002&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;380190&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberWorkLoop.new.js&lt;/td&gt;
&lt;td&gt;2373&lt;/td&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;td&gt;329847&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberWorkLoop.old.js&lt;/td&gt;
&lt;td&gt;2373&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;270522&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-dom/src/server/ReactPartialRenderer.js&lt;/td&gt;
&lt;td&gt;1379&lt;/td&gt;
&lt;td&gt;122&lt;/td&gt;
&lt;td&gt;168238&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberCommitWork.new.js&lt;/td&gt;
&lt;td&gt;2262&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;160602&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-devtools-shared/src/backend/renderer.js&lt;/td&gt;
&lt;td&gt;2952&lt;/td&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;159408&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberBeginWork.new.js&lt;/td&gt;
&lt;td&gt;2903&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;153859&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;scripts/rollup/bundles.js&lt;/td&gt;
&lt;td&gt;760&lt;/td&gt;
&lt;td&gt;199&lt;/td&gt;
&lt;td&gt;151240&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberHooks.new.js&lt;/td&gt;
&lt;td&gt;2622&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;146832&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-dom/src/client/ReactDOMHostConfig.js&lt;/td&gt;
&lt;td&gt;1018&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;142520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberHooks.old.js&lt;/td&gt;
&lt;td&gt;2622&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;131100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/**tests**/ReactHooks-test.internal.js&lt;/td&gt;
&lt;td&gt;1641&lt;/td&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;121434&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-dom/src/**tests**/ReactDOMComponent-test.js&lt;/td&gt;
&lt;td&gt;2346&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;119646&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-dom/src/**tests**/ReactDOMServerPartialHydration-test.internal.js&lt;/td&gt;
&lt;td&gt;2150&lt;/td&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;105350&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-noop-renderer/src/createReactNoop.js&lt;/td&gt;
&lt;td&gt;966&lt;/td&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;105294&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberCommitWork.old.js&lt;/td&gt;
&lt;td&gt;2262&lt;/td&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;104052&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/ReactFiberBeginWork.old.js&lt;/td&gt;
&lt;td&gt;2903&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;101605&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-reconciler/src/**tests**/ReactIncrementalErrorHandling-test.internal.js&lt;/td&gt;
&lt;td&gt;1532&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;94984&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages/react-refresh/src/**tests**/ReactFresh-test.js&lt;/td&gt;
&lt;td&gt;3165&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;91785&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;What we can see here is that two sub-packages are probably the most interesting to understand:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;packages/react-dom&lt;/li&gt;
&lt;li&gt;packages/react-reconciler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understanding React Fiber and how react-dom's partial renderer is working will give you a good idea about React's architecture. A good thing about the code within React is that it is well documented with comments even though it is complex at first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#venom-a-typescript-client-for-whatsapp"&gt;
  &lt;/a&gt;
  Venom - A TypeScript Client for Whatsapp
&lt;/h3&gt;

&lt;p&gt;Venom is a library to interact with Whatsapp. You can send messages via this library and do many more things. It is a bit more practical because on such applications you will work mostly in your day-to-day job. So let us run our usual command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx code-complexity &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;--limit&lt;/span&gt; 20 &lt;span class="nt"&gt;--sort&lt;/span&gt; ratio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;file&lt;/th&gt;
&lt;th&gt;complexity&lt;/th&gt;
&lt;th&gt;churn&lt;/th&gt;
&lt;th&gt;ratio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/jsQR/jsQR.js&lt;/td&gt;
&lt;td&gt;9760&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;48800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/wapi/wapi.js&lt;/td&gt;
&lt;td&gt;474&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;20856&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/sender.layer.ts&lt;/td&gt;
&lt;td&gt;546&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;19656&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/wapi/store/store-objects.js&lt;/td&gt;
&lt;td&gt;362&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;8688&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/controllers/initializer.ts&lt;/td&gt;
&lt;td&gt;178&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;8544&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/wapi/jssha/index.js&lt;/td&gt;
&lt;td&gt;1204&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;6020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/retriever.layer.ts&lt;/td&gt;
&lt;td&gt;171&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;4959&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/types/WAPI.d.ts&lt;/td&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;4872&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/host.layer.ts&lt;/td&gt;
&lt;td&gt;258&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;4386&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/listener.layer.ts&lt;/td&gt;
&lt;td&gt;206&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;4326&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/controllers/browser.ts&lt;/td&gt;
&lt;td&gt;141&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;4089&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/controllers/auth.ts&lt;/td&gt;
&lt;td&gt;192&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;4032&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/model/enum/definitions.ts&lt;/td&gt;
&lt;td&gt;589&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;3534&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/whatsapp.ts&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;2850&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/wapi/functions/index.js&lt;/td&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;2328&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/profile.layer.ts&lt;/td&gt;
&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;1804&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/lib/wapi/business/send-message-with-buttons.js&lt;/td&gt;
&lt;td&gt;323&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1615&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/group.layer.ts&lt;/td&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;1610&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/layers/controls.layer.ts&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;1520&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/api/model/message.ts&lt;/td&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;1254&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;What we can see here is that there are these directories which are from importance:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;src/lib&lt;/li&gt;
&lt;li&gt;src/api&lt;/li&gt;
&lt;li&gt;src/controllers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we can see from the &lt;code&gt;src/lib&lt;/code&gt; directory, the files included are automatically generated. Ideally, we can filter them out but for now, let us look at the other files.&lt;/p&gt;

&lt;p&gt;We can see that &lt;code&gt;src/api/layers/sender.layer.ts&lt;/code&gt; and &lt;code&gt;src/api/layers/retriever.layer.ts&lt;/code&gt; are not complex but have a lot of changes. So every time a feature is added or deleted these files are touched. These are the core files of the application and understanding them will give you a good grasp of how the codebase is structured and what you should focus on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-does-this-technique-come-from"&gt;
  &lt;/a&gt;
  Where does this technique come from?
&lt;/h2&gt;

&lt;p&gt;This technique of analyzing a codebase originally came from a book that handles refactoring large codebases via a process: &lt;a href="https://www.amazon.de/Software-Design-X-Rays-Technical-Behavioral/dp/1680502727?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;amp;dchild=1&amp;amp;keywords=Software+Design+X-Rays&amp;amp;qid=1615637678&amp;amp;sr=8-1&amp;amp;linkCode=ll1&amp;amp;tag=kevinpeters38-21&amp;amp;linkId=e90c90e5869a073cebb13f2fe26e865e&amp;amp;language=de_DE&amp;amp;ref_=as_li_ss_tl"&gt;Software Design X-Rays&lt;/a&gt; by Adam Tornhill. It is a great book and teaches you a lot of ways to structure your code and what parts are worth refactoring. A great book. I think every software engineer should have read it at some point because it will help them to understand a codebase differently. With working on a project, people will get familiar with different parts of the software and of course, they will have their special "area" of code where they are super comfortable. If this code is good and understandable is another question though, that this book tries to answer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.de/Software-Design-X-Rays-Technical-Behavioral/dp/1680502727?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;amp;dchild=1&amp;amp;keywords=Software+Design+X-Rays&amp;amp;qid=1615637678&amp;amp;sr=8-1&amp;amp;linkCode=ll1&amp;amp;tag=kevinpeters38-21&amp;amp;linkId=e90c90e5869a073cebb13f2fe26e865e&amp;amp;language=de_DE&amp;amp;ref_=as_li_ss_tl"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XlvKcX6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m59qeszmoaexe7uftb33.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Based on the refactoring efforts, we can also use the knowledge to see which parts of the application are important. Hopefully, I explained this in this blog article to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-languages"&gt;
  &lt;/a&gt;
  Other Languages
&lt;/h2&gt;

&lt;p&gt;The tool &lt;a href="https://github.com/simonrenoult/code-complexity"&gt;code-complexity&lt;/a&gt; is closely coupled to JavaScript and TypeScript-based codebases. For other languages like Java, C#, Python, or PHP there are other tools, but one tool that is generic and works for most of the codebases is &lt;a href="https://github.com/adamtornhill/code-maat"&gt;code-maat&lt;/a&gt;. It is a tool created by the author of the book mentioned in the chapter before.&lt;/p&gt;

&lt;p&gt;With that, you can analyze a software project as well and come to the same conclusions as mentioned in the blog article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you liked this article and made your life a bit easier. Coming to a new code base is difficult and especially with the ever-changing JavaScript world, it is difficult to follow. With the tools and processes presented in this article, you might have an easier time actually fit well into a new codebase. Feel free to share this article with your workers and also tell them about the techniques you are using. Most of the developers I know do not know about the churn and complexity analysis and it might be really helpful for everyone. So share it!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Make a login form with password display </title>
      <author>Clément Gaudinière</author>
      <pubDate>Fri, 28 May 2021 08:45:50 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/make-a-login-form-with-password-display-192j</link>
      <guid>https://dev.to/clementgaudiniere/make-a-login-form-with-password-display-192j</guid>
      <description>&lt;p&gt;Hello everyone, today I propose you a tutorial to create a login form to your website using a little javascript to display or hide the user's password field. This tutorial is quite simple, however it will not take into account the backend aspect of the user's connection.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let's Code
&lt;/h3&gt;

&lt;p&gt;To begin, we set up our HTML as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Connection&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;onfocus=&lt;/span&gt;&lt;span class="s"&gt;"black()"&lt;/span&gt; &lt;span class="na"&gt;onblur=&lt;/span&gt;&lt;span class="s"&gt;"white()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 511.999 511.999"&lt;/span&gt; &lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;"preserve"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"passwordShow()"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"showEye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;g&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M508.745,246.041c-4.574-6.257-113.557-153.206-252.748-153.206S7.818,239.784,3.249,246.035    c-4.332,5.936-4.332,13.987,0,19.923c4.569,6.257,113.557,153.206,252.748,153.206s248.174-146.95,252.748-153.201    C513.083,260.028,513.083,251.971,508.745,246.041z M255.997,385.406c-102.529,0-191.33-97.533-217.617-129.418    c26.253-31.913,114.868-129.395,217.617-129.395c102.524,0,191.319,97.516,217.617,129.418    C447.361,287.923,358.746,385.406,255.997,385.406z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;g&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M255.997,154.725c-55.842,0-101.275,45.433-101.275,101.275s45.433,101.275,101.275,101.275    s101.275-45.433,101.275-101.275S311.839,154.725,255.997,154.725z M255.997,323.516c-37.23,0-67.516-30.287-67.516-67.516    s30.287-67.516,67.516-67.516s67.516,30.287,67.516,67.516S293.227,323.516,255.997,323.516z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;xmlns:xlink=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xlink"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 59.049 59.049"&lt;/span&gt; &lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;"preserve"&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"passwordHide()"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"hideEye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;g&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M11.285,41.39c0.184,0.146,0.404,0.218,0.623,0.218c0.294,0,0.585-0.129,0.783-0.377c0.344-0.432,0.273-1.061-0.159-1.405   c-0.801-0.638-1.577-1.331-2.305-2.06l-7.398-7.398l7.629-7.629c7.334-7.333,18.003-9.836,27.839-6.534   c0.523,0.173,1.09-0.107,1.267-0.63c0.175-0.523-0.106-1.091-0.63-1.267c-10.562-3.545-22.016-0.857-29.89,7.016L0,30.368   l8.812,8.812C9.593,39.962,10.426,40.705,11.285,41.39z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M50.237,21.325c-1.348-1.348-2.826-2.564-4.394-3.616c-0.458-0.307-1.081-0.185-1.388,0.273   c-0.308,0.458-0.185,1.08,0.273,1.388c1.46,0.979,2.838,2.113,4.094,3.369l7.398,7.398l-7.629,7.629   c-7.385,7.385-18.513,9.882-28.352,6.356c-0.52-0.187-1.093,0.084-1.279,0.604c-0.186,0.52,0.084,1.092,0.604,1.279   c3.182,1.14,6.49,1.693,9.776,1.693c7.621,0,15.124-2.977,20.665-8.518l9.043-9.043L50.237,21.325z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M30.539,41.774c-2.153,0-4.251-0.598-6.07-1.73c-0.467-0.29-1.084-0.148-1.377,0.321c-0.292,0.469-0.148,1.085,0.321,1.377   c2.135,1.33,4.6,2.032,7.126,2.032c7.444,0,13.5-6.056,13.5-13.5c0-2.685-0.787-5.279-2.275-7.502   c-0.308-0.459-0.93-0.582-1.387-0.275c-0.459,0.308-0.582,0.929-0.275,1.387c1.267,1.893,1.937,4.102,1.937,6.39   C42.039,36.616,36.88,41.774,30.539,41.774z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M30.539,18.774c2.065,0,4.089,0.553,5.855,1.6c0.474,0.281,1.088,0.125,1.37-0.351c0.281-0.475,0.125-1.088-0.351-1.37   c-2.074-1.229-4.451-1.879-6.875-1.879c-7.444,0-13.5,6.056-13.5,13.5c0,2.084,0.462,4.083,1.374,5.941   c0.174,0.354,0.529,0.56,0.899,0.56c0.147,0,0.298-0.033,0.439-0.102c0.496-0.244,0.701-0.843,0.458-1.338   c-0.776-1.582-1.17-3.284-1.17-5.06C19.039,23.933,24.198,18.774,30.539,18.774z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M54.621,5.567c-0.391-0.391-1.023-0.391-1.414,0l-46.5,46.5c-0.391,0.391-0.391,1.023,0,1.414   c0.195,0.195,0.451,0.293,0.707,0.293s0.512-0.098,0.707-0.293l46.5-46.5C55.012,6.591,55.012,5.958,54.621,5.567z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Send"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example the button to show or hide the user's password are two SVG, you can however replace them with images, although this is not recommended.&lt;/p&gt;

&lt;p&gt;Now we set up our CSS. In our example our CSS code will look like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url("https://fonts.googleapis.com/css2?family=Open+Sans&amp;amp;display=swap")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.com/svgjs' width='1440' height='560' preserveAspectRatio='none' viewBox='0 0 1440 560'%3e%3cg mask='url(%26quot%3b%23SvgjsMask1000%26quot%3b)&lt;/span&gt;&lt;span class="s2"&gt;' fill='&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="s2"&gt;'%3e%3crect width='&lt;/span&gt;&lt;span class="m"&gt;1440&lt;/span&gt;&lt;span class="s2"&gt;' height='&lt;/span&gt;&lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="s2"&gt;' x='&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s2"&gt;' y='&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s2"&gt;' fill='&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;230&lt;/span&gt;&lt;span class="n"&gt;e2a47&lt;/span&gt;&lt;span class="s2"&gt;'%3e%3c/rect%3e%3cpath d='&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="m"&gt;0%2&lt;/span&gt;&lt;span class="n"&gt;c276&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;57.6%2&lt;/span&gt;&lt;span class="n"&gt;c235&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;172.8%2&lt;/span&gt;&lt;span class="n"&gt;c99&lt;/span&gt;&lt;span class="m"&gt;.4&lt;/span&gt; &lt;span class="m"&gt;288%2&lt;/span&gt;&lt;span class="n"&gt;c74&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;403.2%2&lt;/span&gt;&lt;span class="n"&gt;c48&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;460.8%2&lt;/span&gt;&lt;span class="n"&gt;c147&lt;/span&gt; &lt;span class="m"&gt;576%2&lt;/span&gt;&lt;span class="n"&gt;c149&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;691.2%2&lt;/span&gt;&lt;span class="n"&gt;c151&lt;/span&gt; &lt;span class="m"&gt;748.8%2&lt;/span&gt;&lt;span class="n"&gt;c84&lt;/span&gt;&lt;span class="m"&gt;.4&lt;/span&gt; &lt;span class="m"&gt;864%2&lt;/span&gt;&lt;span class="n"&gt;c84&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;979.2%2&lt;/span&gt;&lt;span class="n"&gt;c83&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;1036.8%2&lt;/span&gt;&lt;span class="n"&gt;c143&lt;/span&gt; &lt;span class="m"&gt;1152%2&lt;/span&gt;&lt;span class="n"&gt;c147&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;1267.2%2&lt;/span&gt;&lt;span class="n"&gt;c151&lt;/span&gt; &lt;span class="m"&gt;1382.4%2&lt;/span&gt;&lt;span class="n"&gt;c112&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;1440%2&lt;/span&gt;&lt;span class="n"&gt;c104L1440&lt;/span&gt; &lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="n"&gt;L0&lt;/span&gt; &lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="s2"&gt;' fill='&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;23184&lt;/span&gt;&lt;span class="n"&gt;a7e&lt;/span&gt;&lt;span class="s2"&gt;'%3e%3c/path%3e%3cpath d='&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="m"&gt;0%2&lt;/span&gt;&lt;span class="n"&gt;c557&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;96%2&lt;/span&gt;&lt;span class="n"&gt;c505&lt;/span&gt; &lt;span class="m"&gt;288%2&lt;/span&gt;&lt;span class="n"&gt;c307&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;480%2&lt;/span&gt;&lt;span class="n"&gt;c297&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;672%2&lt;/span&gt;&lt;span class="n"&gt;c286&lt;/span&gt;&lt;span class="m"&gt;.4&lt;/span&gt; &lt;span class="m"&gt;768%2&lt;/span&gt;&lt;span class="n"&gt;c503&lt;/span&gt;&lt;span class="m"&gt;.6&lt;/span&gt; &lt;span class="m"&gt;960%2&lt;/span&gt;&lt;span class="n"&gt;c504&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="m"&gt;1152%2&lt;/span&gt;&lt;span class="n"&gt;c504&lt;/span&gt;&lt;span class="m"&gt;.4&lt;/span&gt; &lt;span class="m"&gt;1344%2&lt;/span&gt;&lt;span class="n"&gt;c340&lt;/span&gt; &lt;span class="m"&gt;1440%2&lt;/span&gt;&lt;span class="n"&gt;c299L1440&lt;/span&gt; &lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="n"&gt;L0&lt;/span&gt; &lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="s2"&gt;' fill='&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;232264&lt;/span&gt;&lt;span class="n"&gt;ab&lt;/span&gt;&lt;span class="s2"&gt;'%3e%3c/path%3e%3c/g%3e%3cdefs%3e%3cmask id='&lt;/span&gt;&lt;span class="n"&gt;SvgjsMask1000&lt;/span&gt;&lt;span class="s2"&gt;'%3e%3crect width='&lt;/span&gt;&lt;span class="m"&gt;1440&lt;/span&gt;&lt;span class="s2"&gt;' height='&lt;/span&gt;&lt;span class="m"&gt;560&lt;/span&gt;&lt;span class="s2"&gt;' fill='&lt;/span&gt;&lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="err"&gt;'%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;defs&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;svg&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="s1"&gt;");
  background-size: 100vw 100vh;
  margin: 0;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;Sans&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;backdrop-filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;saturate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;120%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;93%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nf"&gt;#password&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;35px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;190px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nf"&gt;#showEye&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nf"&gt;#hideEye&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;220px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus::placeholder&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;submit&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;submit&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0.2rem&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-23px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we are going to do the most interesting part - setting up our javascript. First of all we have to understand the process we are going to follow. To display the string of characters of the input type password, we have to replace it by an input type text.&lt;/p&gt;

&lt;p&gt;Concretely, this is what it looks like :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;showEye&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;showEye&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hideEye&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hideEye&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;black&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;showEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#000000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;hideEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#000000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;showEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;hideEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;passwordShow&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;showEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;hideEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;passwordHide&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;showEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;inline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;hideEye&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When clicking on a svg to show or hide the password, two different functions can be launched : &lt;code&gt;passwordShow()&lt;/code&gt; or &lt;code&gt;passwordHide()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is the final result:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/clement-gaudiniere/embed/ExWgNxQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This turoriel was pretty quick, if you have any questions, feel free to ask me in comments ! 👍&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Build an online Shop with Gatsby and Shopify (Part 3)</title>
      <author>Rich11</author>
      <pubDate>Fri, 28 May 2021 08:18:36 +0000</pubDate>
      <link>https://dev.to/richardmen11/build-an-online-shop-with-gatsby-and-shopify-part-3-10a6</link>
      <guid>https://dev.to/richardmen11/build-an-online-shop-with-gatsby-and-shopify-part-3-10a6</guid>
      <description>&lt;p&gt;This is the third and last part of my gatsby and shopify series. If you have not read the parts before I would recommend reading them before. Otherwise, it will be hard to follow.&lt;br&gt;
Today we will add the function to add a product to our cart and then build a checkout page where you can click on checkout to get redirected to your personalized shopify checkout.&lt;/p&gt;

&lt;p&gt;First we should recall where we stopped.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;isomorphic-fetch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shopify-buy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buildClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;storefrontAccessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SHOP_NAME&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;lineItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;StoreContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defaultValues&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isBrowser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;undefined&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ContextProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCheckout&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defaultValues&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setCheckoutItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isBrowser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shopify_checkout_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;setCheckout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initializeCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;existingCheckoutID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isBrowser&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shopify_checkout_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;existingCheckoutID&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;existingCheckoutID&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s2"&gt;`null`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;existingCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;existingCheckoutID&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;existingCheckout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;completedAt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setCheckoutItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;existingCheckout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shopify_checkout_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;setCheckoutItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newCheckout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;initializeCheckout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StoreContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StoreContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ContextProvider&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-variant-to-cart"&gt;
  &lt;/a&gt;
  Add Variant to Cart
&lt;/h2&gt;

&lt;p&gt;Next up we would need a function to go add a product to the cart. So let us build it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;variantId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;checkoutID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lineItemsToUpdate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;variantId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addLineItems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;checkoutID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lineItemsToUpdate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setCheckout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function takes two arguments. The first one is the id of the product or more specific: the id of the variant. That means when you have a product like a shirt you would have different variants.&lt;br&gt;
You would take the id for the variant. The other parameter is the quantity.&lt;/p&gt;

&lt;p&gt;Then afterwards we get the id for the checkout. This we need for later. It will be used for making our request because shopify needs to know to which checkout they need to add the variant to.&lt;br&gt;
Then we construct or data we want to send. For now, we only send one at a time. Later you could make this more complex and maybe to a bulk adding version of this function.&lt;/p&gt;

&lt;p&gt;In the last step we need to use our shopify sdk to add the items to the checkout. Then we wait for the response and set it to the state.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#passing-our-data"&gt;
  &lt;/a&gt;
  Passing our data
&lt;/h2&gt;

&lt;p&gt;One important thing we missed in our ContextProvider file. We need to pass the functions and our data to use it afterwards.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StoreContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultValues&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StoreContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We pass an object called value into the context provider. There we spread in the defaultValues. Pass our newly build function and the checkout state.&lt;/p&gt;

&lt;p&gt;Now we could use our provider. 🚀&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-provider"&gt;
  &lt;/a&gt;
  Using the provider
&lt;/h2&gt;

&lt;p&gt;In order to make the data accessible everywhere in our pages I would recommend adding the ContextProvider component in our layout. Just wrap everything else in it. This makes it available everywhere else.&lt;/p&gt;

&lt;p&gt;Now we could use the context everywhere you want.&lt;/p&gt;

&lt;p&gt;We will add it to a component which shows a product with the add to cart button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StoreContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../provider/ContextProvider&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ProductDescription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;priceRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shopifyId&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;StoreContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleAddToCart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shopifyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleDirectCheckout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shopifyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;checkout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_self&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;col&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledProductName&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledProductName&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledPrice&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;priceRange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;minVariantPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="err"&gt;€&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledPrice&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledLabel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledLabel&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledSelect&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;producttype&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;producttype&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Download&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Download&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/option&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Artwork&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Artwork&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/option&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledSelect&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledProductText&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledProductText&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledButton&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mr-3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleAddToCart&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Add&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Cart&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledButton&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;StyledButtonSecondary&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleDirectCheckout&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Direct&lt;/span&gt; &lt;span class="nx"&gt;Checkout&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/StyledButtonSecondary&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ProductDescription&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do not wonder why the JSX Tags look a bit different. They are styled with styled components. Which is an entirely different topic. If you want to learn more about it. Just have a look here: &lt;a href="https://styled-components.com/"&gt;Styled components&lt;/a&gt;.&lt;br&gt;
For now, you just have to know that it is a way of styling and under the hood you could use any tag you want. And as we want to focus here on building the functionality this is not something you should worry about.&lt;/p&gt;

&lt;p&gt;Enough about styled components. First we need to import the store context. Then we can use it in the component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;addVariantToCart&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;StoreContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the addVariantToCart function and the checkout state from the StoreContext. Above is shown how you get it from the context. Pretty easy right?&lt;/p&gt;

&lt;p&gt;Next We have two functions which will handle the clicks on the buttons. The first just calls the addVariantToCart function with the shopifyId which was passed as props. The id you get with calling the shopify data on your page.&lt;br&gt;
And then you could also add a quantity. For simplicity its only possible to add one product at the moment. But that would be an easy fix and could be done later.&lt;/p&gt;

&lt;p&gt;Next the handleDirectCheckout function. This would be if a user directly wants to check out with the product on the page. Therefore, the addVariantToCart function is also called afterwards we open the shopify checkout.&lt;br&gt;
The url of the checkout is stored in the checkout state. This is a large object we get from shopify. Also, there are other things in it like all the items in the line or the total amount of the cart.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;Now you know how to use the context and how to build your own shop with shopify and gatsby. I know that's not all you need to build, but it should give you a starting point and hopefully&lt;br&gt;
enables you to build your own shop. I think it is really fun and a cool way to build your custom shop.&lt;/p&gt;

&lt;p&gt;If you have a question feel free to reach out. I would be happy to help.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>gatsby</category>
      <category>shopify</category>
    </item>
    <item>
      <title>10 job interview questions every software developer should know</title>
      <author>Vikram Aditya</author>
      <pubDate>Fri, 28 May 2021 08:17:06 +0000</pubDate>
      <link>https://dev.to/square/10-job-interview-questions-every-software-developer-should-know-3l8b</link>
      <guid>https://dev.to/square/10-job-interview-questions-every-software-developer-should-know-3l8b</guid>
      <description>&lt;p&gt;So you’re looking to become a software developer and join the ranks of highly skilled professionals If you’re in the midst of your job search and need some quick tips to get better prepared for the interview, we can help with that.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#join-thevikcode-newletter-get-daily-which-will-not-be-avaible-here-httpsthevikcodesubstackcom"&gt;
  &lt;/a&gt;
  JOIN THEVIKCODE NEWLETTER ( GET DAILY WHICH WILL NOT BE AVAIBLE HERE ) - &lt;a href="https://thevikcode.substack.com/"&gt;https://thevikcode.substack.com/&lt;/a&gt;
&lt;/h6&gt;

&lt;p&gt;For some, interviews are nerve-racking and difficult. But as long as you prepare with mock interviews, you’ll be ready for anything your future employer might throw your way  – not to mention stand out from other job seekers. If you want to ace the interview and land the job, below are ten questions that every software developer should know how to answer. We’ll follow those with some tips for your interview prep, so you have every chance to edge out the competition.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-questions-to-expect-in-your-interview"&gt;
  &lt;/a&gt;
  10 Questions to Expect in Your Interview:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What is responsive design? Explain the difference between fixed and fluid layouts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Describe a time where you had to convince a teammate to change their code for a project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an example of a sandbox? What’s the purpose of one?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How do you communicate your progress to your team?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What tools do you like to use to design, develop and debug applications?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the best way to collaborate on a coding project?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Describe a time you got something wrong while coding. What did you do about it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have you ever worked with someone who didn’t give as much effort as other team members? How did you handle it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give an example of a well designed website or product with good user experience. Why do you like it?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have you ever had a bug in your code that was already in production? How did you communicate/fix the issue?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#tips-for-nailing-your-software-developer-interview"&gt;
  &lt;/a&gt;
  Tips for Nailing Your Software Developer Interview
&lt;/h4&gt;

&lt;p&gt;Getting the job relies on so many factors: your experience, culture fit with the company, and even just dumb luck. But you can give yourself every competitive advantage by going into the interview prepared. Here are some reminders to keep in mind if you’re in the running for your dream developer gig.&lt;/p&gt;

&lt;p&gt;-If you don’t know the answer, just be honest. Developer interviews can get very technical, very fast. If you don’t know the answer to a question, be transparent and tell them that – but remind them that you’re excited to learn. You could even describe another skill that you learned on the last job (or taught yourself) to demonstrate your initiative.&lt;/p&gt;

&lt;p&gt;-Ask questions of your own. Great developers are in high demand. You might get more interview requests, or even competing job offers. So get all of the information you need to decide if the company is a good fit for you, too.&lt;/p&gt;

&lt;p&gt;-Be ready to show off your portfolio. You should have a few of your best projects in one place, like Github. Even if you’ve never had a true developer job, there are other ways to build a portfolio&lt;/p&gt;

&lt;p&gt;These were some general interview questions every programmer should know...&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Solution: Maximum Erasure Value</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 28 May 2021 08:13:30 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-maximum-erasure-value-1kod</link>
      <guid>https://dev.to/seanpgallivan/solution-maximum-erasure-value-1kod</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/maximum-erasure-value/discuss/1235716"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1695-medium-maximum-erasure-value"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/maximum-erasure-value/"&gt;Leetcode Problem #1695 (&lt;em&gt;Medium&lt;/em&gt;): Maximum Erasure Value&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given an array of positive integers &lt;code&gt;nums&lt;/code&gt; and want to erase a subarray containing &lt;strong&gt;unique elements&lt;/strong&gt;. The score you get by erasing the subarray is equal to the sum of its elements.&lt;/p&gt;

&lt;p&gt;Return &lt;em&gt;the &lt;strong&gt;maximum score&lt;/strong&gt; you can get by erasing &lt;strong&gt;exactly one&lt;/strong&gt; subarray&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An array &lt;code&gt;b&lt;/code&gt; is called to be a subarray of &lt;code&gt;a&lt;/code&gt; if it forms a contiguous subsequence of &lt;code&gt;a&lt;/code&gt;, that is, if it is equal to &lt;code&gt;a[l],a[l+1],...,a[r]&lt;/code&gt; for some &lt;code&gt;(l,r)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [4,2,4,5,6]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The optimal subarray here is [2,4,5,6].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [5,2,1,2,5,2,1,2,5]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The optimal subarray here is [5,2,1] or [1,2,5].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1 &amp;lt;= nums.length &amp;lt;= 10^5&lt;/li&gt;
&lt;li&gt;1 &amp;lt;= nums[i] &amp;lt;= 10^4&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Like most problems that ask about a contiguous subarray, this problem naturally calls for a &lt;strong&gt;2-pointer sliding window&lt;/strong&gt; approach. There are a few ways we can keep track of the contents of the sliding window, but since the constraint upon &lt;strong&gt;nums[i]&lt;/strong&gt; is fairly small, we can use the faster &lt;strong&gt;arraymap&lt;/strong&gt; (&lt;strong&gt;nmap&lt;/strong&gt;) method, rather than a &lt;strong&gt;hashmap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So as we iterate our sliding window through &lt;strong&gt;nums&lt;/strong&gt;, we'll move our &lt;strong&gt;right&lt;/strong&gt; pointer forward, increasing the counter for the appropriate number in &lt;strong&gt;nmap&lt;/strong&gt;. If that bucket in &lt;strong&gt;nmap&lt;/strong&gt; goes above &lt;strong&gt;1&lt;/strong&gt;, then we know that the newly-added number isn't unique in our sliding window, so we need to increase the &lt;strong&gt;left&lt;/strong&gt; pointer until the counter is reduced back to &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We should also, of course, keep track of the sum &lt;strong&gt;total&lt;/strong&gt; of the sliding window. At each iteration, once we've confirmed the uniqueness of the contents of the sliding window, we should also update our &lt;strong&gt;best&lt;/strong&gt; result so far. Then, once we're done, we can just &lt;strong&gt;return best&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;nums&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(10001)&lt;/strong&gt; for &lt;strong&gt;nmap&lt;/strong&gt; keeping track of numbers from &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;10^4&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maximumUniqueSubarray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;nmap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Int8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10001&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nx"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="nx"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;best&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maximumUniqueSubarray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maximumUniqueSubarray&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;nmap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;short&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10001&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;]]++;&lt;/span&gt;
            &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;]]--;&lt;/span&gt;
                &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maximumUniqueSubarray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10001&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;nmap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>On Meritocracy</title>
      <author>James Seconde</author>
      <pubDate>Fri, 28 May 2021 07:40:55 +0000</pubDate>
      <link>https://dev.to/secondej/on-meritocracy-1gh7</link>
      <guid>https://dev.to/secondej/on-meritocracy-1gh7</guid>
      <description>&lt;p&gt;I am a product of the PHP community - it's how I got into software development, it's why I have my career, it's why I now do Developer Relations.&lt;/p&gt;

&lt;p&gt;There are three factors that made me choose this path. They are all from the same conference, in 2012. Those factors are three specific speakers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jenny Wong&lt;/li&gt;
&lt;li&gt;Lorna Mitchell&lt;/li&gt;
&lt;li&gt;Jessica Rose&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You see, the thing is, to my naive eyes at that point in my tech career it didn't strike me as at all different in any way that these three people were not men. What I had failed to acknowledge is the reason &lt;em&gt;why&lt;/em&gt; there was such a top line-up at PHPUK 2012. The reason was because it was being curated by people who were levelling up the field by doing research and getting the best people in to speak that represented what the community -should- look like due to the talent out there. Only now, with a lot more experience from networking with communities and developers have I realised that sexism is absolutely rampant in the field I am supposed to call my home. But why hadn't I noticed?&lt;/p&gt;

&lt;p&gt;Let's talk about the "CIS-white-man-privilege" card.&lt;/p&gt;

&lt;p&gt;To some, using these terms may cause an inevitable groan that conjure up other terms from the other side of the fence such as "Social Justice Warrior". My role here, however, is to convince you (if you've groaned) that this card exists, so I'll back it up with evidence of my experiences.&lt;/p&gt;

&lt;p&gt;I wanted to be a developer, so I went to meetups. I went to conferences. I spoke with other developers. I confidently bagged a backend developer role, entering as a junior, in my 30's. I have no CS degree, I had no experience as a software developer at the time. I was enthusiastic, eager to learn. That's all you need right?&lt;/p&gt;

&lt;p&gt;When entering into tech this way and getting into Developer Relations, again I was confident. I wanted to do it, I started speaking, I started writing. I convinced a business to let me do these things. I started my own meetup. I did all of these things without being challenged. And the reason &lt;em&gt;why&lt;/em&gt; I hadn't been challenged is because I'd got wind that tech was a meritocracy: that "Uncle" Bob Martin had said it was all about the code. Nothing more, nothing less.&lt;/p&gt;

&lt;p&gt;It's not though, is it? It's not a meritocracy:&lt;/p&gt;

&lt;p&gt;I've not been at a conference as a developer and been mistaken for a recruiter or sales because of my gender.&lt;/p&gt;

&lt;p&gt;When building my public brand, I've not had direct messages on Twitter advising me that right now, my best option is to quit tech and raise children at home.&lt;/p&gt;

&lt;p&gt;After speaking at events, I've not had unsolicited emails with twenty five bullet points on advice about how to make my talk better.&lt;/p&gt;

&lt;p&gt;I've not had to justify my position as being a software developer by being questioned in-depth about a super-abstract computer science concept because I made a passing remark in conversation.&lt;/p&gt;

&lt;p&gt;Yes, these are real world cases, so we need to stop pretending this doesn't happen. If you think it doesn't happen, the important line I want you to acknowledge is that the truth is &lt;em&gt;"it doesn't happen to me"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I first started encountering things like this in my first agency environment, where the Christmas party, consisting of about 55 developers -of which only two were not male- decended into (I'm not joking here) an arm-wrestling contest. At that company I also vividly remember an individual in management assessing the looks of a visiting recruiter out loud to no response. The blank response resulted in them exclaiming, "was that sexist? It was probably sexist. Ah, well", and everyone turned their chairs back to their screens.&lt;/p&gt;

&lt;p&gt;This isn't the industry I want to work in. I mean, this is behind closed doors - if you want to see it in public, I'd say &lt;a href="https://twitter.com/zuzana_kunckova"&gt;Zuzana Kunckova&lt;/a&gt; announcing the creation of the Larabelles community for non-male Laravel developers was a pretty good example. I'm not going to post the link, but a ton of developers dogpiled in with "why is there a need for this, we're all equal? This is dividing us and is pointless". &lt;/p&gt;

&lt;p&gt;It wasn't the right question. The right question should have been, "what has made non-male developers feel like they need to set up a new community with an emphasis on it being a safe environment?" That's the real question, and the ones they were asking answered the question I put forward perfectly.&lt;/p&gt;

&lt;p&gt;There is one final example of this to give, and it's important to me because it is the reason I have finally written an article like this.&lt;/p&gt;

&lt;p&gt;This article was written for &lt;a href="https://unbreak.tech/"&gt;unbreak.tech&lt;/a&gt;, an initative from &lt;a href="https://twitter.com/whitep4nth3r"&gt;whitep4nth3r&lt;/a&gt; that was created after a twitch raid that saw her enduring a shocking wave of sexual harrassment. Non-male tech streamers should not have to experience this in these times. This is appalling. My regret when writing this article is that, on seeing this being unbreak being created, I haven't taken as much action as I could have.&lt;/p&gt;

&lt;p&gt;One of my objectives with this article is to point out how bad things are, still, in 2021. The other is showing how we can change things.&lt;/p&gt;

&lt;p&gt;In my talk of 2019 on elitism in tech, I advocated for steering away from what I described as "gatekeeper hell" by using &lt;a href="https://en.wikipedia.org/wiki/Nudge_theory"&gt;nudge theory&lt;/a&gt;. We all have a small part to play in 'nudging' people away from outdated stereotypes. But does it work?&lt;/p&gt;

&lt;p&gt;Yes, it does. We need allies within our ranks to lead by example. The example I always go to is &lt;a href="https://twitter.com/SamanthaGeitz/status/1167065400502345728"&gt;Samantha Geitz's story about her first Laracon experience.&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We need more leaders like Matt. &lt;/p&gt;

&lt;p&gt;We need more allies. &lt;/p&gt;

&lt;p&gt;We all need to do our bit.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>community</category>
      <category>culture</category>
    </item>
    <item>
      <title>JavaScript Oddities and Secrets you need to know</title>
      <author>Rahul</author>
      <pubDate>Fri, 28 May 2021 07:33:59 +0000</pubDate>
      <link>https://dev.to/rahxuls/javascript-oddities-and-secrets-you-need-to-know-313p</link>
      <guid>https://dev.to/rahxuls/javascript-oddities-and-secrets-you-need-to-know-313p</guid>
      <description>&lt;p&gt;In this post, I will cover some things that are cool and most of you're unaware of. Let' see them. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#null-is-an-object"&gt;
  &lt;/a&gt;
  Null is an Object
&lt;/h3&gt;

&lt;p&gt;Null is an object. Despite this, null is not considered as an instance of an object. This brings us back to sanity, because if null is the absence of value, then it obviously can't be an instance of anything. Hence, the following evaluates to false:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// alerts 'object'&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// evaluates false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#nan-is-a-number"&gt;
  &lt;/a&gt;
  NaN is a Number
&lt;/h3&gt;

&lt;p&gt;NaN is not equal to anything. The only way to confirm that something is NaN is through the function &lt;code&gt;isNaN()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// alerts 'Number'&lt;/span&gt;
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;NaN&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// evaluated false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#replate-can-accept-callback-function"&gt;
  &lt;/a&gt;
  Replate() can accept callback function
&lt;/h3&gt;

&lt;p&gt;This is one of JavaScript's bect keep secrets and it arrived in v1.3 Most usages of replace() looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;10 13 21 48 52&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
&lt;span class="c1"&gt;// replace all numbers with *&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the simple replacement: a string, an asterisk. But what if we wanted more control over how and when our replacements take place? What if we wanted to replace only the number under 3? This can't be achieved with ReGex alone. We need to jump into the callback function to evaluate each match.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;10 13 21 48 52&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}));&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For every match made, JavaScript calls our callback function, passing the match as an argument. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undefined-can-be-defined"&gt;
  &lt;/a&gt;
  Undefined can be defined
&lt;/h3&gt;

&lt;p&gt;Strange as it might sound, undefined is not a reserved word in JavaScript, even though it has special meaning and is the only way to determine whether a variable is undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// foo string&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#an-array-with-no-keys-faleabout-truthy-and-false"&gt;
  &lt;/a&gt;
  An array with no keys == fale(about truthy and false)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// evaluates true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JavaScript, every non-boolean value has a built-in boolean flag that is called on when the value is asked to behave like a boolean. False, zero, null, undefined, empty strings and NaN all end up becoming false - not permanently, just for the given expression. &lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;Thanks for Reading, If you like this post please comment😎. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Python read data from a Google sheet</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 28 May 2021 06:53:39 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/python-read-data-from-a-google-sheet-552p</link>
      <guid>https://dev.to/dailydevtips1/python-read-data-from-a-google-sheet-552p</guid>
      <description>&lt;p&gt;A while ago, we made a node script that could read data from a Google Sheet.&lt;br&gt;
I thought it would be cool to check how we could achieve the same thing in Python.&lt;/p&gt;

&lt;p&gt;So today, you'll be learning how to read data from a Google Sheet in Python.&lt;/p&gt;

&lt;p&gt;The result will be as shown in this GIF.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6H2T7V4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621924300622/GFPd8mbIY.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6H2T7V4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621924300622/GFPd8mbIY.gif" alt="Python read data from a Google sheet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup-google-credentials"&gt;
  &lt;/a&gt;
  Setup Google credentials
&lt;/h2&gt;

&lt;p&gt;To get started with this project, you need to create a google project and generate credentials for it.&lt;/p&gt;

&lt;p&gt;To get started, visit the &lt;a href="https://console.cloud.google.com/apis"&gt;Google cloud console&lt;/a&gt;. If you don't have a project yet, you can create one.&lt;/p&gt;

&lt;p&gt;However, from here, click the Credentials button on the left.&lt;br&gt;
Then click on "Create Credentials."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W_10dhG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922728543/SBbWGgZVz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W_10dhG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922728543/SBbWGgZVz.png" alt="Google new credentials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the application type, choose "Desktop app" and give it a good name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iujjucBF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922780654/bOray41p_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iujjucBF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922780654/bOray41p_.png" alt="Credentials for Google Sheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then click the download button on the right-hand side of your newly created key to download the JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPbH1u_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922860615/ObKMMDxf0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPbH1u_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621922860615/ObKMMDxf0.png" alt="Download key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rename this file to "credentials.json" and place it inside your project root folder.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#python-reading-from-a-google-sheet"&gt;
  &lt;/a&gt;
  Python reading from a Google sheet
&lt;/h2&gt;

&lt;p&gt;Now it's time to work on the Python part of the project.&lt;br&gt;
First, let's install the packages we need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--upgrade&lt;/span&gt; google-api-python-client google-auth-httplib2 google-auth-oauthlib
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will install the Google API and auth packages we need.&lt;/p&gt;

&lt;p&gt;Then we can create a file called &lt;code&gt;main.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We then define our imports in the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;print_function&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;googleapiclient.discovery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google_auth_oauthlib.flow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;InstalledAppFlow&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.auth.transport.requests&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google.oauth2.credentials&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Credentials&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that done, we'll make some variables to use in the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;SCOPES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'https://www.googleapis.com/auth/spreadsheets.readonly'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;SAMPLE_SPREADSHEET_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms'&lt;/span&gt;
&lt;span class="n"&gt;SAMPLE_RANGE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Class Data!A2:E'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The scopes define which API scopes we wish to use. For now, it's readonly. If you do change these, don't forget to remove the token.json file.&lt;/p&gt;

&lt;p&gt;Then we define the spreadsheet ID and which range we want to use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: This is a google provided demo spreadsheet. You don't need to have this in your drive&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will &lt;a href="https://daily-dev-tips.com/posts/writing-functions-in-python/"&gt;create a Python function&lt;/a&gt; called &lt;code&gt;main&lt;/code&gt;, which will hold all our logic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In there we will make all our needed actions. I'll break these up into sections.&lt;/p&gt;

&lt;p&gt;The first part we need to do is authenticate our application with the API.&lt;br&gt;
We start by creating a &lt;code&gt;creds&lt;/code&gt; variable. Then we will check if we already have a &lt;code&gt;token.json&lt;/code&gt; file locally.&lt;/p&gt;

&lt;p&gt;If we don't have this file, we will ask the credential flow to run. This will prompt a browser and asks us to authenticate our google account with the application and set the token.json file.&lt;/p&gt;

&lt;p&gt;Else we can build the service to use with the credentials.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""Shows basic usage of the Sheets API.
    Prints values from a sample spreadsheet.
    """&lt;/span&gt;
    &lt;span class="n"&gt;creds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
    &lt;span class="c1"&gt;# The file token.json stores the user's access and refresh tokens, and is
&lt;/span&gt;    &lt;span class="c1"&gt;# created automatically when the authorization flow completes for the first
&lt;/span&gt;    &lt;span class="c1"&gt;# time.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'token.json'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;creds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Credentials&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_authorized_user_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'token.json'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SCOPES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# If there are no (valid) credentials available, let the user log in.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expired&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refresh_token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refresh&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;flow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InstalledAppFlow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_client_secrets_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;'credentials.json'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SCOPES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;creds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_local_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# Save the credentials for the next run
&lt;/span&gt;        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'token.json'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sheets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'v4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this service, we can get the values based on the spreadsheet and the range we defined above.&lt;/p&gt;

&lt;p&gt;Then we will loop over the values and print out the results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sheets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'v4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Call the Sheets API
&lt;/span&gt;    &lt;span class="n"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spreadsheets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spreadsheetId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SAMPLE_SPREADSHEET_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;SAMPLE_RANGE_NAME&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'values'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'No data found.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Name, Major:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# Print columns A and E, which correspond to indices 0 and 4.
&lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%s, %s'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the last part is now to run the function at the end:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-the-application"&gt;
  &lt;/a&gt;
  Testing the application
&lt;/h2&gt;

&lt;p&gt;The first time we run the application, a browser will be opened to prompt us for access.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JxmS9hEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621924131456/HYpRnRFhR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JxmS9hEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621924131456/HYpRnRFhR.png" alt="Google prompt access"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you accept this prompt, a token.json file will be created locally, and you should see the results of the code in your terminal.&lt;/p&gt;

&lt;p&gt;You can also find the code on my &lt;a href="https://gist.github.com/rebelchris/fef3f79af30a45f6522fc4ac73ed8901"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>How to create a notification badge with CSS ?</title>
      <author>murtuza</author>
      <pubDate>Fri, 28 May 2021 06:32:55 +0000</pubDate>
      <link>https://dev.to/murtuzaalisurti/how-to-create-a-notification-badge-with-css-only-2nf8</link>
      <guid>https://dev.to/murtuzaalisurti/how-to-create-a-notification-badge-with-css-only-2nf8</guid>
      <description>&lt;p&gt;Notification badges annoy me most of the times by popping up every now and then and I am pretty sure most of you experience similar thing, but anyways, let's see how we can create a notification badge using CSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-html"&gt;
  &lt;/a&gt;
  Step 1: HTML
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKXO2ge7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktqhofthxj3s9niv6wn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKXO2ge7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ktqhofthxj3s9niv6wn0.png" alt="html markup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The element with a class '&lt;em&gt;base&lt;/em&gt;' will act as a profile image or an icon upon which we will position the notification indicator element having a class '&lt;em&gt;indicator&lt;/em&gt;'.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-css"&gt;
  &lt;/a&gt;
  Step 2: CSS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OhJlu4qM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g8srct3wac5itp7r0zc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OhJlu4qM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6g8srct3wac5itp7r0zc.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, we have to set up the height and width of the main '&lt;em&gt;base&lt;/em&gt;' element. Then we set the border-radius property to 50%. Border radius rounds the edges of the border by a specified amount. In our case the height and width of the element are equal and so, when we apply border radius of 50%, a square looking element will transform to a circle.&lt;/p&gt;

&lt;p&gt;After applying a background color, the base element will look like a circle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---KGHRCCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4gklfzuooiohhgkaexk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KGHRCCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4gklfzuooiohhgkaexk.png" alt="circle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, set the position of the base element to '&lt;em&gt;relative&lt;/em&gt;' which means that it will be positioned relative to its current position. This will not change anything but we want this property to position the child elements, more on that in a second.&lt;/p&gt;

&lt;p&gt;You can also add an image instead of a background color to the base element, just like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dkzr9A8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7idhaujbdn0h9085a3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dkzr9A8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l7idhaujbdn0h9085a3d.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's design the indicator.&lt;/p&gt;

&lt;p&gt;First of all, set the position of the indicator as '&lt;em&gt;absolute&lt;/em&gt;' which means that it will be positioned inside the ancestor element which has its position as '&lt;em&gt;relative&lt;/em&gt;'.&lt;/p&gt;

&lt;p&gt;Then, we will define the final location of the indicator by setting the values of &lt;em&gt;top, bottom, right and left&lt;/em&gt; properties of the indicator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8W2gB6Q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfqdmfx3hwjgrn85qg5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8W2gB6Q0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfqdmfx3hwjgrn85qg5v.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The '&lt;em&gt;bottom&lt;/em&gt;' property will offset the '&lt;em&gt;indicator&lt;/em&gt;' element by 60% of the height of the '&lt;em&gt;base&lt;/em&gt;' element from the bottom of the '&lt;em&gt;base&lt;/em&gt;' element.&lt;/p&gt;

&lt;p&gt;Similarly, the '&lt;em&gt;left&lt;/em&gt;' property will offset the '&lt;em&gt;indicator&lt;/em&gt;' element by 60% of the width of the '&lt;em&gt;base&lt;/em&gt;' element from the left of the '&lt;em&gt;base&lt;/em&gt;' element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0bNJMwR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r3um4t3cdzle5esi3sg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0bNJMwR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r3um4t3cdzle5esi3sg.png" alt="result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we will add a border having the color same as the '&lt;em&gt;body&lt;/em&gt;' element having a border-radius of 50%.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Soe50yt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cy0zrt0jhi4sow29g3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Soe50yt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cy0zrt0jhi4sow29g3f.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, we will style the notification counter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--suFdPkTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g024r8zt02ktfrdrhzk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suFdPkTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7g024r8zt02ktfrdrhzk.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to center the notification count number, we can add '&lt;em&gt;flex&lt;/em&gt;' properties to its parent element.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ggawgNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj6u344un13bwo2c1s6c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ggawgNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj6u344un13bwo2c1s6c.png" alt="css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final output will be:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MMD-2fz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1c8qilqsqbzzhb45ish1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MMD-2fz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1c8qilqsqbzzhb45ish1.png" alt="final output"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Taking Advantage of the platform with Sutil and Web Components</title>
      <author>Angel D. Munoz</author>
      <pubDate>Fri, 28 May 2021 06:11:53 +0000</pubDate>
      <link>https://dev.to/tunaxor/taking-advantage-of-the-platform-with-sutil-and-web-components-5hm0</link>
      <guid>https://dev.to/tunaxor/taking-advantage-of-the-platform-with-sutil-and-web-components-5hm0</guid>
      <description>&lt;p&gt;Hello everyone, here we are once again with another F# blog post. &lt;/p&gt;

&lt;p&gt;This time I want to bring attention to a project that has caught my eye and fits my way of doing web development from F#&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/davedawkins"&gt;
        davedawkins
      &lt;/a&gt; / &lt;a href="https://github.com/davedawkins/Sutil"&gt;
        Sutil
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An experiment in applying the Svelte design to native Fable
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Sutil (was Sveltish) &lt;a href="https://www.nuget.org/packages/Sutil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/975fe2fc9284dd7893c6cfd22be3a9da05dd0d7e1ad4cf1489c0c8b86c2e5223/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f537574696c2e7376673f6d61784167653d3026636f6c6f72423d627269676874677265656e" alt="Nuget"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;An experiment in applying the design principles from &lt;a href="https://svelte.dev/" rel="nofollow"&gt;Svelte&lt;/a&gt; to native Fable, mixed with &lt;a href="https://github.com/elmish/elmish"&gt;Elmish&lt;/a&gt; and &lt;a href="https://github.com/Zaid-Ajaj/Feliz"&gt;Feliz&lt;/a&gt;. Sutil has no JS dependencies (such as React).&lt;/p&gt;
&lt;p&gt;A Feliz-style DSL is supplied by &lt;a href="https://github.com/alfonsogarciacaro/Feliz.Engine"&gt;Feliz.Engine&lt;/a&gt;.
Sutil implements Elmish by importing parts of &lt;a href="https://github.com/elmish/elmish"&gt;Elmish&lt;/a&gt;.
Transitions and most examples are ported directly from &lt;a href="https://svelte.dev/" rel="nofollow"&gt;Svelte&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At first I thought that we might make use of a Fable compiler plugin to generate boilerplate, but it turns out that F# does a pretty good job of that itself.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://davedawkins.github.io/Sutil/" rel="nofollow"&gt;Sutil website&lt;/a&gt; for &lt;a href="https://davedawkins.github.io/Sutil/#examples-animation" rel="nofollow"&gt;demos&lt;/a&gt; and documentation for &lt;a href="https://davedawkins.github.io/Sutil/#documentation-installation" rel="nofollow"&gt;getting started&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/davedawkins/Sutil"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;Sutil is an abstraction over &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; in contrast to &lt;a href="https://zaid-ajaj.github.io/Feliz/"&gt;Feliz&lt;/a&gt; which is an abstraction over &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; both projects allow you to do web development the only (and radical) difference is that when you do your F# there's a different engine under the hood when you website runs.&lt;/p&gt;

&lt;p&gt;If you have control over the SPA you're building you can use whatever you want that is for sure but, let's say you work for a company who has multiple products and then something like this happens:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We're going to go under a transformation process, we will create a design system for our branding and all of our applications will use the same core components, we have formed a team that has chosen the &lt;em&gt;Lit | Stencil | FAST&lt;/em&gt; library, don't worry you will be slowly replacing parts of existing applications with these core components in the future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since web components work on all modern browsers and are framework agnostic since they work as native tags e.g. you can use them inside Vue, Aurelia, Angular, Svelte, you name it (even react with some caveats).&lt;/p&gt;

&lt;p&gt;So now you have to make company's components work with your existing (or new) Fable SPA's.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The source code for this post can be found in this repository&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AngelMunoz"&gt;
        AngelMunoz
      &lt;/a&gt; / &lt;a href="https://github.com/AngelMunoz/sutil-and-web-components"&gt;
        sutil-and-web-components
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
Sutil Template for Elmish&lt;/h2&gt;
&lt;p&gt;This is a Sutil (&lt;strong&gt;Svelte&lt;/strong&gt;) application template which kind of shows a bit how you can* structure sutil applications and work with stores&lt;/p&gt;
&lt;h2&gt;
Check out these files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Main.fs&lt;/li&gt;
&lt;li&gt;App.fs&lt;/li&gt;
&lt;li&gt;Components/Skeleton.fs&lt;/li&gt;
&lt;li&gt;Pages/Home.fs&lt;/li&gt;
&lt;li&gt;styles.css&lt;/li&gt;
&lt;li&gt;snowpack.config.js&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Quick Start&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;dotnet tool restore
pnpm install # or npm install or yarn install
pnpm start # or npm run start or yarn run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;* this is not a strict way to do it it's just &lt;em&gt;A Way&lt;/em&gt; to do it so feel free to remove/add whatever you need in your day to day&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AngelMunoz/sutil-and-web-components"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#a-word-on-web-component-distribution"&gt;
  &lt;/a&gt;
  A word on Web Component Distribution
&lt;/h3&gt;

&lt;p&gt;Web components are usually distributed as ES Modules (sometimes with polyfills to port back to older browsers) and are often easy to install&lt;/p&gt;

&lt;blockquote&gt;

&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.41/dist/themes/base.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.41/dist/shoelace.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;p&gt;Just drop those tags and you can start using shoelace components in your application, no bundling, no Webpack, no preprocessors no whatever you fear from the JS ecosystem. which make them compelling in some places where no JS frameworks are actually that useful (e.g. server side rendered applications or multi page apps)&lt;/p&gt;

&lt;p&gt;In our case we're building a Sutil SPA which it means we're likely using a bundling system like Snowpack/Webpack so we will have to do the classic  &lt;code&gt;npm install @shoelace-style/shoelace&lt;/code&gt; and then import every component we want with side effects because we don't want our app bundle to grow massively in size.&lt;/p&gt;

&lt;p&gt;Now back to the integration, web components are often registered like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="cm"&gt;/*... */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;different libraries define them different but the &lt;code&gt;customElements.register&lt;/code&gt; is for EVERY component out there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;therefore most of the time what you'll see when dealing with web components will be a single import&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-component.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In our case I'll be using &lt;a href="https://shoelace.style/"&gt;Shoelace&lt;/a&gt; as the web component library in this repo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having that said, if we take a look at &lt;code&gt;Main.fs&lt;/code&gt;. We're importing  each component as needed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight fsharp"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nc"&gt;Main&lt;/span&gt;

&lt;span class="k"&gt;open&lt;/span&gt; &lt;span class="nn"&gt;Fable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Core&lt;/span&gt;
&lt;span class="k"&gt;open&lt;/span&gt; &lt;span class="nn"&gt;Sutil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DOM&lt;/span&gt;
&lt;span class="k"&gt;open&lt;/span&gt; &lt;span class="nn"&gt;Fable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;Core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;JsInterop&lt;/span&gt;

&lt;span class="n"&gt;importSideEffects&lt;/span&gt; &lt;span class="s2"&gt;"./styles.css"&lt;/span&gt;
&lt;span class="n"&gt;importSideEffects&lt;/span&gt; &lt;span class="s2"&gt;"@shoelace-style/shoelace/dist/themes/base.css"&lt;/span&gt;

&lt;span class="n"&gt;importDefault&lt;/span&gt; &lt;span class="s2"&gt;"@shoelace-style/shoelace/dist/components/button/button.js"&lt;/span&gt;
&lt;span class="p"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ignore&lt;/span&gt;

&lt;span class="n"&gt;importDefault&lt;/span&gt; &lt;span class="s2"&gt;"@shoelace-style/shoelace/dist/components/skeleton/skeleton.js"&lt;/span&gt;
&lt;span class="p"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ignore&lt;/span&gt;

&lt;span class="p"&gt;[&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ImportMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"@shoelace-style/shoelace/dist/utilities/base-path.js"&lt;/span&gt;&lt;span class="o"&gt;)&amp;gt;]&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;setBasePath&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;unit&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jsNative&lt;/span&gt;

&lt;span class="c1"&gt;// this requires a specific configuration for shoelace&lt;/span&gt;
&lt;span class="c1"&gt;// check snowpack.config.js&lt;/span&gt;
&lt;span class="n"&gt;setBasePath&lt;/span&gt; &lt;span class="s2"&gt;"shoelace"&lt;/span&gt;

&lt;span class="c1"&gt;// Start the app&lt;/span&gt;
&lt;span class="nn"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view&lt;/span&gt; &lt;span class="bp"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mountElement&lt;/span&gt; &lt;span class="s2"&gt;"sutil-app"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Usually we would use importSideEffects "the-library/component.js" (like above) but the documentation of shoelace says that we should do default imports with their particular implementation to prevent bloated bundles and enable tree shaking hence why we import and ignore at the same time.&lt;/p&gt;

&lt;p&gt;Please note the &lt;code&gt;.js&lt;/code&gt; at the end (it's very important for snowpack to work properly, you can ignore it in the case of other bundlers as far as i know)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What we just did is to import the library's (either third party or your company's initiative one) components into the browser, now every time we write a &lt;code&gt;sl-button&lt;/code&gt; or &lt;code&gt;sl-skeleton&lt;/code&gt; the browser will understand that a custom element will be rendered.&lt;/p&gt;

&lt;p&gt;Generally speaking Web Components work in the following way&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pass attributes for values&lt;/p&gt;

&lt;p&gt;which can set internally a property, please note also that properties are not the same as attributes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Emit Events/CustomEvents so you can update attributes/properties as you need&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There are some cases where web components need you to call a method of that instance so you will have to query for a reference of that element to get the instance and then invoke the method. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That means that 80%-95% (based on my not comprobable experience) of the time you would just define attributes and listen for events.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-web-components-in-sutil"&gt;
  &lt;/a&gt;
  Using Web Components In Sutil
&lt;/h3&gt;

&lt;p&gt;The Sutil DSL is very complete and permissive where needed i.e. you can use &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Css.custom("align-self", "stretch")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Attr.custom("some-attribute", "my-value")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Html.custom("my-tag", [])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on "event-name" handler modifiers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onCustomEvent&amp;lt;'T&amp;gt; "event-name" handler modifiers&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can't find a property in the Sutil DSL you can report it to the repository but with these helpers you can easily continue working without having to wait for a fix.&lt;/p&gt;

&lt;p&gt;There are several ways we can use these web components but we'll start with the most raw one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight fsharp"&gt;&lt;code&gt;&lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-button"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;type'&lt;/span&gt; &lt;span class="s2"&gt;"sucess"&lt;/span&gt;
    &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;"This is a Web Component Button"&lt;/span&gt;
    &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="p"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;printfn&lt;/span&gt; &lt;span class="s2"&gt;"Hey success!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Check &lt;a href="https://shoelace.style/components/button"&gt;https://shoelace.style/components/button&lt;/a&gt; for the component documentation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cool that should give us a green button on our screen if we imported the button in the main file&lt;/p&gt;

&lt;p&gt;let's try a circle button with an icon&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight fsharp"&gt;&lt;code&gt;&lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"sl-button"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"size"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"large"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="p"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;printfn&lt;/span&gt; &lt;span class="s2"&gt;"Hey circle!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt;
     &lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-icon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"gear"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this should give us something like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1T6ZquKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wehd9c25xezfapxgsgza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1T6ZquKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wehd9c25xezfapxgsgza.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;no effort at all well perhaps a few keystrokes but that's it no need for wrappers, no need for bindings just the standard sutil bindings. let's try something fancier, something that emits an event let's try a menu&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight fsharp"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;printValue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="c1"&gt;// current work around until a new release with `onCustomEvent&amp;lt;'T&amp;gt;` is out&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;event&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;:?&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;CustomEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;{|&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;{|&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|}&lt;/span&gt; &lt;span class="o"&gt;|}&amp;gt;)&lt;/span&gt;

    &lt;span class="k"&gt;match&lt;/span&gt; &lt;span class="k"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt;
    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nc"&gt;Some&lt;/span&gt; &lt;span class="k"&gt;event&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;printfn&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="s2"&gt;"Got: {event.item.value}"&lt;/span&gt;
    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nc"&gt;None&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;printfn&lt;/span&gt; &lt;span class="s2"&gt;"Got nothing"&lt;/span&gt;

&lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="s2"&gt;"sl-menu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-menu-item"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="s2"&gt;"First"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;"First"&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt;
    &lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-menu-item"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="s2"&gt;"Second"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;"Second"&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt;
    &lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-menu-divider"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="s2"&gt;"sl-select"&lt;/span&gt; &lt;span class="n"&gt;printValue&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Although, we know here that we want to know the &lt;code&gt;value&lt;/code&gt; property sometimes to have proper support for the element type we will need to create a proper binding&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;handling custom events isn't that hard either even if we had to put a workaround which shouldn't be the case once the next release of Sutil (at the current time of writing) is out.&lt;/p&gt;

&lt;p&gt;There are some components that are a little bit more complex like a drawer or a dialog which have actual methods for those elements you will need to write a small binding or if the component allows it act on it with its attributes/properties&lt;/p&gt;

&lt;p&gt;let's check a dialog as an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight fsharp"&gt;&lt;code&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="nc"&gt;SlDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
  &lt;span class="k"&gt;inherit&lt;/span&gt; &lt;span class="nc"&gt;HTMLElement&lt;/span&gt;

  &lt;span class="k"&gt;abstract&lt;/span&gt; &lt;span class="k"&gt;member&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;unit&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nn"&gt;JS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;abstract&lt;/span&gt; &lt;span class="k"&gt;member&lt;/span&gt; &lt;span class="n"&gt;hide&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;unit&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nn"&gt;JS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;unit&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;openDialog&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;dialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;querySelector&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"sl-dialog"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dialog&lt;/span&gt; &lt;span class="o"&gt;:?&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;SlDialog&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="bp"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ignore&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;closeDialog&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;:?&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parentElement&lt;/span&gt; &lt;span class="o"&gt;:?&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;SlDialog&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="n"&gt;hide&lt;/span&gt; &lt;span class="bp"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ignore&lt;/span&gt;

&lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"sl-button"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;type'&lt;/span&gt; &lt;span class="s2"&gt;"warning"&lt;/span&gt;
      &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;"Open Dialog"&lt;/span&gt;
      &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="n"&gt;openDialog&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;"sl-dialog"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"My Dialog"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nn"&gt;Html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;"sl-button"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;type'&lt;/span&gt; &lt;span class="s2"&gt;"primary"&lt;/span&gt;
          &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="s2"&gt;"Close"&lt;/span&gt;
          &lt;span class="nn"&gt;Attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"slot"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"footer"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="n"&gt;closeDialog&lt;/span&gt; &lt;span class="bp"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think this might be the "worst case" scenario given that you would have to manually query for the element in the DOM, then add a binding (which is just extending HTMLElement) the simpler way in the case of this library is just to change the open attribute/property.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;When dealing with web components (either from our design system or third party individual components) we want to do a few things&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the Element via Script Tag or ESModule Import&lt;/li&gt;
&lt;li&gt;Use any of the following to define your element, its attributes and react to its changes

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Html.custom("", [])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Attr.custom("", "")&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on "event-name" handler []&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;style the css parts it has&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;while I didn't touch styling, you'll find that I overrode some variables in the styles.css file at the bottom&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prefers-color-scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--su-background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f2f2f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* The following are defined by the shoelace library and changed by us to
       let the component adapt to our color scheme */&lt;/span&gt;
    &lt;span class="py"&gt;--sl-color-gray-700&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--su-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;--sl-color-primary-500&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--su-color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If there's need for a styling write up as well let me know.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;If you like the React way of doing things (which fits completely in the functional programming realm) feel free to visit the (extremely good, even if you're not choosing Feliz give it a read) &lt;a href="https://zaid-ajaj.github.io/the-elmish-book/#/"&gt;Elmish Book&lt;/a&gt; which can give you a really good guidance on how to develop SPA's with F# and the &lt;a href="https://fable.io/"&gt;Fable Compiler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like svelte or you don't want to do everything react style (hooks, context, etc) then Sutil offers you an alternative that is quite compelling based on observables and works as any other framework. That means you can go back to certain browser API's that are automatically ruled out when using React like the Events and CustomEvents. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web Components&lt;/a&gt; are not ruled out but react &lt;a href="https://reactjs.org/docs/web-components.html"&gt;has some friction&lt;/a&gt; with them.&lt;/p&gt;

&lt;p&gt;Let me know what you think! ping me on twitter or in the comments below 😁 have an awesome weekend!&lt;/p&gt;

</description>
      <category>fsharp</category>
      <category>svelte</category>
      <category>webcomponents</category>
      <category>litelement</category>
    </item>
    <item>
      <title>Keycloak on Distroless</title>
      <author>Λ\: Davin Kevin</author>
      <pubDate>Fri, 28 May 2021 06:04:52 +0000</pubDate>
      <link>https://dev.to/stack-labs/keycloak-on-distroless-12ng</link>
      <guid>https://dev.to/stack-labs/keycloak-on-distroless-12ng</guid>
      <description>&lt;p&gt;&lt;strong&gt;Keycloak&lt;/strong&gt; is a wonderful piece of software, managed with success by RedHat, to be used as an Identity and Access Management software. RedHat distribute it as a zip package to be run on a machine with a JVM installed or as a container. Nowadays, container is a simpler solution, especially if you are using an orchestrator like &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Keycloak&lt;/strong&gt; image is available on the &lt;a href="https://hub.docker.com/r/jboss/keycloak/"&gt;DockerHub&lt;/a&gt; or &lt;a href="https://quay.io/repository/keycloak/keycloak"&gt;Quay&lt;/a&gt;. It  provides an important level of configuration through environment variables, which is useful if you are not familiar with &lt;strong&gt;WildFly&lt;/strong&gt; configuration. But, this solution has an important downside, especially for a tool dedicated to security… tags are not maintained at OS level over time and has many vulnerabilities.&lt;/p&gt;

&lt;p&gt;You can see below, a lot of vulnerabilities in the latest &lt;strong&gt;Keycloak&lt;/strong&gt; image, especially at the OS level. In some case, you can't choose to rely on so many vulnerabilities and need to fix that, or at least reduce them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;trivy image jboss/keycloak:13.0.1
2021-05-26T19:23:14.416+0200    INFO    Detected OS: redhat
2021-05-26T19:23:14.416+0200    INFO    Detecting RHEL/CentOS vulnerabilities...
2021-05-26T19:23:14.432+0200    INFO    Number of PL dependency files: 621

jboss/keycloak:13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;redhat 8.4&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;==================================&lt;/span&gt;
Total: 118 &lt;span class="o"&gt;(&lt;/span&gt;UNKNOWN: 0, LOW: 49, MEDIUM: 67, HIGH: 2, CRITICAL: 0&lt;span class="o"&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Number of CVEs in an image evolves over time, so reports in this article can be way different if you run it by yourself.&lt;/p&gt;

&lt;p&gt;On one side, you can choose to upgrade every packages in the image manually, hoping a fix is available in the official CentOS registry. Another solution is to change the &lt;em&gt;base image&lt;/em&gt; to something with less vulnerability like &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;Google Distroless&lt;/a&gt;. Those images only contain the runtime for your application and nothing less… no shell, no package manager, nothing… just your runtime. For &lt;strong&gt;Keycloak&lt;/strong&gt;, we will use the &lt;a href="https://github.com/GoogleContainerTools/distroless/tree/main/java"&gt;Distroless Java&lt;/a&gt; image to sanitize our workload.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kC_vTSbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qjax5xrl53le9h72piu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kC_vTSbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1qjax5xrl53le9h72piu.jpeg" alt="Nothing in distroless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#crafting-the-best-dockerfile-possible"&gt;
  &lt;/a&gt;
  Crafting the best Dockerfile possible
&lt;/h1&gt;

&lt;p&gt;The original &lt;strong&gt;Keycloak&lt;/strong&gt; image use a lot of &lt;code&gt;bash&lt;/code&gt; scripts to configure the whole system. This is a good idea, but here, we don't have any shell in our &lt;strong&gt;Distroless&lt;/strong&gt; base image, so we will have to extract the application, and the way to launch it from &lt;strong&gt;scratch&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-keycloak-into-distroless"&gt;
  &lt;/a&gt;
  Moving Keycloak into Distroless
&lt;/h2&gt;

&lt;p&gt;If we analyse the &lt;code&gt;jboss/keycloak:13.0.1&lt;/code&gt; image with &lt;a href="https://github.com/wagoodman/dive"&gt;Dive&lt;/a&gt;, we can see all &lt;strong&gt;Keycloak&lt;/strong&gt; related files are stored into &lt;code&gt;/opt/jboss/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Av5yPa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kyd201hv91x9uww7sku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Av5yPa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kyd201hv91x9uww7sku.png" alt="dive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will copy them into our distroless then, with the following &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; jboss/keycloak:13.0.1 as base&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/java:11-nonroot&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --chown=nonroot:nonroot --from=base /opt/jboss /opt/jboss&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The execution is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; keycloak-distroless &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;+] Building 0.6s &lt;span class="o"&gt;(&lt;/span&gt;8/8&lt;span class="o"&gt;)&lt;/span&gt; FINISHED
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load build definition from Dockerfile                       0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring dockerfile: 37B                                        0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load .dockerignore                                          0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring context: 2B                                            0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load metadata &lt;span class="k"&gt;for &lt;/span&gt;gcr.io/distroless/java:11-nonroot         0.5s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load metadata &lt;span class="k"&gt;for &lt;/span&gt;docker.io/jboss/keycloak:13.0.1           0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;base 1/1] FROM docker.io/jboss/keycloak:13.0.1                        0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;stage-1 1/2] FROM gcr.io/distroless/java:11-nonroot@sha256:07d017944  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; CACHED &lt;span class="o"&gt;[&lt;/span&gt;stage-1 2/2] COPY &lt;span class="nt"&gt;--chown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nonroot:nonroot &lt;span class="nt"&gt;--from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;base /opt/jb  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting to image                                                     0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting layers                                                    0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; writing image sha256:06e849f0ab369043be9c071a446484e2a699a114dd988  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; naming to docker.io/library/keycloak-distroless                     0.0s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sadly, if we are launching it like this, we will see the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 keycloak-distroless
Error: &lt;span class="nt"&gt;-jar&lt;/span&gt; requires jar file specification
Usage: java &lt;span class="o"&gt;[&lt;/span&gt;options] &amp;lt;mainclass&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;args...]
           &lt;span class="o"&gt;(&lt;/span&gt;to execute a class&lt;span class="o"&gt;)&lt;/span&gt;
   or  java &lt;span class="o"&gt;[&lt;/span&gt;options] &lt;span class="nt"&gt;-jar&lt;/span&gt; &amp;lt;jarfile&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;args...]
           &lt;span class="o"&gt;(&lt;/span&gt;to execute a jar file&lt;span class="o"&gt;)&lt;/span&gt;
   or  java &lt;span class="o"&gt;[&lt;/span&gt;options] &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;module&amp;gt;[/&amp;lt;mainclass&amp;gt;] &lt;span class="o"&gt;[&lt;/span&gt;args...]
       java &lt;span class="o"&gt;[&lt;/span&gt;options] &lt;span class="nt"&gt;--module&lt;/span&gt; &amp;lt;module&amp;gt;[/&amp;lt;mainclass&amp;gt;] &lt;span class="o"&gt;[&lt;/span&gt;args...]
           &lt;span class="o"&gt;(&lt;/span&gt;to execute the main class &lt;span class="k"&gt;in &lt;/span&gt;a module&lt;span class="o"&gt;)&lt;/span&gt;
   or  java &lt;span class="o"&gt;[&lt;/span&gt;options] &amp;lt;sourcefile&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;args]
           &lt;span class="o"&gt;(&lt;/span&gt;to execute a single source-file program&lt;span class="o"&gt;)&lt;/span&gt;

 Arguments following the main class, &lt;span class="nb"&gt;source &lt;/span&gt;file, &lt;span class="nt"&gt;-jar&lt;/span&gt; &amp;lt;jarfile&amp;gt;,
 &lt;span class="nt"&gt;-m&lt;/span&gt; or &lt;span class="nt"&gt;--module&lt;/span&gt; &amp;lt;module&amp;gt;/&amp;lt;mainclass&amp;gt; are passed as the arguments to
 main class.
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is because the default &lt;code&gt;ENTRYPOINT&lt;/code&gt; of this &lt;strong&gt;distroless&lt;/strong&gt; image want to launch a (fat) &lt;strong&gt;JAR&lt;/strong&gt;, but keycloak is more complex than this, so we will have to find the right &lt;code&gt;ENTRYPOINT&lt;/code&gt; for our use case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-the-entrypoint"&gt;
  &lt;/a&gt;
  Generating the ENTRYPOINT
&lt;/h2&gt;

&lt;p&gt;For this one, we will use the original image to &lt;em&gt;see&lt;/em&gt; how Keycloak is launched in its natural state. To do that, we will edit the &lt;code&gt;standalone.sh&lt;/code&gt; file to make it more verbose and copy the &lt;code&gt;java&lt;/code&gt; command generated from it. We will follow &lt;a href="https://hub.docker.com/r/jboss/keycloak/"&gt;the official documentation&lt;/a&gt; to launch keycloak, but we will log into the container to do our magic trick:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Starting the container with the minimal configuration and log into it thanks to the custom entrypoint&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_VENDOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;h2 &lt;span class="nt"&gt;--entrypoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bash jboss/keycloak:13.0.1
&lt;span class="c"&gt;# From here, we are IN the Keycloak image!&lt;/span&gt;
&lt;span class="c"&gt;# The following command update the standalone.sh file to be a lot verbose&lt;/span&gt;
bash-4.4&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;awk&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; inplace &lt;span class="s1"&gt;'NR==2 {print "set -x"} 1'&lt;/span&gt; /opt/jboss/keycloak/bin/standalone.sh
&lt;span class="c"&gt;# Finally, we will launch keycloak from here and stop it when we found the line starting with "++ java"&lt;/span&gt;
bash-4.4&lt;span class="nv"&gt;$ &lt;/span&gt;/opt/jboss/tools/docker-entrypoint.sh

&lt;span class="o"&gt;=========================================================================&lt;/span&gt;

  Using Embedded H2 database

&lt;span class="o"&gt;=========================================================================&lt;/span&gt;

+ &lt;span class="nv"&gt;DEBUG_MODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;DEBUG_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8787
+ &lt;span class="nv"&gt;GC_LOG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="nv"&gt;SERVER_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; 3 &lt;span class="nt"&gt;-gt&lt;/span&gt; 0 &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="nv"&gt;SERVER_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
+ &lt;span class="nb"&gt;shift&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; 2 &lt;span class="nt"&gt;-gt&lt;/span&gt; 0 &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="nv"&gt;SERVER_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address.private=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
+ &lt;span class="nb"&gt;shift&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; 1 &lt;span class="nt"&gt;-gt&lt;/span&gt; 0 &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="nv"&gt;SERVER_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address.private=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-c=standalone-ha.xml'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
+ &lt;span class="nb"&gt;shift&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; 0 &lt;span class="nt"&gt;-gt&lt;/span&gt; 0 &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nb"&gt;dirname&lt;/span&gt; /opt/jboss/keycloak/bin/standalone.sh
+ &lt;span class="nv"&gt;DIRNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/bin
++ &lt;span class="nb"&gt;basename&lt;/span&gt; /opt/jboss/keycloak/bin/standalone.sh
+ &lt;span class="nv"&gt;PROGNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;standalone.sh
+ &lt;span class="nv"&gt;GREP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;grep&lt;/span&gt;
+ &lt;span class="nb"&gt;.&lt;/span&gt; /opt/jboss/keycloak/bin/common.sh
++ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nv"&gt;COMMON_CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/bin/common.conf
++ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; /opt/jboss/keycloak/bin/common.conf &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;MAX_FD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;maximum
+ &lt;span class="nv"&gt;MALLOC_ARENA_MAX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
+ &lt;span class="nb"&gt;export &lt;/span&gt;MALLOC_ARENA_MAX
+ &lt;span class="nv"&gt;cygwin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;darwin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;solaris&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;freebsd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;other&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;uname&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
++ &lt;span class="nb"&gt;uname&lt;/span&gt;
+ &lt;span class="nv"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
++ &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/jboss/keycloak/bin/..
++ &lt;span class="nb"&gt;pwd&lt;/span&gt;
+ &lt;span class="nv"&gt;RESOLVED_JBOSS_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x/opt/jboss/keycloak &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/jboss/keycloak
++ &lt;span class="nb"&gt;pwd&lt;/span&gt;
+ &lt;span class="nv"&gt;SANITIZED_JBOSS_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak
+ &lt;span class="s1"&gt;'['&lt;/span&gt; /opt/jboss/keycloak &lt;span class="s1"&gt;'!='&lt;/span&gt; /opt/jboss/keycloak &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;export &lt;/span&gt;JBOSS_HOME
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;RUN_CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/bin/standalone.conf
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; /opt/jboss/keycloak/bin/standalone.conf &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;.&lt;/span&gt; /opt/jboss/keycloak/bin/standalone.conf
++ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nv"&gt;JBOSS_MODULES_SYSTEM_PKGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman
++ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nv"&gt;JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true'&lt;/span&gt;
++ &lt;span class="nv"&gt;JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true'&lt;/span&gt;
++ &lt;span class="nv"&gt;JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true '&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;JAVA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java
+ &lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="nv"&gt;CONSOLIDATED_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true   '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address.private=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-c=standalone-ha.xml'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Xms64m&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Xmx512m&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Djboss&lt;/span&gt;.bind.address&lt;span class="o"&gt;=&lt;/span&gt;172.17.0.2
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address.private=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-Djboss&lt;/span&gt;.bind.address.private&lt;span class="o"&gt;=&lt;/span&gt;172.17.0.2
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="k"&gt;for &lt;/span&gt;var &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$CONSOLIDATED_OPTS&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-c=standalone-ha.xml'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;
++ &lt;span class="nb"&gt;tr&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\'&lt;/span&gt;
+ &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;-c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;standalone-ha.xml
+ &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;JBOSS_BASE_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/standalone
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;JBOSS_LOG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/standalone/log
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;JBOSS_CONFIG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/standalone/configuration
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;JBOSS_MODULEPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/modules
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="s1"&gt;'!='&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-d64'&lt;/span&gt;
+ &lt;span class="nv"&gt;JVM_D64_OPTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-d32'&lt;/span&gt;
+ &lt;span class="nv"&gt;JVM_D32_OPTION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-server'&lt;/span&gt;
+ &lt;span class="nv"&gt;SERVER_SET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-client'&lt;/span&gt;
+ &lt;span class="nv"&gt;CLIENT_SET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="nt"&gt;-a&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;false&lt;/span&gt;
+ &lt;span class="nv"&gt;PREPEND_JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' -server'&lt;/span&gt;
+ setModularJdk
+ java &lt;span class="nt"&gt;--add-modules&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.se &lt;span class="nt"&gt;-version&lt;/span&gt;
+ &lt;span class="nv"&gt;MODULAR_JDK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;
+ setDefaultModularJvmOptions &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ setModularJdk
+ java &lt;span class="nt"&gt;--add-modules&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.se &lt;span class="nt"&gt;-version&lt;/span&gt;
+ &lt;span class="nv"&gt;MODULAR_JDK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-\-add\-modules'&lt;/span&gt;
+ &lt;span class="nv"&gt;DEFAULT_MODULAR_JVM_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;DEFAULT_MODULAR_JVM_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' --add-exports=java.base/sun.nio.ch=ALL-UNNAMED'&lt;/span&gt;
+ &lt;span class="nv"&gt;DEFAULT_MODULAR_JVM_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED'&lt;/span&gt;
+ &lt;span class="nv"&gt;DEFAULT_MODULAR_JVM_OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED'&lt;/span&gt;
+ &lt;span class="nv"&gt;JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true   --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED'&lt;/span&gt;
+ &lt;span class="nv"&gt;JAVA_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;' -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true   --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED'&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nt"&gt;-server&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.base/sun.nio.ch&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.misc&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.reflect&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'java\.security\.manager'&lt;/span&gt;
+ &lt;span class="nv"&gt;SECURITY_MANAGER_SET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;MODULE_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;']'&lt;/span&gt;
++ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
++ &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'\-javaagent:'&lt;/span&gt;
+ &lt;span class="nv"&gt;AGENT_SET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;=========================================================================&lt;/span&gt;
&lt;span class="o"&gt;=========================================================================&lt;/span&gt;
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'  JBoss Bootstrap Environment'&lt;/span&gt;
  JBoss Bootstrap Environment
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'  JBOSS_HOME: /opt/jboss/keycloak'&lt;/span&gt;
  JBOSS_HOME: /opt/jboss/keycloak
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'  JAVA: java'&lt;/span&gt;
  JAVA: java
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'  JAVA_OPTS:  -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true   --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED'&lt;/span&gt;
  JAVA_OPTS:  &lt;span class="nt"&gt;-server&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;   &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.base/sun.nio.ch&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.misc&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.reflect&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;=========================================================================&lt;/span&gt;
&lt;span class="o"&gt;=========================================================================&lt;/span&gt;
+ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

+ &lt;span class="nb"&gt;true&lt;/span&gt;
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x1 &lt;span class="o"&gt;=&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s1"&gt;'"java"'&lt;/span&gt; &lt;span class="s1"&gt;'-D"[Standalone]"'&lt;/span&gt; &lt;span class="nt"&gt;-server&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.base/sun.nio.ch&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.misc&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.reflect&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="s1"&gt;'"-Dorg.jboss.boot.log.file=/opt/jboss/keycloak/standalone/log/server.log"'&lt;/span&gt; &lt;span class="s1"&gt;'"-Dlogging.configuration=file:/opt/jboss/keycloak/standalone/configuration/logging.properties"'&lt;/span&gt; &lt;span class="nt"&gt;-jar&lt;/span&gt; &lt;span class="s1"&gt;'"/opt/jboss/keycloak/jboss-modules.jar"'&lt;/span&gt; &lt;span class="nt"&gt;-mp&lt;/span&gt; &lt;span class="s1"&gt;'"/opt/jboss/keycloak/modules"'&lt;/span&gt; org.jboss.as.standalone &lt;span class="s1"&gt;'-Djboss.home.dir="/opt/jboss/keycloak"'&lt;/span&gt; &lt;span class="s1"&gt;'-Djboss.server.base.dir="/opt/jboss/keycloak/standalone"'&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-Djboss.bind.address.private=172.17.0.2'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;'-c=standalone-ha.xml'&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="s1"&gt;'&amp;amp;'&lt;/span&gt;
+ &lt;span class="nv"&gt;JBOSS_PID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;122
+ &lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;'kill -HUP  122'&lt;/span&gt; HUP
++ java &lt;span class="s1"&gt;'-D[Standalone]'&lt;/span&gt; &lt;span class="nt"&gt;-server&lt;/span&gt; &lt;span class="nt"&gt;-Xms64m&lt;/span&gt; &lt;span class="nt"&gt;-Xmx512m&lt;/span&gt; &lt;span class="nt"&gt;-XX&lt;/span&gt;:MetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;96M &lt;span class="nt"&gt;-XX&lt;/span&gt;:MaxMetaspaceSize&lt;span class="o"&gt;=&lt;/span&gt;256m &lt;span class="nt"&gt;-Djava&lt;/span&gt;.net.preferIPv4Stack&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.modules.system.pkgs&lt;span class="o"&gt;=&lt;/span&gt;org.jboss.byteman &lt;span class="nt"&gt;-Djava&lt;/span&gt;.awt.headless&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java.base/sun.nio.ch&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.misc&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;--add-exports&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;jdk.unsupported/sun.reflect&lt;span class="o"&gt;=&lt;/span&gt;ALL-UNNAMED &lt;span class="nt"&gt;-Dorg&lt;/span&gt;.jboss.boot.log.file&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/standalone/log/server.log &lt;span class="nt"&gt;-Dlogging&lt;/span&gt;.configuration&lt;span class="o"&gt;=&lt;/span&gt;file:/opt/jboss/keycloak/standalone/configuration/logging.properties &lt;span class="nt"&gt;-jar&lt;/span&gt; /opt/jboss/keycloak/jboss-modules.jar &lt;span class="nt"&gt;-mp&lt;/span&gt; /opt/jboss/keycloak/modules org.jboss.as.standalone &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.home.dir&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.server.base.dir&lt;span class="o"&gt;=&lt;/span&gt;/opt/jboss/keycloak/standalone &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.bind.address&lt;span class="o"&gt;=&lt;/span&gt;172.17.0.2 &lt;span class="nt"&gt;-Djboss&lt;/span&gt;.bind.address.private&lt;span class="o"&gt;=&lt;/span&gt;172.17.0.2 &lt;span class="nt"&gt;-c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;standalone-ha.xml
+ &lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;'kill -TERM 122'&lt;/span&gt; INT
+ &lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;'kill -QUIT 122'&lt;/span&gt; QUIT
+ &lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;'kill -PIPE 122'&lt;/span&gt; PIPE
+ &lt;span class="nb"&gt;trap&lt;/span&gt; &lt;span class="s1"&gt;'kill -TERM 122'&lt;/span&gt; TERM
+ &lt;span class="s1"&gt;'['&lt;/span&gt; x &lt;span class="s1"&gt;'!='&lt;/span&gt; x &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nv"&gt;WAIT_STATUS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;128
+ &lt;span class="s1"&gt;'['&lt;/span&gt; 128 &lt;span class="nt"&gt;-ge&lt;/span&gt; 128 &lt;span class="s1"&gt;']'&lt;/span&gt;
+ &lt;span class="nb"&gt;wait &lt;/span&gt;122
18:08:24,393 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="p"&gt;)&lt;/span&gt; JBoss Modules version 1.11.0.Final
18:08:25,034 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss MSC version 1.4.12.Final
18:08:25,050 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.threads] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss Threads version 2.4.0.Final
18:08:25,219 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0049: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; starting
18:08:25,412 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.vfs] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class="o"&gt;)&lt;/span&gt; VFS000002: Failed to clean existing content &lt;span class="k"&gt;for &lt;/span&gt;temp file provider of &lt;span class="nb"&gt;type &lt;/span&gt;temp. Enable DEBUG level log to find what caused this
18:08:26,228 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.wildfly.security] &lt;span class="o"&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class="nt"&gt;--&lt;/span&gt; 22&lt;span class="o"&gt;)&lt;/span&gt; ELY00001: WildFly Elytron version 1.15.3.Final
^C
bash-4.4&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the huge starting log, we can see the following command, starting with &lt;code&gt;++ java&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;java '-D[Standalone]' -server -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED --add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED -Dorg.jboss.boot.log.file=/opt/jboss/keycloak/standalone/log/server.log -Dlogging.configuration=file:/opt/jboss/keycloak/standalone/configuration/logging.properties -jar /opt/jboss/keycloak/jboss-modules.jar -mp /opt/jboss/keycloak/modules org.jboss.as.standalone -Djboss.home.dir=/opt/jboss/keycloak -Djboss.server.base.dir=/opt/jboss/keycloak/standalone -Djboss.bind.address=172.17.0.2 -Djboss.bind.address.private=172.17.0.2 -c=standalone-ha.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;java&lt;/code&gt; command we will put inside our &lt;code&gt;Dockerfile&lt;/code&gt;, as an &lt;code&gt;ENTRYPOINT&lt;/code&gt; to make &lt;strong&gt;Keycloak&lt;/strong&gt; start.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; jboss/keycloak:13.0.1 as base&lt;/span&gt;

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; gcr.io/distroless/java:11-nonroot&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --chown=nonroot:nonroot --from=base /opt/jboss /opt/jboss&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; [ "java", "-D[Standalone]", "-server", "-Xms64m", "-Xmx512m", "-XX:MetaspaceSize=96M", "-XX:MaxMetaspaceSize=256m", "-Djava.net.preferIPv4Stack=true", "-Djboss.modules.system.pkgs=org.jboss.byteman", "-Djava.awt.headless=true", "--add-exports=java.base/sun.nio.ch=ALL-UNNAMED", "--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED", "--add-exports=jdk.unsupported/sun.reflect=ALL-UNNAMED", "-Dorg.jboss.boot.log.file=/opt/jboss/keycloak/standalone/log/server.log", "-Dlogging.configuration=file:/opt/jboss/keycloak/standalone/configuration/logging.properties", "-jar", "/opt/jboss/keycloak/jboss-modules.jar", "-mp", "/opt/jboss/keycloak/modules", "org.jboss.as.standalone", "-Djboss.home.dir=/opt/jboss/keycloak", "-Djboss.server.base.dir=/opt/jboss/keycloak/standalone", "-Djboss.bind.address=0.0.0.0", "-Djboss.bind.address.private=1720.0.0.0", "-c=standalone.xml" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: You can tune this command to increase or decrease the memory setup, the private/public bind address of your keycloak instance and many other parameters. Here, we changed the configuration file used (&lt;code&gt;-c=standalone.xml&lt;/code&gt; instead of &lt;code&gt;-c=standalone-ha.xml&lt;/code&gt; for simplicity reasons) and the bound ip adresses (to &lt;code&gt;0.0.0.0&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;If we build and run this, we will be able to access the Keycloak UI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; keycloak-distroless &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;+] Building 0.6s &lt;span class="o"&gt;(&lt;/span&gt;8/8&lt;span class="o"&gt;)&lt;/span&gt; FINISHED
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load build definition from Dockerfile                       0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring dockerfile: 37B                                        0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load .dockerignore                                          0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; transferring context: 2B                                            0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load metadata &lt;span class="k"&gt;for &lt;/span&gt;gcr.io/distroless/java:11-nonroot         0.5s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;internal] load metadata &lt;span class="k"&gt;for &lt;/span&gt;docker.io/jboss/keycloak:13.0.1           0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;base 1/1] FROM docker.io/jboss/keycloak:13.0.1                        0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;stage-1 1/2] FROM gcr.io/distroless/java:11-nonroot@sha256:07d017944  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; CACHED &lt;span class="o"&gt;[&lt;/span&gt;stage-1 2/2] COPY &lt;span class="nt"&gt;--chown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nonroot:nonroot &lt;span class="nt"&gt;--from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;base /opt/jb  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting to image                                                     0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; exporting layers                                                    0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; writing image sha256:100908720c19018f2408bb53a5d78ef3d9eb51391b165  0.0s
 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; naming to docker.io/library/keycloak-distroless                     0.0s

&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 keycloak-distroless
18:15:22,645 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss Modules version 1.11.0.Final
18:15:23,283 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss MSC version 1.4.12.Final
18:15:23,292 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.threads] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss Threads version 2.4.0.Final
18:15:23,452 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0049: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; starting
18:15:23,694 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.vfs] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-5&lt;span class="o"&gt;)&lt;/span&gt; VFS000002: Failed to clean existing content &lt;span class="k"&gt;for &lt;/span&gt;temp file provider of &lt;span class="nb"&gt;type &lt;/span&gt;temp. Enable DEBUG level log to find what caused this
18:15:24,457 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.wildfly.security] &lt;span class="o"&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class="nt"&gt;--&lt;/span&gt; 22&lt;span class="o"&gt;)&lt;/span&gt; ELY00001: WildFly Elytron version 1.15.3.Final
...
...
18:15:44,642 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.wildfly.extension.undertow] &lt;span class="o"&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class="nt"&gt;--&lt;/span&gt; 66&lt;span class="o"&gt;)&lt;/span&gt; WFLYUT0021: Registered web context: &lt;span class="s1"&gt;'/auth'&lt;/span&gt; &lt;span class="k"&gt;for &lt;/span&gt;server &lt;span class="s1"&gt;'default-server'&lt;/span&gt;
18:15:44,778 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as.server] &lt;span class="o"&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class="nt"&gt;--&lt;/span&gt; 46&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0010: Deployed &lt;span class="s2"&gt;"keycloak-server.war"&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;runtime-name : &lt;span class="s2"&gt;"keycloak-server.war"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
18:15:44,886 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as.server] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0212: Resuming server
18:15:44,892 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0025: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; started &lt;span class="k"&gt;in &lt;/span&gt;22800ms - Started 692 of 977 services &lt;span class="o"&gt;(&lt;/span&gt;686 services are lazy, passive or on-demand&lt;span class="o"&gt;)&lt;/span&gt;
18:15:44,896 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management
18:15:44,896 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0051: Admin console listening on http://127.0.0.1:9990
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we try to access &lt;code&gt;http://localhost:8080/&lt;/code&gt;, we can see the following page 🎉.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DGmNCISv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lk0ikvc8fpzw4yl1uby.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DGmNCISv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lk0ikvc8fpzw4yl1uby.png" alt="keycloak-ui-from-distroless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a good start, but this is just the minimal setup with &lt;code&gt;H2&lt;/code&gt; database, we often want something more robust for production!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-the-perfect-configuration"&gt;
  &lt;/a&gt;
  Generating the perfect configuration
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;jboss/keycloak&lt;/code&gt; image use a lot of environment variables to configure keycloak (and the underlying &lt;code&gt;standalone.xml&lt;/code&gt;) for you… but in our case, we can't use that because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We don't have a &lt;code&gt;shell&lt;/code&gt; to run those scripts.&lt;/li&gt;
&lt;li&gt;We don't want to run those scripts at every startup / scale-up.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, we will have to &lt;em&gt;steal&lt;/em&gt; the generated &lt;code&gt;standalone.xml&lt;/code&gt; file from the original container, post start-up, and include it in our container. For this example, I will use &lt;code&gt;PostgreSQL&lt;/code&gt; as our main database.&lt;/p&gt;

&lt;p&gt;To do this, I will use two shells side-by-side, one to launch Keycloak, and the other one to fetch the configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In the first shell&lt;/span&gt;
&lt;span class="c"&gt;# Creation of a docker network&lt;/span&gt;
first-shell&lt;span class="nv"&gt;$ &lt;/span&gt;docker network create keycloak-network
4da77163731b584bef2c6d0b00386b9d62e31fa216204c6c6795f66e109ba1a6
&lt;span class="c"&gt;# Launching PostgreSQL linked to the network previously created&lt;/span&gt;
first-shell&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; postgres &lt;span class="nt"&gt;--net&lt;/span&gt; keycloak-network &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;keycloak &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;keycloak &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password postgres
229816da42707e772542f1b089c616a2333a6fbe1aea2be7efe658d6f2c934a1
first-shell&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;--name&lt;/span&gt; keycloak &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_ADDR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;postgres &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;keycloak &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;KEYCLOAK_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;foo &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;KEYCLOAK_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bar &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--net&lt;/span&gt; keycloak-network jboss/keycloak:13.0.1

&lt;span class="o"&gt;=========================================================================&lt;/span&gt;

  Using PostgreSQL database

&lt;span class="o"&gt;=========================================================================&lt;/span&gt;

18:32:25,172 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class="o"&gt;(&lt;/span&gt;CLI &lt;span class="nb"&gt;command &lt;/span&gt;executor&lt;span class="o"&gt;)&lt;/span&gt; JBoss Modules version 1.11.0.Final
18:32:25,279 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class="o"&gt;(&lt;/span&gt;CLI &lt;span class="nb"&gt;command &lt;/span&gt;executor&lt;span class="o"&gt;)&lt;/span&gt; JBoss MSC version 1.4.12.Final
18:32:25,302 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.threads] &lt;span class="o"&gt;(&lt;/span&gt;CLI &lt;span class="nb"&gt;command &lt;/span&gt;executor&lt;span class="o"&gt;)&lt;/span&gt; JBoss Threads version 2.4.0.Final
18:32:25,453 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0049: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; starting
...
18:32:59,128 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management
18:32:59,129 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0051: Admin console listening on http://127.0.0.1:9990 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In another shell, while the previous is still running, we will execute the following command to get the &lt;code&gt;standalone.xml&lt;/code&gt; file used to configure &lt;strong&gt;Keycloak&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;second-shell&lt;span class="nv"&gt;$ &lt;/span&gt;docker &lt;span class="nb"&gt;cp &lt;/span&gt;keycloak:/opt/jboss/keycloak/standalone/configuration/standalone.xml &lt;span class="nb"&gt;.&lt;/span&gt;
second-shell&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;ls
&lt;/span&gt;standalone.xml
&lt;span class="c"&gt;# We can now stop the keycloak container&lt;/span&gt;
second-shell&lt;span class="nv"&gt;$ &lt;/span&gt;docker stop keycloak
keycloak
second-shell&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will start the &lt;strong&gt;Distroless Keycloak&lt;/strong&gt; and mount the &lt;code&gt;standalone.xml&lt;/code&gt; inside the container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;keycloak &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password &lt;span class="nt"&gt;--net&lt;/span&gt; keycloak-network &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 keycloak-distroless
19:42:20,707 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.modules] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss Modules version 1.11.0.Final
19:42:21,317 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.msc] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss MSC version 1.4.12.Final
19:42:21,329 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.threads] &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; JBoss Threads version 2.4.0.Final
19:42:21,470 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0049: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; starting
19:42:21,651 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.vfs] &lt;span class="o"&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class="o"&gt;)&lt;/span&gt; VFS000002: Failed to clean existing content &lt;span class="k"&gt;for &lt;/span&gt;temp file provider of &lt;span class="nb"&gt;type &lt;/span&gt;temp. Enable DEBUG level log to find what caused this
19:42:22,577 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.wildfly.security] &lt;span class="o"&gt;(&lt;/span&gt;ServerService Thread Pool &lt;span class="nt"&gt;--&lt;/span&gt; 20&lt;span class="o"&gt;)&lt;/span&gt; ELY00001: WildFly Elytron version 1.15.3.Final
...
19:43:58,356 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0025: Keycloak 13.0.1 &lt;span class="o"&gt;(&lt;/span&gt;WildFly Core 15.0.1.Final&lt;span class="o"&gt;)&lt;/span&gt; started &lt;span class="k"&gt;in &lt;/span&gt;17828ms - Started 595 of 873 services &lt;span class="o"&gt;(&lt;/span&gt;584 services are lazy, passive or on-demand&lt;span class="o"&gt;)&lt;/span&gt;
19:43:58,362 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0060: Http management interface listening on http://127.0.0.1:9990/management
19:43:58,363 INFO  &lt;span class="o"&gt;[&lt;/span&gt;org.jboss.as] &lt;span class="o"&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class="o"&gt;)&lt;/span&gt; WFLYSRV0051: Admin console listening on http://127.0.0.1:9990
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;strong&gt;Voila&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYI3fOmI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8o9no0uv4590wnqpnra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYI3fOmI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8o9no0uv4590wnqpnra.png" alt="keycloak-auth"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jXjJvbTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jky6d1pt4milf243xcup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jXjJvbTA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jky6d1pt4milf243xcup.png" alt="keycloak-login"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D6xQbD7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6stjtu120ximoqrklovd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D6xQbD7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6stjtu120ximoqrklovd.png" alt="keycloak-ui"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-about-security"&gt;
  &lt;/a&gt;
  What about security?
&lt;/h1&gt;

&lt;p&gt;The original and main purpose of this manipulation is to reduce the number of CVEs present in our image. We will be able to compare it using &lt;a href="https://github.com/aquasecurity/trivy"&gt;trivy&lt;/a&gt; again on our newly image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;trivy image keycloak-distroless
2021-05-26T21:11:15.959+0200    INFO    Detected OS: debian
2021-05-26T21:11:15.959+0200    INFO    Detecting Debian vulnerabilities...
2021-05-26T21:11:15.963+0200    INFO    Number of PL dependency files: 621
2021-05-26T21:11:15.963+0200    INFO    Detecting jar vulnerabilities...

keycloak-distroless &lt;span class="o"&gt;(&lt;/span&gt;debian 10.9&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=================================&lt;/span&gt;
Total: 27 &lt;span class="o"&gt;(&lt;/span&gt;UNKNOWN: 0, LOW: 23, MEDIUM: 3, HIGH: 1, CRITICAL: 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see, our image contain fewer vulnerabilities, at &lt;code&gt;LOW&lt;/code&gt;, &lt;code&gt;MEDIUM&lt;/code&gt; or &lt;code&gt;HIGH&lt;/code&gt; level. Again, this depends on &lt;em&gt;when&lt;/em&gt; you are doing this analysis. With the solution provided in this article, you'll be able to rebuild your keycloak on a new, up-to-date, &lt;strong&gt;Distroless base&lt;/strong&gt; image without &lt;em&gt;updating&lt;/em&gt; keycloak. With the original keycloak image, the keycloak version is tied to the OS version (and security flaws).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The &lt;code&gt;jboss/keycloak:13.0.1&lt;/code&gt; was released few hours before the creation of this article while the &lt;code&gt;distroless/java-debian10:non-root&lt;/code&gt; was released 1 month ago. This is the worst comparison scenario possible for the &lt;strong&gt;Distroless&lt;/strong&gt; base image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i7VvNvha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg69znq0rbkaxirtjxky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i7VvNvha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg69znq0rbkaxirtjxky.png" alt="dive-distroless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another benefit of this alternative is to create a smaller image for keycloak. The previous &lt;code&gt;dive&lt;/code&gt; reports stated &lt;code&gt;698 MB&lt;/code&gt; for the official image when our custom image weight only &lt;code&gt;519 MB&lt;/code&gt;, so around &lt;code&gt;179 MB&lt;/code&gt; reduction 🏋️‍♂️, and I'm sure we can remove almost &lt;code&gt;100MB&lt;/code&gt; by removing all useless binaries in the image (useless drivers, command line tools, documentation…).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;With this article, you should be able to build, from the official &lt;code&gt;jboss/keycloak&lt;/code&gt; image a custom one based on the &lt;strong&gt;Distroless/java&lt;/strong&gt; and even fix CVEs by doing it again when a new version of &lt;strong&gt;Distroless/java&lt;/strong&gt; image is released.&lt;/p&gt;

&lt;p&gt;I hope you liked it, you can find all the sample files from this article in this &lt;strong&gt;GitLab&lt;/strong&gt; repository: &lt;a href="https://gitlab.com/davinkevin/keycloak-distroless"&gt;davinkevin/keycloak-distroless&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>keycloak</category>
      <category>docker</category>
      <category>security</category>
      <category>java</category>
    </item>
    <item>
      <title>React Redux: A Complete Guide to Beginners</title>
      <author>ashikacronj</author>
      <pubDate>Fri, 28 May 2021 05:43:08 +0000</pubDate>
      <link>https://dev.to/ashikacronj/react-redux-a-complete-guide-to-beginners-2a45</link>
      <guid>https://dev.to/ashikacronj/react-redux-a-complete-guide-to-beginners-2a45</guid>
      <description>&lt;p&gt;React Redux: As the name suggests it’s a &lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;javascript library&lt;/a&gt; created by Facebook and it is the most popular javascript library and used for building l &lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;User Interfaces(UI)&lt;/a&gt;  specifically for single-page applications. React js enables the developer to break down complicated UI into a simpler one. We can make particular changes in data of web applications without refreshing the page. React allows creating reusable components.&lt;/p&gt;

&lt;p&gt;Advantages of React js&lt;/p&gt;

&lt;p&gt;Easy to learn and Easy to use:&lt;br&gt;
 React is easy to learn and simple to use and comes with lots of good paperwork, tutorials, and training resources. You can use plain JavaScript to create a web application and then handle it using this. It is also known as the V in &lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;the MVC (Model View Controller) pattern&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Virtual DOM:&lt;br&gt;
&lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;Virtual DOM&lt;/a&gt; is a memory-representation of Real DOM(Document Object Model). A virtual DOM is a lightweight JavaScript object that is originally just a copy of Real DOM.&lt;br&gt;
 It helps to improve performance and thus the rendering of the app is fast.&lt;/p&gt;

&lt;p&gt;CodeReability increases with JSX:&lt;br&gt;
JSX stands  for javascript XML.This is a sort of file used by React which utilizes javascript expressiveness along with HTML like template syntax.JSX makes your code simple and better.&lt;/p&gt;

&lt;p&gt;Reusable Components:&lt;br&gt;
Each &lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;component&lt;/a&gt; has its logic and controls its own rendering and can be reused wherever you need it. Component reusability helps to create your application simpler and increases performance.&lt;/p&gt;

&lt;p&gt;Need for React Redux:&lt;br&gt;
1) The core problem with React js is state Management.&lt;br&gt;
2) There may be the same data to display in multiple places. Redux has a different approach, redux offers a solution storing all your application state in one place called store. The component then dispatch state changes to the store not directly to the component.&lt;/p&gt;

&lt;p&gt;What is Redux??&lt;br&gt;
Redux is a predictable state container for javascript applications. It helps you write applications that behave consistently and run in different environments and are easy to test. Redux mostly used for state Management.&lt;/p&gt;

&lt;p&gt;Advantages of Using Redux&lt;/p&gt;

&lt;p&gt;Redux makes state Predictable:&lt;br&gt;
In redux the state is Predictable when same state and action passed to a reducer. Its always produce same the same result. since reducers are pure functions. The state is also unchangeable and never changed. This allow us for arduous task such as infinite redo and undo.&lt;/p&gt;

&lt;p&gt;Maintainability:&lt;br&gt;
Redux is strict about how code should be organized, which makes understanding the structure of any redux application easier for someone with redux knowledge. This generally makes the maintenance easier.&lt;/p&gt;

&lt;p&gt;Ease of testing:&lt;br&gt;
Redux apps can be easily tested since functions are used to change the state of pure functions.&lt;/p&gt;

&lt;p&gt;Redux-data flow (diagram)&lt;/p&gt;

&lt;p&gt;Redux is composed of the following components:&lt;br&gt;
Action&lt;br&gt;
Reducer&lt;br&gt;
Store &lt;br&gt;
View&lt;/p&gt;

&lt;p&gt;Action: Actions are the payload of information that sends data from your application to your store. Actions describe the fact that something happens but do not specify how the application state changes in the response.&lt;br&gt;
Action must have a type property that indicates types of action being performed&lt;br&gt;
they must be defined as a string constant.&lt;/p&gt;

&lt;p&gt;Action-type:&lt;/p&gt;

&lt;p&gt;export const ADD_ITEM=’ADD_ITEM,&lt;/p&gt;

&lt;p&gt;Action-creator:&lt;/p&gt;

&lt;p&gt;import * as actionType from ‘./action-types’&lt;/p&gt;

&lt;p&gt;function addItem(item) {&lt;/p&gt;

&lt;p&gt;return {&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   type: actionType.ADD_ITEM,

   payload:item
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Reducer: Reducer is a pure function which specifies how application state change in response to an action. Reducer handle action dispatch by the component. Reducer takes a previous state and action and returns a new state. Reducer does not manipulate the original state passed to them but make their own copies and update them.&lt;/p&gt;

&lt;p&gt;function reducer(state = initialState, action) {&lt;/p&gt;

&lt;p&gt;switch (action.type) {&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   case ‘ADD_ITEM’:

       return Object.assign({}, state,

           { items: [ …state.items,

               {

                   item: action.payload

               }

               ]

           })

       default:

       return state
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Things you should never do inside a reducer&lt;/p&gt;

&lt;p&gt;Mutate its arguments&lt;br&gt;
Perform side effects like API calls&lt;br&gt;
Calling non-pure functions Like Math.random()&lt;br&gt;
Store&lt;br&gt;
A store is an object that brings all components to work together. It calculates state changes and then notifies the root reducer about it. Store keeps the state of your whole application. It makes the development of large applications easier and faster. Store is accessible to each component&lt;/p&gt;

&lt;p&gt;import { createStore } from ‘redux’&lt;/p&gt;

&lt;p&gt;import todoApp from ‘./reducers’&lt;/p&gt;

&lt;p&gt;let store = createStore(reducer);&lt;/p&gt;

&lt;p&gt;View:&lt;br&gt;
The only purpose of the view is to display the data passed by the store.&lt;/p&gt;

&lt;p&gt;Conclusion:-&lt;br&gt;
So coming to the conclusion why we should use React with Redux is because redux solves the state management problem. Redux offers solutions storing your whole application state in a single place that you can say it central store which is accessible to each component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;React Native App Development Company&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;React Native Development Company&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.cronj.com/react-native-app-development.html" rel="nofollow"&gt;Outsource React Native Development Company&lt;/a&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>redux</category>
      <category>rails</category>
    </item>
  </channel>
</rss>
