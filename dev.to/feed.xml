<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Salesforce Solution Providers: 8 CRM features you should include</title>
      <author>UI/UX Design Services </author>
      <pubDate>Wed, 20 Oct 2021 07:57:39 +0000</pubDate>
      <link>https://dev.to/reloadux/salesforce-solution-provider-8-crm-features-you-should-include-3h4e</link>
      <guid>https://dev.to/reloadux/salesforce-solution-provider-8-crm-features-you-should-include-3h4e</guid>
      <description>&lt;p&gt;Hire &lt;a href="https://tkxel.com/salesforce-consulting-services/"&gt;Salesforce Solutions Providers&lt;/a&gt; is an effective way to boost your company's productivity. However, if you've decided to introduce a CRM system for your business, you should think carefully about the features your system should include.&lt;/p&gt;

&lt;p&gt;This is a significant undertaking as you do not want to overlook the essential features to automatize business processes, including those of account managers representatives and account managers, and not waste time and cash on features that will not be utilized.&lt;/p&gt;

&lt;p&gt;This article will detail the eight most essential characteristics of CRM solutions that you must incorporate into your solution.&lt;/p&gt;

&lt;h2&gt;Planning&lt;/h2&gt;

&lt;p&gt;CRM software applications are utilized to track operations and make forecasts and predictions about what strategies work best for your business in light of the analysis and research of your interactions with your customers.&lt;/p&gt;

&lt;p&gt;This is why you shouldn't overlook implementing this feature in the development of your CRM application. For example, you can implement it into a plan or project management board where you can assign goals for your managers and enable them to schedule reminders, make appointments, schedule meetings, and emails to leads and customers on their profiles.&lt;/p&gt;

&lt;p&gt;It allows you to establish targets for your employees and, consequently, reduce stress and reduce your business time and resources.&lt;/p&gt;

&lt;h2&gt;Analytics&lt;/h2&gt;

&lt;p&gt;For more efficient planning, you require data that can be used as a basis for it. The CRM software you use offers automated analytics and data processing and provides you with a clear understanding of your business's workflow and customer relationships.&lt;/p&gt;

&lt;p&gt;A basic CRM system can assist you in obtaining data like KPI, sales amount, etc. Then, when you've got the data from an analytical perspective, you can utilize it for various reasons.
So, you can assess the performance of each employee, determine the priority for each customer and lead, determine the tasks and then adjust your methods of managing human resources.&lt;/p&gt;

&lt;p&gt;It can be used to present your shareholders or board of directors.&lt;/p&gt;

&lt;p&gt;In this blog, CRM application development for mobile and web is an excellent option for conducting various research and analysis.&lt;/p&gt;

&lt;h2&gt;Localization&lt;/h2&gt;

&lt;p&gt;This is particularly important for companies with multiple offices spread across different countries. Take into consideration your employees and ensure that you include the localization of your CRM application during development.&lt;/p&gt;

&lt;p&gt;You'll want everyone in your business development, sales and accounts managers to perform at the most efficient level possible, So you need to ensure that their workflow is as simple as is possible.&lt;/p&gt;

&lt;p&gt;English is a globally spoken language in the modern world. However, creating a CRM solution specific to all your employees regardless of geographical location is a good idea. Therefore, ensure that you include different versions of your CRM in your CRM program.&lt;/p&gt;

&lt;h2&gt;Templates&lt;/h2&gt;

&lt;p&gt;Templates can help you reduce time and, consequently, cash. Since the time you spend is money. You can use templates for email, call scripts, business plans and workflow algorithms to handle different situations that could arise during communications with your leads and customers.&lt;/p&gt;

&lt;p&gt;It is especially beneficial and beneficial for those new to the field of employment by your company. This will assist them in learning the work faster and can also make it easier to transfer knowledge. For employees with more experience, This will speed up and improve their workflow.&lt;/p&gt;

&lt;h2&gt;Listings&lt;/h2&gt;

&lt;p&gt;Marketing via email and phone calls can be a powerful tool for creating leads and gaining customers. However, you need to use various lists that contain details on each person you call or email.&lt;/p&gt;

&lt;p&gt;Suppose the listing management is not adequately organized. In that case, it can be not very clear. It is difficult to avoid getting caught up with all the information available and avoid mixing the domains of responsibility of various managers.&lt;/p&gt;

&lt;p&gt;If you are using an app for CRM that allows you to synchronize this information to avoid scenarios where two managers have to be required to "deal" with the same client while another client or lead is left unnoticed.&lt;/p&gt;

&lt;h2&gt;Integration of calls&lt;/h2&gt;

&lt;p&gt;As previously mentioned calling is an excellent tool for sales and is crucial to managing accounts and dealing with your customers. Your managers may use any calls software they like or even a genuine phone. Perhaps you are employing a particular software that handles all calls for your business.&lt;/p&gt;

&lt;p&gt;If you're planning to adopt CRM software, you must be aware that it's a fantastic way to streamline the processes in your business. It is, in fact, now possible to include a tool to facilitate calling in the CRM application development.&lt;/p&gt;

&lt;p&gt;The system can schedule, conduct and record calls on its own, monitor them, and permit your supervisors to provide brief remarks throughout the conversation. Thanks to this automated system, reduces the time that has to be completed manually is diminished.&lt;/p&gt;

&lt;h2&gt;Integration of services from third parties&lt;/h2&gt;

&lt;p&gt;This scenario has a lot in common with the first one. You likely use various applications in your company to achieve multiple purposes, such as the Document Management System, time and project management tools, as in ERP or BPA systems.&lt;/p&gt;

&lt;p&gt;Integrating all of these systems is quite beneficial since it reduces the amount of confusion and time consumed. In addition, this integration will enable you to exchange and transfer data and information quickly within your business.&lt;/p&gt;

&lt;p&gt;Implementation of this feature could be a significant issue when using a complete program, so the development of CRM apps for custom is a great solution.&lt;/p&gt;

&lt;h2&gt;Mobile version&lt;/h2&gt;

&lt;p&gt;Last but certainly not least, mobile. Smartphones have become an element of our daily lives. They have utilized both in the B2C as well as B2B sectors. If you're looking to improve the capacity of your CRM, you should think about the mobile application development that you can incorporate into Your CRM program.&lt;/p&gt;

&lt;p&gt;So, your employees will be able to access the system from wherever they are and on any device they are using at their side. It is, therefore, practical to include a mobile version of your CRM in addition to a &lt;a href="https://tkxel.com/web-app-development-services/"&gt;web application&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The most widely used CRM software option is the Salesforce platform that provides CRM software that can automate and improve various business processes.&lt;/p&gt;

&lt;p&gt;It also offers three highly efficient products, including Salesforce Cloud, Service Cloud, and ExactTarget (Marketing Cloud). You will find further details on Salesforce apps and CRM in our post on the six aspects of Salesforce applications development.&lt;/p&gt;

&lt;p&gt;But, many options and technologies are suitable to create and integrate CRM software.&lt;/p&gt;

&lt;p&gt;Tkxel software development team will always be available to offer you intelligent suggestions for your project and options for business. This includes web and mobile application development.&lt;/p&gt;

&lt;p&gt;Check out the case study we created of Our developing CRM applications for Sony if you're interested in the development process, processes, techniques employed, and so on.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devops</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>MongoDB - Aggregate Pipeline </title>
      <author>Sharanjeet kaur</author>
      <pubDate>Wed, 20 Oct 2021 07:35:07 +0000</pubDate>
      <link>https://dev.to/sharan_710/mongodb-aggregate-pipeline-200a</link>
      <guid>https://dev.to/sharan_710/mongodb-aggregate-pipeline-200a</guid>
      <description>&lt;p&gt;As we have discussed MongoDB basics (&lt;a href="https://dev.to/sharan_710/hey-mongo-14h6"&gt;link&lt;/a&gt;).&lt;br&gt;
Now, let's explore the MongoDB Pipeline concept 🔎&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-mongodb-pipeline"&gt;
  &lt;/a&gt;
  Why MongoDB Pipeline? 🤔
&lt;/h3&gt;

&lt;p&gt;The input of the pipeline can be one or several collections. The pipeline then performs a transformation on the data until our expected result is achieved.&lt;/p&gt;

&lt;p&gt;With the help of a pipeline, we can break down a complex query into simple stages, in each of which we can execute the different operations on the data. This also helps us in checking whether our query is functioning properly at each stage by examining both its input and output as the output of each stage will be the input of the next stage.&lt;br&gt;
Below is an illustrated example of a pipeline:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4X57FwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn7qeythboe2b9t7mc9c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4X57FwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn7qeythboe2b9t7mc9c.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aggregation"&gt;
  &lt;/a&gt;
  Aggregation
&lt;/h3&gt;

&lt;p&gt;Aggregate operations process data records and return the computed result. Aggregate operations can perform many operations on the grouped data to return a single result.&lt;br&gt;
The Syntax for aggregate: db.CollectionName.aggregate(operation) &lt;/p&gt;

&lt;p&gt;Now, if you want to display count, then you will use the following aggregate() method: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAMVdahM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mpji4yam79l9b4ihom6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAMVdahM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mpji4yam79l9b4ihom6.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, We have grouped the documents by type field and on each occurrence of a type field, the value of sum will be increased.&lt;br&gt;
Equivalent SQL Query for this will be:&lt;br&gt;
select type, count(*) from ProductCatalog group by type&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MWfYeaL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2micagh48y4yxs0khe5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MWfYeaL---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2micagh48y4yxs0khe5.png" alt="Image description"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pipeline"&gt;
  &lt;/a&gt;
  Pipeline
&lt;/h3&gt;

&lt;p&gt;MongoDB supports the pipeline concept in the aggregation framework in which we execute an operation on some input and use the output as input for the next command and so on. &lt;br&gt;
There is a set of stages and they are taken as the set of documents as input and produces a resulting set of document. This can be used as an input for the next stage and so on.&lt;/p&gt;

&lt;p&gt;Following are the stages in the aggregation framework:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;$project: Used to select the specific field from the collection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$match: It's a filtering operation. Equivalent to where clause in RDBMS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$group: This groups the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$sort: Sorts the document.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$limit: Used to limit the documents in the output &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZZ2LAWv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndu12a43b4g04k42zgmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZZ2LAWv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ndu12a43b4g04k42zgmf.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8F3VNW5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlay4a5uetv3i0jma3dm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8F3VNW5R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlay4a5uetv3i0jma3dm.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!! Feel free to comment on any type of feedback or error you have 😄✌ &lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>mongodb</category>
      <category>database</category>
    </item>
    <item>
      <title>Here’s Why You Should Opt For Headless Commerce for Your eCommerce Store</title>
      <author>IT Path Solutions</author>
      <pubDate>Wed, 20 Oct 2021 07:06:18 +0000</pubDate>
      <link>https://dev.to/itpathsolutions/heres-why-you-should-opt-for-headless-commerce-for-your-ecommerce-store-511a</link>
      <guid>https://dev.to/itpathsolutions/heres-why-you-should-opt-for-headless-commerce-for-your-ecommerce-store-511a</guid>
      <description>&lt;p&gt;The retail &amp;amp; eCommerce industry has benefitted from the shift to remote work and more and more people moving to online. As such small-scale businesses and small eCommerce shops suddenly had to contend with a large customer base suddenly becoming their regular customers. Many online businesses had to contend with the challenge of dealing with an increased customer base.&lt;/p&gt;

&lt;p&gt;One of the ways large eCommerce operations are managing their online platforms is through headless commerce. Headless commerce decouples the front end and the back end. Allowing an eCommerce business to scale the backend for large orders or enhanced logistics system while keeping the front end intact. Conversely, headless commerce also allows the front end to be enhanced while keeping the backend unaffected by the changes happening in the front end.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMN_VJm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1c1189a8rgvdfck4iylq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMN_VJm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1c1189a8rgvdfck4iylq.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By decoupling the back end and front end connection, an eCommerce business can scale the back end or the front end separately and can keep the platform working without going for maintenance and downtime.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is Headless eCommerce?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Headless eCommerce is the decoupling of the back end and front end of an eCommerce website. Traditionally, the back and front ends is connected and work together. But in Headless eCommerce, both are decoupled, and as such changes in one don’t affect the other. The term headless commerce was coined by Dirk Hoerig, co-founder of commerce tools in 2013. Many large eCommerce brands were noticing that they were unable to continuously improve the user experience and to mitigate that, headless commerce was needed. With headless commerce, customer experience can be improved at every touchpoint including checkout &amp;amp; orders.&lt;/p&gt;

&lt;p&gt;The front end and back end interact with each other using APIs or other interfaces which allows the decoupled front end and back end architecture to work.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;What Are The Major Benefits of Headless Commerce?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Fast Change Implementation &amp;amp; Optimization&lt;/b&gt;&lt;br&gt;
Sites with connected back and front ends may take some time before changes added are visible and applicable to all users. But with headless commerce, the changes are instant and live for all users at once and without any delay.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Faster Scaling&lt;/b&gt;&lt;br&gt;
With headless commerce, developers can quickly change the front end or add additional features for products, delivery &amp;amp; logistics in the backend without affecting the site performance and uptime.&lt;/p&gt;

&lt;p&gt;As such when you want to scale up the website and its capabilities, headless commerce allows you to do that without designing everything from scratch.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Better User Experience&lt;/b&gt;&lt;br&gt;
A business has the ability to influence all stages of a customer journey with headless eCommerce. You can also use the customer data and personalized information that is stored in the back end to create a personalized front-end experience.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Read More:&lt;/b&gt;&lt;br&gt;
&lt;a href="https://www.itpathsolutions.com/heres-why-you-should-opt-for-headless-commerce-for-your-ecommerce-store/"&gt;&lt;/a&gt;&lt;a href="https://www.itpathsolutions.com/heres-why-you-should-opt-for-headless-commerce-for-your-ecommerce-store/"&gt;https://www.itpathsolutions.com/heres-why-you-should-opt-for-headless-commerce-for-your-ecommerce-store/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>What's New In DevTools (Chrome 95)</title>
      <author>Binate Noor</author>
      <pubDate>Wed, 20 Oct 2021 07:04:35 +0000</pubDate>
      <link>https://dev.to/binatenoors/whats-new-in-devtools-chrome-95-3j60</link>
      <guid>https://dev.to/binatenoors/whats-new-in-devtools-chrome-95-3j60</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-new-css-length-authoring-tools"&gt;
  &lt;/a&gt;
  1. New CSS length authoring tools
&lt;/h2&gt;

&lt;p&gt;DevTools added a simpler yet flexible way of refreshing lengths in CSS!&lt;/p&gt;

&lt;p&gt;In the Styles pane, look for any CSS property with length (e.g. height, padding).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-hide-issues-in-the-issues-tab"&gt;
  &lt;/a&gt;
  2. Hide issues in the Issues tab
&lt;/h2&gt;

&lt;p&gt;You would now be able to conceal explicit issues in the Issues tab to zero in just on those issues that make a difference to you.&lt;/p&gt;

&lt;p&gt;In the Issues tab, hover over on an issue you would like to hide. Click on More options   More   &amp;gt; Hide issues like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FY_wrJoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634711864049/YuTmDGbEq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FY_wrJoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634711864049/YuTmDGbEq.png" alt="Issue tab.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All hidden issues will be added under the Hidden issues pane. Expand the pane. You can unhide all hidden issues or a selected one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ESvW1BD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634711922693/XGPFsa3Ry.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ESvW1BD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634711922693/XGPFsa3Ry.png" alt="dnPfPGkxpkcSZRIHqGDA.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-improved-the-display-of-properties"&gt;
  &lt;/a&gt;
  3. Improved the display of properties
&lt;/h2&gt;

&lt;p&gt;DevTools improve the display of properties by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Always bold and sort owns properties first in the &lt;strong&gt;Console&lt;/strong&gt;, &lt;strong&gt;Sources&lt;/strong&gt; panel, and **Properties **pane.&lt;/li&gt;
&lt;li&gt;
Flatten the properties display in the Properties pane.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, the snippet below creates an URL object link with 2 own properties: user and access, and updates the value of an inherited property search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* example.js */

const link = new URL('https://goo.gle/devtools-blog');

link.user = { id: 1, name: 'Jane Doe' };
link.access = 'admin';
link.search = `?access=${link.access}`;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try logging the link into the Console. Own properties are now bold and sorted first. These changes make it easier to spot custom properties, especially for Web APIs (e.g. URL) with many inherited properties.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fZZshjoy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712161116/9Px3gZ8mW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fZZshjoy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712161116/9Px3gZ8mW.png" alt="Ngjx6YRQsH3Fhl6DUZYl.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from these changes, the properties in the Properties pane are also flattened now for better DOM properties debugging experience, especially for Web components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SzHwLNYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712223445/YutGV4Dmc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SzHwLNYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712223445/YutGV4Dmc.png" alt="hIQGKlYkWKJzljHZaaM9.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-lighthouse-84-in-the-lighthouse-panel"&gt;
  &lt;/a&gt;
  4. Lighthouse 8.4 in the Lighthouse panel
&lt;/h2&gt;

&lt;p&gt;The Lighthouse panel is now running Lighthouse 8.4. Lighthouse will now detect if the Largest Containful Paint (LCP) element was a lazy-loaded image and recommend removing the loading attribute from it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTiG5oQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712282104/mSO0xQvBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTiG5oQ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712282104/mSO0xQvBr.png" alt="u9nepJj3wgpMgoNxSaDZ.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-sort-snippets-in-the-sources-panel"&gt;
  &lt;/a&gt;
  5. Sort snippets in the Sources panel
&lt;/h2&gt;

&lt;p&gt;The snippets in the Snippets pane under the Sources panel are now sorted alphabetically. Previously, it’s not sorted.&lt;/p&gt;

&lt;p&gt;Utilize the snippets feature to run commands quicker. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70F79BYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712352886/LReI5do6M.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70F79BYb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712352886/LReI5do6M.png" alt="knb78RG6NCETitMbNoyV.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-report-a-translation-bug-and-new-links-to-translated-release-notes"&gt;
  &lt;/a&gt;
  6. Report a translation bug and New links to translated release notes
&lt;/h2&gt;

&lt;p&gt;You can now click to read the DevTools release notes in 6 other &lt;strong&gt;languages **- **Russian&lt;/strong&gt;, &lt;strong&gt;Chinese&lt;/strong&gt;, &lt;strong&gt;Spanish&lt;/strong&gt;, &lt;strong&gt;Japanese&lt;/strong&gt;, &lt;strong&gt;Portuguese&lt;/strong&gt;, and **Korean **via the What’s new tab.&lt;/p&gt;

&lt;p&gt;Since Chrome 94, you can set your preferred language in DevTools. If you found any issues with the translations, help us improve it by reporting a translation issue via More options &amp;gt; Help &amp;gt; Report a translation bug.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Ob5EHDu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712412782/JOjGzora6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Ob5EHDu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712412782/JOjGzora6.png" alt="Qrg4Ahf4sYseL2NQZwIl.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-improved-ui-for-devtools-command-menu"&gt;
  &lt;/a&gt;
  7. Improved UI for DevTools command menu
&lt;/h2&gt;

&lt;p&gt;Did you find it hard to search for a file in the Command Menu? Good news for you, the Command Menu user interface is now enhanced!&lt;/p&gt;

&lt;p&gt;Open the Command Menu to search for a file with keyboard shortcut Control+P in Windows and Linux, or Command+P in MacOS.&lt;/p&gt;

&lt;p&gt;The UI improvements of the Command Menu are still ongoing, stay tuned for more updates!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1PfKvsgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712468352/qHXi1zFUq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PfKvsgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634712468352/qHXi1zFUq.png" alt="TJT2ry3vmUW1KoFgSKQP.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading this!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devtools</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>DEPLOY A REACT AND NODE APP TO HEROKU</title>
      <author>Fredrick Emmanuel</author>
      <pubDate>Wed, 20 Oct 2021 07:02:16 +0000</pubDate>
      <link>https://dev.to/divofred/deploy-a-react-and-node-app-to-heroku-cgk</link>
      <guid>https://dev.to/divofred/deploy-a-react-and-node-app-to-heroku-cgk</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Heroku is a platform where majority deploy their backend application. In recent times, Heroku has made it possible to deploy both our client and server side. This makes testing a lot more easier, in the sense that developers don't have to put their client side of the application in another platform and server in another. We would discuss this in great depths in this article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#goal"&gt;
  &lt;/a&gt;
  Goal
&lt;/h2&gt;

&lt;p&gt;This article aims at creating an understanding of the platform Heroku and simplify the deployment of both the client and server side on Heroku&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Getting Started&lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;li&gt;Deploy our Project&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;This article would not contain any project to build, so you need to have an already existing project. Your project should contain the frontend and the backend, WITHOUT ERRORS &lt;em&gt;obviously&lt;/em&gt; . After you've gotten your project ready, let's dive right into this article&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's briefly discuss the basic packages/frameworks that we would be utilizing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h3&gt;

&lt;p&gt;This is an Open Source &lt;a href="https://skillcrush.com/blog/what-is-a-javascript-framework/"&gt;JavaScript Framework&lt;/a&gt; for easy developing of scalable server-side and network applications. For more information, visit the &lt;a href="https://nodejs.org/en/about/"&gt;Node&lt;/a&gt; official website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;This is a &lt;a href="https://generalassemb.ly/blog/what-is-a-javascript-library/"&gt;JavaScript Library&lt;/a&gt; created by Facebook, that helps in building Interactive User Interfaces. &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; can be used to build not just Web Applications but also Mobile Applications.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A very interesting node package that would help in your project is concurrently. &lt;a href="https://www.npmjs.com/package/concurrently"&gt;Concurrently&lt;/a&gt; helps in running more than command at the same time without creating another terminal. This would really help in running both your react and server side together in one terminal locally.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now here we are. We would be taking a brief look on what Heroku is, sit tight and lets dive in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heroku"&gt;
  &lt;/a&gt;
  Heroku
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#what-is-heroku"&gt;
  &lt;/a&gt;
  What is Heroku?
&lt;/h4&gt;

&lt;p&gt;Heroku is a cloud service platform whose popularity has grown in recent years. Heroku is so easy to use and that is why is one of programmers favorite. &lt;a href="https://www.heroku.com/what"&gt;Heroku&lt;/a&gt; is a cloud platform that lets companies build, deliver, monitor and scale apps easily.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-heroku"&gt;
  &lt;/a&gt;
  Installing Heroku
&lt;/h4&gt;

&lt;p&gt;To install Heroku, We have to Download and Install &lt;a href="https://devcenter.heroku.com/articles/heroku-command-line"&gt;Heroku CLI&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;It is very easy to Get Started with Heroku. Visit &lt;a href="https://www.heroku.com/"&gt;Heroku's&lt;/a&gt; official website, Sign Up if don't have an account already. The next step is to create a new Heroku App. At the right top corner, click on the &lt;em&gt;new&lt;/em&gt; button and then create a new Heroku App &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zNJEMLAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj868npd3paw19l6o6ei.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNJEMLAO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj868npd3paw19l6o6ei.png" alt="Create Heroku App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After our Heroku app has been created, we can now Deploy it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-our-project"&gt;
  &lt;/a&gt;
  Deploy Our Project
&lt;/h2&gt;

&lt;p&gt;Make sure your have Heroku installed, by running the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;heroku &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After We have confirmed that we have Heroku installed, we can now move into our Project.&lt;/p&gt;

&lt;p&gt;In the server side of the project, open the &lt;code&gt;package.json&lt;/code&gt; file and add the following code to our script&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"script"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"heroku-postbuild"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cd client &amp;amp;&amp;amp; npm install &amp;amp;&amp;amp; npm run build"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;heroku-postbuild&lt;/code&gt; is a command Heroku runs before running the &lt;code&gt;start&lt;/code&gt; command. The &lt;code&gt;postbuild&lt;/code&gt; command moves into the client folder in the project and runs &lt;code&gt;npm install&lt;/code&gt; and then &lt;code&gt;npm run build&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then add the following code to your server's file to create a middle-ware that makes use of the already built react app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;//This will create a middleware.&lt;/span&gt;
&lt;span class="c1"&gt;//When you navigate to the root page, it would use the built react-app&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./client/build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Your React App should be contained in a separate folder from your server side of the application. The client side of the application should be contained in a folder named client, in the same directory with your server file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next step is to run the following commands to push to Heroku&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to Heroku
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;heroku login

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialize a git repository
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
heroku git:remote &lt;span class="nt"&gt;-a&lt;/span&gt; &amp;lt;heroku-app-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Commit and Deploy to Heroku
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-am&lt;/span&gt; &lt;span class="s2"&gt;"divofred-tutorials"&lt;/span&gt;
git push heroku master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We've been able to push our Application successfully to Heroku. If you encounter an error just run &lt;code&gt;heroku logs --tails&lt;/code&gt;, This would output all success and errors encountered.&lt;/p&gt;

&lt;p&gt;Till We Cross Path, I remain, Fredrick Emmanuel (divofred)😁😁❤❤&lt;/p&gt;

</description>
      <category>heroku</category>
      <category>react</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Front-End Development 2021: Six most useful tools </title>
      <author>Radixweb</author>
      <pubDate>Wed, 20 Oct 2021 06:41:24 +0000</pubDate>
      <link>https://dev.to/radixweb/front-end-development-2021-six-most-useful-tools-18i9</link>
      <guid>https://dev.to/radixweb/front-end-development-2021-six-most-useful-tools-18i9</guid>
      <description>&lt;p&gt;To build a stunning, informative, and user-friendly site, you need time and patience. Front-end developers are committed to building fast, high-quality, and reliable websites. A front-end development company would use essential tools to provide quality software to make lives easier to increase productivity.  &lt;/p&gt;

&lt;p&gt;Front-end development tools are evolving daily. Even if it is not new, it is an updated tool. With these tools and technologies, front-end developers want to achieve more output with less input. But, before diving into more information, let us understand what Front-end web development is.  &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What is Front-end Web Development?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Front-end web development can be defined as a concept of client-side development. It is a practice to produce HTML, JavaScript, and CSS for websites and web applications to facilitate users to see them and interact directly. However, there is a challenge – the tools and Front-end web development techniques used for creating the Front-end of any site or application are constantly changing. As a result, developers should be constantly aware of the developments happening in the field.  &lt;/p&gt;

&lt;p&gt;The purpose of designing any website is to make sure that users can access information in one format, which is relevant and readable when users visit a site. It becomes even more complicated because users are now using various devices with different resolutions and screen sizes, forcing designers to consider numerous aspects of web designing and development. They must ensure that the website supports different browsers, cross-platform that supports multiple operating systems, and cross-device that supports different devices. All of this requires precise planning, and developers have to be very sure about their concepts.  &lt;/p&gt;

&lt;p&gt;Front-end development is a demanding career option and high-paying too. The technology effectively connects the power of tested libraries to improve workflow and create a responsive design. &lt;/p&gt;

&lt;p&gt;Here’s a breakdown of the six best tools for Front-end development in 2021: &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-chrome-developer-tools"&gt;
  &lt;/a&gt;
  1: Chrome Developer Tools
&lt;/h1&gt;

&lt;p&gt;Chrome developer tools are the best from the house of Google. You cannot find a better alternative to it. Using these tools, you can troubleshoot quickly as it detects errors in the code.  &lt;/p&gt;

&lt;p&gt;One of the most powerful features of Chrome developer tools is that it allows you to change the Text without editing it. It is one of the most organized and easy to navigate. It leverages UI development tools that promote better performance in various tests in the browser, thus saving a lot of time. &lt;/p&gt;

&lt;p&gt;As the Google browser is updated once every six weeks, developers should check the web portal and then continue to develop, keeping up with the latest features. It also supports exceptional functionality to allow users to see and make changes to the DOM. Most front-end development companies use this tool.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emulated mobile devices&lt;/li&gt;
&lt;li&gt;Editor mode &lt;/li&gt;
&lt;li&gt;Users can disable caching in the browser when opened &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-angular"&gt;
  &lt;/a&gt;
  2: Angular
&lt;/h1&gt;

&lt;p&gt;Created by Google, Angular is an open-source JS framework. It allows you to build rich applications and provide scalable infrastructure as well as productivity to essential applications. Angular provides a client-side MVC architecture framework to simplify the development of single-page applications and conduct testing. It is considered an indispensable development tool for the front-end that streamlines the process of development by building an accessible and legible environment.  &lt;/p&gt;

&lt;p&gt;If you want a premium application that is expressive, easy to build, accurately readable, and provides quality output, you should choose Angular.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MVC (Model View Controller) framework &lt;/li&gt;
&lt;li&gt;JavaScript Code compatible &lt;/li&gt;
&lt;li&gt;Open-source framework &lt;/li&gt;
&lt;li&gt;Two-way binding &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#3-typescript"&gt;
  &lt;/a&gt;
  3: TypeScript
&lt;/h1&gt;

&lt;p&gt;TypeScript is another modern front-end tool that many &lt;a href="https://radixweb.com/hire-front-end-developers"&gt;front-end developers&lt;/a&gt; prefer to use. It is designed to develop more extensive applications. It is a commonly used tool to create an excellent environment for web development. It is also a JavaScript syntactical superset that adds an option of static typing.  &lt;/p&gt;

&lt;p&gt;TypeScript starts with an equivalent syntax as well as semantics. It accommodates the latest JavaScript codes and works on all the browsers, in JavaScript motor and Node.js. &lt;/p&gt;

&lt;p&gt;Most importantly, TypeScript acknowledges most JS libraries, and it is also conceivable to use it on any of the JavaScript environments. It also acknowledges multiple definition files containing data of JS libraries like C and C++.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript supports JS libraries &lt;/li&gt;
&lt;li&gt;TypeScript can be used on all the environments running JS &lt;/li&gt;
&lt;li&gt;TypeScript is portable across devices, browsers, and OS &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-npm"&gt;
  &lt;/a&gt;
  4: NPM
&lt;/h1&gt;

&lt;p&gt;NPM is JavaScript’s Node Package Manager. It is also the largest registry of software in the world. Using NPM, users can find reusable packages of code and collect the same in many ways. The Front-end development tool is also a common-line utility that cooperates with the names repository, assisting in bundling.  &lt;/p&gt;

&lt;p&gt;NPM supports massive libraries with ready-to-use modules and codes that make them perfect for development. It enables developers to enjoy the freedom of coding, building, testing, and maintaining in very little time.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Discover more than 470,000 code packages for free in the
software registry and reuse &lt;/li&gt;
&lt;li&gt;Encourage more code discovery, reuse them within teams &lt;/li&gt;
&lt;li&gt;Publish namespace access and control &lt;/li&gt;
&lt;li&gt;Manage private and public code with the same workflow &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#5-grunt"&gt;
  &lt;/a&gt;
  5: Grunt
&lt;/h1&gt;

&lt;p&gt;Grunt has proven to be the finest Front-end web development tool in 2021. It is used to automate routine tasks of the process of development. Grunt is a sought-after NodeJs task runner that offers models included for regular errands. It also provides a better alternative compared to recording multiple assignments working out for the necessities.  &lt;/p&gt;

&lt;p&gt;As Grunt is a recognized JS task runner, it provides bundled modules to mundane assignments matching the requirements. Grunt also has a gigantic ecosystem. With different modules to consider, you can choose Grunt for automating anything.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy workflow just like writing setup file &lt;/li&gt;
&lt;li&gt;Automates repetitive tasks with the least effort &lt;/li&gt;
&lt;li&gt;Maintains a direct approach including JSON config and JS tasks &lt;/li&gt;
&lt;li&gt;Grunt also includes in-built functions that extend 
the functionality of scripts and plugins &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#6-sass"&gt;
  &lt;/a&gt;
  6: SasS
&lt;/h1&gt;

&lt;p&gt;SasS is one of the most robust and dependable web development tools that extend the functionality of the existing CSS, such as variables and inheritance. It is also an open-source framework, which pulls in CSS processors. The device also gives a hard copy, which users can keep handy, thus eliminating the need to code CSS.  &lt;/p&gt;

&lt;p&gt;Before using SasS, the project should configure the same. It also permits users to settle the areas of CSS using a method following HTML visual order. You can also use SasS for other applications like Windows, Linux, and Mac stages.  &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A straightforward Front-end tool for coding &lt;/li&gt;
&lt;li&gt;Supports multiple language extensions like nesting, mixins, 
and variables &lt;/li&gt;
&lt;li&gt;Valuable functions to manipulate colors as well as other values &lt;/li&gt;
&lt;li&gt;Advanced features such as control directives that 
support libraries &lt;/li&gt;
&lt;li&gt;It offers a formatted and customizable output &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#7-sublime-text"&gt;
  &lt;/a&gt;
  7: Sublime Text
&lt;/h1&gt;

&lt;p&gt;Sublime Text is a code editor that manages as well as edits codes effortlessly. With the help of this code editor, you can create a fast and super-smooth interface for users. Several options already exist in this market, which includes Notepad++, VIM, and Atom. However, it is an even better platform with speedy performance, which indicates sublime Text.  &lt;/p&gt;

&lt;p&gt;Sublime is one of the most efficient code editors that even a single-member team can handle. It has all unique keyboard shortcuts that ensure easy customizability through a robust interface and plugins. &lt;/p&gt;

&lt;p&gt;The exceptional keyboard features similar interactive codes several times, lines, quick navigation, symbols, and files. &lt;/p&gt;

&lt;p&gt;Key features: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Superior search/replace functionality &lt;/li&gt;
&lt;li&gt;Minimap that makes it easier to view the original size of files 
Concurrent editing, revisions &lt;/li&gt;
&lt;li&gt;Multiple formats for panels and screens &lt;/li&gt;
&lt;li&gt;Stable and lightweight &lt;/li&gt;
&lt;li&gt;Potent python APIs &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Conclusion&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Front-end development tools are powerful enough to turn development codes into codes ready for production. It can run on various platforms and devices without any problem. The tools mentioned above are generally used in any highly &lt;a href="https://radixweb.com/front-end-development"&gt;experienced front end development company&lt;/a&gt;. They are well adapted to be used in web projects, including task runners, package managers, module bundlers/loaders, etc.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>saas</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Using Bootstrap in Next.js + free starter</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 20 Oct 2021 06:37:02 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/using-bootstrap-in-nextjs-free-starter-45f9</link>
      <guid>https://dev.to/dailydevtips1/using-bootstrap-in-nextjs-free-starter-45f9</guid>
      <description>&lt;p&gt;I'll be completely honest with you. I haven't used Bootstrap in a while.&lt;br&gt;
But that doesn't take away that it's still widely used by a lot of people.&lt;/p&gt;

&lt;p&gt;A loyal reader Neeraj asked me to write down a tutorial on integrating Bootstrap with Next.js (Thank you, Neeraj, for this request ❤️).&lt;/p&gt;

&lt;p&gt;So today, we'll have a look at how you can set up Bootstrap to work in a Next.js project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-bootstrap-to-nextjs"&gt;
  &lt;/a&gt;
  Adding Bootstrap to Next.js
&lt;/h2&gt;

&lt;p&gt;Let's start from scratch so everyone can follow along.&lt;/p&gt;

&lt;p&gt;First, we'll create a new Next.js application, which is as simple as running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;All you have to do is pick a name 🥳&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then let's add the Bootstrap NPM package. By loading it with NPM, we can more easily update it later on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To load Bootstrap in our project, we only need to load the stylesheet in our &lt;code&gt;_app.js&lt;/code&gt; file like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bootstrap/dist/css/bootstrap.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be aware this will load the complete bootstrap file! Unfortunately, there is no super-easy way to purge Bootstrap as Tailwind has. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-a-basic-bootstrap-template-in-nextjs"&gt;
  &lt;/a&gt;
  Styling a basic Bootstrap template in Next.js
&lt;/h2&gt;

&lt;p&gt;Let's put it to the test and create a simple template.&lt;br&gt;
Open up your &lt;code&gt;index.js&lt;/code&gt; page and modify it so it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Head&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/head&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'d-flex flex-column min-vh-100'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Create Next App&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'description'&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Generated by create next app'&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'icon'&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/favicon.ico'&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'px-4 py-5 my-5 text-center flex-grow-1'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'display-5 fw-bold'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Next.js + Bootstrap ❤️&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'col-lg-6 mx-auto'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'lead mb-4'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Quickly design and customize responsive mobile-first sites with
            Bootstrap, the world’s most popular front-end open source toolkit,
            featuring Sass variables and mixins, responsive grid system,
            extensive prebuilt components, and powerful JavaScript plugins.
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'d-grid gap-2 d-sm-flex justify-content-sm-center'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'button'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'btn btn-primary btn-lg px-4 gap-3'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Primary button
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'button'&lt;/span&gt;
              &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'btn btn-outline-secondary btn-lg px-4'&lt;/span&gt;
            &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Secondary
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should render a Bootstrap hero header:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BHCVKeo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633859589234/si3KcxQtF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BHCVKeo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633859589234/si3KcxQtF.png" alt="Hero header Bootstrap in Next.js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It works, yes 🎉.&lt;/p&gt;

&lt;p&gt;But does it also work for components?&lt;/p&gt;

&lt;p&gt;Let's create a &lt;code&gt;components&lt;/code&gt; directory and add a file called &lt;code&gt;Header.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'p-3 bg-dark text-white'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'container'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;
            &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt;
            &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none'&lt;/span&gt;
          &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            LOGO
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-secondary'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                Home
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-white'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                Features
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-white'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                Pricing
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-white'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                FAQs
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-white'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                About
              &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'search'&lt;/span&gt;
              &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'form-control form-control-dark'&lt;/span&gt;
              &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Search...'&lt;/span&gt;
              &lt;span class="na"&gt;aria&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Search'&lt;/span&gt;
            &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text-end'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'button'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'btn btn-outline-light me-2'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Login
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'button'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'btn btn-warning'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Sign-up
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And let's create another component called &lt;code&gt;Footer.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'container'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'py-3 my-4'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav justify-content-center border-bottom pb-3 mb-3'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-item'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Home
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-item'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Features
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-item'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Pricing
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-item'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              FAQs
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-item'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'nav-link px-2 text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              About
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text-center text-muted'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;© 2021 Company, Inc&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we head back to our &lt;code&gt;index.js&lt;/code&gt; we can import these two components to see what happens.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Header&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Footer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'d-flex flex-column min-vh-100'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Header&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;Hero&lt;/span&gt; &lt;span class="na"&gt;code&lt;/span&gt; &lt;span class="err"&gt;--&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Footer&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's refresh our page and see what we have.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aVQ8lQO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633859923556/eci-rOrPe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aVQ8lQO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633859923556/eci-rOrPe.png" alt="Next.js Bootstrap starter template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you go, a super-easy way to include Bootstrap in your Next.js application.&lt;/p&gt;

&lt;p&gt;You can find the complete starter code on &lt;a href="https://github.com/rebelchris/next-bootstrap"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>bootstrap</category>
      <category>react</category>
    </item>
    <item>
      <title>Weekly web development resources #92</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 20 Oct 2021 06:15:06 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-92-3g5d</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-92-3g5d</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#oampo-shutup10"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.oo-software.com/en/shutup10"&gt;O&amp;amp;O ShutUp10++&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.oo-software.com/en/shutup10"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3qJYEG_y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/shutup-windows.jpg" alt="O&amp;amp;O ShutUp10++"&gt;&lt;/a&gt;&lt;br&gt;
A tool to disable unwanted Windows features and to prevented the transfer of personal data.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bashcrawl"&gt;
  &lt;/a&gt;
  &lt;a href="https://gitlab.com/slackermedia/bashcrawl"&gt;bashcrawl&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gitlab.com/slackermedia/bashcrawl"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TcQIT7Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/bashcrawl.jpg" alt="bashcrawl"&gt;&lt;/a&gt;&lt;br&gt;
Learn Linux commands by playing a simple text adventure.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#localstack"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/localstack/localstack"&gt;LocalStack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/localstack/localstack"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aKxuXU3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/localstack.jpg" alt="LocalStack"&gt;&lt;/a&gt;&lt;br&gt;
A fully functional local AWS cloud stack for developing and testing offline. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#minimap"&gt;
  &lt;/a&gt;
  &lt;a href="https://uiw.tf/minimap"&gt;Minimap&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://uiw.tf/minimap"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DOivF-nL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/minimap.jpg" alt="Minimap"&gt;&lt;/a&gt;&lt;br&gt;
A showcase of an experimental CSS property to display a live image from an arbitrary HTML element.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#skeleton-screen-loading-animation-using-html-amp-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/shantanu_jana/skeleton-screen-loading-animation-using-html-css-1ec3"&gt;Skeleton Screen Loading Animation using HTML &amp;amp; CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/shantanu_jana/skeleton-screen-loading-animation-using-html-css-1ec3"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLFL6PJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/skeleton.jpg" alt="Skeleton Screen Loading Animation using HTML &amp;amp; CSS"&gt;&lt;/a&gt;&lt;br&gt;
A nice article by Shantanu Jana on creating a simple skeleton animation&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mjml"&gt;
  &lt;/a&gt;
  &lt;a href="https://mjml.io/"&gt;MJML&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mjml.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbienLaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/mjml.jpg" alt="MJML"&gt;&lt;/a&gt;&lt;br&gt;
A cool framework to create responsive emails easily.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pocoloco"&gt;
  &lt;/a&gt;
  &lt;a href="https://pocoloco.io/"&gt;pocoloco&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pocoloco.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vOrp2L4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/pocoloco.jpg" alt="pocoloco"&gt;&lt;/a&gt;&lt;br&gt;
A generator for different dynamic backgrounds.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#css-backgrounds"&gt;
  &lt;/a&gt;
  &lt;a href="https://superdesigner.co/tools/css-backgrounds"&gt;CSS backgrounds&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://superdesigner.co/tools/css-backgrounds"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mDKIUn53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/css-patterns.jpg" alt="CSS backgrounds"&gt;&lt;/a&gt;&lt;br&gt;
A nice collection of 100+ free CSS patterns.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-win-at-cors"&gt;
  &lt;/a&gt;
  &lt;a href="https://jakearchibald.com/2021/cors/"&gt;How to win at CORS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://jakearchibald.com/2021/cors/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sy7Kb2Di--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/cors.jpg" alt="How to win at CORS"&gt;&lt;/a&gt;&lt;br&gt;
The 'how' and 'why' of CORS, from start to finish.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#uptime-kuma"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/louislam/uptime-kuma"&gt;Uptime Kuma&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Htu3bJKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/uptime.jpg" alt="Uptime Kuma"&gt;&lt;/a&gt;&lt;br&gt;
A fancy self-hosted monitoring tool like Uptime Robot.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#stripe-gradient"&gt;
  &lt;/a&gt;
  &lt;a href="https://kevinhufnagl.com/how-to-stripe-website-gradient-effect/"&gt;Stripe Gradient&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://kevinhufnagl.com/how-to-stripe-website-gradient-effect/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-KkXCrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/stripe.jpg" alt="Stripe Gradient"&gt;&lt;/a&gt;&lt;br&gt;
Learn how to create the tilted gradient effect on Stripe's new website.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3d-icons"&gt;
  &lt;/a&gt;
  &lt;a href="https://3dicons.co/"&gt;3D Icons&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://3dicons.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p51KS_I6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/3dicons.jpg" alt="3D Icons"&gt;&lt;/a&gt;&lt;br&gt;
1440+ open-source 3D icons, which can be used for free and without attribution.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vizzu"&gt;
  &lt;/a&gt;
  &lt;a href="https://vizzuhq.com/"&gt;Vizzu&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vizzuhq.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EHfpBikK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/92/vizzu.jpg" alt="Vizzu"&gt;&lt;/a&gt;&lt;br&gt;
Open-source JavaScript library designed to easily create animated data visualizations and data stories.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>Hacktoberfest 2021: My Experience</title>
      <author>Asmit Malakannawar</author>
      <pubDate>Wed, 20 Oct 2021 06:07:43 +0000</pubDate>
      <link>https://dev.to/asmit2952/hacktoberfest-2021-my-experience-3k5l</link>
      <guid>https://dev.to/asmit2952/hacktoberfest-2021-my-experience-3k5l</guid>
      <description>&lt;p&gt;This year I participated in my first ever Hacktoberfest. Some of you who don't know what Hacktoberfest is, let me summarize it for you: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hacktoberfest is a month long celebration of Open Source Software hosted by Digital Ocean for the 8th year in a row in partnership with GitHub and other companies. What I personally love about it is that it bring developers with the same mindset together from all over the world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F_reH4fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34o5taiewh48jl3e4yhg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F_reH4fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34o5taiewh48jl3e4yhg.png" alt="Hacktoberfest 2021"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Back in 2020 I had learnt about this event and wasn't so sure about my skillset so I didn't participate, and this year I realized it was a huge mistake. The best part of Hacktoberfest is, there's something for everyone. You don't need to be a pro to contribute.🧑🏻‍💻&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-i-start"&gt;
  &lt;/a&gt;
  How did I start? 🚀
&lt;/h2&gt;

&lt;p&gt;Since this was my first Hacktoberfest event, I was also confused like a lot of you guys. I was terrified to be honest, will I be able to find a good project, will I be able to contribute quality code/documentation, etc., but when the event started I luckily found good repositories (one of which was &lt;strong&gt;Appwrite&lt;/strong&gt;, official sponsor of Hacktoberfest) and started non-code contributions at first, like improving documentations, writing blog posts, adding Code of Conduct to repositories. This got me kickstarted in Hacktoberfest event.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0BoQT0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9vct41uk1pmwkve23s8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0BoQT0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9vct41uk1pmwkve23s8.gif" alt="open source contribution"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;One challenge I faced was finding good repos, there were many spammy repos only merging PRs for the sake of free T-shirt. First time contributors, if you are reading this, &lt;strong&gt;steer clear of those repositories&lt;/strong&gt;. You don't want your PR to be excluded right!!&lt;br&gt;
I reported a lot of spammy repos, one thing that I'm proud of😌.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-contributions"&gt;
  &lt;/a&gt;
  My Contributions 📝
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;&lt;strong&gt;Appwrite&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Starting off with non-code contributions, I found out about &lt;strong&gt;Appwrite&lt;/strong&gt;, that's one of the best thing that happened during Hacktoberfest. Their idea, code, and repository is so awesome that a beginner can also contribute. They had 4 main beginner friendly issues on their repository:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Writing a blog post to help other developers &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Making a tutorial on how to use Appwrite&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Submitting a demo app using Appwrite &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Translating their documentation to different languages &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I chose to write articles and publish them on &lt;strong&gt;Dev.to&lt;/strong&gt;. If you haven't read them, check them out &lt;a href="https://dev.to/asmit2952/getting-started-with-appwrite-3oic"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also joined their awesome &lt;a href="https://appwrite.io/discord"&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; community. The community is awesome and right there to help you whenever you are stuck💯😍&lt;/p&gt;

&lt;p&gt;I also re-designed Hacktoberfest Logo for their Discord server!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m-5-vf-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6tavknhqzkwcb6mopq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m-5-vf-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6tavknhqzkwcb6mopq2.png" alt="Appwrite Hacktoberfest"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So overall, as a beginner, joining a huge community and being welcomed by them felt great. Checkout their &lt;a href="https://github.com/appwrite"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; repo and join them, what are you waiting for?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/siddhi-244/Embellish"&gt;&lt;strong&gt;Embellish&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now coming to code contributions, I have strong hold on HTML, CSS and JavaScript fundamentals, hence I contributed to project Embellish. &lt;a href="https://github.com/siddhi-244/Embellish"&gt;&lt;strong&gt;Embellish&lt;/strong&gt;&lt;/a&gt; is a collection of awesome designed components or animations or components which can be added to any website to enhance the UI of your website. &lt;/p&gt;

&lt;p&gt;I contributed to this repository by making different CSS and JavaScript components. I had the satisfaction of knowing that this could benefit many many more people than just myself. It was fun and I got to revise my basic skills. Checkout that repository if you are a beginner and want to contribute a quality code.😉 &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://codedamn.com/"&gt;&lt;strong&gt;Codedamn&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And then I found out about &lt;a href="https://github.com/codedamn"&gt;&lt;strong&gt;Codedamn&lt;/strong&gt;&lt;/a&gt; repository. In this we had to submit a front-end project listed on their website and create a PR. I made a &lt;a href="https://asmit2952.github.io/Hulu_Clone/"&gt;&lt;strong&gt;Hulu Clone&lt;/strong&gt;&lt;/a&gt;. This was fun as it turned out to be awesome🤩.&lt;/p&gt;

&lt;p&gt;If you want to learn new skills by making projects, Codedamn is the platform for it. Go check them out!!&lt;/p&gt;

&lt;p&gt;What added more fun in Hacktoberfest was &lt;strong&gt;Local Hack Day&lt;/strong&gt; by MLH. Now this is a story for another day.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-learned"&gt;
  &lt;/a&gt;
  What I learned 👀
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0AWeI7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrow9lruv5m1o6izytle.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0AWeI7E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrow9lruv5m1o6izytle.gif" alt="Learning"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;With each contribution I made, it felt &lt;strong&gt;rewarding&lt;/strong&gt; giving back to the projects which I use personally. Working on a variety of projects also gave me some really welcome exposure to new development experiences. I had a very little knowledge about back-end development and documentation, I learnt about it through &lt;strong&gt;Appwrite&lt;/strong&gt;, revised my front-end skills through &lt;strong&gt;Embellish&lt;/strong&gt; and &lt;strong&gt;Codedamn&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Most importantly, I realized that contributing to open-source projects isn't as scary as it might seem. The maintainers that I interacted with were &lt;strong&gt;friendly and helpful&lt;/strong&gt;. You will find Open Source maintainers always welcoming people to make their codebase better.&lt;/p&gt;

&lt;p&gt;Overall, October went great for me, &lt;strong&gt;Hacktoberfest&lt;/strong&gt; is the best event for Open Source contributions. I met new people, made new friends, contributed quality code/documents and learnt new skills. I will continue to contribute to the projects I contributed this time and also can't wait for next year's Hacktoberfest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l_J2A184--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3a1m4p2ksuufxcnn4i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l_J2A184--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3a1m4p2ksuufxcnn4i.gif" alt="Eager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until then, &lt;strong&gt;learn&lt;/strong&gt; something new, &lt;strong&gt;engage&lt;/strong&gt; with Open Source communities, and &lt;strong&gt;expand&lt;/strong&gt; your network!!🌐&lt;/p&gt;

&lt;p&gt;Connect with me on: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/Asmit_2952"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.linkedin.com/in/asmit-malakannawar/"&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/Asmit2952"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Checkout &lt;a href="https://linktr.ee/Asmit2952"&gt;&lt;strong&gt;Linktree&lt;/strong&gt;&lt;/a&gt; for more social media handles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Contributing!!😉✌️&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>TypeScript Done Wrong</title>
      <author>OpenReplay Tech Blog</author>
      <pubDate>Wed, 20 Oct 2021 06:01:12 +0000</pubDate>
      <link>https://dev.to/asayerio_techblog/typescript-done-wrong-4542</link>
      <guid>https://dev.to/asayerio_techblog/typescript-done-wrong-4542</guid>
      <description>&lt;p&gt;&lt;em&gt;by author &lt;a href="https://blog.openreplay.com/authors/fernando-doglio"&gt;Fernando Doglio&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Writing TypeScript code feels great because you're protected by the compiler. Every time you transpile the code, it gets checked for any and all potential mistakes you've made. It's literally making you a better developer by helping you avoid simple bugs.&lt;br&gt;
That's amazing!&lt;/p&gt;

&lt;p&gt;However, if you're not careful enough, you can still force those mistakes and introduce bugs by incorrectly using some of the language's features. &lt;br&gt;
That's right buddy, TypeScript can be a double-sided blade if you're not careful!&lt;br&gt;
So let's check out some mistakes you're probably making right now.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overusing-the-raw-any-endraw-type"&gt;
  &lt;/a&gt;
  Overusing the &lt;code&gt;any&lt;/code&gt; type
&lt;/h2&gt;

&lt;p&gt;This one is a classic, especially for newcomers to the language, because they see it as a way of saying &lt;em&gt;"I have no idea what's going to be inside this variable, so just let me use it alright?"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That happens because we think type declaration has to be done when you declare the variable and at that time, you may not know exactly the shape of the data you'll be dealing with. This is especially true if you're dealing with returned information from outside resources such as an API call, or perhaps after parsing a JSON string.&lt;br&gt;
But the key to solving this problem is not using the wildcard type &lt;code&gt;any&lt;/code&gt;, instead is to understand that you can let TypeScript know that you &lt;em&gt;don't know the type yet&lt;/em&gt; but you will soon.&lt;/p&gt;

&lt;p&gt;Imagine, if you will, the following very silly example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{ "name": "Fernando Doglio", "age": 37 }&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{ "race": "dog", "number_of_legs": 4, "sex": "Male"}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could be dealing with the string being parsed coming from a file read or from user input. We don't really know the same it'll take, we just know that sometimes it'll be talking about a person and others it'll talk about an animal. So the shape of &lt;code&gt;something&lt;/code&gt; will be different depending on some logical &lt;code&gt;condition&lt;/code&gt;. &lt;br&gt;
This is wrong.&lt;br&gt;
Why? Because now we can't do any proper checks with &lt;code&gt;something&lt;/code&gt;. If we wanted to reference one of its properties, it would be of type &lt;code&gt;any&lt;/code&gt; by default, so really, any type of logic depending on &lt;code&gt;something&lt;/code&gt; would automatically have to avoid type checking.&lt;br&gt;
We've created a cascade effect that is nullifying TypeScript's main feature.&lt;/p&gt;

&lt;p&gt;Feel good about yourself already?&lt;/p&gt;

&lt;p&gt;So instead of relying on the pesky &lt;code&gt;any&lt;/code&gt; type, you can define &lt;code&gt;something&lt;/code&gt; to be of type &lt;code&gt;unknown&lt;/code&gt; which is kind of the same, but not exactly.&lt;/p&gt;

&lt;p&gt;By defining your variable with that type, you're telling TypeScript that you don't know the type &lt;em&gt;at that precise moment&lt;/em&gt; but that you will in a second. So instead, you could re-write the above code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt;  &lt;span class="nx"&gt;Human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;race&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;number_of_legs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parseit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{ "name": "Fernando Doglio", "age": 37 }&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Human&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a person, named: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;something&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{ "race": "dog", "number_of_legs": 4, "sex": "Male"}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;something&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;race&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Key changes on the code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I've moved the parsing into a separate function that returns an &lt;code&gt;unknown&lt;/code&gt; type. &lt;/li&gt;
&lt;li&gt;I've defined 2 different types (&lt;code&gt;Human&lt;/code&gt; and &lt;code&gt;Animal&lt;/code&gt;). They're both potential types for &lt;code&gt;something&lt;/code&gt; but we just don't know which ones until the code runs.&lt;/li&gt;
&lt;li&gt;I've declared &lt;code&gt;something&lt;/code&gt; without a type, this is key.&lt;/li&gt;
&lt;li&gt;The logic of how you use &lt;code&gt;something&lt;/code&gt; depending on its type needs to be inside each logical branch (i.e inside each block of the &lt;code&gt;if&lt;/code&gt; statement).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that out of the way, you can see how we've used the same variable to host 2 very different types of objects. This allows us to write code that is not type-checked during compilation (because it can't be checked then) but it does get checked during runtime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-function-type-instead-of-specifying-the-signature"&gt;
  &lt;/a&gt;
  Using the Function type instead of specifying the signature
&lt;/h2&gt;

&lt;p&gt;Another very common situation is when dealing with closures or callbacks. We have to define a type for them, but using &lt;code&gt;Function&lt;/code&gt; as that type is not enough.&lt;br&gt;
If we do that, then TS assumes we're dealing with a function that accepts &lt;code&gt;any&lt;/code&gt; parameter and returns &lt;code&gt;any&lt;/code&gt; as a result. &lt;br&gt;
Essentially we're back in the previous example, having completely obliterated the main benefit of TS.&lt;/p&gt;

&lt;p&gt;In other words, you could write code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myMainFN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;random string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;131412&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this other string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;123125091&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how I'm calling &lt;code&gt;callback&lt;/code&gt; in 3 different ways. I'm even declaring a variable with the return of one of those calls. Care to guess the type of &lt;code&gt;i&lt;/code&gt; ? That's right, it'll be &lt;code&gt;any&lt;/code&gt;. &lt;br&gt;
Instead, take the time to understand the signature of the functions you'll want to allow here. The callback is probably meant to receive some very specific parameters and to return a very specific type. So define it damn it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;myCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myMainFN2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;myCallback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;//your logic here...&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//valid uses of callback&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Something went terribly wrong, abort, abort!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is fine&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


  &lt;span class="c1"&gt;//callback(date, "random string", 131412); - invalid because `date` is the wrong type and it also has 1 extra parameter&lt;/span&gt;
  &lt;span class="c1"&gt;//let i = callback("this other string"); - invalid because it's missing the first parameter &lt;/span&gt;
  &lt;span class="c1"&gt;//console.log(i, date, callback(123125091)) - invalid because we're calling it with the wrong parameter&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first thing I did was I declared the callback's type: &lt;code&gt;myCallback&lt;/code&gt;. I'm declaring it as a function that accepts 2 parameters, the first one potentially being &lt;code&gt;null&lt;/code&gt; since I'm going with the "Error-first" pattern for this callback. And the second one being just a string.&lt;br&gt;
Suddenly all my previous calls to the callback are invalid and TS can tell me that. Fantastic!&lt;br&gt;
By defining the signature of the callback function I'm able to write code that properly relies on it and it's safe to do so, and I've also managed to document the way anyone using my function needs to structure their callback function. Win-Win!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#open-source-session-replay"&gt;
  &lt;/a&gt;
  Open Source Session Replay
&lt;/h2&gt;

&lt;p&gt;Debugging a web application in production may be challenging and time-consuming. &lt;a href="https://github.com/openreplay/openreplay"&gt;OpenReplay&lt;/a&gt; is an Open-source alternative to FullStory, LogRocket and Hotjar. It allows you to monitor and replay everything your users do and shows how your app behaves for every issue.&lt;br&gt;
It’s like having your browser’s inspector open while looking over your user’s shoulder.&lt;br&gt;
OpenReplay is the only open-source alternative currently available.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvoFt7Qf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/openreplay/openreplay/main/static/replayer.png" alt="OpenReplay"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy debugging, for modern frontend teams - &lt;a href="https://github.com/openreplay/openreplay"&gt;Start monitoring your web app for free&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#assuming-that-object-literals-are-inferred-types"&gt;
  &lt;/a&gt;
  Assuming that object literals are inferred types
&lt;/h2&gt;

&lt;p&gt;TypeScript has this very interesting feature called "type inferring" in which you're allowed to skip type declaration in some situations, and given the type of data you're using, it'll infer it for you.&lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mySecondValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;mySecondValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That code would work, just like that, in JavaScript and it would return a value. It wouldn't make any sense, because the actual operation makes no sense so you'd get a &lt;code&gt;NaN&lt;/code&gt; as a result. But still, the interpreter would run it.&lt;br&gt;
However, the second you throw that code at TS, it'll scream at you because it has already inferred that &lt;code&gt;myValue&lt;/code&gt; is of type &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;mySecondValue&lt;/code&gt; is of type &lt;code&gt;string&lt;/code&gt; and you can't subtract a &lt;code&gt;string&lt;/code&gt; from a &lt;code&gt;number&lt;/code&gt; it's that simple!&lt;/p&gt;

&lt;p&gt;Now, this works great with basic types, but not so much with object literals. With them, you can make mistakes without even knowing. How many times have you forgotten about writing a property? It happens, and TS will let you know about it, but only when you try to force a type into it, which is usually when you either pass it as a function parameter, or when you try to make it interact  with other objects that DO have a type.&lt;br&gt;
Let's look at a quick example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt;  &lt;span class="nx"&gt;Human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;race&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;number_of_legs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Female&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Human&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;me&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fernando Doglio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myDog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;race&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;number_of_legs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright, so we've defined 2 object literals that somewhat follow the structure of both types &lt;code&gt;Human&lt;/code&gt; and &lt;code&gt;Animal&lt;/code&gt; but of course, just because they &lt;em&gt;look like them&lt;/em&gt; doesn't mean TS will assume you're wanting them to follow their structure. This is syntactically valid code and we have no errors so far.&lt;br&gt;
Let's move on with the example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;whosYourOwner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nx"&gt;whosYourOwner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myDog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//BOOM&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is where the problems begin. The call to &lt;code&gt;whosYourOwner&lt;/code&gt; will not work, because you now have 2 issues with your objects. Can you guess what they are?&lt;br&gt;
We're coercing our &lt;code&gt;myDog&lt;/code&gt; object literal into an &lt;code&gt;Animal&lt;/code&gt;, and we're seeing that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On one hand, we're missing the &lt;code&gt;owner&lt;/code&gt; attribute. Whoops! No worries though, we'll fix it quickly.&lt;/li&gt;
&lt;li&gt;But even if we do, we also have a problem with the &lt;code&gt;sex&lt;/code&gt; property, because &lt;code&gt;string&lt;/code&gt; (which is the inferred type for this property) is not going to be compatible &lt;code&gt;enum 'Male'|'Female'&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We're in trouble. However, the solution is very simple: assign a type of your object literal during declaration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myDog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;race&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;number_of_legs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now 2 things will happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First you'll hear from TS right there and now that you're missing the &lt;code&gt;owner&lt;/code&gt; property. It's not marked as optional on the type declaration, so it'll be required here.&lt;/li&gt;
&lt;li&gt;The value of &lt;code&gt;Male&lt;/code&gt; will be a valid option for the enum on &lt;code&gt;sex&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, type inferrence:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For basic types: &lt;strong&gt;good&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;For complex types: &lt;strong&gt;not good&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#numeric-enums-are-bad-string-enums-good"&gt;
  &lt;/a&gt;
  Numeric enums are bad - string enums good
&lt;/h2&gt;

&lt;p&gt;This one is quick, but it can save you a huge headache and hours of debugging.&lt;br&gt;
How do you declare your enums in TS? I mean, the whole point of them is to forget about their values, and directly use the enum properties, if you will. Right?&lt;br&gt;
So let's pretend we're creating an enum around your residency status (i.e if you're a citizen, a resident in your country or if you're working with a Visa):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Resident&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Citizen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;VisaWorker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;myStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Resident&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code would work, and what would be the output of that last line? &lt;br&gt;
That's right, it would be &lt;code&gt;0&lt;/code&gt;, that's because TS is gracious enough to assign a value automatically for us when we don't specify one. This is great and it shows how irrelevant the actual values are inside the enums.&lt;br&gt;
What's the problem with this?&lt;br&gt;
Easy, the following code is completely valid for TS as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;myStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;124124&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the problem? I've defined a variable of type &lt;code&gt;ResidencyStatus&lt;/code&gt; which by definition, should let me limit the values I assign to it, but I can still assign any numeric value and TS won't know the difference. &lt;br&gt;
Can we solve this? YES we can, and it's not that complicated, we just need to assign string values to our elements inside the enum, and suddenly TS will become a lot more reserved about the type of value we assign to our variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;enum&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Resident&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;res&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Citizen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;VisaWorker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;visa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ResidencyStatus&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;myStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;123&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that code won't work, because TS will not like you assigning &lt;code&gt;"123"&lt;/code&gt; to your property. &lt;br&gt;
Problem solved!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#private-class-attributes-through-the-raw-private-endraw-keyword"&gt;
  &lt;/a&gt;
  Private class attributes through the &lt;code&gt;private&lt;/code&gt; keyword
&lt;/h2&gt;

&lt;p&gt;Finally, this one caught me by surprise when working with TS myself. I was never a big fan of classes being added to JavaScript myself, considering the Prototypal Inheritance model worked just fine and to be honest, classes are just syntactic sugar around it at this point.&lt;br&gt;
However, when TS came into my life, I started seeing how they worked hard on actually implementing a more complete OOP model, so that sounded appealing and decided to give it a try.&lt;br&gt;
But then I hit this wall and I was again, a bit pissed.&lt;/p&gt;

&lt;p&gt;So what's the problem then? As it turns out, the &lt;code&gt;private&lt;/code&gt; keyword, which you'd use to define a private property in your class, does not make said property that private.&lt;br&gt;
&lt;em&gt;What?&lt;/em&gt; you ask.&lt;br&gt;
Yes I know, let me explain.&lt;br&gt;
This is how one would normally go about declaring a private property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;oMySelf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fernando Doglio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;oMySelf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're OK with this, right? We've declared both our properties as private, so we can fully control how and when they get updated. You can't really do &lt;code&gt;oMySelf.name="someone else"&lt;/code&gt;, TS won't let you.&lt;/p&gt;

&lt;p&gt;Of course, not until you do something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;oMySelf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOwnPropertyDescriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oMySelf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or something like this one (this one is personally my favorite):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;oMySelf&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the &lt;code&gt;private&lt;/code&gt; keyword only works during compilation, the runtime won't be able to restrict you. So the &lt;code&gt;in&lt;/code&gt; keyword can iterate over the actual list of private properties and through &lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt; you can get the values and more information even, from those supposedly protected and secure variables. &lt;br&gt;
And don't get me started on casting the object to &lt;code&gt;any&lt;/code&gt;,  you can do anything with the result of that!&lt;/p&gt;

&lt;p&gt;Alright but that is just about &lt;em&gt;reading&lt;/em&gt; private data, which &lt;em&gt;could&lt;/em&gt; be a problem, but it's not as bad as modifying it.&lt;br&gt;
Right? That's still protected, isn't it?&lt;br&gt;
Nope, let's look at &lt;code&gt;Object.assign&lt;/code&gt; for a second. And to test it properly, let's assign a private property that has no getter or setter to our &lt;code&gt;Person&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And how, let's create 2 objects of the same class with completely random &lt;code&gt;secret&lt;/code&gt; values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;oMySelf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fernando Doglio&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;someoneElse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Other Person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see they're different through our &lt;code&gt;any&lt;/code&gt; magic trick:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;someoneElse&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;oMySelf&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That should print 2 random floating-point numbers. However, if we add a single line before those &lt;code&gt;console.log&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oMySelf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;someoneElse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;someoneElse&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;oMySelf&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The secret value is now the same. In fact, everything is the same between both objects. We've effectively overwritten  all the private values of &lt;code&gt;oMySelf&lt;/code&gt; with the ones on &lt;code&gt;someoneElse&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Can we prevent this?&lt;br&gt;
Yes we can! We just need to use JavaScript's private property notation, instead of TypeScript's:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;Age&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It looks terrible, I know, but this is going to prevent every single one of our problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;in&lt;/code&gt; won't iterate over our private properties, so we can't really get their names.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Object.Assign&lt;/code&gt; will ignore private properties, so they won't get overwritten.&lt;/li&gt;
&lt;li&gt;And trying to cast our object to &lt;code&gt;any&lt;/code&gt; won't change a thing, since TS will complain that you're trying  to access a private property outside the class declaration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All problems solved!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;TypeScript is fun and if used correctly, a very powerful tool that can help you avoid lots of mistakes! But it's not perfect and if you're not careful and you don't really understand both the language itself and JavaScript, then you'll run into potential headache-inducing problems or even worse: security issues that could cause catastrophic failure on your app.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Working in public</title>
      <author>Francesco Ciulla</author>
      <pubDate>Wed, 20 Oct 2021 05:52:28 +0000</pubDate>
      <link>https://dev.to/francescoxx/working-in-public-3mll</link>
      <guid>https://dev.to/francescoxx/working-in-public-3mll</guid>
      <description>&lt;p&gt;I see many people struggling to get the visibility they deserve as content creators even though they are very good&lt;/p&gt;

&lt;p&gt;I've always seen Livestreams and working for a company as two opposites.&lt;/p&gt;

&lt;p&gt;But can they coexist? &lt;/p&gt;

&lt;p&gt;Yesterday I tried this working-in-public experience and I liked it a lot. &lt;/p&gt;

&lt;p&gt;Here is the moment with Nimrod and Ido jumping in!&lt;br&gt;
&lt;a href="https://youtu.be/cU1yjEiLjQE?t=4809"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VslZs2Vq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634706177482/GH37eTvKW.png" alt="working in public"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I worked on the official daily.dev documentation, using Docusaurus, an open-source tool by Facebook to write documentation.&lt;/p&gt;

&lt;p&gt;Daily.dev &lt;a href="https://daily.dev/"&gt;https://daily.dev/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docusaurus official website: &lt;a href="https://docusaurus.io/"&gt;https://docusaurus.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it
&lt;/h3&gt;

&lt;p&gt;Working in public is literally what the word suggests: doing what you get paid for but in a Livestream, which can last hours.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it-not"&gt;
  &lt;/a&gt;
  What is it not
&lt;/h3&gt;

&lt;p&gt;"Working in public" is a bit different from just working on your side project online or building in public because you get paid for it while you are working (and this is great!)&lt;/p&gt;

&lt;p&gt;It's not your company "controlling your work"&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when"&gt;
  &lt;/a&gt;
  When
&lt;/h3&gt;

&lt;p&gt;it is not always applicable, because often some sensitive data is used or the project is just secret, but it's at least worth thinking about whether some of the work can be done this way.&lt;/p&gt;

&lt;p&gt;IMPORTANT: both sides must agree on this before, it's not the company forcing the person to go live to control them or you just going live and exploiting some secrets of the company!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where"&gt;
  &lt;/a&gt;
  Where
&lt;/h3&gt;

&lt;p&gt;The Livestream should be done on the channels of the worker or where they prefer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-for-the-worker"&gt;
  &lt;/a&gt;
  Benefits for the worker
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;they can focus on working without distractions (Social Media, emails, calls).&lt;/li&gt;
&lt;li&gt;they get the benefits of a Livestream (and also people helping you out!).&lt;/li&gt;
&lt;li&gt;they get the company support on your Livestreams, eg giveaways, promoting you...&lt;/li&gt;
&lt;li&gt;it's a great way to monetize your YouTube Channel or get affiliated on Twitch without spending extra time!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#benefits-for-the-company"&gt;
  &lt;/a&gt;
  Benefits for the Company
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;in every moment, they can see the current status of the work.&lt;/li&gt;
&lt;li&gt;the product/company gets more engagement because of the nature of the Livestream.&lt;/li&gt;
&lt;li&gt;it is a way to make yourself known to more people, simply by showing it while working.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In conclusion, if you are working for a company and you see a possibility of applying the "working in public", you can be the one to propose and try it.&lt;/p&gt;

&lt;p&gt;I always say to document what you do whenever is possible, and this was just me applying this concept.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter to know more: &lt;a href="https://twitter.com/FrancescoCiull4"&gt;https://twitter.com/FrancescoCiull4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Best Online Python Compiler to Run Code in 2022
</title>
      <author>JenniferCarnel</author>
      <pubDate>Wed, 20 Oct 2021 05:20:16 +0000</pubDate>
      <link>https://dev.to/jennifercarnel/best-online-python-compiler-to-run-code-in-2022-13ol</link>
      <guid>https://dev.to/jennifercarnel/best-online-python-compiler-to-run-code-in-2022-13ol</guid>
      <description>&lt;p&gt;If &lt;b&gt;Python Compiler&lt;/b&gt; is installed on your system and you are in the subway, bus, or train and want to run a program on your smartphone while doing something else, Don’t worry, the answer is simple: you can use the online Python compiler as a source to run and successfully execute your code in any web browser. It is best to check the output of small Python code. If you are looking for an online Python compiler to run a 100-line Python program, an online Python shell to run Python code is not for you.&lt;br&gt;
Let's say your computer hasn't enough resources to install everything you need to learn Python, execute code, and test it. If you are a professional developer who spends most of your time programming, you should have a specialized Python IDE(software for development and debugging). Python is not heavy software that requires high-end computing power. A single computer like a Raspberry Pi can easily install Python and run it.&lt;br&gt;
If you have a certain type of Pc or system in which you do not want to (or can't) install a Python interpreter, but want to practice your Python skills and test some ideas, then the &lt;b&gt;Online Python Interpreter&lt;/b&gt; is a good choice for you. &lt;br&gt;
Online Compiler is a platform that allows us to write and execute our programs from source code. With the ability for programmers to write or execute their code, online compilers and IDEs save time, make you more productive, and help you learn to program easily and quickly.&lt;/p&gt;

&lt;h2&gt;Top 5 Online Python Compilers to Run Code&lt;/h2&gt;

&lt;p&gt;Before we see the list of available compilers, it is worth taking note that many college teachers use different types of compilers listed in this article to teach programming. If you are looking for a Python compiler that can speed up the Python code and can compile other language codes as well. Then you can combine it with languages such as Java, C, C + +, JavaScript, and others.&lt;br&gt;
Let's start with a list of our &lt;b&gt;Best Online Python Compilers in 2021&lt;/b&gt;. Today we list the top 5 online platforms that support online coding and execution. They offer free on-the-fly solutions for testing and running Python:&lt;/p&gt;

&lt;h3&gt;Codeskulptor&lt;/h3&gt;

&lt;p&gt;Codeskulptor is a user-friendly &lt;b&gt;&lt;a href="https://codersera.com/blog/best-python-ides-and-code-editors/"&gt;Python IDE platform.&lt;/a&gt;&lt;/b&gt; It has a cloud-based module that compiles Python and monitors the execution of your code. It was developed by scientists and engineers to provide Python with a powerful scientific environment. It has a built-in interpreter which is browser-dependent. It allows you to execute basic and advanced Python programs as well as code for advanced programming tasks. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pros&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;People just need an internet connection to start working on this platform.&lt;/li&gt;
&lt;li&gt;There are a lot of programs added as a demo for learning.
3.Codes can be easily shared once created. 
4.It has a powerful GUI interface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Cons&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is a python compiler but follows javascript implementations. This means that every program will not work on this platform. &lt;/li&gt;
&lt;li&gt;It is very difficult to add images and graphics while programming through this platform.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Codepen&lt;/h3&gt;

&lt;p&gt;Codepen is an online IDE and social development environment for frontend developers. Frontend designers and developers can show their work, create code snippets, and test cases to inspire others. &lt;br&gt;
&lt;b&gt;Pros&lt;/b&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is a free tool.&lt;/li&gt;
&lt;li&gt;It is Intuitive and Easy.&lt;/li&gt;
&lt;li&gt;It is an open-source tool.&lt;/li&gt;
&lt;li&gt;People can collaborate and work on a similar project through this tool.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Cons&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;People need to have a pro version of this tool to get privacy in their work. &lt;/li&gt;
&lt;li&gt;Several tools on this platform don’t work effectively. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;GeeksForGeeks&lt;/h3&gt;

&lt;p&gt;There are a lot of websites that offer a virtual online terminal for the practice of Python programming. GeeksForgeek is one of the websites visited by programmers. It is a very easy web-based application tool that relies on the Google App Engine (GAE).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pros&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is free &lt;/li&gt;
&lt;li&gt;Easy to use
Provides Learning solutions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Cons&lt;/b&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It cannot provide results with a complex code.&lt;/li&gt;
&lt;li&gt;It is not able to try compiling test cases.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Repl.it&lt;/h3&gt;

&lt;p&gt;Repl.It is the world's leading online programming platform where you can collaborate, compile, run, share and use Python. Scripts are written in languages such as C + +, C #, Java, PHP, Python 2. x, Python 3. x, and Scala and JavaScript.&lt;br&gt;
It was a simple &lt;b&gt;beginner tool&lt;/b&gt; a few years ago, but today it supports Python 3 and many other programming languages. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pros&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;This tool can work long hours.&lt;/li&gt;
&lt;li&gt;It has an auto saving feature.
People can get a debugging setup as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Cons&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is not a fast interface.&lt;/li&gt;
&lt;li&gt;This console is somewhat hard to use. Since many people don’t get the use of bash commands.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;OneCompiler&lt;/h3&gt;

&lt;p&gt;The &lt;b&gt;Python online compiler&lt;/b&gt;, OneCompiler is one of Python's most reliable and powerful online compilers, supporting all versions of Python 3 and Python 2.7. Write, execute and share Python code with OneCompiler for free. It shows sample code for Boilerplate, so you can choose the language Python or Python2.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pros&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;All in one platform.&lt;/li&gt;
&lt;li&gt;Most of the programs are successfully compiled. 
People can use other languages to compile other programs as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Cons&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It can be confusing sometimes.&lt;/li&gt;
&lt;li&gt;Plain Console with lots of unknown tools.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;The capabilities of &lt;b&gt;online compilers&lt;/b&gt; range from a simple Python shell that can execute simple Python scripts to feature-rich cloud interpreters and compilers that can be used to edit, write, execute, visualize, debug, clone, share code and collaborate with remote teams.&lt;br&gt;
Many universities use Python to teach students and teachers programming, and use online compilers to share and complete tasks. Many other online tutorials, courses, and boot camps use embeddable compilers and interpreters to help students understand examples and snippets of what is happening during the course. All in all, these compilers can help individuals in different ways, it’s up to them how they want to use these platforms and which one is the most suitable for them.&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
