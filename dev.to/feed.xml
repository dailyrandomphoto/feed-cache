<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best tool for distributed tracing: SigNoz vs Jaeger</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Wed, 25 Aug 2021 13:01:07 +0000</pubDate>
      <link>https://dev.to/signoz/best-tool-for-distributed-tracing-signoz-vs-jaeger-39md</link>
      <guid>https://dev.to/signoz/best-tool-for-distributed-tracing-signoz-vs-jaeger-39md</guid>
      <description>&lt;p&gt;Are you thinking of using Jaeger as a distributed tracing tool? What if there is a better alternative that does both traces and metrics so that your engineering team does not have to use multiple tools.&lt;/p&gt;

&lt;p&gt;In this article, we will explore how SigNoz is a better alternative than Jaeger as an observability tool. Jaeger is famous as an end-to-end distributed tracing tool. Jaeger was originally built by teams at Uber and then open-sourced. Distributed tracing is a mechanism to track transactions across services. When you have a distributed system based on microservices, tracing your transactions across services is a necessity. With distributed tracing, engineering teams can quickly identify issues instead of wasting time checking multiple logs and dashboards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SigNoz is an excellent open-source distributed tracing tool. But it goes beyond. It is a full-stack APM and observability tool with a unified UI for metrics and traces. So you don't have to switch between tools like Prometheus(metrics) and Jaeger(traces) to debug issues. The product roadmap of SigNoz also has log management in its pipeline.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-is-signoz-better-than-jaeger-as-an-observability-tool"&gt;
  &lt;/a&gt;
  How is SigNoz better than Jaeger as an observability tool?
&lt;/h2&gt;

&lt;p&gt;SigNoz can be your one-stop solution for application performance monitoring and observability needs. While Jaeger can be a good solution for distributed tracing, engineering teams often need access to metrics and traces for robust monitoring and quick debugging. The biggest advantage of SigNoz over Jaeger is that it does both metrics and traces. And that's only one of the reasons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;List of reasons why you should choose SigNoz over Jaeger:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#signoz-provides-unified-ui-for-both-metrics-and-traces"&gt;SigNoz provides unified UI for both &lt;strong&gt;metrics and traces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-metrics-like-latency-error-rate-etc-on-traces-for-specific-user-groups"&gt;&lt;strong&gt;See metrics&lt;/strong&gt; like latency, error rate etc. &lt;strong&gt;on traces for specific user groups&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backend-storage-option-of-clickhouse-or-kafkadruid"&gt;Backend storage options of &lt;strong&gt;ClickHouse&lt;/strong&gt; or &lt;strong&gt;Kafka+Druid&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#out-of-box-charts-and-visualization-with-signoz"&gt;Better user experience with &lt;strong&gt;out of box charts&lt;/strong&gt; &amp;amp; visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#role-based-access-control-for-better-team-managementin-roadmap"&gt;&lt;strong&gt;Role-based access control&lt;/strong&gt; for better team management(in roadmap)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's explore in detail how these features of SigNoz make it a better choice than Jaeger for your engineering team's productivity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signoz-provides-unified-ui-for-both-metrics-and-traces"&gt;
  &lt;/a&gt;
  SigNoz provides unified UI for both metrics and traces
&lt;/h3&gt;

&lt;p&gt;Metrics are usually captured as time-series data and show statistics about the performance of specific services over a period of time. The statistics help developers understand the behavior of these services and how they are being used. Therefore, metrics monitoring is critical to keep your system uptimes high. A good practice is to aggregate and visualize metrics within at most one minute.&lt;/p&gt;

&lt;p&gt;Jaeger is a distributed tracing tool and does not provide metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXaxj-gg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wan63ex1hd37uz5mxkm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXaxj-gg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wan63ex1hd37uz5mxkm8.png" alt="Jaeger UI for showing traces"&gt;&lt;/a&gt;Jaeger UI showing services and corresponding traces&lt;/p&gt;

&lt;p&gt;SigNoz, on the other hand, provides application metrics like the popular RED metrics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requests per sec&lt;/li&gt;
&lt;li&gt;Error rate (%)&lt;/li&gt;
&lt;li&gt;Application latency like p50, p95, and p99&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SigNoz also provides an easy way to track the top endpoints of your application, as shown in the dashboard below. You can see that SigNoz has a dedicated tab for metrics visualization. You can also track metrics for external calls and database calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_VSgXDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnk49w9vmz6qj5taptap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_VSgXDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnk49w9vmz6qj5taptap.png" alt="SigNoz UI"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-metrics-like-latency-error-rate-etc-on-traces-for-specific-user-groups"&gt;
  &lt;/a&gt;
  See metrics like latency, error rate etc on traces for specific user groups
&lt;/h3&gt;

&lt;p&gt;A single trace tells you how a user request performed across services to serve the user what they wanted. And aggregated traces can help you identify which service or database is causing the latency affecting user's requests. And what if we told you, with SigNoz, you can see metrics for aggregated trace data related to particular attributes.&lt;/p&gt;

&lt;p&gt;Let's break down what it means. Suppose you have a user category marked &lt;code&gt;gold&lt;/code&gt; for customers in a particular segment for your application. Seeing how requests from a specific segment of users perform in your application can be critical to business metrics like growth or revenue. SigNoz allows you to filter traces with the help of tags. For example, you can filter traces where the customer type tag is set to &lt;code&gt;gold&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FzHFmlYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcmg769zcao8budz4f9x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FzHFmlYW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hcmg769zcao8budz4f9x.png" alt="SigNoz trace filters"&gt;&lt;/a&gt;You can filter traces with tags in SigNoz traces dashboard&lt;/p&gt;

&lt;p&gt;After filtering the traces, you can choose to visualize metrics like calls, duration, and error rate on the filtered traces. This insight can help you improve app's performance for specific user segments and use-cases. Jaeger does not provide such capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ioq97Bk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbnl2fjfo671mu1cyouj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ioq97Bk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbnl2fjfo671mu1cyouj.png" alt="See metrics of filtered traces"&gt;&lt;/a&gt;See metrics like number of calls, duration and error on filtered traces&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-storage-option-of-clickhouse-or-kafkadruid"&gt;
  &lt;/a&gt;
  Backend storage option of ClickHouse or Kafka+Druid
&lt;/h3&gt;

&lt;p&gt;While installing SigNoz, you will have the option to choose between ClickHouse or Kafka+Druid as your storage backend. You can select any of the two depending on your preference.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h19O15Ig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvf17sam7zmchomhm961.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h19O15Ig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvf17sam7zmchomhm961.png" alt="Technical architecture of SigNoz with ClickHouse setup"&gt;&lt;/a&gt;Technical architecture of SigNoz with ClickHouse setup&lt;/p&gt;

&lt;p&gt;ClickHouse is designed to be a &lt;a href="https://clickhouse.tech/docs/en/faq/general/why-clickhouse-is-so-fast/"&gt;very fast&lt;/a&gt; OLAP database. It is also low resource-intensive. Kafka+Druid is an industry-proven combo to power highly scalable data ingestion and real-time data analysis.&lt;/p&gt;

&lt;p&gt;For Jaeger, Cassandra and Elasticsearch are the primary supported storage backends. But users have requested ClickHouse support for Jaeger too due to its popularity. Check out this GitHub issue 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jaegertracing/jaeger/issues/1438"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a2AJqAiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xf1uupwg2pqj3o5ym60k.png" alt="Jaeger GitHub issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#out-of-box-charts-and-visualization-with-signoz"&gt;
  &lt;/a&gt;
  Out of box charts and visualization with SigNoz
&lt;/h3&gt;

&lt;p&gt;SigNoz is an open-source tool, but its genesis lies in the absence of a great user experience of current popular open-source alternatives. It can be easily compared to SaaS vendors like DataDog when it comes to UX and data visualization.&lt;/p&gt;

&lt;p&gt;Below you can see how spans in a trace are visualized with flamegraphs and Gantt charts. A good visualization dashboard is designed with the intent to drive actionable insights fast. With a single-pane view of spans and details for selected spans, it's much easier for teams to identify issues in selected spans.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vKN26r7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wfv4u11ib7jcrqjk0eu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vKN26r7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wfv4u11ib7jcrqjk0eu.png" alt="SigNoz flamegraphs"&gt;&lt;/a&gt;Spans of a trace visualized with the help of flamegraphs and gantt charts in SigNoz dashboard&lt;/p&gt;

&lt;p&gt;Jaeger does not provide Flamegraphs, and to view details of a span, you need to drill down on a selected span.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KLW-GSM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b059ty3ihh6coxncpcix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KLW-GSM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b059ty3ihh6coxncpcix.png" alt="Jaeger gantt charts"&gt;&lt;/a&gt;Jaeger's UI showing  spans for selected traces&lt;/p&gt;

&lt;p&gt;SigNoz also provides interactive service maps which can automatically identify the dependency between your services. The size of each circle is proportional to the number of requests it is serving. The dots connecting the services are synced with the flow of requests between the services.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Evws4Tf2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eg1bf4cgv5deihasqxr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Evws4Tf2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3eg1bf4cgv5deihasqxr.png" alt="SigNoz service maps"&gt;&lt;/a&gt;Interactive Service Maps shown on SigNoz dashboard&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GeN6T5H1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkx41958i67atoq2jvic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GeN6T5H1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkx41958i67atoq2jvic.png" alt="Jaeger's dependency graph"&gt;&lt;/a&gt;Jaeger's dependency graph&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#role-based-access-control-for-better-team-managementin-roadmap"&gt;
  &lt;/a&gt;
  Role based access control for better team management(in roadmap)
&lt;/h3&gt;

&lt;p&gt;SigNoz plans to implement role-based access controls for its dashboards. Collaboration is one of the key focus areas of SigNoz. In today's cross-functioning teams, it's important that tools enable such collaboration. With SigNoz's RBAC features, you can share dashboards across teams with different permission levels. Jaeger does not support any such feature.&lt;/p&gt;




&lt;p&gt;Now that you have an idea of why you should choose SigNoz if you're considering Jaeger as a distributed tracing tool, let's see in brief two important things about SigNoz:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How does SigNoz collects data?&lt;/li&gt;
&lt;li&gt;How to install and get started with SigNoz?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-signoz-collects-data"&gt;
  &lt;/a&gt;
  How does SigNoz collects data?
&lt;/h2&gt;

&lt;p&gt;SigNoz uses &lt;a href="https://opentelemetry.io/" rel="noopener noreferrer nofollow"&gt;OpenTelemetry&lt;/a&gt; for code instrumentation. Instrumentation is the technique of generating telemetry data(logs, metrics, and traces). OpenTelemetry is becoming the world standard for generating vendor-agnostic telemetry data. As SigNoz uses OpenTelemetry, you will never be locked in with your data. You can always shift to any analysis backend tool as most of the tools have started supporting OpenTelemetry formats of telemetry data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install-and-get-started-with-signoz"&gt;
  &lt;/a&gt;
  How to install and get started with SigNoz?
&lt;/h2&gt;

&lt;p&gt;If you have docker installed, getting started with SigNoz just takes three easy steps at the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read more about deploying SigNoz from its &lt;a href="https://signoz.io/docs/deployment/docker/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;br&gt;
&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to read more about SigNoz 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/opentelemetry/nodejs/"&gt;Monitor your Nodejs application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>microservices</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Tackling security vulnerability at an early stage in SDLC</title>
      <author>Ige Adetokunbo Temitayo</author>
      <pubDate>Wed, 25 Aug 2021 12:49:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/tackling-security-vulnerability-at-an-early-stage-in-sdlc-1kl</link>
      <guid>https://dev.to/aws-builders/tackling-security-vulnerability-at-an-early-stage-in-sdlc-1kl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr-SMtM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phgisyjpu3130i7dfgar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jr-SMtM2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phgisyjpu3130i7dfgar.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a Software Engineer, I will like to detect security vulnerabilities early enough in my codebase before committing my code.&lt;/p&gt;

&lt;p&gt;Detecting security vulnerability is very important in SDLC (Software Development Life Cycle), this will allow developers to fix any security-related issues before raising a change request or even before the security team flags this vulnerability.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In tackling these security vulnerabilities, Engineers can integrate the following techniques into their current workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Engineers can integrate their favorite IDE’s with security scanning and detection plugins such as &lt;a href="https://snyk.io/ide-plugins/"&gt;synk&lt;/a&gt; and &lt;a href="https://www.sonarlint.org/"&gt;sonarlint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Synk IDE plugin helps Engineers to secure their code as they develop, the IDE plugins scans the code in real-time for vulnerabilities and provide advice on how to fix them.&lt;/p&gt;

&lt;p&gt;sonarlint IDE plugin helps to identify and fix quality and security issues as Engineers write codes. These two plugins will fix and advise on any security vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Software Engineers should cultivate the habit of implementing pre-commit hooks which will contain workflow for managing security vulnerability. The pre-commit hook will run first before even typing in a commit message.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The workflow will contain the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check if there are any form of secrets (passwords, API keys) as plain text in the codebase&lt;/li&gt;
&lt;li&gt;Check if there is a private key in the codebase
Remove white spaces&lt;/li&gt;
&lt;li&gt;Check added large files to confirm if we have the right files in the codebase.&lt;/li&gt;
&lt;li&gt;Integrate an automated security testing approach such as one, which will detect Cross-Site Scripting XSS vulnerabilities and test for input validation injections.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In conclusion, please do let me know if you find this article interesting. More ways of tackling security are welcomed. &lt;/p&gt;

</description>
      <category>awscommunitybuilders</category>
      <category>synk</category>
      <category>security</category>
      <category>aws</category>
    </item>
    <item>
      <title>My Top 10 YouTube Channels for Programmers</title>
      <author>Kingsley Ubah</author>
      <pubDate>Wed, 25 Aug 2021 11:59:56 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/my-top-10-youtube-channels-for-programmers-28d2</link>
      <guid>https://dev.to/ubahthebuilder/my-top-10-youtube-channels-for-programmers-28d2</guid>
      <description>&lt;p&gt;On my &lt;a href="https://twitter.com/ubahthebuilder"&gt;twitter&lt;/a&gt; profile, I constantly receive a lot of questions from beginners inquiring about what YouTube channels to go to for programming content.&lt;/p&gt;

&lt;p&gt;So in this post, I will be listing out ten (10) of my favourite YouTube channels for software programmers as well as what kind of content to expect from each of them. &lt;/p&gt;

&lt;p&gt;Let's begin!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cs-dojo"&gt;
  &lt;/a&gt;
  CS Dojo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---I2OQnP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886635411/oQ_aP1tuh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---I2OQnP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886635411/oQ_aP1tuh.png" alt="cs dojo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn a lot about solid computer science and programming concepts with YK. &lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python concepts&lt;/li&gt;
&lt;li&gt;Python tutorials&lt;/li&gt;
&lt;li&gt;Computer Science&lt;/li&gt;
&lt;li&gt;Tips on how to get a job&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and much more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCxX9wt5FWQUAAz4UrysqK9A"&gt;Visit CS Dojo on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kevin-powell"&gt;
  &lt;/a&gt;
  Kevin Powell
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RA9p0lyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886969033/VVEqx8_le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RA9p0lyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886969033/VVEqx8_le.png" alt="kevin-powell.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kevin provides tips and tricks on CSS as well as web development in general. If you want great content on CSS, you must check this out.&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Responsive Design&lt;/li&gt;
&lt;li&gt;CSS design tools&lt;/li&gt;
&lt;li&gt;Web design principles&lt;/li&gt;
&lt;li&gt;Web development &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/KepowOb"&gt;Visit Kevin Powell on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aaron-jack"&gt;
  &lt;/a&gt;
  Aaron Jack
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vaoy4qYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629887409713/dwzQ5JWgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vaoy4qYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629887409713/dwzQ5JWgj.png" alt="aaron-jack.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aaron Jack provides solid advice and tips on software programming and remote work.&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freelancing&lt;/li&gt;
&lt;li&gt;Remote work&lt;/li&gt;
&lt;li&gt;Web Development concepts&lt;/li&gt;
&lt;li&gt;Tips on how to get a job&lt;/li&gt;
&lt;li&gt;Software Development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCRLEADhMcb8WUdnQ5_Alk7g"&gt;Visit Aaron on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coder-coder"&gt;
  &lt;/a&gt;
  Coder Coder
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xd4_5-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629887825027/PtalTNP7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xd4_5-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629887825027/PtalTNP7f.png" alt="coder coder.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are learning web development, this is one channel you definitely wouldn't want to miss.&lt;/p&gt;

&lt;p&gt;This channel provides content on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Tutorials on web development&lt;/li&gt;
&lt;li&gt;Learning programming as a self-taught&lt;/li&gt;
&lt;li&gt;Web development concepts and best practices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCzNf0liwUzMN6_pixbQlMhQ"&gt;Visit Coder Coder on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#traversy-media"&gt;
  &lt;/a&gt;
  Traversy Media
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgpW_if0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629888459400/iwcknvWle.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgpW_if0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629888459400/iwcknvWle.png" alt="traversy-media.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for comprehensive tutorials and guides on using web dev technologies, this channel is for you. You should check out the crash courses as well!&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS and frameworks&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;Tutorials on how to use web dev tools&lt;/li&gt;
&lt;li&gt;Crash courses on programming languages and tools&lt;/li&gt;
&lt;li&gt;Advices and tips on growing as a web developer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Visit TraversyMedia on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-dev-simplified"&gt;
  &lt;/a&gt;
  Web Dev Simplified
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fp3MRIRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629888718946/pqOFplxrE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fp3MRIRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629888718946/pqOFplxrE.png" alt="web-dev-simplified.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Watch comprehensive tutorials on how to use web development tools to build web apps.&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS and its usage&lt;/li&gt;
&lt;li&gt;Web Development&lt;/li&gt;
&lt;li&gt;Tutorials on how to build web apps&lt;/li&gt;
&lt;li&gt;Tips and advices for programmers&lt;/li&gt;
&lt;li&gt;Responsive web design&lt;/li&gt;
&lt;li&gt;JavaScript and libaries/frameowrks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw"&gt;Visit Web Dev Simplified on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#freecodecamporg"&gt;
  &lt;/a&gt;
  FreeCodeCamp.org
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yceFfYgc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629889081623/h2OGTnZZM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yceFfYgc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629889081623/h2OGTnZZM.png" alt="freecodecamp.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;FreeCodeCamp has possibly the most comprehensive tutorials you can find about programming on YouTube. &lt;/p&gt;

&lt;p&gt;This channel provides (long) content on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Android development&lt;/li&gt;
&lt;li&gt;Web Development&lt;/li&gt;
&lt;li&gt;Databases&lt;/li&gt;
&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;Beginner level courses&lt;/li&gt;
&lt;li&gt;Data Structures and Algorithms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;Visit FreeCodeCamp on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cl%C3%A9ment-mihailescu"&gt;
  &lt;/a&gt;
  Clément Mihailescu
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3bOOImOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629889843788/ZDmLqm9Lw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bOOImOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629889843788/ZDmLqm9Lw.png" alt="clément-mihailescu.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for deep insights and advices on how to get a tech job, this is a channel to check out.&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting a job in tech&lt;/li&gt;
&lt;li&gt;Scaling the job interview process&lt;/li&gt;
&lt;li&gt;Valuable tips and advices for people getting into tech&lt;/li&gt;
&lt;li&gt;Interesting talks&lt;/li&gt;
&lt;li&gt;Computer science principles&lt;/li&gt;
&lt;li&gt;Personal stories and experiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCaO6VoaYJv4kS-TQO_M-N_g"&gt;Visit Clément Mihailescu on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ben-awad"&gt;
  &lt;/a&gt;
  Ben Awad
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ICE9cVve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890149337/HEkv3t98H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ICE9cVve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890149337/HEkv3t98H.png" alt="ben-awad.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similar to the previous channel, this one provides insoghts and tips on growing as a software developer.&lt;/p&gt;

&lt;p&gt;This channel provides content on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Programming concepts&lt;/li&gt;
&lt;li&gt;Deep insights and perspectives on working in tech&lt;/li&gt;
&lt;li&gt;Valuable tips and advices&lt;/li&gt;
&lt;li&gt;Breakdown of tech tools and their uses&lt;/li&gt;
&lt;li&gt;Web development tutorials&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/99baddawg"&gt;Visit Ben Awad on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#james-q-quick"&gt;
  &lt;/a&gt;
  James Q. Quick
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---OmRiWK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890686424/xYxYhd2LX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---OmRiWK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890686424/xYxYhd2LX.png" alt="james-quick.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for a channel to learn web development tools and techniques, you can check out this channel too.&lt;/p&gt;

&lt;p&gt;This channel provides content on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTML, CSS and JavaScript&lt;/li&gt;
&lt;li&gt;Web Development concepts&lt;/li&gt;
&lt;li&gt;Quick tutorials on using web dev tools&lt;/li&gt;
&lt;li&gt;Tips and advices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC-T8W79DN6PBnzomelvqJYw"&gt;Visit James Quick on YouTube&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  WRAPPING UP
&lt;/h3&gt;

&lt;p&gt;You may not agree so much with this list, or may have some reservations. That is exactly why this is my list. These are the ones I visit the most, or the ones which the YouTube algorithm shows me the most often. &lt;/p&gt;

&lt;p&gt;If you have any other suggestions, which I bet you do, be sure to list them in the comments.&lt;/p&gt;

&lt;p&gt;My name is Kingsley and I hope to help beginners with my technical writings. I also write for &lt;a href="https://www.freecodecamp.org/news/author/ubahthebuilder/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YOU MAY ALSO LIKE THESE POSTS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/7-es6-features-all-javascript-programmers-should-learn-to-use"&gt;Top 7 ES6 Features to Use &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/7-es6-features-all-javascript-programmers-should-learn-to-use"&gt;Web development – Beginners Roadmap&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/what-are-object-prototypes-explaining-prototype-inheritance-in-a-simple-way"&gt;Prototypal Inheritance in JavaScript explained&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stay safe and see you next time.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Flutter setup - LLF #2</title>
      <author>Keff</author>
      <pubDate>Wed, 25 Aug 2021 11:54:43 +0000</pubDate>
      <link>https://dev.to/nombrekeff/flutter-setup-llf-2-1cke</link>
      <guid>https://dev.to/nombrekeff/flutter-setup-llf-2-1cke</guid>
      <description>&lt;p&gt;👋 Welcome back to the second post on this series. In this one, we will be covering &lt;strong&gt;how to set up Flutter&lt;/strong&gt;. You can follow their official guide if you want to &lt;a href="https://flutter.dev/docs/get-started/install"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can skip this one if you already have Flutter installed or know how to do it. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#install-flutter-in-your-machine"&gt;
  &lt;/a&gt;
  Install Flutter in your machine
&lt;/h2&gt;

&lt;p&gt;The first step is to install Flutter in your development machine. It works in all major OS'&lt;/p&gt;

&lt;p&gt;For that, you will have to go to the &lt;a href="https://flutter.dev/docs/get-started/install"&gt;install&lt;/a&gt; page. And follow the instructions for your Operating System.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-and-editor"&gt;
  &lt;/a&gt;
  Setup and Editor
&lt;/h2&gt;

&lt;p&gt;After you've got Flutter installed, you will need to set up an editor. I recommend VScode as the series will be using it, but feel free to use anyone they support. Check their guides &lt;a href="https://flutter.dev/docs/get-started/editor?tab=vscode"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-are-now-ready-to-do-a-test-drive"&gt;
  &lt;/a&gt;
  We are now ready to do a test drive
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-new-application"&gt;
  &lt;/a&gt;
  Creating a new application
&lt;/h3&gt;

&lt;p&gt;Let's now create a basic flutter app, for VSCode you can do it like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invoke &lt;strong&gt;View &amp;gt; Command Palette&lt;/strong&gt; (cmd+shift+p).&lt;/li&gt;
&lt;li&gt;Type “flutter”, and select &lt;strong&gt;Flutter: New Application Project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Create or select the parent directory for the new project folder.&lt;/li&gt;
&lt;li&gt;Enter a project name, such as &lt;code&gt;myapp&lt;/code&gt;, and press &lt;strong&gt;Enter&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Wait for project creation to complete and the &lt;code&gt;main.dart&lt;/code&gt; file to appear.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The above commands create a Flutter project directory called myapp that contains a simple demo app that uses Material Components.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I would recommend checking the guide they provide &lt;a href="https://flutter.dev/docs/get-started/test-drive?tab=vscode"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-the-app"&gt;
  &lt;/a&gt;
  Running the app
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Locate the VS Code status bar (the blue bar at the bottom of the window)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---mPgxwyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0dh1qw82xrz0r6xso9v.png" alt="VScode status bar image"&gt;
&lt;/li&gt;
&lt;li&gt;Select a device from the &lt;strong&gt;Device Selector&lt;/strong&gt; area. For details, see &lt;a href="https://dartcode.org/docs/quickly-switching-between-flutter-devices"&gt;Quickly switching between Flutter devices&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;If no device is available and you want to use a device simulator, click &lt;strong&gt;No Devices and launch a simulator&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Invoke &lt;strong&gt;Run &amp;gt; Start Debugging&lt;/strong&gt; or press F5.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The app should launch in the Emulator or device, and show something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kncme6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0m3ql1ywpcc2ake98ni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kncme6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0m3ql1ywpcc2ake98ni.png" alt="Launched app image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-make-a-change"&gt;
  &lt;/a&gt;
  Let's make a change
&lt;/h3&gt;

&lt;p&gt;Flutter offers a fast development cycle with Stateful Hot Reload, the ability to reload the code of a live running app without restarting or losing the app state. &lt;/p&gt;

&lt;p&gt;Let's try that, by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Locating &lt;code&gt;main.dart&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Locate the string &lt;em&gt;'You have pushed the button this many times'&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Modify to something different like: &lt;em&gt;'You have clicked the button this many times'&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After saving you should see the changes immediately reflected in the app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#further-learning"&gt;
  &lt;/a&gt;
  Further learning
&lt;/h3&gt;

&lt;p&gt;In the next posts, I will be covering everything to be able to build a complete app, but if you want to start already, I would suggest checking out their guide on how to build a complete app &lt;a href="https://flutter.dev/docs/get-started/codelab"&gt;here&lt;/a&gt;, quite detailed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Another short and kinda uninteresting post, though necessary for the upcoming ones! I promise they will get more interesting.&lt;/p&gt;

&lt;p&gt;To summarize this one, I've shown you an overview of how to set up flutter on your machine and provide you with links to help you get going. The process is usually quite straightforward, so I don't expect it to give you any problems. If it does, please let me know and I will be happy to help out!&lt;/p&gt;

&lt;p&gt;Thanks for reading. I hope you learned a thing or two.&lt;/p&gt;

&lt;p&gt;And finally, remember to comment if you have any suggestions or something you would like me to cover in the next posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/install"&gt;Flutter, install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/editor?tab=vscode"&gt;Flutter, setup editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/test-drive?tab=vscode"&gt;Flutter, test drive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/codelab"&gt;Flutter, build an app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flutter.dev/docs/get-started/learn-more"&gt;Learn more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://dev.to/nombrekeff/flutter-what-is-it-llf-1-2jok"&gt;&amp;lt; Previous Post&lt;/a&gt;  ...  Next Post &amp;gt; &lt;/p&gt;




</description>
      <category>flutter</category>
      <category>dart</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Flutter, what is it? - LLF #1
</title>
      <author>Keff</author>
      <pubDate>Wed, 25 Aug 2021 11:54:33 +0000</pubDate>
      <link>https://dev.to/nombrekeff/flutter-what-is-it-llf-1-2jok</link>
      <guid>https://dev.to/nombrekeff/flutter-what-is-it-llf-1-2jok</guid>
      <description>&lt;p&gt;Well &lt;strong&gt;"it's one of the most common abnormal heart rhythms (arrhythmias)"&lt;/strong&gt; according to my research. Weird name choice by Google but we'll roll with it. They were called Sky before, so I don't know what is a better choice, honestly :P&lt;/p&gt;

&lt;p&gt;Jokes aside, this is what they say they are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Flutter is Google's UI toolkit for building beautiful, natively compiled applications for mobile, web, desktop, and embedded devices from a single codebase.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://flutter.dev/"&gt;From the main page&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay, that's a jumble of technical words right there. Let me explain that for a human. &lt;/p&gt;

&lt;p&gt;What they mean is, they are a tool for building apps for a variety of platforms (android, iOS, website) using the same code. Whereas traditionally, you would have to write different code for each of the platforms you wanted your app to run on. For example, if my product needed to run in both android and iOS, I would have to write basically the same, two times.&lt;/p&gt;

&lt;p&gt;This &lt;strong&gt;reduces&lt;/strong&gt; the &lt;strong&gt;time and human power&lt;/strong&gt; needed to get the app to the market, instead of needing two teams, you just need one. &lt;/p&gt;

&lt;p&gt;Let's start introducing a bit of technical info now. One could say they are a &lt;a href="https://en.wikipedia.org/wiki/Software_framework"&gt;framework&lt;/a&gt; basically, built on top of the [Dart][dart-dev] language. This means that when using Flutter, you will need to know [dart][dart-dev]. But fear not, I will be teaching you about that too.&lt;/p&gt;

&lt;p&gt;Now that we know a bit about what Flutter is, let's see some pros and cons, when should you use it and when you should not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#developer-experience"&gt;
  &lt;/a&gt;
  Developer experience
&lt;/h4&gt;

&lt;p&gt;In my experience trying out different frameworks and languages, like React, React Native, Angular, Vue, Symfony, Ionic, Nest.js, express, etc... I have to say that Flutter gives you one of the best experiences as a developer I've had. From a simple app to a big production app.&lt;/p&gt;

&lt;p&gt;But that's subjective, I'm sure many others prefer to use React native, so in the end, it's up to each one to try different things and see which one you like the most!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#native-performance"&gt;
  &lt;/a&gt;
  Native performance
&lt;/h4&gt;

&lt;p&gt;They claim to have native performance, though I have not put that to the test in any of my projects. Reading at what they say, performance seems to be quite good, you can read more &lt;a href="https://dart.dev/overview#platform"&gt;here&lt;/a&gt; if interested.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h4&gt;

&lt;p&gt;It's really easy to style your apps, from the default material look to anything your mind could create. Needs a bit of getting used to, but once you get it, it's quite straight forwards.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#good-docs"&gt;
  &lt;/a&gt;
  Good docs
&lt;/h4&gt;

&lt;p&gt;Again, one of the best docs I've come across. Plus the community behind flutter, which is really helpful.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reliable"&gt;
  &lt;/a&gt;
  Reliable
&lt;/h4&gt;

&lt;p&gt;It never lets you down when you most need it. In contrast with other solutions, which I will not name here, but one starts with and I and finished with onic. What I'm referring to as reliable is, that the whole workflow is solid and expectable. And does not give you any problems most of the time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#its-not-native"&gt;
  &lt;/a&gt;
  It's not native
&lt;/h4&gt;

&lt;p&gt;That's the biggest difference, they claim to have native performance. But that's not the only consideration to have. It also implies that new Android and iOs features will take longer to arrive in Flutter.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#its-relatively-young"&gt;
  &lt;/a&gt;
  It's relatively young
&lt;/h4&gt;

&lt;p&gt;Flutter is relatively young compared to other frameworks, but it's maturing fast as the adoption is quite good. It's also backed and used by Google, so hopefully, they won't let it die, and continuously improve it over time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-platform-look"&gt;
  &lt;/a&gt;
  The "platform look"
&lt;/h4&gt;

&lt;p&gt;It takes more work to get the platform-specific look. If you want to look like an iOS app and an Android app depending on the platform, you might end up benefiting from building 2 apps instead. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#has-some-weird-bugs-occasionally"&gt;
  &lt;/a&gt;
  Has some weird bugs occasionally
&lt;/h4&gt;

&lt;p&gt;In my time with Flutter I've come across, some small and some big problems (&lt;em&gt;not many though&lt;/em&gt;). In some cases they've affected the main feature of the app, slowing us down a bit. But thanks to the community, I've always found some workaround, whilst I wait for the fix, which eventually gets implemented.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0sneak-peek"&gt;
  &lt;/a&gt;
   Sneak peek
&lt;/h3&gt;

&lt;p&gt;Here is some of the code you will see in upcoming posts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... more code ...&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ForgotPasswordState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ForgotPassword&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;_formKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GlobalKey&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FormState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;

  &lt;span class="n"&gt;ForgotPasswordDto&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ForgotPasswordDto&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;email:&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;isDataValid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;valid&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;FormPageLayout&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;EmptyAppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;form:&lt;/span&gt; &lt;span class="n"&gt;_forgotPasswordForm&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
      &lt;span class="nl"&gt;submitButton:&lt;/span&gt; &lt;span class="n"&gt;ActionButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;label:&lt;/span&gt; &lt;span class="s"&gt;'NEXT'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="n"&gt;isDataValid&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;_next&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// ... more code ...&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%C2%A0summary"&gt;
  &lt;/a&gt;
   Summary
&lt;/h2&gt;

&lt;p&gt;We've seen that Flutter allows us to create apps quite fast, with good performance and easy customization. We've also seen some drawbacks of the framework and finally seen some code.&lt;/p&gt;

&lt;p&gt;I think that's it for this one, not very interesting but, some base knowledge is required. We will start the fun stuff soon.&lt;/p&gt;

&lt;p&gt;Thanks for reading. I hope you learned a thing or two.&lt;/p&gt;

&lt;p&gt;And remember to comment if you have any suggestions or something you would like me to cover in these posts.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://dev.to/nombrekeff/showcase-let-s-learn-flutter-llf-0-20pk"&gt;&amp;lt; Previous Post&lt;/a&gt;  ...  &lt;a href="https://dev.to/nombrekeff/flutter-setup-llf-2-1cke"&gt;Next Post &amp;gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>flutter</category>
      <category>dart</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Python vs Java: Compare Programming Languages in 2021</title>
      <author>Otmane Riad</author>
      <pubDate>Wed, 25 Aug 2021 11:54:27 +0000</pubDate>
      <link>https://dev.to/nexteventideas/python-vs-java-compare-programming-languages-in-2021-15a0</link>
      <guid>https://dev.to/nexteventideas/python-vs-java-compare-programming-languages-in-2021-15a0</guid>
      <description>&lt;p&gt;The battle for the most popular programming language continues to rage as new languages such as Kotlin, Go, and Swift enter the arena, ready for battle. While these new codebases are gaining traction, the old standbys not only hold their place at the top of the mountain but continue to rise in popularity as well. Two of these languages – Java and Python – are in a constant war for second and third place, swapping positions every other month.&lt;/p&gt;

&lt;p&gt;What makes these two languages a favorite amongst developers? Which one is better, and how do they continue to be so widely used decades after arriving on the programming scene? What are the benefits of Python over Java and vice versa? We look at these very topics and showcase some code examples of each in today’s programming tutorial.&lt;/p&gt;

&lt;p&gt;What Are the Most Popular Programming Languages in 2021?&lt;br&gt;
While it is impossible to say which programming languages are the most popular in 2021 definitively, we can use certain indicators to give us an idea about which languages are used the most. Taking a look at Google Insights to see trends on keyword search for programming languages is one method. Another is to view the monthly Tiobe Index, which looks at the number of software engineers worldwide, courses offered in different languages, and other metrics to determine language popularity. Other sources, such as viewing GitHub repositories based on the language used and other state-of-the-Developer studies, provide additional insight.&lt;/p&gt;

&lt;p&gt;According to the Tiobe Index, the top ten programming languages of 2021 are:&lt;/p&gt;

&lt;p&gt;C&lt;br&gt;
Python&lt;br&gt;
Java&lt;br&gt;
C++&lt;br&gt;
C#&lt;br&gt;
Visual Basic&lt;br&gt;
JavaScript&lt;br&gt;
PHP&lt;br&gt;
Assembly Language&lt;br&gt;
SQL&lt;br&gt;
If you look at the historical data, you will note that Java has managed to dethrone C several times over the course of the past two decades, as illustrated in the chart below. Again, however, it should be noted that this data is not absolute. There are many other accounts that claim JavaScript and Python, as an example, are the most known languages in the world.&lt;br&gt;
Read More: &lt;a href="https://hitechnoloy.ca/python-vs-java-compare-programming-languages-in-2021/"&gt;https://hitechnoloy.ca/python-vs-java-compare-programming-languages-in-2021/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>java</category>
      <category>devops</category>
    </item>
    <item>
      <title>Showcase - Let's Learn Flutter (LLF) #0</title>
      <author>Keff</author>
      <pubDate>Wed, 25 Aug 2021 11:54:20 +0000</pubDate>
      <link>https://dev.to/nombrekeff/showcase-let-s-learn-flutter-llf-0-20pk</link>
      <guid>https://dev.to/nombrekeff/showcase-let-s-learn-flutter-llf-0-20pk</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hey-there"&gt;
  &lt;/a&gt;
  Hey there 👋
&lt;/h4&gt;

&lt;p&gt;I'm starting a new series. In this initial post I want to showcase what the series is going to be about, what to expect from it, who is it for, and a bit about me (not much, I promise)&lt;/p&gt;

&lt;p&gt;The first thing to know is that this is the first of many posts, focused on learning Flutter step-by-step. I will also show real world scenarios, examples and in the end we will build a complete app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-i-cover"&gt;
  &lt;/a&gt;
  What will I cover?
&lt;/h2&gt;

&lt;p&gt;These are some of the contents I plan to include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dart language basics&lt;/li&gt;
&lt;li&gt;Flutter basics&lt;/li&gt;
&lt;li&gt;Built in widgets &amp;amp; theming&lt;/li&gt;
&lt;li&gt;Custom widgets&lt;/li&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Handling forms &amp;amp; data&lt;/li&gt;
&lt;li&gt;State management options&lt;/li&gt;
&lt;li&gt;Communicating with HTTP APIS&lt;/li&gt;
&lt;li&gt;Build a complete app&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There will be more things not covered in this list, take a look at the &lt;a href=""&gt;Table Of Content&lt;/a&gt; further down, it will be updated as the series progresses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;I'm intending it as a guide on what I know about Flutter, initially aimed at beginners, beginners in Flutter that is.&lt;/p&gt;

&lt;p&gt;If you already have experience with Flutter you might want to skip the first couple posts. Further on I will start touching more interesting topics&lt;/p&gt;

&lt;p&gt;Otherwise everyone is welcome &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;There are not that many requirements (&lt;em&gt;even if you don't know anything about programming, you might learn something too&lt;/em&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic programming knowledge &lt;/li&gt;
&lt;li&gt;And IDE (optional)

&lt;ul&gt;
&lt;li&gt;VSCode (prefered, as the guide will use it)&lt;/li&gt;
&lt;li&gt;If you don't have access to an ide, you can use &lt;a href="http://www.dartpad.dev"&gt;www.dartpad.dev&lt;/a&gt; for testing dart stuff.&lt;/li&gt;
&lt;li&gt;For flutter you can also use flutlab.io, I have not used it&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Motivation to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's it, everything else I will try to cover in this series, hopefully. Please let me know if I miss something, or there is some topic in specific you'd like me to cover!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-am-i-doing-this"&gt;
  &lt;/a&gt;
  Why am I doing this?
&lt;/h3&gt;

&lt;p&gt;It's simple, I like sharing knowledge and Flutter has been my favourite framework for the past 2 years. I've been using it professionally for that amount of time at our company, in a number of projects now. In this time, I've gaining a bit of experience with it, but I'm not an expert by any means. &lt;/p&gt;

&lt;p&gt;Hopefully this guide will also be a way of improving my knowledge and skills with Flutter. And hopefully you teach me something along the way :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-is-manolo-aka-keff"&gt;
  &lt;/a&gt;
  Who is &lt;strong&gt;Manolo&lt;/strong&gt; aka Keff?
&lt;/h3&gt;

&lt;p&gt;I won't take long as I'm not the kind of person that likes talking to much about himself.&lt;/p&gt;

&lt;p&gt;I'm a simple guy, working a simple job full-time for half a decade. Working as a developer, mostly focused on web and last couple years shifted towards mobile.&lt;/p&gt;

&lt;p&gt;But the most important thing you need to know about me is that, &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#im-honest-and-like-to-do-things-well"&gt;
  &lt;/a&gt;
  I'm honest and like to do things well.
&lt;/h4&gt;

&lt;p&gt;So expect that from these posts, I will not sell you bullshit or tell you that "something is done like this" if I'm not sure. I will research, test, and then explain to you, why that solution was chosen instead of the other one. Or if I'm unsure, I will make you know.&lt;/p&gt;

&lt;p&gt;With all that being said, &lt;strong&gt;let's starts shall we?&lt;/strong&gt; And remember to comment if you have any suggestion or something you would like me to cover in these posts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h3&gt;

&lt;p&gt;This table of contents will be updated as the series progresses, listing all the chapters of the series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/nombrekeff/let-s-learn-flutter-0-2kj4"&gt;Welcome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Overview

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/nombrekeff/flutter-what-is-it-learn-flutter-1-2dmj"&gt;Flutter, what is it?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nombrekeff/setup-flutter-let-s-learn-flutter-1-49c8"&gt;Flutter setup?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;... &lt;a href="https://dev.to/nombrekeff/flutter-what-is-it-learn-flutter-1-2dmj"&gt;Next Post &amp;gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>flutter</category>
      <category>dart</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Basic Concepts of Node.js</title>
      <author>Cássio Cappellari</author>
      <pubDate>Wed, 25 Aug 2021 11:50:42 +0000</pubDate>
      <link>https://dev.to/cassiocappellari/basic-concepts-of-node-js-pch</link>
      <guid>https://dev.to/cassiocappellari/basic-concepts-of-node-js-pch</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  🔶 Introduction
&lt;/h2&gt;

&lt;p&gt;Imagine a web application which sends hundreds of requests per second to a server that only processes one request per time before moving to another request. Probably you will have some performance problems and provide a bad experience for your users.&lt;/p&gt;

&lt;p&gt;With this context in mind, Node.js was created in 2009 by Ryan Dahl, a PHP developer, after he faced some difficult issues by developing features with intense input and output flow using synchronous programming and multi-threaded server-side platforms.&lt;/p&gt;

&lt;p&gt;Therefore, &lt;strong&gt;Node.js was a technology built to solve a specific problem: deal with intense asynchronous input and output events&lt;/strong&gt;. And, which programming language has this capacity? The answer was: JavaScript.&lt;/p&gt;

&lt;p&gt;So, in this article, I share my knowledge, experience and studies about this technology, with the goal to provide the basic concepts of Node.js, and help you to understand why it’s such an important player in a modern server-side world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-is-nodejs"&gt;
  &lt;/a&gt;
  🔶 1 What is Node.js?
&lt;/h2&gt;

&lt;p&gt;In simple terms, &lt;strong&gt;Node.js is an open-source JavaScript based platform for server-side programming built on Chrome's V8 JavaScript engine&lt;/strong&gt;, which means that the engine that compiles JavaScript in a web Browser it's the same engine that runs Node.js in it’s core, and this is what makes it so fast, especially for web applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-why-nodejs"&gt;
  &lt;/a&gt;
  🔶 2 Why Node.js?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Node.js is an extremely powerful server-side platform to develop modern, reliable and scalable web applications&lt;/strong&gt;, trusted by global companies such as Netflix, Uber, LinkedIn and PayPal.&lt;/p&gt;

&lt;p&gt;Due to its single thread characteristics combined with a multi thread platform that runs in background, &lt;strong&gt;it’s event driven architecture is perfect for applications with intense I/O (Inputs and Outputs)&lt;/strong&gt;, making it serve more clients with less hardware, which means more performance with less costs.&lt;/p&gt;

&lt;p&gt;Besides that, this platform provides other amazing features for developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0sDn_o2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1km68oj19u8otbknnqk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0sDn_o2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1km68oj19u8otbknnqk.jpg" alt="Node.js Advantages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-nonblocking-io"&gt;
  &lt;/a&gt;
  🔸 2.1 Non-Blocking I/O
&lt;/h3&gt;

&lt;p&gt;Non-blocking method receives an input and returns the output asynchronously. In other words, &lt;strong&gt;it makes it possible for a server to receive many requests without blocking the application while the response is being processed in the background&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-single-thread"&gt;
  &lt;/a&gt;
  🔸 2.2 Single Thread
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Node.js can deal with many events at the same time with its single thread characteristic that delegates the asynchronous operations to a multi thread platform&lt;/strong&gt;, which means that &lt;strong&gt;just one thread is able to handle inputs and outputs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This feature makes it lightweight, scalable and efficient by consuming low memory and infrastructure capacity in order to process a huge number of requests.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#23-event-driven"&gt;
  &lt;/a&gt;
  🔸 2.3 Event Driven
&lt;/h3&gt;

&lt;p&gt;Node.js is an event driven technology, which means that &lt;strong&gt;the control flow of this server side platform is driven by the occurrence of events&lt;/strong&gt;. So, at the moment that a Node application starts, an event listener called Event Loop begins to wait for events and doesn't stop until the application is shutted down.&lt;/p&gt;

&lt;p&gt;In other words, it’s like having a really efficient waiter waiting for orders until the restaurant closes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k77pp5Tr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezpocyug0okbj7dodf50.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k77pp5Tr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezpocyug0okbj7dodf50.jpg" alt="Node.js Event Driven"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#24-node-package-manager"&gt;
  &lt;/a&gt;
  🔸 2.4 Node Package Manager
&lt;/h3&gt;

&lt;p&gt;Node Package Manager it’s &lt;strong&gt;the world's largest free and open source library of functionalities, and can be easily imported and used in any Node application&lt;/strong&gt;. All this means that, regardless of the tools that an application needs, it will be found at Node Package Manager.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#25-no-buffering"&gt;
  &lt;/a&gt;
  🔸 2.5 No Buffering
&lt;/h3&gt;

&lt;p&gt;Node.js applications never buffer data, which dramatically reduces the processing time of uploading files, such as videos or audios. In other words, it &lt;strong&gt;simply outputs data in chunks&lt;/strong&gt;, meaning that, for example, a user can watch videos without any interruption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#26-scalable"&gt;
  &lt;/a&gt;
  🔸 2.6 Scalable
&lt;/h3&gt;

&lt;p&gt;Scalability is a core Node characteristic, due to a &lt;strong&gt;high capacity of handling large amounts of requests asynchronously with low infrastructure&lt;/strong&gt; by it’s architecture that operates on single thread combined with multi thread platform, allowing it receives thousands of simultaneous events.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-nodejs-architecture"&gt;
  &lt;/a&gt;
  🔶 3 Node.js Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Node.js architecture has 3 key elements that work together like an event processing factory&lt;/strong&gt;. So, in order to make it easier to understand how these elements interact with each other, I will give an example of a REST API developed in Node.js.&lt;/p&gt;

&lt;p&gt;Let’s say that a Client sends several requests to this application:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-event-queue"&gt;
  &lt;/a&gt;
  🔸 3.1 Event Queue
&lt;/h3&gt;

&lt;p&gt;1- As soon as these requests reach the application, they go to the Event Queue, which is a &lt;strong&gt;queue where all the events that occur in the application goes first&lt;/strong&gt;, and where they await to be sended to be processed in the main thread called Event Loop.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-event-loop"&gt;
  &lt;/a&gt;
  🔸 3.2 Event Loop
&lt;/h3&gt;

&lt;p&gt;2- When a request (Blocking Operation) enters in the Event Loop, which is a &lt;strong&gt;single thread platform that runs the V8 Engine in its core to compile JavaScript&lt;/strong&gt;, it’s delegated to the Thread Pool platform to be processed in background. So, with this architectural flow, the main thread is available again to handle other events.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#33-thread-pool"&gt;
  &lt;/a&gt;
  🔸 3.3 Thread Pool
&lt;/h3&gt;

&lt;p&gt;3- In the Thread Pool, which is a &lt;strong&gt;multi thread platform that runs a library called libuv and has C++ in its core&lt;/strong&gt;, the request (Blocking Operation) is processed asynchronously in the background until it’s completed and ready to be returned.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O77tpJdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkhqcx31nngbl2kfuj1s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O77tpJdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vkhqcx31nngbl2kfuj1s.jpg" alt="Node.js Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🔶 Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope that this brief article helped you to have a better understanding of not just how Node.js works, but also why it’s a platform that growed quickly and it's used in so many companies and startups nowadays.&lt;/p&gt;

&lt;p&gt;In a modern and ultra-connected world, a technology that is able to scale fast with low infrastructure for sure it’s an important player to pay attention to.&lt;/p&gt;

&lt;p&gt;So, if you arrived here, &lt;strong&gt;I invite you to read my another article about the fundamentals of tools that are also essential in the web world that we live in: API, REST and HTTP Protocol.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/cassiocappellari/fundamentals-of-rest-api-2nag"&gt;Fundamentals of REST API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Written with 💙 by Cássio Cappellari!&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>node</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Choose A Code Editor?</title>
      <author>Otmane Riad</author>
      <pubDate>Wed, 25 Aug 2021 11:49:57 +0000</pubDate>
      <link>https://dev.to/nexteventideas/how-to-choose-a-code-editor-49pd</link>
      <guid>https://dev.to/nexteventideas/how-to-choose-a-code-editor-49pd</guid>
      <description>&lt;p&gt;Using a professional code editor isn’t just for show – it is a necessity given the complexity of software development today. Gone are the days of writing your code in a Notepad file. To code efficiently, every programmer worth their salt needs to employ a set of developer tools to not only write their code in, but to optimize their coding experience and reduce errors as much as possible. One such tool a developer relies on is an integrated developer environment (IDE). Another option is a code editor.&lt;/p&gt;

&lt;p&gt;Code editors allow coders to open multiple coding files and windows in conjunction with a built-in terminal environment. They help programmers shorten development time and code more efficiently, with features like syntax highlighting and code lookup.&lt;/p&gt;

&lt;p&gt;In today’s article, we will discuss what a code editor is, the role it plays in the software development lifecycle (SDL), and how to choose a good code editor, regardless of the language you write your applications in. We will also discuss the difference between a code editor and an IDE.&lt;/p&gt;

&lt;p&gt;What is a Code Editor?&lt;br&gt;
Just as a rich text editor is a custom application for editing articles and books – with many advanced features custom-made for writing and editing, a code editor has many custom features especially designed to meet the needs of a software developer. At the same time, it’s lightweight and more practical than an integrated development environment (IDE), which has its own benefits and drawbacks, depending upon a programmer’s needs.&lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://hitechnoloy.ca/how-to-choose-a-code-editor/"&gt;https://hitechnoloy.ca/how-to-choose-a-code-editor/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>editor</category>
      <category>programming</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How can we make tech recruiting more diverse? </title>
      <author>Josefine Schfr</author>
      <pubDate>Wed, 25 Aug 2021 11:49:20 +0000</pubDate>
      <link>https://dev.to/s2engineers/how-can-we-make-tech-recruiting-more-diverse-1h43</link>
      <guid>https://dev.to/s2engineers/how-can-we-make-tech-recruiting-more-diverse-1h43</guid>
      <description>&lt;p&gt;Recently, I have been thinking quite a lot about how we can make our work, including the &lt;strong&gt;recruiting process more inclusive&lt;/strong&gt;; more welcoming to a beautifully diverse bunch of folks. At our organisation, the deeper you dive into the tech discipline and the higher you go up the ranks, the more male and predominantly white it becomes － and &lt;strong&gt;we need to change that&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Of course, it is crucial to make sure all the brilliant staff that’s already employed are happy with their work environment. Period. That’s a whole different issue that definitely needs to be tackled just as urgently. But as we have to start somewhere, let’s talk about the way we recruit people.&lt;/p&gt;

&lt;p&gt;I’m not a recruiter, I’m just one of these mildly annoying people who compensate insecurities with action － so I interviewed at about 30 places to make sure I got my first job (which of course was absolute overkill). That’s as far as my experience goes. Many of these encounters were friendly, some felt outright odd. In most, I was interviewed by men. All of the conversations left an aftertaste － that &lt;strong&gt;we can do better&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So I am just wondering: &lt;strong&gt;How can we make the interview &amp;amp; recruitment process more diverse and inclusive?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xC4RG92n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nri9hgil8eucdwvp8cki.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xC4RG92n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nri9hgil8eucdwvp8cki.png" alt="Job interview meme, showing the interview process as two dinosaurs fighting versus the actual job as two plushies"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am not a massive fan of &lt;strong&gt;take home challenges&lt;/strong&gt;, for example - in my opinion it’s just not fair game. Not everybody has the privilege to have enough time to complete a take home assignment, especially if it’s unpaid. A &lt;strong&gt;live coding challenge&lt;/strong&gt; can be extremely stressful for introverted folks, regardless of experience. What if the applicant doesn’t have a bunch of &lt;strong&gt;side projects&lt;/strong&gt; their work can be evaluated on? &lt;/p&gt;

&lt;p&gt;Should we let applicants &lt;strong&gt;choose how they would like to be evaluated?&lt;/strong&gt; Do you assess qualifications differently depending on the position to be filled? How do you approach the application process to decrease &lt;strong&gt;unconscious biases?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;These are just some of my thoughts － which of course barely scrape the surface - on what is an &lt;strong&gt;utterly complex topic&lt;/strong&gt;. But we need to start somewhere. And we would love to explore, discuss, and learn how we can do better. &lt;/p&gt;

&lt;p&gt;What are &lt;strong&gt;your experiences when interviewing for technical positions&lt;/strong&gt;? Feel free to share your thoughts below. Let’s approach this together 💪&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>career</category>
      <category>recruiting</category>
    </item>
    <item>
      <title>The Easiest Way To Format Dates In JavaScript</title>
      <author>Dev By RayRay</author>
      <pubDate>Wed, 25 Aug 2021 11:33:45 +0000</pubDate>
      <link>https://dev.to/devbyrayray/the-easiest-way-to-format-dates-in-javascript-517d</link>
      <guid>https://dev.to/devbyrayray/the-easiest-way-to-format-dates-in-javascript-517d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#its-easier-then-you-think"&gt;
  &lt;/a&gt;
  It's Easier Then You Think
&lt;/h2&gt;

&lt;p&gt;For many years developers complain about formatting their dates and times in JavaScript. Doing calculations or proper formatting required libraries like MomentJS.&lt;/p&gt;

&lt;p&gt;But thanks to the ECMAScript Internationalization API, those days are over! Gone are the days we needed to rely on external dependencies to date formatting, date and time calculation, and so on.&lt;/p&gt;

&lt;p&gt;In this post, I want to show you how easy it is to format your dates with the Internationalization JavaScript API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table Of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="#1-javascript-libraries-vs-internationalization-api"&gt;JavaScript Libraries VS Internationalization API&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="#how-to-format-dates-in-javascript"&gt;How To Format Dates in JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="#what-can-intldatetimeformat-do"&gt;Intl.DateTimeFormat&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="#what-can-intlrelativetimeformat-do"&gt;Intl.RelativeTimeFormat&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-javascript-libraries-vs-internationalization-api"&gt;
  &lt;/a&gt;
  1. JavaScript Libraries VS Internationalization API
&lt;/h2&gt;

&lt;p&gt;I don't know about you, but formatting dates, numbers, and currencies have always been JavaScript's most annoying thing. Out of the box, you had to do a lot with Vanilla JavaScript to get it done.&lt;/p&gt;

&lt;p&gt;For dates &lt;a href="https://momentjs.com/"&gt;Moment.js&lt;/a&gt; was a powerful player. They made it easier to format, calculate and do all other things with dates. Formatting dates were only doable by using a JavaScript library. But it was an extensive library.&lt;/p&gt;

&lt;p&gt;But since libraries make things easier, they also add more data to your JavaScript bundle. In most cases, that's not a problem, but if you are focussing on performance, this can be a deal-breaker.&lt;/p&gt;

&lt;p&gt;That's why I'm so happy with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl"&gt;Internationalization API&lt;/a&gt;. They let your format your dates, numbers, times, and currencies. The beauty of this API is that the browser support is almost 100% in all major browsers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q9CxY-H---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886013862/Iw5fST7lf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q9CxY-H---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629886013862/Iw5fST7lf.png" alt="Screenshot_2021-08-13_at_10.03.26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check &lt;a href="https://caniuse.com/internationalization"&gt;CanIUse.com for the browser support data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I suggest we go down the rabbit hole and dive into the world of the Internationalization API. Enjoy the ride! 🎢&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-format-dates-in-javascript"&gt;
  &lt;/a&gt;
  How To Format Dates in JavaScript
&lt;/h3&gt;

&lt;p&gt;Let's start with the biggest impact. Formatting dates was terrible but has become so much easier with the &lt;code&gt;Intl.DateTimeFormat()&lt;/code&gt; and  &lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt;. Because they divided it into two methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-can-intldatetimeformat-do"&gt;
  &lt;/a&gt;
  What Can Intl.DateTimeFormat() Do?
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat"&gt;Intl.DateTimeFormat()&lt;/a&gt; helps to format dates and times. It keeps location and languages into account by performing those formats.&lt;/p&gt;

&lt;p&gt;Format examples like below will be so easy to perform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;12/01/2021&lt;/li&gt;
&lt;li&gt;2021/12/09&lt;/li&gt;
&lt;li&gt;Aug 5th, 2021&lt;/li&gt;
&lt;li&gt;Sunday, Dec 20th, 2020 at 04:23 CET&lt;/li&gt;
&lt;li&gt;Even in Dutch: "Zondag, 20 December 2020 om 16:23"&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-intldatetimeformat"&gt;
  &lt;/a&gt;
  How To Use Intl.DateTimeFormat()?
&lt;/h3&gt;

&lt;p&gt;The DateTimeFormat is super easy to use. First, we have to configure the &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; constructor. There are a few possibilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the constructor as easily as in the example above. If you want to use the browser's locale, you must pass an empty &lt;code&gt;Array&lt;/code&gt; in the constructor. If you're going to set the locale yourself, you have to pass it as a string &lt;code&gt;en-US&lt;/code&gt; or &lt;code&gt;nl-NL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The second parameter offers a few other options which give more control over the formatting. The options are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;dateStyle&lt;/code&gt;: "full", "long", "medium" and "short"&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;timeStyle&lt;/code&gt;: "full", "long", "medium" and "short"&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dayPeriod&lt;/code&gt;: "narrow", "short" and "long"&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#parameters"&gt;Check the other options as well&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, you have many options to control the formatting of a date and time.&lt;/p&gt;

&lt;p&gt;In the example below, you can see that we need the &lt;code&gt;format&lt;/code&gt; method after the constructor in which we pass our &lt;code&gt;Date&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;showDateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;today&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formattedDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en-US&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formattedDateNL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nl-NL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
    Unformatted date:, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
    Formatted date: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;formattedDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
    Formatted date NL: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;formattedDateNL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
  `&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;showDateTimeFormat&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result of this code will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Unformatted date:, Fri Aug 13 2021 11:09:09 GMT+0200 (Central European Summer Time)
Formatted date: 8/13/2021
Formatted date NL: 13-8-2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This makes formatting your date in every language with every calendar type a breeze. I highly recommend checking the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat"&gt;MDN Web Docs for a lot more details&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-intlrelativetimeformat-do"&gt;
  &lt;/a&gt;
  What Can Intl.RelativeTimeFormat() Do?
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat"&gt;Intl.RelativeTimeFormat()&lt;/a&gt; helps to format dates and times in a human-readable way. &lt;/p&gt;

&lt;p&gt;Formatting examples like below will be so easy to create! Even better, it formats them based on location and language.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 year ago&lt;/li&gt;
&lt;li&gt;in 3 minutes&lt;/li&gt;
&lt;li&gt;10 seconds ago&lt;/li&gt;
&lt;li&gt;tomorrow&lt;/li&gt;
&lt;li&gt;yesterday&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-intlrelativetimeformat"&gt;
  &lt;/a&gt;
  How To Use Intl.RelativeTimeFormat()?
&lt;/h3&gt;

&lt;p&gt;The RelativeTimeFormat is similar to the &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;. First, we have to configure the &lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt; constructor. There are a few possibilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RelativeTimeFormat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RelativeTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RelativeTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;locales&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like the DateTimeFormat, the RelativeTimeFormat is using the locales the same way. Pass an empty &lt;code&gt;Array&lt;/code&gt;, and it will pick the browser default locale. But if you add &lt;code&gt;en&lt;/code&gt; or &lt;code&gt;nl&lt;/code&gt; it will use that language for formatting.&lt;/p&gt;

&lt;p&gt;In the second parameter of the constructor, you can add a few options. (For more details, check &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#parameters"&gt;MDN Web Docs&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;localMatcher&lt;/code&gt;:  "lookup" or "best fit" (the last is the default)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;numeric&lt;/code&gt;: "always" or "auto" (with auto you can expect values like "yesterday" instead of "1 day ago"&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;style&lt;/code&gt;: "long", "short" or "narrow"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes formatting your relative time in every language with every calendar type a breeze. I highly recommend checking the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat"&gt;MDN Web Docs for a lot more details&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To use the &lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt;, you need to calculate with dates. You can do it yourself, but I find &lt;a href="https://date-fns.org/"&gt;date-fns&lt;/a&gt; one of the best modular JavaScript libraries to handle dates. So in this example, I will use that library.&lt;/p&gt;

&lt;p&gt;Install date-fns by running &lt;code&gt;npm install date-fns&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;differenceInHours&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;date-fns&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;differenceInHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rtf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RelativeTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rtf2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Intl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RelativeTimeFormat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rtf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hour&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// Result: "1,300 hours ago"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rtf2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hour&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// Result: "1.300 uur geleden"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the result is pretty handy. You don't have to translate the output manually. But you can easily change the language, and the user gets a readable string.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check the &lt;a href="https://runkit.com/devbyrayray/format-dates-with-internationalization-api-relativetimeformat"&gt;RunKit example&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With this constructor, you previously needed libraries to do this. Yes, with date-fns, you can do this too. But if the browser can do it effortlessly, why use a library for that.&lt;/p&gt;

&lt;p&gt;The great thing about date-fns is that it is modular. What you don't use won't be included in your code. Handy for keeping your codebase small.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5DfBJtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629890886208/NhHYvPmBA.png" alt="divider-byrayray.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I'm very thankful for all those intelligent people who are spending their time developing these developer-friendly browser APIs. So let's use them and keep our codebase as small as possible.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DymzaNFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629789655319/nBF6anHH4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DymzaNFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629789655319/nBF6anHH4w.png" alt="hashnode-footer.png"&gt;&lt;/a&gt;&lt;br&gt;
*I hope you learned something new or are inspired to create something new after reading this story! 🤗 If so, consider subscribing via email (scroll to the top of this page) or follow me here on Hashnode.&lt;br&gt;
*&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Did you know that you can create a &lt;a href="https://hashnode.com/@devbyrayray/joinme"&gt;Developer blog like this one, yourself&lt;/a&gt;? It's entirely for free. 👍💰🎉🥳🔥&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;If I left you with questions or something to say as a response, scroll down and type me a message. Please send me a &lt;a href="https://twitter.com/@devbyrayray"&gt;DM on Twitter @DevByRayRay&lt;/a&gt; when you want to keep it private. My DM's are always open 😁&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>React Hooks calling child component method from parent</title>
      <author>Asif Vora</author>
      <pubDate>Wed, 25 Aug 2021 11:13:49 +0000</pubDate>
      <link>https://dev.to/007_dark_shadow/react-hooks-calling-child-component-method-from-parent-144p</link>
      <guid>https://dev.to/007_dark_shadow/react-hooks-calling-child-component-method-from-parent-144p</guid>
      <description>&lt;p&gt;For calling Child Component method from parent component in hooks we are using &lt;a href="https://reactjs.org/docs/react-api.html#reactforwardref"&gt;React.forwardRef&lt;/a&gt; and  &lt;a href="https://reactjs.org/docs/hooks-reference.html#useimperativehandle"&gt;React.useImperativeHandle&lt;/a&gt; hooks from React.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reactforwardref"&gt;
  &lt;/a&gt;
  React.forwardRef
&lt;/h1&gt;

&lt;p&gt;React.forwardRef creates a React component that forwards the ref attribute it receives to another component below in the tree. This technique is not very common but is particularly useful in two scenarios:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components"&gt;Forwarding refs to DOM components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-in-higher-order-components"&gt;Forwarding refs in higher-order-components&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;React.forwardRef accepts a rendering function as an argument. React will call this function with props and ref as two arguments. This function should return a React node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hp6ZlWpI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxmcadgo0wpdk28z25h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hp6ZlWpI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxmcadgo0wpdk28z25h.png" alt="Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, see &lt;a href="https://reactjs.org/docs/forwarding-refs.html"&gt;forwarding refs&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reactuseimperativehandle"&gt;
  &lt;/a&gt;
  React.useImperativeHandle
&lt;/h1&gt;

&lt;p&gt;useImperativeHandle customizes the instance value that is exposed to parent components when using ref. As always, imperative code using refs should be avoided in most cases. useImperativeHandle should be used with &lt;a href="https://reactjs.org/docs/react-api.html#reactforwardref"&gt;forwardRef&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBiFr_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6bgjjb1e6dymi7rvpp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBiFr_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6bgjjb1e6dymi7rvpp4.png" alt="Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#here-comes-the-important-part-to-call-the-child-method"&gt;
  &lt;/a&gt;
  Here comes the important part to call the child method.
&lt;/h1&gt;

&lt;p&gt;Now we will just render the child component in the parent and create a ref using &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React.useRef&lt;/a&gt; with that the getAlert() function will be called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useImperativeHandle&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// We need to wrap component in `forwardRef` in order to gain&lt;/span&gt;
&lt;span class="c1"&gt;// access to the ref object that is assigned using the `ref` prop.&lt;/span&gt;
&lt;span class="c1"&gt;// This ref is passed as the second parameter to the function component.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getAlert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;getAlert from Child&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// The component instance will be extended&lt;/span&gt;
  &lt;span class="c1"&gt;// with whatever you return from the callback passed&lt;/span&gt;
  &lt;span class="c1"&gt;// as the second argument&lt;/span&gt;
  &lt;span class="nx"&gt;useImperativeHandle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// In order to gain access to the child component instance,&lt;/span&gt;
  &lt;span class="c1"&gt;// you need to assign it to a `ref`, so we call `useRef()` to get one&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;childRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Child&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;childRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;childRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Child component is rendered and a ref is created using &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React.useRef&lt;/a&gt; named childRef. The button we created in parent component is now used to call the child component function childRef.current.getAlert();&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvJolyi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqj4fhltc07zz7aylye6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvJolyi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqj4fhltc07zz7aylye6.png" alt="Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;https://reactjs.org/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stackoverflow.com/"&gt;https://stackoverflow.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>functional</category>
    </item>
  </channel>
</rss>
