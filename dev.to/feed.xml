<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Monitor your Golang application with OpenTelemetry and SigNoz</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 06 Sep 2021 13:09:14 +0000</pubDate>
      <link>https://dev.to/signoz/monitor-your-golang-application-with-opentelemetry-and-signoz-3fli</link>
      <guid>https://dev.to/signoz/monitor-your-golang-application-with-opentelemetry-and-signoz-3fli</guid>
      <description>&lt;p&gt;OpenTelemetry provides a set of APIs to directly measure the performance and behavior of your software and send this data to observability platforms. Let's learn how to get started with OpenTelemetry for Go applications and visualize that data with SigNoz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library. In this article, let's explore how you can instrument your Go application with OpenTelemetry and get the data reported through SigNoz - an open-source APM and observability tool.&lt;/p&gt;

&lt;p&gt;Steps to get started with OpenTelemetry for Go application&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing sample Go application&lt;/li&gt;
&lt;li&gt;Instrumentation with OpenTelemetry and sending data to SigNoz&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installing-signoz"&gt;
  &lt;/a&gt;
  Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can read about other deployment options from &lt;a href="https://signoz.io/docs/deployment/docker/"&gt;SigNoz documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;When you are done installing SigNoz, you can access the UI at: &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7xY4Ub6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my8jrh3z0vkc9c5yi2mb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7xY4Ub6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/my8jrh3z0vkc9c5yi2mb.png" alt="SigNoz dashboard"&gt;&lt;/a&gt;SigNoz dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-sample-go-application"&gt;
  &lt;/a&gt;
  Installing sample Go application
&lt;/h2&gt;

&lt;p&gt;To see how OpenTelemetry can be used to instrument a Go application, let's see how it works with a sample bookstore app (&lt;a href="https://github.com/SigNoz/sample-golang-app"&gt;GitHub repo&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It is a simple bookstore app with a REST API that provides book data and performs CRUD operations. The app uses Gin framework to build a RESTful API. Gin is a high-performance HTTP web framework written in Golang containing a set of commonly used functionalities like routing, middleware support and rendering.&lt;/p&gt;

&lt;p&gt;OpenTelemetry has specific instrumentation packages to support popular Go packages and use cases.  For example, this app uses the Gin framework for request routing. OpenTelemetry provides instrumentation package named &lt;strong&gt;otelgin&lt;/strong&gt; to instrument the Gin framework which you need to import in your app. You can find the complete list of supported Golang packages &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;br&gt;
Verify if you have Golang installed on your machine by running &lt;code&gt;$ go version&lt;/code&gt; on your terminal. If you don't have Golang installed, you can download it &lt;a href="https://golang.org/doc/install"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to install sample Go application:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone sample Go application repository
From your terminal use the following command to clone sample Go application GitHub repository.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   git clone https://github.com/SigNoz/sample-golang-app.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Update path to sample-golang-app &amp;amp; check if the app is working
Update your terminal path to the sample app directory and check if the app is working or not using the following command:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   cd sample-golang-app
   go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Make sure you have an available port for running your app. If, by default, the go app tries to run on port 8080, you might get an error as SigNoz uses port 8080 for its query service. On your mac terminal, you can set the listening port of your app by using the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   export PORT = 8081
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5bv4aTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz2jfq4l2kz51z4wcmez.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5bv4aTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz2jfq4l2kz51z4wcmez.png" alt="Sample Go app"&gt;&lt;/a&gt;/books endpoint of our bookstore app&lt;/p&gt;

&lt;p&gt;Once you ensure that your application is working, exit the server by pressing 'Ctrl + C' on your mac terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#instrumentation-with-opentelemetry-and-sending-data-to-signoz"&gt;
  &lt;/a&gt;
  Instrumentation with OpenTelemetry and sending data to SigNoz
&lt;/h2&gt;

&lt;p&gt;The file &lt;code&gt;main.go&lt;/code&gt; has instructions to import all the necessary OpenTelemetry packages in order to instrument the sample app. For this app, we import the following OpenTelemetry packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import (
    "go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin"
    "go.opentelemetry.io/otel"
    "go.opentelemetry.io/otel/exporters/otlp"
    "go.opentelemetry.io/otel/exporters/otlp/otlpgrpc"
    "go.opentelemetry.io/otel/label"

    "go.opentelemetry.io/otel/sdk/resource"
    sdktrace "go.opentelemetry.io/otel/sdk/trace"
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;You need to run the Go app with the necessary environment variables in order to start sending data to SigNoz. Use the following command to run and configure the app to send data to SigNoz:&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SERVICE_NAME=goApp INSECURE_MODE=true OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT=&amp;lt;IP of SigNoz backend&amp;gt;:4317 go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Ip of SigNoz&lt;/code&gt; can be replaced with localhost in this case. Hence, the final command becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SERVICE_NAME=goApp INSECURE_MODE=true OTEL_METRICS_EXPORTER=none OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317 go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;And, congratulations! You have instrumented your sample Golang app. Hit the &lt;code&gt;/books&lt;/code&gt; endpoint of the bookstore app at &lt;a href="http://localhost:8081/books"&gt;http://localhost:8081/books&lt;/a&gt;. Refresh it a bunch of times in order to generate load, and wait for 1-2 mins for data to appear on SigNoz dashboard.&lt;/p&gt;

&lt;p&gt;You can now access the SigNoz dashboard at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to monitor your app for performance metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ogpWkixR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw8wdk1jjstpn511yey8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ogpWkixR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zw8wdk1jjstpn511yey8.png" alt="Sample Go app in the list of applications monitored by SigNoz"&gt;&lt;/a&gt;Sample Golang app appears in the list of application&lt;/p&gt;

&lt;p&gt;If you want to instrument your own Golang application, you can read about it in our &lt;a href="https://signoz.io/docs/instrumentation/golang/#instrumentation-of-a-sample-golang-application"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metrics-and-traces-of-the-go-application"&gt;
  &lt;/a&gt;
  Metrics and Traces of the Go application
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Krt7sg1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/458uyqzezqn35e0ket9q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Krt7sg1Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/458uyqzezqn35e0ket9q.png" alt="Sample nodejs app in the applications monitored"&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNg3XxmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx1o1wnci108ftkxy4al.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNg3XxmX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx1o1wnci108ftkxy4al.png" alt="See traces, and apply powerful filters on trace data"&gt;&lt;/a&gt;View of traces at a particular timestamp&amp;lt;/figcaption&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to exactly identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ymHYIBju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qg7wtak5ca4x0pr90wj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ymHYIBju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qg7wtak5ca4x0pr90wj.png" alt="Flamegraphs for distributed tracing"&gt;&lt;/a&gt;Flamegraphs showing exact duration taken by each spans - a concept of distributed tracing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Go applications and generate telemetry data. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to read more about SigNoz 👇&lt;br&gt;&lt;br&gt;
&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor your Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>monitoring</category>
      <category>devops</category>
      <category>opentelemetry</category>
    </item>
    <item>
      <title>How to See Which Branch Your Teammate is on in PhpStorm</title>
      <author>Andrew</author>
      <pubDate>Mon, 06 Sep 2021 13:01:40 +0000</pubDate>
      <link>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-phpstorm-1f3k</link>
      <guid>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-phpstorm-1f3k</guid>
      <description>&lt;p&gt;&lt;em&gt;“What branch are you on?”&lt;/em&gt; is often the first question you ask when a teammate says &lt;em&gt;“The tests aren't passing”&lt;/em&gt; or &lt;em&gt;“The build failed”&lt;/em&gt;. Here’s how you can get an answer to that question without even needing to ask.&lt;/p&gt;

&lt;p&gt;In PhpStorm, open up the Team Window by clicking GitLive on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOs_Zlzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630926853406/aEZhmCiDS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOs_Zlzu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630926853406/aEZhmCiDS.png" alt="PhpStorm-IDE.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Locate the teammate you are interested in and click the arrow on the left-hand side of their avatar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVn3kdJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629731240886/JbaOB-CYS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVn3kdJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629731240886/JbaOB-CYS.png" alt="ide window scaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will see all the repositories they have cloned including the name of their current branch! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdtbo19P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506270361/bHUNayHHj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdtbo19P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506270361/bHUNayHHj.png" alt="screenshot 3 scaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If an issue has been connected to the branch you’ll see the issue name instead, if that's the case just hover your cursor over the issue name and a tooltip will appear showing you the branch name (and even the commit hash)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7t5LnoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506279553/DVzcaTM-n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7t5LnoA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630506279553/DVzcaTM-n.png" alt="screenshot 4 scaaled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;find GitLive here&lt;/a&gt; and, if you need help setting it up, follow the instructions in &lt;a href="https://docs.git.live/docs/installation/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
    </item>
    <item>
      <title>The 10 REST Commandments</title>
      <author>Vedran Cindrić</author>
      <pubDate>Mon, 06 Sep 2021 12:58:05 +0000</pubDate>
      <link>https://dev.to/cindreta/the-10-rest-commandments-13jk</link>
      <guid>https://dev.to/cindreta/the-10-rest-commandments-13jk</guid>
      <description>&lt;p&gt;One of the core things I've been working on for the past 10 years are APIs. Everything from simple APIs that are used by one client to multi device and multi purpose APIs. During those years I've also had the opportunity to work with many third party APIs like Stripe, Twilio and others who are less popular and glamorous 😂. &lt;strong&gt;Almost all of those APIs were REST based and unique in some way.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are many reasons why REST is so popular. It's simple to understand, it's flexible, it works on any scale, it has a great community and tools built around it. But besides those I'd also say that a lot of popularity came from the fact that's it's oldest rival, SOAP, is just horrible. If you've ever used or worked with SOAP - you know! The clients were terrible, people did what they wanted with XML, it's bulky, the auth situation was sometimes wacky...Thankfully JSON and REST based APIs won that battle.&lt;/p&gt;

&lt;p&gt;On the other hand there are also newer, more modern players that are trying to take some of that spotlight from REST based APIs. I'm of course talking about GraphQL. GraphQL is also JSON based and shares some of the good traits that REST has like flexibility, performance, scalability...For me personally the &lt;strong&gt;two key downsides of GraphQL&lt;/strong&gt; are that it's built by Facebook and that it shifts the API design process to the client. What I mean by that is that it leaves mobile devs and front end devs in charge of building their own ad hoc APIs and making queries on the database. Don't know about you but I don't think that's the best idea. Don't get me wrong, I love mobile and front end devs, but they might not have a lot of experience with database design, writing queries and building APIs. You probably wouldn't give your back-end dev to design an app, a car mechanic to fix an airplane or a veterinarian to operate on a human person. Could they do it - maybe, possibly. Should they - I don't think so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In my opinion REST is still king of the jungle and it's not going to be dethroned any time soon.&lt;/strong&gt; The only problem with REST is that at the end of the day it's not a standard nor a protocol. Rather, it's a set of "architectural constraints". What a fancy way of not calling something a standard 🤣 But that right there tickles the imagination of many. They tend to do their own thing or implement those constraints based on their own (miss)understanding. To avoid such misunderstandings I've decided to write down what I think are the Ten REST API Commandments. Follow these and you'll enjoy love from your mobile devs, admiration from other fellow back-end devs and a rockstar status on Twitter 😎.&lt;/p&gt;

&lt;p&gt;So like the song says: Won't you follow me into the jungle?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-be-practical"&gt;
  &lt;/a&gt;
  1. Be Practical
&lt;/h3&gt;

&lt;p&gt;It's really simple. &lt;strong&gt;If you're building a REST API you should accept and respond with JSON.&lt;/strong&gt; Not XML. Not something else. JSON.&lt;/p&gt;

&lt;p&gt;Yes, JSON is not "required" because REST isn't a standard but it's one of those things you just do. Just like you put on clothes everyday, go to sleep each night or drink a shot of rakija everyday. Well maybe not the last part but you get the point 😆 The sooner we get everybody off of XML and on to JSON the better it will be for everyone. In case you're not sure why JSON is better, let me just casually name a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  it's easier to use, write and read - literary anyone and you grandma can read it&lt;/li&gt;
&lt;li&gt;  it's faster and consumes less memory space&lt;/li&gt;
&lt;li&gt;  it doesn't need special dependencies or packages to parse it&lt;/li&gt;
&lt;li&gt;  every single meaningful programming language has great support for it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If this still seems abstract I invite you to download a random XML file from the internet and try to parse it. As someone who had to do it way too many times in the 2000s, I can assure you, you will come back crying to JSON. There simply is no reason why you'd use XML instead of JSON in 2021...Yes, if you have a legacy enterprise system then I feel your pain, but even that is changing. More and more of these big and outdated enterprises are updating their internal and external APIs from XML and SOAP to JSON and REST.&lt;/p&gt;

&lt;p&gt;JSON shouldn't just be used on the response side of things but also on the request side. So instead of sending the data using form-data or x-www-form-urlencoded send it as JSON. It's just simpler to read, write, test and manage for everybody.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remember - when in doubt - use JSON&lt;/strong&gt;. Thank you from all us developers in advance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-be-methodical"&gt;
  &lt;/a&gt;
  2. Be Methodical
&lt;/h3&gt;

&lt;p&gt;You wouldn't believe how many times I saw APIs that used only GET methods for everything from storing data to filtering 🤪 As a developer you should always strive to understand the tools you are using so it's important to know how exactly HTTP works if you are developing APIs. Each HTTP method has been designed to be used in certain situations. Let's go through each of them and see when you should use each of them.&lt;/p&gt;

&lt;p&gt;Before we start just a small but fun clarification. When describing HTTP methods people often use words like "safe" and "idempotent". These sound really nice and mystical but it's not that complicated. In plain English, safe means ready only. You can make requests to that endpoint without having to worry about updating, destroying or changing values. Idempotent on the other hand, means that you can make multiple requests to the same endpoint without changing something or getting different results. Generally speaking all safe methods are also idempotent at the same time but not all idempotent methods are safe 🙃. I know it's confusing at first but we'll explain below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
You should use the GET method when you wish to read data. Not store, not update, not change data. Only read the data. The concept is super simple and shouldn't confuse anyone. Now that we know that GET methods should be used ONLY for reading data and that they always return the same data we can say that GET requests are safe and idempotent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
When you make a POST request everyone in the world expects you to usually STORE something. This means you will create a new row in the database, write something somewhere or create something from nothing if you will. You can send data to a POST method using multiple content types: multipart/form-data or x-www-form-urlencoded or raw (application/json, text/plain...etc). When building REST APIs I'd suggest the clients send data as application/json. This way we are keeping it consistent and in the JSON spirit but also sending JSON data allows you to make really complicated requests with ease. Finally POST operations are not safe because they do change things on the server side and they are certainly not idempotent because making two requests to the same endpoint will result in different resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PUT&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
PUT requests are most often used in the context of updating things. It could also be used to create new records but then the idea would be that the client should be the one defining the ID of the new resource. So to make your life easier simply use PUT when you wish to update a resource. PUT is of course not a safe operation because it makes changes on the server side but, and you'll love this, it's an idempotent operation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
This one is self explanatory I'd say. When you wish to delete resources simply use the DELETE method. It's of course not a safe operation but some say it's idempotent and some say it's not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PATCH&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
A patch request is meant to be used to update resources again but unlike PUT it should update only the changed data whereas PUT can and should update the entire resource. It's not safe nor is it idempotent.&lt;/p&gt;

&lt;p&gt;Now that we know the basics, here is what happens in the real world. Most people use GET, POST and some use PUT and DELETE. Rarely do I see PATCH being used. I'd advise you to use all of the HTTP methods available to you because that is why they were designed for. You can literally map any CRUD operation to POST, GET, UPDATE and DELETE. I simply beg of you don't ever use GET to create or update data. Don't.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-be-semantical"&gt;
  &lt;/a&gt;
  3. Be Semantical
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OFFALYas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/semantical-api.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OFFALYas--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/semantical-api.jpg" alt="Be Semantical"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is probably the only time you'll hear me recommending someone to be semantical. But in this case it's important and it's all about naming things correctly. Oftentimes I've seen API documentation with horrible naming conventions for everything. In my opinion every great REST APi should be easily understandable by your average Joe. Starting from endpoint names to input parameters all the way to the JSON keys.&lt;/p&gt;

&lt;p&gt;So let's start with API endpoints. &lt;strong&gt;The rules here are also quite simple&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  use nouns instead of verbs&lt;/li&gt;
&lt;li&gt;  use plural instead of singular&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason why you should use nouns is because when you are making an HTTP request, as we saw above, you are already using verbs. Each HTTP method (GET, POST, PUT, PATCH) is a verb in the English language. Hence it makes no sense to have double verbs - doesn't it!? If you named an API endpoint as &lt;code&gt;/getUsers&lt;/code&gt; and you were making a GET request to view all the users when you read that, out loud, it sounds funny. &lt;code&gt;GET /getUsers&lt;/code&gt;. Makes no sense.&lt;/p&gt;

&lt;p&gt;Another common theme I kept seeing is the use of singular instead of plural for the endpoint names. That of course couldn't be more wrong. You want your API endpoints to be consistent, simple and logical. If you use plural then for every HTTP method you can use the same URI. If you do &lt;code&gt;GET /users&lt;/code&gt; you are listing all the users and if you do &lt;code&gt;POST /users&lt;/code&gt; you are creating a user. So again, same URI, different HTTP methods (verbs). It gets even cooler if you wish to view the details of a single user - you request &lt;code&gt;GET /users/:id&lt;/code&gt; to fetch the information. So as you can see - it's still the same starting resource name, it just has more depth. If you used singular then &lt;code&gt;GET /user&lt;/code&gt; would mean that you wish to get a single user and you would need more different URIs for other cases. Plural just makes way more sense.&lt;/p&gt;

&lt;p&gt;To recap, let's take a look at a couple of good and bad examples just so we are 100% clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good&lt;/strong&gt; 👍🏻&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;GET /users&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;POST /users&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;GET /users/23&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;PUT /users/23&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;DELETE /users/23&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;GET /users/23/comments&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bad&lt;/strong&gt; 👎🏻&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;GET /user/23&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;GET /listAllUsers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;POST /user/create&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;PUT /updateUser/23&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;GET /userComments/23&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think you GET the idea 😀. It's really simple and just by looking and reading the examples above you know which ones sound good and make more sense.&lt;/p&gt;

&lt;p&gt;A few bonus notes regarding endpoint naming: &lt;strong&gt;try to use single words instead of multi words&lt;/strong&gt;. If you really have to use multi words then use hyphens between them. And for the love of the god use all lowercase letters in URIs.&lt;/p&gt;

&lt;p&gt;To wrap up this section, I'd like to quickly go over the naming conventions for JSON keys in the request and response data. There is much debate around this, especially given that there are 3 possible scenarios: camelCase, snake_case and spinal-case. Again nobody can stop you from using any of these, theoretically you wouldn't be wrong. But, &lt;strong&gt;I would recommend using snake_case&lt;/strong&gt;. Why? Stripe uses it. PayPal uses it. Facebook uses it...You get the point. Personally, I find snake_case much easier to read and that is why all of our APIs use snake_case. There have also been studies like this &lt;a href="https://ieeexplore.ieee.org/document/5521745?reload=true&amp;amp;tp=&amp;amp;arnumber=5521745"&gt;one&lt;/a&gt; which gave an advantage to snake_case over camelCase in terms of readability.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-be-secure"&gt;
  &lt;/a&gt;
  4. Be Secure
&lt;/h3&gt;

&lt;p&gt;I will just come out and say it: &lt;strong&gt;if you are not using HTTPs in 2021. then shame on you&lt;/strong&gt;. Your REST API should be running on HTTPs without any questions. Using HTTPs simply provides an element of security that you don't get with HTTP. It saves your users from man-in-the-middle-attacks and encrypts communication between the client and the API. Many other big players like Apple and Google will soon force you to have HTTPs enabled. The best part of it is that nowadays you can get an SSL certificate for free. Using services like AWS and Route 53, the Azure equivalent or a service called Let's encrypt. They all work great, I can personally attest to that. You can always also buy a premium SSL certificate. Whatever you do, just use HTTPs on your next API. You'll thank me later.&lt;/p&gt;

&lt;p&gt;Another thing that saddens me the most is when I see an API isn't using any form of authorization. If you are building an API you simply need to be able to control who has access to it. It's so simple but many people don't do it because they feel like it's too complicated to implement, use and maintain. It really doesn't have to be. You can start out using bearer tokens which can be setup in 2 minutes. They don't even have to be connected to a database if you don't want to. When you're ready you can switch to more complex solutions like JWT or oAuth. There are many reasons why you should have some sort of an auth solution. Starting from the fact that you can control access to the API and how much someone can access. If something goes wrong, like your API gets spammed, hacked or whatnot you can simply shut down the key that was exposed. You can also use the API key to track how the API was integrated, is someone making too many API calls, is the client behaving erratically. Finally you can even use API calls to gather statistical data about your clients, users and API in general.&lt;/p&gt;

&lt;p&gt;My point is - &lt;strong&gt;treat your API the same way you would your house&lt;/strong&gt;. I'm sure you have doors which have keys and you only give those keys to important people. Same should be with your API.&lt;/p&gt;

&lt;p&gt;Another thing you should be wary of is sending super sensitive data over the network. We talked about this and the importance of using SSL so that the communication is encrypted. That would be step number one. Step number two is don't return data that might be sensitive and doesn't get used in the apps or the website. I'm talking about user addresses, phone numbers, SSN or any other form of identification. If you don't use it then don't send it. If you are using this please consider making sure that the person who is accessing that API and getting those responses is the actual person whose data you are returning. It sounds simple, I know, but in reality people do all sorts of crazy things. Mostly because they think "oh nothing will happen, it's a small API, nobody knows about it"...Trust me on this one. People will find out and they will take advantage if you let them. So don't.&lt;/p&gt;

&lt;p&gt;Before we wrap up I'd like to touch on the UUIDs over IDs debate. I was a long time fan of IDs because they are much shorter and faster but the added security and privacy benefit of UUID is more important in my opinion. &lt;strong&gt;UUIDs are much safer&lt;/strong&gt;. You can still have an ID column in your database that is auto incremented and all but when you are exposing models to the APIs try using UUIDs. Short recommendation but could save you a lot of headache.&lt;/p&gt;

&lt;p&gt;Last thing I want to touch upon is general infrastructure security. If you are using AWS or Azure you have an advantage. API gateways give you additional security in terms of firewalls and detection of DDoS attacks. Use them if you can. Anything that will allow you to be able to block a given IP or user is something you should always look for. If you are running on traditional servers with Apache on there here are just two super quick tips on how to save yourselves a few headaches down the line.&lt;/p&gt;

&lt;p&gt;First one is simple: keep your software updated. Apache, PHP, Composer packages, NPM packages...everything. Make sure you are always running on the latest and greatest software.&lt;/p&gt;

&lt;p&gt;Second, &lt;strong&gt;by default Apache sends a response header with every request that literally tells your potential attacker which version of Apache you are running on.&lt;/strong&gt; The header key is called &lt;code&gt;Server&lt;/code&gt; and the default value could be something like: &lt;code&gt;Apache/2.4.1 (Unix)&lt;/code&gt;. What you wanna do here is quickly hide your Apache version.&lt;br&gt;&lt;br&gt;
Simply open: &lt;code&gt;/etc/apache2/conf-enabled/security.conf&lt;/code&gt; and set the &lt;code&gt;ServerTokens&lt;/code&gt; value to &lt;code&gt;Prod&lt;/code&gt;. After that run sudo systemctl restart apache2 and you've just made your server more secure than it was yesterday. Congrats.&lt;/p&gt;

&lt;p&gt;Another quick thing you can do while you have the &lt;code&gt;/etc/apache2/conf-enabled/security.conf&lt;/code&gt; open is turn off &lt;code&gt;ServerSignature&lt;/code&gt;. Just set that to &lt;code&gt;Off&lt;/code&gt; and again you are more secure.&lt;/p&gt;

&lt;p&gt;As a general rule you should have quarterly security meetings where you talk about things like how to improve security, how to be better, how to stay safe. You don't wanna be hacked, DDoSed or something similar. Trust me.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-be-organized"&gt;
  &lt;/a&gt;
  5. Be Organized
&lt;/h3&gt;

&lt;p&gt;What better way to stay organized than to version your API 😀 Now I know you've read about this one many times and thought something along the lines of "Oh my API is too small and it's used by one client so I won't use versioning". I've been one of you. I've done that. I've said that. &lt;strong&gt;Be smarter and use versions on your API. It's the best decision you can make early on.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5t1xRMHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/organized-api.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5t1xRMHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/organized-api.jpg" alt="Be Semantical"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason why I was always hesitant towards versioning is because in my mind a jump from v1 to v2 on an API level rarely happens. When I say rarely I mean that in the tech universe - so once a year 😁 Knowing that versioning didn't make sense to me. But boy was I wrong. Yes the big jumps don't happen often but if you have a platform or an app that is being used or developed you'll make smaller updates but more often. I'm talking about weekly or monthly updates to models, data types, structures or processes that are risky to someone who doesn't update the app or something else. To do those, if you don't have versioning enabled, you'll be sweating bullets every time you do a GIT commit. Not only do you have to be sure your code won't break anything or anyone but you need to know how a certain app version will behave. Not fun at all trust me.&lt;/p&gt;

&lt;p&gt;Simply choose a versioning scheme that makes the most sense for you and your team. The most common versioning scheme in the software world would be: &lt;em&gt;MAJOR.MINOR.PATCH&lt;/em&gt;. In my opinion the PATCH part is a bit too much but you can use that schema if you want. I typically do &lt;em&gt;v1.1&lt;/em&gt; and then all the way up to &lt;em&gt;v1.9&lt;/em&gt;. So with a major version you are changing the core parts of the API like authentication, core models, processes etc. With minor and patch versions you're generally adding or removing smaller features, messing with the data structure in some way or something similar.&lt;/p&gt;

&lt;p&gt;Another thing that might confuse you is how to actually implement versioning because there are many paths you can take. You could use versioning via: URI paths, request headers, query params or content negotiation. Now each of these has it's pros and cons but I would suggest using URL based versioning. It just makes the most sense and is the most straightforward to understand on so many levels. Everything from making updates, understanding which version is used just from the URL to pointing to the right documentation version. REST APIs are predominantly URI based and I think we should keep up with that tradition and use URI based versioning. Some examples of that include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  api.domain.com/v1/auth/login&lt;/li&gt;
&lt;li&gt;  api.domain.com/v1.2/auth/login&lt;/li&gt;
&lt;li&gt;  api.domain.com/v1.4.5/auth/login&lt;/li&gt;
&lt;li&gt;  api.domain.com/v2/auth/login&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To sum it up. Start using versioning early on and you'll avoid problems later on and be able to scale your API.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-be-consistent"&gt;
  &lt;/a&gt;
  6. Be Consistent
&lt;/h3&gt;

&lt;p&gt;You've probably heard the saying: "Consistency is what transforms average into excellence". Well it's true in life as well as API design believe it or not. One of the qualities of a great API is it's consistency. &lt;strong&gt;First and foremost I am aiming at resource/model consistency and then other areas like naming, URIs, HTTP codes and similar&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As we know by now APIs boil down to resources. A resource can be anything from a user, article, book, product...anything. Each resource can have multiple properties, objects or arrays. Resources are structured and based on the data you have in the database or some other business logic. Keeping your resource responses consistent is key to your API success. You can't have your endpoints return wildly different resource structures. As much as that sounds tempting or a way to optimize things you should avoid doing that. A mobile developer implementing your API will follow the structure that you provide like a bible. If you send something different on each endpoint time he or she will have a really bad day and nobody wants that. So try to always send the same resource structure. If you don't have data then send it as an empty value or object or array. Let's talk practical and let's say we have an "article" resource and sometimes that article might have comments - sometimes it might not. Sometimes it makes sense to load the comments - sometimes it doesn't. That is fine but still try to have a consistent response in terms of your structure.&lt;/p&gt;

&lt;p&gt;When you are getting a single article you wanna load the comments as well like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Getting details for article with UUID: 5b8f6db5-7848-490e-95a7-f7146dd2e30c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"article"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample title 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample description 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/image-1,jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"eec33d99-e955-408e-a64a-abec3ae052df"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"comments"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Great article"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
                   &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"John Doe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                   &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"5b8f6db5-7848-490e-95a7-f7146dd2e30c"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Nice one"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
                   &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Jane Doe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                   &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2ececb69-d208-46c2-b560-531cb716d25d"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But when you are loading a list of articles or you've just created an article and there are no comments you should return the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Article list was a success"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"articles"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample title 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample description 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/image-1,jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"eec33d99-e955-408e-a64a-abec3ae052df"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"comments"&lt;/span&gt;&lt;span class="p"&gt;:[]&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample title 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Sample description 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://domain.com/image-2,jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b8ee70a8-1128-4670-9368-83953fdf722b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
             &lt;/span&gt;&lt;span class="nl"&gt;"comments"&lt;/span&gt;&lt;span class="p"&gt;:[]&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in case the client is expecting to see a comments array they will still get it but it will simply be empty. That way you are not changing your model and removing objects/arrays.&lt;/p&gt;

&lt;p&gt;You just saved yourself and others a bunch of time just by being consistent.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-be-graceful"&gt;
  &lt;/a&gt;
  7. Be Graceful
&lt;/h3&gt;

&lt;p&gt;If you are building APIs it's a given that things will fail. That's fine. That's expected. You shouldn't feel bad if your API has an error or a problem. &lt;strong&gt;What you should feel bad about is if you don't provide the details for it and make sure that your API is smarter than everyone else&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Starting from the top one of the most common things I see developers fail to use is HTTP status codes. In case you didn't know HTTP has status codes for pretty much every scenario imaginable. You just need to know which one to use and send it back to the client. There are over 50 various HTTP response status codes and they all have a unique meaning and should be used in unique scenarios. I won't go through all of them but we will list the most common groups. We've got:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Informational response codes (start with 1xx)&lt;/li&gt;
&lt;li&gt;  Success response codes (start with 2xx)&lt;/li&gt;
&lt;li&gt;  Redirection response codes (start with 3xx)&lt;/li&gt;
&lt;li&gt;  Client error response codes (start with 4xx)&lt;/li&gt;
&lt;li&gt;  Server error response codes (start with 5xx)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So really you have all the status you need. Everything from OK, Unauthorized, Not Found, Internal Server Error to I'm a teapot. Yes, that last one is an actual status. Just proves the guys who made HTTPs were the ultimate jokesters!&lt;/p&gt;

&lt;p&gt;In any case each of those statuses has a meaning. &lt;strong&gt;That meaning is universally accepted and understood&lt;/strong&gt;. So a developer from China and a developer from Germany will both understand that if you send a status of 401 (Unauthorized) what you mean to say is that the client did not send the correct authentication details. Since we respond with the status code of 401 (Unauthorized) everybody understands that is a client error and it needs to be fixed on the client not the API. Again I'm giving you just one example but the idea is that you should use the appropriate HTTP status code in appropriate situations. Using them will help your API be universally understandable, consistent and standard. Even though REST isn't a standard this is one of those standard things you should do 😀&lt;/p&gt;

&lt;p&gt;Once we have the HTTP status codes working for us we need to provide as many details as we can to the clients when things don't work out. We have to do multiple things to make this happen. First we have to be able to predict how our API might fail, what others might do and not do, who won't play by the rules etc...So the first step is to have strong and strict data validation especially before creating content. After you have the data you have to check if the data is valid! This means checking if the IDs actually exist, if the values are what we expect and can store them in the database...Doing all of this and responding with appropriate status codes will make your API a joy to use. So let's say you have an endpoint which accepts a user_id and gets the user profile. If we apply the strategy of predicting what might happen we'd do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Check to see if the request has the user_id param - if not respond with 400 Bad Request&lt;/li&gt;
&lt;li&gt; Check to see the given user_id actually exists in the system - if not respond with 404 (Not Found)&lt;/li&gt;
&lt;li&gt; If the user_id returns a result respond with 200 (OK)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We had multiple fail safes as you can see and in all of them we responded with the correct and understandable response code.&lt;/p&gt;

&lt;p&gt;Finally once we have our response codes setup and we are predicting how the API might fail we simply need to be as expressive as possible. I know it's hard for us developers to be like that but trust me it's one of the best things you can do. When things go wrong our REST API should have a universal error response model. If we have that then client developers can depend on that to provide users with a more in depth explanation of what went wrong. So let's say a user types in an invalid email on their phone. Somehow that gets sent to the API and the API will of course trigger a validation and error and will respond with 400 (Bad Request). Alongside that the API should send a universal error response model that will allow the client to display any and all messages to the end user. So in this case you might return an error message that says: "Invalid email address entered". The client can read that and show it to the user. And again we need to make sure that you can cover any scenario from validation to server errors. To do that it's best if we come up with a universal error model which could be used in any scenario. I propose you use the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Invalid data"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"The data you entered is not valid"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"errors"&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"The email address you provided is not real"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"field"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"phone_number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"You did not enter a phone number at all"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The JSON structure for errors is simple. We have a &lt;strong&gt;title&lt;/strong&gt; and &lt;strong&gt;message&lt;/strong&gt; which provide a general direction of what happened. A lot of times developers don't choose to display full error details to the end-user. They might use an alert modal on the iPhone to just display our message or title. But we are also sending an errors array which can house specific errors with a specific message. Providing detailed error messages will help you as well as other developers working on the API to understand what exactly went wrong. Even if you are not displaying them to the end user you will still be able to view them once you make a request or if you use a service like &lt;a href="https://treblle.com/"&gt;Treblle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So remember, make sure you try to predict as many problems as you can&lt;/strong&gt;. Provide plenty of details on why things failed even if nobody is using those details and use the universally understood language of HTTP response codes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-be-smart"&gt;
  &lt;/a&gt;
  8. Be Smart
&lt;/h3&gt;

&lt;p&gt;This one is more philosophical than the other ones but in my opinion is one of the pillars of good REST APIs. &lt;strong&gt;If you think about the role of the API in a modern day platform, service or an app we can say that the API is the brain of the whole operation&lt;/strong&gt;. The reason for that is that every client you might have (iPhone app, Android app, website, IoT device) will talk to the same API. This means our API is the most important part of the whole ecosystem and that our API should be able to handle everything. Gracefully, if I may add.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h0spCQxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/smart-api.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h0spCQxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d224n10qh3hhwu.cloudfront.net/smart-api.jpg" alt="Be Semantical"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing a smart API should do is protect its most valuable asset - the database. This means it should sanitize, clear out and prevent any bad data from entering the database. The way to do that is by making sure you validate everything that was sent from the app to the client and reject anything that doesn't look good. But when we reject things we should also provide clear reasons to the clients so they know why something happened or in this case didn't happen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Any good and smart API will handle complex processes on it's own and not depend on clients to help&lt;/strong&gt;. The simplest example of this would be registering a user in your app. For all the clients that should be one API call where they send the data and they get a user object. But, in the background, the API should handle any and all potential logistics like: register that user on a MailChimp newsletter, store a push token to Firebase, send the user a welcome email and so on...The clients should not be calling multiple API endpoints to those things. If we package everything into one endpoint then you can easily change the flow at any point in time and the clients don't even have to be aware of it. As long as you get the data you need from them the API can always be in full control of the entire business logic and processes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make sure that the API is optimized for cross platform solutions&lt;/strong&gt;. When you are dealing with multiple platforms or devices like iPhones, Android phones, computres, TVs and similar, the API should be able to adjust to them. This means that the API should be flexible enough to handle inputs that might be different from all the clients and still continue to enable the clients to do their job. A good example of this would be resizable images. If you have an API that delivers content which has images you probably don't wanna send a 4000x4000px image to a mobile phone but maybe you would to a TV or a website. A smart API would know which client is accessing that endpoint and would return optimized resources on it's own or even allow the client to request specific sizes. There are many more examples of this but you get the idea.&lt;/p&gt;

&lt;p&gt;The less you depend on the client to do things the better. A smart API will always account for the clients imperfections and correct them if possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-be-lean"&gt;
  &lt;/a&gt;
  9. Be Lean
&lt;/h3&gt;

&lt;p&gt;What is a good API if not fast and optimized!? Your API should not be the pain point of the entire ecosystem. It's as simple as that. There are many things you can do to make sure you deliver performance and scalability a good API should have. Let's look at some of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Being fast and optimized starts on a database level&lt;/strong&gt;. Whenever I hear someone say their API is slow 9 out of 10 times it has something to do with the database. Either bad database design, complicated queries, slow infrastructure or even the lack of caching. You should always optimize your database structure, queries, indexes and everything else that interacts with your database. Once you have that handled the next thing to focus on is making sure you are delivering cached data whenever possible. Caching database queries will literally reduce your load time by 100% sometimes. So if you have an API endpoint that shows users their profile or something like that I am sure it won't change every 5 minutes. Be smart, cache the data. Your users and the clients calling that API will love it.&lt;/p&gt;

&lt;p&gt;Another performance impactor is the sheer amount of data you send down to the clients via the API. Make sure your resources and models are returning only the data the clients need and not the entire shabang. If you are returning a collection of items maybe you don't need the full model details and relationships - everytime. If that will speed things up then go for it but always try to stay consistent with the models returned in the responses. This means that if you are not loading relationships, return an empty array, if you are not loading counts return 0 and so on. Consistency is key when building great REST APIs.&lt;/p&gt;

&lt;p&gt;Another pretty simple thing you can do to reduce the response size and increase performance is to enable compression. The most popular one being Gzip compression. On Apache it comes enabled by default with a module called &lt;code&gt;mod_deflate&lt;/code&gt;. When enabled you can usually see a response header of &lt;code&gt;Accept-Encoding&lt;/code&gt; set to something like &lt;code&gt;gzip, compress&lt;/code&gt;. Even though it's enabled by default you still need to "apply" it to your API response. To do that we have to add some rules to our default Apache configuration. So let's actually open the configuration file like so: &lt;code&gt;sudo nano /etc/apache2/conf-available/000-default.conf&lt;/code&gt; and add this thing of beauty: &lt;a href="https://gist.github.com/cindreta/57db9a11ef0ad88f96ba2da59f64bb7e"&gt;https://gist.github.com/cindreta/57db9a11ef0ad88f96ba2da59f64bb7e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That tells Apache to apply Gzip compression on various mime types like application/javascript, application/json and others. Once we save this we simply need to restart Apache by typing in sudo systemctl restart apache2 and we are done. Your API responses are now 50-75% smaller than they were. How easy was that?!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-be-considerate"&gt;
  &lt;/a&gt;
  10. Be Considerate
&lt;/h3&gt;

&lt;p&gt;I'll be short with this last piece because we’ve gone overboard with the REST (never gets old 😀) but I don't wanna downplay its importance. For us back-end developers the process of developing an API is pretty lonely. It’s mostly you, a bunch of code and your favorite testing tool. You might think the job is done when you write that last line of code and make a merger into the production branch. But it's not. For many others the journey is just starting.&lt;/p&gt;

&lt;p&gt;There are many people that will only start doing their job after you have completed yours. In order for them to even be able to do a good job you need to prepare your API in many ways. You have to make sure it’s working, it’s very well documented and more importantly you have to be ready to provide integration support. No matter how good you write the documentation there will always be questions, doubts and problems during the integration process and beyond.&lt;/p&gt;

&lt;p&gt;Put yourself in the shoes of others and try to make their job easier. Build a good API, follow the rules we defined here, write great documentation and be there for everyone else.&lt;/p&gt;

&lt;p&gt;Consider using tools that can help you with many of the challanges of building, shipping and running an API. One of those tools is, you guessed it, &lt;a href="https://treblle.com/"&gt;Treblle&lt;/a&gt;. Just by adding Treblle to your API you'll get auto generated documentation with OpenAPI Spec suppoert. Then you get real time monitoring and logging so you can see what others are doing and better help them. Finally you'll even get a quality core of your API based on these same rules. Of course, we've designed it with the entire team in mind. Because we know seeing is believing here is a video on how we can help:&lt;/p&gt;

&lt;p&gt;---&lt;/p&gt;

&lt;p&gt;Hopefully I've been able to simplify and explain some of the usual doubts and concerns you might have when building REST APIs. Again, I have to note, REST is not a standard so nobody can tell you you are doing it wrong. But just consider this: daily, as developers, we look for patterns to make our code better, prettier, more efficient so why not do the same with APIs. If we started following some patterns we'd all enjoy a much more healthier and prettier ecosystem.&lt;/p&gt;

&lt;p&gt;Finally, I'd like to finish off by quoting a great man who has been like an uncle to all of us - Ben Parker. He once wisely said: "&lt;strong&gt;With great power comes great responsibility&lt;/strong&gt;". That could not be more true when we talk about REST APIs.&lt;/p&gt;

&lt;p&gt;PS. If you like these articles say hello on my &lt;a href="https://twitter.com/cindreta"&gt;Twitter&lt;/a&gt; or follow me on &lt;a href="https://www.linkedin.com/in/vedrancindric/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webpack</category>
      <category>tutorial</category>
      <category>api</category>
    </item>
    <item>
      <title>Forest Admin is now fully compatible with TypeScript</title>
      <author>SteveB</author>
      <pubDate>Mon, 06 Sep 2021 12:50:12 +0000</pubDate>
      <link>https://dev.to/forestadmin/forest-admin-is-now-fully-compatible-with-typescript-4225</link>
      <guid>https://dev.to/forestadmin/forest-admin-is-now-fully-compatible-with-typescript-4225</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRdeA0QO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/waeaqg687dmm4ub06yjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRdeA0QO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/waeaqg687dmm4ub06yjv.png" alt="FA-article-typscript@2x-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Forest Admin, we strive to provide the best internal tool experience for every user, and also the best development experience for those who set it up.&lt;/p&gt;

&lt;p&gt;Lately, we have realized that many of our users have been developing their own products using TypeScript, and some of them have worked on translating their generated project from JavaScript to TypeScript. At first glance, it was just a matter of using the same technology across projects. However, when our team has looked a little bit closer to the TypeScript ecosystem, we have realized that this technology has several advantages we could make use of.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-biggest-advantages-of-typescript"&gt;
  &lt;/a&gt;
  What are the biggest advantages of TypeScript?
&lt;/h2&gt;

&lt;p&gt;In a nutshell, &lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; is a superset, type-oriented language based on JavaScript. This article doesn't aim to be an introduction to TypeScript, and we recommend the &lt;a href="https://www.typescriptlang.org/"&gt;Typescriptlang.org&lt;/a&gt; website to learn more about it. Instead, we have gathered some of the advantages of using TypeScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tighter integration with your editor, with relevant suggestions, code completion and more tools.&lt;/li&gt;
&lt;li&gt;Static type checking allowing early error catching and type inference due to strong type approach of coding.&lt;/li&gt;
&lt;li&gt;Scalability. Yes, compared to JavaScript, TypeScript is verbose, but this improves the readability in general and homogenize the code your team develops. This translates into performance and less technical debt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That being said, we decided to become members of the TypeScript community, and we created our own &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html"&gt;Types definition&lt;/a&gt; directly in our JavaScript package (forest-express-sequelize and forest-express-mongoose).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-it-mean-for-you-as-a-javascript-developer"&gt;
  &lt;/a&gt;
  What does it mean for you as a JavaScript developer?
&lt;/h2&gt;

&lt;p&gt;Modern editors are smart enough to fetch the Types definition of the packages you are using. Types clearly indicate what the package exports, and what do the exported code looks like. In other words, it describes the package and tells the developer what to use, and how to use it.&lt;/p&gt;

&lt;p&gt;If you still want to code using JavaScript, you can benefit from Types without doing anything because even in JavaScript, you will be proposed suggestions for everything related to Forest with a clear overview about how to code stuff. Let's take a &lt;a href="https://docs.forestadmin.com/documentation/reference-guide/fields/create-and-manage-smart-fields"&gt;smart field&lt;/a&gt; as an example. Without the Types, you would create a smart field using the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3YscKHrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zouwrybdynd9slyjwf18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YscKHrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zouwrybdynd9slyjwf18.png" alt="smart-field-no-code-completion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, nothing is proposed here by your editor. That's because you are using JavaScript and it's too difficult for your editor to do it.&lt;/p&gt;

&lt;p&gt;Now, with the Types included in our packages, here is what your editor will propose:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QUlGpvEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3fvuawtnm92q8f51z4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QUlGpvEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3fvuawtnm92q8f51z4w.png" alt="smart-field-code-completion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How about that? Everything related to the context you are working with is proposed. In this case, we have strongly typed our smart field configuration system and each attribute allowed by Forest Admin to configure a smart field is at your disposal. There is no need to reach the documentation. In addition, please note that the editor clearly shows the type of what is proposed (and thus, the value you can use).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-it-mean-for-you-as-a-typescript-developer"&gt;
  &lt;/a&gt;
  What does it mean for you as a TypeScript developer?
&lt;/h2&gt;

&lt;p&gt;First of all, everything explained in the previous section for JavaScript developers does matter for you as well. But not only. Having a concrete Types definition allows you to code directly using TypeScript in a project we generated for you with the &lt;a href="https://docs.forestadmin.com/documentation/reference-guide/how-it-works/developing-on-forest-admin/forest-cli-commands"&gt;Forest CLI&lt;/a&gt;, or within your own application where you integrated Forest Admin.&lt;/p&gt;

&lt;p&gt;Wondering where to start? We've got you covered. If you want to start developing your admin panel using TypeScript, we developed a &lt;a href="https://docs.forestadmin.com/woodshop/how-tos/translate-your-project-into-typescript"&gt;dedicated guide in our documentation&lt;/a&gt; to help you migrating from JavaScript to TypeScript step by step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By integrating Types we wanted to ease the development of your admin panel, and make your developers' coding experience better. They clarify how our tool looks like while coding, and help you with some suggestions and code completion.&lt;/p&gt;

&lt;p&gt;We are also now fully compatible with TypeScript. It means you can make a further step by coding your internal tool and work on your Forest Admin integration directly using TypeScript with scalability, velocity, strength, and robustness in mind.&lt;/p&gt;

&lt;p&gt;Are you ready? &lt;a href="https://app.forestadmin.com/signup"&gt;Try Forest Admin for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>adminpanel</category>
      <category>internaltools</category>
    </item>
    <item>
      <title>15+ Best Productivity Tools For Programmers in 2021,🛠 Boost Up Your Productivity🚀</title>
      <author>themeselection</author>
      <pubDate>Mon, 06 Sep 2021 12:38:52 +0000</pubDate>
      <link>https://dev.to/theme_selection/15-best-productivity-tools-for-programmers-in-2021-boost-up-your-productivity-34ae</link>
      <guid>https://dev.to/theme_selection/15-best-productivity-tools-for-programmers-in-2021-boost-up-your-productivity-34ae</guid>
      <description>&lt;p&gt;Want to boost up your productivity as a programmer? Well then, here is the list of 15+ Best Productivity Tools For Programmers in 2021, that'll boost up your productivity.&lt;/p&gt;

&lt;p&gt;Well, as a programmer, you just not work with codes and task. Besides, being concerned with writing codes, one has to look upon some other factors as well like the optimized, clean and easily maintainable code. It indeed requires a lot of focus and concentration of the programmer. Furthermore, above all that, when programmer is expected to show better productivity and efficiency traits things become more challenging, isn’t it…??&lt;/p&gt;

&lt;p&gt;So, that's where these productivity tools comes to rescue. They not just fasten your programming, but also helps with boosting up your efficiency as well.&lt;/p&gt;

&lt;p&gt;Intention here is to provide a list of best productivity tools to boost up your productivity as a programmer. &lt;/p&gt;

&lt;p&gt;You can also check some other helpful collections such as: &lt;a href="https://dev.to/theme_selection/web-design-trends-in-2021-1l4n"&gt;Web Design Trends In 2021&lt;/a&gt;, &lt;a href="https://dev.to/theme_selection/top-10-open-source-vuejs-admin-templates-2021-4c7j"&gt;Open Source VueJS Admin Template&lt;/a&gt;, &lt;a href="https://themeselection.com/top-10-full-stack-developer-skills-to-learn/"&gt;Full Stack Developer Skills To Learn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start the collection now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P2hmbh7G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4lst5vhoqulqkufx0z2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P2hmbh7G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4lst5vhoqulqkufx0z2.gif" alt="Let's check it gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vs-code-code-editing-redefined"&gt;
  &lt;/a&gt;
  &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;: Code editing redefined
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VeDAA-kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng8h7puk96mkf2gbps7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VeDAA-kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng8h7puk96mkf2gbps7t.png" alt="VS Code best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; is an integrated development environment made by Microsoft for Windows, Linux and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git.&lt;/p&gt;

&lt;p&gt;You can work together remotely with your colleagues, teachers or classmates using the free &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare-pack"&gt;LiveShare extension&lt;/a&gt;. Besides, you can also edit and debug your code in real-time, and use the chat and call features to ask questions or discuss ideas together. Whether you're working on a group assignment or teaching a lesson, you can invite multiple people to join your session and code together. You can Launch or attach to your running apps and debug with break points, call stacks, and an interactive console.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Emmet Abbreviations&lt;/li&gt;
&lt;li&gt;  The Integrated CLI (Command Line Interface)&lt;/li&gt;
&lt;li&gt;  ESLint&lt;/li&gt;
&lt;li&gt;  Prettier&lt;/li&gt;
&lt;li&gt;  Multi-Cursor Shortcuts&lt;/li&gt;
&lt;li&gt;  Text Wrap&lt;/li&gt;
&lt;li&gt;  Execute and Debug JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#asana-manage-your-teams-work-projects-amp-tasks-online"&gt;
  &lt;/a&gt;
  &lt;a href="https://asana.com/"&gt;Asana&lt;/a&gt;: Manage your team's work, projects, &amp;amp; tasks online
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aIH7vTrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yca7y41a6ixf6qtu4ot6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aIH7vTrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yca7y41a6ixf6qtu4ot6.png" alt="Asana best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Asana&lt;/strong&gt; is a workplace management dashboard that helps streamline communication across companies and teams. Asana is customizable, and allows users to break down projects into tasks and set clear goals for teams. Asana also has integration with hundreds of other apps that businesses use, like Google Drive and Outlook.&lt;/p&gt;

&lt;p&gt;Asana is made so that workplaces of any size can analyze their progress and address issues all in one place, eliminating the need for constant meetings, email updates, and memos. Asana's main feature is its project and task management tools. You can create lists or boards to host certain projects as a whole - these will detail all the initiatives, meetings, and programs involved in said projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Customizable Dashboards&lt;/li&gt;
&lt;li&gt;  Activity Feeds&lt;/li&gt;
&lt;li&gt;  Focus Mode &amp;amp; Individual Task Lists&lt;/li&gt;
&lt;li&gt;  Subtasks assignment&lt;/li&gt;
&lt;li&gt;  Prioritization&lt;/li&gt;
&lt;li&gt;  Custom Calendar&lt;/li&gt;
&lt;li&gt;  Email Integration&lt;/li&gt;
&lt;li&gt;  Notifications &amp;amp; Reminders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic&lt;/li&gt;
&lt;li&gt;Premium - US$10.99/month (Annual plan)&lt;/li&gt;
&lt;li&gt;Business - US$24.99/month (Annual plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#materio-free-vuetify-vuejs-admin-template-free-amp-best"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;Materio – Free Vuetify Vuejs Admin Template&lt;/a&gt; (Free🎁 &amp;amp; Best🤩)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/category/vuejs-admin-templates/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J_0u5lN0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6pnnvpdi5zmy122z8fp5.png" alt="open source vuejs admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;&lt;strong&gt;Materio Free VueJS Vuetify Admin Dashboard Template&lt;/strong&gt;&lt;/a&gt; – is the latest developer-friendly 🤘🏻 &amp;amp; highly customizable✨ Admin Dashboard Template based on &lt;a href="https://vuetifyjs.com/en/"&gt;Vuetify&lt;/a&gt; for developers. This open source vuejs admin template is enriched with features and a highly customizable🤩.Besides, the highest industry standards are considered to bring you the very best Vuetify admin template that is not just fast🚀and easy to use, but highly scalable. Offering ultimate convenience and flexibility, you’ll be able to build whatever application you want with very little hassle.&lt;/p&gt;

&lt;p&gt;Furthermore, you can use this one of the best innovative free Vuejs admin templates to create eye-catching, high-quality, and high-performing single-page applications. Besides, your apps will be completely responsive, ensuring they’ll look stunning and function flawlessly on desktops, tablets, and mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  1 Simple Dashboard, 1 Chart Library&lt;/li&gt;
&lt;li&gt;  Single vertical menu&lt;/li&gt;
&lt;li&gt;  Simple Light/Dark theme&lt;/li&gt;
&lt;li&gt;  Basic Cards, pages, and tables&lt;/li&gt;
&lt;li&gt;  Simple From Elements⚡&lt;/li&gt;
&lt;li&gt;  Single vertical menu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Price:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Single Use - US$49 (One time purchase)&lt;/li&gt;
&lt;li&gt;Multiple Use - US$129 (One time purchase)&lt;/li&gt;
&lt;li&gt;Extended Use - US$299 (One time purchase)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/demo/materio-vuetify-vuejs-admin-template-free/demo/dashboard"&gt;Demo&lt;/a&gt; &lt;a href="https://themeselection.com/products/materio-free-vuetify-vuejs-admin-template/"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codestream-developer-collaboration-platform"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codestream.com/"&gt;CodeStream&lt;/a&gt;: Developer collaboration platform
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmzngBfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqtdc1onoyo6ux85xky1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmzngBfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqtdc1onoyo6ux85xky1.png" alt="Codestream best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CodeStream&lt;/strong&gt; is a free  &lt;a href="https://github.com/TeamCodeStream/codestream"&gt;open-source&lt;/a&gt;  extension for VS Code, Visual Studio, and JetBrains. It supercharges development workflows by putting collaboration tools in your IDE. It supports pull requests  from GitHub, BitBucket and GitLab, issue management from Jira, Trello, Asana and 9 others, and provides code discussion that ties it all together, integrated with Slack, MS Teams, email, and in-editor notifications.&lt;/p&gt;

&lt;p&gt;Development teams can easily handle brainstorming sessions by selecting a single line of code and commenting their queries or ideas. All the conversations that have taken place throughout the development process are automatically included in the final documentation of the product. With Multiple IDE support, developers can communicate across the complete team’s IDEs. And by working across branches, conversations and code references can be kept accurate. Other advanced features are automatic git-blame and at-mentions while typing questions, one-click navigation to the code editor and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Version Control&lt;/li&gt;
&lt;li&gt;  Collaboration&lt;/li&gt;
&lt;li&gt;  Chat (Messaging)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sentry-working-code-happy-customers"&gt;
  &lt;/a&gt;
  &lt;a href="https://sentry.io/"&gt;Sentry&lt;/a&gt;: Working Code, Happy Customers
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBxgddxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qe6na1p1apcryvt7j3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBxgddxl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qe6na1p1apcryvt7j3q.png" alt="Sentry best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sentry&lt;/strong&gt; provides open-source error tracking to monitor and fix bugs and crashes anywhere in your application in real time. More developers use Sentry than any other error tracking tool to improve the efficiency of deployments and ensure the user experience.&lt;/p&gt;

&lt;p&gt;Sentry integrates with your existing tools and workflow to make it easier to find, reproduce, triage, and fix errors in production: GitHub, BitBucket, GitLab, Slack, HipChat, Heroku, Jira, Asana, Trello, Pivotal Tracker, Twiliio, PagerDuty, Datadog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alerts/Notifications &lt;/li&gt;
&lt;li&gt;Monitoring &lt;/li&gt;
&lt;li&gt;Search/Filter&lt;/li&gt;
&lt;li&gt;Real Time Monitoring&lt;/li&gt;
&lt;li&gt;Workflow Management&lt;/li&gt;
&lt;li&gt;Event Tracking &lt;/li&gt;
&lt;li&gt;Exceptions Management &lt;/li&gt;
&lt;li&gt;Alerts /Escalation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Team - US$26/month (Annual plan)&lt;/li&gt;
&lt;li&gt;Business - US$80/month (Annual plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#github-copilot-your-ai-pair-programmer"&gt;
  &lt;/a&gt;
  &lt;a href="https://copilot.github.com/"&gt;Github Copilot&lt;/a&gt;: Your AI Pair Programmer
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjCbfPJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5krp196aj01cap5snq9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjCbfPJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5krp196aj01cap5snq9.png" alt="Github Copilot best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Copilot&lt;/strong&gt; is one of the best productivity tools for programmers. It is an artificial intelligence tool developed by &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; and &lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt; to assist users of Visual Studio Code by autocompleting code. It works wherever Visual Studio Code works — on your machine or in the cloud on  &lt;a href="https://github.com/features/codespaces"&gt;GitHub Codespaces&lt;/a&gt;. And it’s fast enough to use as you type. GitHub Copilot works with a broad set of frameworks and languages. The technical preview does especially well for Python, JavaScript, TypeScript, Ruby, and Go, but it understands dozens of languages and can help you find your way around almost anything.&lt;/p&gt;

&lt;p&gt;With GitHub Copilot, you’re always in charge. You can cycle through alternative suggestions, choose which to accept or reject, and manually edit suggested code. GitHub Copilot adapts to the edits you make, matching your coding style.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#intellij-idea-the-capable-amp-ergonomic-ide"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.jetbrains.com/idea/"&gt;Intellij IDEA&lt;/a&gt;: The Capable &amp;amp; Ergonomic IDE
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4lLpgYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmgkb5cx74ijqv0ehd9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4lLpgYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmgkb5cx74ijqv0ehd9u.png" alt="Intellij IDEA best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IntelliJ IDEA&lt;/strong&gt; is another tool from the list of best productivity tools for programmers an integrated development environment written in Java for developing computer software. It is developed by JetBrains, and is available as an Apache 2 Licensed community edition, and in a proprietary commercial edition. Both can be used for commercial development. Every aspect of IntelliJ IDEA has been designed to maximize developer productivity. Together, intelligent coding assistance and ergonomic design make development not only productive but also enjoyable.&lt;/p&gt;

&lt;p&gt;IntelliJ IDEA is an intelligent, context-aware IDE for working with Java and other JVM languages like Kotlin, Scala, and Groovy on all sorts of applications. Additionally, IntelliJ IDEA Ultimate can help you develop full-stack web applications, thanks to its powerful integrated tools, support for JavaScript and related technologies, and advanced support for popular frameworks like Spring, Spring Boot, Jakarta EE, Micronaut, Quarkus, Helidon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy start up&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts for everything&lt;/li&gt;
&lt;li&gt;Standard and custom themes&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Plugins &lt;/li&gt;
&lt;li&gt;Intelligent code completion &lt;/li&gt;
&lt;li&gt;Language injections&lt;/li&gt;
&lt;li&gt;Project-wide refactoring&lt;/li&gt;
&lt;li&gt;Instant navigation and search&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Businesses/organizations - $499/1st year, $399/2nd year, $299/3rd year&lt;/li&gt;
&lt;li&gt;Individual customers - $149/1st year, $119/2nd year, $89/3rd year&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sublime-text-text-editing-done-right"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;: Text Editing, Done Right
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eh1aKPVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9brvf3fiox6olmwu50b0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eh1aKPVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9brvf3fiox6olmwu50b0.png" alt="Sublime text best productivity tools for programmers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sublime Text&lt;/strong&gt; is a commercial source code editor. It is ne of the best productivity tools for programmers that natively supports many programming languages and markup languages. Users can expand its functionality with plugins, typically community-built and maintained under free-software licenses. To facilitate plugins, Sublime Text features a Python API. It includes wide features such as Syntax Highlight, Auto Indentation, File Type Recognition, Sidebar, Macros, Plug-in and Packages that make it easy for working with code base.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GPU Rendering&lt;/li&gt;
&lt;li&gt;Native support for Apple Silicon processors&lt;/li&gt;
&lt;li&gt;Tab Multi select&lt;/li&gt;
&lt;li&gt;Autocomplete&lt;/li&gt;
&lt;li&gt;Updated Python API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free (license must be purchased for continued use)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#timely-automatic-time-tracking"&gt;
  &lt;/a&gt;
  &lt;a href="https://memory.ai/timely"&gt;Timely&lt;/a&gt;: Automatic time tracking
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwpW0w4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0a4s16rl6x48cwc0x2w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwpW0w4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0a4s16rl6x48cwc0x2w.png" alt="Timely"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Timely can track time spent in every web and desktop app automatically for you. Get a precise daily record of all the time you spend in documents, meetings, emails, websites and video calls with zero effort. It’s all 100% private to you. With flexible options for logging time, your team can manage timesheets in the way that makes most sense to them.&lt;/p&gt;

&lt;p&gt;By capturing every second of your work day, Timely stops billable time from falling through the cracks. Report and invoice clients transparently, and use accurate company time data to improve project rates and budgets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatic time tracking&lt;/li&gt;
&lt;li&gt;Project tracking&lt;/li&gt;
&lt;li&gt;Team management&lt;/li&gt;
&lt;li&gt;Integrations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;14 Day Free Trial&lt;/li&gt;
&lt;li&gt;Starter - US$8/month (Annual plan)&lt;/li&gt;
&lt;li&gt;Premium - US$14/month (Annual plan)&lt;/li&gt;
&lt;li&gt;Unlimited - US$20/month (Annual plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tupel-maconly-remote-pair-programming-tool"&gt;
  &lt;/a&gt;
  &lt;a href="https://tuple.app/"&gt;Tupel&lt;/a&gt;: Mac-only remote pair programming tool
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWe6Db5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb8kwxiocgldbzciw7hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWe6Db5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb8kwxiocgldbzciw7hw.png" alt="Tupel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuple&lt;/strong&gt; is a Mac-only remote pair programming tool. It gives mouse and keyboard control to both parties. Handing off control takes one click, so you never need to dictate what you want your pair to do. Tuple streams in glorious 5K so you can read your pair's tiny programming font. Our audio is low-latency and super clear. &lt;/p&gt;

&lt;p&gt;Using Slack or Zoom is not terrible for pair programming, but if you are working with mac, you can get a better way. With Tuple, you level up your pandemic pair-programming game by getting features like remote control, low-latency connection, and a block of all noisy notifications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Dual control&lt;/li&gt;
&lt;li&gt;  Minimal lag&lt;/li&gt;
&lt;li&gt;  Security of code/communication&lt;/li&gt;
&lt;li&gt;  Full keyboard support (e.g. application switching)&lt;/li&gt;
&lt;li&gt;  Context switching awareness (e.g. when we bounce from editor to browser)&lt;/li&gt;
&lt;li&gt;  Audio support&lt;/li&gt;
&lt;li&gt;  Editor/IDE agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;14 Day Free Trial&lt;/li&gt;
&lt;li&gt;US$25/month/user&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#flux-software-to-make-your-life-better"&gt;
  &lt;/a&gt;
  &lt;a href="https://justgetflux.com/"&gt;F.lux&lt;/a&gt;: Software to make your life better
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biJOzhly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf0a0rr6vcu5p3ga9chd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biJOzhly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kf0a0rr6vcu5p3ga9chd.jpg" alt="F.lux"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;F.lux&lt;/strong&gt; is a cross-platform computer program that adjusts a display's color temperature according to location and time of day, offering functional respite for the eyes. The program is designed to reduce eye strain during night-time use, helping to reduce disruption of sleep patterns. F.lux stops your computer from affecting your eyes and sleep schedule by adjusting the screen brightness according to the time zone of the day. Brighter in the day, lighter in the morning, darker and warmer at night.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Bedtime mode: warmer mode gets you ready for sleep.&lt;/li&gt;
&lt;li&gt;  Backwards alarm clock: reminder not to stay up late.&lt;/li&gt;
&lt;li&gt;  Presets to help adjust your settings.&lt;/li&gt;
&lt;li&gt;  Color filters for eyestrain and other uses.&lt;/li&gt;
&lt;li&gt;  Wider range of color settings.&lt;/li&gt;
&lt;li&gt;  New hotkeys to adjust color&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free (License For Corporate Use)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cold-turkey-the-toughest-website-blocker"&gt;
  &lt;/a&gt;
  &lt;a href="https://getcoldturkey.com/"&gt;Cold Turkey&lt;/a&gt;: The Toughest Website Blocker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V13RF4V---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxcjbm9tkfrbc4vqb7sr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V13RF4V---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xxcjbm9tkfrbc4vqb7sr.png" alt="Cold turkey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cold Turkey&lt;/strong&gt; is a pure discipline built straight up in your computer. For a specified amount of time you choose, it blocks games, applications, and even internet access, making it impossible for you not to focus. &lt;/p&gt;

&lt;p&gt;Install this site-blocking app, and you can create lists of websites and desktop apps to block, then set a schedule for blocking. You could, for example, block any distracting sites or video sites during every work day. You could also block work apps, like Slack, when the work day ends. It's up to you. Or, if you prefer, you can turn blocking on and off manually. There's even a mode called Frozen Turkey, which prevents you from accessing your computer entirely: turn it on, and you'll see a blank screen until your scheduled outage is over.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Free&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Block websites&lt;/li&gt;
&lt;li&gt;  Website Exceptions&lt;/li&gt;
&lt;li&gt;  Timed blocks&lt;/li&gt;
&lt;li&gt;  Statistics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pro:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Block applications&lt;/li&gt;
&lt;li&gt; Scheduled blocks&lt;/li&gt;
&lt;li&gt; Application password&lt;/li&gt;
&lt;li&gt; All locking features&lt;/li&gt;
&lt;li&gt; Custom user selection&lt;/li&gt;
&lt;li&gt; Breaks and allowances&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Pro - US$39&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#notion-all-in-one-workspace"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;: All in one workspace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4aEVnn_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izv4hery3d8g9hgzcbmv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aEVnn_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izv4hery3d8g9hgzcbmv.png" alt="notion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notion&lt;/strong&gt; is an application that provides components such as notes, databases, kanban boards, wikis, calendars and reminders. Users can connect these components to create their own systems for knowledge management, note taking, data management, project management, among others.&lt;/p&gt;

&lt;p&gt;It helps users schedule tasks, manage files, save documents, set reminders, keep agendas, organize their work. Notion allows writing &amp;amp; pasting equations in the form of blocks or inline, as it supports LaTex. Users can also embed online content in their Notion pages using Embed.ly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Due Dates&lt;/li&gt;
&lt;li&gt;  Task Prioritization&lt;/li&gt;
&lt;li&gt;  To-Do Lists&lt;/li&gt;
&lt;li&gt;  Drag &amp;amp; Drop&lt;/li&gt;
&lt;li&gt;  Planning&lt;/li&gt;
&lt;li&gt;  Calendar View&lt;/li&gt;
&lt;li&gt;  Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Personal (Free)&lt;/li&gt;
&lt;li&gt;Personal Pro - US$4/month (Annual Plan)&lt;/li&gt;
&lt;li&gt;Team - US$8/month/member (Annual Plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#habitica-gamify-your-life"&gt;
  &lt;/a&gt;
  &lt;a href="https://habitica.com/static/home"&gt;Habitica&lt;/a&gt;: Gamify your life
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XopnAGxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdm7s28jg92k8dxx3v03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XopnAGxH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xdm7s28jg92k8dxx3v03.png" alt="Habitica"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habitica&lt;/strong&gt; is one of the most recommended productivity tools for all the programmers out there. It allows you to  treat your work or tasks as a role-playing game where you get level-up after the task completion, win in-game rewards, and get punishments as well in case of task failure that eventually motivates you to accomplish the particular goals or tasks efficiently and increase your productivity. Here you can conveniently track your habits, daily goals and do other tasks with a very intuitive interface.&lt;/p&gt;

&lt;p&gt;Habitica is a free-to-use tool, and you can simply start using it after signing up. Firstly, you’re required to create a character, and then you can assign the daily tasks, one-time tasks along with indicating habits. Also, for a team of programmers, you can opt to add the complete project in a group quest and sync it with everyone. You should definitely opt to explore Habitica if you want to develop new habits and work on projects with the help of a game-like environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mantisbt-free-webbased-bug-tracker"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mantisbt.org/"&gt;MantisBT&lt;/a&gt;: Free web-based bug tracker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PnFkOqqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drzy0hohlfp36sf8bcmp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PnFkOqqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drzy0hohlfp36sf8bcmp.png" alt="MantisBT"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MantisBT&lt;/strong&gt; is an open source issue tracker that provides a delicate balance between simplicity and power. Users are able to get started in minutes and start managing their projects while collaborating with their teammates and clients effectively.&lt;/p&gt;

&lt;p&gt;Finding bugs usually takes a lot of time for the developer and hinders his efficiency &amp;amp; productivity. Though MantisBT can help you with that. MantisBT is a web-based bug tracking system that is used for tracking errors or defects in the code and reporting them accordingly. It sends email notifications to update you or other members of your team with the reported issues. You also have the flexibility to customize your issue fields, notifications, and workflow. You can easily start using MantisBT for your projects by downloading it, and also you can give it a try to demo options first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Project, sub-project, and category support.&lt;/li&gt;
&lt;li&gt;  User-based security&lt;/li&gt;
&lt;li&gt;  Advanced search tools&lt;/li&gt;
&lt;li&gt;  Reporting and graphing&lt;/li&gt;
&lt;li&gt;  E-mail and RSS feed support&lt;/li&gt;
&lt;li&gt;  Customizable issue pages and workflow&lt;/li&gt;
&lt;li&gt;  Revision control integration&lt;/li&gt;
&lt;li&gt;  Document management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#clockify-free-time-tracker"&gt;
  &lt;/a&gt;
  &lt;a href="https://clockify.me/"&gt;Clockify&lt;/a&gt;: Free Time Tracker
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3yp06chM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzr1x59wp0f4baajlq7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3yp06chM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzr1x59wp0f4baajlq7e.png" alt="Clockify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clockify&lt;/strong&gt; is a time tracker and timesheet app that lets you track work hours across projects. Well, time-tracking is one of the best practices for programmers around the globe to find out and work on their efficiency and productivity issues. It helps programmers to identify those tasks that take quite a long time while doing programming so that they can accordingly work on it and increase the efficiency &amp;amp; productivity. That's where Clockify comes in picture.&lt;/p&gt;

&lt;p&gt;All you need to do is start the timer and end it after completion of the task. In case, if you forget to start the timer – you can add time details manually as well. Other than that, Clockify provides you with a visual report that helps you to gain valuable insights into your productivity and time management skills. Several additional features such as easy integration with other external apps, targets &amp;amp; reminders, etc. also come up with Clockify.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time tracker&lt;/li&gt;
&lt;li&gt;Timesheet&lt;/li&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Dashboard&lt;/li&gt;
&lt;li&gt;Reports&lt;/li&gt;
&lt;li&gt;Projects&lt;/li&gt;
&lt;li&gt;Team&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Basic - US$3.99/month/member (Annual Plan)&lt;/li&gt;
&lt;li&gt;Standard - US$5.49/month/member (Annual Plan)&lt;/li&gt;
&lt;li&gt;Pro - US$7.99/month/member (Annual Plan)&lt;/li&gt;
&lt;li&gt;Enterprise - US$11.99/month/member (Annual Plan)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#music-for-programming"&gt;
  &lt;/a&gt;
  &lt;a href="https://musicforprogramming.net/"&gt;Music for programming&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VRWTDLOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x1epc2e26f9nze49suh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VRWTDLOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6x1epc2e26f9nze49suh.png" alt="Music For Programming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Music for programmers&lt;/strong&gt; is a comfortable music tool the main concept of which is a music generator to not distract developers from code. Its interface imitates a code editor. When you want to change a track, the visual look of the website will not differ from your working environment. That’s why you will be still focused on your coding activities.&lt;/p&gt;

&lt;p&gt;There are 54 playlists available, varying in length and mostly non-vocal instrumental tracks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-silver-searcher-cross-platform-source-code-searching-tool"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;The Silver Searcher&lt;/a&gt;: Cross platform source code searching tool
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The Silver Searcher&lt;/strong&gt;  is a free and open source, cross platform source code searching tool similar to  &lt;a href="https://beyondgrep.com/"&gt;ack&lt;/a&gt;  (grep-like tool  for programmers) but faster. It runs on Unix-like systems and Windows operating systems.&lt;/p&gt;

&lt;p&gt;The major difference between the  &lt;strong&gt;silver searcher&lt;/strong&gt;  and  &lt;strong&gt;ack&lt;/strong&gt;  is that the former is designed for speed, and benchmark tests prove that it is indeed faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Smart case search; no more  &lt;code&gt;grep -i&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  Recursive search is the default; no more  &lt;code&gt;grep -r&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  No need to specify search path, it searches the current directory by default; no more  &lt;code&gt;grep .&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  Supports regexps by default; no more  &lt;code&gt;grep -e&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  Filtering by filename of file extension: no more  &lt;code&gt;grep -r &amp;lt;string&amp;gt; | grep&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;  By default it uses ignores VCS files (.gitignore, .hgignore, .svnignore) to skip searching those paths and search faster.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;So, here was the list of 15+ Best Productivity Tools For Programmers in 2021.&lt;/p&gt;

&lt;p&gt;These productivity tools can help you in avoiding distractions and making focus, time tracking, managing various tasks efficiently and conveniently such as file sharing, team collaboration, project management, and many others. &lt;/p&gt;

&lt;p&gt;Do tell us which one is your favorite in the comment section below. Also suggest any other tool that can be listed here.&lt;/p&gt;

&lt;p&gt;Select the tools as per your need and begin programming👨‍💻...!! &lt;br&gt;
Happy Coding.✨&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Things you should know to develop a website like Binance-Binance clone script</title>
      <author>hassan mahmoodi</author>
      <pubDate>Mon, 06 Sep 2021 12:28:20 +0000</pubDate>
      <link>https://dev.to/hassanm22668408/things-you-should-know-to-develop-a-website-like-binance-binance-clone-script-1e8n</link>
      <guid>https://dev.to/hassanm22668408/things-you-should-know-to-develop-a-website-like-binance-binance-clone-script-1e8n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-clone-script"&gt;
  &lt;/a&gt;
  what is Clone script
&lt;/h2&gt;

&lt;p&gt;Clone script is a tested architecture of the existing app that we can use to develop your customized software. With the help of &lt;strong&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance clone script&lt;/a&gt;&lt;/strong&gt; you will be able to launch your exchange platform with all the binance features, but you can add the extra features that you want to the platform and build your customized website. Binance clone script, enables the customers to trade directly in a p2p method. With binance clone script you can develop a hassle-free, user-friendly and secure website like Binance in a short time. Stay with us to read about the Binance clone script.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--obSe8hKT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-pic-1-1.svg" alt="binance clone  script"&gt;&lt;/a&gt;   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-binance-clone-script"&gt;
  &lt;/a&gt;
  What is Binance clone script?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency is being more and more accepted by people day by day. A large value of assets are being traded every day and a significant amount of the trading traffic belongs to the Binance exchange. It shows that Binance is popular among traders because of its high security, low transaction fees, and some other advanced features that it has. Binance is a successful, reliable, and secure cryptocurrency exchange platform. This company was founded in 2017 and climbed up the stairs of success so fast as its revenue in 2020 was about $800 M. Based on the reports its &lt;br&gt;
Website Visits was about 251.3 m on May 2021.        This company was established in China in Sep 2017. Binance is a marketplace that supports the exchange of coins like bitcoin, litecoin, ethereum, and more. Traders use Binance to do different tasks on the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-premium-features-of-binance-that-cause-people-to-choose-binance-exchange"&gt;
  &lt;/a&gt;
  The premium features of binance that cause people to choose binance exchange:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Low fees&lt;/strong&gt;: Binance is one of the exchange websites that costs lower transaction fees than its competitors. Binance charges a fee of 0.1% for transactions.&lt;br&gt;
&lt;strong&gt;Accepts new cryptocurrencies:&lt;/strong&gt; new cryptocurrencies can be added to the list on binance after the completion of the initial coin offerings.&lt;br&gt;
&lt;strong&gt;Bonuses and rewards:&lt;/strong&gt; traders will gain rewards such as free crypto coins. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-exchange"&gt;
  &lt;/a&gt;
  Features of binance exchange
&lt;/h2&gt;

&lt;p&gt;Multilingual support &lt;br&gt;
Live trade chart &lt;br&gt;
Referral program&lt;br&gt;
Powerful trade match engine &lt;br&gt;
Multicurrency support &lt;br&gt;
Perfect UI/UX design &lt;br&gt;
Different trading orders: market, limit , stop, and stop-limit order &lt;br&gt;
P2p trading&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app   &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ypmFeqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-app-1.svg" alt="binance clone app script"&gt;
&lt;/h2&gt;

&lt;p&gt;Binance clone app development is the process of creating a fast performing, trading mobile app compatible with ios or android, with similar features to Binance app. Nowadays that each person has a personal smartphone, you can see that they do almost every task via their smartphones. So developing a binance clone app will enable clients to trade anywhere and easily through their smartphones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-app"&gt;
  &lt;/a&gt;
  Features of binance clone app
&lt;/h3&gt;

&lt;p&gt;• Compatible with IOS and android &lt;br&gt;
• Pin lock features &lt;br&gt;
• Multilingual support &lt;br&gt;
• Real time updates of the assets’ value&lt;br&gt;
• Transaction history &lt;br&gt;
• Live chat&lt;br&gt;
• Faster chat&lt;br&gt;
• Trading orders&lt;br&gt;
• Referral bonuses&lt;br&gt;
• Instant buying and selling &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Features of binance clone script
&lt;/h3&gt;

&lt;p&gt;• Liquid swap &lt;br&gt;
• Smartchain&lt;br&gt;
• Trust wallet integration&lt;br&gt;
• DEX development &lt;br&gt;
• Launchpad&lt;br&gt;
• Launchpool staking &lt;br&gt;
• Bonous and rewards &lt;br&gt;
• Token listing &lt;br&gt;
• Low transaction fee&lt;br&gt;
• Matching trade &lt;br&gt;
• Multi payment method&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--60oq0gFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/binance-white-label.svg" alt="white label binance clone script"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-a-white-label-binance-clone-script"&gt;
  &lt;/a&gt;
  Benefits of using a white label binance clone script
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://radindev.com/white-label-crypto-exchange-software/"&gt;White label crypto exchange platform&lt;/a&gt;&lt;/strong&gt;reduces the development time and energy needed to develop a website or write script from scratch&lt;/li&gt;
&lt;li&gt;  The white label binance clone script is a pre-made script which doesn’t need that much money to develop a software from zero.&lt;/li&gt;
&lt;li&gt; The clone scripts have the high success rate because these scripts are powerful. The fact that some other successful websites are using this script and they are working properly are a testament to the good performance of these scripts.&lt;/li&gt;
&lt;li&gt; Various altcoins are available in this exchange platform. The exchange supports hundreds of cryptocurrency coins and tokens.&lt;/li&gt;
&lt;li&gt; It is completely customizable, if you want to add some additional features to white label binance clone script it’s possible. &lt;/li&gt;
&lt;li&gt; It is a bug-free and hassle-free platform and you will not face new problems during the process of deployment. And you can be sure that the platform will work properly because the script is working on other websites.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#white-label-binance-clone-script-feature-for-users-and-admin"&gt;
  &lt;/a&gt;
  White label binance clone script feature for users and admin
&lt;/h2&gt;

&lt;p&gt;White label binance clone script is a ready-made cryptocurrency exchange clone script of a successful exchange platform named binance. Like other clones, it holds all the features of binance platform. Binance white label clone is completely tested. By using a white label clone script you can start your branding faster. And catch the attention of traders to your exchange platform.&lt;/p&gt;

&lt;p&gt;Also, it will help you to enter the market sooner than developing a website from scratch.&lt;br&gt;
Here is the list of the features the white label Binance clone script offers to its users:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin:&lt;/strong&gt;&lt;br&gt;
List tokens and crypto pairs as available trading pairs.&lt;br&gt;
Enable number of liquidity APIs based on the market changes.&lt;br&gt;
Trading fee and withdrawal fee on exchange can be updated any time.&lt;br&gt;
Admin URL  login is available with the http access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User:&lt;/strong&gt;&lt;br&gt;
The trading order only will be placed after the 2fa and sms  verification.&lt;br&gt;
IP address verification to disable multiple logins&lt;br&gt;
Transaction history &lt;br&gt;
User friendly User dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-start-a-website-like-binance"&gt;
  &lt;/a&gt;
  Why should you start a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Brand reputation &lt;br&gt;
Potential customer &lt;br&gt;
High amount of transactions&lt;br&gt;
High market cap for users &lt;br&gt;
Users can learn and earn&lt;br&gt;
 the clone script is a replica of a famous website that exist before , which is an assurance that there is already a “demand” for that website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-features-of-binance-clone-script"&gt;
  &lt;/a&gt;
  Security features of Binance clone script
&lt;/h2&gt;

&lt;p&gt;• Email verification &lt;br&gt;
• Users authentication &lt;br&gt;
• Two factor authentication &lt;br&gt;
• Multi sig wallet integration&lt;br&gt;
• Secure cold wallet storage &lt;br&gt;
• Registry lock&lt;br&gt;
• SMS verifications&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-buy-bitcoin-on-the-binance-platform"&gt;
  &lt;/a&gt;
  How to buy Bitcoin on the Binance platform?
&lt;/h3&gt;

&lt;p&gt;The user  must log in to the Binance account &lt;br&gt;
The user must choose the exchange interface either basic or advanced.&lt;br&gt;
Different types of cryptocurrencies such as BNB, USDT, BTC, and ETH are available that user has to select among them. &lt;br&gt;
After choosing the desired bitcoins user must choose the coin that wants to exchange with&lt;br&gt;
As a result, a trading graph will appear for the user that shows how coins are being exchanged with each other. &lt;br&gt;
The user can set conditions for the order types such as limit order, stop-limit order, and more.&lt;br&gt;
The number of coins to be traded can be specified by the user.&lt;br&gt;
 Binance DEX clone script &lt;br&gt;
In the DEX Binance clone script, there is no need for a central authority to control the trade.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-binance-dex-clone-script"&gt;
  &lt;/a&gt;
  Features of Binance DEX Clone Script
&lt;/h2&gt;

&lt;p&gt;Decentralized Order Book&lt;/p&gt;

&lt;p&gt;150+ Cryptocurrencies Support&lt;/p&gt;

&lt;p&gt;Instant Buy &amp;amp; Sell Bitcoins&lt;/p&gt;

&lt;p&gt;Two Factor authentication&lt;/p&gt;

&lt;p&gt;Crypto Wallet Support&lt;/p&gt;

&lt;p&gt;Fiat-Crypto Exchange&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOUnyOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/08/like-binance.svg" alt="clone a website like binance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-for-creating-a-successful-exchange-platform"&gt;
  &lt;/a&gt;
  Steps for creating a successful exchange platform
&lt;/h3&gt;

&lt;p&gt;You know that you can add extra features and customize your exchange website.so use this possibility in the best way you can for developing a user friendly and popular exchange website. &lt;/p&gt;

&lt;p&gt;Read and test all the Binance features&lt;br&gt;
Understand the weakness and strengths of the platform to improve the weakness.&lt;br&gt;
Try to add some extra features to the platform that are useful for users ( you can find these features by asking users opinions )&lt;br&gt;
Search the social Media and users’ feedback to understand the users’ opinions. The features that they like and some extra features that they prefer to be added to the platform understand are the things users don’t like about the platform and solve it in your exchange.&lt;br&gt;
Check your competitors’ websites. Provide new features and updates for your exchange platform users. &lt;br&gt;
Keep updating your security features of the website and the speed of the transaction because these two factors are so important in exchange platforms.&lt;br&gt;
Find a trustworthy company to clone a website like OKEx for you.&lt;br&gt;
Check out the other popular websites and figure out what features do they have that attract the traders.&lt;br&gt;
Think of some rewarding system to attract more users to the platform, like setting some prizes for the first transaction, welcoming prizes for registration, and some other ways.&lt;br&gt;
Add an educational part to the platform. And make it possible for traders to learn and gain. This factor may attract new traders because they are interested in learning about the crypto exchange.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-best-company-to-develop-a-website-like-binance"&gt;
  &lt;/a&gt;
  How to choose the best company to develop a website like Binance?
&lt;/h2&gt;

&lt;p&gt;Support Period.&lt;br&gt;
Customization Option.&lt;br&gt;
Data Backup.&lt;br&gt;
100% Source Code.&lt;br&gt;
Maintenance Cost.&lt;br&gt;
Free Addons&lt;br&gt;
Their customers feed backs&lt;br&gt;
We recommend you request binance clone script from your chosen company before purchasing the script.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>binance</category>
    </item>
    <item>
      <title>Best coding practices part 2</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 06 Sep 2021 12:12:03 +0000</pubDate>
      <link>https://dev.to/aatmaj/best-coding-practices-part-2-2bkk</link>
      <guid>https://dev.to/aatmaj/best-coding-practices-part-2-2bkk</guid>
      <description>&lt;h3&gt;
  &lt;a href="#best-coding-practices-to-remember"&gt;
  &lt;/a&gt;
  Best coding practices to remember.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Be sure to understand your problem before you decide how to solve it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be sure you understand the algorithmic method before you start the program&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In case of difficulty, divide the problem into pieces and think of each part separately. (Divide and conquer)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep your functions short and simple; rarely should a single function be more than a page long.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use techniques like "scaffolding" to simplify debugging. Scaffolding is a technique used to localize errors.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep your programs well formatted as you write them. This makes debugging easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep your documentation consistent with your code, and when reading a program make sure you debug he code and not just the comments.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Explain your program to someone else: Doing so will help you understand it better yourself.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Adapted from the book &lt;a href="https://www.amazon.in/Data-Structures-Program-Design-2e/dp/8177584235"&gt;Data Structures and Program Design in C&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What did you teach this week? Happy teacher's day!</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 06 Sep 2021 12:11:45 +0000</pubDate>
      <link>https://dev.to/aatmaj/what-did-you-teach-this-week-happy-teacher-s-day-45mb</link>
      <guid>https://dev.to/aatmaj/what-did-you-teach-this-week-happy-teacher-s-day-45mb</guid>
      <description>&lt;p&gt;Happy Teacher's Day! &lt;br&gt;
So this week did you too become a teacher? Comment below and encourage others to teach!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xuAcUaSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2cceii78wc9nq5yc26w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xuAcUaSv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2cceii78wc9nq5yc26w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>teachingthisweek</category>
      <category>discuss</category>
      <category>teaching</category>
    </item>
    <item>
      <title>Today's Daily Humor For Devs - Daily Developer Jokes</title>
      <author>Daily Developer Jokes</author>
      <pubDate>Mon, 06 Sep 2021 12:00:25 +0000</pubDate>
      <link>https://dev.to/dailydeveloperjokes/today-s-daily-humor-for-devs-daily-developer-jokes-5ak1</link>
      <guid>https://dev.to/dailydeveloperjokes/today-s-daily-humor-for-devs-daily-developer-jokes-5ak1</guid>
      <description>&lt;p&gt;Hi there! Here's today's Daily Developer Joke. We hope you enjoy it; it's a good one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GJYYedWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258fbc6e41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GJYYedWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://private.xtrp.io/projects/DailyDeveloperJokes/public_image_server/images/5e1258fbc6e41.png" alt="Joke Image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For more jokes, and to submit your own joke to get featured, check out the &lt;a href="https://dailydeveloperjokes.github.io/"&gt;Daily Developer Jokes Website&lt;/a&gt;. We're also open sourced, so feel free to view &lt;a href="https://github.com/dailydeveloperjokes"&gt;our GitHub Profile&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leave-this-post-a-if-you-liked-todays-joke-and-stay-tuned-for-tomorrows-joke-too"&gt;
  &lt;/a&gt;
  Leave this post a ❤️ if you liked today's joke, and stay tuned for tomorrow's joke too!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This joke comes from &lt;a href="https://github.com/wesbos/dad-jokes"&gt;Dad-Jokes GitHub Repo by Wes Bos&lt;/a&gt; (thank you!), whose owner has given me permission to use this joke with credit.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>jokes</category>
      <category>dailydeveloperjokes</category>
    </item>
    <item>
      <title>⚡ Must read Tech news/tools of the day - Digest #5</title>
      <author>Hackertab 🖥️</author>
      <pubDate>Mon, 06 Sep 2021 12:00:06 +0000</pubDate>
      <link>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-5-2cei</link>
      <guid>https://dev.to/hackertab/must-read-tech-news-tools-of-the-day-digest-5-2cei</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJyfm8Xt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/kVzXltq.png" alt="articleImg"&gt;&lt;/a&gt;&lt;br&gt;
Each day we handpick the best web content across different websites eg: Hackernews, Github, Reddit... to help you stay updated with the hottest trends!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#level-up-your-skills-with-these-github-repositories"&gt;
  &lt;/a&gt;
  Level up your 🚀 skills with these Github repositories:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHVT2yX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://www.prodapt.com/wp-content/uploads/github.png" alt="Github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#liferestart"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/VickScarlet/lifeRestart"&gt;lifeRestart&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 VickScarlet | ⭐ +4,962 stars&lt;br&gt;
やり直すんだ。そして、次はうまくやる。&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#re3"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/GTAmodding/re3"&gt;re3&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 GTAmodding | ⭐ +6,328 stars&lt;br&gt;
GTA III, Vice City&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cplusplus"&gt;
  &lt;/a&gt;
  📙 &lt;a href="https://github.com/TheAlgorithms/C-Plus-Plus"&gt;C-Plus-Plus&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 TheAlgorithms | ⭐ +15,157 stars&lt;br&gt;
Collection of various algorithms in mathematics, machine learning, computer science and physics implemented in C++ for educational purposes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#hottest-devto-posts-"&gt;
  &lt;/a&gt;
  🎉 🔥 Hottest Devto posts :
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#aws-load-balancer-controller-on-eks-cluster"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/aws-builders/aws-load-balancer-controller-on-eks-cluster-38fk"&gt;AWS Load Balancer Controller on EKS Cluster&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Sivamuthu Kumar | 👍 +21 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bPtaBgim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fnG_7Ja2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhg3g0aspuwdl0kg9iyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bPtaBgim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fnG_7Ja2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhg3g0aspuwdl0kg9iyh.png" alt=""&gt;&lt;/a&gt;Hello all, Let's see how to enable AWS Load Balancer Controller on EKS Cluster to integrate the AWS...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animation-react-bemtevi"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/guscarpim/react-animation-bem-te-vi-ojl"&gt;Animation React - Bem-te-vi &lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Gustavo Scarpim | 👍 +23 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWJU9UXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ANZ0_ni2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9zu2tmqwj25bivowgvg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWJU9UXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ANZ0_ni2--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z9zu2tmqwj25bivowgvg.png" alt=""&gt;&lt;/a&gt;Today I'm bringing another animation made with GSAP / React, you can see in my github all the...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#middlewares-in-go"&gt;
  &lt;/a&gt;
  📝 &lt;a href="https://dev.to/karankumarshreds/middlewares-in-go-41j"&gt;Middlewares in Go&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;👤 Karan Kumar  | 👍 +30 reactions&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7BbOAdwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BmU2PCDw--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq5rfhwjwp4e6f6ma7xc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7BbOAdwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BmU2PCDw--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq5rfhwjwp4e6f6ma7xc.jpg" alt=""&gt;&lt;/a&gt;Today we will learn how to implement middlewares in Go and also we will learn how to chain the...&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#keep-an-eye-on-these-cool-products-too"&gt;
  &lt;/a&gt;
  👀 Keep an eye on these cool products too:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#squareone"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/squareone-2?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;SquareOne&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +100 | 💬 +35 &lt;br&gt;
Breakup with CRM admin&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pDRY78Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/0ce3c664-21eb-440f-a580-9c076ad3ae16.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDRY78Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ph-files.imgix.net/0ce3c664-21eb-440f-a580-9c076ad3ae16.gif%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="SquareOne"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#holly-health-20"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/holly-health-2-0?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;Holly Health 2.0&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +50 | 💬 +21 &lt;br&gt;
The adaptive and personalised burnout prevention coach&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5unacis--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/2fdecb7c-4984-4ebf-a2e0-b1a698f5197b.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5unacis--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/2fdecb7c-4984-4ebf-a2e0-b1a698f5197b.png%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="Holly Health 2.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ethtalk"&gt;
  &lt;/a&gt;
  🔧 &lt;a href="https://www.producthunt.com/posts/ethtalk?utm_campaign=producthunt-api&amp;amp;utm_medium=api-v2&amp;amp;utm_source=Application%3A+Hackertab+%28ID%3A+42881%29"&gt;ETHTalk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;🔺 +16 | 💬 +6 &lt;br&gt;
A comments widget for the Ethereum ecosystem&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--moK637P_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/edd4af25-fbd3-42f6-9ba9-c85c15cdb21d.jpeg%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--moK637P_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ph-files.imgix.net/edd4af25-fbd3-42f6-9ba9-c85c15cdb21d.jpeg%3Fauto%3Dformat%26fit%3Dcrop%26w%3D100%26h%3D100" alt="ETHTalk"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙌 Wrap Up!&lt;br&gt;
That was all for this day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-hackertab-on-twitter-for-more-tips-hackertabdev"&gt;
  &lt;/a&gt;
  Follow Hackertab on Twitter for more tips: &lt;a href="https://twitter.com/hackertabdev"&gt;@hackertabdev&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L6HrjVwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sYGs3ep.png" alt="Hackertab"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://hackertab.dev"&gt;Hackertab&lt;/a&gt; turns your New Tab page into a geeky one that keeps you as a developer updated with the best tools, news, jobs and events.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>hackertab</category>
    </item>
    <item>
      <title>Loading web workers using Webpack 5</title>
      <author>Matteo Mazzarolo</author>
      <pubDate>Mon, 06 Sep 2021 11:58:00 +0000</pubDate>
      <link>https://dev.to/mmazzarolo/loading-web-workers-using-webpack-5-4gcj</link>
      <guid>https://dev.to/mmazzarolo/loading-web-workers-using-webpack-5-4gcj</guid>
      <description>&lt;p&gt;Just wanted to share a few notes around the currently available options for loading web workers using webpack 5.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-workers-overview"&gt;
  &lt;/a&gt;
  Web Workers overview
&lt;/h2&gt;

&lt;p&gt;Web workers allow you to push work outside of main execution thread of JavaScript, making them convenient for lengthy computations and background work.&lt;/p&gt;

&lt;p&gt;Web workers are delivered as scripts that are loaded asynchronously using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Worker"&gt;Web Worker API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A worker is an object created using a constructor (e.g., &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker"&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt;) that runs a named JavaScript file.&lt;/p&gt;

&lt;p&gt;To create a new worker, all you need to do is call the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker"&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor, specifying the URI of a script to execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Assuming we're in a JavaScript script that runs in your main thread and that&lt;/span&gt;
&lt;span class="c1"&gt;// the worker script is available at yourdomain.com/worker.js, this will take&lt;/span&gt;
&lt;span class="c1"&gt;// care of spawning a new worker:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myWorker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since they’re loaded as separate scripts, web workers can’t be “bundled” within the code that runs in the main thread. This means that if you’re using a module bundler to bundle your code (e.g., Webpack, Rollup) you’ll have to maintain two separate build processes, which can be pretty annoying.&lt;/p&gt;

&lt;p&gt;The good news is that, if you’re using webpack, there are a couple of tools you can use to simplify the loading process of web workers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-workers-in-webpack-5"&gt;
  &lt;/a&gt;
  Web Workers in webpack 5
&lt;/h2&gt;

&lt;p&gt;Since webpack 5, &lt;a href="https://webpack.js.org/guides/web-workers/"&gt;web workers are first-class citizens&lt;/a&gt;, and you can use a specific syntax to let webpack automatically handle the creation of two separate bundles.&lt;br&gt;&lt;br&gt;
To do so, you must use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import.meta"&gt;&lt;code&gt;import.meta&lt;/code&gt; object&lt;/a&gt; (an object that exposes context-specific metadata) to provide the module URL to the &lt;code&gt;Worker()&lt;/code&gt; constructor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myWorker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that the &lt;code&gt;import.meta.url&lt;/code&gt; construct is available only available in ESM. Worker in CommonJS syntax is not supported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As of today, there’s not much documentation around webpack 5’s web worker supports. It indeed works pretty well for the most common use-cases and it’s a future-proof way to load web worker, but, for now, if you’re looking for a more flexible way to load web workers, you might want to take a look at &lt;a href="https://github.com/webpack-contrib/worker-loader"&gt;&lt;code&gt;worker-loader&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webpack-5-and-worker-loader"&gt;
  &lt;/a&gt;
  Webpack 5 and Worker Loader
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/webpack-contrib/worker-loader"&gt;&lt;code&gt;worker-loader&lt;/code&gt;&lt;/a&gt; is the pre-webpack-5 way to load web workers, and its documentation highlights how it’s &lt;strong&gt;not&lt;/strong&gt; compatible with webpack 5 (&lt;em&gt;“Worker Loader is a loader for webpack 4”&lt;/em&gt;).&lt;br&gt;&lt;br&gt;
Still, in my experience, besides a few quirks, &lt;code&gt;worker-loader&lt;/code&gt; &lt;strong&gt;can&lt;/strong&gt; be used with webpack 5, and it offers &lt;a href="https://github.com/webpack-contrib/worker-loader#options"&gt;several more customization options&lt;/a&gt; than webpack 5’s built-in web worker support.&lt;/p&gt;

&lt;p&gt;The most important ones are probably the support for inlining web workers as &lt;code&gt;BLOB&lt;/code&gt; and specifying a custom &lt;code&gt;publicPath&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#inlining-web-workers"&gt;
  &lt;/a&gt;
  Inlining web workers
&lt;/h3&gt;

&lt;p&gt;Web workers are restricted by a &lt;a href="https://en.wikipedia.org/wiki/Same-origin_policy"&gt;same-origin policy&lt;/a&gt;, so if your webpack assets are not being served from the same origin as your application, their download may be blocked by your browser.&lt;/p&gt;

&lt;p&gt;This scenario can commonly occur if you are serving the web worker from localhost during local development (e.g., with &lt;code&gt;webpack-dev-server&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// If the origin of your application is available at a different origin than&lt;/span&gt;
&lt;span class="c1"&gt;// localhost:8080, you won't be able to load the following web worker:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myWorker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8080/worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;worker-loader&lt;/code&gt; solves the local development issue by allowing you to inlining the web worker as a &lt;code&gt;BLOB&lt;/code&gt; (instead of pointing it to localhost) on development builds by specifying an &lt;code&gt;inline: "fallback"&lt;/code&gt; option:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// webpack.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;worker-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;inline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isDevelopment&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fallback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-fallback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#setting-a-workerspecific-raw-publicpath-endraw-"&gt;
  &lt;/a&gt;
  Setting a worker-specific &lt;code&gt;publicPath&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Another scenario where the same-origin policy might need some accommodations is if you’re hosting your main bundle code on a static CDN.&lt;br&gt;&lt;br&gt;
In this case, you’re probably going to set the &lt;code&gt;publicPath&lt;/code&gt; of your webpack &lt;code&gt;output&lt;/code&gt; to the CDN domain (e.g., &lt;code&gt;https://my-static-cdn&lt;/code&gt;), so that all the assets will reference it in production. Unfortunately, this pattern doesn’t work well when using web workers because you can’t reference a web worker that is hosted on a CDN (because of the same-origin policy):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Since the origin of the application (e.g., https://example.com) is different&lt;/span&gt;
&lt;span class="c1"&gt;// from the CDN one, you won't be able to load the following web worker:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myWorker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://my-static-cdn/worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What’s great about &lt;code&gt;worker-loader&lt;/code&gt;, is that you can solve this issue by setting a worker-specific &lt;code&gt;publicPath&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Set the publicPath of all assets generated by this webpack build to&lt;/span&gt;
    &lt;span class="c1"&gt;// https://my-static-cdn/.&lt;/span&gt;
    &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://my-static-cdn/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;worker-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;// Overrides the publicPath just for the web worker, marking it as&lt;/span&gt;
        &lt;span class="c1"&gt;// available on the same origin used by the app (notice that this is&lt;/span&gt;
        &lt;span class="c1"&gt;// a relative path).&lt;/span&gt;
        &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/workers/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#a-note-on-setting-workerloaders-raw-publicpath-endraw-with-webpack-5"&gt;
  &lt;/a&gt;
  A note on setting worker-loader’s &lt;code&gt;publicPath&lt;/code&gt; with webpack 5
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://webpack.js.org/guides/public-path/#automatic-publicpath"&gt;Webpack 5 introduced a mechanism to detect the &lt;code&gt;publicPath&lt;/code&gt; that should be used automatically&lt;/a&gt;. Sadly, the new automatic detection seems to be incompatible with &lt;code&gt;worker-loader&lt;/code&gt;’s &lt;code&gt;publicPath&lt;/code&gt;… but there are a couple of (hacky) ways you can solve this issue ;)&lt;/p&gt;

&lt;p&gt;The first one is to by setting the &lt;code&gt;publicPath&lt;/code&gt; on the fly.&lt;br&gt;&lt;br&gt;
Webpack 5 exposes a global variable called &lt;code&gt;__webpack_public_path__&lt;/code&gt; that allows you to do that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Updates the `publicPath` at runtime, overriding whatever was set in the&lt;/span&gt;
&lt;span class="c1"&gt;// webpack's `output` section.&lt;/span&gt;
&lt;span class="nx"&gt;__webpack_public_path__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/workers/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myWorker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/workers/worker.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Eventually, restore the `publicPath` to whatever was set in output.&lt;/span&gt;
&lt;span class="nx"&gt;__webpack_public_path__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://my-static-cdn/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;I recommend using webpack’s &lt;a href="https://webpack.js.org/plugins/define-plugin/"&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; to pass the public path as environment variables instead of hardcoding them in the source code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The other (even more hacky) option is to apply the following patch to &lt;code&gt;worker-loader&lt;/code&gt; (using &lt;a href="https://www.npmjs.com/package/patch-package"&gt;&lt;code&gt;patch-package&lt;/code&gt;&lt;/a&gt;, for example):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt; worker-loader+3.0.8.patch
&lt;span class="err"&gt;#&lt;/span&gt; Compatible only with worker-loader 3.0.8.
&lt;span class="gh"&gt;diff --git a/node_modules/worker-loader/dist/utils.js b/node_modules/worker-loader/dist/utils.js
index 5910165..2f2d16e 100644
&lt;/span&gt;&lt;span class="gd"&gt;-------- a/node_modules/worker-loader/dist/utils.js
&lt;/span&gt;&lt;span class="gi"&gt;+++ b/node_modules/worker-loader/dist/utils.js
&lt;/span&gt;&lt;span class="p"&gt;@@ -63,12 +63,14 @@&lt;/span&gt; function workerGenerator(loaderContext, workerFilename, workerSource, options) {
   const esModule = typeof options.esModule !== "undefined" ? options.esModule : true;
   const fnName = `${workerConstructor}_fn`;

+ const publicPath = options.publicPath ? `"${options.publicPath}"` : ' __webpack_public_path__';
&lt;span class="gi"&gt;+
&lt;/span&gt;   if (options.inline) {
     const InlineWorkerPath = (0, _loaderUtils.stringifyRequest)(loaderContext, `!!${require.resolve("./runtime/inline.js")}`);
     let fallbackWorkerPath;

     if (options.inline === "fallback") {
&lt;span class="gd"&gt;- fallbackWorkerPath = ` __webpack_public_path__ + ${JSON.stringify(workerFilename)}`;
&lt;/span&gt;&lt;span class="gi"&gt;+ fallbackWorkerPath = `${publicPath} + ${JSON.stringify(workerFilename)}`;
&lt;/span&gt;     }

     return `
&lt;span class="p"&gt;@@ -77,7 +79,7 @@&lt;/span&gt; ${esModule ? `import worker from ${InlineWorkerPath};` : `var worker = require($
 ${esModule ? "export default" : "module.exports ="} function ${fnName}() {\n return worker(${JSON.stringify(workerSource)}, ${JSON.stringify(workerConstructor)}, ${JSON.stringify(workerOptions)}, ${fallbackWorkerPath});\n}\n`;
   }

- return `${esModule ? "export default" : "module.exports ="} function ${fnName}() {\n return new ${workerConstructor}( __webpack_public_path__ + ${JSON.stringify(workerFilename)}${workerOptions ? `, ${JSON.stringify(workerOptions)}` : ""});\n}\n`;
&lt;span class="gi"&gt;+ return `${esModule ? "export default" : "module.exports ="} function ${fnName}() {\n return new ${workerConstructor}(${publicPath} + ${JSON.stringify(workerFilename)}${workerOptions ? `, ${JSON.stringify(workerOptions)}` : ""});\n}\n`;
&lt;/span&gt; } // Matches only the last occurrence of sourceMappingURL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more info, check this &lt;a href="https://github.com/webpack-contrib/worker-loader/issues/281"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Originally published at &lt;a href="https://mmazzarolo.com/blog/2021-09-03-loading-web-workers-using-webpack-5/"&gt;mmazzarolo.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>development</category>
      <category>webpack</category>
    </item>
    <item>
      <title>5 steps to build a crypto exchange like WazirX- WazirX clone script</title>
      <author>reyhanas</author>
      <pubDate>Mon, 06 Sep 2021 11:57:07 +0000</pubDate>
      <link>https://dev.to/reyhanas007/5-steps-to-build-a-crypto-exchange-like-wazirx-wazirx-clone-script-2ljc</link>
      <guid>https://dev.to/reyhanas007/5-steps-to-build-a-crypto-exchange-like-wazirx-wazirx-clone-script-2ljc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-quick-glance-at-wazirx"&gt;
  &lt;/a&gt;
  A Quick Glance at WazirX
&lt;/h2&gt;

&lt;p&gt;Recently, WazirX is one such cryptocurrency exchange which has been very much liked by Indians. This is because in a very short time, it’s amazing features have made everyone’s interest and together it is very easy to use it or its services. The basic objective of this company is how it can become India’s most trusted Bitcoin exchange. most of companies like to launch &lt;strong&gt;&lt;a href="https://radindev.com/wazirx-clone-script/"&gt;wazirx clone script&lt;/a&gt;&lt;/strong&gt; similar to wazirx.&lt;br&gt;
WazirX has now started its own token, which they named WRX Coin. Is kept, and which can be used by users in their platform. &lt;br&gt;
So today I thought that why should you be provided information about what Wazirx is and how it works so that you too can get some information about it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-nj6YcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhi5s7zre4t5jykn2616.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-nj6YcJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhi5s7zre4t5jykn2616.png" alt="features of wazirx exchange clone software"&gt;&lt;/a&gt;&lt;br&gt;
Part of the Malta-based Binance group, which has users in 180 countries, WazirX claimed $2.3 billion monthly volume and 1.75 million registered users on its platform. As per CoinMarketCap, WazirX was the 27th top crypto exchange globally based on traffic, liquidity, trading volumes, and confidence in the legitimacy of trading volumes. Its 24-hour trading volume stood at $218 million with 137 coins available for trading to customers.&lt;br&gt;
Global bitcoin exchange Binance-owned Indian cryptocurrency exchange WazirX has crossed $200 million in daily trading volume since its launch in March 2018. This is the highest trading volume by any crypto exchange in the Indian market, according to the company, amid the regulatory uncertainty over the use and adoption of cryptos by businesses and individuals in the country. “Daily trading volume shows the scale at which an exchange is operating. More volume leads to more liquidity and more liquidity ensures that traders get the best prices with the minimum spread between buying and selling. WazirX has the highest liquidity and trading volume in the INR market in India,” Nischal Shetty, Founder, WazirX told Financial Express Online. &lt;br&gt;
The startup had last year in March launched a $50 million ‘Blockchain for India’ fund to invest in crypto/blockchain startups in India. According to WazirX, there are more than 7 million people associated with over 7,500 crore crypto assets whose fate hangs in the balance until India regulates the crypto market. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bLPu2SYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d71cqmnvdalxeo0a40ff.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLPu2SYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d71cqmnvdalxeo0a40ff.jpeg" alt="wazirx exchange stats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-wazirx-exchange-platform"&gt;
  &lt;/a&gt;
  Features of Wazirx exchange platform
&lt;/h2&gt;

&lt;p&gt;Here are some of the noticeable features of the WazirX exchange that must be considered by those who want to build a crypto exchange like Wazirx.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;WazirX uses a real-time open order book system that equivalents the exchange of cryptocurrencies between buyers and sellers.&lt;/li&gt;
&lt;li&gt;WazirX has a crypto coin named WRX which can be used by traders for buying or selling other cryptocurrencies.&lt;/li&gt;
&lt;li&gt;The value of WRX has increased considerably over time just like Bitcoin or other altcoins.&lt;/li&gt;
&lt;li&gt;WazirX provides the feature for exchanging or selling of USDT (Tether) for INR with other traders. Tether being a stable coin equalizes its value with fiat currencies.&lt;/li&gt;
&lt;li&gt;The deposit and withdrawal rates provided by WazirX are super amazing with very little input of efforts.&lt;/li&gt;
&lt;li&gt;WazirX provides a facility of a digital wallet wherein you can store your digital assets with safety and protection.&lt;/li&gt;
&lt;li&gt;WazirX inherits the bitcoin escrow trading concept and it also regularly invests in the security audits which make it the most secure exchange in India.&lt;/li&gt;
&lt;li&gt;The KYC verification process takes a limited time but WazirX is further focusing to make it minimal to develop their service base.&lt;/li&gt;
&lt;li&gt;The system infrastructure of WazirX can handle millions of trading transactions per second, which makes it a faster trading network tool.&lt;/li&gt;
&lt;li&gt;There is also a native mobile app for crypto trading named “WazirX clone App development” which assists the traders to trade through their mobile devices.&lt;/li&gt;
&lt;li&gt;WazirX has presence across all platforms such as web, iOS, and Android with a fast and safe trading experience.&lt;/li&gt;
&lt;li&gt;The model of WazirX is based on Maker-Taker Model where the maker gets a bonus.
Maker — 0.20% bonus
Taker — 0.25% transaction fees&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-use-clone-scripts-and-what-are-the-benefits-made-by-clone-scripts"&gt;
  &lt;/a&gt;
  Why do we use clone scripts and what are the benefits made by clone scripts?
&lt;/h2&gt;

&lt;p&gt;Clone scripts help the business bloomers to start their own venture easily, quickly. A non-techie entrepreneur can survive in this digital business world with it. Clone script is used to copying or alternated an existing website and app or otherwise, a script is a new software to create a website and app. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-clone-scripts-are"&gt;
  &lt;/a&gt;
  Benefits of Clone scripts are:
&lt;/h3&gt;

&lt;p&gt;• Cost-effective&lt;br&gt;
• Easy to use&lt;br&gt;
• Come with core features of popular business modules&lt;br&gt;
• Well familiar with the market&lt;br&gt;
• Customizable or scalable, that can incorporate your business ideas&lt;br&gt;
• Lesser your source and energy&lt;br&gt;
• High chances to be succeeding easily&lt;br&gt;
• Face the competitive market with well-known design &amp;amp; workable functions&lt;br&gt;
• Currently updated to the market&lt;br&gt;
• Free and Paid Add-ons&lt;br&gt;
• Free Support &amp;amp; Service.&lt;br&gt;
• Exclusive offers&lt;br&gt;
• White labeling&lt;br&gt;
• Technical support of all forms.&lt;/p&gt;

&lt;p&gt;Now that we know the benefits of wazirx and clone scripts ... it's time to learn about the wazirx clone script and its structure, features, functions, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-buying-white-label-wazirx-clone-script"&gt;
  &lt;/a&gt;
  Benefits of buying white label wazirx clone script
&lt;/h2&gt;

&lt;p&gt;The popularity of cryptocurrency is unending these days. Crypto trading has evolved itself unexpectedly in a short duration of time. A few years ago, only technicians were aware of its practical benefits. Nowadays most people are aware of this tremendous technology and wish to invest in cryptocurrencies. &lt;br&gt;
The day would come soon when the market cap of the crypto market will outperform the entire market cap of various eminent banks in the world. According to various reports published from time to time, it has been pronounced that cryptocurrency has an unbeatable potential to navigate the whole digital market.&lt;br&gt;
The white label cryptocurrency exchange like WazirX is expanding globally and it offers over 40 cryptocurrencies available for trading in all the major countries. &lt;br&gt;
 WazirX launched a P2P trading platform that allows traders to buy and sell crypto directly from each other. It is the expanding popularity of WazirX that has encouraged many people across the globe to build a crypto exchange platform like WazirX.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-develop-a-crypto-exchange-like-wazirx"&gt;
  &lt;/a&gt;
  How to develop a crypto exchange like WazirX?
&lt;/h2&gt;

&lt;p&gt;To build an exchange platform like WazirX, you need to have a WazirX clone script that portrays all the features of the exchange.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-steps-to-start-a-business-from-clone-script-are"&gt;
  &lt;/a&gt;
  The steps to start a business from clone script are:
&lt;/h3&gt;

&lt;p&gt;1.Form a business plan according to the regional needs&lt;br&gt;
Wazirx is an online marketplace where people buy and sell each other bitcoins, ether, dash and other virtual money. The platform acts as the only intermediary that brings the buyer and seller together and provides tools for an honest exchange or chat, where you can arrange a personal meeting.&lt;br&gt;
To search for counterparties, Wazirx users publish ads in which they indicate the amount of the exchange, rate (course) and acceptable (available) payment methods: cryptocurrency, PayPal, bank transfers, cash and more. Anyone can respond to such an announcement, provided that the transaction does not imply restrictions on location.&lt;br&gt;
The crypto buying and selling process is quite simple:&lt;br&gt;
A.We are looking for an ad with the right cryptocurrency and an acceptable rate.&lt;br&gt;
B.We contact the counterparty and agree on the transaction amount and method of payment. There is a possibility of escrow funds.&lt;br&gt;
C.We are making a deal. Write a comment about the second side. &lt;/p&gt;

&lt;p&gt;To guarantee an honest exchange on the website, smart contracts with escrow are used. To reduce fraud, with other methods of exchange on the site, a system of reviews and reputation ratings has been introduced.&lt;/p&gt;

&lt;p&gt;2.Look for the perfect clone script providers with good reviews&lt;br&gt;
To give wings to your dream of developing your desired business platform at an affordable price within a short while, you have to opt for clone scripts instead of building an app from scratch. All you need to know first is the significance of these Clone scripts. Once you have understood the significance of such clone scripts, the next step is to look for the exact place to find a clone script that stands out from the rest available online. Only a ready-made solution that's carefully developed would have been through a rigorous testing process and its adaptable nature can help you to modify it to fit as per your business plan. Thus, this satisfies the prime need of developing an efficiently performing website for being successful in your online business venture. To find an authentic clone script, you have to approach a notable and trustworthy app development company. This is because only a company that's committed, driven, and the one that is aware of its clientele demands can help you with materializing your business dreams. Another prime reason why you should look for an authentic clone script from a renowned and trustworthy web and mobile app development company is, you aren’t looking for a typical clone script.&lt;/p&gt;

&lt;p&gt;3.Talk with them and share the business details&lt;br&gt;
Ask your clone script developer how many parallel users can the app handle before becoming too slow. It is considered a good solution if it can handle at least 100 simultaneous users. That is if hundred people are using it at any point of time.&lt;br&gt;
4.Get the consultation from the experienced clone script providers&lt;br&gt;
The script is usually developed by well-experienced and qualified experts. They take care of everything from development, design, testing, and deployment, allowing you to focus on just the customization part. There are many advantages involved with purchasing and deploying a Wazirx clone script for your business. Let’s find out what they are:&lt;br&gt;
1.A Wazirx clone script relieves you from the long, tedious development process and the costs and resources incurred for development. It comes readily-available, enabling a quick launch at a cost-effective price. &lt;br&gt;
2.A Wazirx clone script supports multiple cryptocurrencies and multiple languages that will help you broaden your user base just like the original Wazirx model. &lt;br&gt;
3.A Wazirx clone script comes with similar advanced trading tools, technology implementations, exchange infrastructure, and features that fit both experienced and new traders. &lt;br&gt;
4.Transactions will be of low costs similar to Wazirx, therefore more trades, which means more profits for both traders and the exchange owner. &lt;br&gt;
5.Wazirx clone script will bring in more liquidity and the high capacity of handling multiple transactions per second. &lt;br&gt;
6.A Wazirx clone script offers a wide range of customization options for the users, in terms of name, logo, brand, UX/UI, color themes, etc. Also, it is completely pre-tested before being delivered hence it assures bug-free operations, more reliability, security, and sustainability. &lt;/p&gt;

&lt;p&gt;5.Tie-up after the analysis of price estimates and compare with them.&lt;br&gt;
This is how a Wazirx clone script works. With the intensely growing demand and competition, several companies around the world have started offering a Wazirx clone script for businesses. To choose the right one for yours, look if the script comprises the following features. &lt;/p&gt;

&lt;p&gt;There are a lot of remarkable and advanced security features in order to build Wazirx clone software. These features are:&lt;br&gt;
Accessible with multiple Platforms&lt;br&gt;
A wide range of cryptocurrency&lt;br&gt;
Advanced trading tools&lt;br&gt;
Fast transaction&lt;br&gt;
Advanced UI/UX &lt;br&gt;
Payment gateway integration&lt;br&gt;
Trading bot&lt;br&gt;
KYC/AML Verification&lt;br&gt;
IEO Launchpad&lt;br&gt;
Support Multiple wallets&lt;/p&gt;

&lt;p&gt;Pros and Cons of Wazirx Clone Script:&lt;/p&gt;

&lt;p&gt;Pros of Wazirx Clone Script&lt;br&gt;
• User Friendly UI&lt;br&gt;
• Flexible Payment gateways&lt;br&gt;
• Multi-lingual support&lt;br&gt;
• Reviews and Ratings&lt;br&gt;
• Security and Trustable exchange&lt;br&gt;
• Bypass the middleman &lt;br&gt;
• Probably the lowest price of all coins in India&lt;br&gt;
• Speedy transactions&lt;br&gt;
• WRX tokens&lt;br&gt;
• Cutting Edge Technology&lt;br&gt;
• QR Code Scanner&lt;br&gt;
• Operating System&lt;/p&gt;

&lt;p&gt;Cons&lt;br&gt;
The transaction fee is a little bit high.&lt;br&gt;
If you want to know further details regarding the exchange here is a link to Wazirx’s White paper.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-process-of-wazirx-clone-software-as-per-the-section"&gt;
  &lt;/a&gt;
  The process of Wazirx clone software as per the section.
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;User Registration: Users have to register their necessities details like email id, phone number, a password for signup. Once registered, they will be assigned specific wallets.&lt;/li&gt;
&lt;li&gt;Explore offer: Sellers should post their offers like cryptocurrency type, rate, and payment method for the transaction.&lt;/li&gt;
&lt;li&gt;Notify the offers: Buyers will receive notification from those selling offerings and select the suitable things as per their needs.&lt;/li&gt;
&lt;li&gt;Secure Authentication: Once the buyer confirms their transfer, a chat popup appears and negotiations between two parties.&lt;/li&gt;
&lt;li&gt;Payment option: The buyers can pay through various payment options that are available on this platform.&lt;/li&gt;
&lt;li&gt;Transfer: In time, the seller can verify the transaction, and admin escrows release the requested payment of the cryptos from their wallet to the buyer wallet.&lt;/li&gt;
&lt;li&gt;If you are a seller - Wazirx clone will not release your USDT to the buyer until you make a confirmation on the receipt of payment. &lt;/li&gt;
&lt;li&gt;If you are a buyer - Wazirx clone software will hold the seller's USDT until you make a payment to the seller. The System will detect and resolves any dispute that occurs between the buyer and a seller. KYC details can be verified for every user before allowing them to trade on the platform and thus keeps a record on each and every transaction that occurs on the exchange.&lt;/li&gt;
&lt;li&gt;Cash In - If you want to bring fiat money to trade cryptocurrencies, Buy USDT via P2P and then use that Usdt to buy other cryptocurrencies on Wazirx.&lt;/li&gt;
&lt;li&gt;Cash Out - In case you want to move Fiat money to your bank account, sell your cryptocurrencies for USDT and then sell that USDT for fiat.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rq9Jo0sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntn1oo5t0dtnusp3w409.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rq9Jo0sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntn1oo5t0dtnusp3w409.png" alt="wazirx p2p clone software"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wazirx-p2p"&gt;
  &lt;/a&gt;
  WazirX P2P
&lt;/h2&gt;

&lt;p&gt;Traditionally, peer-to-peer systems are classified listings where you need to go through the following steps to purchase cryptocurrencies with fiat money:&lt;br&gt;
Scroll through each order listing&lt;br&gt;
Analyse each order volume, price, and payment method to figure if it aligns with your requirements&lt;br&gt;
Choose multiple orders depending on your trade size&lt;br&gt;
Figure out the legitimacy of each trader before you deal with them&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---9kE80yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hhefyxnpnlt8ygkvpeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---9kE80yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hhefyxnpnlt8ygkvpeu.png" alt="wazirx p2p exchange development"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-how-wazirx-p2p-works"&gt;
  &lt;/a&gt;
  Here’s how WazirX P2P works:
&lt;/h3&gt;

&lt;p&gt;Buyer places USDT buy order, gets instantly auto-matched with a seller&lt;br&gt;
Pays directly to the seller’s bank account&lt;br&gt;
Both buyer and seller confirm sending and receiving payment respectively&lt;br&gt;
WazirX transfers the escrowed USDT to the buyer’s wallet&lt;/p&gt;

&lt;p&gt;Moreover, the &lt;strong&gt;&lt;a href="https://radindev.com/p2p-crypto-exchange-script/"&gt;p2p crypto exchange software development&lt;/a&gt;&lt;/strong&gt; has been designed in a way that matching and order-completion happen in record time. It’s hassle-free with zero learning curve, and available 24x7.&lt;/p&gt;

&lt;p&gt;Since its inception, WazirX P2P has been a game changer in the Indian cryptocurrency ecosystem. In 2018, when traditional P2P options launched in India, WazirX P2P emerged as the top choice for users.&lt;br&gt;
Multiple P2P trade matches happen every minute, and 90% of P2P trades complete within 10 minutes. P2P is growing at a rate of over 9.5% every month.&lt;br&gt;
Total P2P trades: 1.3 Million Average execution, time taken: 15 minutes&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wazirx-exchange-clone-script-security-features"&gt;
  &lt;/a&gt;
  WazirX exchange clone script Security features
&lt;/h2&gt;

&lt;p&gt;Major chunk of funds in cold storage&lt;br&gt;
Multi-signature wallet system&lt;br&gt;
Each fund withdrawal request needs a two-factor authentication&lt;br&gt;
Strong KYC/AML guidelines&lt;br&gt;
Regular security audits&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>p2p</category>
    </item>
  </channel>
</rss>
