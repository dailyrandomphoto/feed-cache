<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Reason to learn docker as a web developer</title>
      <author>vishwasnarayanre</author>
      <pubDate>Mon, 10 May 2021 20:30:30 +0000</pubDate>
      <link>https://dev.to/vishwasnarayan5/reason-to-learn-docker-as-a-web-developer-3960</link>
      <guid>https://dev.to/vishwasnarayan5/reason-to-learn-docker-as-a-web-developer-3960</guid>
      <description>&lt;p&gt;Reason to learn docker as a web developer&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portability"&gt;
  &lt;/a&gt;
  Portability
&lt;/h1&gt;

&lt;p&gt;You can create a docker image with the files and the configurations, share it in the docker hub and then share it so that you have the same infrastructure is the same.&lt;/p&gt;

&lt;p&gt;Even in terms of the developer environment for the local testing and also in deploying it on the different cloud platform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reusability"&gt;
  &lt;/a&gt;
  Reusability
&lt;/h1&gt;

&lt;p&gt;Similar to being portable they can be configured for the future projects. You can have a very general Virtual Host for the deployment of the websites you can set certain flags and switches for the deployment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#better-understanding-of-the-infrastructure"&gt;
  &lt;/a&gt;
  Better understanding of the infrastructure
&lt;/h1&gt;

&lt;p&gt;MERN stack, WAMP stack and a lot of the other Infrastructure for the projects in windows will be un understood as we have an GUI as way to communicate with the system but while developing the Dockerfile you can learn a lot about the file system of the stack basically you can use ubuntu for the development locally and testing it locally but you can get the actual knowledge about the software/technology file system through docker only.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#backups"&gt;
  &lt;/a&gt;
  Backups
&lt;/h1&gt;

&lt;p&gt;In docker we can have different mount points in the container and endpoints can be defined in the Dockerfile,which is certain file system entry points where the files live in the host system and also in the volumized containers. (you will learn these exclusively in the docker compose).&lt;/p&gt;

&lt;p&gt;you can copy and detach those mount points and put them from one container to another container.&lt;/p&gt;

&lt;p&gt;You can copy a file to the &lt;code&gt;WORKDIR&lt;/code&gt; mentioned by the user and then use it as a mount point and then detach and use it as folder in the other container.&lt;/p&gt;

&lt;p&gt;docker volumes comes after the docker compose thus make sure that you are following me for the updates.&lt;/p&gt;

&lt;p&gt;and obviously for&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#isolation"&gt;
  &lt;/a&gt;
  Isolation
&lt;/h1&gt;

&lt;p&gt;Isolation in web development is very important for example shared hosting, a lot of the projects have a shared hosting sometimes a project might require a different version of the software dependency, with the docker image you are isolated to that container that you are using thus you can change the image as required by you and you can deploy it later.(lets say JDK version ,alpine version and so on).&lt;/p&gt;

&lt;p&gt;Thank you all.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>webdev</category>
      <category>webperf</category>
      <category>devops</category>
    </item>
    <item>
      <title>Take Screenshot Of HTML Element Using JavaScript</title>
      <author>Bibek</author>
      <pubDate>Mon, 10 May 2021 19:49:31 +0000</pubDate>
      <link>https://dev.to/bibekkakati/take-screenshot-of-html-element-using-javascript-13b7</link>
      <guid>https://dev.to/bibekkakati/take-screenshot-of-html-element-using-javascript-13b7</guid>
      <description>&lt;p&gt;Hello everyone 👋&lt;/p&gt;

&lt;p&gt;A few months back, I was working on a web-based project where a feature was required that is to take a screenshot of an HTML div in the browser and show it to the user. I was like, &lt;em&gt;sorry this is not possible&lt;/em&gt;. Then I did some research and got to know about this library called &lt;a href="https://html2canvas.hertzen.com/"&gt;html2canvas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So in this article, I will show how can we capture a screenshot of a web page or any element of it using &lt;code&gt;html2canvas&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the javascript file: &lt;a href="https://html2canvas.hertzen.com"&gt;html2canvas&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;Include the &lt;code&gt;html2canvas.min.js&lt;/code&gt; file in your HTML file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;...
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./html2canvas.min.js"&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will use the &lt;code&gt;html2canvas&lt;/code&gt; method to capture the screenshot of our web page or the HTML element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;html2canvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;allowTaint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useCORS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// It will return a canvas element&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDataURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;image/png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Handle errors&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;html2canvas&lt;/code&gt; method takes two arguments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;first is the HTML element whose screenshot you want.&lt;/li&gt;
&lt;li&gt;second is a configuration object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;code&gt;configuration object&lt;/code&gt;, we are using&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;allowTaint&lt;/code&gt; to allow cross-origin images to taint the canvas.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useCORS&lt;/code&gt; to attempt to load images from a server using CORS.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You can find the available configuration options &lt;a href="https://html2canvas.hertzen.com/configuration"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then we are converting the returned &lt;code&gt;canvas&lt;/code&gt; into a base64 image URL using the &lt;code&gt;toDataUrl&lt;/code&gt; method which expects two arguments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;type&lt;/code&gt; : image format.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;encodingOptions&lt;/code&gt; : number between 0 and 1 indicating the image quality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's it, we captured the screenshot of our HTML element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important
&lt;/h3&gt;

&lt;p&gt;This library has some issues, some of them are mentioned in the &lt;a href="https://github.com/niklasvh/html2canvas"&gt;docs&lt;/a&gt;. I recommend going through it and understand it before using it in any production-based environment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are aware of other ways to achieve a similar kind of result, please feel free to share.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;Check out the GitHub &lt;a href="https://github.com/bibekkakati/blogs-projects/tree/main/web/html-screenshot"&gt;Repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Try it out here: &lt;a href="https://bibekkakati.github.io/blogs-projects/web/html-screenshot/"&gt;Live&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Enjoyed? Give it a thumbs-up 👍&lt;/p&gt;

&lt;p&gt;Thank you for reading | Feel free to &lt;a href="https://bibekkakati.me"&gt;connect&lt;/a&gt; 👋&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally published on &lt;a href="https://blog.bibekkakati.me/take-screenshot-of-html-element-using-javascript"&gt;blog.bibekkakati.me&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bibekkakati"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pOmeWpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbibekkakati%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Hiring manager interviewing for A+ JavaScript developer.</title>
      <author>Dmitry Amelchenko</author>
      <pubDate>Mon, 10 May 2021 19:25:51 +0000</pubDate>
      <link>https://dev.to/dmitryame/hiring-manager-interviewing-for-a-javascript-developer-59ph</link>
      <guid>https://dev.to/dmitryame/hiring-manager-interviewing-for-a-javascript-developer-59ph</guid>
      <description>&lt;p&gt;&lt;code&gt;A small team of A+ players can run circles &lt;br&gt;
around a giant team of B and C players.&lt;/code&gt; &lt;br&gt;
                              - &lt;a href="https://www.quotemaster.org/author/Steve+Jobs"&gt;Steve Jobs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wisaw.com/photos/4432"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gjoJSMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.wixstatic.com/media/c90e7e_e7acbbf9322b456c905cabde62301b02%257Emv2.png/v1/fill/w_720%2Ch_478%2Cal_c%2Cq_90%2Cusm_0.66_1.00_0.01/c90e7e_e7acbbf9322b456c905cabde62301b02%257Emv2.webp" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview-process-is-more-of-an-art-than-a-science"&gt;
  &lt;/a&gt;
  Interview process is more of an art than a science.
&lt;/h2&gt;

&lt;p&gt;There are as many opinions on how to properly conduct interview, as there are people out there. &lt;/p&gt;

&lt;p&gt;Everyone will have techniques which work for them. Here I will share my personal approach to the interview process and what I'm trying to pursue when talking to developers. &lt;/p&gt;

&lt;p&gt;My goal is not to test particular set of skills. After all, I'm only a hiring manager, and I should expect people working on my team to know more than I do. Developers know better what questions will let them shine during the interview. As such, the most important question to ask is -- "tell me what should I ask you"?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common-sense-rule-requires-us-to-diversify"&gt;
  &lt;/a&gt;
  Common Sense rule requires us to diversify.
&lt;/h2&gt;

&lt;p&gt;Wether we talk about financial portfolio or team of individuals tasked with solving tough challenges -- everyone will benefit from diversification. People of different races, genders, religious believes, musical preferences, cultural backgrounds  working together on the same team will produce much better outcome than the team of individuals who are exactly alike. It's time-tested and proven by science -- there is no better way to build resiliency in your organization than to diversify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-interview-is-a-two-way-street"&gt;
  &lt;/a&gt;
  The interview is a two way street.
&lt;/h2&gt;

&lt;p&gt;It's just as important for me, as a hiring manager, to sell the job to the candidate, as to the developers to sell what they bring on a table.&lt;/p&gt;

&lt;p&gt;The goal of the interviewer (me) is to spark an excitement. And it's not easy to fake the excitement. &lt;/p&gt;

&lt;p&gt;You don't want to hire a developer who is in this occupation only because it pays well. Money is a nice supplement that most A+ players get by default anyways. The A+ geeks are looking for their next cool project just as badly as the hiring manager is looking for the A+ engineer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#software-engineering-is-a-lifestyle"&gt;
  &lt;/a&gt;
  Software engineering is a lifestyle.
&lt;/h2&gt;

&lt;p&gt;This life style is not suited for everyone --  A+ developer is the one who makes a conscious decision to live this way. You want to hire a developers who treat their job as a hobby.  &lt;a href="https://dev.to/thewebguyy/motivation-doesn-t-matter-1ji0"&gt;Motivation does not matter&lt;/a&gt;  but boredom is the worse thing that can happen to an organization. If you end up with the team of B's and C's -- boredom will destroy your company. The goal is to filter A+ engineers from the crowd of "copy paste design pattern" practitioners that are in this job only for the money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#most-questions-are-openended-there-is-no-right-or-wrong-answer"&gt;
  &lt;/a&gt;
  Most questions are open-ended -- there is no right or wrong answer.
&lt;/h2&gt;

&lt;p&gt;There are no specific coding or algorithm questions. These types of questions  prove little. A+ developer should be able to figure it out on a job in no time -- give an A+ developer Google search, team of other geeks who respect each other based on what they do (not their titles), and miracles will start to happen. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-outcome"&gt;
  &lt;/a&gt;
  The best outcome
&lt;/h2&gt;

&lt;p&gt;is, when I (the hiring manager), learn something new from the candidate. Honestly, I do not always understand what exactly the interviewee is talking about, which is totally cool -- I will google for the answers later. Often I will go "Wow" few days after the interview. We expect the candidate to come prepared and, sometimes, ask to follow up on some questions. Why shouldn't candidate expect the same in return?&lt;/p&gt;

&lt;p&gt;Java Script is in high demand these days. This specific article is sharing thoughts on how to filter A+ JS developer from the pool of B's and C's. Hoverer similar techniques can apply to any language. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spoiler-alert"&gt;
  &lt;/a&gt;
  Spoiler alert.
&lt;/h2&gt;

&lt;p&gt;If you ever apply for a job on my team, in this article I will give you some hints about what I expect to hear during the interview, but, I'm going to warn you -- if you are a true A+ type, you have nothing to worry about :) However, the B's and the C's most likely will not pass the BS filter, because this is how this process is designed to work. But hey, no worries, the job market is really hot these days -- you will find some other place were you will be earning lots of cash and will be happy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-finally-here-is-the-list-of-questions"&gt;
  &lt;/a&gt;
  And finally, here is the list of questions:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#common-performance-issues-of-react-apps-common-techniques-for-react-and-react-native-optimization"&gt;
  &lt;/a&gt;
  Common performance issues of react apps. Common techniques for react and react native optimization?
&lt;/h3&gt;

&lt;p&gt;Java Script is old, clunky, sometimes convoluted, but -- it's still the most used computer language in the world today and for good reason. React is as well one of the most influential presentation frameworks built in JS. &lt;/p&gt;

&lt;p&gt;If you are passionate about Java Script, and if you position yourself as an A+ dev -- you could not escape hearing about React. Just like JavaScript language, React framework is not perfect. Tell me what you love/hate about React. Tell me how do you work around these challenges. What makes you excited or frustrated -- I want to know about your personal experience and opinion. Tell me what was the last challenge you were able to overcome in React, brag about how elegant your solution was, what kind of performance boost you were able to achieve in numbers. This is perfect timing to share some code samples if you have any, or feel free to grab a marker and go wild on the white board.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#higher-order-components-hoc-vs-hooks-whats-your-preference-why"&gt;
  &lt;/a&gt;
  Higher order components (HOC) vs Hooks? What's your preference? Why?
&lt;/h3&gt;

&lt;p&gt;If you've been around for a while, you must have heard that React core team has changed approach to component composition 3 times in the past 5 years. Hooks are the most recent change, which replace HOC's. Do you know what was React using for composition prior to HOC?  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#expo-managed-life-cycle-benefits-do-you-think-the-managed-workflow-is-preferred-and-why"&gt;
  &lt;/a&gt;
  Expo managed life cycle benefits? Do you think the managed workflow is preferred and why?
&lt;/h3&gt;

&lt;p&gt;The same logic applies here as to the last couple of questions. If you've established yourself as an A+ kind, you had to get curious about Mobile development, since mobile user engagement is on a trajectory to overtake web apps. For a JS developer, looking to build Mobile apps, React-Native should be high on the list. In addition to this, Expo is very cool, I think it's no brainer, every React-Native developer will prefer to use expo. If you like Expo, please explain why? There is no right or wrong answer. My personal preference is to always use Expo managed life cycle, but hey, perhaps this is because I'm not a developer any more. Please teach me what should I use and why? If there is something better than Expo for building Mobile apps -- please tell me why is it preferred option for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-dev-environment-do-you-use-and-why"&gt;
  &lt;/a&gt;
  What dev environment do you use and why?
&lt;/h3&gt;

&lt;p&gt;Mac/Pc? Brew? IDE?  Perhaps it's VIM, could be Emacs or Atom, Visual Studio or WebStorm? There is no right or wrong answer. Tell me why your Editor is the best choice for JS development. Why your dev environment makes you A+ developer? &lt;/p&gt;

&lt;p&gt;It's also cool to talk about NPMjs ecosystem here. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-was-the-last-bookarticle-youve-read-about-js"&gt;
  &lt;/a&gt;
  What was the last book/article you've read about JS?
&lt;/h3&gt;

&lt;p&gt;Books are a way of the past. No one reads books to obtain technical knowledge any more. Perhaps I'm completely wrong. Tell me the book I should read about JS. &lt;/p&gt;

&lt;p&gt;Are you subscribed to any JS mailing lists from which you are learning to improve your JS skills daily? &lt;a href="https://www.medium.com"&gt;medium.com&lt;/a&gt;? &lt;a href="https://dev.io"&gt;dev.io&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;How do you keep your JS skills sharp and up to date? &lt;/p&gt;

&lt;p&gt;Do you attend  local or online meetups regularly? Which ones should I join?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#js-evolution-common-js-es67-typescript-personal-preference"&gt;
  &lt;/a&gt;
  JS evolution? Common JS? Es6/7? Typescript? Personal preference?
&lt;/h3&gt;

&lt;p&gt;Let's talk about JS evolution. This is where "copy paste design pattern" will fail -- in JS you must understand how some of the latest cool trends like TypeScript and Es6/7 transpile down to Common JS. Why do we have such things as Polyfill and Babel?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-spread-operator-how-it-works"&gt;
  &lt;/a&gt;
  What is spread operator? How it works?
&lt;/h3&gt;

&lt;p&gt;Most likely, if you are truly the A+ type, you will already have answered this question when we were talking about JS evolution. Just a friendly reminder, it's OK to be more specific about Es6/7 features you are passionate about. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asyncawait-in-js-how-it-works-promises-callbacks"&gt;
  &lt;/a&gt;
  Async/Await in JS, how it works? Promises? Callbacks?
&lt;/h3&gt;

&lt;p&gt;The same as for the previous question. If you really love JS -- here is the great opportunity for you to rave about callback hell, what it is and how to address it elegantly in JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preferred-database"&gt;
  &lt;/a&gt;
  Preferred Database?
&lt;/h3&gt;

&lt;p&gt;Variety of options are available these days. Let's share our passionate view points about what is the best DB to be used in a JS project and why? What are different types of DB's that are better suited for specific use cases? &lt;/p&gt;

&lt;p&gt;You personal approach to Object Relational mapping in JS? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#restful-api-basic-principles"&gt;
  &lt;/a&gt;
  Restful API? Basic principles?
&lt;/h3&gt;

&lt;p&gt;Even if you are not going to be tasked with building back-end API's, you still have to know basic RestFull principles. What framework first popularized use of Rest? (Ruby on Rails). What are the other principles which made Rails popular back in the days? Have you heard of "Do not Repeat Your Self" (DRY) and "Convention over Configuration"?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-lambda-limitations"&gt;
  &lt;/a&gt;
  AWS Lambda limitations?
&lt;/h3&gt;

&lt;p&gt;The only reason I'm asking about AWS Lambda, because I've used it myself. &lt;/p&gt;

&lt;p&gt;In this question I want to make sure that we agree -- there is no such thing as unlimited computing resources. Even in AWS, there are boundaries and constraints which, if you know what they are, will help you to better design your function as a service. &lt;/p&gt;

&lt;p&gt;No need to give precise numbers, but what should we be aware of and pay attention to when designing FAAS ? &lt;/p&gt;

&lt;p&gt;Does not have to be AWS Lambda, could be Google Cloud or Microsoft Azure, or somethings else. I bet they all have similar limitations around payload size, memory availability, length of execution and concurrent execution limits. &lt;/p&gt;

&lt;p&gt;What do you know about CDN's and Edge network?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-node-scale-for-the-backend"&gt;
  &lt;/a&gt;
  What makes node scale for the back-end?
&lt;/h3&gt;

&lt;p&gt;Why backend built in node can out-scale Java based server? You must have already talked about it when we were discussing callbacks and promises. Just another friendly reminder to talk about it -- it's important. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-was-the-coolest-challenge-you-solved-recently"&gt;
  &lt;/a&gt;
  What was the coolest challenge you solved recently
&lt;/h3&gt;

&lt;p&gt;This is my most favorite question. If I had only one question to ask -- this would be it. &lt;/p&gt;

&lt;p&gt;As I already hinted you -- you should not expect a coding assignment during my interview. &lt;/p&gt;

&lt;p&gt;If I was to give you a coding assignment, it would be more of a demonstration of my superiority as a coder, because you will never know exactly how I would prefer you to code the challenge.&lt;/p&gt;

&lt;p&gt;This should be all about you, so, don't hesitate to go wild -- impress me. Could be a framework that you published as npmjs, or a 3 lines function that you wrote which makes your friends go "wow". I promise -- I will appreciate anything that makes you proud of your achievements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-are-some-bonus-questions"&gt;
  &lt;/a&gt;
  Here are some bonus questions
&lt;/h2&gt;

&lt;p&gt;Most likely, by now, we've talked about a lot of different things, and you are as excited about joining my team as I am excited about you coming aboard. Just in case we still have time left, here are some extra stuff to chat about. The chance is we already touched upon some or most of it. If not -- see the  list below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graph-ql"&gt;
  &lt;/a&gt;
  Graph QL?
&lt;/h3&gt;

&lt;p&gt;What's so cool about graph QL? Where did it come from? What challenges is it trying to solve. How does it compare to Rest? Any good/bad GraphQL frameworks you'd recommend to use or stay away from?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-principles-of-functional-programming-what-makes-it-differentbetter-than-oop-fp-languages-youve-used-liked-disliked"&gt;
  &lt;/a&gt;
  Basic principles of functional programming? What makes it different/better than OOP? FP languages you've used, liked, disliked?
&lt;/h3&gt;

&lt;p&gt;Ideally the answers will revolve around JS. However, totally appropriate to talk about high level concepts in any language, such as pure functions, state manipulation, closures, functions composition and currying etc...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#name-few-js-fp-libraries-pros-and-cons"&gt;
  &lt;/a&gt;
  Name few JS FP libraries? Pros and Cons?
&lt;/h3&gt;

&lt;p&gt;If you are passionate about functional programming in JS, you've got to know about some history of libraries.&lt;/p&gt;

&lt;p&gt;What are the commonly used functional libraries in JS, what are they trying to solve and how:&lt;/p&gt;

&lt;p&gt;lodash, ramda, sanctuary?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And that's  all folks.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Hope you've had fun during the interview. Perhaps you found some of my questions a bit controversial, perhaps you were able to spot some mistakes. But hey, I never said I know everything better than you do. Please let me know if I should make any corrections --  this is just one more thing that may potentially gain you a spot on my team. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wisaw.com/photos/4443"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeuDoUG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.wixstatic.com/media/c90e7e_f41701db2af94a1db16c9a0e480ab465%257Emv2.png/v1/fill/w_698%2Ch_950%2Cal_c%2Cq_90/c90e7e_f41701db2af94a1db16c9a0e480ab465%257Emv2.webp" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The article is reposted from &lt;a href="https://www.echowaves.com/post/hiring-manager-interviewing-for-a-javascript-developer"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>interview</category>
      <category>react</category>
    </item>
    <item>
      <title>How to query specific line(s) from a file using GitHub APIs</title>
      <author>Tamimi Ahmad</author>
      <pubDate>Mon, 10 May 2021 19:21:07 +0000</pubDate>
      <link>https://dev.to/tweettamimi/how-to-query-specific-line-s-from-a-file-using-github-apis-ckl</link>
      <guid>https://dev.to/tweettamimi/how-to-query-specific-line-s-from-a-file-using-github-apis-ckl</guid>
      <description>&lt;h1&gt;
  &lt;a href="#permalinks"&gt;
  &lt;/a&gt;
  Permalinks
&lt;/h1&gt;

&lt;p&gt;One of the neat features about GitHub is the generation of permalinks urls that highlights a range of line numbers. This is particularly useful when you want to highlight a chunk of code or a line to show it to someone else. &lt;/p&gt;

&lt;p&gt;To do so, just navigate to the file you want on github and click on one line, hit the &lt;code&gt;Shift&lt;/code&gt; key and click on the end line for the code block. This generates a URL with the highlighted block content that you can then use for sharing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/G95PmK5apUwnpCynwL/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/G95PmK5apUwnpCynwL/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tip: You can just add &lt;code&gt;#L{start_line}-L{end_line}&lt;/code&gt; to the URL as follows&lt;br&gt;
&lt;code&gt;https://github.com/{org_name}/{repo_name}/{path_to_file}#L{start_line}-L{end_line}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note: You can &lt;em&gt;perhaps&lt;/em&gt; do the same thing with other version control platforms like bitbucket or gitlabs but I have not checked.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#show-me-the-api"&gt;
  &lt;/a&gt;
  Show me the API!
&lt;/h1&gt;

&lt;p&gt;I was recently working on a project that dynamically generates code snippet from files hosted on github. Naturally, I referred to GitHub's APIs to query file content. Simple right? Well let's dig deeper into it. &lt;/p&gt;

&lt;p&gt;Navigating through &lt;a href="https://docs.github.com/en/rest"&gt;Github's APIs&lt;/a&gt;, I was disappointed to find out there is no API that query a &lt;strong&gt;specific line number(s)&lt;/strong&gt; from a file. The &lt;a href="https://docs.github.com/en/github/searching-for-information-on-github/searching-on-github"&gt;Search API&lt;/a&gt; only allows to query the full content of the file. No problem, let's dig into coding logic for post processing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/llKJGxQ1ESmac/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/llKJGxQ1ESmac/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#show-me-the-code"&gt;
  &lt;/a&gt;
  Show me the code!
&lt;/h1&gt;

&lt;p&gt;To bypass this limitation, I was able to fetch the content of the file using the SearchAPI as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orgName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;baseURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.github.com/repos/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;orgName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/contents/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?ref=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Error fetching content from &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Response status from &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="c1"&gt;// Content body from github is base64 encoded&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;Base64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetchContent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orgName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;repoName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This brings in the whole file as text with new line delimiters presented as &lt;code&gt;\n&lt;/code&gt;. You see where I'm going with this 👀&lt;/p&gt;

&lt;p&gt;From here, you can &lt;code&gt;split()&lt;/code&gt; the text content using &lt;code&gt;\n&lt;/code&gt; as the separator and store it in an array&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And then simply generate the snippet using a &lt;code&gt;getSlice(content,range)&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;snippet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getSlice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where getSlice is defined as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Splits the content given the range a-b or just line number a&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getSlice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: range is passed as a string with a &lt;code&gt;-&lt;/code&gt; delimiter between the start_line and end_line&lt;/p&gt;

&lt;p&gt;And thats it! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h1&gt;

&lt;p&gt;Did you find this useful? I am curious to know if anyone has another approach for this since GitHub does not have an API to do so (yet!) &lt;/p&gt;

</description>
      <category>node</category>
      <category>github</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Datagoose, JSON Based Database for Best Performance.</title>
      <author>5elenay</author>
      <pubDate>Mon, 10 May 2021 19:02:43 +0000</pubDate>
      <link>https://dev.to/5elenay/datagoose-json-based-database-for-best-performance-41bb</link>
      <guid>https://dev.to/5elenay/datagoose-json-based-database-for-best-performance-41bb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#datagoose"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Datagoose&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;Datagoose is an &lt;strong&gt;easy to use&lt;/strong&gt; JSON based database for python.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#with-datagoose"&gt;
  &lt;/a&gt;
  With Datagoose:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Best performance. Datagoose is a lightweight database.&lt;/li&gt;
&lt;li&gt;Methods that makes your job easier.&lt;/li&gt;
&lt;li&gt;Regex supports.&lt;/li&gt;
&lt;li&gt;Safe to use.&lt;/li&gt;
&lt;li&gt;Auto or manual save, for who wants better performance.&lt;/li&gt;
&lt;li&gt;Easy to use database. Created for everyone.&lt;/li&gt;
&lt;li&gt;Rich options. includes hash keys, database path, garbage leak option and more.&lt;/li&gt;
&lt;li&gt;Auto backup&lt;/li&gt;
&lt;li&gt;Can be dumped, also can load a data from JSON file.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Datagoose&amp;gt;.load()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Datagoose&amp;gt;.dump()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/5elenay/datagoose"&gt;Click&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h1&gt;

&lt;p&gt;You can download with &lt;code&gt;pip install -U datagoose&lt;/code&gt; (&lt;a href="https://pypi.org/project/datagoose/"&gt;PyPi Page&lt;/a&gt;) or, you can use with source code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#quick-documentation"&gt;Quick Documentation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#quick-documentation"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#inserting-data"&gt;Inserting Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#finding-data"&gt;Finding Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#updating-data"&gt;Updating Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#deleting-data"&gt;Deleting Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#count--exists"&gt;Count &amp;amp; Exists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#using-regex"&gt;Regex Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#load--dump"&gt;Load &amp;amp; Dump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#copying-data"&gt;Copying Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#collecting-garbage-data"&gt;Collecting Garbage Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#sorting-database"&gt;Sorting Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/5elenay/datagoose/blob/main/README.md#auto-backup"&gt;Auto Backup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h1&gt;

&lt;p&gt;Test Result (Auto-Save Enabled):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h2&gt;
  &lt;a href="#100-data-with-insert-many"&gt;
  &lt;/a&gt;
  100 Data with insert many:
&lt;/h2&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Starting Insert...
Inserting Finished in  0:00:00.007002
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;h2&gt;
  &lt;a href="#1000-data-with-insert-many"&gt;
  &lt;/a&gt;
  1,000 Data with insert many:
&lt;/h2&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Starting Insert...
Inserting Finished in  0:00:00.032004
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;h2&gt;
  &lt;a href="#10000-data-with-insert-many"&gt;
  &lt;/a&gt;
  10,000 Data with insert many:
&lt;/h2&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Starting Insert...
Inserting Finished in  0:00:00.278020
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;h2&gt;
  &lt;a href="#100000-data-with-insert-many"&gt;
  &lt;/a&gt;
  100,000 Data with insert many:
&lt;/h2&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Starting Insert...
Inserting Finished in  0:00:02.808687
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;h2&gt;
  &lt;a href="#1000000-data-with-insert-many"&gt;
  &lt;/a&gt;
  1,000,000 Data with insert many:
&lt;/h2&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Starting Insert...
Inserting Finished in  0:00:31.908481
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#random-example-code"&gt;
  &lt;/a&gt;
  Random Example Code
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datagoose&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Datagoose&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="c1"&gt;# Getting Database
# Will create a new JSON file if not exists.
&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Datagoose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"AUTO_SAVE"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"PATH"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"dg/databases"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# insert many function example.
&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert_many&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"NAME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"eric"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"kyle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"ike"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
        &lt;span class="s"&gt;"LAST_NAME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;"cartman"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"marsh"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
        &lt;span class="s"&gt;"AGE"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"POINT"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10_000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;"UID"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10_000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# find and sort function example (you can use regex.)
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_and_sort&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="s"&gt;"NAME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"eric|kyle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"LAST_NAME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;"cartman"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"AGE"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s"&gt;"POINT"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>json</category>
      <category>database</category>
    </item>
    <item>
      <title>ChatBots for Business</title>
      <author>Spurwing</author>
      <pubDate>Mon, 10 May 2021 18:58:19 +0000</pubDate>
      <link>https://dev.to/spurwing/chatbots-for-business-2gj7</link>
      <guid>https://dev.to/spurwing/chatbots-for-business-2gj7</guid>
      <description>&lt;p&gt;Savvy and Strategic Businesses Are Implementing ChatBots in Their Operations to improve efficiency, productivity and reputation.&lt;/p&gt;

&lt;p&gt;While people have been predicting that robots were going to take over the human workforce for decades, few (if any) assumed that the “initial wave” in this hostile takeover would be in the form of ChatBots that exist almost entirely online!&lt;/p&gt;

&lt;p&gt;On top of that, most wouldn’t have guessed that entrepreneurs and business owners aren’t just eager and excited about bringing ChatBots on board their operation – many are rushing to do so at almost breakneck pace.&lt;/p&gt;

&lt;p&gt;What makes ChatBots so special? Why are businesses looking to leverage them as quickly as possible today? Let’s dig a little deeper and find out!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-chatbots-to-begin-with"&gt;
  &lt;/a&gt;
  Why Use Chatbots to Begin With?
&lt;/h3&gt;

&lt;p&gt;The folks at Oracle estimate that nearly 80% of all businesses (small, medium, and large) will be using ChatBot technology by the end of 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQJq2hwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4cym2g6ysqxk7jxhsm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQJq2hwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4cym2g6ysqxk7jxhsm7.png" alt="chatbot messenger for business"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That would be a major leap forward in widespread adaptation, considering the fact that even just five years ago not even 10% of businesses had even heard of ChatBots before.&lt;/p&gt;

&lt;p&gt;What’s driving businesses to invest so much in these AI tools? What’s the &lt;strong&gt;payoff&lt;/strong&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#huge-time-and-money-saver"&gt;
  &lt;/a&gt;
  Huge Time and Money Saver
&lt;/h3&gt;

&lt;p&gt;Businesses are (understandably) always looking for ways to &lt;strong&gt;save time&lt;/strong&gt;, &lt;strong&gt;save money&lt;/strong&gt;, and &lt;strong&gt;conserve resources&lt;/strong&gt; – especially when you’re talking about the always expensive human resources.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxRkksQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2palpbb9i1pog6reucf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxRkksQj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2palpbb9i1pog6reucf.png" alt="chatbot business productivity"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rather than employ massive customer service teams staffed by real people responsible for answering the same customer service questions over and over again, ChatBots can be used to “lighten the load” and handle a lot of high-level customer service needs instead.&lt;/p&gt;

&lt;p&gt;Obviously, leaner team of customer service agents can then be kept on for more personalized or complex service requests. But the ChatBots can handle the bulk of the heavy lifting, freeing up time, money, and resources that can be diverted elsewhere.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#faster-customer-service"&gt;
  &lt;/a&gt;
  Faster Customer Service
&lt;/h3&gt;

&lt;p&gt;Study after study shows that poor &lt;strong&gt;response time&lt;/strong&gt; to even the most mundane customer service requests can do insane damage to a businesses brand and reputation.&lt;/p&gt;

&lt;p&gt;Customers today expect service (and responses to their questions or concerns) as quickly as humanly possible, sometimes just a few minutes after they’ve made their request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P9MEN7M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71m1livk32jy7fq1atdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P9MEN7M9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71m1livk32jy7fq1atdk.png" alt="chatbot for time management"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In the real world of business – especially online business, with customers from around the world facilitated by websites that are up 24/7 – expecting that kind of response time from human customer service agents isn’t reasonable, let alone physically possible.&lt;/p&gt;

&lt;p&gt;With ChatBots, though, having a 24/7 customer service department with almost &lt;strong&gt;instant response time&lt;/strong&gt; isn’t just possible it’s almost effortless to implement.&lt;/p&gt;

&lt;p&gt;Simple requests can be managed by the ChatBots and if things get too complex for the AI to handle a note to the customer letting them know that human customer service agents will handle things from there (as quickly as possible) is usually more than enough to keep your customers happy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eliminates-human-error"&gt;
  &lt;/a&gt;
  Eliminates Human Error
&lt;/h3&gt;

&lt;p&gt;The beautiful thing about ChatBot AI tools is that they are &lt;strong&gt;100% programmable&lt;/strong&gt;, operate based off of instructions that are set in stone, and will always – ALWAYS – behave the way that they have been programmed to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1KAEhw7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d2nw8upbhqkes8oxxlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1KAEhw7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d2nw8upbhqkes8oxxlo.png" alt="chatbot for business"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The same cannot be said about human employees.&lt;/p&gt;

&lt;p&gt;The best and most consistent training in the world cannot account for human error, fatigue, simple mistakes and accidents, or people “running off script” and handling customer interactions anyway at they’d like to.&lt;/p&gt;

&lt;p&gt;With ChatBots you never have that problem.&lt;/p&gt;

&lt;p&gt;You &lt;strong&gt;eliminate human error&lt;/strong&gt;, you streamline and systemize interactions with your customers, and you guarantee that the exact same response (relevant, targeted response) is provided every time a specific type of question or prompt is provided.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#almost-unlimited-flexibility"&gt;
  &lt;/a&gt;
  (Almost) Unlimited Flexibility
&lt;/h3&gt;

&lt;p&gt;The coolest thing about ChatBot technology is that we are literally in the infancy of these tools and how they can be used in the world of business today.&lt;/p&gt;

&lt;p&gt;The flexibility, adaptability, and capabilities of these tools are incredible right now – but they are only going to get even more powerful and even more useful as time goes on.&lt;/p&gt;

&lt;p&gt;Combine that with the fact that these tools can be used in every industry imaginable, from e-commerce to healthcare and everything in between, and it’s easy to see that the world of business is going to be dominated by AI influenced ChatBots sooner rather than later!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--quqyS1mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzzd53b7l5uymn2h4ior.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--quqyS1mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzzd53b7l5uymn2h4ior.png" alt="spurwing appointment scheduling api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appointment-scheduling"&gt;
  &lt;/a&gt;
  Appointment Scheduling
&lt;/h3&gt;

&lt;p&gt;What many ChatBot solutions are missing is the ability to schedule appointments with clients, say a demo or support call between a team member and a (potential) client. Thanks to the Spurwing API we can easily integrate Appointment Scheduling solutions into (almost) any popular ChatBot framework out there.&lt;/p&gt;

&lt;p&gt;Here's a demo we built for Facebook Messenger:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--30Vvd8W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brlf9qlk6i4ffusky6bg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30Vvd8W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brlf9qlk6i4ffusky6bg.gif" alt="i0xx9mxr4wtf9iqncnkj"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Integrating Scheduling Features is pretty much a piece of cake, we have already built and implemented many popular platforms on our Open Source GitHub &lt;a href="https://github.com/Spurwing/Chat-Bots"&gt;marketplace&lt;/a&gt;: Slack, Discord, Facebook Messenger and many more are currently being developed (Intercom, WhatsApp, Skype, Amazon Lex, Google Chat, ...).&lt;/p&gt;

&lt;p&gt;If your business uses a specific or custom ChatBot solution and needs Scheduling features integrated then we can help you.&lt;br&gt;
Website: &lt;a href="https://www.spurwing.io/"&gt;https://www.spurwing.io/&lt;/a&gt;&lt;br&gt;
Blog: &lt;a href="https://dev.to/spurwing"&gt;https://dev.to/spurwing&lt;/a&gt;&lt;br&gt;
Marketplace: &lt;a href="https://github.com/Spurwing"&gt;https://github.com/Spurwing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>node</category>
      <category>python</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Build a Generic CRUD API with ASP.NET Core</title>
      <author>Guillermo Verón</author>
      <pubDate>Mon, 10 May 2021 18:11:45 +0000</pubDate>
      <link>https://dev.to/guivern/build-a-generic-crud-api-with-asp-net-core-adf</link>
      <guid>https://dev.to/guivern/build-a-generic-crud-api-with-asp-net-core-adf</guid>
      <description>&lt;p&gt;In the process of creating CRUD controllers, we can repeat a lot of code and go against the &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt; principle. To avoid that, I'm going to show you how to build a generic base controller, then you will only have to create controllers that inherit from the base controller, and that's it. The controllers will already have the basic CRUD methods.&lt;/p&gt;

&lt;p&gt;I saw a lot of articles about the Generic Repository Pattern. What I'm going to show you &lt;strong&gt;is not&lt;/strong&gt; a Repository Pattern. EF Core is already based on the Unit of Work and Repository Pattern. Thus, we can use the DbContext class directly from our controllers, and that's what we're going to do. Anyway, you can find more information about Using a custom repository versus using EF DbContext directly &lt;a href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-implementation-entity-framework-core#using-a-custom-repository-versus-using-ef-dbcontext-directly"&gt;here&lt;/a&gt;. With that said, let's start to build our Generic CRUD API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Base Model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At first, let's define the base model for our entities. For operations like edit and delete we need an Id property, and we can have some timestamp properties for audit as well. So &lt;code&gt;EntityBase&lt;/code&gt; looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Models&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntityBase&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;ModificationDate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Generic Base Controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, we are ready to implement our generic controller. It will be an abstract class because it will be the base class for our controllers, and we'll mark the CRUD methods as virtual since we need to be able to override them in our inherited controllers if necessary. So &lt;code&gt;CrudControllerBase&lt;/code&gt; looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.EntityFrameworkCore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Controllers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ApiController&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"api/[controller]"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CrudControllerBase&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EntityBase&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;DataContext&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;CrudControllerBase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DataContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_context&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;List&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;entities&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;ToListAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entities&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpGet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{id}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Detail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;FindAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Ok&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CreationDate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;AddAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;CreatedAtAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Detail"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpPut&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{id}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;virtual&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;BadRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;EntityExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModificationDate&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EntityState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="k"&gt;try&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DbUpdateConcurrencyException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;NoContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;HttpDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{id}"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;Delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;FindAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;NotFound&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveChangesAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;NoContent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;EntityExists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;AnyAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;_context.Set&amp;lt;T&amp;gt;()&lt;/code&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Returns a DbSet instance for access to entities of the given type in the context and the underlying store.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Inheriting from the Generic Base Controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's time to see our base controller in action, for this we're going to create a &lt;code&gt;TodoItem&lt;/code&gt; controller by extending the &lt;code&gt;CrudControllerBase&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Models&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TodoItem&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EntityBase&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;IsComplete&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Models&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.AspNetCore.Mvc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;GenericCrudApi.Controllers&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TodoItemsController&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CrudControllerBase&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TodoItem&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;TodoItemsController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DataContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;base&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;){}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it. Now we can test the HTTP methods with Postman:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Rs6W0Kx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620588521936/KgZwWkeyD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Rs6W0Kx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620588521936/KgZwWkeyD.png" alt="Captura de pantalla de 2021-05-09 15-28-26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import the &lt;a href="https://www.postman.com/collections/9bfc4efac35251fc3be4"&gt;Postman collection&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;View or download the sample code on &lt;a href="https://github.com/guivern/GenericCrudApi/tree/main"&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, to finish implementing our base controller and make it completely reusable, we need to add filtering, sorting and pagination features. So if you liked this article, please let me know in the comments and stay around. I'm going to write about it in future articles. Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/guivern"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6twiS74P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dguivern%26button_colour%3D40DCA5%26font_colour%3Dffffff%26font_family%3DComic%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>React Without JSX</title>
      <author>mrwolferinc</author>
      <pubDate>Mon, 10 May 2021 18:11:16 +0000</pubDate>
      <link>https://dev.to/mrwolferinc/react-without-jsx-3kgm</link>
      <guid>https://dev.to/mrwolferinc/react-without-jsx-3kgm</guid>
      <description>&lt;p&gt;&lt;strong&gt;JSX is not a requirement for React.&lt;/strong&gt; Using React without JSX is especially convenient when you don't want to set up compilation in your build environment.&lt;/p&gt;

&lt;p&gt;This tutorial will show you how to use React without JSX. It will also show you how code written in JSX is converted to plain JavaScript.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-is-jsx"&gt;
  &lt;/a&gt;
  What is JSX?
&lt;/h1&gt;

&lt;p&gt;Consider the following variable decleration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello, world!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This strange tag syntax is neither a string nor HTML.&lt;/p&gt;

&lt;p&gt;It is called JSX, and it is a syntax extension to JavaScript. It is commonly used with React to describe what the UI should look like. JSX may remind you of a template language, but it comes with the full power of JavaScript.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#converting-to-javascript"&gt;
  &lt;/a&gt;
  Converting to JavaScript
&lt;/h1&gt;

&lt;p&gt;Each JSX element is actually syntactic sugar for calling the &lt;code&gt;React.createElement()&lt;/code&gt; method. This means that any code that is written in JSX can also be written in plain JavaScript.&lt;/p&gt;

&lt;p&gt;For example, this code is written in JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello, &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toWhat&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Hello&lt;/span&gt; &lt;span class="na"&gt;toWhat&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"world"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It can be compiled to this code that doesn't use JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`Hello, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toWhat&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toWhat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This happens because the JSX code is converted to JavaScript using the package &lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt; during compilation. If you're curious to see more examples of how this works, you can try out &lt;a href="https://babeljs.io/repl/"&gt;Babel's online compiler&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#shorthands"&gt;
  &lt;/a&gt;
  Shorthands
&lt;/h1&gt;

&lt;p&gt;If you get tired of typing &lt;code&gt;React.createElement&lt;/code&gt; so much, one common pattern is to assign a shorthand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello, world!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you use this shorthand form for &lt;code&gt;React.createElement&lt;/code&gt;, it can be almost as convenient to use React without JSX.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>WAO: How do you release software?</title>
      <author>Nathan Kallman</author>
      <pubDate>Mon, 10 May 2021 18:00:47 +0000</pubDate>
      <link>https://dev.to/kallmanation/wao-how-do-you-release-software-56jm</link>
      <guid>https://dev.to/kallmanation/wao-how-do-you-release-software-56jm</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@michalmatlon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michal Matlon&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/wrong-answer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#wrong-answers-only"&gt;
  &lt;/a&gt;
  Wrong Answers Only
&lt;/h1&gt;

&lt;p&gt;How do you release/deploy/package your software product (or service)?&lt;/p&gt;




&lt;p&gt;Comment your wrong answer!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>wronganswersonly</category>
    </item>
    <item>
      <title>Code sites to challenge your skills</title>
      <author>Chris Jarvis</author>
      <pubDate>Mon, 10 May 2021 17:56:48 +0000</pubDate>
      <link>https://dev.to/jarvisscript/code-sites-to-challenge-your-skills-g4g</link>
      <guid>https://dev.to/jarvisscript/code-sites-to-challenge-your-skills-g4g</guid>
      <description>&lt;p&gt;Last Time I wrote about Place for free Code tutorials, today I have an unsorted list of code challenge sites.&lt;/p&gt;

&lt;h2&gt;Exercism&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://exercism.io/"&gt;Exercism.io&lt;/a&gt; I was introduced to exercism at a local developer meet up, remember those? We would just split into some groups work on some exercises and then had group discussions on them. I recently picked back up on Exercism because VirtualCoffee group began doing channel with biweekly challenges.&lt;br&gt;
Exercism gives you a problem and some tests. Your challenge is  to write the code to pass the test. Once the code passes the test, you uncomment the next one and continue till you solve them all.&lt;br&gt;
Exercism has challenges in several language tracks. Once you solve an exercise you unlock another. They now have online mentors that will review your solutions. I just started using this feature. The mentors supplied some good tips to refactor the code and make the solutions more concise. The comments included links to documentation. I read the docs, made changes and improved my answers.&lt;/p&gt;

&lt;h2&gt;CodeWars&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.codewars.com/"&gt;Code Wars&lt;/a&gt; tests your skills with various challenges of increasing levels of difficulty. You can view other users solutions and chat with them. Users can earn badges. There's gamification and a dark mode option.&lt;/p&gt;

&lt;h2&gt;Hackerrank&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.hackerrank.com/"&gt;hacker rank&lt;/a&gt; is used by many employers to test candidates. It's good to familiarize yourself with the platform in case you have Code Challenge here. &lt;br&gt;
They have a series of tests called the HackerRank Interview Preparation Kit. It goes over topics that companies test the most. They even state what percentage of companies test a particular topic.&lt;/p&gt;

&lt;h2&gt;Other Code Challenge Sites&lt;/h2&gt;

&lt;p&gt;There are many other code challenge sites but for this post I just wanted to list some I have used personally. I didn't want to just list a bunch of them. Some time in the future I ,ay explore others.&lt;br&gt;
For now go out and explore a code challenge site to exercise your mind and skills.&lt;/p&gt;

</description>
      <category>codechallnge</category>
    </item>
    <item>
      <title>Practicing Confidence for the Job Search</title>
      <author>Abbey Perini</author>
      <pubDate>Mon, 10 May 2021 17:54:37 +0000</pubDate>
      <link>https://dev.to/abbeyperini/practicing-confidence-for-the-job-search-38nj</link>
      <guid>https://dev.to/abbeyperini/practicing-confidence-for-the-job-search-38nj</guid>
      <description>&lt;h1&gt;
  &lt;a href="#or-how-i-stopped-selfrejecting-and-embraced-selfpromotion"&gt;
  &lt;/a&gt;
  Or How I Stopped Self-Rejecting and Embraced Self-Promotion
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iWI2bTX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/315nalo5j30vfd8r5mri.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iWI2bTX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/315nalo5j30vfd8r5mri.gif" alt="A gif of Moira Rose from Schitt's creek saying &amp;quot;one must champion oneself and say I am ready for this.&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More than anything else, this article is here to tell you that you should absolutely toot your own horn. Much like how everyone should discuss their salary but doesn't want to, promoting yourself to employers is an often uncomfortable necessity of getting a job and getting compensated fairly.&lt;/p&gt;

&lt;p&gt;Luckily, confidence is something you can practice. I'm not talking about "fake it 'til you make it." You'll need to find ways to inspire confidence in yourself independent of the job search. I recommend creating a daily practice of it, just like you would meditation.&lt;/p&gt;

&lt;p&gt;As always, please remember, a rejection usually has more to do with the hiring manager than you. It is probable that every interviewer you will ever speak to has not been trained in interviewing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practicing-confidence"&gt;
  &lt;/a&gt;
  Practicing Confidence
&lt;/h2&gt;

&lt;p&gt;Write it down - digitally or handwritten. Keep a wins folder with every message, email, photo, etc. that reminds you that you are good at doing things. You can also keep a daily gratitude log. In my case, I write down one thing I can celebrate about my day. Don't know where to start? Check out Julia Evans' &lt;a href="https://jvns.ca/blog/brag-documents/"&gt;brag documents&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pick a goal - this one really depends on your personality. If you need smaller goals that you can check off, it might not be your main confidence builder. The productivity begets confidence begets productivity cycle can become a trap. I committed to "I will get a development role" after watching a Dolly Parton documentary where she stated that she knew she would make a music career happen before she even got to Nashville.&lt;/p&gt;

&lt;p&gt;Mantra - I'm a yoga teacher, so I love mantras. You can use mantras like "I am worthy" on a daily basis. Luvvie Ajayi Jones' book, &lt;em&gt;Professional Troublemaker: The Fear-Fighter Manual&lt;/em&gt;, has instructions on how to write your own hype mantra, which will make you feel like a hero.&lt;/p&gt;

&lt;p&gt;Building things - I personally get a lot of my self-confidence from creating things. The one caveat I will give is that if you're job searching for a coding role, you probably want to build things without code in real life in your spare time to boost yourself up. Also, pick things that are bite sized and achievable. No need to stress yourself out with your hobbies too.&lt;/p&gt;

&lt;p&gt;Vision board - My vision board is on a wall near my desk. I represented future goals with pictures and included quotes and small craft projects to remind myself of the feeling I was trying to create within myself on a daily basis.&lt;/p&gt;

&lt;p&gt;Support network/hype person - Call your mom. Call your friends. Tweet a plea for help. Really lean on the people in your life when you need it. After a really tough rejection, sometimes the only thing that helped was my friends reminding me that they think I'm awesome.&lt;/p&gt;

&lt;p&gt;Rest and activities that refuel you - Exercise, yoga and meditation, outdoor hobbies, indoor hobbies, spending time with your family, friends and pets. Get away from the computer. Put a phone timer on your email and LinkedIn. Take it from me, you can't job search and practice coding 24/7 and it won't help you if you do.&lt;/p&gt;

&lt;p&gt;I also recommend finding networking groups of people with similar backgrounds going through the same job search - a little community goes a long way. Examples include &lt;a href="https://virtualcoffee.io"&gt;Virtual Coffee&lt;/a&gt;, &lt;a href="https://www.womenwhocode.com/"&gt;Women Who Code&lt;/a&gt;, and &lt;a href="https://www.blacksintechnology.net/"&gt;Blacks In Technology&lt;/a&gt;. Search online for more in your area and watch for recommendations on social media like LinkedIn and Twitter.&lt;/p&gt;

&lt;p&gt;Did I miss a way that you practice confidence or a networking group you love? Let me know with a comment below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-your-new-confidence"&gt;
  &lt;/a&gt;
  Applying your new confidence
&lt;/h2&gt;

&lt;p&gt;First, you need a couple go-to hits to get over that icky shameful feeling about self-promotion. It could be the summary statement at the top of your technical resume - what are 3 things you know you're good at? They can be soft skills or a tool, framework, or methodology that you're really comfortable using. Literally practice telling anyone that you're good at those things. Could be your spouse or friend, but you've gotta let them know that you are an excellent problem solver with mega Angular skills. Once it feels even slightly natural, you're ready to start applying it to the job search.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#breaking-down-a-job-description"&gt;
  &lt;/a&gt;
  Breaking down a job description
&lt;/h2&gt;

&lt;p&gt;In my old role, I was responsible for reading a job description, pulling out the necessary information, and rewriting it so that when it was published on the internet, the recruiters would see the candidates with the best fit applying. Part of that was frequent calls with hiring managers to retool the original job description because the candidates submitted weren't what they were looking for. Here's how I flipped that for applying to jobs myself.&lt;/p&gt;

&lt;p&gt;The first thing I look at is the required requirements. Some companies will have a strict degree requirement. All of them will list a degree requirement. If I can speak to one bullet point in this section, I consider myself qualified to apply. &lt;/p&gt;

&lt;p&gt;If I can speak to a requirement like "experience with React," React becomes one of my keywords.&lt;/p&gt;

&lt;p&gt;Next I'll comb through preferred requirements, and if I can speak to one, I pull keywords from it as well. Then I'll look at the blurbs about the company and the role, to see if I can pull out any keywords from those. If there's not a descriptive blurb about the company and you want to go one step further, do research on their website, focusing especially on their listed goals, values, and mission statement.&lt;/p&gt;

&lt;p&gt;All of these keywords become jumping off points for explaining via a cover letter, resume, or interview question that you are the right person to hire.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cover-letter%C2%A0"&gt;
  &lt;/a&gt;
  Cover letter 
&lt;/h2&gt;

&lt;p&gt;A caveat: I have seen people talk about tailoring their resume for each job they apply to. I cannot speak to the efficacy of cover letters or tailoring your resume, but here's how I wrote the cover letters I did bother to write. This could easily be applied to tailoring a resume.&lt;/p&gt;

&lt;p&gt;Make yourself a template to save yourself stress and the time it takes to consider your opening and closing lines. For some reason, every cover letter I wrote started with "I would relish the opportunity to discuss the [Software Developer] role in depth." Spend the rest of the cover letter telling your potential employer how your experience lines up with the keywords you pulled from the job description. For example, if my keywords were "Adobe Creative Suite" and "front-end development," I'd write "my portfolio has examples of my use of Adobe Create Suite in conjunction with my front-end development skills."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resume%C2%A0"&gt;
  &lt;/a&gt;
  Resume 
&lt;/h2&gt;

&lt;p&gt;There's lots of advice out there for writing an Applicant Tracking System (ATS) compatible resume, so I'm only going to speak about career changes and gaps.&lt;/p&gt;

&lt;p&gt;If you are changing careers, your experience in a different industry still applies. Especially if you've pulled some soft skill keywords from the job description and you can explain how you demonstrated them in your old role. However, years of professional experience are still years of professional experience. That alone shows that you are a reliable employee if nothing else. People have described my switch from recruiting admin to software developer as "a complete 180." I would say that role helped me hone many skills applicable to software development like keeping up with conflicting priorities, communicating professionally, and hunting down the answers I need when I have no idea where to start. Many of my interviewers agreed. &lt;/p&gt;

&lt;p&gt;If you're a stay at home parent returning to the workforce, come up with your story about it and start practicing it now. Include it in your resume with skills you currently use that can apply to a job. Include your volunteer work and any organizations you were a part of. Unfortunately, you will be asked inappropriate questions. Sometimes companies require an explanation for any gap as part of their onboarding if they have strict verification processes. "I chose to stay home and exclusively raise my children because it was the best option for my family, financially and otherwise" is a perfectly sufficient answer. More often, interviewers think it's ok to ask pointed, biased questions. It is perfectly fine for you to ask how those questions are relevant and only give your practiced explanation for the gap. In fact, biased assumptions about parenthood affecting your ability to work is probably a red flag about the company culture.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
If you have a gap in employment for any other reason, you will have to practice an answer too. My gap was to get my yoga certification. When asked, I explained why I chose to pursue it when I did and why I chose to walk away from a yoga teacher career. I often describe how yoga helps me be a better person and employee. Just like with stay at home parents, if you don't want to explain in depth, "finding myself" is a perfectly acceptable answer. Some people know exactly what they want to do right off the bat and follow a linear career path. I don't think they are the majority.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview-questions"&gt;
  &lt;/a&gt;
  Interview questions
&lt;/h2&gt;

&lt;p&gt;Practice your answers to questions you know you will be asked like "tell us a little about yourself." Practice working the keywords you pull from the job description and company site into your answers. The goal is to become comfortable describing yourself in a positive light when in an interview setting. Remember, you can always ask for a second to think or for your interviewer to repeat or clarify the question. Once you don't have to scramble for your answers to every single question, the pressure you feel walking into an interview is significantly lessened.&lt;/p&gt;

&lt;p&gt;Also, don't forget to practice confidence right before an interview! It's easy to give into the self-doubt monster 30 minutes before that zoom call, but once you break the cycle and remain calm through most of an interview, the job search gets that much easier.&lt;/p&gt;

&lt;p&gt;For developers looking for their first tech role, practice how to describe your learning process and saying "I don't know but here's how I would find out." You are also interviewing the company, and if they're only looking for someone that already knows all the answers, they're probably not going to find a candidate anytime soon and you don't want to work for them anyway.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#networkingonline-presence"&gt;
  &lt;/a&gt;
  Networking/Online Presence
&lt;/h2&gt;

&lt;p&gt;Cold emailing/messaging is always awkward. Be nice and enthusiastic and don't be afraid to tell the person why you're contacting them, especially if it's because you think they're knowledgeable. You'll be surprised how many people love to hear you think they're an expert - they're probably not perfectly confident either!&lt;/p&gt;

&lt;p&gt;Share! Share! Share! You've got to practice your way out of that reticence to share. Tell everyone you know, "hey, I'm looking for a job right now." When you build or write a cool thing, share it on social media and show people! If you don't write, you could share your StackOverflow or Github. Explaining how your cool new app works to a layman, even if it's just your parents, will help you explain it in an interview.&lt;/p&gt;

&lt;p&gt;I did not feel 100% confident about the site and blog post I shared when I shared them, but they ended up being the catalyst that got me a job. Imperfect self-promotion will always win out over self-rejection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;References can be people you work with on coding projects. They don't have to be a former co-worker, so you can ask anyone you've worked with on an open source or volunteer project. Unless the company specifies that they want professional reference, they don't have to be someone you have worked with at all. I would avoid family members, but I've used friends as references plenty of times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Now I hope you'll see a job description or interview as an opportunity to show your strengths rather than opportunities to fail. A job description should be a tool for you to use to show another human who happens to be your interviewer that you can most certainly hit the ground running if they hire you. A cover letter, thank you note, resume, or online presence should be full of shameless self-promotion.&lt;/p&gt;

&lt;p&gt;6 months ago, I would not have described myself as a confident person. The people who have met me in the last few months would disagree. All I did was commit to practicing confidence over self-rejection and self-doubt. Just like a meditation practice, the idea is to practice enough that confidence becomes a tool you can lean on when your brain wants to doubt you. There is something that makes you unique and a great person to hire. Tell everyone about it.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>career</category>
      <category>womenintech</category>
      <category>technology</category>
    </item>
    <item>
      <title>Cheatsheet for the Regex Cheatsheet, Part V: Quantifiers</title>
      <author>Analogy | Absence | Example</author>
      <pubDate>Mon, 10 May 2021 17:52:30 +0000</pubDate>
      <link>https://dev.to/mathlete/cheatsheet-for-the-regex-cheatsheet-part-v-quantifiers-3504</link>
      <guid>https://dev.to/mathlete/cheatsheet-for-the-regex-cheatsheet-part-v-quantifiers-3504</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;I was recently doing a code challenge for a job interview that required me to strip out all nonalphabetic characters. "Ah! I should use Regular Expressions for this!" I thought in triumph, impressed that I even knew what regular expressions &lt;em&gt;were&lt;/em&gt;. That fleeting moment of glory faded once I decided to brush up on regular expressions and landed on the encouragingly-named &lt;a href="https://cheatography.com/davechild/cheat-sheets/regular-expressions/"&gt;Regular Expressions Cheatsheet&lt;/a&gt;. I had no idea how to use it!&lt;/p&gt;

&lt;p&gt;So, for people like me, here is a &lt;em&gt;Cheatsheet for the Regular Expressions Cheatsheet, Part V: Quantifiers&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TDUj3IeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/952eizrrs8n8c14nbfm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TDUj3IeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/952eizrrs8n8c14nbfm3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-an-quantifier"&gt;
  &lt;/a&gt;
  What's an Quantifier?
&lt;/h2&gt;

&lt;p&gt;A quantifier finds a sequence of characters to match. It also can be used to find a sequence of expressions to match, but I'm gonna keep it simple here and focus on sequences of characters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anatomy-of-a-regular-expression"&gt;
  &lt;/a&gt;
  Anatomy of a regular expression
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Forward slashes go on either end like so: &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;g&lt;/code&gt; for "global" at the end to find every instance, like so: &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/g&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;m&lt;/code&gt; to "multi line" to the beginning/end of each line, not just the beginning/end of each string, like &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/g&lt;/code&gt; or &lt;code&gt;/&lt;/code&gt;something&lt;code&gt;/gm&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#quantifiers"&gt;
  &lt;/a&gt;
  Quantifiers
&lt;/h2&gt;

&lt;h5&gt;
  &lt;a href="#-raw-endraw-0-or-more-instances-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;*&lt;/code&gt; 0 or more instances of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;*&lt;/code&gt; is used in &lt;code&gt;/ro*ar/&lt;/code&gt; to find the following:
&lt;em&gt;The lion said roar rooar roooar roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/KwCm09/1"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro*ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;roar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-raw-endraw-1-or-more-instances-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;+&lt;/code&gt; 1 or more instances of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;+&lt;/code&gt; is used in &lt;code&gt;/ro+ar/&lt;/code&gt; to find the following: 
&lt;em&gt;The lion said roar rooar roooar roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/UiZmpm/1"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro+ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;roar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-raw-endraw-0-or-1-instance-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;?&lt;/code&gt; 0 or 1 instance of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;?&lt;/code&gt; is used in &lt;code&gt;/ro?ar/&lt;/code&gt; to find the following: 
&lt;em&gt;The lion said roar rooar roooar roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/JQz9UY/1"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;roar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-raw-n-endraw-n-instances-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;{N}&lt;/code&gt; N instances of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;{3}&lt;/code&gt; is used in &lt;code&gt;/ro{3}ar/&lt;/code&gt; to find the following: 
&lt;em&gt;The lion said roar rooar roooar roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/VvSgrl/1"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro&lt;/span&gt;&lt;span class="se"&gt;{3}&lt;/span&gt;&lt;span class="sr"&gt;ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;roooar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-raw-n-endraw-at-least-n-instances-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;{N,}&lt;/code&gt; At &lt;em&gt;least&lt;/em&gt; N instances of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;{3,}&lt;/code&gt; is used in &lt;code&gt;/ro{3,}ar/&lt;/code&gt; to find the following: 
&lt;em&gt;The lion said roar rooar roooar 
roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/MVVz9H/1"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro&lt;/span&gt;&lt;span class="se"&gt;{3,}&lt;/span&gt;&lt;span class="sr"&gt;ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;roooar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-raw-nm-endraw-between-n-and-m-instances-of-a-character"&gt;
  &lt;/a&gt;
  &lt;code&gt;{N,M}&lt;/code&gt; Between N and M instances of a character
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;{2,4}&lt;/code&gt; is used in &lt;code&gt;/ro{2,4}ar/&lt;/code&gt; to find the following: 
&lt;em&gt;The lion said roar rooar roooar roooooooar!&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Example on &lt;a href="https://regex101.com/r/lGtayD/3"&gt;regex101.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Example in Javascript:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ro&lt;/span&gt;&lt;span class="se"&gt;{2,4}&lt;/span&gt;&lt;span class="sr"&gt;ar/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rooar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The lion said roar rooar roooar roooooooar!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
