<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Responsive Personal Portfolio Website with HTML CSS JS - Part 4</title>
      <author>Sadee</author>
      <pubDate>Tue, 09 Nov 2021 13:01:34 +0000</pubDate>
      <link>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-4-3dpp</link>
      <guid>https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-4-3dpp</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WJHRIxtfb7s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Responsive personal portfolio website with html css js&lt;/p&gt;

&lt;p&gt;In this video series, &lt;br&gt;
I will show you how to build a Complete Responsive Personal Portfolio Website using HTML CSS JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-features"&gt;
  &lt;/a&gt;
  üåü Website features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;5 pages&lt;/li&gt;
&lt;li&gt;Fully Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Awesome Page Navigation&lt;/li&gt;
&lt;li&gt;Filterable item showcase&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;HI üëã&lt;br&gt;
I'm Sadee (webdev)&lt;br&gt;
In this channel I make videos about Complete Responsive website.&lt;br&gt;
You can checkout my channel üëá&lt;/p&gt;

&lt;p&gt;üì∫ My Channel : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
üîî Subscribe : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g?sub_confirmation=1"&gt;subscribe now&lt;/a&gt;&lt;br&gt;
üïê New videos Every Friday &amp;amp; Tuesday&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#recommended-videos"&gt;
  &lt;/a&gt;
  üìπ Recommended Videos
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-1-3dlg"&gt;Part 1&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-2-l5"&gt;Part 2&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/codewithsadee/responsive-personal-portfolio-website-with-html-css-js-part-3-2m6a"&gt;Part 3&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#essential-links"&gt;
  &lt;/a&gt;
  üîó Essential links
&lt;/h2&gt;

&lt;p&gt;Images : &lt;a href="https://drive.google.com/file/d/1CZZcnaOEVDDneSve6qpSUoyAfEBuPrqD/view"&gt;image.zip&lt;/a&gt;&lt;br&gt;
Font : &lt;a href="https://fonts.google.com/specimen/Poppins?query=poppins"&gt;Poppins&lt;/a&gt;&lt;br&gt;
Ionicon : &lt;a href="https://ionic.io/ionicons"&gt;https://ionic.io/ionicons&lt;/a&gt;&lt;br&gt;
How to use ionicon : &lt;a href="https://youtu.be/TTrYjLOJeKs"&gt;https://youtu.be/TTrYjLOJeKs&lt;/a&gt;&lt;br&gt;
Source Code : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#timestamp"&gt;
  &lt;/a&gt;
  ‚è±Ô∏è Timestamp
&lt;/h2&gt;

&lt;p&gt;0:00 - Demo&lt;br&gt;
0:58 - Blog section&lt;br&gt;
6:50 - Media queries&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#like-follow-amp-subscribe-me"&gt;
  &lt;/a&gt;
  üë§ Like - Follow &amp;amp; Subscribe Me
&lt;/h2&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/codewithsadee"&gt;https://twitter.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Github : &lt;a href="https://github.com/codewithsadee"&gt;https://github.com/codewithsadee&lt;/a&gt;&lt;br&gt;
YouTube : &lt;a href="https://www.youtube.com/channel/UC1PZHWV6VvICTL1LgFUZq6g"&gt;codewithsadee&lt;/a&gt;&lt;br&gt;
Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;https://www.buymeacoffee.com/codewithsadee&lt;/a&gt;&lt;br&gt;
Patreon : &lt;a href="https://www.patreon.com/codewithsadee"&gt;https://www.patreon.com/codewithsadee&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/codewithsadee"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qhS87mRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kn6vwn4mulhsx6o69is.png" alt="Buy Me A Coffee" width="225" height="51"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>27 open-source tools that can make your Kubernetes workflow easier üöÄü•≥</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Tue, 09 Nov 2021 13:00:59 +0000</pubDate>
      <link>https://dev.to/signoz/27-open-source-tools-that-can-make-your-kubernetes-workflow-easier-5ai2</link>
      <guid>https://dev.to/signoz/27-open-source-tools-that-can-make-your-kubernetes-workflow-easier-5ai2</guid>
      <description>&lt;p&gt;Kubernetes is complex, as &lt;strong&gt;&lt;a href="https://www.theregister.com/2021/02/25/google_kubernetes_autopilot/"&gt;accepted by Google itself&lt;/a&gt;&lt;/strong&gt;. If you need more proof, here is an interesting collection of &lt;strong&gt;&lt;a href="https://k8s.af/"&gt;Kubernetes failure stories&lt;/a&gt;&lt;/strong&gt;. But Kubernetes is also a powerful container orchestration engine for automating deployment, scaling and management of containerized application. So the way forward is to make Kubernetes easier.&lt;/p&gt;

&lt;p&gt;And fortunately there are some amazing tools available that can help you with your Kubernetes workflow. Here's a list of 27 open-source tools that can make your Kubernetes workflow easier:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minikube"&gt;
  &lt;/a&gt;
  Minikube
&lt;/h3&gt;

&lt;p&gt;Minikube helps you to quickly set up a local Kubernetes cluster on macOS, Linux, and Windows. It is primarily focused to support local Kubernetes app development and help new Kubernetes users learn.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kubernetes/minikube"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20evB26M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/minikube.webp" alt="Minikube" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubebox"&gt;
  &lt;/a&gt;
  Kubebox
&lt;/h3&gt;

&lt;p&gt;Kubebox is a terminal and web console for Kubernetes. It can be a great tool for Kubernetes admins. Some of its key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Configuration from kubeconfig files&lt;/li&gt;
&lt;li&gt;Switch contexts interactively&lt;/li&gt;
&lt;li&gt;Namespace selection and pods list watching&lt;/li&gt;
&lt;li&gt;Container resources usage (memory, CPU, network, file system charts)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/astefanutti/kubebox"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c6CZPrZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubebox.webp" alt="kubebox" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kops"&gt;
  &lt;/a&gt;
  Kops
&lt;/h3&gt;

&lt;p&gt;kOps is a popular Kubernetes operations tool. kOps is like a &lt;code&gt;kubectl&lt;/code&gt; for clusters. It can help you create, destroy, upgrade and maintain production-grade, highly available Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kubernetes/kops"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kUHKUK37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kops.webp" alt="kops" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubeburner"&gt;
  &lt;/a&gt;
  Kube-burner
&lt;/h3&gt;

&lt;p&gt;Kube-burner is a tool aimed at stressing kubernetes clusters. Its functionalities can be summarized in these three steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create/delete the objects declared in the jobs.&lt;/li&gt;
&lt;li&gt;Collect desired on-cluster prometheus metrics.&lt;/li&gt;
&lt;li&gt;Write and/or index them to the configured TSDB.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/cloud-bulldozer/kube-burner"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yVGUuPJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-burner.webp" alt="kube-burner" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubehunter"&gt;
  &lt;/a&gt;
  Kube-hunter
&lt;/h3&gt;

&lt;p&gt;Kube-hunter is used to hunt for security weaknesses in Kubernetes clusters. The tool was developed to increase awareness and visibility for security issues in Kubernetes environments. It is available as a container or you can also run its code yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aquasecurity/kube-hunter"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqpnnBIh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-hunter.webp" alt="kube-burner" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#k9s"&gt;
  &lt;/a&gt;
  k9s
&lt;/h3&gt;

&lt;p&gt;k9s provide a terminal UI that can be used to interact with Kubernetes clusters. It watches Kubernetes clusters continuously for changes and offers subsequent commands to interact with observed resources. Some of its key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tracks in real-time activities of resources running in your Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Tracks real-time metrics associates with resources such as pods, containers and nodes&lt;/li&gt;
&lt;li&gt;Drill down directly to what‚Äôs wrong with your cluster‚Äôs resources&lt;/li&gt;
&lt;li&gt;Supports for viewing RBAC rules such as cluster/roles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/derailed/k9s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LqWFz8SW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/k9s.webp" alt="k9s" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#k3s"&gt;
  &lt;/a&gt;
  k3s
&lt;/h3&gt;

&lt;p&gt;K3s is a lightweight version of Kubernetes in a single binary less than 100MB. It is designed for production workloads in unattended, resource-constrained, remote locations or inside IoT appliances.&lt;/p&gt;

&lt;p&gt;Its single binary executable reduces dependencies and steps needed to install, run and auto-update a production Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/k3s-io/k3s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWsYYkwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/k3s.webp" alt="k3s" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#helm"&gt;
  &lt;/a&gt;
  Helm
&lt;/h3&gt;

&lt;p&gt;Helm is a popular open-source package manager for Kubernetes. It is used to create reproducible build of your Kubernetes applications. Using Helm, you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use popular software packaged as Helm charts&lt;/li&gt;
&lt;li&gt;Share your own applications as helm charts&lt;/li&gt;
&lt;li&gt;Intelligently manage Kubernetes manifest files&lt;/li&gt;
&lt;li&gt;Manage releases of Helm packages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/helm/helm"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WjWdc8d9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/helm.webp" alt="Helm" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nacos"&gt;
  &lt;/a&gt;
  Nacos
&lt;/h3&gt;

&lt;p&gt;Nacos is a platform tool used for dynamic service discovery, service configuration and traffic management. It supports discovering, configuring and managing almost all types of services. Some key features of Nacos includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service discovery and service health check&lt;/li&gt;
&lt;li&gt;Dynamic configuration manegement&lt;/li&gt;
&lt;li&gt;Dynamic DNS service&lt;/li&gt;
&lt;li&gt;Service governance and metadata management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/alibaba/nacos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dKVm5Fon--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/nacos.webp" alt="Nacos" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kaniko"&gt;
  &lt;/a&gt;
  Kaniko
&lt;/h3&gt;

&lt;p&gt;Kaniko is a tool created by Google(not officially supported by Google) that is used to build container images from a Dockerfile, inside a container or Kubernetes cluster. It makes container building easier on Kubernetes.&lt;/p&gt;

&lt;p&gt;Kaniko doesn't depend on a Docker daemon and executes each command within a Dockerfile completely in userspace. This enables building container images in environments that can't easily or securely run a Docker daemon, such as a standard Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/kaniko"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aF392GGC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kaniko.webp" alt="Kaniko" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubemonkey"&gt;
  &lt;/a&gt;
  Kube-monkey
&lt;/h3&gt;

&lt;p&gt;Kube-monkey is an implementation of Netflix's chaos monkey for Kubernetes clusters. Chaos Monkey is a resiliency tool that randomly terminates virtual machine instances and containers prompting engineers to build resilient services.&lt;/p&gt;

&lt;p&gt;Kube-monkey randomly deletes k8s pods in the cluster to encourage the development of failure-resistant services.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/asobti/kube-monkey"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vs9BGWnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-monkey.webp" alt="Kube monkey" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teleport"&gt;
  &lt;/a&gt;
  Teleport
&lt;/h3&gt;

&lt;p&gt;Teleport is available as a single binary that can be used to enable secure access to SSH nodes, kubernetes clusters, web apps, PostgreSQL and MySQL databases.&lt;/p&gt;

&lt;p&gt;Some of the key features of Teleport includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provides certificate-based authentication for SSH and Kubernetes&lt;/li&gt;
&lt;li&gt;Logs all activity across your infrastructure&lt;/li&gt;
&lt;li&gt;Recording of user's screen during their SSH session for real-time or later playback&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/gravitational/teleport/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7oN7FISr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/teleport.webp" alt="Teleport" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubespray"&gt;
  &lt;/a&gt;
  Kubespray
&lt;/h3&gt;

&lt;p&gt;Kubespray can be used to deploy a production-ready Kubernetes cluster. Some of the key features of Kubespray includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can be deployed on all cloud vendors like AWS, GCE, Azure, OpenStack, vSphere, Equinix metal(bare-metal), Oracle cloud infrastructure etc.&lt;/li&gt;
&lt;li&gt;Highly available clusters&lt;/li&gt;
&lt;li&gt;Supports popular Linux distributions&lt;/li&gt;
&lt;li&gt;Continuous integration tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/kubernetes-sigs/kubespray"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sdsUjXJn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubespray.webp" alt="Kubespray" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubebench"&gt;
  &lt;/a&gt;
  Kube-bench
&lt;/h3&gt;

&lt;p&gt;Kube-bench can be used to check whether Kubernetes is deployed securely by running the checks documented in the &lt;a href="https://www.cisecurity.org/benchmark/kubernetes/"&gt;CIS Kubernetes benchmark&lt;/a&gt;. CIS benchmarks are best practices for the secure configuration of a target system. Kube-bench implements CIS benchmarks as closely as possible.&lt;/p&gt;

&lt;p&gt;Tests can be configured with YAML files making it easy to update as test specifications evolve.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aquasecurity/kube-bench"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owdGtqKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-bench.webp" alt="Kube-bench" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-quay"&gt;
  &lt;/a&gt;
  Project Quay
&lt;/h3&gt;

&lt;p&gt;Quay can be used to build, store and distribute your applications and containers. Its container image registries let you store container images in a central location.&lt;/p&gt;

&lt;p&gt;Regular users of Project Quay can create repositories to organize their images and add read and write access to the repositories that users control.&lt;/p&gt;

&lt;p&gt;Admin users can perform a broader set of tasks, such as the ability to add users and control default settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/quay/quay"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKWN4wiJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/quay.webp" alt="project quay" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubeapplier"&gt;
  &lt;/a&gt;
  Kube-applier
&lt;/h3&gt;

&lt;p&gt;Kube-applier enables continuous deployment of Kubernetes objects by applying declarative configuration files from a Git repository to a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;It runs as a Pod in a Kubernetes cluster and watches the Git repo to ensure that the cluster objects are up-to-date with their associated spec files (JSON or YAML) in the repo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/box/kube-applier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZmdvOKXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-applier.webp" alt="project quay" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubetail"&gt;
  &lt;/a&gt;
  Kubetail
&lt;/h3&gt;

&lt;p&gt;Kubetail enables you to aggregate logs from multiple pods into one stream. It is same as running &lt;code&gt;kubectl logs -f&lt;/code&gt; but for multiple pods. Getting logs from multiple pods is often required and that's where Kubetail helps developers.&lt;/p&gt;

&lt;p&gt;Kubetail is a simple bash script that allows you to tail multiple pods simultaneously in an easy manner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/johanhaleby/kubetail"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFur4tn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubetail.webp" alt="Kubetail" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubestatemetrics"&gt;
  &lt;/a&gt;
  Kube-state-metrics
&lt;/h3&gt;

&lt;p&gt;Kube-state-metrics enables you to get metrics based on the current state of Kubernetes native resources. It is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects. A few example metrics captured by kube-state-metrics are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kube_pod_container_status_restarts_total&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kube_deployment_status_replicas&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kube_pod_container_resource_requests&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kube_pod_container_resource_limits&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/kubernetes/kube-state-metrics"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97E5ijUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-state-metrics.webp" alt="Kube-state-metrics" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubeval"&gt;
  &lt;/a&gt;
  Kubeval
&lt;/h3&gt;

&lt;p&gt;Kubeval is used to validate Kubernetes configuration files. It can be used locally as part of the development workflow as well as in CI pipelines. &lt;/p&gt;

&lt;p&gt;Kubeval validates configuration files using schemas generated from the Kubernetes OpenAPI specification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/instrumenta/kubeval"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F4IG7vLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubeval.webp" alt="Kubeval" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubeps1"&gt;
  &lt;/a&gt;
  Kube-ps1
&lt;/h3&gt;

&lt;p&gt;This is a handy tool that lets you add the current Kubernetes context and namespace configured on¬†&lt;code&gt;kubectl&lt;/code&gt;¬†to your Bash/Zsh prompt strings (i.e. the¬†&lt;code&gt;$PS1&lt;/code&gt;). It can be installed using Homebrew package manager.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jonmosco/kube-ps1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-C-4M4t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kube-ps1.webp" alt="Kubeps1" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubectx"&gt;
  &lt;/a&gt;
  Kubectx
&lt;/h3&gt;

&lt;p&gt;Kubectx provides an easier and a faster way to switch between clusters back and forth.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ahmetb/kubectx"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iLF3ygfZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubectx.webp" alt="Kubectx" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubecost"&gt;
  &lt;/a&gt;
  Kubecost
&lt;/h3&gt;

&lt;p&gt;Kubecost can be used to gain visibility into current and historical Kubernetes spend and resource allocation. The models prepared by Kubecost provide cost transparency in Kubernetes environments that support multiple applications, teams, departments, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kubecost/cost-model"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57UjLhwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubecost.webp" alt="Kubecost" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubedb"&gt;
  &lt;/a&gt;
  KubeDB
&lt;/h3&gt;

&lt;p&gt;KubeDB is used to run production grade databases on Kubernetes. It simplifies and automates routine database tasks such as provisioning, patching, backup, recovery, failure detection and repair for various popular databases on private and public clouds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kubedb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocboigIo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kubeDB.webp" alt="KubeDB" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#skaffold"&gt;
  &lt;/a&gt;
  Skaffold
&lt;/h3&gt;

&lt;p&gt;Skaffold is a tool by Google that facilitates continuous development for kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. &lt;/p&gt;

&lt;p&gt;Skaffold then handles the workflow for building, pushing and deploying the application. It also provides building blocks and describe customizations for a CI/CD pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/skaffold"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Njrf8SLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/skaffold.webp" alt="Skaffold" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tilt"&gt;
  &lt;/a&gt;
  Tilt
&lt;/h3&gt;

&lt;p&gt;Tilt is a tool focused on microservice development. Using Tilt you can configure a dev environment for your team. Some of key features of Tilt includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Runs automated rebuilds as you edit in your IDE&lt;/li&gt;
&lt;li&gt;Deploys code to running containers&lt;/li&gt;
&lt;li&gt;Handles repetitive and tediuos parts of your workflow&lt;/li&gt;
&lt;li&gt;Share dev environment for collaborating on issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/tilt-dev/tilt"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wrmFbP2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/tilt.webp" alt="tilt" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-dashboard"&gt;
  &lt;/a&gt;
  Kubernetes dashboard
&lt;/h3&gt;

&lt;p&gt;Kubernetes Dashboard is a general purpose, web-based UI for Kubernetes clusters. Provided by Kubernetes, it allows users to manage applications running in the cluster and troubleshoot them, as well as manage the cluster itself.&lt;/p&gt;

&lt;p&gt;The dashboard can be used to get an overview of applications running on your cluster. It can also create or modify individual Kubernetes resources such as deployments, dobs and daemonsets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kubernetes/dashboard"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm53M6mF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/k8s_dashboard.webp" alt="Kubernetes Dashboard" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kong"&gt;
  &lt;/a&gt;
  Kong
&lt;/h3&gt;

&lt;p&gt;Kong API gateway is a cloud-native, platform-agnostic, scalable API Gateway. It provides functionalities for authentication, security, traffic control, analytics, monitoring and logging for Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/kong/kong"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6rg_bA6R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/11/kong.webp" alt="Kong" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hope you enjoyed the list. We are currently building &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; - an open-source full-stack APM. By full-stack, we mean it can be used for metrics, logs and distributed tracing in a single pane of glass. SigNoz uses OpenTelemetry for code instrumentation, which is quietly becoming the world standard for generating telemetry data.&lt;/p&gt;

&lt;p&gt;If this sounds interesting to you, check out our GitHub repo üëá&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•.   üëâ  Open source Application Performance Monitoring (APM) &amp;amp; Observability tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;h3&gt;

  &lt;a href="https://signoz.io/docs" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.zh-cn.md"&gt;&lt;b&gt;ReadMe in Chinese&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.de-de.md"&gt;&lt;b&gt;ReadMe in German&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.pt-br.md"&gt;&lt;b&gt;ReadMe in Portuguese&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://bit.ly/signoz-slack" rel="nofollow"&gt;&lt;b&gt;Slack Community&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://twitter.com/SigNozHq" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;üëâ Run aggregates on trace data to get business relevant metrics&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Join our Slack community&lt;/h2&gt;

&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; üëã&lt;/p&gt;



&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Features:&lt;/h2&gt;


&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>docker</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Cassandra &amp; GoLang</title>
      <author>bseyhan</author>
      <pubDate>Tue, 09 Nov 2021 12:43:40 +0000</pubDate>
      <link>https://dev.to/bseyhan/cassandra-golang-551a</link>
      <guid>https://dev.to/bseyhan/cassandra-golang-551a</guid>
      <description>&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;Did you read my latest implementation of PostgreSQL with GoLang? &lt;a href="https://dev.to/bseyhan/golang-with-database-operations-3jl0"&gt;PostgresWithGo&lt;/a&gt; If you said of course :) go head... Do you know have any knowledge about Cassandra? Don't worry neither am I've not. I like to share about the subjects I work on. So be relax. Are you curious about NOSQl and GoLang? In this post I'll share my Cassandra Db and GoLang knowledge. You'll ask these questions ask yourself, What is Cassandra Db then how to install Cassandra DB to your local machine, which package should I use for it. All of these are in here.  &lt;/p&gt;

&lt;p&gt;Step 1 : What is Cassandra DB&lt;br&gt;
Step 2 : How to install it&lt;br&gt;
Step 3 : Important commands &lt;br&gt;
Step 4 : Connect to database&lt;br&gt;
Step 5 : Implementation&lt;br&gt;
Step 6 : Postman Tests&lt;/p&gt;

&lt;p&gt;Let's go to work and I hope you'll enjoy it.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#step-1-what-is-cassandra-db"&gt;
  &lt;/a&gt;
  Step 1: What is Cassandra DB
&lt;/h1&gt;

&lt;p&gt;NoSQL databases are called ‚ÄúNot Only SQL‚Äù or ‚ÄúNon-relational‚Äù databases. NoSQL databases store and retrieve data other than tabular relations such as relation databases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5InY37g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bmyxk6y6rzkrcej030s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5InY37g4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bmyxk6y6rzkrcej030s.png" alt="Image description" width="876" height="742"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBTX_XG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vys5minr46plx86znr93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBTX_XG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vys5minr46plx86znr93.png" alt="Image description" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elastic scalability ‚àí Cassandra is highly scalable; it allows to add more hardware to accommodate more customers and more data as per requirement.&lt;/p&gt;

&lt;p&gt;Always on architecture ‚àí Cassandra has no single point of failure and it is continuously available for business-critical applications that cannot afford a failure.&lt;/p&gt;

&lt;p&gt;Fast linear-scale performance ‚àí Cassandra is linearly scalable, i.e., it increases your throughput as you increase the number of nodes in the cluster. Therefore it maintains a quick response time.&lt;/p&gt;

&lt;p&gt;Flexible data storage ‚àí Cassandra accommodates all possible data formats including: structured, semi-structured, and unstructured. It can dynamically accommodate changes to your data structures according to your need.&lt;/p&gt;

&lt;p&gt;Easy data distribution ‚àí Cassandra provides the flexibility to distribute data where you need by replicating data across multiple data centers.&lt;/p&gt;

&lt;p&gt;Transaction support ‚àí Cassandra supports properties like Atomicity, Consistency, Isolation, and Durability (ACID).&lt;/p&gt;

&lt;p&gt;Fast writes ‚àí Cassandra was designed to run on cheap commodity hardware. It performs blazingly fast writes and can store hundreds of terabytes of data, without sacrificing the read efficiency.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data Types
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l6GK5K5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iriicx2zds0e5iasyobk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l6GK5K5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iriicx2zds0e5iasyobk.png" alt="Image description" width="880" height="816"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#step-2-how-to-install"&gt;
  &lt;/a&gt;
  Step 2: How to install
&lt;/h1&gt;

&lt;p&gt;I'm using mac os. I've already installed Docker application on my machine. So may be you want to install only docker container. &lt;a href="https://docs.docker.com/get-docker/"&gt;Install Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker pull cassandra&lt;/code&gt;&lt;br&gt;
&lt;code&gt;docker run -d --name cassandra -p 9042:9042 cassandra&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MD_JKkHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6y55964thok6pkr9rcsx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MD_JKkHu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6y55964thok6pkr9rcsx.png" alt="Image description" width="880" height="273"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In this repository I created docker-compose.yml file that file contains with required images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports: 
      - 7000:7000
      - 7001:7001
      - 7199:7199
      - 9042:9042
      - 9160:9160
    restart: always
    environment:
       - CASSANDRA_BROADCAST_ADDRESS=host.docker.internal
       - CASSANDRA_SEEDS=host.docker.internal 
    volumes:
        - ./out/cassandra_data:/var/lib/cassandra
    healthcheck:
        test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
        interval: 15s
        timeout: 10s
        retries: 10

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;7199 - JMX (was 8080 pre Cassandra 0.8.xx)&lt;/li&gt;
&lt;li&gt;7000 - Internode communication (not used if TLS enabled)&lt;/li&gt;
&lt;li&gt;7001 - TLS Internode communication (used if TLS enabled)&lt;/li&gt;
&lt;li&gt;9160 - Thrift client API&lt;/li&gt;
&lt;li&gt;9042 - CQL native transport port&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Step 3: Important Commands&lt;/p&gt;

&lt;p&gt;After the installation since I want to create a database, I have to run this command. What is cqlsh? It is the interface. cqlsh is a command-line interface for interacting with Cassandra using CQL (the Cassandra Query Language). &lt;a href="https://cassandra.apache.org/doc/latest/cassandra/tools/cqlsh.html"&gt;Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker exec -it cassandra cqlsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Im4blM3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqmh5hal7qrmgjg8pmlk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Im4blM3m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqmh5hal7qrmgjg8pmlk.png" alt="Image description" width="880" height="59"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's create a todo table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sZPxS2Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5guk63uvdp5i5txhnmkz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sZPxS2Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5guk63uvdp5i5txhnmkz.png" alt="Image description" width="880" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 4: Connect to database &lt;/p&gt;

&lt;p&gt;Install the VSCode extension for Cassandra.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBLp7svQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t42sby3p4qr5igb61zbq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBLp7svQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t42sby3p4qr5igb61zbq.png" alt="Image description" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-UQHZ_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmr2iohg595h1aji4kab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-UQHZ_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmr2iohg595h1aji4kab.png" alt="Image description" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 5 : Implementation&lt;/p&gt;

&lt;p&gt;Project structure:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sRA7PaE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d86lssr4ajrpsi3ty7me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sRA7PaE5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d86lssr4ajrpsi3ty7me.png" alt="Image description" width="880" height="356"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--&amp;gt; cmd &lt;br&gt;
  --&amp;gt; api(main.go) this file deal with read config.yml file &lt;br&gt;
  --&amp;gt; util(config.go &amp;amp; errors.go) config.go is related with application configurations, errors.go is a custom response implementation.&lt;/p&gt;

&lt;p&gt;--&amp;gt; pkg&lt;br&gt;
  --&amp;gt; api (api.go) this file integrated to initialize&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
func Initialize(config utils.Configuration) {

    // Creates a gin router with default middleware:
    router := gin.Default()

    fmt.Printf("%+v\n", config)

    //register database ,repositories and handlers
    session := cassandra.ConnectDatabase(config.Database.Url, config.Database.Keyspace)

    repository := db.NewTodoRepository(session)
    orderHandler := handler.NewTodoHandler(&amp;amp;repository)

    router.GET("/ping", orderHandler.HealthCheck)

    router.POST("/", orderHandler.CreateTodo)
    router.GET("api/v1/todo/:id", orderHandler.GetTodoById)

    //run the server :8080
    router.Run(":8080")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt; client/cassandra &lt;/p&gt;

&lt;p&gt;The ConnectDatabase function take 2 parameters from api.go file. After creation that function response session. This session&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func ConnectDatabase(url string, keyspace string) *gocql.Session {

    cluster := gocql.NewCluster(url)
    cluster.Keyspace = keyspace
    cluster.Consistency = gocql.Quorum

    session, _ := cluster.CreateSession()

    return session
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click fn+12 CreateSession&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// CreateSession initializes the cluster based on this config and returns a
// session object that can be used to interact with the database.
func (cfg *ClusterConfig) CreateSession() (*Session, error) {
    return NewSession(*cfg)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt;handler&lt;br&gt;
TodoHandler related with request database and response JSON data also error handling is done for that level. All function take c *gin.Context parameter also these functions has receiver function (t *todoHandler) which means that you can access the repository with t.Save or t.GetById.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func (t *todoHandler) CreateTodo(c *gin.Context) {
    var todo model.Todo

    c.BindJSON(&amp;amp;todo)

    todo.Id = uuid.New().String()
    log.Info("Data is ", todo)
    data, err := t.repo.Save(todo)

    if err != nil {
        c.JSON(http.StatusBadRequest, utils.BadRequestError("insert operation failed!", err))
    }

    c.JSON(http.StatusCreated, gin.H{"todo": data})
}

func (t *todoHandler) GetTodoById(c *gin.Context) {

    id := c.Param("id")

    todo, err := t.repo.GetById(id)
    if err != nil {
        c.JSON(http.StatusBadRequest, utils.BadRequestError("todo not found", err))
    }

    c.JSON(http.StatusOK, gin.H{"todo": todo})
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GIN : c.JSON(http.StatusOK, gin.H{"todo": todo}) &lt;br&gt;
Echo: return c.JSON(http.StatusOK, data)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// JSON serializes the given struct as JSON into the response body.
// It also sets the Content-Type as "application/json".
func (c *Context) JSON(code int, obj interface{}) {
    c.Render(code, render.JSON{Data: obj})
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Binding JSON data in GIN&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// BindJSON is a shortcut for c.MustBindWith(obj, binding.JSON).
func (c *Context) BindJSON(obj interface{}) error {
    return c.MustBindWith(obj, binding.JSON)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In repository layer has "github.com/gocql/gocql" package that's is related the queries and executions. Cassandra DB queries similar to PostgreSQL, MsSQL or MySQL queries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func (t *todoRepository) Save(todo model.Todo) (*model.Todo, error) {

    var query string = "INSERT INTO todo(id,title,content) VALUES(?,?,?)"

    if err := t.session.Query(query, todo.Id, todo.Title, todo.Content).Exec(); err != nil {
        return nil, err
    }

    return &amp;amp;todo, nil
}

func (t *todoRepository) GetById(id string) (*model.Todo, error) {

    var todo model.Todo

    var query string = `SELECT id,title,content FROM todo where id=?`

    if err := t.session.Query(query, id).Scan(&amp;amp;todo.Id, &amp;amp;todo.Title, &amp;amp;todo.Content); err != nil {

        if err == gocql.ErrNotFound {
            return nil, err
        }

        return nil, err
    }

    return &amp;amp;todo, nil
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now Let's run the docker-compose file. Cassandra DB has own health check configuration. &lt;br&gt;
&lt;code&gt;docker-compose up&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    healthcheck:
        test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
        interval: 15s
        timeout: 10s
        retries: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When database is running you can see the status is health&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K7lUiM5T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1el38p8u0yoxw2az5s7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K7lUiM5T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1el38p8u0yoxw2az5s7q.png" alt="Image description" width="880" height="38"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 6: Postman Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;run the program
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lnWKl9gG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ljevv4onefwpdh6bria.png" alt="Image description" width="880" height="184"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J143vmcf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1hmmqeb3d4rfn2i3or8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J143vmcf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1hmmqeb3d4rfn2i3or8.png" alt="Image description" width="880" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLppwcZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rrqt1y7gb2olo99mfc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLppwcZJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rrqt1y7gb2olo99mfc1.png" alt="Image description" width="880" height="273"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.tutorialspoint.com/cassandra/cassandra_introduction.htm"&gt;TutorialPoint&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.guru99.com/cassandra-tutorial.html"&gt;Guru99&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bburaksseyhan/todo-api"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>go</category>
      <category>cassandra</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to make up to $600 writing an article -- from zero to genius.</title>
      <author>Ayobami Ogundiran</author>
      <pubDate>Tue, 09 Nov 2021 12:22:56 +0000</pubDate>
      <link>https://dev.to/codingnninja/how-to-make-up-to-600-writing-an-article-from-zero-to-genius-3cdf</link>
      <guid>https://dev.to/codingnninja/how-to-make-up-to-600-writing-an-article-from-zero-to-genius-3cdf</guid>
      <description>&lt;p&gt;Have you ever dreamed of making money writing technical articles? How would you feel if I were to tell you that certain publications will pay you up to $600 to write an article for them?&lt;/p&gt;

&lt;p&gt;But wait a minute ‚Äì this is not a quick-money-making scheme. Rather, I will show you how to start making money from writing technical articles, from zero to genius.&lt;/p&gt;

&lt;p&gt;So, if you are good at writing and programming already, this is your chance to support your programming career with a stipend you can make from writing. Even if you don't want to write technical articles, you can still use the same process in this article ‚Äì you'll just have to work with non-technical platforms instead.&lt;/p&gt;

&lt;p&gt;About 8 years ago, I dreamed of earning money by writing technical articles to help make ends meet after learning to code for more than a year. So, I hurriedly dove in and started doing research on Google.&lt;/p&gt;

&lt;p&gt;"Clatter clatter clatter", those were my fingers dancing across the keys typing "How to get paid for writing technical articles". Boom! The contents of the articles I read made me think, "What! I don't want yet another list. Just. Get. Me. In."&lt;/p&gt;

&lt;p&gt;But wait a minute, I still want to appreciate those first articles I found ‚Äì it took their authors a lot of time and effort to put them together. And as a writer, I appreciated the information they shared because they provided a list of companies I could write for.&lt;/p&gt;

&lt;p&gt;Just like them, to help you avoid stress and stop wasting time, I have compiled a list of companies you can write for. After the list, we'll dive into how you can make the most of writing technical articles for money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publications-that-pay-you-for-technical-articles"&gt;
  &lt;/a&gt;
  Publications that Pay You For Technical Articles
&lt;/h2&gt;

&lt;p&gt;Before I show you how to get yourself into the game, it is important that you know the platforms you can write for. So I have curated some of the most popular platforms that will pay you money to write technical articles for them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#twilio-up-to-500"&gt;
  &lt;/a&gt;
  Twilio (up to $500)
&lt;/h3&gt;

&lt;p&gt;Twilio pays up to $500 per article and you're not required to use any of Twilio's packages. They take articles about general development. &lt;a href="https://go.twilio.com/twilio-voices/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clubhouseio-350600"&gt;
  &lt;/a&gt;
  Clubhouse.io ($350-$600)
&lt;/h3&gt;

&lt;p&gt;Clubhouse.io pays $350-$600 per article. They take articles about team collaboration, software development, and general how-tos. &lt;a href="https://clubhouse.io/clubhouse-write-earn-give-program/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testdrivenio-up-to-500"&gt;
  &lt;/a&gt;
  TestDriven.io (up to $500)
&lt;/h3&gt;

&lt;p&gt;TestDriven.io pays up to $500 per article. They publish articles that teach testing, scaling, and application optimization with web technologies. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honey-badger-up-to-500"&gt;
  &lt;/a&gt;
  Honey Badger (up to $500+)
&lt;/h3&gt;

&lt;p&gt;Honey Badger pays $500+ per article. &lt;a href="https://www.honeybadger.io/blog/write-for-us/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasura-up-to-300"&gt;
  &lt;/a&gt;
  Hasura (up to $300)
&lt;/h3&gt;

&lt;p&gt;Hasura pays up to $300 per article. They take articles about Hasura and GraphQL. &lt;a href="https://blog.hasura.io/the-hasura-technical-writer-program/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digital-ocean-up-to-400"&gt;
  &lt;/a&gt;
  Digital Ocean (up to $400)
&lt;/h3&gt;

&lt;p&gt;Digital Ocean pays up to $400 per article. They take articles about Open Source Software (OSS), cloud hosting, Linux, infrastructure, and so on. &lt;a href="https://www.digitalocean.com/write-for-donations/#anchor--testimonials"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#log-rocket-up-to-350"&gt;
  &lt;/a&gt;
  Log Rocket (up to $350)
&lt;/h3&gt;

&lt;p&gt;LogRocket pays up to $350 per article. They publish tutorials about web technologies. &lt;a href="https://blog.logrocket.com/become-a-logrocket-guest-author-7d970eb673f9/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auth0-up-to-300"&gt;
  &lt;/a&gt;
  Auth0 (up to $300)
&lt;/h3&gt;

&lt;p&gt;Auth0 pays up to $300 per article. You pick from specified topics on the platform. &lt;a href="https://auth0.com/apollo-program"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#soshace-up-to-100"&gt;
  &lt;/a&gt;
  Soshace (up to $100)
&lt;/h3&gt;

&lt;p&gt;Sohace pays up to $100 per article. They provide topics you can choose from. &lt;a href="https://blog.soshace.com/write-for-us/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#csstricks-up-to-250"&gt;
  &lt;/a&gt;
  CSS-Tricks (up to $250)
&lt;/h3&gt;

&lt;p&gt;CSS-Tricks pays up to $250 per article. They provide a list of possible topics to choose from. You can also submit a topic. &lt;a href="https://css-tricks.com/guest-posting/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#real-python-up-to-300"&gt;
  &lt;/a&gt;
  Real Python (up to $300)
&lt;/h3&gt;

&lt;p&gt;Real Python pays up to $300 per article (unofficial). &lt;a href="https://realpython.com/write-for-us/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wphub-up-to-200"&gt;
  &lt;/a&gt;
  WPHub (up to $200)
&lt;/h3&gt;

&lt;p&gt;WPHub pays up to $200 per article. They publish tutorials about WordPress. &lt;a href="https://www.wphub.com/write-for-us/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tutorialspoint-up-to-500"&gt;
  &lt;/a&gt;
  Tutorialspoint (up to $500)
&lt;/h3&gt;

&lt;p&gt;Tutorialspoint pays up to $500 per article. You can choose from specified topics or write about any technical topic. &lt;a href="https://www.tutorialspoint.com/about/tutorials_writing.htm"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fauna-up-to-500"&gt;
  &lt;/a&gt;
  Fauna (up to $500)
&lt;/h3&gt;

&lt;p&gt;Fauna pays up to $500 per article. They provide topics to write about. &lt;a href="https://fauna.com/blog/write-with-fauna"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smashing-magazine-up-to-250"&gt;
  &lt;/a&gt;
  Smashing Magazine (up to $250)
&lt;/h3&gt;

&lt;p&gt;Smashing Magazine takes tutorials, guides and case studies. &lt;a href="https://www.smashingmagazine.com/write-for-us/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gitlab-up-to-200"&gt;
  &lt;/a&gt;
  GitLab (up to $200)
&lt;/h3&gt;

&lt;p&gt;Gitlab pays up to $200 per article. They take articles that help you get better at development. &lt;a href="https://about.gitlab.com/community/writers/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linode-up-to-300"&gt;
  &lt;/a&gt;
  Linode (up to $300+)
&lt;/h3&gt;

&lt;p&gt;Linode pays a minimum of $300 per article and also pays $100 for an existing article. &lt;a href="https://www.linode.com/lp/write-for-linode/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#circleci-up-to-300"&gt;
  &lt;/a&gt;
  CircleCI (up to $300)
&lt;/h3&gt;

&lt;p&gt;CircleCI pays up to $300 per article. &lt;a href="https://circleci.com/blog/guest-writer-program/"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typingdna-up-to-500"&gt;
  &lt;/a&gt;
  TypingDNA (up to $500)
&lt;/h3&gt;

&lt;p&gt;TypingDNA pays up to $500 per article. You're expected to write articles related to TypingDNA. &lt;a href="https://www.typingdna.com/guest-author-program"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#draft-up-to-500"&gt;
  &lt;/a&gt;
  Draft (up to $500)
&lt;/h3&gt;

&lt;p&gt;Draft pays up to $500 per article. They provide topics to choose from. &lt;a href="https://draft.dev/?utm_source=cfpland_newsletter&amp;amp;utm_medium=email&amp;amp;utm_campaign=Weekly+Email&amp;amp;utm_term=2021-03-11T09%3A06%3A28.139Z#write"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sitepoint-up-to-100"&gt;
  &lt;/a&gt;
  SitePoint (up to $100)
&lt;/h3&gt;

&lt;p&gt;SitePoint pays $100 or more. &lt;a href="https://www.sitepoint.com/write-for-us"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arctype-up-to-100"&gt;
  &lt;/a&gt;
  Arctype (up to $100+)
&lt;/h3&gt;

&lt;p&gt;Arctype pays up to $100+ per article and takes articles about SQL, Databases, and Daya analysis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publications-where-you-can-write-articles-to-share-with-the-community-not-paid"&gt;
  &lt;/a&gt;
  Publications Where You Can Write Articles to Share with the Community (Not Paid)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  FreeCodeCamp
&lt;/h3&gt;

&lt;p&gt;freeCodeCamp publishes articles about web development, data science, DevOps, Machine Learning and AI, math, learning to code, job searching, and more. You can apply to become an author, and if you're a good fit, you'll be able to set up an account. &lt;a href="https://www.freecodecamp.org/news/how-to-write-for-freecodecamp/"&gt;Here's how to apply&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devto"&gt;
  &lt;/a&gt;
  Dev.to
&lt;/h3&gt;

&lt;p&gt;Dev.to is like your personal blog and you can post any article you want as long as it abides by the community rules and regulations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hashnode"&gt;
  &lt;/a&gt;
  Hashnode
&lt;/h3&gt;

&lt;p&gt;Hashnode is a personal blog with a touch of community.&lt;/p&gt;

&lt;p&gt;How do you feel after checking out this list?&lt;/p&gt;

&lt;p&gt;Well, if you're just like me, I wanted some more guidance - I wanted to know how to "get in" and start making money.&lt;/p&gt;

&lt;p&gt;If you feel the same, don't worry, I will show you how to get yourself in even if you're a total novice. Just keep on reading!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publications-that-pay-you-for-nontechnical-articles"&gt;
  &lt;/a&gt;
  Publications that Pay You For Non-Technical Articles.
&lt;/h2&gt;

&lt;p&gt;If you don‚Äôt belong to tech, there are a lot of other publications that pay you to write articles about fashion, food, health and others. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://thewritelife.com/get-paid-to-write-articles/"&gt;Get Paid to Write Articles: 17 Magazines That Pay $500 or More&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pdfhost.io/v/tEdkl.fHg_102WebsitesThatPay"&gt;Click to download 100+ publications to write articles for (by writerhelpwanted.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-do-before-you-start-writing"&gt;
  &lt;/a&gt;
  What to Do Before You Start Writing
&lt;/h2&gt;

&lt;p&gt;You just need to say "Open Sesame" to get in (ü§™). Are you in after saying that? Oh, never mind!&lt;/p&gt;

&lt;p&gt;It might be intimidating having to apply to these platforms in order to write paid articles. They care a lot about quality, of course, and only want to publish articles that are suitable for their audiences.&lt;/p&gt;

&lt;p&gt;So you have to position yourself as someone who can deliver value to their audience. And let's be real. Why should they pay you hundreds of dollars when they can get someone to write similar articles for less than $30 on Fiverr? You must be able to provide value tailored to their audience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#doing-the-job-before-getting-the-job"&gt;
  &lt;/a&gt;
  üî¥ Doing the job before getting the job.
&lt;/h2&gt;

&lt;p&gt;I assume you have never written paid articles before, but that you're good at writing and programming. Fine! So you have to make sure you write clearly and well, like someone a publication would want as a writer. &lt;/p&gt;

&lt;p&gt;The reality is that they don't really care about you. Why should they? They mostly care about their businesses and audience.&lt;/p&gt;

&lt;p&gt;Then, what would you do? You need to write at least three articles. The articles must be good enough to get the attention of the platforms that pay for articles. The question now is how will you write such amazing articles? Yeah, this is the magic --"Learn from the best, copy from the best and apply your own style".&lt;/p&gt;

&lt;p&gt;This is how to do it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identify-six-platforms"&gt;
  &lt;/a&gt;
  Identify six platforms
&lt;/h3&gt;

&lt;p&gt;You need to first identify six platforms you want to write for. I call this technique "The Rule of Six". Let's use the platforms below as a case study.&lt;/p&gt;

&lt;p&gt;‚óΩwww.freecodecamp.org/news&lt;/p&gt;

&lt;p&gt;‚óΩwww.smashingmagazine.com&lt;/p&gt;

&lt;p&gt;‚óΩwww.logrocket.com/blogs&lt;/p&gt;

&lt;p&gt;‚óΩwww.auth0.com&lt;/p&gt;

&lt;p&gt;‚óΩwww.clubhouse.io&lt;/p&gt;

&lt;p&gt;‚óΩwww.twilio.com&lt;/p&gt;

&lt;p&gt;Why do I need six platforms again?&lt;/p&gt;

&lt;p&gt;You need to study what is considered acceptable by some of the platforms you want to write for. Checking these six platforms will expose you to the best writers in the industry.&lt;/p&gt;

&lt;p&gt;What are we checking on the platforms?&lt;/p&gt;

&lt;p&gt;You want to check six authors, six writing styles and six topics.&lt;/p&gt;

&lt;p&gt;To make it easy, pick a topic from an author from each of the six platforms above. For example, you can pick an article from FreeCodeCampÿå one from SmashingMagazine and one from each of the rest.&lt;/p&gt;

&lt;p&gt;Make sure the articles selected are about the topics you're good at because it is easy to discover the gap in your style, skills and knowledge by dealing with what you're also good at.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#choosing-your-style"&gt;
  &lt;/a&gt;
  Choosing your style
&lt;/h3&gt;

&lt;p&gt;Honestly, I didn't choose my style with this process consciously but when I paid attention to why I write or talk the way I do, I discovered the process I have been explaining to you.&lt;/p&gt;

&lt;p&gt;So, you might have had a certain writing style already. By that, I mean it is not necessary to choose another writing style once you have a style already.&lt;/p&gt;

&lt;p&gt;For example, I don't try to adopt anybody's style but I adapt different writing styles from amazing authors and always allow my inner thought process to reflect to add a touch of humanity.&lt;/p&gt;

&lt;p&gt;You too can improve your writing styles with everything you have learned from others and that is fine. We are all learning from one another.&lt;/p&gt;

&lt;p&gt;If you're yet to have an amazing writing style you love, you can take your time, like a week, less than a week or more to read the articles you have gathered and develop your writing style with whatever you learn from the writing styles of the authors you have selected.&lt;/p&gt;

&lt;p&gt;Honestly, it is best to adopt the general technical writing style because it will help you avoid unnecessary rejections. But for me, I do what makes me happy.&lt;/p&gt;

&lt;p&gt;Then, what next?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-have-to-offer"&gt;
  &lt;/a&gt;
  What do you have to offer?
&lt;/h3&gt;

&lt;p&gt;Nobody knows whether you're an amazing writer or not until they see your write-up. So, you have to write some amazing articles to showcase your skills.&lt;/p&gt;

&lt;p&gt;So...&lt;/p&gt;

&lt;p&gt;Pick three topics out of the six topics you have identified earlier. Make sure the three topics you pick are the ones you know about the most among the selected topics.&lt;/p&gt;

&lt;p&gt;Then, you need to write an article for each of the topics. Don't try to be in a hurry to finish all the articles but make sure you take your time to write each of the articles with the best of your writing skills.&lt;/p&gt;

&lt;p&gt;As far as I am concerned, I don't think it is bad if it takes you 3 to 4 months or 1 to 2 days to write the three articles. What matters most is the quality of the articles.&lt;/p&gt;

&lt;p&gt;Hey! How can I write the articles?&lt;/p&gt;

&lt;p&gt;It is not rocket science. You just have to be willing to put in the work. You can use the approach I called "PROT".&lt;/p&gt;

&lt;p&gt;These are the steps to follow:&lt;/p&gt;

&lt;p&gt;Pick three topics out of the six topics; then pick a topic from the three topics you have selected (6-3-1). This is what I mean. You need to identify six topics you can write about, narrow it down to three topics and pick a final topic to write about from the three selected topics. &lt;/p&gt;

&lt;p&gt;Doing this helps you choose interesting topics. It could be very useful to identify a great topic.&lt;br&gt;&lt;br&gt;
Research the topic further and make sure you check all of the best articles on the topic.&lt;/p&gt;

&lt;p&gt;Create an outline for your writing. Map out all its parts to aids writing flow. &lt;/p&gt;

&lt;p&gt;Try to write an article that beats all the best articles you have seen on the topic.&lt;/p&gt;

&lt;p&gt;That is the basic way to go about it but it is easier said than done.&lt;/p&gt;

&lt;p&gt;Then, what next?&lt;/p&gt;

&lt;p&gt;You can share the first three articles on your personal blog or platforms with no entry barrier like dev.to and hashnode.com&lt;/p&gt;

&lt;p&gt;By doing this, you position yourself as an experienced technical writer that any platform would want as a writer.&lt;/p&gt;

&lt;p&gt;Hurrayyyyy!&lt;/p&gt;

&lt;p&gt;You're now an experienced technical writer.&lt;/p&gt;

&lt;p&gt;What next?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-in"&gt;
  &lt;/a&gt;
  üî¥ How to get in
&lt;/h2&gt;

&lt;p&gt;It is time to get in. Below is the step by step approach to follow:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Research the interests of each of the platforms you want to write for.&lt;/p&gt;

&lt;p&gt;For instance, if you want to know about what it takes to write for FreeCodeCamp. The best place to know that is through Freecodecamp. So you have to research and know what they expect. You could google "write for us freecodecamp".&lt;/p&gt;

&lt;p&gt;For Smashing Magazine, you could google "write for us smashing magazine". In short, you could find necessary information about any publication you want by googling "write for us + companyName".&lt;/p&gt;

&lt;p&gt;Don't assume you can approach all of them the same way. You have to approach them based on their stated requirements or interests.&lt;/p&gt;

&lt;p&gt;Wait: Can I send you some stones from Nigeria for breakfast?&lt;/p&gt;

&lt;p&gt;Oh! Do you say "I am not interested in eating stone"? You see! We all have preferences. So give them what they want too.&lt;/p&gt;

&lt;p&gt;Research the interests of the publication you want to write for. It is very important because it determines whether you will be accepted or not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;It is time to apply. After checking most of the publications listed in this article, I realized the publications approach this application in two major ways.&lt;/p&gt;

&lt;p&gt;Some ask you to give them your name, social media username, email and bio, for example, FreeCodeCamp.&lt;/p&gt;

&lt;p&gt;You can use below as a template to craft your own bio:&lt;/p&gt;

&lt;p&gt;In your bio, indicate your core interest first as in:&lt;/p&gt;

&lt;p&gt;I am Ayobami Ogundiran, a software developer who loves helping those who are struggling to understand and build projects with JavaScript.&lt;/p&gt;

&lt;p&gt;Then add your work experience (if any) as in: I have worked with [company name] as a [job title],[company name] as a [job title] and [company name] as a [job title].&lt;/p&gt;

&lt;p&gt;There are some other platforms, such as Smashing Magazine, that want you to send the outline of the article you want to write to them, your name, email and bio.&lt;/p&gt;

&lt;p&gt;That means you have to also write an outline. But how do you write such an outline?&lt;/p&gt;

&lt;p&gt;Listen, this article is not meant to teach how to write an outline but I will give you an example you can learn from.&lt;/p&gt;

&lt;p&gt;Here is the outline of Image To Text Conversion With React And Tesseract.js (OCR) I wrote for Smashing Magazine.&lt;/p&gt;

&lt;p&gt;Headline: Image To Text Conversion With React And Tesseract.js (OCR)&lt;/p&gt;

&lt;p&gt;A. Introduction&lt;/p&gt;

&lt;p&gt;a) Data as the backbone of any software application.&lt;/p&gt;

&lt;p&gt;b) Inability to extract texts from an image as a limition to data processing.&lt;/p&gt;

&lt;p&gt;c) OCR as a solution.&lt;/p&gt;

&lt;p&gt;B. What is OCR?&lt;/p&gt;

&lt;p&gt;a) What does OCR stand for? Optical Character Recognition&lt;/p&gt;

&lt;p&gt;b) Meaning of Optical Character Recognition.&lt;/p&gt;

&lt;p&gt;C. Evolution of OCR. Optical Character Recognition can be traced to several inventions but below are the ones that have great impacts on OCR.&lt;/p&gt;

&lt;p&gt;a) Optophone was developed to convert a printed page to produce tones that are corresponded to specific letters or character on the page.&lt;/p&gt;

&lt;p&gt;b) Gismo was developed to recognise all 26 letters of the Latin alphabet as produce by a standard type-writer&lt;/p&gt;

&lt;p&gt;c) CCD flatbed scanner introduced the first omni-present optical character recognition system that could recognise any fonts.&lt;/p&gt;

&lt;p&gt;d) Newton MessagePad was designed to recognise handwritten characters.&lt;/p&gt;

&lt;p&gt;e) Tesseract intruduces neural networks to OCR to recognise patterns for themselves.&lt;/p&gt;

&lt;p&gt;D. Why use OCR?&lt;/p&gt;

&lt;p&gt;a). Regulations - It makes it possible to regulate media content. E.g Hiding sensitive media contents like on Twitterand regulation of amount of texts on Facebook ads images.&lt;/p&gt;

&lt;p&gt;b). Searchability - It makes images or printed documents searchable.&lt;/p&gt;

&lt;p&gt;c). Accessibility - It can provide useful information from an image to a screen-reader.&lt;/p&gt;

&lt;p&gt;d). Data processing automation - Pin on a card or QR code can be extracted and processed.&lt;/p&gt;

&lt;p&gt;e). Digitalization of printed materials - It makes it easy to convert printed documents to digital ones to store or edit them.&lt;/p&gt;

&lt;p&gt;E. Dos and Donts of OCR.&lt;/p&gt;

&lt;p&gt;Do pre-process images for accurate results.&lt;br&gt;
Do think about security&lt;br&gt;
Handle exceptions&lt;br&gt;
Don't take all file formats as Tesseract cannot handle all file formats.&lt;br&gt;
F. What is Tesseract.js?&lt;/p&gt;

&lt;p&gt;Tesseract.js is a JavaScript libray that compiles the original Tesseract from C to JavaScript WebAssembly thereby making OCR accessible in the browser.&lt;/p&gt;

&lt;p&gt;G. What we will build - an amazon giftcard-pin extractor. We will build a simple application that extracts the pin code of a scanned amazon giftcard.&lt;/p&gt;

&lt;p&gt;a) Image Pre-processing&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Binarization - Converting the pixels of an image to either black and white.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Noise Removal - Removing small dots/patches of high intensity in an image by blurring it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thinning and Skeletonization - It is used to create a uniform width of strokes in hand written documents because handwritten texts have different strokes as different writers write differently.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Skew Correction - A scanned document maybe be skewed a bit and it is corrected by re-aligning the skewed content.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;b). Converting a pre-processed image to texts&lt;/p&gt;

&lt;p&gt;c). Extracting a certain string of number (pin) from the text&lt;/p&gt;

&lt;p&gt;d). Matching the pin for confirmatione). Desplaying a confirmation message&lt;/p&gt;

&lt;p&gt;H. Conclusiona). Limition of OCRb). Optimizing OCR for a specific purpose.c). Further reading.&lt;/p&gt;

&lt;p&gt;Hey, it doesn't have to belong as this. It has to be suitable for what you're writing about. Even some of the platforms will help you refine your outline. So don't be scared of getting an outline wrong.&lt;/p&gt;

&lt;p&gt;After preparing the outline of the first article you want to write, then apply for the Guest Writer position.&lt;/p&gt;

&lt;p&gt;That is it.&lt;/p&gt;

&lt;p&gt;Hey wait, how can I be writing articles consistently to keep making the money ü§ë?&lt;/p&gt;

&lt;p&gt;Ah! That is a tough question to answer. Well, I will try my best to tell you some tips. Keep on reading!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-stay-in"&gt;
  &lt;/a&gt;
  üî¥ How to stay in
&lt;/h2&gt;

&lt;p&gt;If you want to stay in, you have to write articles consistently. Some publications determine the topic you write about. They mostly send out such topics to writers. Some of them don't choose topics for writers. In that case, you have to determine the topics to write about. The question now is, how can you know the topic to write about?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fill-in-the-blanks"&gt;
  &lt;/a&gt;
  Fill in the blanks
&lt;/h3&gt;

&lt;p&gt;Just like we have done before, you have to check six websites to see which topic is on one platform but is missing on another.&lt;/p&gt;

&lt;p&gt;Then you can write a better version of such a topic for another publication if it is part of the topics they're interested in. Most technical writers do that consciously or unconsciously. When you do the work, you will understand what I mean.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cover-the-unknown"&gt;
  &lt;/a&gt;
  Cover the unknown
&lt;/h3&gt;

&lt;p&gt;Most publications like topics that have potentials but are not widely covered. So whenever you discover a useful concept, approach or package that is gaining momentum, pitch it to any publication you write for. Anyway, be sure it is something they are interested in before investing much of your time in it.&lt;/p&gt;

&lt;p&gt;Bottom line: Don't go against the platform you write for or don't do anything that tarnishes their image. If you have to go against them, be ready to leave them. That is it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-improve-your-earnings"&gt;
  &lt;/a&gt;
  üî¥ How to improve your earnings
&lt;/h2&gt;

&lt;p&gt;For someone like me, this part is not that important because I write to solve problems and gain more exposure. If you write solely to earn more money, you need to improve your earnings.&lt;/p&gt;

&lt;p&gt;This is how to do it:&lt;/p&gt;

&lt;p&gt;It is really very hard to earn consistently with technical writing if you write for some publications that delay everything. Even if you are capable to write three articles per month, you won't be able to do so if the publication you're writing for usually takes a month or more to release your articles.&lt;/p&gt;

&lt;p&gt;That means you have to look out for platforms that don't delay anything whatsoever. Then, you can easily improve your earnings. So you have to write for technical content marketing agencies to be able to write consistently and improve your earnings through technical writing.&lt;/p&gt;

&lt;p&gt;Here are some platforms  you can write for:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.devspotlight.com"&gt;www.devspotlight.com&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.contentLab.com"&gt;www.contentLab.com&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.writefordev.com"&gt;www.writefordev.com&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.hitsubscribe.com"&gt;www.hitsubscribe.com&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.draft.dev"&gt;www.draft.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See, it is not compulsory to write for others to increase your earnings, you can start your own blog and monetize it or join a company as a Developer Advocate but it requires more than just writing articles ‚Äì writing an article is just a great start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tradeoffs"&gt;
  &lt;/a&gt;
  üî¥ Trade-offs
&lt;/h2&gt;

&lt;p&gt;There is no solution, everything is a compromise. So, whichever path you choose to take, be sure of the trade-offs you have to deal with. I prefer platforms like FreeCodeCamp, LogRocket, Smashing Magazine, etc. because my articles are still tied to me and they somehow promote me. &lt;/p&gt;

&lt;p&gt;That is more important to me than the money I make from the write-ups. The trade-off is that I may not be able to share my articles with many publications at the same time.&lt;/p&gt;

&lt;p&gt;If you want to increase your earnings, you may need to let go of personal promotions and other opportunities connected to them because technical content marketing agencies may not tie all your articles to you. In short, you have to know what is more important to you -- money or promotion?&lt;/p&gt;

&lt;p&gt;Everything is a trade-off.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Technical writing is a very important skill that helps writers, learners and the tech industry in general. It can help you earn some side income, solve problems and still give you more exposure as a software developer. &lt;/p&gt;

&lt;p&gt;Listen, technical writing is not just for experts. It is for everyone who is willing to help others, promote themselves and still make some money.&lt;/p&gt;

&lt;p&gt;The question now is if it doesn't have to be cool, what can you start writing in the next six minutes?&lt;/p&gt;

&lt;p&gt;Start now to change the world with technical writing and earn some MONEY.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-more-thing"&gt;
  &lt;/a&gt;
  One more thing
&lt;/h3&gt;

&lt;p&gt;This article is the sample of my eBook  ‚ÄúThe Rule of Six: How to monetize your skills‚Äù and I am going to launch it by 15th December 2021. The eBook is priced at $30 but if you pre-order it right now, you will get it at 50% off  ( $15 ). &lt;a href="https://flurly.com/p/monetize-your-skills"&gt;Click to pre-order it now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;source: &lt;a href="https://www.ayobamie.com/2021/11/how-to-make-up-to-600-writing-article.html"&gt;https://www.ayobamie.com/2021/11/how-to-make-up-to-600-writing-article.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>writing</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Infrastructure as Code on AWS using Go and Pulumi</title>
      <author>Elton Minetto</author>
      <pubDate>Tue, 09 Nov 2021 12:06:47 +0000</pubDate>
      <link>https://dev.to/aws-builders/infrastructure-as-code-on-aws-using-go-and-pulumi-gn5</link>
      <guid>https://dev.to/aws-builders/infrastructure-as-code-on-aws-using-go-and-pulumi-gn5</guid>
      <description>&lt;p&gt;When we talk about Infrastructure as Code or IaC, the first tool that comes to mind is &lt;a href="https://terraform.io"&gt;Terraform&lt;/a&gt;. Terraform, created by HashiCorp, has become the standard for documentation and infrastructure management, but its declarative language, HCL (HashiCorp Configuration Language), has some limitations. The main limitation is not being a programming language but a configuration one.&lt;/p&gt;

&lt;p&gt;Some alternatives have been emerging to fulfill these needs, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/pt/cdk/"&gt;AWS Cloud Development Kit&lt;/a&gt;, Amazon's solution that allows us to use TypeScript, Python, and Java to program the infrastructure using the cloud provider's solutions;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.pulumi.com"&gt;Pulumi&lt;/a&gt;, which allows us to use TypeScript, JavaScript, Python, Go, and C# to program infrastructures using solutions from AWS, Microsoft Azure, Google Cloud, and Kubernetes installations.&lt;br&gt;
I will introduce Pulumi, using the Go language to create some infrastructure examples on AWS.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;To make use of Pulumi, we first need to install its command-line application. Following the &lt;a href="https://www.pulumi.com/docs/get-started/aws/begin/"&gt;documentation&lt;/a&gt;, I installed it on my macOS using the command:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install pulumi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;On the website, you can see how to install it on Windows and Linux.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-aws-account-access"&gt;
  &lt;/a&gt;
  Configure AWS Account Access
&lt;/h2&gt;

&lt;p&gt;Since I will use AWS in this example, the next necessary step is to configure the credentials. For that, I got my access key and secret from the AWS dashboard and set the required environment variables:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export AWS_ACCESS_KEY_ID=&amp;lt;YOUR_ACCESS_KEY_ID&amp;gt;
export AWS_SECRET_ACCESS_KEY=&amp;lt;YOUR_SECRET_ACCESS_KEY&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#creating-the-project"&gt;
  &lt;/a&gt;
  Creating the project
&lt;/h2&gt;

&lt;p&gt;With the initial dependencies configured, we can now create the project:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir post-pulumi
cd post-pulumi
pulumi new aws-go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;One of the creation steps requires setting up an account on the Pulumi website. For that, the command-line application opens the browser for this step to be completed. So I logged in with my Github account, completed the registration, returned to the terminal, and continued the project creation without any problems.&lt;/p&gt;

&lt;p&gt;You can see the result of running the command can &lt;a href="https://app.warp.dev/block/ngaPDDNEPbf5eTuMgDHsqW"&gt;at this link&lt;/a&gt;. In addition, at the end of the process, it installs all the necessary dependencies for creating the project in Go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#files-created"&gt;
  &lt;/a&gt;
  Files created
&lt;/h2&gt;

&lt;p&gt;Looking at the directory contents, we can see that some configuration files and a &lt;code&gt;main.go&lt;/code&gt; were created.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pulumi.yaml&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;post-pulumi&lt;/span&gt;
&lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;go&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;A minimal AWS Go Pulumi program&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Pulumi.dev.yaml&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;config&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;aws:region: us-east-1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;main.go&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi/sdk/v3/go/pulumi"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Create an AWS resource (S3 Bucket)&lt;/span&gt;
        &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewBucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"my-bucket"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Export the name of the bucket&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bucketName"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When running&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The bucket was created in S3, as the code indicates.&lt;/p&gt;

&lt;p&gt;And the command:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Destroy all the resources, in this case, the S3 bucket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-example-creating-a-static-page-in-s3"&gt;
  &lt;/a&gt;
  First example - creating a static page in S3
&lt;/h2&gt;

&lt;p&gt;Now let's do some more complex examples.&lt;/p&gt;

&lt;p&gt;The first step is to create a static page, which we are going to deploy:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir static
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Inside this directory, I created the file:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;static/index.html&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello, Pulumi!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I changed &lt;em&gt;main.go&lt;/em&gt; to reflect the new structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi/sdk/v3/go/pulumi"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Create an AWS resource (S3 Bucket)&lt;/span&gt;
        &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewBucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"my-bucket"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BucketArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Website&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BucketWebsiteArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;IndexDocument&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Export the name of the bucket&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bucketName"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewBucketObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;s3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BucketObjectArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Acl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;         &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"public-read"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;ContentType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"text/html"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewFileAsset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"static/index.html"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bucketEndpoint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebsiteEndpoint&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To update run:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And confirm the change.&lt;/p&gt;

&lt;p&gt;The code snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"bucketEndpoint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WebsiteEndpoint&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Generate as output the address to access &lt;em&gt;index.html&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Outputs:
  + bucketEndpoint: "http://my-bucket-357877e.s3-website-us-east-1.amazonaws.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The case above is a straightforward example, but it already demonstrates the power of the tool. So let's make things a little more complex and fun now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-example-a-site-inside-a-container"&gt;
  &lt;/a&gt;
  Second example - a site inside a container
&lt;/h2&gt;

&lt;p&gt;Let's create a &lt;em&gt;Dockerfile&lt;/em&gt; with a web server to host our static content:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;static/Dockerfile&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang&lt;/span&gt;

&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; . /go/src/foo&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /go/src/foo&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;go build &lt;span class="nt"&gt;-o&lt;/span&gt; /go/bin/main

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; /go/bin/main&lt;/span&gt;

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's now create the &lt;em&gt;static/main.go&lt;/em&gt; file, which will be our web server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewServeMux&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fileServer&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StripPrefix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileServer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Addr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="s"&gt;":80"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's change &lt;em&gt;main.go&lt;/em&gt; to include the infrastructure of an ECS cluster and everything else needed to run our container:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"encoding/base64"&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"strings"&lt;/span&gt;

    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecr"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecs"&lt;/span&gt;
    &lt;span class="n"&gt;elb&lt;/span&gt; &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elasticloadbalancingv2"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-docker/sdk/v3/go/docker"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi/sdk/v3/go/pulumi"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;// Read back the default VPC and public subnets, which we will use.&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LookupVpc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LookupVpcArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSubnetIds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSubnetIdsArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Create a SecurityGroup that permits HTTP ingress and unrestricted egress.&lt;/span&gt;
        &lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewSecurityGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-sg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Egress&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupEgressArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupEgressArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;FromPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;ToPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;CidrBlocks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;Ingress&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupIngressArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupIngressArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;FromPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;ToPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;CidrBlocks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Create an ECS cluster to run a container-based service.&lt;/span&gt;
        &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewCluster&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-cluster"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Create an IAM role that can be used by our service's task.&lt;/span&gt;
        &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"task-exec-role"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RoleArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;AssumeRolePolicy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;`{
    "Version": "2008-10-17",
    "Statement": [{
        "Sid": "",
        "Effect": "Allow",
        "Principal": {
            "Service": "ecs-tasks.amazonaws.com"
        },
        "Action": "sts:AssumeRole"
    }]
}`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRolePolicyAttachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"task-exec-policy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RolePolicyAttachmentArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Role&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;PolicyArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;// Create a load balancer to listen for HTTP traffic on port 80.&lt;/span&gt;
        &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewLoadBalancer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-lb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoadBalancerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Subnets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ids&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;SecurityGroups&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToStringOutput&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewTargetGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-tg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TargetGroupArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;       &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HTTP"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;TargetType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;webListener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-listener"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;LoadBalancerArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;            &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;DefaultActions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerDefaultActionArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerDefaultActionArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;           &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"forward"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;TargetGroupArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c"&gt;//create a new ECR repository&lt;/span&gt;
        &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRepository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryArgs&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;repoCreds&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetCredentialsArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;RegistryId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StdEncoding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DecodeString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AuthorizationToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;":"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArrayOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;repoUser&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repoCreds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;repoPass&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repoCreds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c"&gt;//build the image&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"my-image"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DockerBuildArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./static"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;ImageName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Registry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageRegistryArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;Username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repoUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repoPass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;containerDef&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmtstr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;`[{
                "name": "my-app",
                "image": %q,
                "portMappings": [{
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                }]
            }]`&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmtstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;// Spin up a load balanced service running NGINX.&lt;/span&gt;
        &lt;span class="n"&gt;appTask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewTaskDefinition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-task"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TaskDefinitionArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fargate-task-definition"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Cpu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"256"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Memory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"512"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;NetworkMode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;             &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"awsvpc"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;RequiresCompatibilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FARGATE"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
            &lt;span class="n"&gt;ExecutionRoleArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContainerDefinitions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;containerDef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-svc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;DesiredCount&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;LaunchType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FARGATE"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;TaskDefinition&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;NetworkConfiguration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceNetworkConfigurationArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;AssignPublicIp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;Subnets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ids&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;SecurityGroups&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToStringOutput&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="n"&gt;LoadBalancers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceLoadBalancerArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceLoadBalancerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;TargetGroupArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;ContainerName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"my-app"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;ContainerPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DependsOn&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webListener&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c"&gt;// Export the resulting web address.&lt;/span&gt;
        &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DnsName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArrayInput&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringInput&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Complex? Yes, but this complexity is inherent to AWS features and not Pulumi. We would have similar complexity if we were using Terraform or CDK.&lt;/p&gt;

&lt;p&gt;Before running our code, we need to download the new dependencies:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go get github.com/pulumi/pulumi-docker
go get github.com/pulumi/pulumi-docker/sdk/v3/go/docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now just run the command:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The execution output will generate the URL of the &lt;em&gt;load balancer&lt;/em&gt;, which we will use to access the contents of our container in execution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reorganizing-the-code"&gt;
  &lt;/a&gt;
  Reorganizing the code
&lt;/h2&gt;

&lt;p&gt;Now we can start making use of the advantages of a complete programming language like Go. For example, we could use language features like functions, concurrency, conditionals, etc. In this example, we are going to organize our code better. For this, I created the &lt;em&gt;iac&lt;/em&gt; directory and the &lt;em&gt;iac/fargate.go&lt;/em&gt; file. After that, I moved most of the logic from &lt;code&gt;main.go&lt;/code&gt; to the new file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;iac&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"encoding/base64"&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"strings"&lt;/span&gt;

    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ec2"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecr"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ecs"&lt;/span&gt;
    &lt;span class="n"&gt;elb&lt;/span&gt; &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/elasticloadbalancingv2"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi-docker/sdk/v3/go/docker"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi/sdk/v3/go/pulumi"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;FargateRun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c"&gt;// Read back the default VPC and public subnets, which we will use.&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LookupVpc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LookupVpcArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSubnetIds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetSubnetIdsArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Create a SecurityGroup that permits HTTP ingress and unrestricted egress.&lt;/span&gt;
    &lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewSecurityGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-sg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Egress&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupEgressArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupEgressArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;FromPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;ToPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;CidrBlocks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;Ingress&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupIngressArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ec2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SecurityGroupIngressArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tcp"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;FromPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;ToPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;CidrBlocks&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0/0"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Create an ECS cluster to run a container-based service.&lt;/span&gt;
    &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewCluster&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-cluster"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Create an IAM role that can be used by our service's task.&lt;/span&gt;
    &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"task-exec-role"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RoleArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;AssumeRolePolicy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;`{
    "Version": "2008-10-17",
    "Statement": [{
        "Sid": "",
        "Effect": "Allow",
        "Principal": {
            "Service": "ecs-tasks.amazonaws.com"
        },
        "Action": "sts:AssumeRole"
    }]
}`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRolePolicyAttachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"task-exec-policy"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RolePolicyAttachmentArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Role&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;PolicyArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Create a load balancer to listen for HTTP traffic on port 80.&lt;/span&gt;
    &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewLoadBalancer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-lb"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoadBalancerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Subnets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ids&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;SecurityGroups&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToStringOutput&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewTargetGroup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-tg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TargetGroupArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;       &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"HTTP"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;TargetType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ip"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;VpcId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vpc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;webListener&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"web-listener"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;LoadBalancerArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;            &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;DefaultActions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerDefaultActionArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;elb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenerDefaultActionArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;           &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"forward"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;TargetGroupArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewRepository&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryArgs&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;repoCreds&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RegistryId&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetCredentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetCredentialsArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;RegistryId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StdEncoding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DecodeString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;creds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AuthorizationToken&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"error:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;":"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArrayOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;repoUser&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repoCreds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;repoPass&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;repoCreds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"my-image"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DockerBuildArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./static"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;ImageName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;Registry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageRegistryArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RepositoryUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Username&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repoUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;repoPass&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;containerDef&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplyT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmtstr&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="s"&gt;`[{
                "name": "my-app",
                "image": %q,
                "portMappings": [{
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                }]
            }]`&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fmtstr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringOutput&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Spin up a load balanced service running NGINX.&lt;/span&gt;
    &lt;span class="n"&gt;appTask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewTaskDefinition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-task"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TaskDefinitionArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fargate-task-definition"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Cpu&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"256"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;Memory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"512"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;NetworkMode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;             &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"awsvpc"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;RequiresCompatibilities&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FARGATE"&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt;
        &lt;span class="n"&gt;ExecutionRoleArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;taskExecRole&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;ContainerDefinitions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;containerDef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"app-svc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Cluster&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;cluster&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;DesiredCount&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;LaunchType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FARGATE"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;TaskDefinition&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;appTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;NetworkConfiguration&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceNetworkConfigurationArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;AssignPublicIp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;Subnets&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subnet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ids&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;SecurityGroups&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webSg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToStringOutput&lt;/span&gt;&lt;span class="p"&gt;()},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;LoadBalancers&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceLoadBalancerArray&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ecs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ServiceLoadBalancerArgs&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;TargetGroupArn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;webTg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Arn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;ContainerName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"my-app"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;ContainerPort&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DependsOn&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Resource&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;webListener&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;// Export the resulting web address.&lt;/span&gt;
    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;webLb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DnsName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;toPulumiStringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArrayInput&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringInput&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step was to configure the &lt;code&gt;iac&lt;/code&gt; directory to be a Go language module:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd iac
go mod init github.com/eminetto/post-pulumi/iac
cd ..
go mod edit -replace github.com/eminetto/post-pulumi/iac=./iac
go mod tidy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Our &lt;code&gt;main.go&lt;/code&gt; can now be simplified:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/eminetto/post-pulumi/iac"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/pulumi/pulumi/sdk/v3/go/pulumi"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pulumi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;error&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iac&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FargateRun&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That way, we can better manage the structure of the code that will handle AWS resources. We can reuse this code in other projects, use environment variables, write &lt;a href="https://www.pulumi.com/docs/guides/testing/"&gt;tests&lt;/a&gt;, or whatever else our imagination allows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using a tool like Pulumi significantly increases the &lt;a href="https://www.pulumi.com/docs/"&gt;range of options&lt;/a&gt; that we can use in building a project's infrastructure while maintaining readability, &lt;a href="//HTTPS%20://www.pulumi.com/docs/guides/pulumi-packages/"&gt;code reuse&lt;/a&gt; and organization.&lt;/p&gt;

</description>
      <category>iac</category>
      <category>aws</category>
      <category>pulumi</category>
      <category>go</category>
    </item>
    <item>
      <title>How to Secure Your Kubernetes Cluster with OpenID Connect and RBAC</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Tue, 09 Nov 2021 11:59:14 +0000</pubDate>
      <link>https://dev.to/oktadev/how-to-secure-your-kubernetes-cluster-with-openid-connect-and-rbac-5hic</link>
      <guid>https://dev.to/oktadev/how-to-secure-your-kubernetes-cluster-with-openid-connect-and-rbac-5hic</guid>
      <description>&lt;p&gt;A Kubernetes (k8s) cluster comprises worker machines called nodes and a control plane consisting of the API server, scheduler, etcd, controller manager, and in the case of a PaaS (platform as a service), the cloud controller manager. The containers deployed to the cluster run in pods on the worker nodes. At the same time, the control plane takes care of scheduling, responding to requests, and managing the cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GcBIM1En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr9e7yk7gtfp3wncpg0q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GcBIM1En--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hr9e7yk7gtfp3wncpg0q.jpg" alt="K8s architecture" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you communicate with a Kubernetes cluster, using kubectl, or a client library, or a tool like &lt;a href="https://kdash.cli.rs/"&gt;KDash&lt;/a&gt;, you are primarily interacting with the &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/"&gt;Kubernetes API server&lt;/a&gt;. The API server is responsible for managing the cluster and is responsible for handling requests from a client.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-secure-the-api-server"&gt;
  &lt;/a&gt;
  Why secure the API server?
&lt;/h1&gt;

&lt;p&gt;The API server has multiple layers of security. By default, all communication with the API server uses TLS. Authentication is done using service account tokens, bearer tokens, basic authentication, a proxy, or client certificates, depending on the platform. In the case of PaaS like Amazon EKS, AKS, and GKE, it can also be done using custom authentication mechanisms. Once a request is authenticated, the API server can use one of several authorization mechanisms, like Attribute-based access control (ABAC) or Role-based access control (RBAC), to control access to resources. And finally, there are also admission control modules that can be configured to control resource modifications.&lt;/p&gt;

&lt;p&gt;Since the API server is the only part of the Kubernetes cluster that a client can access, it is essential to secure the API server. Unauthorized access to the API server can lead to hijacking of the entire cluster, which also lets an attacker access all secrets and data accessible to the services running on it. Hence, configuring users and roles properly is a must to secure the cluster, especially in organizations where more than one user can access the cluster.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-openid-connect"&gt;
  &lt;/a&gt;
  Why OpenID Connect?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://developer.okta.com/docs/concepts/oauth-openid/"&gt;OpenID Connect&lt;/a&gt; is an authentication standard built on top of OAuth 2.0. It adds an additional token called an ID token. OpenID Connect also standardizes areas that OAuth 2.0 leaves open to choice, such as scopes, endpoint discovery, and dynamic registration of clients.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the default authentication mechanism of the Kubernetes API server might be enough for simple use cases, where only a handful of people manage the cluster, it does not scale for bigger organizations. Also, the default is definitely not the most secure way, because Kubernetes does not handle user management and expects it to be done outside. This is where OpenID Connect (OIDC) comes in. OIDC can manage users and groups, which works very well with the Kubernetes RBAC to provide very granular control of who can access what inside a cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V8TWFWlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pu0qbgcqc84fy4719cw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V8TWFWlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pu0qbgcqc84fy4719cw.jpg" alt="K8s OIDC flow" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With an OIDC integration, you can use the same OIDC provider used for SSO in your existing infrastructure to access your Kubernetes cluster, like Okta or Keycloak.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#use-okta-as-an-oidc-provider-to-secure-the-api-server"&gt;
  &lt;/a&gt;
  Use Okta as an OIDC provider to secure the API server
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Okta provides cloud software that helps companies manage and secure user authentication into applications and enables developers to build identity controls into applications, websites, web services, and devices. Okta is a certified OpenID Connect provider.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let us see how we can secure the Kubernetes API server using Okta as an OIDC provider and use RBAC to control access from the Okta Admin Console. If you are using Amazon EKS, check out this &lt;a href="https://developer.okta.com/blog/2021/10/08/secure-access-to-aws-eks"&gt;tutorial for using Okta OIDC with EKS&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-youll-need-to-get-started"&gt;
  &lt;/a&gt;
  What you'll need to get started
&lt;/h2&gt;

&lt;p&gt;Before you try this out, make sure you have access to the following.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An Okta account. You can sign up for a &lt;a href="https://developer.okta.com/signup/"&gt;free Okta account&lt;/a&gt;. Or, you can use another OIDC provider or &lt;a href="https://github.com/dexidp/dex"&gt;Dex&lt;/a&gt;, and the steps should be similar.&lt;/li&gt;
&lt;li&gt;A Kubernetes cluster. I'm using &lt;a href="https://k3d.io/"&gt;k3d&lt;/a&gt; to run a local &lt;a href="https://k3s.io/"&gt;k3s&lt;/a&gt; cluster. You can use any Kubernetes distribution, including managed PaaS like Amazon EKS, AKS, and GKE, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://kubernetes.io/docs/tasks/tools/"&gt;kubectl&lt;/a&gt; installed on your machine.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learn.hashicorp.com/tutorials/terraform/install-cli"&gt;Terraform&lt;/a&gt; installed on your machine. This is not required if you do the Okta configuration via the &lt;a href="https://login.okta.com/"&gt;Okta Admin Console&lt;/a&gt; GUI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#set-up-an-okta-oidc-application-and-authorization-server"&gt;
  &lt;/a&gt;
  Set up an Okta OIDC application and authorization server
&lt;/h2&gt;

&lt;p&gt;You can achieve OIDC login for the cluster by creating a simple OIDC application with Okta either using the Okta CLI or the Admin Console. But with an OIDC application alone, you would have to use the client secret to authenticate from kubectl or any other client library. Authenticating with the client secret does not scale and is not better than default k8s authentication mechanisms, as you won't have granular controls over users and roles. For a more helpful setup, we need an OIDC application and an authorization server with customized claims and policies for Kubernetes. This way, we can use Okta to manage users and permissions as well.&lt;/p&gt;

&lt;p&gt;There are multiple ways to set up an OIDC application and authorization server in Okta. If you prefer to do this via a GUI, then follow the steps in the &lt;a href="https://developer.okta.com/blog/2021/10/08/secure-access-to-aws-eks#configure-your-okta-org"&gt;*&lt;em&gt;Configure Your Okta Org *&lt;/em&gt; section&lt;/a&gt; of the article mentioned earlier, to do it via the Okta Admin Console.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will use Terraform to configure the Okta part so that you can reuse the code for any automation required. Let's dive into each step needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-terraform"&gt;
  &lt;/a&gt;
  Set up Terraform
&lt;/h3&gt;

&lt;p&gt;You can find the complete Terraform source code for this article in this &lt;a href="https://github.com/oktadev/okta-k8s-oidc-terraform-example"&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we need to configure the &lt;a href="https://registry.terraform.io/providers/okta/okta/latest/docs"&gt;Okta Terraform provider&lt;/a&gt;. Create a new Terraform file, let's say &lt;code&gt;okta.main.tf&lt;/code&gt;, and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"base_url"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"The Okta base URL. Example: okta.com, oktapreview.com, etc. This is the domain part of your Okta org URL"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"org_name"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"The Okta org name. This is the part before the domain in your Okta org URL"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="s2"&gt;"api_token"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"The Okta API token, this will be read from environment variable (TF_VAR_api_token) for security"&lt;/span&gt;
  &lt;span class="nx"&gt;sensitive&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Enable and configure the Okta provider&lt;/span&gt;
&lt;span class="nx"&gt;terraform&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;required_providers&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;okta&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;source&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"okta/okta"&lt;/span&gt;
      &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~&amp;gt; 3.15"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;provider&lt;/span&gt; &lt;span class="s2"&gt;"okta"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;org_name&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;org_name&lt;/span&gt;
  &lt;span class="nx"&gt;base_url&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;base_url&lt;/span&gt;
  &lt;span class="nx"&gt;api_token&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;var&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api_token&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to provide the input variables &lt;code&gt;org_name&lt;/code&gt;, &lt;code&gt;base_url&lt;/code&gt;, and &lt;code&gt;api_token&lt;/code&gt;. Update these values in a file named &lt;code&gt;okta.config.auto.tfvars&lt;/code&gt;. The &lt;code&gt;.auto&lt;/code&gt; in the name is important; otherwise, Terraform will not pick it up automatically. For example, if the address of your Okta instance is &lt;code&gt;dev-1234.okta.com&lt;/code&gt;, then your &lt;code&gt;org_name&lt;/code&gt; would be &lt;code&gt;dev-1234&lt;/code&gt;, and &lt;code&gt;base_url&lt;/code&gt; would be everything that comes after the org name (e.g., okta.com).&lt;/p&gt;

&lt;p&gt;Next, you will need to generate the &lt;code&gt;api_token&lt;/code&gt; value. Log in to your Okta administrator console as a superuser and select &lt;strong&gt;Security&lt;/strong&gt; &amp;gt; &lt;strong&gt;API&lt;/strong&gt; &amp;gt; &lt;strong&gt;Tokens (Tab)&lt;/strong&gt; from the navigation menu. Next, click the &lt;strong&gt;Create Token&lt;/strong&gt; button, give your token a name, click &lt;strong&gt;Create Token&lt;/strong&gt;, and copy the newly generated token. Save this in a separate &lt;code&gt;secret.auto.tfvars&lt;/code&gt; file excluded from Git or in an environment variable named &lt;code&gt;TF_VAR_api_token&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Okta provider is now configured and ready to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-groups"&gt;
  &lt;/a&gt;
  Create groups
&lt;/h3&gt;

&lt;p&gt;Now we need some groups to differentiate and map different kinds of users who want to access our clusters. Let's say we have a group of administrators with full access to the cluster and another group of users who have limited access. You can have any number of groups as per your needs. The configuration below will create two groups. The group's privileges will be defined using Kubernetes RBAC policies on the cluster, which we will do later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Set up OKTA groups&lt;/span&gt;
&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_group"&lt;/span&gt; &lt;span class="s2"&gt;"k8s_admin"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s-admins"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Users who can access k8s cluster as admins"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_group"&lt;/span&gt; &lt;span class="s2"&gt;"k8s_restricted_users"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s-restricted-users"&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Users who can only view pods and services in default namespace"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#assign-users-to-the-groups"&gt;
  &lt;/a&gt;
  Assign users to the groups
&lt;/h3&gt;

&lt;p&gt;The below snippet looks up existing users and adds them to the groups. You can add any number of users at this stage, or you can skip adding users and do it via the Okta Admin Console later. For this exercise, I'm fetching existing users. You could also create new users using the &lt;code&gt;okta_user&lt;/code&gt; resource.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Assign users to the groups&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"okta_user"&lt;/span&gt; &lt;span class="s2"&gt;"admin"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;search&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"profile.email"&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;your_admin_user_email&amp;gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_group_memberships"&lt;/span&gt; &lt;span class="s2"&gt;"admin_user"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;group_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_group&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_admin&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;okta_user&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;admin&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="s2"&gt;"okta_user"&lt;/span&gt; &lt;span class="s2"&gt;"restricted_user"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;search&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"profile.email"&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;another_user_email&amp;gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_group_memberships"&lt;/span&gt; &lt;span class="s2"&gt;"restricted_user"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;group_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_group&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_restricted_users&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;okta_user&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restricted_user&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-an-oidc-application"&gt;
  &lt;/a&gt;
  Create an OIDC application
&lt;/h3&gt;

&lt;p&gt;Now that our groups are in place, let's create an OIDC application. We will set the application type to &lt;code&gt;native&lt;/code&gt; and use PKCE as client authentication, which is much more secure than using a client secret. We will also set the redirect URIs to &lt;code&gt;localhost:8000&lt;/code&gt; so that we can work with kubectl locally. We should also assign the groups we created earlier to this application here. Finally, we can capture the client ID of the created app using an output variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create an OIDC application&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_app_oauth"&lt;/span&gt; &lt;span class="s2"&gt;"k8s_oidc"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;label&lt;/span&gt;                      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s OIDC"&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;                       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"native"&lt;/span&gt; &lt;span class="c1"&gt;# this is important&lt;/span&gt;
  &lt;span class="nx"&gt;token_endpoint_auth_method&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"none"&lt;/span&gt;   &lt;span class="c1"&gt;# this sets the client authentication to PKCE&lt;/span&gt;
  &lt;span class="nx"&gt;grant_types&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"authorization_code"&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;response_types&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"code"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;redirect_uris&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"http://localhost:8000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;post_logout_redirect_uris&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"http://localhost:8000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;lifecycle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ignore_changes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Assign groups to the OIDC application&lt;/span&gt;
&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_app_group_assignments"&lt;/span&gt; &lt;span class="s2"&gt;"k8s_oidc_group"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;app_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_app_oauth&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_oidc&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;group&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_group&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_admin&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;group&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_group&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_restricted_users&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"k8s_oidc_client_id"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_app_oauth&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_oidc&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client_id&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-an-authorization-server"&gt;
  &lt;/a&gt;
  Create an authorization server
&lt;/h3&gt;

&lt;p&gt;Next, we need an authorization server so that we can define policies and claims. We will also capture the issuer URL in an output variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create an authorization server&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_auth_server"&lt;/span&gt; &lt;span class="s2"&gt;"oidc_auth_server"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s-auth"&lt;/span&gt;
  &lt;span class="nx"&gt;audiences&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"http:://localhost:8000"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;"k8s_oidc_issuer_url"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oidc_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;issuer&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-claims-to-the-authorization-server"&gt;
  &lt;/a&gt;
  Add claims to the authorization server
&lt;/h3&gt;

&lt;p&gt;Let's add a claim to the authorization server to add the user's groups in the &lt;code&gt;id_token&lt;/code&gt; when they authenticate. We will need this to do RBAC at the Kubernetes side. Also, note that we are only adding groups with the prefix &lt;code&gt;k8s-&lt;/code&gt; to the claim. This is to avoid adding groups that are not related to Kubernetes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Add claims to the authorization server&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_auth_server_claim"&lt;/span&gt; &lt;span class="s2"&gt;"auth_claim"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;                    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"groups"&lt;/span&gt;
  &lt;span class="nx"&gt;auth_server_id&lt;/span&gt;          &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oidc_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;always_include_in_token&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;claim_type&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"IDENTITY"&lt;/span&gt;
  &lt;span class="nx"&gt;group_filter_type&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"STARTS_WITH"&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;                   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s-"&lt;/span&gt;
  &lt;span class="nx"&gt;value_type&lt;/span&gt;              &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"GROUPS"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-policy-and-rule-to-the-authorization-server"&gt;
  &lt;/a&gt;
  Add policy and rule to the authorization server
&lt;/h3&gt;

&lt;p&gt;Now we need to create policies and rules for the authorization server. The below policy defines which OIDC applications it will be assigned to. Then we create a rule for the policy that will define the PKCE tokens lifetime and refresh interval. For this, we are leaving the values at default, which is 1 hour lifetime and unlimited refresh interval, but you can change them as per your needs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Add policy and rules to the authorization server&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_auth_server_policy"&lt;/span&gt; &lt;span class="s2"&gt;"auth_policy"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;             &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"k8s_policy"&lt;/span&gt;
  &lt;span class="nx"&gt;auth_server_id&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oidc_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Policy for allowed clients"&lt;/span&gt;
  &lt;span class="nx"&gt;priority&lt;/span&gt;         &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;client_whitelist&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;okta_app_oauth&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;k8s_oidc&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"okta_auth_server_policy_rule"&lt;/span&gt; &lt;span class="s2"&gt;"auth_policy_rule"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;           &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"AuthCode + PKCE"&lt;/span&gt;
  &lt;span class="nx"&gt;auth_server_id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oidc_auth_server&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;policy_id&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;okta_auth_server_policy&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth_policy&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
  &lt;span class="nx"&gt;priority&lt;/span&gt;       &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nx"&gt;grant_type_whitelist&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"authorization_code"&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;scope_whitelist&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;group_whitelist&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"EVERYONE"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-the-okta-configurations-using-terraform"&gt;
  &lt;/a&gt;
  Create the Okta configurations using Terraform
&lt;/h3&gt;

&lt;p&gt;Now that the Terraform code is ready, let's apply it. First, run &lt;code&gt;terraform plan&lt;/code&gt; to see the changes that will be made. Verify that the changes proposed by the &lt;code&gt;plan&lt;/code&gt; make the changes you wanted, on the resources that you intended to modify. Then run &lt;code&gt;terraform apply&lt;/code&gt; and type &lt;code&gt;yes&lt;/code&gt; to apply the changes. You should see an output similar to this. You can also log in to the Okta Admin Console to verify the changes.&lt;/p&gt;

&lt;p&gt;Copy the output values as we will need them for the next steps.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;okta_group.k8s_admin: Creating...
okta_group.k8s_restricted_users: Creating...
okta_auth_server.oidc_auth_server: Creating...
okta_app_oauth.k8s_oidc: Creating...
okta_group.k8s_admin: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 0s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;00g2b0rmupxo1C1HW5d7]
okta_group.k8s_restricted_users: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 0s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;00g2b0q4zejpq6hbi5d7]
okta_group_memberships.restricted_user: Creating...
okta_group_memberships.admin_user: Creating...
okta_auth_server.oidc_auth_server: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;aus2b0ql0ihgilIh95d7]
okta_auth_server_claim.auth_claim: Creating...
okta_group_memberships.admin_user: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;00g2b0rmupxo1C1HW5d7]
okta_group_memberships.restricted_user: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;00g2b0q4zejpq6hbi5d7]
okta_app_oauth.k8s_oidc: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0oa2b0qc0x38Xjxbk5d7]
okta_app_group_assignments.k8s_oidc_group: Creating...
okta_auth_server_policy.auth_policy: Creating...
okta_auth_server_claim.auth_claim: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 0s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ocl2b0rc6ejmIO4KR5d7]
okta_app_group_assignments.k8s_oidc_group: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0oa2b0qc0x38Xjxbk5d7]
okta_auth_server_policy.auth_policy: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;00p2b0qjjxsSz0Mya5d7]
okta_auth_server_policy_rule.auth_policy_rule: Creating...
okta_auth_server_policy_rule.auth_policy_rule: Creation &lt;span class="nb"&gt;complete &lt;/span&gt;after 1s &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0pr2b0rgnfxjyu6cy5d7]

Apply &lt;span class="nb"&gt;complete&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; Resources: 10 added, 0 changed, 0 destroyed.

Outputs:

k8s_oidc_client_id &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0oa2b0qc0x38Xjxbk5d7"&lt;/span&gt;
k8s_oidc_issuer_url &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://dev-xxxxxx.okta.com/oauth2/aus2b0ql0ihgilIh95d7"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run &lt;code&gt;terraform destroy&lt;/code&gt; to revert the changes if required.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: You can use the &lt;code&gt;terraform import &amp;lt;resource_name.id&amp;gt;&lt;/code&gt; command to import data and configuration from your Okta instance. Refer to &lt;a href="https://registry.terraform.io/providers/okta/okta/latest/docs"&gt;these Okta Terraform provider docs&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#preparing-the-cluster-for-oidc"&gt;
  &lt;/a&gt;
  Preparing the cluster for OIDC
&lt;/h1&gt;

&lt;p&gt;Now we need to prepare the cluster to work with OIDC. For this, we need to update the API server flags below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;oidc-issuer-url&lt;/code&gt;: This will be your issuer URL from the Okta authorization server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;oidc-client-id&lt;/code&gt;: This is the client ID from the Okta OIDC application&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;oidc-username-claim&lt;/code&gt;: This is the claim that will be used to identify the user. In this case, it is &lt;code&gt;email&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;oidc-groups-claim&lt;/code&gt;: This is the claim that will be used to identify the groups. In this case, it is &lt;code&gt;groups&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;oidc-ca-file&lt;/code&gt;: This is the CA file that is used to validate the OIDC server. If you are using Okta as an OIDC provider, then you don't need to set this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you encounter an issue where OIDC groups/users collide with Kubernetes groups/users, you can set &lt;code&gt;oidc-groups-prefix&lt;/code&gt; and &lt;code&gt;oidc-username-prefix&lt;/code&gt; flags as well.&lt;/p&gt;

&lt;p&gt;Flags can be set when creating the cluster or by patching the API server via SSH, as described below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-cluster-with-oidc-enabled"&gt;
  &lt;/a&gt;
  Create a cluster with OIDC enabled
&lt;/h2&gt;

&lt;p&gt;Here is how you can create a new k8s cluster with OIDC enabled using different tools. Execute the command for the tool you're using. Make sure to replace &lt;code&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;k8s_oidc_client_id&amp;gt;&lt;/code&gt; with values from the output of the Terraform step. For any other tools, refer to their documentation on how to update API server flags.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubeadmn"&gt;
  &lt;/a&gt;
  kubeadmn
&lt;/h3&gt;

&lt;p&gt;If you are using &lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/"&gt;kubeadmn&lt;/a&gt;, add the following flags to the cluster configuration and pass them to &lt;code&gt;kubeadm init&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;kubeadm.k8s.io/v1beta3&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterConfiguration&lt;/span&gt;
&lt;span class="na"&gt;apiServer&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;extraArgs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;oidc-issuer-url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt;&lt;/span&gt;
    &lt;span class="na"&gt;oidc-client-id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;k8s_oidc_client_id&amp;gt;&lt;/span&gt;
    &lt;span class="na"&gt;oidc-username-claim&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
    &lt;span class="na"&gt;oidc-groups-claim&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;groups&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#kops"&gt;
  &lt;/a&gt;
  kOps
&lt;/h3&gt;

&lt;p&gt;For &lt;a href="https://kops.sigs.k8s.io/"&gt;kOps&lt;/a&gt;, create a cluster with the required config. For example, the code below will create a cluster in AWS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kops create cluster &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--authorization&lt;/span&gt; RBAC &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--name&lt;/span&gt; &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--cloud&lt;/span&gt; aws &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--state&lt;/span&gt; &lt;span class="nv"&gt;$S3_STATE_STORE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now edit the cluster config and add OIDC data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kops edit cluster &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt; &lt;span class="nt"&gt;--state&lt;/span&gt; &lt;span class="nv"&gt;$S3_STATE_STORE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add this YAML to the &lt;code&gt;kubeAPIServer&lt;/code&gt; spec.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;kubeAPIServer&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;authorizationRbacSuperUser&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;admin&lt;/span&gt;
  &lt;span class="na"&gt;oidcIssuerURL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;oidcClientID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;k8s_oidc_client_id&amp;gt;&lt;/span&gt;
  &lt;span class="na"&gt;oidcUsernameClaim&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;email&lt;/span&gt;
  &lt;span class="na"&gt;oidcGroupsClaim&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;groups&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#k3d"&gt;
  &lt;/a&gt;
  k3d
&lt;/h3&gt;

&lt;p&gt;To create a &lt;a href="https://k3s.io/"&gt;k3s&lt;/a&gt; cluster using &lt;a href="https://k3d.io/"&gt;k3d&lt;/a&gt;, run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# k3d v5.0.0+&lt;/span&gt;
k3d cluster create &lt;span class="nv"&gt;$CLUSTER_NAME&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--k3s-arg&lt;/span&gt; &lt;span class="s2"&gt;"--kube-apiserver-arg=oidc-issuer-url=&amp;lt;k8s_oidc_issuer_url&amp;gt;@server:0"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--k3s-arg&lt;/span&gt; &lt;span class="s2"&gt;"--kube-apiserver-arg=oidc-client-id=&amp;lt;k8s_oidc_client_id&amp;gt;@server:0"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--k3s-arg&lt;/span&gt; &lt;span class="s2"&gt;"--kube-apiserver-arg=oidc-username-claim=email@server:0"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--k3s-arg&lt;/span&gt; &lt;span class="s2"&gt;"--kube-apiserver-arg=oidc-groups-claim=groups@server:0"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#updating-an-existing-cluster-to-enable-oidc"&gt;
  &lt;/a&gt;
  Updating an existing cluster to enable OIDC
&lt;/h2&gt;

&lt;p&gt;If you already have an existing cluster, you can SSH into it using the root user and patch the API server with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh root@master-node-ip

&lt;span class="nb"&gt;sudo &lt;/span&gt;vi /etc/kubernetes/manifests/kube-apiserver.yaml

...
    &lt;span class="nb"&gt;command&lt;/span&gt;:
    - /hyperkube
    - apiserver
    - &lt;span class="nt"&gt;--advertise-address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;x.x.x.x
...

    - &lt;span class="nt"&gt;--oidc-issuer-url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt; &lt;span class="c"&gt;# &amp;lt;-- üî¥ update this&lt;/span&gt;
    - &lt;span class="nt"&gt;--oidc-client-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_client_id&amp;gt; &lt;span class="c"&gt;# &amp;lt;-- üî¥ update this&lt;/span&gt;
    - &lt;span class="nt"&gt;--oidc-username-claim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;email &lt;span class="c"&gt;# &amp;lt;-- üî¥ update this&lt;/span&gt;
    - &lt;span class="nt"&gt;--oidc-groups-claim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;groups&lt;/span&gt; &lt;span class="c"&gt;# &amp;lt;-- üî¥ update this&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are using a managed service like &lt;a href="https://developer.okta.com/blog/2021/10/08/secure-access-to-aws-eks#add-okta-as-an-oidc-provider-on-your-eks-cluster"&gt;EKS&lt;/a&gt; or &lt;a href="https://cloud.google.com/kubernetes-engine/docs/how-to/oidc#enabling_on_an_existing_cluster"&gt;GKE&lt;/a&gt;, then follow their instructions to update the API server.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#configure-rbac"&gt;
  &lt;/a&gt;
  Configure RBAC
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/"&gt;Role-based access control&lt;/a&gt; lets you control who can access what is inside a cluster. This is a very powerful feature and can be used to control access to specific resources. The great thing about using OIDC is that we can use it with RBAC to enable very granular control over resources.&lt;/p&gt;

&lt;p&gt;Most Kubernetes distributions have RBAC enabled by default. If not, make sure to enable it before proceeding. It can be set using the &lt;code&gt;--authorization-mode&lt;/code&gt; flag for the API server when creating or patching the cluster. For example, &lt;code&gt;--authorization-mode=RBAC,anotherMethod&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For this exercise, we will use both groups we created in Okta. At the cluster level, we restrict admin access to a specific group that will be controlled via the OIDC provider, in this case, Okta.&lt;/p&gt;

&lt;p&gt;Let's create a cluster role binding by applying the below YAML via kubectl. This binds to the built-in cluster role called &lt;code&gt;cluster-admin&lt;/code&gt; and restricts access to users in the &lt;code&gt;k8s-admins&lt;/code&gt; group in Okta. Now any user added to the group will have access to the cluster, and removing someone from the group will be enough to remove their access.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; - &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt;
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: oidc-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: Group
  name: k8s-admins
&lt;/span&gt;&lt;span class="no"&gt;EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In real use cases, you may want to restrict further a group's access to specific resource types or namespaces, add multiple groups with different permissions, and so on. See &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/"&gt;this&lt;/a&gt; for different possibilities.&lt;/p&gt;

&lt;p&gt;Now, let's create a k8s role that can only view pods and services in the default namespace.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; - &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt;
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: restricted-user
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods", "services"]
  verbs: ["get", "watch", "list"]
&lt;/span&gt;&lt;span class="no"&gt;EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can bind the role to the second group we created in Okta.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; - &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt;
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: oidc-cluster-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: restricted-user
subjects:
- kind: Group
  name: k8s-restricted-users
&lt;/span&gt;&lt;span class="no"&gt;EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! The cluster is now ready for some OIDC action.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#connecting-to-the-cluster-using-kubectl"&gt;
  &lt;/a&gt;
  Connecting to the cluster using kubectl
&lt;/h1&gt;

&lt;p&gt;Before we can go ahead and test this out, we need to do some setup for kubectl so that it knows how to do OIDC authentication. We need to install &lt;a href="https://github.com/int128/kubelogin"&gt;kubelogin&lt;/a&gt; plugin for this. Go ahead and install it using any of the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Homebrew (macOS and Linux)&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;int128/kubelogin/kubelogin

&lt;span class="c"&gt;# Krew (macOS, Linux, Windows and ARM)&lt;/span&gt;
kubectl krew &lt;span class="nb"&gt;install &lt;/span&gt;oidc-login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The plugin enables OIDC login capability for kubectl. Let's test it out first. Run the following command, make sure to replace &lt;code&gt;k8s_oidc_issuer_url&lt;/code&gt; and &lt;code&gt;k8s_oidc_client_id&lt;/code&gt; with what you saved earlier during Okta set up.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl oidc-login setup &lt;span class="nt"&gt;--oidc-issuer-url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt; &lt;span class="nt"&gt;--oidc-client-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_client_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should produce an output that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;authentication in progress...
Opening in existing browser session.

## 2. Verify authentication

You got a token with the following claims:

{
  "sub": "00u28lpcoheT48W5A5d7",
  "ver": 1,
  "iss": "&amp;lt;k8s_oidc_issuer_url&amp;gt;",
  "aud": "&amp;lt;k8s_oidc_client_id&amp;gt;",
  "iat": 1634657188,
  "exp": 1634660788,
  "jti": "ID.AmO7M7Z4xh_rSN4IHVuQEfJ4QuoADOWHSrVHuNyn9so",
  "amr": [
    "pwd"
  ],
  "idp": "0oa28lrldhsBglcC35d7",
  "nonce": "2Rsv7E84vo_K14J6qm9IgKjNsCUxb4Hc16qgzx9CKlk",
  "auth_time": 1634649927,
  "at_hash": "veXQkvqTjCl70OkZnKZVyA",
  "groups": [
    "k8s-admins"
  ]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us update kubectl configuration to add an OIDC user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl config set-credentials oidc-user &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-api-version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;client.authentication.k8s.io/v1beta1 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;kubectl &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;oidc-login &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;get-token &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;--oidc-issuer-url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_issuer_url&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;--oidc-client-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;k8s_oidc_client_id&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nt"&gt;--exec-arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;--oidc-extra-scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"email offline_access profile openid"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use this user to authenticate to the cluster via kubectl.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get pods &lt;span class="nt"&gt;--user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;oidc-user &lt;span class="nt"&gt;-n&lt;/span&gt; default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should open a browser window to authenticate you. You can use your Okta account credentials to log in.&lt;/p&gt;

&lt;p&gt;Test out this RBAC configuration by playing around with different users in different groups. Users who are not in the &lt;code&gt;k8s-admins&lt;/code&gt; group in Okta should not be able to access any resource. Users who are only in the &lt;code&gt;restricted-users&lt;/code&gt; group should only be able to see pods and services.&lt;/p&gt;

&lt;p&gt;You can use the below command to set this user as default for your current kubectl context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl config set-context --current --user=oidc-user
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#learn-more-about-using-oidc-with-kubernetes"&gt;
  &lt;/a&gt;
  Learn more about using OIDC with Kubernetes
&lt;/h1&gt;

&lt;p&gt;Using OIDC is a great way to secure your Kubernetes clusters, especially in bigger teams. It is more secure than any of the default Kubernetes authentication mechanisms. On top of that, it will let you manage users and their roles and permissions in your cluster, and even add multi-factor authentication for your cluster.&lt;/p&gt;

&lt;p&gt;While this exercise shows you an Okta implementation, the process would be very similar for other OIDC providers. Check out the &lt;a href="https://registry.terraform.io/providers/okta/okta/latest/docs"&gt;Okta Terraform provider docs&lt;/a&gt; to see what else can be automated via Terraform. You can also automate the Kubernetes parts via terraform using the &lt;a href="https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs"&gt;Kubernetes Terraform provider&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to learn more about Kubernetes, OIDC, or using OIDC with Kubernetes, check out these additional resources.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/docs/concepts/oauth-openid/"&gt;OAuth 2.0 and OpenID Connect Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/blog/2021/10/08/secure-access-to-aws-eks"&gt;Secure Access to AWS EKS Clusters for Admins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/blog/2019/04/01/spring-boot-microservices-with-kubernetes"&gt;Build a Microservice Architecture with Spring Boot and Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/blog/2021/06/01/kubernetes-spring-boot-jhipster"&gt;Kubernetes to the Cloud with Spring Boot and JHipster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/blog/2020/04/24/okta-terraform-automate-identity-and-infrastructure"&gt;Using Okta Advanced Server Access &amp;amp; Terraform to Automate Identity &amp;amp; Infrastructure as Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.okta.com/blog/2020/02/03/managing-multiple-okta-instances-with-terraform-cloud"&gt;Managing Multiple Okta Instances with Terraform Cloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find the code for this tutorial on GitHub at &lt;a href="https://github.com/oktadev/okta-k8s-oidc-terraform-example"&gt;https://github.com/oktadev/okta-k8s-oidc-terraform-example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you liked this tutorial, chances are you'll like others we publish. Please follow &lt;a href="https://twitter.com/oktadev"&gt;@oktadev on Twitter&lt;/a&gt; and &lt;a href="https://youtube.com/oktadev"&gt;subscribe to our YouTube channel&lt;/a&gt; to get notified when we publish new developer tutorials.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>oidc</category>
      <category>okta</category>
      <category>terraform</category>
    </item>
    <item>
      <title>Creating a Squid Game Card in HTML</title>
      <author>Edwin Torres ‚ú®</author>
      <pubDate>Tue, 09 Nov 2021 11:41:59 +0000</pubDate>
      <link>https://dev.to/realedwintorres/creating-a-squid-game-card-in-html-3fdh</link>
      <guid>https://dev.to/realedwintorres/creating-a-squid-game-card-in-html-3fdh</guid>
      <description>&lt;p&gt;I really enjoyed the &lt;a href="https://www.netflix.com/"&gt;Netflix&lt;/a&gt;  series &lt;em&gt;Squid Game&lt;/em&gt;. The series was intense üò±, and I‚Äôm a big fan now.&lt;/p&gt;

&lt;p&gt;So I decided to write a quick HTML canvas program to display a Squid Game card. No worries. No spoilers here!&lt;/p&gt;

&lt;p&gt;It‚Äôs a short and simple HTML program. Let's walk through the code.&lt;/p&gt;

&lt;p&gt;Here are the beginning HTML elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;SG&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next are the start of the body and the canvas elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"myCanvas"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"336"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"192"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript code comes next. Here we get the canvas and context objects:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;myCanvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The context object lets us set colors, set styles, and draw. This code draws a filled rectangle with the specified fill color on the entire canvas, representing the business card background:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#E2C4A5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The context object also lets us set the stroke width and color of the shape outlines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#655451&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next are the circle, triangle, and square:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;193&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;215&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we end the program with the closing tags:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's the complete program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;SG&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"myCanvas"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"336"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"192"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;  

  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;myCanvas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#E2C4A5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fillRect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#655451&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;193&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;121&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;215&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save this program to a file named &lt;code&gt;sg.html&lt;/code&gt; and open it in a browser.&lt;/p&gt;

&lt;p&gt;Enjoy the program and Squid Game! üòÄ&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Follow me on Twitter &lt;a href="https://twitter.com/realEdwinTorres"&gt;&lt;code&gt;@realEdwinTorres&lt;/code&gt;&lt;/a&gt; for more programming tips and help.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Top 10 articles about JavaScript of the weeküçì.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Tue, 09 Nov 2021 11:32:13 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-articles-about-javascript-of-the-week-39o9</link>
      <guid>https://dev.to/ksengine/top-10-articles-about-javascript-of-the-week-39o9</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;/p&gt;

&lt;p&gt;Once relegated to the browser as one of the 3 core technologies of the web, JavaScript can now be found almost anywhere you find code.&lt;br&gt;
JavaScript developers move fast and push software development forward; they can be as opinionated as the frameworks they use, so let's keep it clean here and make it a place to learn from each other!&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__6"&gt;
  
    .ltag__tag__id__6 .follow-action-button{
      background-color: #F7DF1E !important;
      color: #000000 !important;
      border-color: #F7DF1E !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/javascript" class="ltag__tag__link"&gt;javascript&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        &amp;lt;p&amp;gt;Once relegated to the browser as one of the 3 core technologies of the web, JavaScript can now be found almost anywhere you find code. &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;JavaScript developers move fast and push software development forward; they can be as opinionated as the frameworks they use, so let's keep it clean here and make it a place to learn from each other!&amp;lt;/p&amp;gt;
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the most popular articles published on this platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/nilanth/react-architecture-for-enterprise-application-3pnh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8f1hEl9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RmcQshZa--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt2hyi92343wdhmqh8r7.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/nilanth" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIOawU8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--pANBZ-qG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/561035/f0dd96a3-bc20-4bb3-8717-03125438c6ab.jpeg" alt="nilanth"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nilanth/react-architecture-for-enterprise-application-3pnh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Architecture for Enterprise Application&lt;/h2&gt;
      &lt;h3&gt;Nilanth „Éª Nov 6 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/altamashali/deep-dive-into-nodejs-architecture-5190"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--489rJZ8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p0YB9Ymd--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9x6ibatjqgzibmxd29j.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/altamashali" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zl3kyyLk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--O64mS1vZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/638177/d5756be4-5953-47cd-8591-312d5177c31b.png" alt="altamashali"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/altamashali/deep-dive-into-nodejs-architecture-5190" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Deep dive into Node.js Architecture&lt;/h2&gt;
      &lt;h3&gt;Altamash Ali „Éª Nov 6 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codebucks/build-a-stunning-portfolio-with-react-js-p1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tws4-o5N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--madTBCLD--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pkfs5vyft03x5ohb1ww.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/codebucks" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uEyjIdNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--v1YN8sWN--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/520837/06d9d334-edd9-457e-9741-9b4e929bcff6.png" alt="codebucks"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/codebucks/build-a-stunning-portfolio-with-react-js-p1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;üî•Build a Stunning Portfolio website with React JS&lt;/h2&gt;
      &lt;h3&gt;CodeBucks „Éª Nov 2 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ruppysuppy/5-tips-to-take-your-website-lighthouse-score-from-meh-to-wow-2375"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TMWzaGBR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Fls98rae--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpnxqdvknws1bitpak6p.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ruppysuppy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oA7zxE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--E69pqyft--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/530414/941751d8-06b8-41bd-9de9-6ea056b7199f.png" alt="ruppysuppy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ruppysuppy/5-tips-to-take-your-website-lighthouse-score-from-meh-to-wow-2375" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 Tips to Take your Website Lighthouse Score from Meh to WOW!&lt;/h2&gt;
      &lt;h3&gt;Tapajyoti Bose „Éª Nov 7 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/codeoz/enhance-your-js-skill-by-using-the-correct-array-method-5c2j"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xFIgf3tc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--TS3HdV5m--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t99gaklkkvhwa391td5n.jpg" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/codeoz" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fqyYINYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--A8scdPPB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/535221/d73c1f8e-f607-440b-a29d-1e8e5f1174ab.png" alt="codeoz"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/codeoz/enhance-your-js-skill-by-using-the-correct-array-method-5c2j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Enhance your JS Skill by using the correct array method&lt;/h2&gt;
      &lt;h3&gt;CodeOz „Éª Nov 5 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/mbarzeev/creating-a-react-component-with-tdd-2jn8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSnv7zGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--a7Qge8DZ--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we1r81gmo7qy4iubpw5f.jpg" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/mbarzeev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4uZ0anF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--A07_qypK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/210953/29b527cd-2c72-4a08-af7b-a8e4eb778637.png" alt="mbarzeev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mbarzeev/creating-a-react-component-with-tdd-2jn8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating a React component with TDD&lt;/h2&gt;
      &lt;h3&gt;Matti Bar-Zeev „Éª Nov 5 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#testing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ok7aSwX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Bui5wFXs--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/43ysdmnjajpn6t7yz7jr.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/medusajs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJWMKFUF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--eI6J4_Sp--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4507/16eb5347-8d42-4547-a4e0-a45d2d91d14b.png" alt="Medusa Commerce" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-odgQ4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--t1wCpb78--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/507096/fe1c31aa-a974-42d3-a189-df8fe702cd3a.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/medusajs/get-started-with-medusa-the-open-source-alternative-to-shopify-305j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Get started with Medusa Part 1: the open-source alternative to Shopify&lt;/h2&gt;
      &lt;h3&gt;Shahed Nasser for Medusa Commerce „Éª Nov 2 „Éª 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/tolgee_i18n/react-doesnt-need-state-management-tool-i-said-31l4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2C4uUvj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FwcfLKHJ--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jawcwoye9j7126xcvjn4.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/tolgee_i18n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ERuIFEsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fYYV_ZUF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4876/6f470322-e090-4c8a-8aba-3c40e786607d.png" alt="Tolgee" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8NiGZgFk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vo8XYK7a--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/736195/64d6bf03-fcad-48cd-8a63-cc14878c89ca.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tolgee_i18n/react-doesnt-need-state-management-tool-i-said-31l4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React doesn't need state management tool, I said&lt;/h2&gt;
      &lt;h3&gt;stepan662 for Tolgee „Éª Nov 8 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/imjoseangel/creating-a-blockchain-in-60-lines-of-python-2hlc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_SNgPDl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Ans1wG3v--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1vyo1vlbfervzy88my6.png" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/imjoseangel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--APl8TkqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z4t1YCUT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/25365/3a095cf1-268b-4f73-bf80-0d068dd0ba09.jpeg" alt="imjoseangel"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/imjoseangel/creating-a-blockchain-in-60-lines-of-python-2hlc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating a blockchain in 60 lines of Python&lt;/h2&gt;
      &lt;h3&gt;Jose Angel Munoz „Éª Nov 5 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/saviomartin/free-certification-courses-for-developers-3378"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DE6MuTTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iGN8CrNa--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz3f8cjvzffd7vfi6o71.jpg" alt="Image of post" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/saviomartin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-Fgd5dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tjdW5659--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/495782/9375dc8c-13d7-4da6-8fed-acae3d00a1f0.jpg" alt="saviomartin"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/saviomartin/free-certification-courses-for-developers-3378" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Free Certification Courses for Developers üî•&lt;/h2&gt;
      &lt;h3&gt;Savio Martin „Éª Nov 4 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/nilanth"&gt;@nilanth&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/altamashali"&gt;@altamashali&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/codebucks"&gt;@codebucks&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ruppysuppy"&gt;@ruppysuppy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/codeoz"&gt;@codeoz&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/mbarzeev"&gt;@mbarzeev&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/shahednasser"&gt;@shahednasser&lt;/a&gt;
, stepan662, imjoseangel, saviomartin .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks üíñüíñüíñ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Intro to Music NFTs</title>
      <author>Roberto Farruggio</author>
      <pubDate>Tue, 09 Nov 2021 10:29:52 +0000</pubDate>
      <link>https://dev.to/far/intro-to-music-nfts-1lel</link>
      <guid>https://dev.to/far/intro-to-music-nfts-1lel</guid>
      <description>&lt;p&gt;&lt;em&gt;note: I originally wrote this for a musician friend who had a vague understanding of NFTs.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PRIMER&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NFTs are simply: digital containers that hold any form of media. We then create scarcity by setting limited editions (i.e. you can make a music NFT to be a 1/1, so only one person can own it, creating demand, thus creating value). NFTs also have an embedded ‚Äúsmart contract‚Äù in them that allows the creator to set percentages on how much royalties they receive every time their work is resold.&lt;/p&gt;

&lt;p&gt;Artists now have a new way of capitalizing their music, especially for furthering engagement within their community. Fans now have a way of ‚Äúowning‚Äù digital artworks, all securely documented on the blockchain. NFTs enable engagement with your audience, for example, selling a one-off collectible digital item, selling super limited/rare works (B sides, unreleased materials, original one-offs, special edition NFT releases, digital assets, or creating your own currency for example for exclusive access to your content, or shows). Your audience can now become seed investors. It reinforces a personable artist to fan relationship.&lt;/p&gt;

&lt;p&gt;‚ùó If you‚Äôre up for a read, here‚Äôs a significant article from earlier days that holds some of the basic ideas of why we'd mint music: newsletter.banklesshq.com/p/crypto-will-fix-the-music-industry&lt;/p&gt;

&lt;p&gt;Although I don‚Äôt want to get into politics too much, a lot of this may sound like wishful thinking. I think we‚Äôre still in early stages so everyone is still figuring this out, but in general, the main ideas are there. Some quick points:&lt;/p&gt;

&lt;p&gt;1 ‚Äî Established artists have a leg up! If you have a following, it would be silly not to bank on this IMO. You‚Äôre simply using new tech to tap into a market.&lt;/p&gt;

&lt;p&gt;2 ‚Äî Audience decides the value of the work by auctioning to the highest bidder, but artists can set a starting bid too&lt;/p&gt;

&lt;p&gt;3 ‚Äî Most music NFTs lean towards Ethereum for the most part (most of these platforms revolves around ETH, WETH, or their own crypto). For example Rarible is a NFT platform that has its own RAR coin. Foundation has its own FND coin, etc. Ethereum is basically Bitcoin except it holds the smart contract technology embedded into it, so it‚Äôs compatible with NFTs.&lt;/p&gt;

&lt;p&gt;4 ‚Äî People treat digital equally with physical, and fans want to own things directly from the artist, they want to be able to say they own it and have their name on it.&lt;/p&gt;

&lt;p&gt;5 ‚Äî Artists are looking for autonomy, so here's a way to be platform agnostic: self-publish your music&lt;/p&gt;

&lt;p&gt;There are some interesting things being discussed today with licensing and publishing - maybe in the future we‚Äôll be able to NFT any music samples, so that music will be thoroughly attributed and all creator royalties are accounted for through the blockchain.&lt;/p&gt;

&lt;p&gt;Also, a quick note about how the music industry works: a lot of people shun the "middlemen", which in some ways, is understandable because musicians are exploited and undervalued in an antiquated music industry.  NFTs can empower artists to self-publish in theory, but in reality, minting a music NFT is not going to launch your music career or give you visibility. Sometimes the "evil" middlemen are exactly who musicians rely on to further their music's visibility. In a sense, streaming platforms put musicians on a map, despite the highway robbery. Point being is many musicians today struggle with getting their work out there and NFTs won't enable that, however it can be a vehicle and tool to enable you as an artist. If you establish yourself as an artist and gain a community around it, the potential for NFTs are immeasurable. This is exactly what you'd be looking for.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOW TO MINT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1 ‚Äî Setup a wallet. I use Rainbow as a wallet. There‚Äôs also metamask. I'd say buy around $50-100 in Ethereum to get started. I buy my ETH off of Coinbase because it‚Äôs become established as a trustworthy ledger. I have the apps installed on my Chrome browser as extensions, and apps on the phone.&lt;/p&gt;

&lt;p&gt;2 ‚Äî Find the platform you want to mint on. Some platforms are invite only. I added some links below. If you can get an invite to Foundation or Superrare, that would be extremely valuable right now. Opensea/Rarible are open to everyone.&lt;/p&gt;

&lt;p&gt;Connect your wallet to the desired platform (usually a button to connect the wallet on the corner of the main page of Zora.co for example). A platform that specifically does music (like catalog.works) would be ideal.&lt;/p&gt;

&lt;p&gt;3 ‚Äî Upload your work and create the NFT. Perhaps you'll upload a LOSSLESS version of your music, or maybe, it's an entire album that grants publishing rights - whatever your plan is - set your ownership percentages, and other parameters. &lt;/p&gt;

&lt;p&gt;Basically there are GAS fees for listing a NFT, so you have to pay fees to the platform you mint on, of course, that‚Äôs where they getchya -_-. These gas fees fluctuate based on mass user activity.&lt;/p&gt;

&lt;p&gt;Once the NFT is minted it then becomes biddable and folks collect them. Someone might buy a NFT and wait until someone offers them a deal to resell it.&lt;/p&gt;

&lt;p&gt;People are realizing there's value in art again, thanks to NFTs.&lt;/p&gt;

&lt;p&gt;The English dance music pioneers, Disclosure, minted an unreleased song they made during their livestream on Twitch, here‚Äôs what it looked like on Zora: zora.co/collections/zora/1267. &lt;/p&gt;

&lt;p&gt;I'm looking into catalog.works more closely now, I think it'd be a strong move for electronic music artists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LINKS/resources&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;‚ùó catalog.works ‚Äî an example of where music NFTs are sold as platform, I think Catalog is an up and coming one and I notice some underground electronic acts joining in. Specific to music only.&lt;/p&gt;

&lt;p&gt;fwb.help ‚Äî FWB is community centered ‚ÄúDAO‚Äù, they created their own currency and in exchange you get access to a thriving creative community (I would take a look into accessing the FWB Discord, there are resources there, although in order to join you‚Äôd have to invest in their FWB coin. And also, it recently got a huge media pressing so I‚Äôm sure there‚Äôs a lot of buzz around this right now). I would look into them just to understand the philosophy.&lt;/p&gt;

&lt;p&gt;hicetnunc ‚Äî an underground, art focused, place to mint NFTs. I would mint some one-off limited edition art through here, or maybe a Bside, or maybe a single or whole EP. I think this is a sorta environment where you‚Äôd meet other aspiring artists, and not just a bunch of bros who want to get rich off of a GIF or something.&lt;/p&gt;

&lt;p&gt;foundation.app ‚Äî A lot of artists I follow are on here, also Superrare is another one. If you can get invites onto these I‚Äôd say it‚Äôs super worth it/super in demand to get access to these platforms that mint ANY form of media&lt;/p&gt;

&lt;p&gt;Zora is another cool NFT platform&lt;/p&gt;

&lt;p&gt;opensea.io ‚Äî NFT platform, similar to rarible, doesn‚Äôt require an invite to join&lt;/p&gt;

&lt;p&gt;submerge.fm I found this while writing this and it looks awesome! Seems to be a new one up and coming.&lt;/p&gt;

&lt;p&gt;audius.co seems to be NFT friendly place to share music, crypto-centered&lt;/p&gt;

&lt;p&gt;Unrelated: I get my crypto news usually from Coindesk.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ENVIRONMENTAL CONCERNS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ethereum is being reapproached into Ethereum 2 to be more economical in gas fees and more environmentally conscious. I believe Bitcoin is following similar protocols. Crypto does exhaust energy resources in an exaggerated scale but this is being attended to and will get better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EXPERIMENTAL IDEAS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can create a generative ambient piece and sell it? for example, you could create a series of completely original compositions, or an AI ambient piece that is always generating sound. NFT artists love combining code into their work, sometimes.&lt;/li&gt;
&lt;li&gt;People are dreaming up ways on how to show a music collection within a virtual vinyl record collection user-interface -- why not value a digital exhibition space?&lt;/li&gt;
&lt;li&gt;Release a field recording as a NFT&lt;/li&gt;
&lt;li&gt;Mint an unreleased EP or single&lt;/li&gt;
&lt;li&gt;Mint the artwork of a music release&lt;/li&gt;
&lt;li&gt;Mint a music video&lt;/li&gt;
&lt;li&gt;Mint a Splice pack&lt;/li&gt;
&lt;li&gt;Patreon model. Mint exclusive behind-the-scenes ‚Äúaccess pass‚Äù that provides things like behind the scenes videos of the artist writing and recording specific songs, or a deeper glimpse into the personal life of the artist. You can set up a contract to offer tiered fan systems like discounts, backstage access to shows in their cities, a one-to-one video call with the artist, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I made this for fun and it was fun to make this. I hope you find it helpful.&lt;/p&gt;

</description>
      <category>music</category>
      <category>nfts</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>8 UI/UX tips about password design</title>
      <author>Cl√©ment</author>
      <pubDate>Tue, 09 Nov 2021 10:25:28 +0000</pubDate>
      <link>https://dev.to/jacquelinclem/8-uiux-tips-about-password-design-5bbn</link>
      <guid>https://dev.to/jacquelinclem/8-uiux-tips-about-password-design-5bbn</guid>
      <description>&lt;p&gt;With the multiplication of saas (service as a software) these last years and the security problems linked to the fact of having an identical password for each service, I find myself using the ¬´ Forgot password ¬ª page much more often than before.&lt;/p&gt;

&lt;p&gt;If this can be corrected beforehand thanks to password managers such as 1Password or LastPass, with the ¬´ no password ¬ª methods implemented by tools like Slack or the social login here are a few UI/UX tips to apply to the design of your ¬´ Login ¬ª and ¬´ Forgot password ¬ª pages.&lt;/p&gt;

&lt;p&gt;Users who try to log in, create a new password or reset their password will be eternally grateful to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-add-a-button-to-hint-the-password"&gt;
  &lt;/a&gt;
  1. Add a button to hint the password
&lt;/h2&gt;

&lt;p&gt;The first thing to do to avoid mistakes is to offer your users the possibility to see the characters they just typed in the password field. This feature is often represented by an ¬´ eye ¬ª icon on the right of the field.&lt;/p&gt;

&lt;p&gt;It‚Äôs simple, basic, as my favorite singer would say but it‚Äôs not always available.&lt;/p&gt;

&lt;p&gt;For those who know the browser console (press F12 now and enter a wonderful world) you can simply change the type= ¬ªpassword ¬ª of the password field to type= ¬ªtext ¬ª and see what you have written.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pzm_fCaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3najof2gxn56gcygkks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pzm_fCaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3najof2gxn56gcygkks.png" alt="Hint the password" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-show-if-the-caps-lock-key-is-on"&gt;
  &lt;/a&gt;
  2. Show if the Caps Lock key is on
&lt;/h2&gt;

&lt;p&gt;Tell your users if the Caps Lock key is enabled when they type their password.&lt;/p&gt;

&lt;p&gt;But don‚Äôt worry if it‚Äôs not, there is no need to display the text ¬´ Caps Lock is Off ¬ª. Few users will see the message and act accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EsTP1oEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d35m4coyg59syje4lx7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EsTP1oEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d35m4coyg59syje4lx7t.png" alt="Caps lock key is on" width="880" height="296"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-show-if-the-num-lock-key-is-on"&gt;
  &lt;/a&gt;
  3. Show if the Num Lock key is on
&lt;/h2&gt;

&lt;p&gt;The same UI/UX design practice can be applied with the Num Lock key&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQGWl3gK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05cdjt1o9nlus8f01o7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQGWl3gK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05cdjt1o9nlus8f01o7e.png" alt="Num Lock key is on" width="880" height="296"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-limit-password-conditions-and-display-them"&gt;
  &lt;/a&gt;
  4. Limit password conditions and display them
&lt;/h2&gt;

&lt;p&gt;Display precise explanations when creating the password, don‚Äôt hide them in an tooltip to bring them out only when your user makes an error. Save him time and frustration. A real time validation is also a real plus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XrwnsETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbsyfq6w8n14l8xddj1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XrwnsETL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbsyfq6w8n14l8xddj1t.png" alt="Limit the password conditions and display them" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-show-the-conditions-required-when-creating-the-password"&gt;
  &lt;/a&gt;
  5. Show the conditions required when creating the password
&lt;/h2&gt;

&lt;p&gt;Remember‚Ä¶ It was 6 months ago, to create his password you asked your user to add:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;At least 1 uppercase&lt;/li&gt;
&lt;li&gt;At least 1 number&lt;/li&gt;
&lt;li&gt;At least 8 character&lt;/li&gt;
&lt;li&gt;And the last 3 digits of his credit card (Wait, what? Did you really ask that?)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A security measure, a fashion effect, a copy cat because the competitor was doing the same or a useless waste of time? It doesn‚Äôt matter, you did it. And today he doesn‚Äôt remember these constraints that you imposed. So if he makes a mistake while login, make his life easier and remind him. Remind him the conditions required days, weeks, months or years ago, I promise you it will help him.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I123ZbXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dkhmkrzf5ze2ncfsqx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I123ZbXX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dkhmkrzf5ze2ncfsqx8.png" alt="Show the conditions" width="880" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-delete-the-password-confirmation-field"&gt;
  &lt;/a&gt;
  6. Delete the password confirmation field
&lt;/h2&gt;

&lt;p&gt;If you follow the previous steps, especially the one that allows the user to see what they are writing, then the password confirmation field that was a safety feature (a long time ago in a galaxy far, far away) to avoid errors becomes obsolete. It‚Äôs already a pain to type the password once, don‚Äôt make it twice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5W_sjzCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emq9b3z2e0r5ers0duup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5W_sjzCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emq9b3z2e0r5ers0duup.png" alt="Delete the password confirmation field" width="880" height="681"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-fill-the-email-field-on-the-forgot-password-page"&gt;
  &lt;/a&gt;
  7. Fill the email field on the forgot password page
&lt;/h2&gt;

&lt;p&gt;The process when your user realizes he have forgotten their password often looks like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comes to the login page&lt;/li&gt;
&lt;li&gt;Types in his credentials&lt;/li&gt;
&lt;li&gt;Receives an error message&lt;/li&gt;
&lt;li&gt;Realizes that he does not remember his login information&lt;/li&gt;
&lt;li&gt;Clicks on the link ¬´ Forgot your password ¬ª&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that‚Äôs where the magic happens, because at this point in the user‚Äôs journey, you already know their email address. Yep. They just typed it in a few seconds ago. All you need do to is to fill it on the present page so that they don‚Äôt have to write the same things over and over again. Remember in design every second saved matter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qacvdd8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86wlsbkinat43d9fqi2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qacvdd8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/86wlsbkinat43d9fqi2h.png" alt="Fill the email field" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-suggest-creating-a-new-password-rather-than-automatically-generating-a-new-one"&gt;
  &lt;/a&gt;
  8. Suggest creating a new password rather than automatically generating a new one
&lt;/h2&gt;

&lt;p&gt;Who‚Äôs going to remember your long, complicated machine-generated password? Spoiler Alert: no one. Whether it is for security reasons or to let the user use his password manager, it‚Äôs better to let the user create a new password rather than randomly generate one in the email they will receive from you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ThygD8Og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1eir5f2qanyn6nxkvi2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ThygD8Og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1eir5f2qanyn6nxkvi2.png" alt="Link to new password generation" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR:
&lt;/h2&gt;

&lt;p&gt;Here is 8 UI Tips to make the life of your user easier on your login and password lost pages. Remember, less friction is more conversion. You don‚Äôt want to spend time fighting with bad interface, neither does your user.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add a button to hint the password&lt;/li&gt;
&lt;li&gt;Show if the Caps Lock key is on&lt;/li&gt;
&lt;li&gt;Show if the Num Lock key is on&lt;/li&gt;
&lt;li&gt;Limit password creation conditions and display them&lt;/li&gt;
&lt;li&gt;Show the conditions required when creating the password&lt;/li&gt;
&lt;li&gt;Do not add a password confirmation field&lt;/li&gt;
&lt;li&gt;Pre-fill the email field on the forgot password page&lt;/li&gt;
&lt;li&gt;Suggest creating a new password rather than automatically generating a new one&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üëãüèª Thanks for reading me, this article was originaly posted on &lt;a href="https://jimmylollipop.com/"&gt;Jimmy Lollipop&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ux</category>
      <category>uiweekly</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>PyLadies Dublin x PyLadies Paris October Meetup</title>
      <author>whykay üë©üèª‚Äçüíªüêàüè≥Ô∏è‚Äçüåà (she/her)</author>
      <pubDate>Tue, 09 Nov 2021 10:21:18 +0000</pubDate>
      <link>https://dev.to/pyladiesdub/pyladies-dublin-x-pyladies-paris-october-meetup-21le</link>
      <guid>https://dev.to/pyladiesdub/pyladies-dublin-x-pyladies-paris-october-meetup-21le</guid>
      <description>&lt;p&gt;For our October meetup, we partnered up with &lt;a href="https://www.meetup.com/pyladiesparis/"&gt;PyLadies Paris&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/wKdnOdMWMZ98nZTYR3/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/wKdnOdMWMZ98nZTYR3/giphy.gif" alt="yay dance" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üëè A huge thanks to Maud for hosting us using Streamyard, I had a night off, and it was simul-streamed to &lt;a href="https://www.youtube.com/channel/UCVa3pfqJDQgce6YYrpKnIjg"&gt;PyLadies Paris&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCMunGHeQPceOWhNSqlmYWPg"&gt;PyLadies Dublin&lt;/a&gt; Youtube Channels! If you missed it or want to re-watch it again, you have 2 places to check out, don't forget to üëç and subscribe and hit that üîî for upcoming videos/streams.&lt;/p&gt;

&lt;p&gt;‚ú® Huge shout out to our speakers: &lt;a href="https://www.linkedin.com/in/qishan-yang/"&gt;Qishan Yang&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/mariacamilarg/"&gt;Maria Camila Remolina-Guti√©rrez&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üåà Also shout out to our community partners&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Imagi:&lt;/strong&gt; Visit &lt;a href="https://imagilabs.com/"&gt;imagilabs.com&lt;/a&gt; and use discount code: &lt;strong&gt;CODINGGRACE15&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;PSF&lt;/strong&gt; (&lt;a href="https://www.python.org/psf/"&gt;Python Software Foundation&lt;/a&gt;): Meetup&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;üôå The PyLadies Paris Team: Maud Levy &amp;amp; Maria Telenczuk, and PyLadies Dublin Team: &lt;a href="https://twitter.com/Lei_Shao1"&gt;Lei Shao&lt;/a&gt; (and me, Vicky).&lt;/p&gt;

&lt;p&gt;üì¢ Announcements from event can be found &lt;a href="https://www.notion.so/twomeylee/PyLadies-Dublin-x-PyLadies-Paris-Oct-Meetup-fc2c057ec6224f3790afbcbd877ceea4#c40948c6ad40491ea43ee7ca70839245"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#talk-details"&gt;
  &lt;/a&gt;
  Talk details
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#talk-1-research-survivor-by-qishan-yang-pyladies-dublin"&gt;
  &lt;/a&gt;
  TALK 1: Research Survivor" by Qishan Yang (PyLadies Dublin)
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h4&gt;

&lt;p&gt;(15 mins) My research and career. My PhD. research was about data warehouse architecture modelling, investigation, and evaluation. I also did some research on novel concepts and state-of-the-art technologies for data management in the context of big data.&lt;br&gt;
After my Ph.D., I joined a project as a postdoc researcher. This project used deep learning models to investigate gait data for health. It is the first system to provide gait analysis as a service generating spatial and temporal gait features from videos. Currently, I am working in a start-up company, which provides insights into what's happening and what's working (or not) for staff in a company. It also enables Leaders and HRs to make faster and better decisions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bio"&gt;
  &lt;/a&gt;
  Bio
&lt;/h4&gt;

&lt;p&gt;Data Scientist at Wrky (Dublin City University). I have been using Python for a couple of years during my research and current work. Before Python, I was using c++ and Java to build up systems, websites and analyse data. But when I needed to analyse more data and run machine learning and deep learning models more effectively and efficiently, I started using Python as the main programming language.&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/qishan-yang/"&gt;https://www.linkedin.com/in/qishan-yang/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#talk-2-unraveling-the-mysteries-of-the-universe-with-python-by-maria-camila-remolinaguti%C3%A9rrez-pyladies-paris"&gt;
  &lt;/a&gt;
  TALK 2: "Unraveling the mysteries of the universe with Python" by Maria Camila Remolina-Guti√©rrez (Pyladies Paris)
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description:
&lt;/h4&gt;

&lt;p&gt;(25 mins) In this talk Maria Camila Remolina-Guti√©rrez will present a short overview of Python's applications in astronomy. I will touch on the most used tech stack and I will walk through some examples ranging from computational simulations to instrumentation.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bio"&gt;
  &lt;/a&gt;
  Bio:
&lt;/h4&gt;

&lt;p&gt;Maria Camila is an Astrophysicist and a Systems &amp;amp; Computing Engineer. She recently finished a master‚Äôs degree in Computer Science in Paris, France. Her favorite programming language (which was also her first) is Python, but she also really likes C, Java and Typescript. She is very interested in the fields of: cryptography, high performance computing, human-computer interaction, software engineering, data science, numerical simulations and quantum computing. In her spare time she likes to do pottery and sculpting.&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/mariacamilarg"&gt;https://www.linkedin.com/in/mariacamilarg&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://i.giphy.com/media/l4pTfqwRupvNCiEa4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l4pTfqwRupvNCiEa4/giphy.gif" alt="catbug dance" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-pyladies-dublin-our-last-of-2021"&gt;
  &lt;/a&gt;
  Next PyLadies Dublin (our last of 2021)
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tue Nov 16 2021 (Virtual)&lt;/li&gt;
&lt;li&gt;Speakers:

&lt;ul&gt;
&lt;li&gt;TALK 1 : "Using Python to bring a physical game to the Internet" by Jeffrey Roe&lt;/li&gt;
&lt;li&gt;TALK 2: "Scaling Data Science with Dask" by Pavithra Eswaramoorthy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.meetup.com/PyLadiesDublin/events/281523439"&gt;&lt;/a&gt;&lt;a href="https://www.meetup.com/PyLadiesDublin/events/281523439"&gt;https://www.meetup.com/PyLadiesDublin/events/281523439&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope to see you there!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#looking-for-speakers-for-jan-2022"&gt;
  &lt;/a&gt;
  Looking for Speakers for Jan 2022
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/g0BZf5y6f6hWDvtW7d/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/g0BZf5y6f6hWDvtW7d/giphy.gif" alt="detective catbug" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are looking for speakers for Tue Jan 18th, are you interested in sharing what you are doing in Python, or something cool you found. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-long-is-a-talk"&gt;
  &lt;/a&gt;
  How long is a talk?
&lt;/h3&gt;

&lt;p&gt;We prefer 5/10 mins and max 30 mins (if possible).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#will-pyladies-dublin-be-virtual-hybrid-or-inperson"&gt;
  &lt;/a&gt;
  Will PyLadies Dublin be virtual, hybrid or in-person?
&lt;/h3&gt;

&lt;p&gt;We will have to see, but we are aiming to have in-person events again as soon as it's safe to do so in early 2022.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-i-have-to-be-female-to-submit-a-talk"&gt;
  &lt;/a&gt;
  Do I have to be female to submit a talk?
&lt;/h3&gt;

&lt;p&gt;No, we are open to folks to submit a talk/demo. As long as you have read and follow our &lt;a href="https://dublin.pyladies.com/"&gt;Code of Conduct&lt;/a&gt;, and the talk is Python-related, we are looking forward to your talk submission.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cool-cool-cool-cool-where-do-i-submit-my-talk"&gt;
  &lt;/a&gt;
  Cool, cool, cool, cool... where do I submit my talk?
&lt;/h3&gt;

&lt;p&gt;üëâ &lt;a href="https://share-eu1.hsforms.com/1JaDd_XRCQFKb3cp0akbz8Af1bg5"&gt;Submit your talk here&lt;/a&gt;! Thanks in advance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ive-something-else-to-ask"&gt;
  &lt;/a&gt;
  ü§î I've something else to ask...
&lt;/h3&gt;

&lt;p&gt;Sure thing! Email us at &lt;a href="mailto:dublin@pyladies.com"&gt;dublin@pyladies.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>pyladies</category>
      <category>video</category>
    </item>
    <item>
      <title>Machine learning flavours</title>
      <author>Rishal Hurbans</author>
      <pubDate>Tue, 09 Nov 2021 10:16:23 +0000</pubDate>
      <link>https://dev.to/rishalhurbans/machine-learning-flavours-2ac8</link>
      <guid>https://dev.to/rishalhurbans/machine-learning-flavours-2ac8</guid>
      <description>&lt;p&gt;Machine learning is useful only if you have the right data and have questions to ask that it might be able to answer. Machine learning algorithms find patterns in data but cannot do useful things magically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5TYW-zUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afk0tbjxt7bomhtrplvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5TYW-zUg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/afk0tbjxt7bomhtrplvq.png" alt="Image description" width="880" height="707"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the most common techniques in traditional machine learning is called supervised learning. We want to look at data, understand the patterns and relationships among the data, and predict the results if we are given new examples of different data in the same format.&lt;/p&gt;

&lt;p&gt;Regression involves drawing a line through a set of data points to most closely fit the overall shape of the data. Regression can be used for applications such as finding trends between marketing initiatives and sales, or determining rent like in the next example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eqgsUJ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of4afj54t40cpokchg9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eqgsUJ0u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of4afj54t40cpokchg9t.png" alt="Image description" width="880" height="881"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A simple example of supervised learning: &lt;a href="https://rhurbans.com/machine-learning-intuition/"&gt;https://rhurbans.com/machine-learning-intuition/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Classification aims to predict categories of examples based on their features. Can we determine whether something is a car or a truck based on its number of wheels, weight, and top speed?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8aED5va--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awp9xq5yax4y544sthra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8aED5va--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awp9xq5yax4y544sthra.png" alt="Image description" width="880" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unsupervised learning involves finding underlying patterns in data that may be difficult to find by inspecting the data manually. Unsupervised learning is useful for clustering data that have similar features and uncovering features that are important in the relationships.&lt;/p&gt;

&lt;p&gt;On an e-commerce site, for example, products might be grouped based on customer purchase behavior. If many customers purchase soap, sponges, and towels together, it is likely that more customers would want that combination of products.&lt;/p&gt;

&lt;p&gt;Reinforcement learning is inspired by behavioral psychology and operates by rewarding or punishing an algorithm based on its actions in an environment. It has similarities to supervised learning and unsupervised learning, as well as many differences.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QVdIX-OH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pegopoe287b7iaff3bm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QVdIX-OH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pegopoe287b7iaff3bm3.png" alt="Image description" width="880" height="801"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're interested in more details about ML algorithms, see Grokking AI Algorithms with Manning Publications: &lt;a href="http://bit.ly/gaia-book"&gt;http://bit.ly/gaia-book&lt;/a&gt;, consider following me - &lt;a href="https://twitter.com/RishalHurbans"&gt;@RishalHurbans&lt;/a&gt;, or join my mailing list for infrequent knowledge drops: &lt;a href="https://rhurbans.com/subscribe"&gt;https://rhurbans.com/subscribe&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
  </channel>
</rss>
