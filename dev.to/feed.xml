<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>📊 AnyChart JS 8.11.0 Is Out with Awesome New Features</title>
      <author>andreykh1985</author>
      <pubDate>Mon, 13 Dec 2021 17:04:37 +0000</pubDate>
      <link>https://dev.to/andreykh1985/anychart-js-8110-is-out-with-awesome-new-features-2d8m</link>
      <guid>https://dev.to/andreykh1985/anychart-js-8110-is-out-with-awesome-new-features-2d8m</guid>
      <description>&lt;p&gt;AnyChart 8.11.0 has been &lt;a href="https://www.anychart.com/blog/2021/12/07/js-charts-8-11-0-released/"&gt;released&lt;/a&gt; with awesome new features and improvements making this &lt;a href="https://www.anychart.com"&gt;JavaScript charting library&lt;/a&gt; even more flexible and mature.&lt;/p&gt;

&lt;p&gt;The three most important additions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom axis placement&lt;/li&gt;
&lt;li&gt;Baseline milestones in Gantt charts&lt;/li&gt;
&lt;li&gt;Outside labels in waterfall charts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Along with these new charting features, other significant improvements and bug fixes are also included in this major update. Learn more about AnyChart 8.11.0 on the company's &lt;a href="https://www.anychart.com/blog/2021/12/07/js-charts-8-11-0-released/"&gt;blog&lt;/a&gt;. You can also leave your suggestions there on new features that you would like to see added in future versions.&lt;/p&gt;

&lt;p&gt;In case you missed it, the previous major update AnyChart 8.10.0 brought two brand new chart types - Circle Packing Chart and Calendar Chart - &lt;a href="https://www.anychart.com/blog/2021/05/24/anychart-js-8-10-0/"&gt;and more&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>datascience</category>
      <category>product</category>
    </item>
    <item>
      <title>Get Swole: The React/Rails Workout App</title>
      <author>wgotterer</author>
      <pubDate>Mon, 13 Dec 2021 17:04:00 +0000</pubDate>
      <link>https://dev.to/wgotterer/get-swole-the-reactrails-workout-app-112b</link>
      <guid>https://dev.to/wgotterer/get-swole-the-reactrails-workout-app-112b</guid>
      <description>&lt;p&gt;In this blog I aim to give a detailed overview of what is happening behind the scenes in this application by first giving a walkthrough of the apps functionality and then looking at the code of both the Rails backend and React front end.&lt;/p&gt;

&lt;p&gt;The full code on Git Hub can be found &lt;a href="https://github.com/wgotterer/get-swole"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The front end is in the "client" folder&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#general-overview"&gt;
  &lt;/a&gt;
  General Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GZfXz4jRI9s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend-rails-overview"&gt;
  &lt;/a&gt;
  Backend Rails Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0sCEhqJDV6k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#login-overview"&gt;
  &lt;/a&gt;
  Login Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iLHbXIpuQxM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dashboard-overview"&gt;
  &lt;/a&gt;
  Dashboard Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nTcqWqbtgUw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#online-classes-overview"&gt;
  &lt;/a&gt;
  Online Classes Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oM9EAkGPphA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#private-classes-overview"&gt;
  &lt;/a&gt;
  Private Classes Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/73q5fp9DezY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trainer-overview"&gt;
  &lt;/a&gt;
  Trainer Overview
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ap_fhAKRY54"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>rails</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build and Deploy a Responsive Portfolio Using React and Styled Components 💅</title>
      <author>Chaoo Charles</author>
      <pubDate>Mon, 13 Dec 2021 16:43:46 +0000</pubDate>
      <link>https://dev.to/chaoocharles/build-and-deploy-a-responsive-portfolio-using-react-and-styled-components-22mc</link>
      <guid>https://dev.to/chaoocharles/build-and-deploy-a-responsive-portfolio-using-react-and-styled-components-22mc</guid>
      <description>&lt;p&gt;In this course I will be showing you how I revamped my portfolio site using React and styled Components 💅.&lt;/p&gt;

&lt;p&gt;Live Portfolio: &lt;a href="https://chaoocharles.dev/"&gt;https://chaoocharles.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial 👇
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dK4f2Piqilo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Using Cucumber and Spock for API test Automation — What Benefits Can You Expect?</title>
      <author>NIX United</author>
      <pubDate>Mon, 13 Dec 2021 16:37:28 +0000</pubDate>
      <link>https://dev.to/nix_united/using-cucumber-and-spock-for-api-test-automation-what-benefits-can-you-expect-dp3</link>
      <guid>https://dev.to/nix_united/using-cucumber-and-spock-for-api-test-automation-what-benefits-can-you-expect-dp3</guid>
      <description>&lt;h4&gt;
  &lt;a href="#hi-im-vladimir-pasiuga-and-i-work-at-nix-united-as-a-quality-assurance-engineer"&gt;
  &lt;/a&gt;
  Hi, I’m Vladimir Pasiuga, and I work at &lt;a href="https://nix-united.com/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api_article"&gt;NIX United&lt;/a&gt; as a quality assurance engineer.
&lt;/h4&gt;

&lt;p&gt;I've been working in the IT field for the past 7 years. I worked as a manual tester for 2.5 years on a healthcare project that comprised UI and API components, and currently, I’m working on an automated testing project, where the application for the medical field consists only of an API.&lt;/p&gt;

&lt;p&gt;I'll go over API testing in detail in this article, so this content will be helpful for QA beginners. You'll learn what an API is, what tools our team uses to test APIs manually, and what technologies we use for automated testing. I'll also talk about how I've used the Cucumber and Spock frameworks to automate API testing.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-quickly-go-over-the-tech"&gt;
  &lt;/a&gt;
  Let's Quickly Go Over the Tech
&lt;/h4&gt;

&lt;p&gt;Before we get into the meat of &lt;a href="https://nix-united.com/services/software-qa-and-testing-services/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api_article"&gt;API testing&lt;/a&gt;, let's brush up on some fundamental ideas. An API allows software components to exchange information with one another. To put it another way, the API acts as a link between internal and external software processes. If you imagine software as a black box, the API is a set of knobs that the user can twist, push, and pull as he pleases.&lt;/p&gt;

&lt;p&gt;Today, the &lt;a href="https://restfulapi.net/"&gt;REST (RESTful) API&lt;/a&gt; and the &lt;a href="https://www.soapui.org/learn/api/soap-vs-rest-api/"&gt;SOAP API&lt;/a&gt; are the two most used techniques to create a programming interface for a web service. When comparing an HTTP request to paper media, we can say that the REST API sends requests via basic notes most of the time, and a letter in an envelope once in a while (perhaps writing part of the message on the envelope itself as well). The SOAP API, on the other hand, sends all instructions in the form of a detailed letter in a standard format, with simply an envelope (a single HTTP request) as a delivery method.&lt;/p&gt;

&lt;p&gt;REST APIs are used when clients and servers solely work in a web environment, where object information isn't important and multi-call transactions aren't required. &lt;a href="https://microservices.io/"&gt;Microservices&lt;/a&gt;, on the other hand, is configured for SOAP APIs if a rigorous contract between the server and the client is required, as well as the ability to perform extremely demanding multi-call transactions with high security and no bandwidth issues.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api-testing-tools"&gt;
  &lt;/a&gt;
  API Testing Tools
&lt;/h4&gt;

&lt;p&gt;For a QA specialist, the lack of UI elements can be perplexing — there are no buttons, fields, or a clear format for addressing the services. Interacting with the API is made easier with special tools. SoapUI and Postman are the most popular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SoapUI&lt;/strong&gt; — an open-source tool for testing Soap and Rest APIs. In September 2005, SoapUI was first released on &lt;a href="https://sourceforge.net/"&gt;SourceForge&lt;/a&gt;. It's open-source software with a European Union public license, and it’s been downloaded over 2,000,000 times since its initial release. The user interface is created using &lt;a href="https://www.techopedia.com/definition/26102/java-swing"&gt;Swing&lt;/a&gt; and is totally based on the Java platform (i.e., SoapUI is cross-platform). Web service validation, startup, development, modeling and layout, functional testing, and load and compliance testing are all included in its capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://smartbear.com/"&gt;SmartBear&lt;/a&gt;, a software development company, has also built a commercial version of SoapUI Pro (now named &lt;a href="https://www.soapui.org/downloads/download-readyapi-trial-slm/?v=2"&gt;ReadyAPI&lt;/a&gt;), which focuses on performance-related features. SoapUI can perform HTTP(S) and JDBC calls, as well as test SOAP and REST web services, JMS, and AMF. Automated scripts are written in the Groovy programming language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Postman&lt;/strong&gt; — a Swiss army knife, according to its developers, that allows you to form and run queries and document and monitor services all in one spot. From within Postman, testers can develop tests and perform automated testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="(https://www.postman.com/)"&gt;Postman&lt;/a&gt;’s primary function is &lt;em&gt;generating collections&lt;/em&gt; using API queries. Collections make it easy to store queries for an application you're testing or building, and a newbie to the project can rapidly learn how to use the program. Additionally, the development team may easily design the API using Postman. Postman's automated scripts are written in JavaScript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-cucumber-and-spock-became-our-goto-guys"&gt;
  &lt;/a&gt;
  How Cucumber and Spock Became our Go-to Guys
&lt;/h4&gt;

&lt;p&gt;SoapUI and Postman both have their own set of characteristics. Such tests are difficult to maintain, and storing them in version control systems (such as git) is problematic.&lt;/p&gt;

&lt;p&gt;SoapUI and Postman, despite their widespread use in automated testing, can only run tests locally and cannot be used in integration systems like &lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt;. Our team chooses Cucumber and Spock to handle this challenge, as it’s possible to conduct Jenkins tests remotely using them. Furthermore, these frameworks enable the creation of automated smoke-tests that run during the installation of an application, something also not possible with Postman or SoapUI.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#features-of-cucumber-and-spock-frameworks"&gt;
  &lt;/a&gt;
  Features of Cucumber and Spock frameworks
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://spockframework.org/"&gt;Spock&lt;/a&gt; and &lt;a href="https://cucumber.io/"&gt;Cucumber&lt;/a&gt; exemplify the philosophy of &lt;em&gt;behavior-driven development&lt;/em&gt; (BDD). The principle behind BDD is that you must first define the desired result of the added feature in a subject-oriented language before writing any tests. The developers are then given the final documentation.&lt;/p&gt;

&lt;p&gt;A behavioral specification has the following structure and is delivered in a semi-formal format:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Title — a description of the business objective given in the subjunctive form.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Narrative — answers for the following questions in summary form:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who is the stakeholder in the story?&lt;br&gt;
What is included in the story?&lt;br&gt;
What is the value of the story for the business?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scenarios — One or more cases may be included in the specification, each revealing one of the user behavior situations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A scenario usually follows the same pattern:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One or more initial conditions (&lt;em&gt;Given&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The event that triggers the start of the scenario (&lt;em&gt;When&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The expected result or results (&lt;em&gt;Then&lt;/em&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BDD does not provide any formal rules, but it does require using a limited standard set of terms that encompass all aspects of the behavior specification. &lt;a href="https://dannorth.net/"&gt;Dan North&lt;/a&gt;, the founder of BDD, developed a template for specifications in 2007, which quickly gained traction and became known as the Gherkin language.&lt;/p&gt;

&lt;p&gt;Cucumber is one of the most widely used BDD tools nowadays. Its authors aimed to bring together automated acceptance testing, functional requirements, and software documentation into a unified format that could be understood by both technical and non-technical project participants.&lt;/p&gt;

&lt;p&gt;The test scenario description is built around the Given, When, and Then stages. Each stage corresponds to an annotation that associates a method with a string in the scenario's text description using a regular expression. Scenarios are made up of test steps that each define a specific functionality or feature.&lt;/p&gt;

&lt;p&gt;To automate the scripts given in Cucumber, you can use Ruby, Java, and Python. The test is stored in a separate file with the extension *.feature and is written in Gherkin notation. One or more scripts — which can be written by BAs or manual QA specialists — may be included in this file. The test automation expert then generates a separate class that has a programming language implementation of the steps.&lt;/p&gt;

&lt;p&gt;While building scripts for the behavior of the API application I was testing, I became acquainted with the Cucumber framework. To be more precise, it was not Cucumber itself,  it was the Gherkin language, and we were attempting to describe application behavior scenarios using BDD rules. This was a fascinating experience from the perspective of a manual tester. On the crew, there were several manual testers who wrote Gherkin scripts. The key issue was getting everyone to agree on a standard structure for describing each step and generating a set of procedures that could be repeated in different tests without being duplicated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Feature: Test OpenWeather API 
             As a customer
             In order to check weather 
             I want to get my city name in response. 
             Scenario Outline: Check if city name is returned correctly 
             When Sent request to openweathermap for “&amp;lt;cityReq&amp;gt;”
             Then Check that 200 response code is returned 
             And Server returns correct city name “&amp;lt;cityResp&amp;gt;”

Examples 

| cityReq           | cityResp |

| “Kharkiv, UA”  | “Kharkiv” |

| “London, GB”  | “London” |
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The script for testing an OpenWeather API application in Gherkin notation is shown above. For this example, I created a simple script that sends a request to an application server with specific parameters and then checks the answer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public class Stepdefs {
      @when ( “Sent request to openweathermap for {cityReq} “ )
      public void sent_request_to_ openweathermap ( String cityReq) { 
             HTTP Builder http =  null; 
             try  { 
             http = new  HTTP Builder (testUrl);
             String [ ] actualCity = cityReq.split ( regex: “, “ ) ;
       ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An example Java Stepsdef class is included in the code. The annotation (@Given, @When, @Then, etc.) and the text from the feature file are used to map each step from the feature file to its implementation in the Stepsdef class.&lt;/p&gt;

&lt;p&gt;Cucumber is merely an activator for BDD — you must follow BDD principles to get the most out of it.&lt;/p&gt;

&lt;p&gt;Spock is a testing ground. Some would even call it "a language built on top of &lt;a href="https://groovy-lang.org/"&gt;Groovy&lt;/a&gt;." On another project, where I was acting as an automator, I used Spock. As I previously stated, the execution scripts are separate from implementing each construct in Cucumber. This produces understandable scripts, although it’s time-consuming. Because of this, when writing an implementation, this strategy may be impractical.&lt;/p&gt;

&lt;p&gt;The steps are described and implemented in Spock in a single Groovy class. The framework is compatible with all popular IDEs (in particular IntelliJ IDEA), multiple build tools (Ant, Gradle, Maven), and continuous integration services because it’s built on JUnit (continuous integration). A test class is a collection of scripting methods with names in quotes that are similar to Cucumber script names. Because these classes are derived from JUnit, they may be performed like ordinary Groovy unit tests from the IDE. We get regular JUnit results at the same time, which is really useful when designing and debugging automated tests.&lt;/p&gt;

&lt;p&gt;Each test step is broken down into its own code block in Spock, which begins with a label and ends with the start of the next code block or the end of the test. The &lt;em&gt;Given&lt;/em&gt; block is in charge of establishing the test's initial circumstances. The system stimulus is represented by the &lt;em&gt;When&lt;/em&gt; block, and the system response is represented by the Then block. Both of these blocks are always used in tandem. One &lt;em&gt;Expect&lt;/em&gt; block can be utilized if the When-Then construct can be reduced to a single expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class WeatherTestSpec extends Specification {
      @Shared def testUrl, testResponse 
       def setupSpec () {
       testUrl = “http:// api. openweathermap.org” 
       testRequest = [ ‘APPID’ : “aaa” ] 
       testResponse = ‘  ‘
}
def  ‘ Check if city name and coordinates is returned correctly’ () { 

when: "Sent request to openweathermap"
def  http =  new HTTPBuilder(testUrl)
testRequest.put ( ‘q’, cityReq)
testResponse = http.get( path :   ‘/data/2.5/weather’ , query : testRequest )

then: “Check that 200 response code is returned”
testResponse. cod == 200

and:  “Server returns correct city name”
testResponse. name == cityResp

where:  
cityReq &amp;lt;&amp;lt; [  “Kharkiv, UA” ,   “London, GB”  ] 
cityResp &amp;lt;&amp;lt;  [  “Kharkiv” , “London ”  ] 
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Groovy class with a Spock test is shown in the example above. The step description appears after the ":" sign and is an arbitrary string. It’s not, however, a required component. Spock enables you to create a test specification without having to describe the procedures. This method, however, is not widely recognized, and it can make it harder to grasp test logic in the future.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#which-ones-better"&gt;
  &lt;/a&gt;
  Which One’s Better?
&lt;/h4&gt;

&lt;p&gt;Cucumber and Spock both have a strong relationship between the human language specification and the test code. This is a direct result of both systems being built to accommodate the BDD paradigm. Cucumber, on the other hand, takes it more seriously. If no regular method expression matches the given step text, large modifications to the human language step description will break the test code — for example, with a missing step implementation. After the ":" character, the text for Spock is an arbitrary string. The step's description is double-checked for consistency before it's put into action.&lt;/p&gt;

&lt;p&gt;Cucumber properly distinguishes between the human-readable specification and the test code. This is really useful for non-technical experts who write or read specs, and a strong collaboration between the Product Owner, BA, QA, architects, and developers is at the heart of BDD. In the case of Cucumber, all project participants will agree on and understand the specification before development begins.&lt;/p&gt;

&lt;p&gt;Spock, on the other hand, provides a quick, succinct, single-file answer. Individual test scripts can have easy-to-understand names due to Groovy's flexibility to use any string as a method name. Spock allows developers to read and understand the specification as well as the code that implements it from a single location. Let's also not forget about the extra benefits that come with Spock (e.g., advanced data table features).&lt;/p&gt;

&lt;p&gt;Cucumber is also only useful for integration testing. Spock, on the other hand, can also be used to run unit tests.&lt;/p&gt;

&lt;p&gt;It wouldn’t be helpful to categorically state which of these approaches to API testing is superior. At NIX United, we use both based on our tasks and objectives. When there are no automators on the team (or only a few), SoapUI and Postman are ideal for the early phases of automation. It's more rational to transition to Cucumber or Spock as the team grows. Each of these frameworks has its own set of benefits that make QA specialists' jobs easier and the testing process more efficient.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>api</category>
      <category>tooling</category>
    </item>
    <item>
      <title>3 Reason Why Javascript Should be your First Language</title>
      <author>Jason Shelley</author>
      <pubDate>Mon, 13 Dec 2021 16:32:28 +0000</pubDate>
      <link>https://dev.to/kinjiru09/3-reason-why-javascript-should-be-your-first-language-22jo</link>
      <guid>https://dev.to/kinjiru09/3-reason-why-javascript-should-be-your-first-language-22jo</guid>
      <description>&lt;p&gt;There are many languages to choose as your first language, i.e. Python, JavaScript, Go, and Ruby. All these languages have been heralded as easy languages to learn. There are good reasons to call these languages “easy”.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;They are easy to set up and relatively easy to start creating projects.&lt;/li&gt;
&lt;li&gt;They have easy syntax and concepts that a beginner would find easy to understand right away.&lt;/li&gt;
&lt;li&gt;They have vibrant communities around them.&lt;/li&gt;
&lt;li&gt;There are a ton of libraries to help you build robust programs.&lt;/li&gt;
&lt;li&gt;There are many tutorials, books, videos, courses and other resources to learn these languages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another reason to learn one of these languages is there are many companies looking for developers who know these languages and they are willing to pay a decent wage. For example, &lt;a href="https://www.ziprecruiter.com/Salaries/Javascript-Developer-Salary"&gt;the average JavaScript developer with experience can make over $100,000.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But which one of these languages should be your first language?&lt;/p&gt;

&lt;p&gt;There are three reasons why Javascript should be your first language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-language"&gt;
  &lt;/a&gt;
  1) Language
&lt;/h2&gt;

&lt;p&gt;The actual Javascript language, ignoring the platform i.e. browser or Nodejs, has been a matter of controversy for years. Many people love it, others hate it. It is a widely used language with a long history. But the language has gone through so many revisions, that now we are stuck in this hybrid state, where some developers write JavaScript one way and other developers write it another way. This could be very intimidating and down right annoying at times. But in reality, it created a world where a developer can learn how to code in different mindsets.&lt;/p&gt;

&lt;p&gt;JavaScript is a multi-paradigm scripting language. It supports object-oriented, imperative, and functional programming styles. Even though it’s a dynamic language, you can use strongly typed languages that are built on top of JavaScript, like Typescript.&lt;/p&gt;

&lt;p&gt;The flexibility of the language allows you to write in all these different paradigms. Mastering these paradigms can benefit you later on when you want to learn another language that emphasizes one of these paradigms, i.e. an object oriented language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-platform"&gt;
  &lt;/a&gt;
  2) Platform
&lt;/h2&gt;

&lt;p&gt;JavaScript started in the web browser. It’s one of the core technologies of the web. Learning JavaScript allows you to understand how the web works. The amazing thing about Javascript is you literally have access to thousands and thousands of websites at your fingertips. That means you have access to all these websites’ Javascript code. You can read other people’s code, learn, and practice.&lt;/p&gt;

&lt;p&gt;Getting started with JavaScript is relatively easy. Open a browser and start playing with code in the console, or open up any text editor and start writing some code inside of html tags and then open the file in your browser, no setup required.&lt;/p&gt;

&lt;p&gt;Now, JavaScript engines are common components of both server-side website deployments and non-browser applications. With the creation of Nodejs, React Native, Cordova, Electron and other application frameworks, you can build mobile applications, desktop applications, games and server side applications and services.&lt;/p&gt;

&lt;p&gt;JavaScript has even appeared in some embedded systems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To be honest though, depending on your requirements and needs, JavaScript may not always be the best solution for non website apps.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The fact that you can learn JavaScript and transfer that knowledge to a different platform is very powerful and a great incentive for learning the language.&lt;/p&gt;

&lt;p&gt;Even though many languages, like Python, can be used across different platforms, Javascript still dominates the web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-concepts-amp-design-patterns"&gt;
  &lt;/a&gt;
  3) Concepts &amp;amp; Design Patterns
&lt;/h2&gt;

&lt;p&gt;The third reason why you should learn JavaScript is that there are concepts and design patterns that are openly exposed to you while learning the language on different platforms.&lt;br&gt;
For example, if you write server side JavaScript using Nodejs, you are introduced to principles and design patterns that are at the core of the Nodejs ecosystem. For example, you will learn the following concepts and design patterns:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Modules&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event Loop&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Callbacks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Event Emitter&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1) Modules&lt;/strong&gt;&lt;br&gt;
The concept of modules teaches you how to structure your code in small well defined components. Each module should focus on one thing and it should do it well. This helps you keep your code simple and understandable. This also helps with testing. This concept is seen throughout all of Nodejs APIs. This is good training for new developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Event Loop&lt;/strong&gt;&lt;br&gt;
When you learn about Nodejs asynchronous nature and it’s Event Loop, you are actually seeing the reactor pattern in use. This design pattern is an event handling pattern. Each I/O operation/event, i.e. file access, network operation, etc, is associated with a handler (see callbacks below). When an operation is done, its result is passed to the handler and the handler is invoked. The event loop handles all of this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) Callbacks&lt;/strong&gt;&lt;br&gt;
Because of Nodejs asynchronous nature, it uses a unique design pattern at its core called the callback pattern.When an operation is done, it sends the result to another function. &lt;/p&gt;

&lt;p&gt;This pattern has pros and cons. But you are exposed to another design pattern, so it is still good for new developers to see how design patterns are used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) Event Emitter&lt;/strong&gt;&lt;br&gt;
The event emitter class is at the core of Nodejs. This shows the observer pattern in use. An object can notify listeners when its state changes, i.e. when a button is clicked, when user input text in a text box, etc. This is a common design pattern used in many programming frameworks and platforms. &lt;/p&gt;

&lt;p&gt;Seeing how it is used in a production grade framework like Nodejs is good training for new developers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every platform has its own pros and cons and design principles. These are just a few I wanted to mention that are associated with Nodejs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;;TLDR;&lt;br&gt;
Javascript is used in many places and it can be fun to write and use in personal projects as well as professional projects. After learning JavaScript you can definitely find a developer job to get experience as a developer. Then you can learn other languages to advance your career.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>When should I use asynchronous code in JavaScript?</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Mon, 13 Dec 2021 16:32:17 +0000</pubDate>
      <link>https://dev.to/nicozerpa/when-should-i-use-asynchronous-code-in-javascript-1kfk</link>
      <guid>https://dev.to/nicozerpa/when-should-i-use-asynchronous-code-in-javascript-1kfk</guid>
      <description>&lt;p&gt;If you were learning JavaScript for some time, I'm sure that you've heard about asynchronous code. Promises, callbacks, the &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; keywords, etc. But a question that often gets unanswered is, when should I even use asynchronicity?&lt;/p&gt;

&lt;p&gt;The short answer is: &lt;strong&gt;only if you have to use a function that is already asynchronous and you need the return value of that function.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;For example, imagine that we have to create a function that receives the number of a Pokémon and returns its name, e.g. if you pass the number 25, it returns "Pikachu".&lt;/p&gt;

&lt;p&gt;In this function, we'll call the &lt;a href="https://pokeapi.co/"&gt;PokéAPI&lt;/a&gt; using the native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch"&gt;&lt;code&gt;fetch&lt;/code&gt; function&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The thing is, &lt;code&gt;fetch&lt;/code&gt; is an asynchronous function. And we need what this function returns because it's the response from the API. It means that the function we create should be asynchronous.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Enable strict mode&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPokemonName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pokemonNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pokeApiResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`https://pokeapi.co/api/v2/pokemon/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pokemonNumber&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;pokeApiResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;pokeApiResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pokeApiResponse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pokemon25&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPokemonName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Pokémon #25 is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pokemon25&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 👆 Prints "Pokémon #25 is pikachu"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;In some cases, however, you can choose whether to use synchronous or asynchronous functions&lt;/strong&gt; to perform the same task. This often happens in Node.js, where you can read and write files using synchronous functions or asynchronous ones. Which ones should I use?&lt;/p&gt;

&lt;p&gt;If you're creating the back end of a website using Node.js (or Deno) or you're working on the front end, you should definitely use the async versions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Synchronous tasks block everything else.&lt;/strong&gt; It means that, if a task takes a lot of time in Node, other people won't be able to enter the website until that task finished. On the front end, the site will freeze while a synchronous task runs. That's why async works better in those cases.&lt;/p&gt;




&lt;p&gt;If you liked this article, you'll love my JavaScript Newsletter.&lt;br&gt;
Every other Monday, I'll send you easy and actionable steps to level up your JavaScript skills. Check it out: &lt;a href="https://nicozerpa.com/newsletter"&gt;https://nicozerpa.com/newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>1 line of code: How to PascalCase a string</title>
      <author>martin krause</author>
      <pubDate>Mon, 13 Dec 2021 16:08:33 +0000</pubDate>
      <link>https://dev.to/martinkr/1-line-of-code-how-to-pascalcase-a-string-1fl4</link>
      <guid>https://dev.to/martinkr/1-line-of-code-how-to-pascalcase-a-string-1fl4</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toPascalCase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[\s\.&lt;/span&gt;&lt;span class="sr"&gt;_-&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+&lt;/span&gt;&lt;span class="se"&gt;\w&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Returns a new string in pascal case. &lt;br&gt;
Uses &lt;code&gt;space&lt;/code&gt;, &lt;code&gt;dot&lt;/code&gt;, &lt;code&gt;underscore&lt;/code&gt; and &lt;code&gt;dash&lt;/code&gt; as delimiter.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-repository-amp-npm-package"&gt;
  &lt;/a&gt;
  The repository &amp;amp; npm package
&lt;/h2&gt;

&lt;p&gt;You can find the all the utility functions from this series at &lt;a href="https://github.com/martinkr/onelinecode"&gt;github.com/martinkr/onelinecode&lt;/a&gt;&lt;br&gt;
The library is also published to &lt;a href="https://www.npmjs.com/package/@onelinecode/onelinecode"&gt;npm as @onelinecode&lt;/a&gt; for your convenience.&lt;/p&gt;

&lt;p&gt;The code and the npm package will be updated every time I publish a new article.&lt;/p&gt;




&lt;p&gt;Follow me on &lt;a href="http://twitter.com/_martinkr"&gt;Twitter: @martinkr&lt;/a&gt; and consider to &lt;a href="https://www.buymeacoffee.com/martinkr"&gt;buy me a coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@zoo_monkey"&gt;zoo_monkey&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fuji"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://modernfrontend.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cH97ToOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://modernfrontend.dev/banner/banner_583-111.png" alt="Subscribe to the weekly modern frontend development newsletter" width="583" height="111"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Web dev and designer tools (Part-2)</title>
      <author>Madiha Eram</author>
      <pubDate>Mon, 13 Dec 2021 16:06:49 +0000</pubDate>
      <link>https://dev.to/madiha_eram/web-dev-and-designer-tools-part-2-55j5</link>
      <guid>https://dev.to/madiha_eram/web-dev-and-designer-tools-part-2-55j5</guid>
      <description>&lt;p&gt;&lt;em&gt;So in this topic I've listed web developing and designing tools part 2 and you can find link at last of part 1 ,so we'll see&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Hidden websites for Web developers&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;a)&lt;a href="https://tabler-icons.io/"&gt;Tabler Icons&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It's a free and open source icons designed with attention to detail to make your design stand out.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rlwxykuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw6235j3apq6kw1h0a3h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rlwxykuO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw6235j3apq6kw1h0a3h.jpg" alt="Tabler Icons" width="880" height="802"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="https://www.remove.bg/"&gt;remove bg&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It removes image background 💯 automatically in 5s w/o a single click for free&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Om6__GXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5w2c2xbass0wnjpnft1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Om6__GXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5w2c2xbass0wnjpnft1.jpg" alt="Remove bg" width="880" height="680"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://devresourc.es/"&gt;Dev resources&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
A collaborative list of resources for developers,presented in curated categories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_MiycHX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38q00i0bzgutp64o0lnf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_MiycHX8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38q00i0bzgutp64o0lnf.jpg" alt="Dev resources" width="880" height="854"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="https://freecodetools.org/"&gt;Free Code Tools&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Collection of free SEO and code tools&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dR5em6-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2s1a7nd9auxw74tibrq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dR5em6-i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2s1a7nd9auxw74tibrq.jpg" alt="Free Code Tools" width="880" height="629"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Generate or browse beautiful color combinations for your designs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Awesome CSS layout generators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;a href="https://grid.layoutit.com/"&gt;Layout it&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yK6oUMRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmbsnkpeuaor8ltohrt2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yK6oUMRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmbsnkpeuaor8ltohrt2.jpg" alt="Layout it" width="880" height="693"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="https://csslayout.io/"&gt;CSS layout&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZgBXFpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5lyn5y72hg680ed01v6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZgBXFpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5lyn5y72hg680ed01v6.jpg" alt="CSS Layout" width="880" height="879"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://griddy.io/"&gt;Griddy&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--51hcwpbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pl9rbgawe8qbky1sij1g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--51hcwpbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pl9rbgawe8qbky1sij1g.jpg" alt="Griddy" width="880" height="1005"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="https://vue-grid-generator.netlify.app/"&gt;CSS Grid Layout&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xEDhBZLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr76f77mv01k8lk012j3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xEDhBZLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr76f77mv01k8lk012j3.jpg" alt="CSS Grid Layout" width="880" height="799"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.5 websites to become a better developer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;a href="https://geektastic.com/"&gt;Geekstatic&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It's the go-to to improve your technical skills and get better at solving real life coding problems!.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7TGGC6XA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fmnc6hmv4ckjhb6xrum.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7TGGC6XA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7fmnc6hmv4ckjhb6xrum.jpg" alt="Geekstatic" width="880" height="746"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="https://www.datacamp.com/?irclickid=TvF1ZXx-2xyIWCdRlKxBMx0uUkG2DMTddXGswE0&amp;amp;irgwc=1"&gt;DataCamp&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Targeted at Data Science,this will be the best one to master the fundamentals and get certifications!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEcTSHiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71v4hz7p3mhfhobe2uru.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEcTSHiz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71v4hz7p3mhfhobe2uru.jpg" alt="Data Camp" width="880" height="717"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://codesignal.com/"&gt;Code Signal&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
Probably the most underrated,this one will have some difficult challenges that will make you use 100% of your braincells!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z37ewKk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12ekr7jncf5348n5ipn2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z37ewKk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12ekr7jncf5348n5ipn2.jpg" alt="Code Signal" width="880" height="917"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="https://github.com/skreimeyer/RosettaCode"&gt;Rosettacode&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
It's a coding challenge website but that's not all ,it has challenges for nearly every coding language that exists!&lt;br&gt;
&lt;strong&gt;e)&lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
In this simple and hard problems are well explained, with a cool UI🔥&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FpvWR465--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps1k1p9my8ze6g8zfz7q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpvWR465--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps1k1p9my8ze6g8zfz7q.jpg" alt="Advent of Code" width="880" height="693"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.5 JavaScript Animation Libraries&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;a href="https://anijs.github.io/"&gt;Ani JS&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zsDE0xlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu6ivbyd7fvb7q3rfg1l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zsDE0xlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lu6ivbyd7fvb7q3rfg1l.jpg" alt="Ani Js" width="880" height="901"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="https://scrollrevealjs.org/"&gt;Scroll Reveal JS&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OBDGU-WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tg47eu5vjydl7j3jkih.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBDGU-WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tg47eu5vjydl7j3jkih.jpg" alt="Scroll Reveal JS" width="880" height="893"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://popmotion.io/pure/"&gt;Popmotion Pure&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2Jlq4V7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/697ypomgtn0z56olq3we.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2Jlq4V7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/697ypomgtn0z56olq3we.jpg" alt="Popmotion Pure" width="880" height="840"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="https://mojs.github.io/"&gt;MoJS&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZA8Aq4Rn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wk5l5hfqy50x8thhzsz8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZA8Aq4Rn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wk5l5hfqy50x8thhzsz8.jpg" alt="MoJS" width="880" height="878"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;e)&lt;a href="https://lottiefiles.com/animation/js"&gt;Lottie JS&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fDXHICp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixo04lrl8a1i3j131gl8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fDXHICp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixo04lrl8a1i3j131gl8.jpg" alt="Lottie JS" width="880" height="998"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.6 JavaScript libraries you might don't know about it&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;a href="https://github.com/mattboldt/typed.js"&gt;Typed.js&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbYvvuNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ju1cw3tfrenvyi3hgw8z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbYvvuNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ju1cw3tfrenvyi3hgw8z.jpg" alt="Typed.js" width="880" height="679"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="http://gijsroge.github.io/tilt.js/"&gt;Tilt.js&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7GLbMS06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jon9s6ihdp5jfopu3m1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GLbMS06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jon9s6ihdp5jfopu3m1.jpg" alt="Tilt.js" width="880" height="732"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://greensock.com/docs/"&gt;GSAP&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nBHvw39r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn9yowndxs1zfux2rzpk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nBHvw39r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn9yowndxs1zfux2rzpk.jpg" alt="GSAP" width="880" height="718"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="http://scrollmagic.io/docs/"&gt;Scroll Magic&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7n6IXo8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxt1yqljikm8mx5pdpi1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7n6IXo8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxt1yqljikm8mx5pdpi1.jpg" alt="Scroll Magic" width="880" height="662"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;e)&lt;a href="http://rishabhp.github.io/bideo.js/"&gt;Bideo.js&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aDPV2bQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmxs6tqxvj8umaffh2l4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDPV2bQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zmxs6tqxvj8umaffh2l4.jpg" alt="Bideo.js" width="880" height="1203"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;f)&lt;a href="http://kenwheeler.github.io/slick/"&gt;Slick&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gO9yVQ91--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2a2yj0j9zbg66j9kig9n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gO9yVQ91--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2a2yj0j9zbg66j9kig9n.jpg" alt="Slick" width="880" height="842"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.Best websites to find colors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;a href="https://colorhunt.co/"&gt;Color Hunt&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c_ItHf-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y89sm5r4ymk0ammu9aoc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c_ItHf-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y89sm5r4ymk0ammu9aoc.jpg" alt="Color Hunt" width="880" height="713"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;b)&lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;c)&lt;a href="https://picular.co/"&gt;Picular&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7U5dlwP---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lap0rqvx9wxvc0wu60uj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7U5dlwP---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lap0rqvx9wxvc0wu60uj.jpg" alt="Picular" width="880" height="749"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;d)&lt;a href="https://cssgradient.io/"&gt;CSS Gradient&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rj7flA7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrbpv7dhqayfdknn11o1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rj7flA7g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrbpv7dhqayfdknn11o1.jpg" alt="CSS Gradient" width="880" height="736"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;e)&lt;a href="https://brandcolors.net/"&gt;BrandColors&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwlnfKTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix3fjvgopyfs5r1csz10.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwlnfKTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix3fjvgopyfs5r1csz10.jpg" alt="Brand Colors" width="880" height="745"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;f)&lt;a href="https://color.adobe.com/create"&gt;Adobe Color&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VFJaAoX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm3eldcty6c4b22bpyir.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VFJaAoX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qm3eldcty6c4b22bpyir.jpg" alt="Adobe Color" width="880" height="909"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;g)&lt;a href="https://uigradients.com/#DeepSeaSpace"&gt;UI Gradients&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And if I know more I'll be adding in part-1 and also in part-2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link to Part-1⬇️&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/madiha_eram/web-dev-and-designer-tools-part-1-2k1"&gt;Web developer and designer tools Part-1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>design</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Docker Made Easy🐳</title>
      <author>shubham</author>
      <pubDate>Mon, 13 Dec 2021 16:00:51 +0000</pubDate>
      <link>https://dev.to/shubh/docker-made-easy-1fej</link>
      <guid>https://dev.to/shubh/docker-made-easy-1fej</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Docker is a tool for running applications in an isolated Environment.&lt;/li&gt;
&lt;li&gt;It is similar to Virtual Machine but it's much faster and does not require a lot of memory and an entire operating system to operate.&lt;/li&gt;
&lt;li&gt;The cool thing about docker that your application runs in exact same environment for eg. if it works on my machine it will definitely work on your machine, or if it works on the staging environment it will also work in production environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#containers-vs-vm"&gt;
  &lt;/a&gt;
  Containers vs VM
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#containers"&gt;
  &lt;/a&gt;
  CONTAINERS
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;containers are an abstraction at the app layer that packages code and dependencies together. Multiple containers can run on the same machine ans share the OS kernel with other containers, each running as isolated process in user space.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#virtual-machine"&gt;
  &lt;/a&gt;
  Virtual Machine
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;An application on a VM requires a guest OS and thus an underlying hypervisor to run. Hypervisor is used to create multiple machines on a host operating system and it manages virtual machines. These virtual machines have their own operating system and do not use the host’s operating system. They have some space allocated.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6Gxg-Uc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i78rb96nnjdwd71eumr.jpeg" alt="Image description" width="880" height="445"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#docker-images"&gt;
  &lt;/a&gt;
  Docker Images
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Image is a template for creating an environment of your choice.It is also an  snapshots.&lt;/li&gt;
&lt;li&gt;Images are immutable. Once built, the files making up an image do not change. Images can be stored locally or remote 
locations like hub.docker.com.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have an image, then containers comes into play. A container is a running instance of an image.&lt;/p&gt;

&lt;p&gt;To see the basics commands of docker refer the link below:-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/shubh/docker-cheat-sheet-4ob3"&gt;useful docker commands&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#volumes"&gt;
  &lt;/a&gt;
  Volumes
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;docker volume allows us to share data. files and folder between host and container and between containers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R2Ay_RBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7fsdubtyt603h24p7xu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2Ay_RBx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7fsdubtyt603h24p7xu.png" alt="Image description" width="315" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dockerfile"&gt;
  &lt;/a&gt;
  Dockerfile
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;a docker file allows us to create our own images by creating a file called dockerfile. This files simply containes the list steps to create images, then we can run images created from dockerfile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#docker-registries"&gt;
  &lt;/a&gt;
  Docker Registries
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;This is a server side application that stores Docker images.&lt;/li&gt;
&lt;li&gt;Images can be stored on your local or can be pushed to public registries like Docker Hub.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YregN9BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jxil34zw3wr6d0e4tf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YregN9BM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jxil34zw3wr6d0e4tf2.png" alt="Image description" width="880" height="611"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-see-basic-commadns-like-pulling-building-images-etcclick-here"&gt;
  &lt;/a&gt;
  To see basic commadns like pulling building images etc.&lt;a href="https://dev.to/shubh/docker-cheat-sheet-4ob3"&gt;Click Here&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now that you know what docker is you can now create your application with tons of containers that interact with each other so you can imagine the effort to manage hundreds of container manually, every time a container crash or the communications between them is not working you have to manually fix these problems. Here is where container-orchestration system comes into play, It helps in automating application deployment, scaling, and management. One of the very widely used COE is Kubernetes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-twitter"&gt;
  &lt;/a&gt;
  connect :&lt;a href="https://twitter.com/shubhztwt"&gt;Twitter&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading 👽
&lt;/h2&gt;

</description>
      <category>devops</category>
      <category>docker</category>
      <category>opensource</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Git in just a few minutes</title>
      <author>EstherWanjiru</author>
      <pubDate>Mon, 13 Dec 2021 15:58:42 +0000</pubDate>
      <link>https://dev.to/estherwanjiru/git-in-just-a-few-minutes-3k69</link>
      <guid>https://dev.to/estherwanjiru/git-in-just-a-few-minutes-3k69</guid>
      <description>&lt;p&gt;Hey, here's a deep dive into Git. &lt;/p&gt;

&lt;p&gt;Incase you missed the Introduction to git and GitHub, &lt;a href="https://dev.to/estherwanjiru/introduction-to-git-and-github-25ei"&gt;start here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether you are a long time programmer or are just getting started, you know that Git is quite pivotal in your coding journey.&lt;/p&gt;

&lt;p&gt;Git is a distributed version control system that makes tracking changes to your code very easy. It's easy to swap across versions and well who doesn't like the idea that one can undo the changes in your code through Git.&lt;/p&gt;

&lt;p&gt;Lastly, Git is so ideal when incorporated in Teams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git%5B%5D"&gt;Guide to install Git:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installation, Configure it with your GitHub account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: _(Option1)_Initialize Git in your existing project&lt;/strong&gt;&lt;br&gt;
To do this simply run the command in the terminal from the folder that contains all your project files. This will add a .git folder to your project that Git will use to track all the changes you make to your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;_(Option2)_Cloning your repository(entire project being managed by Git) by creating a new repo or getting an existing repository  and copying the link to clone the project. Ensure you pick the right url according to how you set up your Git, either ssh or http. Thereafter type the command below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Git clone ssh_url or Git clone http
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in your terminal with the copied url at the end of the command. This copies all the code from the repo on to your computer and sets up Git to track all the changes. It adds a .git folder so that when you are ready to push your changes to GitHub, git will already know where to push them too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git structure&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Working Directory&lt;/strong&gt; - All the files in the work repository in their current state. At this point none of the working repositories are being tracked by Git. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Index/ staging&lt;/strong&gt; - To track these changes in the work directory we need to add them to the Index. This can be done by using the command below.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tells Git we want to track all the changes that have been made in the working directory. This still doesn't make the changes in the official version in your code that you can change in between them. Which is why we commit these changes from the index to the final stage, the Head. Using the command below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "message saved with the commit."
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.&lt;strong&gt;Head&lt;/strong&gt; - This tells git that the changes are final and requires a message to be saved with the commit. After committing changes to the head, they are saved as a version on our computer but are not in our remote repository on GitHub. &lt;/p&gt;

&lt;p&gt;In order to get these changes to our remote repository on GitHub, we need to push them to GitHub using the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you set up your project using &lt;code&gt;git clone&lt;/code&gt;, then Git will already know where to push all the files to. But if you used &lt;code&gt;git init&lt;/code&gt; to initialize a new project, then it will need to be told where to push these changes to. This can be done by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating a repository on GitHub&lt;/li&gt;
&lt;li&gt;Copy the ssh_url for cloning.&lt;/li&gt;
&lt;li&gt;Thereafter, you can use the origin command below. This tells Git that we have a remote repository called origin at the copied url.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin ssh_url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the remote repo added, we can use the &lt;code&gt;git push&lt;/code&gt; command to push the changes to the remote repo on GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-far-we-can"&gt;
  &lt;/a&gt;
  So far... we can  🥷🏻🦸🏻‍♀️
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create a repository.&lt;/li&gt;
&lt;li&gt;Make changes to it.&lt;/li&gt;
&lt;li&gt;Save the changes.&lt;/li&gt;
&lt;li&gt;Push the changes to GitHub.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#what-if"&gt;
  &lt;/a&gt;
  What if  🤔
&lt;/h1&gt;

&lt;p&gt;One of your team members wants to pull down the changes that we have pushed to GitHub on to their local computer, this is where we use the command below in their terminal and all the changes from GitHub will be pulled onto their local computer and merges with all the changes that they have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#thats-basically-all-you-need-to-know-about-git-to-get-started"&gt;
  &lt;/a&gt;
  That's basically all you need to know about Git to get started!!!
&lt;/h1&gt;

&lt;p&gt;Please make sure you leave a like 👍/loveheart ❤️ on this one. It encourages one to write more and more 🎉 🎊&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>git</category>
      <category>opensource</category>
    </item>
    <item>
      <title>⚡️ Serverless-stack⚡️ Build full-stack serverless apps on AWS!</title>
      <author>Manitej ⚡</author>
      <pubDate>Mon, 13 Dec 2021 15:58:12 +0000</pubDate>
      <link>https://dev.to/manitej/first-look-at-serverless-stack-build-full-stack-serverless-apps-on-aws-311h</link>
      <guid>https://dev.to/manitej/first-look-at-serverless-stack-build-full-stack-serverless-apps-on-aws-311h</guid>
      <description>&lt;p&gt;This is an introduction blog post to a new framework called &lt;a href="https://serverless-stack.com/"&gt;SST&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/serverless-stack"&gt;
        serverless-stack
      &lt;/a&gt; / &lt;a href="https://github.com/serverless-stack/serverless-stack"&gt;
        serverless-stack
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      💥 Serverless Stack (SST) is a framework that makes it easy to build serverless apps. Set breakpoints and test your functions locally.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#what-is-sst"&gt;
  &lt;/a&gt;
  What is SST?
&lt;/h2&gt;

&lt;p&gt;Serverless Stack (SST) is an open-source framework that makes it easy to build serverless applications on AWS. It supports various frameworks like React, Vue, Angular, Svelte and much more!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  🔥 Features
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#live-lambda-development"&gt;
  &lt;/a&gt;
  Live Lambda Development
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Work on your local Lambda functions live, without mocking or redeploying your app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#breakpoint-debugging"&gt;
  &lt;/a&gt;
  Breakpoint debugging
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use your favourite IDE like Visual Studio code, WebStorm, Intellij and set breakpoints to debug your Lambda functions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#composable-serverless-constructs"&gt;
  &lt;/a&gt;
  Composable serverless constructs
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Higher-level CDK constructs made specifically for building serverless apps.&lt;/p&gt;

&lt;p&gt;and much more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  ✨ Examples
&lt;/h3&gt;

&lt;p&gt;Okay, enough talk want to see some actual code? sure, go ahead.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#want-to-create-a-rest-api"&gt;
  &lt;/a&gt;
  Want to create a REST API?
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here you go,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET /notes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/list.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET /notes/{id}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/get.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PUT /notes/{id}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/update.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#no-rest-graphql-please"&gt;
  &lt;/a&gt;
  No REST, GraphQL please!
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;alright!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AppSyncApi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;graphqlApi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;schema.graphql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;resolvers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Query get&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/get.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Query list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/list.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mutation update&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/update.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#want-user-auth-its-a-piece-of"&gt;
  &lt;/a&gt;
  Want user auth? it's a piece of 🍰
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's an example code to add Facebook auth&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;defaultAuthorizationType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApiAuthorizationType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AWS_IAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET /private&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/private.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;facebook&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;appId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;419718329085014&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Allow auth users to access the API&lt;/span&gt;
&lt;span class="nx"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachPermissionsForAuthUsers&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#cron-jobs"&gt;
  &lt;/a&gt;
  CRON jobs?
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Too easy!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Cron&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;job&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/lambda.main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rate(1 minute)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Allow access to other resources&lt;/span&gt;
&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachPermissions&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#fullstack-react-app-hosted-on-aws"&gt;
  &lt;/a&gt;
  Full-stack react app hosted on AWS?
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;We need 6 lines of code to do that,&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;sst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactStaticSite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Site&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/frontend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;customDomain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;www.my-react-app.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;REACT_APP_API_URL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;and this is just the surface, want to explore more?&lt;/p&gt;

&lt;p&gt;⭐️ on GitHub to support us!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/serverless-stack"&gt;
        serverless-stack
      &lt;/a&gt; / &lt;a href="https://github.com/serverless-stack/serverless-stack"&gt;
        serverless-stack
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      💥 Serverless Stack (SST) is a framework that makes it easy to build serverless apps. Set breakpoints and test your functions locally.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Website: &lt;a href="https://serverless-stack.com/"&gt;here&lt;/a&gt;&lt;br&gt;
Follow on Twitter: &lt;a href="https://twitter.com/ServerlessStack"&gt;here&lt;/a&gt;&lt;br&gt;
Join slack: &lt;a href="https://launchpass.com/serverless-stack"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Introducing My New Blogfolio</title>
      <author>Braydon Coyer</author>
      <pubDate>Mon, 13 Dec 2021 15:53:40 +0000</pubDate>
      <link>https://dev.to/braydoncoyer/introducing-my-new-blogfolio-50c9</link>
      <guid>https://dev.to/braydoncoyer/introducing-my-new-blogfolio-50c9</guid>
      <description>&lt;p&gt;If you're reading this, it means that my newly revamped blogfolio has gone live! I'm &lt;em&gt;so&lt;/em&gt; excited that you're here and experiencing the new site that I've been working hard on in my spare time for the last 3 months. It's been a labor of love, and I'm stoked that I finally hit the publish button.&lt;/p&gt;

&lt;p&gt;Check out my &lt;a href="https://braydoncoyer.dev"&gt;new blogfolio here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uBuFtOEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000556/new_blogfolio_igoj09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uBuFtOEU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000556/new_blogfolio_igoj09.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639000556/new_blogfolio_igoj09.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My new website has a fresh coat of paint, improves on many things of the previous iteration, and adds several new features that I'm really excited about!&lt;/p&gt;

&lt;p&gt;Before I dive into that, though, I want to briefly touch on why I decided to rebuild my blogfolio. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-i-rebuilt-my-blogfolio"&gt;
  &lt;/a&gt;
  Why I Rebuilt my Blogfolio
&lt;/h2&gt;

&lt;p&gt;I've been blogging for a little over a year now. In October of 2020, I decided I wanted to make an investment by documenting my knowledge and learning in public. &lt;/p&gt;

&lt;p&gt;Originally, I hosted my blog over on Hashnode. With its 2-minute setup, custom domain mapping and engaging community, Hashnode was extremely alluring. And it suited me well! However, it wasn't long before I had the desire to dig deeper and build my own blogging platform. I wanted to truly own all of my content, grow my own personal brand, theme my blog however I wanted and add features as I saw fit.&lt;/p&gt;

&lt;p&gt;I chose Gatsby as my framework and utilized MDX as my CMS. I worked hard on the design, learned Gatsby and eventually published my own slice of the internet in early 2021.&lt;/p&gt;

&lt;p&gt;📣 You can still visit my old portfolio by &lt;a href="https://wizardly-payne-b3707b.netlify.app/blog"&gt;clicking here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Since then I've published 34 articles, written 6 sponsored articles and reached more than 100,000 people online. It's been quite the year! &lt;/p&gt;

&lt;p&gt;So why rebuild?&lt;/p&gt;

&lt;p&gt;There's a few technical reasons, but a big part of my decision stemmed from my continuous desire to learn new things. I treat my domain as an environment for experimentation; an area to promote creativity. My codebase is ever-evolving and changing. Sometimes things stick around, while other times I realize it's best not to push something to the public. Regardless of the end result, I always learn something.&lt;/p&gt;

&lt;p&gt;🤔 You may not think that building a blog is very complicated. But, I disagree. &lt;a href="https://braydoncoyer.dev/blog/why-every-developer-should-build-their-own-blog/"&gt;Here's why I think every developer should build their own blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I do have a few reasons that are a bit more justifiable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gatsby was getting slow. Build times were long, and because of how I built my blog, it was getting harder and harder to add new features.&lt;/li&gt;
&lt;li&gt;I had this extremely weird bug where I couldn't commit changes - no idea why. I tried a lot of things to fix this, even deleting the project and cloning it down again. Sometimes I could commit, sometimes I couldn't. I tried different computers, too. Nothing worked. 🤷&lt;/li&gt;
&lt;li&gt;All of my blog content was sourced from MDX. And while having the ability to inject React components into the markdown allowed for some great interactions, it was a pain to open my IDE, manually create a new article, stage my changes and redeploy my blog. This made me start to seek out a CMS. I know, I know: first-world problems.&lt;/li&gt;
&lt;li&gt;I had been using Next.js at work for an internal project, and I really enjoyed it. Having the option to pre-render pages at build time (SSG), request time (SSR) or incrementally (ISR) opened a lot of possibilities and solved a few pain points I was experiencing (like the point above). More on Next.js and my tech stack later in this article...&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#whats-new-on-my-blogfolio"&gt;
  &lt;/a&gt;
  What's New on My Blogfolio
&lt;/h2&gt;

&lt;p&gt;Now comes the fun part! I've jam-packed this site with lots of new features, and a handful of improvements!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion-as-a-cms"&gt;
  &lt;/a&gt;
  Notion as a CMS
&lt;/h3&gt;

&lt;p&gt;My entire life lives in Notion: work projects, notes, contacts, books I'm reading, my daily journal, my weekly calendar, family stuff, finances, blog posts - you name it! When I saw that the Notion API had been released, it only made sense to utilize the API and use Notion as a CMS. &lt;/p&gt;

&lt;p&gt;Now when I want to release a new article, I don’t have to open VS Code and manually create a new file, push my changes and redeploy my app - now I can simply create a new item in my blog database, write my article as I normally would, and the new post shows up automatically on my site. It’s like magic! ✨ &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#article-reactions"&gt;
  &lt;/a&gt;
  Article Reactions
&lt;/h3&gt;

&lt;p&gt;A new feature debuting with my updated blogfolio is article reactions! &lt;/p&gt;

&lt;p&gt;I'm a big fan of community engagement, a quick way for others to gauge the helpfulness of an article is a quick glance at the reactions. Built with Supabase and Next.js API routes, visitors can react to an article with the following emojis: 👍, ❤️, 👏, and 🎉! &lt;/p&gt;

&lt;p&gt;I'm planning on adding some micro-interactions when a reaction is activated, so keep an eye out for that in the near future! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FEILiczs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000654/article_reactions.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FEILiczs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000654/article_reactions.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639000654/article_reactions.png" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automated-open-graph-images"&gt;
  &lt;/a&gt;
  Automated Open Graph Images
&lt;/h3&gt;

&lt;p&gt;Another feature I'm excited to release is automated Open Graph images!&lt;/p&gt;

&lt;p&gt;I use to craft social banners by hand for each article. It allowed for flexibility, but was very time-consuming.&lt;/p&gt;

&lt;p&gt;With the help of the powerful Cloudinary API, my portfolio grabs the article banner and title and crafts a dynamic Open Graph image. I'm really proud of this feature, not only because it'll save me lots of time, but because I think it looks super slick, too! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dO4S0sg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000884/open_graph_preview_rn6qqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dO4S0sg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639000884/open_graph_preview_rn6qqm.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639000884/open_graph_preview_rn6qqm.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stats-page"&gt;
  &lt;/a&gt;
  Stats page
&lt;/h3&gt;

&lt;p&gt;Stolen almost directly from &lt;a href="https://sld.codes"&gt;SLD&lt;/a&gt;, I've incorporated a &lt;a href="http://braydoncoyer.dev/stats"&gt;Stats page on my site&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;From here visitors can see how many active visitors I have on the site, total page views, the number of articles I've published, an in-depth look into article reactions, and more! &lt;/p&gt;

&lt;p&gt;This was accomplished with a variety of APIs, and the statistics update every 60 seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vb5DuWrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001056/stats_page_obds27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vb5DuWrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001056/stats_page_obds27.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639001056/stats_page_obds27.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#article-read-feature"&gt;
  &lt;/a&gt;
  Article 'READ' feature
&lt;/h3&gt;

&lt;p&gt;A nice quality of life addition I wanted to include was the ability for visitors to quickly scan and identify articles they've already read.&lt;/p&gt;

&lt;p&gt;Sometimes it's hard to remember what has already been seen, especially as time passes and visitors return to my blog. This little nice-to-have has come in handy — even for me as I built out the site!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h4ycvIVr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001338/read_feature_mdelsy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h4ycvIVr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001338/read_feature_mdelsy.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639001338/read_feature_mdelsy.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intelligent-article-suggestions-and-article-tags"&gt;
  &lt;/a&gt;
  Intelligent Article Suggestions and Article Tags
&lt;/h3&gt;

&lt;p&gt;I'm grouping these together because they're related, though in reality they should be considered separate features. &lt;/p&gt;

&lt;p&gt;As visitors reach the end of an article, my blog will intelligently suggest three additional articles to read in an attempt to help them find more helpful content. Behind the scenes, this is done through the tags associated with each article. &lt;/p&gt;

&lt;p&gt;And, because articles now have assigned tags, it's possible to now discover articles via tags on the blog list page. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#copy-code-to-clipboard"&gt;
  &lt;/a&gt;
  Copy Code to Clipboard
&lt;/h3&gt;

&lt;p&gt;A smaller feature that was often requested was the ability to copy a block of code to the clipboard. &lt;/p&gt;

&lt;p&gt;Visitors reading an article on desktop or medium-sized devices can now copy code with a single click! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sharing-an-article-to-social-media"&gt;
  &lt;/a&gt;
  Sharing an Article to Social Media
&lt;/h3&gt;

&lt;p&gt;One area that I improved over my previous blog iteration is where the social sharing options are placed. &lt;/p&gt;

&lt;p&gt;Previously, these options were located at the top of the page and hidden under a three-dot menu. Not the easiest to find; I wasn’t really considering the user experience here and instead wanted to implement a dropdown because it looked cool! &lt;/p&gt;

&lt;p&gt;This second attempt is a bit more elegant, and I put a bit more thought into the UX. If a visitor is reading an article on their tablet or computer, the sticky sidebar on the right contains easy-to-identify social icons for access at any point. &lt;/p&gt;

&lt;p&gt;If on mobile, the social icons have been relocated and placed at the end of an article, allowing visitors to share the article if they found it helpful. &lt;/p&gt;

&lt;p&gt;Alongside the social icons is a new copy to clipboard icon for those who want to grab the URL directly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lasted-edited-date-for-articles"&gt;
  &lt;/a&gt;
  Lasted Edited Date for Articles
&lt;/h3&gt;

&lt;p&gt;An article on my blog is treated like a living document; it gets better over time as I gain feedback on the content, expand my knowledge on the subject, or update the article due to a change or deprecation.&lt;/p&gt;

&lt;p&gt;From a reader's perspective, it can be helpful to know that the article they're reading is up-to-date, which is why I've included an updated date beneath the published date.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jXm5Cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001477/updated_date_hvs5ws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jXm5Cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001477/updated_date_hvs5ws.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639001477/updated_date_hvs5ws.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#animations-and-page-transitions"&gt;
  &lt;/a&gt;
  Animations and Page Transitions
&lt;/h3&gt;

&lt;p&gt;I'm not a huge fan of distracting animations on websites, especially when I'm reading an article. &lt;/p&gt;

&lt;p&gt;It goes without saying, though, that animation can play a role in design and user experience. &lt;/p&gt;

&lt;p&gt;I've included subtle page transitions with my new blogfolio, and even some parallax scrolling on the &lt;a href="http://braydoncoyer.dev/projects"&gt;Projects&lt;/a&gt; page. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dedicated-projects-page"&gt;
  &lt;/a&gt;
  Dedicated Projects Page
&lt;/h3&gt;

&lt;p&gt;Piggybacking off of that, my revamped blogfolio contains its own dedicated &lt;a href="http://braydoncoyer.dev/projects"&gt;Projects&lt;/a&gt; page. &lt;/p&gt;

&lt;p&gt;My previous iteration displayed projects on the home page. While the esthetic was nice, it didn't leave much room for additional information, and locating the projects required the visitor to scroll down quite a ways. &lt;/p&gt;

&lt;p&gt;My hope is that the new dedicated Projects page makes it easier to access some of my select works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile-navigation-menu"&gt;
  &lt;/a&gt;
  Mobile Navigation Menu
&lt;/h3&gt;

&lt;p&gt;Another new addition to this site is the new mobile navigation menu. &lt;/p&gt;

&lt;p&gt;Visitors will now be able to click on a hamburger menu in the top-right of their device and access a navigation menu for easy traversal of my site, and to change the theme on the fly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-new-look-for-the-changelog"&gt;
  &lt;/a&gt;
  A New Look for the Changelog
&lt;/h3&gt;

&lt;p&gt;Although the Changelog page isn't new for this release, I've updated the look and also grabbed the content from Notion.&lt;/p&gt;

&lt;p&gt;I like the idea of documenting the changes I make on this site. It gives visitors a way to see what's new, and gives me a birds-eye view of the noteworthy things I've shipped. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ESQFvUmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001598/changelog_feature_vvdfun.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ESQFvUmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/braydoncoyer/image/upload/v1639001598/changelog_feature_vvdfun.png" alt="https://res.cloudinary.com/braydoncoyer/image/upload/v1639001598/changelog_feature_vvdfun.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easy-access-to-the-resume"&gt;
  &lt;/a&gt;
  Easy Access to the Resume
&lt;/h3&gt;

&lt;p&gt;Finally, I added a way to quickly access my most recently updated resume directly from the footer. This should be helpful for potential future employers, or for anyone else who is interested in seeing my work history.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tech-stack"&gt;
  &lt;/a&gt;
  The Tech Stack
&lt;/h2&gt;

&lt;p&gt;I'm sure some of you are interested to know what technologies I used to build my JAMstack blogfolio. I have this information &lt;a href="https://braydoncoyer.dev/toolbox#this-site-&amp;amp;-blog"&gt;listed on my toolbox page&lt;/a&gt;, but let me dive a bit deeper here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs-version-12"&gt;
  &lt;/a&gt;
  Next.js Version 12
&lt;/h3&gt;

&lt;p&gt;I'm using &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; as my framework of choice for the rebuild. Specifically, the newly released version 12 which comes with a host of new additions! Using middleware, I was able to easily redirect incoming traffic to an updated slug for a select few articles. &lt;/p&gt;

&lt;p&gt;All of the pages on my site are either statically generated at build time, or incrementally regenerate to fetch new data. This means my blogfolio is blazing fast.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  Notion
&lt;/h3&gt;

&lt;p&gt;As previously mentioned, I'm using &lt;a href="https://www.notion.so/product?utm_source=google&amp;amp;utm_campaign=2075789710&amp;amp;utm_medium=80211061601&amp;amp;utm_content=500427479647&amp;amp;utm_term=notion&amp;amp;targetid=aud-1188813422817:kwd-312974742&amp;amp;gclid=Cj0KCQiAzMGNBhCyARIsANpUkzMIIZl2Z9mzf48BtyHyqEdNRIJpk6z9majB1vQgp1fXQ4OBMqodeYoaAn8REALw_wcB"&gt;Notion&lt;/a&gt; as my CMS. When I want to publish a new article, I create a new item in my blog database, update the appropriate properties and Next's ISG handle's the distribution for users. &lt;/p&gt;

&lt;p&gt;I'm also using Notion for my Toolbox and Changelog pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tailwindcss-version-3"&gt;
  &lt;/a&gt;
  TailwindCSS Version 3
&lt;/h3&gt;

&lt;p&gt;Once again, I'm using &lt;a href="https://tailwindcss.com"&gt;Tailwind&lt;/a&gt; to style my blogfolio but this time using the newly released version 3! ✨&lt;/p&gt;

&lt;p&gt;With this new revamp, I'm relying more on the Typography plugin to handle a lot of my content styling. Compared to my previous blog, this means that my markup is drastically cleaner. The only utility classes used in the markup is there for specific stylistic reasons. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supabase"&gt;
  &lt;/a&gt;
  Supabase
&lt;/h3&gt;

&lt;p&gt;I gave &lt;a href="https://supabase.com"&gt;Supabase&lt;/a&gt; a try for a side project a few months ago and immediately fell in love. &lt;/p&gt;

&lt;p&gt;I'm using Supabase to track my article hit count as well as article reactions. Pair the ease of use with Next's API routes and the experience was super smooth. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloudinary"&gt;
  &lt;/a&gt;
  Cloudinary
&lt;/h3&gt;

&lt;p&gt;Notion allows me to embed images directly in my articles, but instead of having Notion serve the images, I decided to shift to &lt;a href="https://cloudinary.com"&gt;Cloudinary&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I'm also using Cloudinary's powerful image transformation API to create dynamic Open Graph banners. It's super cool, and I'm sure I'll be writing up a tutorial soon!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iconic"&gt;
  &lt;/a&gt;
  Iconic
&lt;/h3&gt;

&lt;p&gt;One of the things that give UIs that extra level of polish is consistency, and icons play an important part in that. There are countless icon libraries available, but I chose to go with the premium &lt;a href="https://iconic.app"&gt;Iconic&lt;/a&gt; library. Each icon is crafted to perfection - and I hope you enjoy them as much as I do!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#revue"&gt;
  &lt;/a&gt;
  Revue
&lt;/h3&gt;

&lt;p&gt;When it was announced that newsletters powered by Revue can be embedded in your Twitter profile, I quickly made the switch from Buttondown. &lt;/p&gt;

&lt;p&gt;Revue has a robust API as well, allowing me to perform all sorts of operations here on my blogfolio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acknowledgments"&gt;
  &lt;/a&gt;
  Acknowledgments
&lt;/h2&gt;

&lt;p&gt;Although I was shipping the code, this adventure was hardly a one-man endeavor.  &lt;/p&gt;

&lt;p&gt;I'd like to thank the following individuals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jonmeyers_io"&gt;Jon Meyers&lt;/a&gt; - for his incredibly helpful Egghead course on using the Notion API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/DBredvick"&gt;Drew Bredvick&lt;/a&gt; - for helping me debug some super weird SEO rendering issues.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jamesm"&gt;James&lt;/a&gt; - for his brilliantly designed icons.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/jlengstorf"&gt;Jason Lengstorf&lt;/a&gt; - for his helpful article on adding text overlays using Cloudinary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I've had a ton of fun revamping this site, and I've learned a lot too! &lt;/p&gt;

&lt;p&gt;Thanks for checking it out, and for reading this far! &lt;/p&gt;

&lt;p&gt;Keep an eye out for future updates - I've got a lot planned!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
      <category>tailwindcss</category>
    </item>
  </channel>
</rss>
