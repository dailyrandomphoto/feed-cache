<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Migrating Firebase RTDB to Belgium : 4 Steps Guide</title>
      <author>Damien Cavaillès 💙</author>
      <pubDate>Tue, 20 Apr 2021 08:34:59 +0000</pubDate>
      <link>https://dev.to/thedamfr/migrating-firebase-rtdb-to-belgium-4-steps-guide-5hcn</link>
      <guid>https://dev.to/thedamfr/migrating-firebase-rtdb-to-belgium-4-steps-guide-5hcn</guid>
      <description>&lt;p&gt;Did you know that WeLoveDevs.com jobboard is custom-made and built over Firebase ?&lt;br&gt;
The clear benefit of it was a reactive application, easy to build with a small team. And this since 2016.&lt;br&gt;
The downside is that the users data would be located in the US. So when Firebase released a new location in europe we jumped in this train even if it was beta.&lt;/p&gt;

&lt;p&gt;Changing a firebase project location is not that easy as you think. First of all because you can't upload a backup of more than 256mb. And our backup is 1Gb. &lt;/p&gt;

&lt;p&gt;Also, you have to depreciate the former location and move all of your services to the new location in the same migration. This mean you will have to be down (or at least read-only for a consecutive time frame).&lt;/p&gt;

&lt;p&gt;We also use 250 Firebase Cloud Functions and you have to deploy them against the new location also.&lt;/p&gt;

&lt;p&gt;Well, this quick and easy to read article is your guide if you want to move your Firebase location to Europe and you may want to bookmark it.&lt;/p&gt;

&lt;p&gt;If you have any question please ask them on this post. We love the Dev.to community and would be very happy provide insight or answer questions.&lt;/p&gt;

&lt;p&gt;Read full post : &lt;a href="https://welovedevs.com/articles/migrating-firebase-rtdb-from-us-to-belgium-4-steps-to-do-it/"&gt;https://welovedevs.com/articles/migrating-firebase-rtdb-from-us-to-belgium-4-steps-to-do-it/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>privacy</category>
    </item>
    <item>
      <title>Solution: N-ary Tree Preorder Traversal</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 20 Apr 2021 08:34:03 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-n-ary-tree-preorder-traversal-506</link>
      <guid>https://dev.to/seanpgallivan/solution-n-ary-tree-preorder-traversal-506</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/n-ary-tree-preorder-traversal/discuss/1167734"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-589-easy-nary-tree-preorder-traversal"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/n-ary-tree-preorder-traversal/"&gt;Leetcode Problem #589 (&lt;em&gt;Easy&lt;/em&gt;): N-ary Tree Preorder Traversal&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given the &lt;code&gt;root&lt;/code&gt; of an n-ary tree, return the preorder traversal of its nodes' values.&lt;/p&gt;

&lt;p&gt;Nary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;root = [1,null,3,2,4,null,5,6]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,3,5,6,2,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNUW3P7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2018/10/12/narytreeexample.png" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,2,3,6,7,11,14,4,8,12,5,9,13,10]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wJA7KC6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2019/11/08/sample_4_964.png" alt="Example 2 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The number of nodes in the tree is in the range &lt;code&gt;[0, 104]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0 &amp;lt;= Node.val &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The height of the n-ary tree is less than or equal to &lt;code&gt;1000&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Preorder traversal&lt;/strong&gt; is a type of &lt;strong&gt;depth-first search&lt;/strong&gt; (&lt;strong&gt;DFS&lt;/strong&gt;) approach, and DFS problems are generally best solved with a &lt;strong&gt;recursive&lt;/strong&gt; function. In this case, we can even make the main function its own recursive function, rather than having to define a separate recursive helper. In order to accomplish this, we'll need to create a new &lt;strong&gt;default argument&lt;/strong&gt; for the function to hold our answer array (&lt;strong&gt;ans&lt;/strong&gt;), which should default to an empty array.&lt;/p&gt;

&lt;p&gt;In a preorder DFS traversal, a node is processed before moving on to its children, and then the children are processed from left to right. Our recursive function should then process the current node (&lt;strong&gt;root&lt;/strong&gt;) by pushing its value to &lt;strong&gt;ans&lt;/strong&gt;, and then we should iterate through &lt;strong&gt;root.children&lt;/strong&gt; and call our recursive function on each.&lt;/p&gt;

&lt;p&gt;For all but the main function call, the &lt;strong&gt;return&lt;/strong&gt; value will be unused, but &lt;strong&gt;ans&lt;/strong&gt; should be finished by the time the main function &lt;strong&gt;return&lt;/strong&gt;s it.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Python has &lt;strong&gt;mutable default arguments&lt;/strong&gt;, so we'll have to force a clearing back to &lt;strong&gt;None&lt;/strong&gt; and then back to an empty array on a new class instance.&lt;/p&gt;

&lt;p&gt;Java doesn't support default arguments, but we can make &lt;strong&gt;ans&lt;/strong&gt; an instance variable instead.&lt;/p&gt;

&lt;p&gt;Even though C++ supports default arguments, it's difficult to pass in a pointer, so it's easier just to define a recursive helper instead.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;preorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
    &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;preorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;preorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Node'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;preorder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;val&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Node&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;preorder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;preorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;children&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Everything you need in One Repo</title>
      <author>Hulya</author>
      <pubDate>Tue, 20 Apr 2021 08:05:59 +0000</pubDate>
      <link>https://dev.to/hulyakarakaya/everything-you-need-in-one-repo-o26</link>
      <guid>https://dev.to/hulyakarakaya/everything-you-need-in-one-repo-o26</guid>
      <description>&lt;p&gt;Hello friends, after writing so many free resource posts, I decided to put them together on a website, you can check it out. &lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hulyak/a-to-z-coding-resources"&gt;https://github.com/hulyak/a-to-z-coding-resources&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="https://a-to-z-coding-resources.vercel.app/docs/"&gt;https://a-to-z-coding-resources.vercel.app/docs/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For now, I have included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free resources for learning how to code&lt;/li&gt;
&lt;li&gt;Free images/videos and tools&lt;/li&gt;
&lt;li&gt;Free React.js resources&lt;/li&gt;
&lt;li&gt;Free CSS Resources&lt;/li&gt;
&lt;li&gt;Free Javascript resources&lt;/li&gt;
&lt;li&gt;Free Next.js resources&lt;/li&gt;
&lt;li&gt;Job hunting resources&lt;/li&gt;
&lt;li&gt;BONUS: Career resources (Resume Builders, Linkedin tips, portfolio tips, career advice)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can clone, fork, or download the code, and add your own resources. It is really handy with a good navigation system. I have used Docusaurus, I didn't want to write it on a Markdown page, because I find it hard to navigate. &lt;/p&gt;

&lt;p&gt;I look forward to hearing your feedback and don't forget to give it a star ⭐️ so that other developers also can see it. &lt;/p&gt;

&lt;p&gt;If you like this post, share it on your Twitter account to support me writing more, also you can support me by &lt;a href="https://www.buymeacoffee.com/hulya"&gt;buying  a coffee.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/hulya"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kA3wM6t6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-red.png" alt="Buy Me A Coffee" height="40" width="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/hulyakarkya"&gt;Twitter&lt;/a&gt;, and &lt;a href="https://github.com/hulyak"&gt;Github&lt;/a&gt;. We can connect with each other.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Laravel Validation Image Example</title>
      <author>Dharmik Tank</author>
      <pubDate>Tue, 20 Apr 2021 07:24:04 +0000</pubDate>
      <link>https://dev.to/dharmik_tank/laravel-validation-image-example-5c3e</link>
      <guid>https://dev.to/dharmik_tank/laravel-validation-image-example-5c3e</guid>
      <description>&lt;p&gt;Today, I will learn you to create validation image in laravel.we will show example of laravel validation image.The file under validation must be an image (jpg, jpeg, png, bmp, gif, svg, or webp).&lt;br&gt;
more..&lt;br&gt;
&lt;a href="https://itwebtuts.blogspot.com/2021/04/laravel-validation-image-example.html"&gt;https://itwebtuts.blogspot.com/2021/04/laravel-validation-image-example.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>validation</category>
    </item>
    <item>
      <title>HashChat - Chat with person with same interests as you</title>
      <author>Sebastian Korotkiewicz</author>
      <pubDate>Tue, 20 Apr 2021 06:59:10 +0000</pubDate>
      <link>https://dev.to/skorotkiewicz/hashchat-chat-with-person-with-same-interests-as-you-364d</link>
      <guid>https://dev.to/skorotkiewicz/hashchat-chat-with-person-with-same-interests-as-you-364d</guid>
      <description>&lt;p&gt;I created a chat room where you can meet people with the same interests as you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yE_0ImWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/affyjw3kpl8ckgnfuamd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yE_0ImWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/affyjw3kpl8ckgnfuamd.png" alt="Chat Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check it out at &lt;a href="https://hashchat.js.org/"&gt;hashchat.js.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The most interesting thing about HashChat is that every message before sending to server is encrypted with public key of your partner, where after receiving message only he can decrypt the message with his private key. &lt;/p&gt;

&lt;p&gt;I haven't seen any site yet which encrypts messages with bitcoin and this seems like a really interesting way to do it.&lt;br&gt;
The bitcoin address with the keys is generated in your browser each time you access the site.&lt;br&gt;
Only the public key and address is sent to your chat partner.&lt;/p&gt;

&lt;p&gt;While writing this I got the idea that I could add importing own bitcoin keys.&lt;br&gt;
TODO: Import your bitcoin key.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dQ0nRxEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0i0xyqbeuufijepl6p1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dQ0nRxEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0i0xyqbeuufijepl6p1.png" alt="Settings Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To generate user avatars I use a site that has pretty much the same name as HashChat, it's robohash.org, and it generates a unique avatar based on the given name, so when you type your nickname on HashChat, you'll always have the same avatar.&lt;/p&gt;

&lt;p&gt;Feel free to test HashChat, the whole project is completely OpenSource, you can be a member of the project, every line of code counts :)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/skorotkiewicz"&gt;
        skorotkiewicz
      &lt;/a&gt; / &lt;a href="https://github.com/skorotkiewicz/HashChat"&gt;
        HashChat
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Simple chat with person with same tags as you!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;How do you like the idea and implementation?&lt;br&gt;
Write in the comments what you think about HashChat.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Exploring the Android Studio- Part 1</title>
      <author>Chetan</author>
      <pubDate>Tue, 20 Apr 2021 06:43:08 +0000</pubDate>
      <link>https://dev.to/csj5483/exploring-the-android-studio-part-1-1d2m</link>
      <guid>https://dev.to/csj5483/exploring-the-android-studio-part-1-1d2m</guid>
      <description>&lt;p&gt;In the last article, we learn &lt;b&gt;&lt;a href="https://dev.to/csj5483/how-to-create-a-project-in-android-studio-1a0c"&gt;How to create a project in Android Studio&lt;/a&gt;&lt;/b&gt; and in this article we are going to explore the Android Studio.&lt;/p&gt;

&lt;p&gt;After creating the project this screen will appear in Android Studio&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VcCSBa-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwpk8si7ipc8ci75ve1f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VcCSBa-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwpk8si7ipc8ci75ve1f.png" alt="Exploring the Android Studio- Part 1"&gt;&lt;/a&gt;&lt;br&gt;
In this article, we will try to learn about the App folder and Gradle Scripts&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TWkn4ILj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc91iknb2224lkrugqt0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TWkn4ILj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sc91iknb2224lkrugqt0.png" alt="Exploring the Android Studio- Part 1"&gt;&lt;/a&gt;&lt;br&gt;
As we can see in the above image there is &lt;b&gt;manifests&lt;/b&gt; folder, inside this folder there is a file &lt;b&gt;AndroidManifests.xml&lt;/b&gt;. When we click on this file, we will see something like this on our screen&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VLlthECV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy7j6w54v7bil112vlco.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VLlthECV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy7j6w54v7bil112vlco.png" alt="Exploring the Android Studio- Part 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;AndroidManifests.xml:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This file describes essential information about our app to Operating System and Gooogle Play.&lt;/li&gt;
&lt;li&gt;Manifest file is required to declare the app's package name
![Alt Text](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n11aizi2tye574xscxz2.png)&lt;/li&gt;
&lt;li&gt;It is required to declare the component of the app like:
&lt;ul&gt;
&lt;li&gt;activity&lt;/li&gt;
&lt;li&gt;service&lt;/li&gt;
&lt;li&gt;receiver&lt;/li&gt;
&lt;li&gt;provider&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DPb8LO9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm9i9fq77554fl6fw7me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPb8LO9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm9i9fq77554fl6fw7me.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;

&lt;li&gt;This is the file where we have to add all uses-permission that we are using in our app. For example, if we want to read the external storage of use, then we have to add the following line in our AndroidManifests.xml file,
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--COMJkZVi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/miuy5bxaqgn08wnmh1r1.png" alt="Exploring the Android Studio- Part 1"&gt;
If we want to access other things, we have to follow the same process.
&lt;/li&gt;


&lt;li&gt;We can change the launcher icon of our app from this file.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qmuRgiHj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vgr3m3hc7h36an2miiy.png" alt="Alt Text"&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;android:roundIcon&lt;/b&gt; will be used on a device that uses roundIcon otherwise &lt;strong&gt;android:icon&lt;/strong&gt; will be used&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;
&lt;/li&gt;




&lt;li&gt;In this file we declare what types of Hardware or Software feature our app requires. For example, if our app requires Bluetooth and without it, our app will not work, then we can declare this in the below way:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WhZska6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6dxptphvud47431oons.png" alt="Alt Text"&gt;
&lt;/li&gt;

&lt;li&gt;We can define the intent-filter in this file.

&lt;blockquote&gt;
&lt;p&gt;App activities, services, and broadcast receivers are activated by intents.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, we can change what activity will open when our app will open means we can change the launcher activity.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--caAD2a54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7qb66l21s0fewgpnrif.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--caAD2a54--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7qb66l21s0fewgpnrif.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In the above image, we had chosen SecondActivity as our launcher activity.&lt;/p&gt;


&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Java Folder&lt;/b&gt; :&lt;br&gt;
In this folder, we will write the code for our apps like what will happen when we click on the button and all.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jx65lhjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o65rr04dmalv0arecmlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jx65lhjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o65rr04dmalv0arecmlo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
For example, in the above image, we have the file MainActivity. This file will handle the functionality of the MainActivity Screen.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;res folder&lt;/b&gt;:&lt;br&gt;
This folder is used to store the value of resources that we are using in our project like colors, strings, layout, styles and drawable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJYVWG6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64n4xbxmx96pywnmvi2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJYVWG6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64n4xbxmx96pywnmvi2c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;drawable:&lt;/b&gt; This folder contains the different types of images used for the development of the application. It also contains the XML drawable which are used to describe shapes (color, border, gradient), state, transitions and more.

&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;layout:&lt;/b&gt; It contains the XML code of all layouts of our project.
&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;mipmap:&lt;/b&gt; It contains our app/launcher icons (which are shown on the home screen).
&amp;gt;It’s best practice to place our app icons in mipmap- folders (not the drawable- folders) because they are used at resolutions different from the device’s current density.
&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;values:&lt;/b&gt; This folder contains the value of color, strings and style.
&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;colors.xml:&lt;/b&gt;
The colors.xml is an XML file that is used to store the colors for the resources. We can use these colors throughout our app.

&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;strings.xml:&lt;/b&gt; It is used todefine the strings in one file so that it is easy to use same string in different positions in the android project&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;styles.xml:&lt;/b&gt; In this file all the themes of android project are defined.&lt;/li&gt;
&lt;/ul&gt;




&lt;/li&gt;

&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1zqSf0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pr907m8qcjn7u9hunm3.png" alt="image"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hIR9vkSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ktsfh1cxpy8ltutp9ek.png" alt="Alt Text"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRrM-Kbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdi7eiinpe631pn8lkmj.png" alt="Alt Text"&gt;




&lt;/ul&gt;

&lt;h4&gt;Gradle Script&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKdHwvdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rugsdreyz4c8bl9sqtb0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKdHwvdM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rugsdreyz4c8bl9sqtb0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;b&gt;build.gradle(Project:applicationName)&lt;/b&gt; This file is in the root folder of the project and its configuration settings apply to every module in the project. A module is an isolated piece of the bigger project. In a multi-module project, these modules have their jobs but work together to form the whole project. Most Android projects only have one module, the app module.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2VciOil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58k51s2635ub4tl2mxgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2VciOil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58k51s2635ub4tl2mxgi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;build.gradle(Module:applicationName.app):&lt;/b&gt;: The file here is in the app folder. Its build settings apply only to the app module. If there were another module, then that module would have its build.gradle file, too.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwfkJ6WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais9gmpbmkin4xk9x8g0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwfkJ6WY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais9gmpbmkin4xk9x8g0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In this file we can define:&lt;/p&gt;
&lt;ul&gt;

&lt;li&gt;
&lt;b&gt;applicationId:&lt;/b&gt; This is the package name of our app&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;minSdkVersion:&lt;/b&gt; It specifies the minimum API Level on which the application is able to run.&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;targetSdkVersion:&lt;/b&gt; It specifies the API Level on which the application is designed to run&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;versionCode:&lt;/b&gt; It's a positive integer that's used for comparison with other version codes. It's not shown to the user, it's just for record-keeping in a way.&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;versionName:&lt;/b&gt; This is the version string seen by the user. It isn't used for internal comparisons or anything, it's just for users to see.&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;dependencies:&lt;/b&gt; Dependencies refer to the things that supports in building your project, such as required JAR file from other projects and external JARs like JDBC JAR or Eh-cache JAR in the class path&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;We will continue to explore Android Studio in the next article.&lt;br&gt;
Happy Learning!&lt;/p&gt;

</description>
      <category>android</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>🦋Flutter - Next Level Routing - Popping</title>
      <author>Luciano Jung</author>
      <pubDate>Tue, 20 Apr 2021 06:31:31 +0000</pubDate>
      <link>https://dev.to/lucianojung/flutter-next-level-routing-popping-5b6j</link>
      <guid>https://dev.to/lucianojung/flutter-next-level-routing-popping-5b6j</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;When it comes to navigation in apps and websites, it's not enough that you just implement the forward navigation. The following article will show how the back navigation in Flutter works and how you can load and pass data while doing it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the last Part of my Series: 🦋Flutter - Next Level Navigation.&lt;br&gt;
If you haven't read &lt;a href="https://dev.to/lucianojung/series/12052"&gt;the other parts&lt;/a&gt; yet, I recommend you to do so.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  content
&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href="#popping-pages"&gt;Popping Pages&lt;/a&gt;&lt;/li&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#willpopscope"&gt;WillPopScope&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#pop-context"&gt;Pop context&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#pop-and-then"&gt;Pop and then&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;li&gt;&lt;a href="#passing-data"&gt;Passing Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#popping-pages"&gt;
  &lt;/a&gt;
  Popping Pages
&lt;/h2&gt;

&lt;p&gt;While navigating through an app or website, it often happens that you also want to navigate back.&lt;br&gt;
This can happen under 3 different conditions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;by using the native back button on your smartphone.&lt;/li&gt;
&lt;li&gt;by using the back button in the app bar&lt;/li&gt;
&lt;li&gt;by giving this functionality to a button using &lt;code&gt;Navigator.pop(context);&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#willpopscope"&gt;
  &lt;/a&gt;
  WillPopScope
&lt;/h3&gt;

&lt;p&gt;In Flutter, there is a widget for almost every application purpose. For both conditions 1 and 2, it is possible to intercept and process the corresponding event &lt;code&gt;onWillPop&lt;/code&gt; with the widget &lt;code&gt;WillPopScope&lt;/code&gt;. This might look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_SecondPageState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SecondPage&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;WillPopScope&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;onWillPop:&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// do stuff here before Scope pops&lt;/span&gt;
      &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;...&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The build method of &lt;code&gt;_SecondPageState&lt;/code&gt; is extended with the widget &lt;code&gt;WillPopScope&lt;/code&gt; at the top. Using the &lt;code&gt;onWillPop&lt;/code&gt; property will produce the desired result as soon as the user wants to return to the previous page. Note that the method in &lt;code&gt;onWillPop&lt;/code&gt; is called asynchronously.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pop-context"&gt;
  &lt;/a&gt;
  pop context
&lt;/h3&gt;

&lt;p&gt;As an alternative to the &lt;code&gt;WillPopScope&lt;/code&gt; widget, it is also possible to switch to the previous page programmatically. This is usually done by a button click. An example is given below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// do stuff here before navigation&lt;/span&gt;
    &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'To previous page'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;onPressed&lt;/code&gt; function handles the button click. Before calling &lt;code&gt;Navigator.of(context).pop();&lt;/code&gt; optional optional tasks can be done as well.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pop-and-then"&gt;
  &lt;/a&gt;
  pop and then
&lt;/h3&gt;

&lt;p&gt;In the two examples above, you can only do tasks from the second page before navigating back. Below I want to show you a way to perform operations in the previous class after navigating back.&lt;br&gt;
If you execute one of the functions introduced in the post &lt;a href="https://dev.to/lucianojung/flutter-next-level-navigation-nh4"&gt;Flutter - Next Level Navigation&lt;/a&gt;, such as &lt;code&gt;.pushNamed()&lt;/code&gt;, the function &lt;code&gt;.then()&lt;/code&gt; can be executed on this operator afterwards.  In this function, operations can be performed which are only executed after navigating towards and back again. A concrete example looks like the following:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pushNamed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/page2'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;then&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// do stuff in here&lt;/span&gt;
  &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// update Data in here to be displayed on Page1&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#passing-data"&gt;
  &lt;/a&gt;
  Passing data
&lt;/h2&gt;

&lt;p&gt;You probably wondered what the variable &lt;code&gt;value&lt;/code&gt; in the previous example is passing. Quite simple: You can of course pass data from the second page back to the previous one. This can be done by passing another object besides the &lt;code&gt;context&lt;/code&gt; when calling the &lt;code&gt;.pop()&lt;/code&gt; function. The object can be achieved either as a return value of the function call &lt;code&gt;.pushNamed()&lt;/code&gt; (or a similar one) or through the &lt;code&gt;.then()&lt;/code&gt; function as a passed variable.&lt;br&gt;
The example looks like this:&lt;/p&gt;

&lt;p&gt;Auf der ersten Seite beim hin navigieren:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pushNamed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'/page2'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;then&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="o"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// display return value&lt;/span&gt;
  &lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&amp;amp;&amp;amp; On the second page when navigating back&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;ElevatedButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Nope.'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Nope.'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#closing-words"&gt;
  &lt;/a&gt;
  Closing words
&lt;/h2&gt;

&lt;p&gt;I hope this four-part blog post series showed you how to navigate smoothly and efficiently in Flutter. I thank you for reading and look forward to feedback on the content, suggestions for new content and other interesting conversations.&lt;/p&gt;

&lt;p&gt;What are your experiences with Flutter &amp;amp; Navigation?&lt;br&gt;
Comment on this post and share your experience!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkN631c2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0wtpvq02mzobtz4lx46j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkN631c2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0wtpvq02mzobtz4lx46j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/lucianojung"&gt;Follow me&lt;/a&gt; to not miss any following posts&lt;br&gt;
See my latest Projects on &lt;a href="https://github.com/login?return_to=%2Flucianojung"&gt;Github&lt;/a&gt; or at &lt;a href="https://lucianojung.de/#work"&gt;Lucianojung.de&lt;/a&gt;&lt;/p&gt;


&lt;h4&gt;
  &lt;a href="#you-may-also-like"&gt;
  &lt;/a&gt;
  You may also like:
&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/lucianojung" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWpDhmb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ST6k_uJ6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/570773/4067a97a-e6f0-46c4-84d9-bf571ec88277.jpeg" alt="lucianojung image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lucianojung/global-variable-access-in-flutter-3ijm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🦋Flutter - Manage global variables&lt;/h2&gt;
      &lt;h3&gt;Luciano Jung ・ Feb 10 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dart&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#bestpractice&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/lucianojung" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWpDhmb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ST6k_uJ6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/570773/4067a97a-e6f0-46c4-84d9-bf571ec88277.jpeg" alt="lucianojung image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lucianojung/flutter-next-level-navigation-nh4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🦋Flutter - Next Level Navigation &lt;/h2&gt;
      &lt;h3&gt;Luciano Jung ・ Apr  4 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dart&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/lucianojung" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWpDhmb2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ST6k_uJ6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/570773/4067a97a-e6f0-46c4-84d9-bf571ec88277.jpeg" alt="lucianojung image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lucianojung/flutter-singelton-pattern-1a38" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🦋Flutter - Singleton Pattern&lt;/h2&gt;
      &lt;h3&gt;Luciano Jung ・ Mar 22 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dart&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#pattern&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#bestpractice&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>dart</category>
      <category>flutter</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>30+ website to find designs for your next projects</title>
      <author>Pawan Bhayde</author>
      <pubDate>Tue, 20 Apr 2021 06:25:40 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/30-website-to-find-designs-for-your-next-projects-1kih</link>
      <guid>https://dev.to/pawanbhayde/30-website-to-find-designs-for-your-next-projects-1kih</guid>
      <description>&lt;p&gt;In this post you can find Website Designs For You Next Projects Its Free For All And Easily Acessable&lt;/p&gt;

&lt;p&gt;Lets Get Started&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Landing Pages/Websites:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;SaaS Landing Page&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Land-book&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Lapa&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Landingfolio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;One Page Love&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Minimal Gallery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PortFolio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Humans&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Awwwards&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Siteinspire&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Semplice Showcase&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E-Commerce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Commerce Cream&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;ecomm.design&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Shopify Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile Apps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;UX Archive&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Mobbin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;UI Garage&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Rowlab&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Scrnshts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Web Apps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Screenlane&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Webframe&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;ReallyGoodUX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Logos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Brand New&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Font In Logo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Logopond&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Email Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Really Good Emails&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Email Love&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Email Gallery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visual Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Designspiration&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Baubauhaus&lt;/a&gt;&lt;br&gt;
&lt;a href="https://webdevpawan.blogspot.com/2021/04/30-awesome-places-to-find-design.html"&gt;Inspirationgrid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Where do you get inspiration? Feel free to share your favorite sources of inspiration and we’ll add the best to the list.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>design</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Is AWS killing Linux?</title>
      <author>Mariano Rentería</author>
      <pubDate>Tue, 20 Apr 2021 06:00:27 +0000</pubDate>
      <link>https://dev.to/marianorenteria/is-aws-killing-linux-3b06</link>
      <guid>https://dev.to/marianorenteria/is-aws-killing-linux-3b06</guid>
      <description>&lt;p&gt;I see more and more job offers around DevOps, I see a lot of infrastructure providers, the staple cloud providers AWS, Azure, Google Cloud, even Digital Ocean, moving from IaaS to Abstraction services or Software a Service, where they just provide the tools to consume the service, you don't need to worry about securing, patching, etc. all of which were Linux administration duties. &lt;/p&gt;

&lt;p&gt;Some of SysAdmins that I know, agree that having an infrastructure using VMs (Virtual Machines) with Linux with a cloud provider is not a good practice, is not scalable (they say), you are not taking advantage of all the sweet features that the cloud is building for you, etc, . &lt;/p&gt;

&lt;p&gt;I wonder if Linux Administration will still be a thing in the near future, or a career that someone will pursue when going out of college or university, and if that is even something to recommend to newly graduates, since we, as IT professionals, love to recommend the future, not the current needs, we give advice like: don’t  code on PHP or Java, the new hot language is Python or Go… you will have more chances of succeeding in life.&lt;/p&gt;

&lt;p&gt;I know that a lot of the services that the cloud currently provide have Linux running behind of them, and probably the use of Linux is at is high, in the &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-platforms"&gt;Stack Overflow survey they ranked number one with 55 % of preference&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#will-aws-build-its-own-os-and-ditch-linux"&gt;
  &lt;/a&gt;
  Will AWS build its own OS and ditch Linux?
&lt;/h2&gt;

&lt;p&gt;Hard to tell… but something is clear, they have the resources to do it, they already have an operating system for their mobile devices.&lt;/p&gt;

&lt;p&gt;AWS has also &lt;a href="https://www.datacenterknowledge.com/open-source/two-ways-interpreting-elastic-license-change"&gt;forked the Open Source solution of Elasting Search&lt;/a&gt;, and &lt;a href="https://www.msn.com/en-us/news/technology/opensearch-aws-rolls-out-its-open-source-elasticsearch-fork/ar-BB1fBO3a"&gt;has rolled it out&lt;/a&gt;, which is a big hit for Open Source projects… and a big hit for cloud users.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Elastic is leading the fight against cloud providers.&lt;br&gt;
If you’re a free software purist, though, you’d probably applaud what Elastic has done. In essentially making it much harder for cloud providers to build SaaS platforms using someone else’s code, the company has taken the bold stance necessary to achieve meaningful change with regard to the way clouds use open source.&lt;br&gt;
No other open source organization has gone this far. Most open source projects and companies do little to stop cloud providers from co-opting their software, even if doing so constrains user freedoms and allows cloud providers to profit off of open source developers’ work while offering nothing in return. They’ve presumably done this because they haven’t been bold enough to take a strong stance against the large public clouds that increasingly rule the world of IT.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#cloud-architecture-is-the-thing"&gt;
  &lt;/a&gt;
  Cloud Architecture is the 🆕 thing
&lt;/h2&gt;

&lt;p&gt;Nearly all the cloud providers have an academia and offer certification so that you can demonstrate that you can use their services.&lt;/p&gt;

&lt;p&gt;For AWS the cost of the exam is from $150 to $300 USD. &lt;/p&gt;

&lt;p&gt;For a Linux certification the price is higher, see just some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux Foundation cost per exam: $300 USD&lt;/li&gt;
&lt;li&gt;RedHat Certified Engineer cost per exam: $400 USD&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#%C2%A0interest-of-cloud-architect-linux-architect"&gt;
  &lt;/a&gt;
   Interest of: Cloud Architect 🆚 Linux Architect
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://trends.google.com/trends/explore?date=all&amp;amp;q=cloud%20architect,linux%20architect"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQBV9ffK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2spzu51tguevh4xe3sq.png" alt="Google Trends of Cloud Architect vs Linux Architect"&gt;&lt;/a&gt;&lt;br&gt;
Linux Architect interest was similar to the interest of Cloud Architect, but on 2016 the interest over Cloud Architect have just keep growing. &lt;br&gt;
The related searches indicate where is the interest at.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9_AJRk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8it2fvf9749qqstabk4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9_AJRk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8it2fvf9749qqstabk4a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYvOk3Fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4ffi937yok6j9xrae4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYvOk3Fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4ffi937yok6j9xrae4t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;I see less useful to know Linux in a cloud first era, where the number of people getting certified to be a Cloud Architect is growing, while the number of people looking to get a Linux certification is decreasing.&lt;/p&gt;

&lt;p&gt;The current tools make a great abstraction of service without needing to have strong knowledge of Linux, are more developer friendly and allow to build products faster.&lt;/p&gt;

&lt;p&gt;I’m not saying this is a bad thing, this is just something that could happen sooner than we have thought about. &lt;/p&gt;

&lt;p&gt;Do you think Linux is getting killed by AWS?&lt;/p&gt;

</description>
      <category>cloudskills</category>
      <category>linux</category>
      <category>latam</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Cheatsheet for the Regular Expressions Cheatsheet [Part 1]</title>
      <author>Analogy | Absence | Example</author>
      <pubDate>Tue, 20 Apr 2021 05:58:53 +0000</pubDate>
      <link>https://dev.to/mathlete/cheatsheet-for-the-regular-expressions-cheatsheet-part-1-247f</link>
      <guid>https://dev.to/mathlete/cheatsheet-for-the-regular-expressions-cheatsheet-part-1-247f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fU7u83sD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzaodkoi1kszqftclitc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fU7u83sD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yzaodkoi1kszqftclitc.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was recently doing a code challenge for a job interview that required me to strip out all nonalphabetic characters. "Ah! I should use Regular Expressions for this!" I thought in triumph, impressed that I even knew what regular expressions &lt;em&gt;were&lt;/em&gt;. That fleeting moment of glory faded once I decided to brush up on regular expressions and landed on the encouragingly-named &lt;a href="https://cheatography.com/davechild/cheat-sheets/regular-expressions/"&gt;Regular Expressions Cheatsheet&lt;/a&gt;. I had no idea how to use it!&lt;/p&gt;

&lt;p&gt;If you, kind reader, are shaking your head in pity, this article is not for you. Go away. For the rest of us, here is a &lt;em&gt;Cheatsheet for the Regular Expressions Cheatsheet&lt;/em&gt;: Anchors Edition. If people like this, I'll follow it up with editions for the rest of the categories.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#anchors-edition-huh"&gt;
  &lt;/a&gt;
  "Anchors Edition"? Huh?
&lt;/h4&gt;

&lt;p&gt;Ok, so the cheat sheet has eleven categories. I could barely get through the first one, which is Anchors, so I'm restricting this blog post to Anchors. The sad thing is that I could only figure out the first five Anchors of the total eight that are listed. Maybe some kind reader will illuminate me on how those other three bastards work, since my googling didn't get me there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EQwcPSTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/au85pgcfy9r8q4280c5h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EQwcPSTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/au85pgcfy9r8q4280c5h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-are-anchors-anyways"&gt;
  &lt;/a&gt;
  What are "Anchors", anyways?
&lt;/h4&gt;

&lt;p&gt;Unlike other regular expression tokens, Anchors don't match actual characters. Anchors match a position before, after, or between characters. You'll see what I mean once you see an example.&lt;/p&gt;

&lt;p&gt;To demonstrate the following regular expressions, I'm going to use the &lt;em&gt;match()&lt;/em&gt; method, which retrieves the result of the matching a string against a regular expression.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#-start-of-string-or-start-of-line-in-multiline-pattern"&gt;
  &lt;/a&gt;
  ^ Start of string, or start of line in multi-line pattern_
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^The/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion roared&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// [ 'The', index: 0, input: 'The lion roared', groups: undefined ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#a-start-of-string"&gt;
  &lt;/a&gt;
  \A Start of string
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This is not supported in Javascript!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#-end-of-string-or-end-of-line-in-multiline-pattern"&gt;
  &lt;/a&gt;
  $ End of string, or end of line in multi-line pattern
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/roared$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion roared&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// [ 'roared', index: 9, input: 'The lion roared', groups: undefined ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#z-start-of-string"&gt;
  &lt;/a&gt;
  \Z Start of string
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This is *also* not supported in Javascript&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#b-word-boundary"&gt;
  &lt;/a&gt;
  \b Word boundary
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\b&lt;/span&gt;&lt;span class="sr"&gt;lion&lt;/span&gt;&lt;span class="se"&gt;\b&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The lion roared&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// [ 'lion', index: 4, input: 'The lion roared', groups: undefined ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#b-not-word-boundary"&gt;
  &lt;/a&gt;
  \B &lt;em&gt;Not&lt;/em&gt; word boundary
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// I still have no idea what this means&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h5&gt;
  &lt;a href="#lt-start-of-word"&gt;
  &lt;/a&gt;
  &amp;lt; Start of word
&lt;/h5&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#gt-end-of-word"&gt;
  &lt;/a&gt;
  &amp;gt; End of word
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// I'm starting to think that neither of these are supported in Javascript either...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Okay, well, when I started this project I didn't realize that some of the expressions wouldn't be supported, and others would just totally baffle me. Consider this a work in progress as I gather more answers...&lt;/em&gt;😬&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Hosting a website / webserver on your PC / Laptop using Reverse SSH Tunnel on a custom domain name</title>
      <author>Karthik D</author>
      <pubDate>Tue, 20 Apr 2021 05:30:43 +0000</pubDate>
      <link>https://dev.to/kdnanmaga/hosting-a-website-webserver-on-your-pc-laptop-using-reverse-ssh-tunnel-on-a-custom-domain-name-11ma</link>
      <guid>https://dev.to/kdnanmaga/hosting-a-website-webserver-on-your-pc-laptop-using-reverse-ssh-tunnel-on-a-custom-domain-name-11ma</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Original article: &lt;a href="https://kdnanmaga.xyz/host-website-on-laptop/"&gt;https://kdnanmaga.xyz/host-website-on-laptop/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A cloud server with SSH access to be used as jump server (yes you still need one)&lt;/li&gt;
&lt;li&gt;Local PC or Laptop&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE:&lt;br&gt;
If you do not have a cloud server, you can use &lt;a href="https://localhost.run/"&gt;localhost.run&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Step 1: Make sure you are able to SSH into your server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh -i &amp;lt;private_key_file&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;your_domain_or_ip&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 2: Setup the tunnel&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh -i &amp;lt;private_key_file&amp;gt; -N -T -R &amp;lt;remote port&amp;gt;:localhost:&amp;lt;local port&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;your_domain_or_ip&amp;gt;
# e.g.:
ssh -i private.key -N -T -R 2523:localhost:8000 user@kdnanmaga.xyz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example will tunnel port number 8000 on my local machine to port number 2523 on the remote machine&lt;/p&gt;

&lt;p&gt;Step 3: Verify the tunnel is working&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# On local machine
$ python3 -m http.server 8000 # Or any other test server

# On cloud machine
$ curl http://localhost:2523
# You must be able to see the contents of your local folder printed here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 4: Setup a reverse proxy using NGINX on the cloud server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Install NGINX if not present
$ sudo apt install nginx

# Add server block as shown below
$ sudo nano /etc/nginx/sites-available/local

# Symlink and activate
$ sudo ln -s /etc/nginx/sites-available/local /etc/nginx/sites-enabled/
$ sudo systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# File contents for /etc/nginx/sites-available/local
server{
  server_name &amp;lt;your domain name&amp;gt;;
  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass http://localhost:2523/;
    proxy_redirect off;
    proxy_read_timeout 240s;
  }

  listen 80;
}    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 5: Make sure DNS for the domain name you used above has an A record poiting to your server IP&lt;/p&gt;

&lt;p&gt;Step 6: Install SSL certificate using Let's Encrypt so you can access via https://&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo add-apt-repository ppa:certbot/certbot
$ sudo apt install python-certbot-nginx
$ sudo certbot --nginx -d &amp;lt;your domain name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the commands in Step 2 and Step 3 still running, you should be able to access your local machine via the domain name now! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find me on twitter: @&lt;a href="https://twitter.com/kdnanmaga"&gt;kdnanmaga&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>Operating Systems in space!</title>
      <author>arindavis</author>
      <pubDate>Tue, 20 Apr 2021 04:05:57 +0000</pubDate>
      <link>https://dev.to/arindavis/operating-systems-in-space-bie</link>
      <guid>https://dev.to/arindavis/operating-systems-in-space-bie</guid>
      <description>&lt;p&gt;&lt;a href="https://www.nytimes.com/2021/04/19/science/nasa-mars-helicopter.html#:~:text=At%203%3A34%20a.m.,crater%2C%20into%20the%20Martian%20sky."&gt;NASA&lt;/a&gt; has just deployed &lt;em&gt;Ingenuity&lt;/em&gt;, a lightweight helicopter sent with the payload of the most recent Mars rover, &lt;em&gt;Perseverance&lt;/em&gt;.  At exactly 3:34 AM (ET) Ingenuity successfully executed the first powered flight on another planet. &lt;/p&gt;

&lt;p&gt;That wasn't the only first in space history today, though. As it turns out, it was also the first time a linux process has ever been executed on another planet. Which got me wondering, what other operating systems have we as a species hurled into the cosmic abyss? &lt;/p&gt;

&lt;p&gt;Let's get into it.&lt;/p&gt;

&lt;p&gt;In the early days of spaceflight, when programs like Russia's &lt;a href="https://en.wikipedia.org/wiki/Sputnik_1"&gt;Sputnik&lt;/a&gt; and the U.S's &lt;a href="https://en.wikipedia.org/wiki/Explorer_1"&gt;Explorer&lt;/a&gt; were being rolled out, each new craft came with its own custom built OS. These were often tailored to those craft's specific needs, and extremely basic by modern standards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8wklo_l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awkr6yronl1ypy6292zf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8wklo_l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awkr6yronl1ypy6292zf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter stage right: a man by the name of &lt;a href="https://en.wikipedia.org/wiki/J._Halcombe_Laning"&gt;J. Halcombe Laning&lt;/a&gt;. Laning was a pioneer of his time who worked with engineers at MIT to create the first ever real time computer in the early fifties, among many other notable accolades.  By the time the &lt;a href="https://www.nasa.gov/mission_pages/apollo/missions/index.html"&gt;Apollo missions&lt;/a&gt; were being conceived, NASA knew it would need a state of the art guidance system for it's new generation of space-craft, so they turned to Laning to help build out the software for it. Years later, the &lt;a href="https://en.wikipedia.org/wiki/Apollo_Guidance_Computer#cite_note-Hoag-17"&gt;Apollo Guidance Computer&lt;/a&gt; was launched with Apollo I, which included the same basic real time operating system designed by Laning that would dominate most of the rest of the Apollo Program. &lt;/p&gt;

&lt;p&gt;But, as with the early days, there was no real standardization during this period. That didn't come until 1987, when NASA adopted &lt;a href="https://www.windriver.com/products/vxworks"&gt;VXworks&lt;/a&gt; as it's primary OS of choice.&lt;/p&gt;

&lt;p&gt;Here's the crazy part: that standard hasn't changed in over thirty years, since it was originally adopted! Perseverance, the most recent rover that dropped off our little helicopter buddy from earlier, is running on the &lt;a href="https://blogs.windriver.com/wind_river_blog/2018/11/back-to-mars-with-vxworks/"&gt;same OS&lt;/a&gt; that crafts in the late 80's and early 90's were.  &lt;/p&gt;

&lt;p&gt;Which, to be fair, is a bit of an oversimplification. While they haven't changed from VXworks in the last three decades, NASA &lt;em&gt;has&lt;/em&gt; updated their proprietary version of it as time has gone on, so it's not like it is completely outdated. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJmPNbV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rleuxdn8x6o9cpn11k4y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJmPNbV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rleuxdn8x6o9cpn11k4y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VXworks itself was chosen because it was one of the leading OS's at the time, especially among government agencies and the military. According to &lt;a href=""&gt;wikipedia&lt;/a&gt;, VXworks is--- &lt;/p&gt;

&lt;p&gt;&lt;em&gt;"... designed for use in embedded systems requiring real-time, deterministic performance and, in many cases, safety and security certification, for industries, such as aerospace and defense, medical devices, industrial equipment, robotics, energy, transportation, network infrastructure, automotive, and consumer electronics."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Which makes the choice of OS for Ingenuity even more interesting. It's packing a &lt;a href="https://en.wikipedia.org/wiki/Qualcomm_Snapdragon"&gt;Qualcomm Snapdragon 801 Processor&lt;/a&gt;, which is a CPU you'd usually find in a run of the mill laptop. Running the CPU is a relatively standard linux environment that is utilizing an open source framework called &lt;a href="https://www.theverge.com/2021/2/19/22291324/linux-perseverance-mars-curiosity-ingenuity"&gt;"F Prime"&lt;/a&gt;, that was specifically designed for powered flight using Ingenuity. This means that if you wanted to, you could go to &lt;a href="https://trs.jpl.nasa.gov/handle/2014/48425"&gt;NASA's website&lt;/a&gt; and tinker with it yourself! How cool is that???&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wr96bDtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mbq2w8vbu323l0bw50m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wr96bDtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mbq2w8vbu323l0bw50m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, I understand no conversation about modern space-tech would be complete without a mention of &lt;a href="https://www.spacex.com/"&gt;Space-X&lt;/a&gt;, the renegade hot-shot of the international aerospace community. &lt;/p&gt;

&lt;p&gt;Unsurprisingly, their &lt;a href="https://thenewstack.io/the-hardware-and-software-used-in-space/#:~:text=But%20it's%20not%20necessarily%20a,its%20flightpath%2Ddirecting%20grid%20fins."&gt;engineers chose linux&lt;/a&gt; as their primary OS, which runs everything from their rockets to their onboard nav systems. Like the little mars helicopter who could, they are sporting modern x86 processors to run most of their processes. The interesting part to me, a web developer who is only just getting started in the field, is that they are using languages like Javascript, Python and C++ to execute the complex processes behind the scenes and tools like HTML and CSS to display information to their astronauts in the cockpit. Hell, they are using chromium and javascript for the touchscreen functionality on the main displays!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pNovv2X_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxuc20di1j31ea24xg5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pNovv2X_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxuc20di1j31ea24xg5g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which, in a weird way, makes me feel oddly closer to the cosmos at large. Like, one would assume that the kind of tech that helps put people into space is somewhat unknowable, left to only the smartest among us. But here we are, throwing CSS and HTML into the eternal nothing. &lt;/p&gt;

&lt;p&gt;Of course these are all incredibly complex systems built by literally the smartest people in the world, but when it's all laid out into one brief overview you can notice that it's just one generation iterating into another, and is really no more unknowable than the first time you sat down to code javascript. &lt;/p&gt;

&lt;p&gt;So raise a glass to the first linux process on the Red Planet. It will not be the last!&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
