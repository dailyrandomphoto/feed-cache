<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Working MongoDB with Golang</title>
      <author>bseyhan</author>
      <pubDate>Thu, 11 Nov 2021 14:23:47 +0000</pubDate>
      <link>https://dev.to/bseyhan/working-mongodb-with-golang-2g76</link>
      <guid>https://dev.to/bseyhan/working-mongodb-with-golang-2g76</guid>
      <description>&lt;p&gt;Every tutorial has a story. In that tutorial you'll find out different contents that is related to MongoDB, GoLang and working with mock data and deployment. Here is my content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project structure
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhyuJNG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si76vvkkrnej4p7fnrm7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhyuJNG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si76vvkkrnej4p7fnrm7.png" alt="Image description" width="614" height="996"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS: Here is the one different folder that name is dummy_api. That folder has own main file. What does it mean? When I run the main.go file before I'll add mock data. If you didn't catch up &lt;a href="https://dev.to/bseyhan/hey-marshal-1134"&gt;Working with the marshal and unmarshal&lt;/a&gt; tutorial you should read it. Another important topics is "context". &lt;a href="https://www.programming-books.io/essential/go/context.todo-vs.context.background-d5224e27ff724a33a79cb4e03a5eb333.html"&gt;Essential Go&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;context.TODO()&lt;br&gt;
&lt;strong&gt;TODO returns a non-nil, empty Context.&lt;/strong&gt; Code should use context.TODO when it’s unclear which Context to use or it is not yet available (because the surrounding function has not yet been extended to accept a Context parameter). TODO is recognized by static analysis tools that determine whether Contexts are propagated correctly in a program.&lt;/p&gt;

&lt;p&gt;context.Background()&lt;br&gt;
Background returns a non-nil, empty Context. &lt;strong&gt;It is never canceled&lt;/strong&gt;, has no values, and has no deadline. It is typically used by the main function, initialization, and tests, and as the top-level Context for incoming requests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QaCnooEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7vxyfskn1d4ubz6xvah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaCnooEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7vxyfskn1d4ubz6xvah.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ftyvk7KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rj2xahd9pmue1bw7hwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ftyvk7KD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rj2xahd9pmue1bw7hwa.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another different package is about MongoDb Client however I'll talk about below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "context"
    "encoding/json"
    "io/ioutil"
    "os"

    "github.com/bburaksseyhan/contact-api/src/pkg/client/mongodb"
    "github.com/bburaksseyhan/contact-api/src/pkg/model"
    "github.com/sirupsen/logrus"
)

func main() {

    contactsJson, err := os.Open("contacts.json")

    if err != nil {
        logrus.Error("contact.json an error occurred", err)
    }

    defer contactsJson.Close()

    var contacts []model.Contact

    byteValue, _ := ioutil.ReadAll(contactsJson)

    //unmarshall data
    if err := json.Unmarshal(byteValue, &amp;amp;contacts); err != nil {
        logrus.Error("unmarshall an error occurred", err)
    }

    logrus.Info("Data\n", len(contacts))

    //import mongo client
    client := mongodb.ConnectMongoDb("mongodb://localhost:27017")
    logrus.Info(client)

    defer client.Disconnect(context.TODO())

    collection := client.Database("ContactDb").Collection("contacts")

    logrus.Warn("Total data count:", &amp;amp;contacts)

    for _, item := range contacts {
        collection.InsertOne(context.TODO(), item)
    }

    logrus.Info("Data import finished...")
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Firstly let's open the terminal and goes to dummy_api directory. Another important thing, is database running? Let's have look. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker compose up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker container ls&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--07iHoXCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d16ayf3uyojwwayoijzd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--07iHoXCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d16ayf3uyojwwayoijzd.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-mock-data"&gt;
  &lt;/a&gt;
  Working with mock data
&lt;/h2&gt;

&lt;p&gt;I was creating mock data from &lt;a href="https://www.mockaroo.com/"&gt;Mockaroo&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-mongodb-queries"&gt;
  &lt;/a&gt;
  Working with MongoDB queries
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker exec -it ad2d44477f28 mongo //connect to mongodb cli

help

show dbs // return all database names

use ContactDb 

show collections // return collection name

db.contacts.find() //return all collections

db.contacts.find({}).count() // return row count

db.contacts.find({}).pretty({}) // return rows with a format

db.contacts.find({"email":""})
db.dropDatabase() // remove database
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DgtwxobG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy6w8lu2ongg1yklzhzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DgtwxobG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hy6w8lu2ongg1yklzhzo.png" alt="Image description" width="880" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NWRUkMAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymr8d14tf030y2nfgz7x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWRUkMAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymr8d14tf030y2nfgz7x.png" alt="Image description" width="880" height="290"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U9PUnRbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78uwjsnba5st7xk4bd9s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U9PUnRbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78uwjsnba5st7xk4bd9s.png" alt="Image description" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hTb70_YJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zm5rjo9g3puwdcszitjz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTb70_YJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zm5rjo9g3puwdcszitjz.png" alt="Image description" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-packages"&gt;
  &lt;/a&gt;
  Using packages
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;"go get -u go.mongodb.org/mongo-driver/bson"&lt;/li&gt;
&lt;li&gt;"go get -u go.mongodb.org/mongo-driver/mongo"&lt;/li&gt;
&lt;li&gt;"go get -u go.mongodb.org/mongo-driver/mongo/options"&lt;/li&gt;
&lt;li&gt;"go get -u github.com/gin-gonic/gin"&lt;/li&gt;
&lt;li&gt;"go get github.com/sirupsen/logrus"&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#maingo-file"&gt;
  &lt;/a&gt;
  main.go file
&lt;/h3&gt;

&lt;p&gt;That file read config.yml or .env file after that call the Init function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "os"

    "github.com/bburaksseyhan/contact-api/src/cmd/utils"
    "github.com/bburaksseyhan/contact-api/src/pkg/server"
    log "github.com/sirupsen/logrus"
    "github.com/spf13/viper"
)

func main() {

    config := read()
    log.Info("Config.yml", config.Database.Url)

    mongoUri := os.Getenv("MONGODB_URL")

    if mongoUri != "" {
        config.Database.Url = mongoUri
    }

    log.Info("MONGODB_URL", mongoUri)

    server.Init(config.Database.Url)
}

func read() utils.Configuration {
    //Set the file name of the configurations file
    viper.SetConfigName("config")

    // Set the path to look for the configurations file
    viper.AddConfigPath(".")

    // Enable VIPER to read Environment Variables
    viper.AutomaticEnv()

    viper.SetConfigType("yml")
    var config utils.Configuration

    if err := viper.ReadInConfig(); err != nil {
        log.Error("Error reading config file, %s", err)
    }

    err := viper.Unmarshal(&amp;amp;config)
    if err != nil {
        log.Error("Unable to decode into struct, %v", err)
    }

    return config
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ConnectMongoDb function takes the MongoDB URL parameter so this function opens the connection and check the status. &lt;a href="https://www.mongodb.com/blog/post/mongodb-go-driver-tutorial"&gt;Related Documentation&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package mongodb

import (
    "context"

    log "github.com/sirupsen/logrus"
    "go.mongodb.org/mongo-driver/mongo"
    "go.mongodb.org/mongo-driver/mongo/options"
)

func ConnectMongoDb(url string) *mongo.Client {

    clientOptions := options.Client().ApplyURI(url)

    // Connect to MongoDB
    client, err := mongo.Connect(context.TODO(), clientOptions)

    if err != nil {
        log.Fatal(err)
    }

    // Check the connection
    err = client.Ping(context.TODO(), nil)

    if err != nil {
        log.Fatal(err)
    }

    log.Info("MongoClient connected")

    return client
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;unfinished contact_handler.go file. HealthCheck function is not only health check. That function checks the MongoDb database status with a timeout. If any cancellation comes from the server, context will be triggered and response will be un-health. Let's think the opposite result will be pong.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package handler

import (
    "context"
    "net/http"
    "time"

    "github.com/gin-gonic/gin"
    "github.com/sirupsen/logrus"
    "go.mongodb.org/mongo-driver/mongo"
)

type ContactHandler interface {
    GetAllContacts(*gin.Context)
    GetContactByCity(*gin.Context)
    HealthCheck(*gin.Context)
}

type contactHandler struct {
    client *mongo.Client
}

func NewContactHandler(client *mongo.Client) ContactHandler {
    return &amp;amp;contactHandler{client: client}
}

func (ch *contactHandler) GetAllContacts(c *gin.Context) {
    _, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    //request on repository

    c.JSON(http.StatusOK, gin.H{"contacts": "pong"})
}

func (ch *contactHandler) GetContactByCity(c *gin.Context) {
    _, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    //request on repository

    c.JSON(http.StatusOK, gin.H{"contacts": "pong"})
}

func (ch *contactHandler) HealthCheck(c *gin.Context) {

    ctx, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    if ctxErr != nil {
        logrus.Error("somethig wrong!!!", ctxErr)
    }

    if err := ch.client.Ping(ctx, nil); err != nil {
        c.JSON(http.StatusOK, gin.H{"status": "unhealty"})
    }

    c.JSON(http.StatusOK, gin.H{"status": "pong"})
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YEYFG3km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhfryzgpyghgx4hiwng4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YEYFG3km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhfryzgpyghgx4hiwng4.png" alt="Image description" width="880" height="176"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ErvWZXDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqtsmwnvkyp53mjxs5cl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ErvWZXDj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqtsmwnvkyp53mjxs5cl.png" alt="Image description" width="880" height="520"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNQQhjDi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv7rdnfwtfqxrm0kg9kz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNQQhjDi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xv7rdnfwtfqxrm0kg9kz.png" alt="Image description" width="880" height="521"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFSKwnNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58j0jyc7dnz6bomhcblw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFSKwnNU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58j0jyc7dnz6bomhcblw.png" alt="Image description" width="880" height="521"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIsIINuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8w0jdfb2lnwpmins1kil.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIsIINuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8w0jdfb2lnwpmins1kil.png" alt="Image description" width="880" height="40"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#completed-codes"&gt;
  &lt;/a&gt;
  Completed codes
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#main"&gt;
  &lt;/a&gt;
  main
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "os"

    "github.com/bburaksseyhan/contact-api/src/cmd/utils"
    "github.com/bburaksseyhan/contact-api/src/pkg/server"
    log "github.com/sirupsen/logrus"
    "github.com/spf13/viper"
)

func main() {

    config := read()
    log.Info("Config.yml", config.Database.Url)

    mongoUri := os.Getenv("MONGODB_URL")
    serverPort := os.Getenv("SERVER_PORT")
    dbName := os.Getenv("DBNAME")
    collection := os.Getenv("COLLECTION")

    if mongoUri != "" {
        config.Database.Url = mongoUri
        config.Server.Port = serverPort
        config.Database.DbName = dbName
        config.Database.Collection = collection
    }

    log.Info("MONGODB_URL", mongoUri)

    server.Init(config)
}

func read() utils.Configuration {
    //Set the file name of the configurations file
    viper.SetConfigName("config")

    // Set the path to look for the configurations file
    viper.AddConfigPath(".")

    // Enable VIPER to read Environment Variables
    viper.AutomaticEnv()

    viper.SetConfigType("yml")
    var config utils.Configuration

    if err := viper.ReadInConfig(); err != nil {
        log.Error("Error reading config file, %s", err)
    }

    err := viper.Unmarshal(&amp;amp;config)
    if err != nil {
        log.Error("Unable to decode into struct, %v", err)
    }

    return config
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#config"&gt;
  &lt;/a&gt;
  config
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package utils

type Configuration struct {
    Database DatabaseSetting
    Server   ServerSettings
}

type DatabaseSetting struct {
    Url        string
    DbName     string
    Collection string
}

type ServerSettings struct {
    Port string
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#server"&gt;
  &lt;/a&gt;
  server
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package server

import (
    "github.com/bburaksseyhan/contact-api/src/cmd/utils"
    "github.com/bburaksseyhan/contact-api/src/pkg/client/mongodb"
    "github.com/bburaksseyhan/contact-api/src/pkg/handler"
    repository "github.com/bburaksseyhan/contact-api/src/pkg/repository/mongodb"

    "github.com/gin-gonic/gin"
    log "github.com/sirupsen/logrus"
)

func Init(config utils.Configuration) {

    // Creates a gin router with default middleware:
    // logger and recovery (crash-free) middleware
    router := gin.Default()

    client := mongodb.ConnectMongoDb(config.Database.Url)

    repo := repository.NewContactRepository(&amp;amp;config, client)
    handler := handler.NewContactHandler(client, repo)

    router.GET("/", handler.GetAllContacts)
    router.GET("/contacts/:email", handler.GetContactByEmail)
    router.POST("/contact/delete/:id", handler.DeleteContact)

    router.GET("/health", handler.HealthCheck)

    log.Info("port is :8080\n", config.Database.Url)

    // PORT environment variable was defined.
    router.Run(":" + config.Server.Port + "")
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#handler"&gt;
  &lt;/a&gt;
  handler
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package handler

import (
    "context"
    "net/http"
    "strconv"
    "time"

    "github.com/bburaksseyhan/contact-api/src/pkg/model"
    db "github.com/bburaksseyhan/contact-api/src/pkg/repository/mongodb"

    "github.com/gin-gonic/gin"
    "github.com/sirupsen/logrus"
    "go.mongodb.org/mongo-driver/mongo"
)

type ContactHandler interface {
    GetAllContacts(*gin.Context)
    GetContactByEmail(*gin.Context)
    DeleteContact(*gin.Context)

    HealthCheck(*gin.Context)
}

type contactHandler struct {
    client     *mongo.Client
    repository db.ContactRepository
}

func NewContactHandler(client *mongo.Client, repo db.ContactRepository) ContactHandler {
    return &amp;amp;contactHandler{client: client, repository: repo}
}

func (ch *contactHandler) GetAllContacts(c *gin.Context) {

    ctx, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    var contactList []*model.Contact

    //request on repository
    if result, err := ch.repository.Get(ctx); err != nil {
        logrus.Error(err)
    } else {
        contactList = result
    }

    c.JSON(http.StatusOK, gin.H{"contacts": &amp;amp;contactList})
}

func (ch *contactHandler) GetContactByEmail(c *gin.Context) {

    ctx, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    var contactList *model.Contact

    //get parameter
    email := c.Param("email")

    //request on repository
    if result, err := ch.repository.GetContactByEmail(email, ctx); err != nil {
        logrus.Error(err)
    } else {
        contactList = result
    }

    c.JSON(http.StatusOK, gin.H{"contacts": contactList})
}

func (ch *contactHandler) HealthCheck(c *gin.Context) {

    ctx, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    if ctxErr != nil {
        logrus.Error("somethig wrong!!!", ctxErr)
    }

    if err := ch.client.Ping(ctx, nil); err != nil {
        c.JSON(http.StatusOK, gin.H{"status": "unhealty"})
    }

    c.JSON(http.StatusOK, gin.H{"status": "pong"})
}

func (ch *contactHandler) DeleteContact(c *gin.Context) {

    ctx, ctxErr := context.WithTimeout(c.Request.Context(), 30*time.Second)
    defer ctxErr()

    //get parameter
    id, err := strconv.Atoi(c.Param("id"))
    if err != nil {
        logrus.Error("Can not convert to id", err)
    }

    //request on repository
    result, err := ch.repository.Delete(id, ctx)
    if err != nil {
        logrus.Error(err)
    }

    c.JSON(http.StatusOK, gin.H{"deleteResult.DeletedCount": result})
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#repository"&gt;
  &lt;/a&gt;
  repository
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package repository

import (
    "context"

    "github.com/bburaksseyhan/contact-api/src/cmd/utils"
    "github.com/bburaksseyhan/contact-api/src/pkg/model"
    "github.com/sirupsen/logrus"
    log "github.com/sirupsen/logrus"
    "go.mongodb.org/mongo-driver/bson"
    "go.mongodb.org/mongo-driver/bson/primitive"
    "go.mongodb.org/mongo-driver/mongo"
    "go.mongodb.org/mongo-driver/mongo/options"
)

type ContactRepository interface {
    Get(ctx context.Context) ([]*model.Contact, error)
    GetContactByEmail(email string, ctx context.Context) (*model.Contact, error)
    Delete(id int, ctx context.Context) (int64, error)
}

type contactRepository struct {
    client *mongo.Client
    config *utils.Configuration
}

func NewContactRepository(config *utils.Configuration, client *mongo.Client) ContactRepository {
    return &amp;amp;contactRepository{config: config, client: client}
}

func (c *contactRepository) Get(ctx context.Context) ([]*model.Contact, error) {

    findOptions := options.Find()
    findOptions.SetLimit(100)

    var contacts []*model.Contact

    collection := c.client.Database(c.config.Database.DbName).Collection(c.config.Database.Collection)

    // Passing bson.D{{}} as the filter matches all documents in the collection
    cur, err := collection.Find(ctx, bson.D{{}}, findOptions)
    if err != nil {
        log.Fatal(err)
        return nil, err
    }

    // Finding multiple documents returns a cursor
    // Iterating through the cursor allows us to decode documents one at a time
    for cur.Next(context.TODO()) {
        // create a value into which the single document can be decoded
        var elem model.Contact
        if err := cur.Decode(&amp;amp;elem); err != nil {
            log.Fatal(err)
            return nil, err
        }

        contacts = append(contacts, &amp;amp;elem)
    }

    cur.Close(ctx)

    return contacts, nil
}

func (c *contactRepository) GetContactByEmail(email string, ctx context.Context) (*model.Contact, error) {

    findOptions := options.Find()
    findOptions.SetLimit(100)

    var contacts *model.Contact

    collection := c.client.Database(c.config.Database.DbName).Collection(c.config.Database.Collection)

    filter := bson.D{primitive.E{Key: "email", Value: email}}

    logrus.Info("Filter", filter)

    collection.FindOne(ctx, filter).Decode(&amp;amp;contacts)

    return contacts, nil
}

func (c *contactRepository) Delete(id int, ctx context.Context) (int64, error) {

    collection := c.client.Database(c.config.Database.DbName).Collection(c.config.Database.Collection)

    filter := bson.D{primitive.E{Key: "id", Value: id}}

    deleteResult, err := collection.DeleteOne(ctx, filter)
    if err != nil {
        log.Fatal(err)

        return 0, err
    }

    return deleteResult.DeletedCount, nil
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;docker compose up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nC1oEBhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vhludq029z827nlr1z6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nC1oEBhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vhludq029z827nlr1z6f.png" alt="Image description" width="880" height="481"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bburaksseyhan/contact-api.git"&gt;Repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you,&lt;/p&gt;

</description>
      <category>go</category>
      <category>mongodb</category>
      <category>programming</category>
      <category>database</category>
    </item>
    <item>
      <title>Build 7 Pages Complete Responsive Educational Website Using HTML CSS &amp; JavaScript</title>
      <author>fahim kabir</author>
      <pubDate>Thu, 11 Nov 2021 14:14:51 +0000</pubDate>
      <link>https://dev.to/fahimkabir/build-7-pages-complete-responsive-educational-website-using-html-css-javascript-353o</link>
      <guid>https://dev.to/fahimkabir/build-7-pages-complete-responsive-educational-website-using-html-css-javascript-353o</guid>
      <description>&lt;p&gt;&lt;strong&gt;Full responsive multipage educational website LMS website with HTML CSS &amp;amp; JavaScript.&lt;/strong&gt;&lt;br&gt;
This website will have 7 different pages. Like, Home page, About page, Blog page, Post Page, Course Page, Course Details Page, Contact Page, etc. We will be creating a &lt;strong&gt;completely responsive website design for online course website/LMS website&lt;/strong&gt;. Full &lt;strong&gt;Professional looking and creative design website tutorial for beginners&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will be creating this website part by part. It will be easier for you to get all the details I'm going to add to this website. Excited?? Meh too.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#part-1-create-home-page-using-htm-css-amp-javascript-including-5-different-sections-after-creating-the-home-page-we-will-make-this-page-responsive-for-mobile-devices-too"&gt;
  &lt;/a&gt;
  Part 1: Create Home Page Using HTM CSS &amp;amp; JavaScript. Including 5+ different sections. After creating the home page, we will make this page responsive for mobile devices too.
&lt;/h3&gt;

&lt;p&gt;Build Responsive Online Course Websites With HTML CSS JavaScript&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RamIl-pjGE4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-2-lets-create-the-about-us-page-too-we-will-add-some-descriptions-about-our-website-or-institution-then-we-will-make-this-page-responsive-also"&gt;
  &lt;/a&gt;
  Part 2: Let's create the About us page too. We will add some descriptions about our website or institution. Then we will make this page responsive also.
&lt;/h3&gt;

&lt;p&gt;Responsive Website Design Using HTML CSS &amp;amp; JavaScript | Educational Website | Part2&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QwrCPOO4LDc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-3-after-creating-the-about-us-page-we-will-create-a-blog-page-on-this-page-we-will-add-a-few-blog-posts-only-the-blog-images-heading-some-details-and-a-read-more-button-then-we-will-add-a-categories-section-too-so-that-user-can-navigate-through-them"&gt;
  &lt;/a&gt;
  Part 3: After creating the about us page. We will create a Blog page. On this page, we will add a few blog posts. Only the blog images, heading, some details, and a read more button. Then we will add a categories section too. So that, user can navigate through them.
&lt;/h3&gt;

&lt;p&gt;After creating the blog page we will create the posting page also. Remember we added a read more button on the blog page? Now we will use that button so that the user can click and view/read the full post. No, I'm not forgetting to make those pages responsive too.&lt;/p&gt;

&lt;p&gt;Responsive Blog Portal Website Design With HTML CSS 📚&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/eJcOHPkPiZg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-4-in-this-part-we-will-create-our-course-page-on-this-page-we-will-add-1012-courses-including-course-thumbnail-the-course-title-reviews-and-pricing-then-what-after-creating-the-courses-page-now-we-have-to-make-a-page-for-complete-course-details-and-of-course-we-will-make-these-pages-fully-responsive"&gt;
  &lt;/a&gt;
  Part 4: In this part, we will create our course page. On this page, we will add 10-12 courses, including course thumbnail, the course title, reviews, and pricing. Then what? After creating the courses page, now we have to make a page for complete course details. And of course, we will make these pages fully responsive.
&lt;/h3&gt;

&lt;p&gt;How To Make Responsive Educational Website Design Using HTML And CSS Step By Step | Part 4&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UjpmZliVOcs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-5-after-creating-all-the-web-pages-using-html-css-and-js-its-mandatory-to-create-a-contact-page-so-that-anyone-can-contact-with-you-on-our-contact-page-we-will-add-a-form-including-a-name-field-email-field-etc-then-we-will-learn-how-to-embed-a-live-google-map-in-your-html-website"&gt;
  &lt;/a&gt;
  Part 5: After creating all the web pages using HTML CSS and JS. It's mandatory to create a contact page. So that, anyone can contact with you. On our contact page, we will add a form including a name field, email field, etc. Then we will learn how to embed a live google map in your HTML website.
&lt;/h3&gt;

&lt;p&gt;How To Make Responsive Education Website Using HTML CSS &amp;amp; JavaScript 🏫| Harvard University&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RvAPsXLRvTc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Enjoyed this post? What Should I Bring Next? Please Let Me Know In The Comment.&lt;/p&gt;

&lt;p&gt;You can always use this project to learn and improve your skills or for your portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous Posts:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/9-responsive-website-tutorials-with-html-css-javascript-bootstrap-step-by-step-56ng" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;9 Html CSS JavaScript Bootstrap Website Tutorial Step By Step&lt;/h2&gt;
      &lt;h3&gt;fahim kabir ・ Jun 15 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/7-javascript-projects-for-beginners-d3m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 JavaScript Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir ・ Jun 11 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/15-python-projects-for-beginners-4j4f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15 Python Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir ・ Jun 12 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#graphql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#resume&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Feel free to visit my YouTube channel:&lt;br&gt;
&lt;a href="//www.youtube.com/tech2etc"&gt;@Tech2etc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on Instagram where I'm sharing lots of useful resources!&lt;br&gt;
&lt;a href="https://www.instagram.com/fahimkabir.hamim"&gt;@fahimkabir.hamim&lt;/a&gt; 😉&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>The EyeDropper API: Pick colors from anywhere on your screen</title>
      <author>Kilian Valkhof</author>
      <pubDate>Thu, 11 Nov 2021 13:52:32 +0000</pubDate>
      <link>https://dev.to/polypane/the-eyedropper-api-pick-colors-from-anywhere-on-your-screen-21o2</link>
      <guid>https://dev.to/polypane/the-eyedropper-api-pick-colors-from-anywhere-on-your-screen-21o2</guid>
      <description>&lt;p&gt;With the new EyeDropper API in Chromium, websites can let visitors pick colors from anywhere on their screen, adding another&lt;br&gt;
feature to the web that used to require hacky solutions and is now just a few lines of code.  The API is&lt;br&gt;
clean and modern and easy to use. In this article we'll discuss how to set it up, handle edge cases and additional features&lt;br&gt;
we hope will land in future updates.&lt;/p&gt;

&lt;p&gt;We've been following the EyeDropper API since it was first proposed and have been experimenting with it as different&lt;br&gt;
parts became available as well as providing input while the feature was being developed. In &lt;a href="https://dev.to/blog/polypane-7"&gt;Polypane 7&lt;/a&gt;&lt;br&gt;
we started using it extensively for the new color picker and new palettes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use-the-eyedropper-api"&gt;
  &lt;/a&gt;
  How to use the EyeDropper API
&lt;/h2&gt;

&lt;p&gt;The API adds a new global, &lt;code&gt;EyeDropper&lt;/code&gt; (or &lt;code&gt;window.EyeDropper&lt;/code&gt;) that you can use to set up a new eyedropper object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EyeDropper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This eyeDropper object has one function, &lt;code&gt;eyeDropper.open()&lt;/code&gt;. This starts the color picker and changes the users cursor&lt;br&gt;
into a color picker, complete with magnified area and a highlighted pixel. This function returns a promise, so you can&lt;br&gt;
use it either with &lt;code&gt;await&lt;/code&gt; or as a promise.&lt;/p&gt;

&lt;p&gt;One gotcha is that it only works when called from &lt;strong&gt;a user-initiated event&lt;/strong&gt;. This is part of the security model, to&lt;br&gt;
prevent websites from potentially scraping pixels without the user knowing.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#detecting-support-for-the-eyedropper-api"&gt;
  &lt;/a&gt;
  Detecting support for the EyeDropper API
&lt;/h3&gt;

&lt;p&gt;Because the API is only available in Chromium you will need to check for support before using it. The most straightforward&lt;br&gt;
way to do that is to only offer your color picking UI when &lt;code&gt;window.EyeDropper&lt;/code&gt; is not undefined:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EyeDropper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Okay to use EyeDropper&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Hide the UI&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-await-endraw-based-version"&gt;
  &lt;/a&gt;
  &lt;code&gt;await&lt;/code&gt; based version
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// won't work&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// works&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryselector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.colorbutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;eyeDropper.open()&lt;/code&gt; call will resolve in two situations:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The user clicks anywhere on the screen.&lt;/li&gt;
&lt;li&gt;The user pressed the Esc key.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the last situation the eyeDropper will throw an exception, but in the first situation you will get a &lt;code&gt;ColorSelectionResult&lt;/code&gt;&lt;br&gt;
object, which has an &lt;code&gt;sRGBHex&lt;/code&gt; property containing the picked color in hexadecimal format. In your code you can check if&lt;br&gt;
&lt;code&gt;result.sRGBHex&lt;/code&gt; is defined and then do with it what you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryselector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.colorbutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You don't &lt;em&gt;have&lt;/em&gt; to handle the exception but if you wanted to provide the user feedback that they cancelled the eyedropper,&lt;br&gt;
you need to add a &lt;code&gt;try .. catch&lt;/code&gt; to the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryselector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.colorbutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="c1"&gt;// "DOMException: The user canceled the selection."&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#promise-based-version"&gt;
  &lt;/a&gt;
  Promise based version
&lt;/h3&gt;

&lt;p&gt;You don't have to use the &lt;code&gt;await&lt;/code&gt; version. &lt;code&gt;eyeDropper.open()&lt;/code&gt; returns a promise, so adding a &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.catch()&lt;/code&gt; also works:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryselector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.colorbutton&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// "DOMException: The user canceled the selection."&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#things-to-keep-in-mind-when-using-the-eyedropper-api"&gt;
  &lt;/a&gt;
  Things to keep in mind when using the EyeDropper API
&lt;/h2&gt;

&lt;p&gt;There are two gotchas with the API, at least as it's currently implemented in Chromium that we've found that you should&lt;br&gt;
be aware of.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-picking-does-not-use-the-live-screen"&gt;
  &lt;/a&gt;
  Color picking does not use the live screen
&lt;/h3&gt;

&lt;p&gt;At least in the current implementation, the color picker get the pixels as shown on the screen when you call &lt;code&gt;.open()&lt;/code&gt;.&lt;br&gt;
This means that if you're playing video the color picker will show the pixels of the frame that was visible then, not the&lt;br&gt;
live video.&lt;/p&gt;

&lt;p&gt;This is dependent on the implementation and we hope a future update of Chromium will allow for live data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-picking-only-works-as-the-result-of-a-user-action"&gt;
  &lt;/a&gt;
  Color picking only works as the result of a user action
&lt;/h3&gt;

&lt;p&gt;As mentioned earlier you need a user initiated event to open the eye dropper. This is to prevent sites from opening the&lt;br&gt;
eyedropper UI to start scraping your screen right on load. Instead the user needs to perform an action for the API to work,&lt;br&gt;
like a click or keypress.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-we-want-to-see-added"&gt;
  &lt;/a&gt;
  Features we want to see added
&lt;/h2&gt;

&lt;p&gt;The EyeDropper API is still very young and minimal. During our implementation we encountered a number of features that we&lt;br&gt;
would like to see added to the API in future updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-preview-of-the-hovered-color"&gt;
  &lt;/a&gt;
  Live preview of the hovered color
&lt;/h3&gt;

&lt;p&gt;A major component of many eye droppers, like those in design tools, is that they also show a preview swatch of the&lt;br&gt;
hovered color. You can use this to compare it to another swatch or quickly check a HEX code. The current API does not&lt;br&gt;
offer this over security concerns. We have filed an issue against the EyeDropper API on GitHub for this: &lt;a href="https://github.com/WICG/eyedropper-api/issues/6"&gt;#6 Live feedback is needed&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-more-extensive-color-model"&gt;
  &lt;/a&gt;
  A more extensive color model
&lt;/h3&gt;

&lt;p&gt;Currently, all colors are returned in the sRGB color model. This means the API won't accurately return colors outside&lt;br&gt;
the sRGB spectrum, for example those on Apple's P3 screens. How to deal with this is &lt;a href="https://github.com/WICG/eyedropper-api/issues/3"&gt;an open issue&lt;/a&gt;.&lt;br&gt;
Work is also happening on a &lt;a href="https://github.com/WICG/color-api"&gt;new Color API for the web&lt;/a&gt;. The EyeDropper API could use&lt;br&gt;
this Color API when it lands in future versions of browsers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-more-natural-way-to-select-multiple-colors"&gt;
  &lt;/a&gt;
  A more natural way to select multiple colors
&lt;/h3&gt;

&lt;p&gt;Because of the current security model, each time a user picks a color they need to re-initiate a user action which can be tedious.&lt;br&gt;
For example if you want to create a palette of colors in one go, you want to start picking colors, click on all the colors you&lt;br&gt;
want to add and then close out of the eye dropper. We similarly filed an issue for this on Github: &lt;a href="https://github.com/WICG/eyedropper-api/issues/9"&gt;#9 Do we expect multiselect to work?&lt;/a&gt; and this feature is currently being considered.&lt;/p&gt;

&lt;p&gt;For this it would be nice if we could designate a part of the page (like a button) as an area where the EyeDropper&lt;br&gt;
doesn't work, that instead functions as a "done" button. This way users can select multiple colors and then click that&lt;br&gt;
button when they're done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-browsers"&gt;
  &lt;/a&gt;
  Other browsers
&lt;/h2&gt;

&lt;p&gt;For now, the API is only available in Chromium based browsers from version 95 on and there has not been a signal from&lt;br&gt;
Safari and Firefox yet. If you want those browsers to support the EyeDropper API as well, add your support to the open issues:&lt;br&gt;
&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1728527"&gt;Issue #1728527 for Firefox&lt;/a&gt; and &lt;a href="https://bugs.webkit.org/show_bug.cgi?id=229755"&gt;Issue #229755 for Safari&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The EyeDropper API is a nice addition to the browser that we hope to see land in more browsers. We make good use of it&lt;br&gt;
in Polypane and would like to see it be developed further.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>ux</category>
    </item>
    <item>
      <title>How to start as an Open Source Developer (Beginner level)</title>
      <author>maen</author>
      <pubDate>Thu, 11 Nov 2021 13:41:45 +0000</pubDate>
      <link>https://dev.to/maen/how-to-start-as-an-open-source-developer-beginner-level-pmh</link>
      <guid>https://dev.to/maen/how-to-start-as-an-open-source-developer-beginner-level-pmh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-an-open-source-project-"&gt;
  &lt;/a&gt;
  What's an open source project ?
&lt;/h2&gt;

&lt;p&gt;The tech world is moving according to the economic shift. There’s no company or startup which is ready to risk a lot of funds for the software project while there’s an alternative for that. What a company needs is to get a service up and running regardless if the software was built from scratch or as an open source project.&lt;/p&gt;

&lt;p&gt;At an individual level, open source saves time and money too. By the way, what reward do you get after building your project from scratch ? Why build something which already exists and you can get it for free ? Would love to hear your thoughts :)&lt;/p&gt;

&lt;p&gt;But what is an open source project ? It is a software project which is publicly free for anyone. That is, you can edit the source codes, change it to how you want. You can build your “big idea project” just on top of open source software. You can also release your sweet project to the community as an open source by allowing other developers to manipulate your codes. Sounds caring, right ?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jump-into-open-source-project-as-a-beginner"&gt;
  &lt;/a&gt;
  Jump into open source project as a beginner
&lt;/h2&gt;

&lt;p&gt;Step into open source projects as a newbie might be a challenge at first, however getting the right foot to start with can solve overheads. There are things you should know before starting contributing or building your application on top of an open source project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#heres-the-list-of-things-you-should-consider-first"&gt;
  &lt;/a&gt;
  Here’s the list of things you should consider first:
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#able-to-use-git-and-github-comfortably"&gt;
  &lt;/a&gt;
  Able to use Git and Github comfortably.
&lt;/h5&gt;

&lt;p&gt;You’ll always find these projects in version control (VC) like Github. To access them and alter the change, all need a knowledge of the git. You need to know how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clone a project from Github (or any other VC)&lt;/li&gt;
&lt;li&gt;Branching models (master, develop, feature)&lt;/li&gt;
&lt;li&gt;Push the project&lt;/li&gt;
&lt;li&gt;Raise and resolve issue&lt;/li&gt;
&lt;li&gt;Write good commit&lt;/li&gt;
&lt;li&gt;Tag and versioning the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can learn the basics from Github documentation but I also wrote deeply about Git and branching models in my article titled “Contribute as a pro”.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#learn-how-to-write-a-good-readme"&gt;
  &lt;/a&gt;
  Learn how to write a good “README”.
&lt;/h5&gt;

&lt;p&gt;A README in a Github serves as a brief documentation of a particular project. Writing a precise document about the project helps another developer to jump straight into the project and manipulate on whatever he wishes.&lt;/p&gt;

&lt;p&gt;On another hand, learning how to document your own project will help you to easily read and follow along with the docs. of other projects. While writing, there are a number of online tools to heavy-lift the job. I normally use dillinger to write the README before shipping it into Github. It has some placeholders which you can just change to fit your headings and contents. It supports markdown language as that used in Github.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#learn-how-to-write-clean-codes"&gt;
  &lt;/a&gt;
  Learn how to write clean codes.
&lt;/h5&gt;

&lt;p&gt;By "clean codes" I mean the codes which are precise and easy to read. Don't just focus on the working codes, but the codes that another developer can read them and scale the project. Write the code while thinking about another person who'll come to read them. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-are-the-tips-for-writing-clean-codes"&gt;
  &lt;/a&gt;
  Here are the tips for writing clean codes:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Master the domain language of a given project. That is, if the software is about Health, then the naming convention and your variables will all align to the health context.&lt;/li&gt;
&lt;li&gt;Clear naming convention. Be very clean in naming the variables, methods and classes. Don't let your code become unequivocal just for laziness reasons.&lt;/li&gt;
&lt;li&gt;Use comments only where required.&lt;/li&gt;
&lt;li&gt;Obey DRY principle. Only define once and just reuse it where needed. Don't Repeat Yourself !&lt;/li&gt;
&lt;li&gt;Well structured file tree. Your files should be in an organized manner. Don't just write the codes anywhere! Also, specify your main file (entry-point file). This will help another contributor to easily know where your software starts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#whats-next-"&gt;
  &lt;/a&gt;
  What's next ?
&lt;/h4&gt;

&lt;p&gt;If you're comfortable with the tips above then it's a right time for you to try out doing something handy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pick one open source project of your choice. I'll write on sample open source projects for beginner.&lt;/li&gt;
&lt;li&gt;Read the project codes and documentation&lt;/li&gt;
&lt;li&gt;Contribute. I will upload soon the article on how to contribute as a pro.&lt;/li&gt;
&lt;li&gt;Or build your software on top of it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this!&lt;/p&gt;

&lt;p&gt;(It's my first article) &lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to concatenate lists in Python?</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 11 Nov 2021 13:36:30 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-concatenate-lists-in-python-30j5</link>
      <guid>https://dev.to/hrishikesh1990/how-to-concatenate-lists-in-python-30j5</guid>
      <description>&lt;p&gt;In this tutorial, we learn how to use Python to concatenate lists. This can be achieved through multiple ways using operators, functions and other methods.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-concatenation-of-lists"&gt;What is Concatenation of Lists?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concatenation-of-lists-using-the-operator-in-python"&gt;Using the ‘*’ operator in Python to concatenate lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concatenation-of-lists-using-the-operator"&gt;Using the ‘+’ operator in Python to concatenate lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concatenation-of-lists-using-append-function"&gt;Concatenation of lists using the append() method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concatenation-of-lists-using-the-extend-function"&gt;Concatenation of lists using the extend() method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-concatenation-of-lists"&gt;
  &lt;/a&gt;
  What is Concatenation of Lists?
&lt;/h2&gt;

&lt;p&gt;Before we look into what concatenation of lists is, let’s first look at what a list is in Python.&lt;/p&gt;

&lt;p&gt;A list is one of the most common data structures used, not just in Python but in programming in general. It is an ordered and mutable Python container. To create a list, the elements are placed inside square brackets ([]) and each element is separated by a comma.&lt;/p&gt;

&lt;p&gt;With that out of the way, let us look at the various methods that can be used to check if a list is empty in Python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# list of integers 
&lt;/span&gt;&lt;span class="n"&gt;number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# example of a list containing different data types
&lt;/span&gt;&lt;span class="n"&gt;random_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;apple&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ball&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Joining two or more lists together in Python is called Concatenation.&lt;br&gt;
Now let us look at a few methods of concatenating lists in Python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concatenation-of-lists-using-the-operator-in-python"&gt;
  &lt;/a&gt;
  Concatenation of lists using the ‘*’ operator in Python
&lt;/h2&gt;

&lt;p&gt;The asterisk ‘*’ operator is useful for many purposes in programming. But one good use for it is using it as an unpacking operator. When used as an unpacking operator, it “unpacks” the contents of a container data structure - such as a list, into another.&lt;/p&gt;

&lt;p&gt;As one can see in the code below, using the asterisk operator makes the code short, concise and readable.&lt;/p&gt;

&lt;p&gt;Here is an example of how one can use the ‘*’ operator to concatenate two lists, list_one and list_two&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# How to concatenate lists using the ‘*’ operator in Python
&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_three&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;list_two&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_three&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One can also concatenate more than two lists easily (example: list4 = [*list_one, *list_two, *list_three])&lt;/p&gt;

&lt;p&gt;In terms of performance, the extend() method is several times faster than the asterisk operator. So the concatenation using the asterisk ‘*’ operator may not be the most efficient method when concatenating large lists.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concatenation-of-lists-using-the-operator"&gt;
  &lt;/a&gt;
  Concatenation of lists using the ‘+’ operator
&lt;/h2&gt;

&lt;p&gt;Another easy way to join lists in Python is to use the ‘+’ operator. The ‘+’ operator is an easy to use method of joining two or more lists together in Python. Its logic and application is simple and easy to understand&lt;/p&gt;

&lt;p&gt;When we use the ‘+’ operator on two integers, we’ll get the sum of those integers. But when used on lists, we get a new list which is the concatenation of those lists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Python concatenate lists using the ‘+’ operator in Python
&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;answer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;list_two&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;concatenated&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;        
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example above, by using the ‘+’ operator, Python has appended list_two at the end of list_one and that has resulted in a new list as output.&lt;/p&gt;

&lt;p&gt;The ‘+’ operator, however, creates a new list for each list concatenation operation. This can be a very inefficient manner of using the ‘+’ operator multiple times in a loop.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concatenation-of-lists-using-append-function"&gt;
  &lt;/a&gt;
  Concatenation of lists using append() function
&lt;/h2&gt;

&lt;p&gt;As the name suggests, the list_zero.append(x) method appends element x to the end of the list_zero. The append() function method is several times quicker in operation compared to the ‘+’ operator. It is also readable and easy to use.&lt;/p&gt;

&lt;p&gt;Here is an example of how we can use the append() method to concatenate two lists, list_one and list_two and store the result in list_one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# How to concatenate lists using the append() function in Python
&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list_two&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;list_one&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A major problem with the append() method is that if we want to concatenate two lists we have to iterate over all the elements of the lists and append them one by one. This can translate into an extensive process depending on the size of the lists you are dealing with.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concatenation-of-lists-using-the-extend-function"&gt;
  &lt;/a&gt;
  Concatenation of lists using the extend() function
&lt;/h2&gt;

&lt;p&gt;Here is yet another function one can use to join lists together. The difference between the function append() and extend() is that the former adds only one element at a time and the latter adds a collection of elements to the list.&lt;/p&gt;

&lt;p&gt;The extend() method is also the most concise and fastest way to concatenate lists compared to all other methods.&lt;/p&gt;

&lt;p&gt;Here is an example of how we can use the extend() method to join two lists, list_one and list_two together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# How to concatenate lists using the extend() function in Python
&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_two&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;list_one&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_two&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_one&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The method list.extend(iterable) adds all the elements in the iterable to the end of the list.&lt;/p&gt;

&lt;p&gt;The extend() method which adds all the elements in the iterable to the end of the list is significantly less complicated compared to the append() method that iterates through each element and appends them one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;Apart from the methods seen in this tutorial, there are many other ways to concatenate lists in Python. Some examples are the concatenation of lists using the List comprehension method and the Concatenation of lists using the itertools.chain() function. However, the extend() method is said to be the most efficient in terms of performance compared to them all.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 5 Frameworks For Android Application Development</title>
      <author>aamirakhter</author>
      <pubDate>Thu, 11 Nov 2021 13:35:25 +0000</pubDate>
      <link>https://dev.to/aamirakhter/top-5-frameworks-for-android-application-development-5d5d</link>
      <guid>https://dev.to/aamirakhter/top-5-frameworks-for-android-application-development-5d5d</guid>
      <description>&lt;p&gt;In recent years, mobile apps development has seen a massive surge. Hundreds of thousands of businesses around the world have realized the significance of having a mobile application for their brand, or at least, having a digital footprint.&lt;/p&gt;

&lt;p&gt;Enterprise owners and entrepreneurs who were running their business flow in traditional ways have grasped the must-needed step for taking a digital leap to better establish rock-solid connections with their customers, enhance their brand's positioning, increase sales, generate more leads, and substantialize their revenues. &lt;/p&gt;

&lt;p&gt;According to research, for both iPhone App Store and Google Play Store, 2021 is a game-changing year because both application-based online stores will reach a whopping 258 billion download benchmark. &lt;/p&gt;

&lt;p&gt;Moreover, speaking of Android app development with billions of downloads in total, the development teams and people involved in the process are constantly inquiring about the top-notch frameworks that offer seamless development, integrated solutions, captivating user interface, and rich features to provide their clients a platform that helps them grow stupendously. &lt;/p&gt;

&lt;p&gt;With this being said, here are the top 5 frameworks for Android app development that give incredible solutions to the development teams as well as to the business owners. &lt;/p&gt;

&lt;h2&gt;React Native&lt;/h2&gt;

&lt;p&gt;Talking of one of the powerful Android app development frameworks, no other can be as powerful as React Native. It is the most powerful open-source framework for native Android development. The reason for it to be most in-demand is because of its incredible development tools and incredible IDEs. &lt;/p&gt;

&lt;p&gt;React Native has a JS library for robust web solutions in our today’s contemporary world. Several digitally-enabled mastodons today have leveraged the prowess of React Native for their native app development solutions. For example, Airbnb, Tesla, Walmart, Instagram, and many other Fortune 500 companies have used React Native framework for developing their Android applications. &lt;/p&gt;

&lt;p&gt;The benefit of picking React Native is because of its ability for developers to write code for once and run it anywhere in the ecosystem. Because of this, the development teams help the faster speed, and it also reduces costs at the same time. &lt;/p&gt;

&lt;h2&gt;Flutter &lt;/h2&gt;

&lt;p&gt;Flutter is said to be the most powerful framework for Android app development. Google launched it to give cross-integration development for multiple platforms. The extensive features that Flutter possess are simply amazing, and it gives a development toolbox that contains APIs, CLI tools, and prebuilt widgets for an excellent app development process. &lt;/p&gt;

&lt;p&gt;Moreover, Flutter allows the &lt;a href="http://sixlogsmobile.ae"&gt;best mobile app development company Dubai&lt;/a&gt; to create and add new widgets or customize existing ones for excellent deliveries to their clients. &lt;/p&gt;

&lt;p&gt;And when talking of more enhanced features of Flutter, it also gives seamless accessibility on cross-platform app development. It is written in the Dart Language, and the selection of framework gives perfect integration for quality results. &lt;/p&gt;

&lt;p&gt;The hot reload, native transition, captivating themes, open-source and free-to-use, quick rendering, screen reader, and faster development are some of the best-told benefits that development teams like the most. &lt;/p&gt;

&lt;h2&gt;Xamarin &lt;/h2&gt;

&lt;p&gt;Another one of the most sought-after frameworks for Android app development is Xamarin. It is a Microsoft product that contains the most advanced toolset for the developer community to build robust and high-performing native Android apps for multiple platforms using a shared C# codebase. &lt;/p&gt;

&lt;p&gt;Apps developed using Xamarin can be tested on several devices with Microsoft's incredible cloud testing service. For app development teams around the world, having a code-sharing feature that reduces time is the best process for the app development process. &lt;/p&gt;

&lt;p&gt;Moreover, the Xamarin framework also has the distinction of being the oldest framework that works incredibly faster for cross-platform application development. And thus with being the most popular, it has been used by around 1.4 million developers across more than 100 nations. &lt;/p&gt;

&lt;h2&gt;Cordova &lt;/h2&gt;

&lt;p&gt;Here is another Android framework that is open-source and free, Cordova. This framework allows app development teams across the world to build a high-performing app using a single code base, but the functioning of the app goes to multiple platforms. It is very much similar to another framework named Appcelerator Titanium. &lt;/p&gt;

&lt;p&gt;It wouldn't be wrong to say that Cordova is a wonderful framework for developing cross-platform applications using standardized web technologies like CSS3, HTML5, and JavaScript. With this, Cordova serves as a resilient bridge between a mobile app and a web-based platform. &lt;/p&gt;

&lt;p&gt;Using the native APIs helps in identifying the app. It has proven to be an excellent Android app development framework for both online and offline applications. &lt;/p&gt;

&lt;h2&gt;Sencha Touch &lt;/h2&gt;

&lt;p&gt;The next best is the Sencha Touch that is also a powerful framework for creating native Android applications. By the developing communities around the world, it has been named as the most compatible and convenient Android app development framework. &lt;/p&gt;

&lt;p&gt;This framework uses HTML5 and JavaScript for developing dynamic, robust, and comprehensive applications. And thus, using this framework, the development teams also get high-performance in the developed applications through acceleration techniques. &lt;/p&gt;

&lt;p&gt;Moreover, this framework also contains more than 50 User Interfaces and Native Android app themes for developing captivating and appealing apps to bind tens of thousands of users with the apps.  &lt;/p&gt;

&lt;p&gt;On top of that, the rich and distinctive features give smooth scrolling and animations for feature-rich apps according to clients’ specific needs. Cutting it short, if a developer wants swift execution, cost-effective solutions, high compatibility, and responsive applications, Sencha Touch is one of the amazing frameworks to work with. &lt;/p&gt;

&lt;h3&gt;The Final Takeaway&lt;/h3&gt;

&lt;p&gt;Selecting the best Android app development framework entirely depends on the needs and requirements of your project. It is a process of high-thinking and the features that any framework provides. Here, comparing all the frameworks, features, tools, accessibilities is the best way to get the desired application and results.&lt;/p&gt;

</description>
      <category>android</category>
      <category>reactnative</category>
      <category>flutter</category>
      <category>mobile</category>
    </item>
    <item>
      <title>How to Create Word Add-In With Angular 2+?</title>
      <author>Tarun Gurang</author>
      <pubDate>Thu, 11 Nov 2021 13:31:20 +0000</pubDate>
      <link>https://dev.to/tarungurang/how-to-create-word-add-in-with-angular-2-3dil</link>
      <guid>https://dev.to/tarungurang/how-to-create-word-add-in-with-angular-2-3dil</guid>
      <description>&lt;p&gt;Word add-ins are one of many developer options you have on the Office add-in platform. In this blog, we can add the add-in using angular. Add-ins are just small web applications that run in one place and are served over HTTPS in the Office client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-an-office-addin-in-angular"&gt;
  &lt;/a&gt;
  Building an office add-in in Angular:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; In the package.json file, add the dependencies and dev dependencies and run the npm install command to install these dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "addin-demo",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~11.0.1",
    "@angular/common": "~11.0.1",
    "@angular/compiler": "~11.0.1",
    "@angular/core": "~11.0.1",
    "@angular/forms": "~11.0.1",
    "@angular/platform-browser": "~11.0.1",
    "@angular/platform-browser-dynamic": "~11.0.1",
    "@angular/router": "~11.0.1",
    "rxjs": "~6.6.0",
    "tslib": "^2.0.0",
    "zone.js": "~0.10.2",
    "@microsoft/office-js-helpers": "^1.0.1",
    "office-ui-fabric-js": "^1.3.0",
    "@types/office-js": "^1.0.23"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.1100.2",
    "@angular/cli": "~11.0.2",
    "@angular/compiler-cli": "~11.0.1",
    "@types/jasmine": "~3.6.0",
    "@types/node": "^12.11.1",
    "codelyzer": "^6.0.0",
    "jasmine-core": "~3.6.0",
    "jasmine-spec-reporter": "~5.0.0",
    "karma": "~5.1.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.0.3",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.5.0",
    "protractor": "~7.0.0",
    "ts-node": "~8.3.0",
    "tslint": "~6.1.0",
    "typescript": "~4.0.2",
    "@types/office-runtime": "^1.0.7",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "office-addin-debugging": "^2.1.13",
    "office-addin-dev-certs": "^1.0.1",
    "office-toolbox": "^0.1.1"
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Add the office.js library and office UI fabric core CSS in the index.html file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;xmp&amp;gt;
&amp;lt;!doctype html=""&amp;gt;&amp;lt;html lang="en"&amp;gt;&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8" /&amp;gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;base href="/" /&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1" /&amp;gt;&amp;lt;link href="favicon.ico" rel="icon" type="image/x-icon" /&amp;gt;
    &amp;lt;!-- Office JavaScript API --&amp;gt;
&amp;lt;script type="text/javascript" src="https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- For more information on Office UI Fabric, visit https://developer.microsoft.com/fabric. --&amp;gt;&amp;lt;link href="https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/10.0.0/css/fabric.min.css" rel="stylesheet" /&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
    &amp;lt;app-root&amp;gt;&amp;lt;/app-root&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
&amp;lt;/!doctype&amp;gt;&amp;lt;/xmp&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.ifourtechnolab.com/blog/ngstyle-in-angular-for-dynamic-styling"&gt;Ngstyle In Angular For Dynamic Styling&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; You should initialize the office in the main.ts file like below and replace the platformBrowserDynamic () function.&lt;/p&gt;

&lt;p&gt;Your main.ts file look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
import { AppModule } from './app/app.module';
import { environment } from './environments/environment';
if (environment.production) {
  enableProdMode();
}
Office.initialize = reason =&amp;gt; {  
  console.log('office is initialized');
   platformBrowserDynamic()
      .bootstrapModule(AppModule)
      .catch(error =&amp;gt; console.error(error));
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; After that, you should make sure that your target is to set the es5 and data typeRoots in the tsconfig.json file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": "./",
    "outDir": "./dist/out-tsc",
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "moduleResolution": "node",
    "importHelpers": true,
    "module": "es2020",
    "target": "es5",
    "typeRoots": ["node_modules/@types"],
    "lib": [
      "es2018",
      "dom"
    ]
  },
  "angularCompilerOptions": {
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Create the Manifest.xml file. To create the manifest.xml file, one of the simple ways is using Microsoft office Add-in Project Generator.&lt;/p&gt;

&lt;p&gt;After installation, use the following command to start the generator.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After running this command, selecting the Office Add-in project containing the manifest only option.&lt;/li&gt;
&lt;li&gt;Write the name of the add-in.&lt;/li&gt;
&lt;li&gt;Select the word option.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that, it automatically creates the manifest.xml file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!--?xml version="1.0" encoding="UTF-8"?--&amp;gt;
&amp;lt;officeapp xmlns="http://schemas.microsoft.com/office/appforoffice/1.1" xmlns:bt="http://schemas.microsoft.com/office/officeappbasictypes/1.0" xmlns:ov="http://schemas.microsoft.com/office/taskpaneappversionoverrides" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="TaskPaneApp"&amp;gt;
  &amp;lt;!-- IMPORTANT! Id must be unique for your add-in, if you reuse this manifest ensure that you change this id to a new GUID. --&amp;gt;
  &amp;lt;id&amp;gt;723d118f-7c3b-44fa-ac05-be9cb09b5a92&amp;lt;/id&amp;gt;
  &amp;lt;!--Version. Updates from the store only get triggered if there is a version change. --&amp;gt;
  &amp;lt;version&amp;gt;1.0.0.0&amp;lt;/version&amp;gt;
  &amp;lt;providername&amp;gt;[Provider name]&amp;lt;/providername&amp;gt;
  &amp;lt;defaultlocale&amp;gt;en-US&amp;lt;/defaultlocale&amp;gt;
  &amp;lt;!-- The display name of your add-in. Used on the store and various places of the Office UI such as the add-ins dialog. --&amp;gt;
  &amp;lt;displayname defaultvalue="Manifest"&amp;gt;
  &amp;lt;description defaultvalue="[Document Add-in description]"&amp;gt;
    &amp;lt;iconurl defaultvalue="https://localhost:3000/assets/icon-32.webp"&amp;gt;
  &amp;lt;highresolutioniconurl defaultvalue="https://localhost:3000/assets/icon-80.webp"&amp;gt;

  &amp;lt;!-- Domains that will be allowed when navigating. For example, if you use ShowTaskpane and then have an href link, navigation will only be allowed if the domain is on this list. --&amp;gt;
  &amp;lt;appdomains&amp;gt;
    &amp;lt;appdomain&amp;gt;AppDomain1&amp;lt;/appdomain&amp;gt;
    &amp;lt;appdomain&amp;gt;AppDomain2&amp;lt;/appdomain&amp;gt;
    &amp;lt;appdomain&amp;gt;AppDomain3&amp;lt;/appdomain&amp;gt;
  &amp;lt;/appdomains&amp;gt;
  &amp;lt;!--End Basic Settings. --&amp;gt;
  &amp;lt;!--Begin TaskPane Mode integration. This section is used if there are no VersionOverrides or if the Office client version does not support add-in commands. --&amp;gt;
  &amp;lt;hosts&amp;gt;
    &amp;lt;host name="Document"&amp;gt;
  &amp;lt;/host&amp;gt;&amp;lt;/hosts&amp;gt;
  &amp;lt;defaultsettings&amp;gt;
    &amp;lt;sourcelocation defaultvalue="https://localhost:3000/index.html"&amp;gt;
  &amp;lt;/sourcelocation&amp;gt;&amp;lt;/defaultsettings&amp;gt;
  &amp;lt;!-- End TaskPane Mode integration.  --&amp;gt;
  &amp;lt;permissions&amp;gt;ReadWriteDocument&amp;lt;/permissions&amp;gt;
  &amp;lt;!-- Begin Add-in Commands Mode integration. --&amp;gt;
  &amp;lt;versionoverrides xmlns="http://schemas.microsoft.com/office/taskpaneappversionoverrides" xsi:type="VersionOverridesV1_0"&amp;gt;
    &amp;lt;!-- The Hosts node is required. --&amp;gt;
    &amp;lt;hosts&amp;gt;     
      &amp;lt;host xsi:type="Document"&amp;gt;
         &amp;lt;desktopformfactor&amp;gt;
          &amp;lt;getstarted&amp;gt;
            &amp;lt;!-- Title of the Getting Started callout. resid points to a ShortString resource --&amp;gt;&amp;lt;title resid="GetStarted.Title"&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;/getstarted&amp;gt;

          &amp;lt;functionfile resid="Commands.Url"&amp;gt;
          &amp;lt;!-- PrimaryCommandSurface is the main Office Ribbon. --&amp;gt;
          &amp;lt;extensionpoint xsi:type="PrimaryCommandSurface"&amp;gt;
            &amp;lt;!-- Use OfficeTab to extend an existing Tab. Use CustomTab to create a new tab. --&amp;gt;
            &amp;lt;officetab id="TabHome"&amp;gt;
              &amp;lt;!-- Ensure you provide a unique id for the group. Recommendation for any IDs is to namespace using your company name. --&amp;gt;
              &amp;lt;group id="CommandsGroup"&amp;gt;
                &amp;lt;!-- Label for your group. resid must point to a ShortString resource. --&amp;gt;
                &amp;lt;label resid="CommandsGroup.Label"&amp;gt;

                &amp;lt;icon&amp;gt;
                  &amp;lt;bt:image resid="Icon.16x16" size="16"&amp;gt;
                  &amp;lt;bt:image resid="Icon.32x32" size="32"&amp;gt;
                  &amp;lt;bt:image resid="Icon.80x80" size="80"&amp;gt;
                &amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/icon&amp;gt;
                &amp;lt;!-- Control. It can be of type "Button" or "Menu". --&amp;gt;
                &amp;lt;control id="TaskpaneButton" xsi:type="Button"&amp;gt;
                  &amp;lt;label resid="TaskpaneButton.Label"&amp;gt;
                  &amp;lt;supertip&amp;gt;
                    &amp;lt;!-- ToolTip title. resid must point to a ShortString resource. --&amp;gt;&amp;lt;title resid="TaskpaneButton.Label"&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;/supertip&amp;gt;
                  &amp;lt;icon&amp;gt;
                    &amp;lt;bt:image resid="Icon.16x16" size="16"&amp;gt;
                    &amp;lt;bt:image resid="Icon.32x32" size="32"&amp;gt;
                    &amp;lt;bt:image resid="Icon.80x80" size="80"&amp;gt;
                  &amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/icon&amp;gt;
                  &amp;lt;!-- This is what happens when the command is triggered (E.g. click on the Ribbon). Supported actions are ExecuteFunction or ShowTaskpane. --&amp;gt;
                  &amp;lt;action xsi:type="ShowTaskpane"&amp;gt;
                    &amp;lt;taskpaneid&amp;gt;ButtonId1&amp;lt;/taskpaneid&amp;gt;
                    &amp;lt;!-- Provide a url resource id for the location that will be displayed on the task pane. --&amp;gt;
                    &amp;lt;sourcelocation resid="Taskpane.Url"&amp;gt;
                  &amp;lt;/sourcelocation&amp;gt;&amp;lt;/action&amp;gt;
                &amp;lt;/label&amp;gt;&amp;lt;/control&amp;gt;
              &amp;lt;/label&amp;gt;&amp;lt;/group&amp;gt;
            &amp;lt;/officetab&amp;gt;
          &amp;lt;/extensionpoint&amp;gt;
        &amp;lt;/functionfile&amp;gt;&amp;lt;/desktopformfactor&amp;gt;
      &amp;lt;/host&amp;gt;
    &amp;lt;/hosts&amp;gt;
    &amp;lt;!-- You can use resources across hosts and form factors. --&amp;gt;
    &amp;lt;resources&amp;gt;
      &amp;lt;bt:images&amp;gt;
        &amp;lt;bt:image defaultvalue="https://localhost:3000/assets/icon-16.webp" id="Icon.16x16"&amp;gt;
        &amp;lt;bt:image defaultvalue="https://localhost:3000/assets/icon-32.webp" id="Icon.32x32"&amp;gt;
        &amp;lt;bt:image defaultvalue="https://localhost:3000/assets/icon-80.webp" id="Icon.80x80"&amp;gt;
      &amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/bt:image&amp;gt;&amp;lt;/bt:images&amp;gt;
      &amp;lt;bt:urls&amp;gt;
        &amp;lt;bt:url defaultvalue="https://go.microsoft.com/fwlink/?LinkId=276812" id="GetStarted.LearnMoreUrl"&amp;gt;
        &amp;lt;bt:url defaultvalue="https://localhost:3000/commands.html" id="Commands.Url"&amp;gt;
        &amp;lt;bt:url defaultvalue="https://localhost:3000/taskpane.html" id="Taskpane.Url"&amp;gt;
      &amp;lt;/bt:url&amp;gt;&amp;lt;/bt:url&amp;gt;&amp;lt;/bt:url&amp;gt;&amp;lt;/bt:urls&amp;gt;
      &amp;lt;!-- ShortStrings max characters==125. --&amp;gt;
      &amp;lt;bt:shortstrings&amp;gt;
        &amp;lt;bt:string defaultvalue="Get started with your sample add-in!" id="GetStarted.Title"&amp;gt;
        &amp;lt;bt:string defaultvalue="Commands Group" id="CommandsGroup.Label"&amp;gt;
        &amp;lt;bt:string defaultvalue="Show Taskpane" id="TaskpaneButton.Label"&amp;gt;
      &amp;lt;/bt:string&amp;gt;&amp;lt;/bt:string&amp;gt;&amp;lt;/bt:string&amp;gt;&amp;lt;/bt:shortstrings&amp;gt;
      &amp;lt;!-- LongStrings max characters==250. --&amp;gt;
      &amp;lt;bt:longstrings&amp;gt;
        &amp;lt;bt:string defaultvalue="Your sample add-in loaded succesfully. Go to the HOME tab and click the 'Show Taskpane' button to get started." id="GetStarted.Description"&amp;gt;
        &amp;lt;bt:string defaultvalue="Click to Show a Taskpane" id="TaskpaneButton.Tooltip"&amp;gt;
      &amp;lt;/bt:string&amp;gt;&amp;lt;/bt:string&amp;gt;&amp;lt;/bt:longstrings&amp;gt;
    &amp;lt;/resources&amp;gt;
  &amp;lt;/versionoverrides&amp;gt;
  &amp;lt;!-- End Add-in Commands Mode integration. --&amp;gt;
&amp;lt;/highresolutioniconurl&amp;gt;&amp;lt;/iconurl&amp;gt;&amp;lt;/description&amp;gt;&amp;lt;/displayname&amp;gt;&amp;lt;!--!doctype--&amp;gt;&amp;lt;/officeapp&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Looking for Best &lt;a href="https://www.ifourtechnolab.com/word-add-in-development-company"&gt;Word Add-in Development&lt;/a&gt; Solutions? Your Search ends here.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Add the following code in the polyfills.ts file to enable the polyfills for IE.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'core-js/client/shim';
import 'core-js/es6/symbol';
import 'core-js/es6/object';
import 'core-js/es6/function';
import 'core-js/es6/parse-int';
import 'core-js/es6/parse-float';
import 'core-js/es6/number';
import 'core-js/es6/math';
import 'core-js/es6/string';
import 'core-js/es6/date';
import 'core-js/es6/array';
import 'core-js/es6/regexp';
import 'core-js/es6/map';
import 'core-js/es6/weak-map';
import 'core-js/es6/set';

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this blog, we have explained how to build office add-in in angular. Add-ins are just small web applications that run in one place and are served over HTTPS in the Office client.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>programming</category>
    </item>
    <item>
      <title>Best Java IDEs</title>
      <author>cloudytech147</author>
      <pubDate>Thu, 11 Nov 2021 13:16:32 +0000</pubDate>
      <link>https://dev.to/cloudytech147/best-java-ides-2eac</link>
      <guid>https://dev.to/cloudytech147/best-java-ides-2eac</guid>
      <description>&lt;p&gt;Java is perhaps the most impressive and flexible programming language. A significant number of the work area programming and practically all the Android applications that you are utilizing are made utilizing Java. Since its introduction to the world in 1995, Java has overwhelmed the programming scene.&lt;/p&gt;

&lt;p&gt;However numerous specialists currently accept that Java doesn’t have an extremely brilliant future, we suspect something. There are numerous business and free Java IDEs accessible, and here we will talk about the best Java IDE to use in 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyRw3sWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruazxx432fjom6v9j0qr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyRw3sWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruazxx432fjom6v9j0qr.png" alt="java IDEs" width="634" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.techgeekbuzz.com/best-java-ides/"&gt;Best Java IDE&lt;/a&gt; for Java Coding&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eclipse&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--az9a6Zyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c38gr9pvgy00ybyzb9nu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--az9a6Zyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c38gr9pvgy00ybyzb9nu.png" alt="Eclipse" width="300" height="71"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;IntelliJ IDEA&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--reEeiUsL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ymok1cmir9xy5kr9k6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--reEeiUsL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ymok1cmir9xy5kr9k6.png" alt="IntelliJ IDEA" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BlueJ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d8YAwbit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5dajs75yagt1nzzbsra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d8YAwbit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5dajs75yagt1nzzbsra.png" alt="BlueJ" width="300" height="229"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DrJava&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AekWicBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng49l51ne0p8j7f5qsid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AekWicBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ng49l51ne0p8j7f5qsid.png" alt="DrJava" width="250" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;MyEclipse&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dY2yNxnc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brz6u0do9jn70ggetj1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dY2yNxnc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brz6u0do9jn70ggetj1z.png" alt="MyEclipse" width="225" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JDeveloper&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XDFqKi_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbh0p0dycikg11icsja8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XDFqKi_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbh0p0dycikg11icsja8.png" alt="JDeveloper" width="180" height="180"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;NetBeans&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--osKCPIEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccx5iq5h441uaeaqsbn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--osKCPIEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccx5iq5h441uaeaqsbn7.png" alt="NetBeans" width="300" height="131"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;JCreator&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8yncWPXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32wcjxxl56iq8y405yyj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8yncWPXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32wcjxxl56iq8y405yyj.png" alt="JCreator" width="256" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;jGRASP&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zIas5D4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zdykymlb6ivbii2215c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zIas5D4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8zdykymlb6ivbii2215c.png" alt="jGRASP" width="300" height="190"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Greenfoot&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JJphEs99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovx3m1y5l8c4vufpv52z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JJphEs99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovx3m1y5l8c4vufpv52z.png" alt="Greenfoot" width="248" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That sums up our list of the best Java IDEs. There are many Java IDEs, but these are the best ones to program and develop software in Java.&lt;/p&gt;

</description>
      <category>java</category>
      <category>ide</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Getting Started with Java - Installation</title>
      <author>Raj Pansuriya</author>
      <pubDate>Thu, 11 Nov 2021 13:15:52 +0000</pubDate>
      <link>https://dev.to/rajpansuriya/getting-started-with-java-installation-5l3</link>
      <guid>https://dev.to/rajpansuriya/getting-started-with-java-installation-5l3</guid>
      <description>&lt;p&gt;You can install the latest version of java for Windows and macOS from its official site. For Linux-based distributions command line is the recommended option. Follow the instructions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install java for &lt;a href="https://www.oracle.com/java/technologies/downloads/#jdk17-mac"&gt;MacOS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install java for &lt;a href="https://www.oracle.com/java/technologies/downloads/#jdk17-windows"&gt;Windows&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install java for &lt;a href="https://www.oracle.com/java/technologies/downloads/#jdk17-linux"&gt;linux&lt;/a&gt;
Note: Though you can download and install JDK for Linux from the official site, I would highly recommend you to use the official package manager for your distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#java-on-linux-distributions"&gt;
  &lt;/a&gt;
  Java on Linux distributions
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu, Debian, and distributions that use &lt;strong&gt;apt&lt;/strong&gt; as the package manager&lt;br&gt;
Open your terminal and follow the guide&lt;/p&gt;

&lt;p&gt;Update the package index&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Check if Java is not already installed:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ java --version
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;If Java is already installed we'll get output similar to below&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;openjdk 17.0.1 2021-10-19
OpenJDK Runtime Environment (build 17.0.1+12)
OpenJDK 64-Bit Server VM (build 17.0.1+12, mixed mode)
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;If not, then install java&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt-get install default-jdk
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For arch and arch-based distributions&lt;/p&gt;

&lt;p&gt;Update the system&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo pacman -Syyu
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Check if Java is not already installed:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ java --version
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Search for available JRE in the arch repository&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pacman -Ss java | grep jre
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7UO3cN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636607547791/t-klDRH8W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7UO3cN---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636607547791/t-klDRH8W.png" alt="image.png" width="488" height="224"&gt;&lt;/a&gt;&lt;br&gt;
Install the latest jre&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo pacman -S jre-openjdk
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Similarly, search for the latest JDK and install it&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pacman -Ss java | grep jdk
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j1KHyLRm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636607674128/WRL8RwQJ4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j1KHyLRm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636607674128/WRL8RwQJ4.png" alt="image.png" width="584" height="546"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo pacman -S jdk-openjdk
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The next thing you may want to install is an Integrated Development Environment (IDE). There are so many IDE's available for Java development. One of the best being &lt;a href="https://www.jetbrains.com/idea/download"&gt;IntelliJ IDEA&lt;/a&gt;. You may even consider setting a Java Development Environment in your preferred text editor such as &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; or &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;, etc. I leave these things to your liking.&lt;/p&gt;

&lt;p&gt;That's all for this one. Feel free to connect with me&lt;br&gt;
&lt;a href="https://twitter.com/Raj_Pansuriya7"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HxHaoR44--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Twitter-Profile-informational%3Fstyle%3Dflat%26logo%3Dtwitter%26logoColor%3Dwhite%26color%3D1CA2F1" alt="Twitter logo" width="111" height="20"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/raj-pansuriya/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pjPRRZcU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-Profile-informational%3Fstyle%3Dflat%26logo%3Dlinkedin%26logoColor%3Dwhite%26color%3D0D76A8" alt="LinkedIn Badge" width="119" height="20"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Introduction to Data (Databases, Analytics, Blockchain) with AWS - Part 2</title>
      <author>Adit Modi</author>
      <pubDate>Thu, 11 Nov 2021 13:09:11 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-data-databases-analytics-blockchain-with-aws-part-2-f72</link>
      <guid>https://dev.to/aws-builders/introduction-to-data-databases-analytics-blockchain-with-aws-part-2-f72</guid>
      <description>&lt;p&gt;The past fifteen years have seen an incredible shift of application workloads from on-premises data centers or colocation facilities to cloud-based computing by using services from Amazon Web Services (AWS). Companies have been able to innovate faster, serve customers better, and keep their IT spend lower by migrating to cloud-based computing.&lt;/p&gt;

&lt;p&gt;But a simple "lift and shift" to the cloud is not enough. More and more customers are looking for ways to innovate even faster by focusing on their core competencies. They are looking for a cloud provider that can be a partner as they work to deliver customer value. For many, this means more than simple compute and storage options. As a result, companies are using higher level services such as fully managed databases and serverless compute to get the most out of their cloud provider. &lt;/p&gt;

&lt;p&gt;In the previous blog post, we discussed some of the most important AWS Analytics services. In this blog post, We will talk about AWS Database services and Blockchain services. AWS Database services that help us build use case-driven, highly scalable, distributed applications suited to our specific needs. Developing blockchain and ledger applications is simpler, faster, and more efficient with AWS. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mNws7DeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k5jbz04va6i189nwi3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mNws7DeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k5jbz04va6i189nwi3k.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Introduction to AWS&lt;/strong&gt; is a Series containing different articles that provide a basic introduction to different aws topics/categories. Each article covers the detailed guide on how to work with particular topic/category . This series aims at providing "A Getting Started Guide on Different aws topics / categories ."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#aws-database-services"&gt;
  &lt;/a&gt;
  AWS Database services
&lt;/h1&gt;

&lt;p&gt;AWS fully managed database services provide continuous monitoring, self-healing storage, and automated scaling to help you focus on application development. We will discuss some of the most used AWS Database services.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-aurora"&gt;
  &lt;/a&gt;
  Amazon Aurora
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDh57D_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqdkon9a0hg17gbnawc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDh57D_z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqdkon9a0hg17gbnawc6.png" alt="image" width="159" height="159"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Aurora is a MySQL and PostgreSQL compatible relational database engine that combines the speed and availability of high-end commercial databases with the simplicity and cost-eﬀectiveness of open source databases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Aurora is up to five times faster than standard MySQL databases and three times faster than standard PostgreSQL databases. It provides the security, availability, and reliability of commercial databases at 1/10th the cost. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Aurora is fully managed by Amazon Relational Database Service (RDS), which automates time-consuming administration tasks like hardware provisioning, database setup, patching, and backups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Aurora features a distributed, fault-tolerant, self-healing storage system that auto-scales up to 128TB per database instance. It delivers high performance and availability with up to 15 low-latency read replicas, point-in-time recovery, continuous backup to Amazon S3, and replication across three Availability Zones (AZs).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-relational-database-service"&gt;
  &lt;/a&gt;
  Amazon Relational Database Service
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8oYa2FN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2aiad4qh8d4v4dr2ejhn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8oYa2FN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2aiad4qh8d4v4dr2ejhn.png" alt="image" width="137" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It frees you to focus on your applications so you can give them the fast performance, high availability, security and compatibility they need.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon RDS is available on several database instance types - optimized for memory, performance or I/O - and provides you with six familiar database engines to choose from, including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle Database, and SQL Server. You can use the AWS Database Migration Service to easily migrate or replicate your existing databases to Amazon RDS.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-rds-on-vmware"&gt;
  &lt;/a&gt;
  Amazon RDS on VMware
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZWymiRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd7pw9k337lyf4eeydpn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZWymiRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dd7pw9k337lyf4eeydpn.png" alt="image" width="137" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Relational Database Service (Amazon RDS) on VMware lets you deploy managed databases in on-premises VMware environments using the Amazon RDS technology enjoyed by hundreds of thousands of AWS customers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon RDS provides cost-efficient and resizable capacity while automating time-consuming administration tasks including hardware provisioning, database setup, patching, and backups, freeing you to focus on your applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RDS on VMware brings these same benefits to your on-premises deployments, making it easy to set up, operate, and scale databases in VMware vSphere private data centers, or to migrate them to AWS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon RDS on VMware allows you to utilize the same simple interface for managing databases in on-premises VMware environments as you would use in AWS. You can easily replicate RDS on VMware databases to RDS instances in AWS, enabling low-cost hybrid deployments for disaster recovery, read replica bursting, and optional long-term backup retention in Amazon Simple Storage Service (Amazon S3).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-dynamodb"&gt;
  &lt;/a&gt;
  Amazon DynamoDB
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqTGcbHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fozt93c2jn9ixhve1lw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqTGcbHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0fozt93c2jn9ixhve1lw.png" alt="image" width="143" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at any scale. It's a fully managed, multiregion, multimaster database with built-in security, backup and restore, and in-memory caching for internet-scale applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DynamoDB can handle more than 10 trillion requests per day and support peaks of more than 20 million requests per second.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many of the world's fastest growing businesses such as Lyft, Airbnb, and Redfin as well as enterprises such as Samsung, Toyota, and Capital One depend on the scale and performance of DynamoDB to support their mission-critical workloads.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More than 100,000 AWS customers have chosen DynamoDB as their key-value and document database for mobile, web, gaming, ad tech, IoT, and other applications that need low-latency data access at any scale. Create a new table for your application and let DynamoDB handle the rest.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-elasticache"&gt;
  &lt;/a&gt;
  Amazon ElastiCache
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hv2QIaRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgb5uhaxp98v8i7ybaz8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hv2QIaRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgb5uhaxp98v8i7ybaz8.png" alt="image" width="133" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud. The service improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory caches, instead of relying entirely on slower disk-based databases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon ElastiCache supports two open-source in-memory caching engines:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Redis -&lt;/strong&gt; a fast, open source, in-memory data store and cache. Amazon ElastiCache for Redis is a Redis-compatible in-memory service that delivers the ease-of-use and power of Redis along with the availability, reliability, and performance suitable for the most demanding applications. Both single-node and up to 15-shard clusters are available, enabling scalability to up to 3.55 TiB of in-memory data. ElastiCache for Redis is fully managed, scalable, and secure. This makes it an ideal candidate to power high-performance use cases such as web, mobile apps, gaming, ad-tech, and IoT.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4bGzhYUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdyilo2ubq7kvnh02smb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4bGzhYUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdyilo2ubq7kvnh02smb.png" alt="image" width="120" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Memcached -&lt;/strong&gt; a widely adopted memory object caching system. ElastiCache for Memcached is protocol compliant with Memcached, so popular tools that you use today with existing Memcached environments will work seamlessly with the service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVWH3lN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5uq903q0tc6ez468xpo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVWH3lN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5uq903q0tc6ez468xpo.png" alt="image" width="112" height="111"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-neptune"&gt;
  &lt;/a&gt;
  Amazon Neptune
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1flooSPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2yj777v6mt8jrobf7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1flooSPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz2yj777v6mt8jrobf7q.png" alt="image" width="143" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Neptune is a fast, reliable, fully-managed graph database service that makes it easy to build and run applications that work with highly connected datasets. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The core of Amazon Neptune is a purpose-built, high-performance graph database engine optimized for storing billions of relationships and querying the graph with milliseconds latency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Neptune supports popular graph models Property Graph and W3C's RDF, and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing you to easily build queries that efficiently navigate highly connected datasets. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Neptune powers graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon Neptune is highly available, with read replicas, point-in-time recovery, continuous backup to Amazon S3, and replication across Availability Zones. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Neptune is secure with support for encryption at rest. Neptune is fully-managed, so you no longer need to worry about database management tasks such as hardware provisioning, software patching, setup, configuration, or backups.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-quantum-ledger-database-qldb"&gt;
  &lt;/a&gt;
  Amazon Quantum Ledger Database (QLDB)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4CH7oI34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek6dwq39ohnkr2c1cvlb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CH7oI34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek6dwq39ohnkr2c1cvlb.png" alt="image" width="143" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon QLDB is a fully managed ledger database that provides a transparent, immutable, and cryptographically verifiable transaction log ‎owned by a central trusted authority. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon QLDB tracks each and every application data change and maintains a complete and verifiable history of changes over time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ledgers are typically used to record a history of economic and financial activity in an organization. Many organizations build applications with ledger-like functionality because they want to maintain an accurate history of their applications' data, for example, tracking the history of credits and debits in banking transactions, verifying the data lineage of an insurance claim, or tracing movement of an item in a supply chain network. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ledger applications are often implemented using custom audit tables or audit trails created in relational databases. However, building audit functionality with relational databases is time-consuming and prone to human error. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It requires custom development, and since relational databases are not inherently immutable, any unintended changes to the data are hard to track and verify. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alternatively, blockchain frameworks, such as Hyperledger Fabric and Ethereum, can also be used as a ledger. However, this adds complexity as you need to set-up an entire blockchain network with multiple nodes, manage its infrastructure, and require the nodes to validate each transaction before it can be added to the ledger.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon QLDB is a new class of database that eliminates the need to engage in the complex development effort of building your own ledger-like applications. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With QLDB, your data’s change history is immutable – it cannot be altered or deleted – and using cryptography, you can easily verify that there have been no unintended modifications to your application’s data. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QLDB uses an immutable transactional log, known as a journal, that tracks each application data change and maintains a complete and verifiable history of changes over time. QLDB is easy to use because it provides developers with a familiar SQL-like API, a flexible document data model, and full support for transactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QLDB is also serverless, so it automatically scales to support the demands of your application. There are no servers to manage and no read or write limits to configure. With QLDB, you only pay for what you use.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-timestream"&gt;
  &lt;/a&gt;
  Amazon Timestream
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KhohgXMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ha7ilp8bakub29iglbzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KhohgXMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ha7ilp8bakub29iglbzj.png" alt="image" width="133" height="133"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Timestream is a fast, scalable, fully managed time series database service for IoT and operational applications that makes it easy to store and analyze trillions of events per day at 1/10th the cost of relational databases. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Driven by the rise of IoT devices, IT systems, and smart industrial machines, time-series data — data that measures how things change over time — is one of the fastest growing data types. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Time-series data has specific characteristics such as typically arriving in time order form, data is append-only, and queries are always over a time interval. While relational databases can store this data, they are inefficient at processing this data as they lack optimizations such as storing and retrieving data by time intervals. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timestream is a purpose-built time series database that efficiently stores and processes this data by time intervals. With Timestream, you can easily store and analyze log data for DevOps, sensor data for IoT applications, and industrial telemetry data for equipment maintenance. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As your data grows over time, Timestream’s adaptive query processing engine understands its location and format, making your data simpler and faster to analyze. Timestream also automates rollups, retention, tiering, and compression of data, so you can manage your data at the lowest possible cost. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Timestream is serverless, so there are no servers to manage. It manages time-consuming tasks such as server provisioning, software patching, setup, configuration, or data retention and tiering, freeing you to focus on building your applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-documentdb-with-mongodb-compatibility"&gt;
  &lt;/a&gt;
  Amazon DocumentDB (with MongoDB compatibility)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Aq22dIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpkgvcxac6lt03a261sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Aq22dIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tpkgvcxac6lt03a261sw.png" alt="image" width="143" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon DocumentDB (with MongoDB compatibility)  is a fast, scalable, highly available, and fully managed document database service that supports MongoDB workloads.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon DocumentDB (with MongoDB compatibility) is designed from the ground-up to give you the performance, scalability, and availability you need when operating mission-critical MongoDB workloads at scale. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Amazon DocumentDB (with MongoDB compatibility) implements the Apache 2.0 open source MongoDB 3.6 API by emulating the responses that a MongoDB client expects from a MongoDB server, allowing you to use your existing MongoDB drivers and tools with Amazon DocumentDB (with MongoDB compatibility) .&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#aws-blockchain-services"&gt;
  &lt;/a&gt;
  AWS Blockchain Services
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Blockchain is the perfect example of fully managed services for using blockchain technology. Blockchain on AWS refers to a small yet powerful assortment of offerings that support the enterprise blockchain initiatives of organizations. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Amazon Quantum Ledger Database, Amazon Managed Blockchain, AWS Blockchain Partners, and AWS Blockchain Templates are the prominent entries when it comes to discussions about blockchain on AWS.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#amazon-managed-blockchain"&gt;
  &lt;/a&gt;
  Amazon Managed Blockchain
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2pIFzl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iar9j93e5hocaifkh3gl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2pIFzl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iar9j93e5hocaifkh3gl.png" alt="image" width="130" height="131"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon Managed Blockchain is a fully managed service that makes it easy to create and manage scalable blockchain networks using the popular open source frameworks Hyperledger Fabric and Ethereum.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blockchain makes it possible to build applications where multiple parties can execute transactions without the need for a trusted, central authority. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Today, building a scalable blockchain network with existing technologies is complex to set up and hard to manage. To create a blockchain network, each network member needs to manually provision hardware, install software, create and manage certificates for access control, and configure networking components. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once the blockchain network is running, you need to continuously monitor the infrastructure and adapt to changes, such as an increase in transaction requests, or new members joining or leaving the network.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS databases deliver the high availability, reliability, and security you need for business-critical, enterprise workloads.&lt;br&gt;
They support multi-region, multi-primary replication, and provide full data oversight with multiple levels of security, including network isolation and end-to-end encryption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More customers trust AWS for their blockchain and ledger technology workloads than any other cloud vendor. AWS has over 70+ validated blockchain solutions from partners who provide support to all major blockchain protocols including Hyperledger Sawtooth, Corda, DAML, Ethereum and many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope this guide helps you with Introduction to Data (Databases, Analytics, Blockchain) with AWS  Part - 2. &lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>database</category>
      <category>blockchain</category>
      <category>analytics</category>
    </item>
    <item>
      <title>Need proof to set up observability, here are 33 stats to show why!</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Thu, 11 Nov 2021 12:56:29 +0000</pubDate>
      <link>https://dev.to/signoz/need-proof-to-set-up-observability-here-are-33-stats-to-show-why-23bb</link>
      <guid>https://dev.to/signoz/need-proof-to-set-up-observability-here-are-33-stats-to-show-why-23bb</guid>
      <description>&lt;p&gt;Observability is the new buzzword. Or is it already a necessity for your software development? There is a lot of debate around observability and all its aspects. How do you define observability? How does it differ from monitoring? Does it replace or complement your monitoring practices?&lt;/p&gt;

&lt;p&gt;We are not here to get into that debate. Keeping the jargon aside, let's look at what stats say about observability. Is it making a difference for its adopters?&lt;/p&gt;

&lt;p&gt;Hybrid multi-cloud systems have become the norm. It is one of the driving forces behind the need for observability. We have compiled 33 stats that show observability is the answer to cloud-native software development.&lt;/p&gt;

&lt;p&gt;Let's start by looking at how the cloud ecosystem is shaping up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cloud-adoption-will-increase-along-with-its-complexity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cloud adoption will increase, along with its complexity&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The global cloud computing market size is expected to reach $1,251.09 billion by 2028, registering a CAGR of 19.1% over the forecast period, 2021-2028. (&lt;a href="https://www.researchandmarkets.com/reports/5397840/cloud-computing-market-size-share-and-trends" rel="noopener noreferrer nofollow"&gt;Researchandmarkets&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;92% of enterprises have multi-cloud strategy; 82 percent have hybrid cloud strategy. (&lt;a href="https://www.flexera.com/blog/cloud/cloud-computing-trends-2021-state-of-the-cloud-report" rel="noopener noreferrer nofollow"&gt;Flexera&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;96% of software leaders have adopted a cloud-native approach to software development. (&lt;a href="https://newrelic.com/more-perfect-software/more-perfect-software/" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;30% of organizations are using 3 or more clouds today. (&lt;a href="https://www.ibm.com/downloads/cas/VKW3RNDP" rel="noopener noreferrer nofollow"&gt;IBM&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;83% of IT execs had cloud adoption as a key priority in 2021. (&lt;a href="https://resources.securitycompass.com/reports/2021-state-of-cloud-adoption#main-content" rel="noopener noreferrer nofollow"&gt;Security Compass&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;58% of leaders believe the complexity of managing hybrid/multi-cloud environments is their leading challenge. (&lt;a href="https://www.ibm.com/downloads/cas/VKW3RNDP" rel="noopener noreferrer nofollow"&gt;IBM&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;74% of CIOs believe increased complexity could make it extremely difficult to manage performance. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;76% of CIOs say that they don't have complete visibility into application performance in cloud-native architectures. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;33% of the IT team's time is spent tackling digital performance problems. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#impact-of-cloud-complexity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Impact of cloud complexity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The advantages that the cloud brings come at the cost of increased application complexity. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;37 is the average number of technology systems that a single web or mobile transaction crosses. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6 is the average number of outages experienced by businesses in the last 12 months where user experience, revenue, or operations were impacted. (&lt;a href="https://www.dynatrace.com/global-cio-report/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;91% of surveyed data center facility managers have experienced at least one disruptive incident during the last 12 months, including downtime related to an outage(54%) or unplanned downtime (34%). (&lt;a href="https://www.honeywell.com/us/en/press/2021/10/honeywell-survey-more-than-half-of-surveyed-data-center-facility-managers-experienced-an-outage-in-the-past-12-months" rel="noopener noreferrer nofollow"&gt;Honeywell&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;95% of applications in enterprise organizations are not monitored due to siloed tools and burdensome manual effort. (&lt;a href="https://www.dynatrace.com/resources/ebooks/5-challenges-to-achieving-observability/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;84% of surveyed engineers report using hundreds or even thousands of compute instances across a single organization, with a large number of containers and microservices in use. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;70% of CIOs say monitoring containerized microservices in real-time is almost impossible. (&lt;a href="https://www.dynatrace.com/resources/ebooks/5-challenges-to-achieving-observability/" rel="noopener noreferrer nofollow"&gt;Dynatrace&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cloud-native apps on average extend across 2.25 public cloud environments. The most common observability tools are those provided by the public cloud providers which can only monitor their own cloud services. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For 90% of surveyed engineers, highly distributed apps create monitoring challenges an order of magnitude greater than what traditional monitoring tools can handle. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;57% of respondents found lack of context a top challenge with their existing monitoring tools. (&lt;a href="https://www.observeinc.com/blog/the-state-of-observability-2021/" rel="noopener noreferrer nofollow"&gt;Observe&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#leaders-believe-observability-is-the-key-to-unlocking-cloud-complexity"&gt;
  &lt;/a&gt;
  Leaders believe observability is the key to unlocking cloud complexity
&lt;/h3&gt;

&lt;p&gt;What you need is visibility into your hybrid cloud infra and rich context for every user requests. A robust observability stack can get engineering teams the context to resolve issues faster and earlier.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;94% of software leaders say observability is key to developing software. (&lt;a href="https://newrelic.com/more-perfect-software/more-perfect-software/" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;99% of leaders say their culture and observability technology allow developers to make quick decisions, without fear of repercussions. (&lt;a href="https://newrelic.com/resources/ebooks/more-perfect-software-gated" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;78% of software leaders learn about service interruptions through observability solutions versus just 12% for laggards. (&lt;a href="https://newrelic.com/resources/ebooks/observability-21st-century-manifesto" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Organizations identified as observability leaders are 6 times more likely to have accelerated root cause identification after adopting observability. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More mature observability teams are 3x more likely to deliver higher customer satisfaction. (&lt;a href="https://www.honeycomb.io/observability-maturity-community-findings-2021-2/" rel="noopener noreferrer nofollow"&gt;Honeycomb&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;92% of surveyed engineers believe observability tools enable more effective decision-making. (&lt;a href="https://tanzu.vmware.com/content/blog/the-state-of-observability-2021-key-findings" rel="noopener noreferrer nofollow"&gt;Tanzu VMware&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;86% of respondents say they will be prioritizing observability within the next year. (&lt;a href="https://www.observeinc.com/blog/the-state-of-observability-2021/" rel="noopener noreferrer nofollow"&gt;Observe&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;70% of observability leaders believe they have excellent visibility into their org's security posture versus only 31% of beginners. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;45% of observability leaders report launching eight or more new products/revenue streams in the last year compared with 15% of beginners. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#challenges-in-setting-up-observability"&gt;
  &lt;/a&gt;
  Challenges in setting up observability
&lt;/h3&gt;

&lt;p&gt;But there are also challenges to setting up observability.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;86% of respondents cite difficulties related to tech, including inadequate legacy tools, lack of platform options, concerns about open-source tools, and tool fragmentation as a challenge to observability adoption. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;87% of respondents say it’s important that observability solutions work regardless of the architecture. OpenTelemetry, for example, is a vendor-agnostic instrumentation library that is becoming a world-standard for application instrumentation. (&lt;a href="https://www.splunk.com/en_us/form/state-of-observability.html" rel="noopener noreferrer nofollow"&gt;Splunk&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;38% cite lack of resources, 29% cite lack of skills, 27% cite lack of instrumentation as challenge to maximize the value of their observability practices. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Monitoring is fragmented. To gain end-to-end observability, 13% of respondents use more than 10 tools, 18% use 6-10 tools, and 31% use 2-5 tools. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#but-orgs-want-to-set-up-mature-observability-practices-sooner-than-later"&gt;
  &lt;/a&gt;
  But orgs want to set up mature observability practices sooner than later
&lt;/h3&gt;

&lt;p&gt;The journey to gain end-to-end observability might seem daunting. But the key is to start now.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;81% of C-suite executives expect to increase their observability budget next year, with 20% expecting budgets to increase significantly. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;74% of respondents note there is room to grow their observability practices, with only 26% claiming a mature observability practice. (&lt;a href="https://resources.newrelic.com/2021-observability-forecast" rel="noopener noreferrer nofollow"&gt;New Relic&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;The verdict is in! And it says you need to start your observability journey or make it more mature sooner for modern-day software development.&lt;/p&gt;

&lt;p&gt;So when are you starting your observability journey?&lt;/p&gt;

&lt;p&gt;You can check out &lt;strong&gt;&lt;a href="https://signoz.io/?utm_source=learn&amp;amp;utm_medium=observability_statistics"&gt;SigNoz&lt;/a&gt;&lt;/strong&gt; - our open-source full-stack observability platform to get started. It is an all-in-one platform to address your observability needs.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>microservices</category>
      <category>monitoring</category>
      <category>observability</category>
    </item>
    <item>
      <title>Workflow to apply a Eslint check before merging the Pull Request</title>
      <author>Saloni </author>
      <pubDate>Thu, 11 Nov 2021 12:53:38 +0000</pubDate>
      <link>https://dev.to/saloni137/workflow-to-apply-a-eslint-check-before-merging-the-pull-request-3ooi</link>
      <guid>https://dev.to/saloni137/workflow-to-apply-a-eslint-check-before-merging-the-pull-request-3ooi</guid>
      <description>&lt;h3&gt;
  &lt;a href="#submission-category-maintainer-musthaves"&gt;
  &lt;/a&gt;
  Submission Category: Maintainer Must-Haves
&lt;/h3&gt;

&lt;p&gt;If you have a javascript based projects, then maintainers must check code quality through eslint checks before merging the PRs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Check ESLint on Pull Request

on:
  pull_request:
    branches: [ main ]

jobs:
  fix:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: installing eslint 
        run: npm i -g eslint
      - name: Fixing Files
        run: eslint . --ext .js --fix
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>actionshackathon21</category>
    </item>
  </channel>
</rss>
