<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>If you wish.. to crack Product based companies(in detail)</title>
      <author>Tech Guy</author>
      <pubDate>Sat, 17 Jul 2021 07:03:26 +0000</pubDate>
      <link>https://dev.to/computergeek/if-you-wish-to-crack-product-based-companies-in-detail-188e</link>
      <guid>https://dev.to/computergeek/if-you-wish-to-crack-product-based-companies-in-detail-188e</guid>
      <description>&lt;p&gt;It's time for giving placement period some priority, in this section I would like to share with you guys, one of the best and structured way approach for technical interviews.&lt;/p&gt;

&lt;p&gt;Let us assume that we have  placement preparation within one or two years and we just &lt;strong&gt;know basic level of coding and don't even know implementation of linkedlist and other data structures.&lt;/strong&gt; Then is it possible to crack product based companies????&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THE ANSWER is YESSSSS.....&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, if you know hindi(language)then you can follow &lt;strong&gt;pepcoding youtube channel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;some of the highlight of this youtube channel are their team have posted more 1200+ videos on each and every question of datastructure and algorithm in Java. &lt;br&gt;
Including every level of ds algo - like arrays, linkedlist, stack, queues, etc&lt;br&gt;
I personally love the way Sumeet Malik sir teaches you and you will definitely be his fan once you attend his single lecture, you're gonna fell in  love with DS Algo, I bet.&lt;/p&gt;

&lt;p&gt;They have team of few peoples who teach each and every concept in live sessions usually 10-15 minutes long on youtube and other videos are available in their playlist, you can check that out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But, It is just a youtube channel, how is that a structured way for technical interview??&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I said you will get each and every concept on youtube channel but they have one website where you can watch video topic wise and attempt the question simultaneously. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pepcoding.com/resources/"&gt;https://www.pepcoding.com/resources/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some features of this website&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;They have managed more than 1000 questions in &lt;br&gt;
difficulty wise level ( level-1 begineer , &lt;br&gt;
level-2 intermediate , level-3 Advanced)and &lt;br&gt;
that too topic wise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will get video solution and problem &lt;br&gt;
explanation of each and every problem.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you are preparing for placements and You &lt;br&gt;
know hindi, you'll thank me later about this.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The difference between theirs youtube channel and  website is that, On website you will get every thing very well organised, like you try to attempt a question and (if not able to attempt) then you get immediate solution to that.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I know there are people like me who are begineer, who are advised to solve every thing from GFG but dont know the initial process of how to start, how to plan things out, how to give time for one problem as begineer, intermediate and advance.&lt;br&gt;
You can try this out.&lt;/p&gt;

&lt;p&gt;So, I hope you guys would get benefitted from this, and wish you for best placements possible.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>datastructure</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>JavaScript Array Methods.</title>
      <author>Ajay Sharma</author>
      <pubDate>Sat, 17 Jul 2021 06:38:13 +0000</pubDate>
      <link>https://dev.to/ajaysharma12799/javascript-array-methods-94e</link>
      <guid>https://dev.to/ajaysharma12799/javascript-array-methods-94e</guid>
      <description>&lt;p&gt;Hello Everyone&lt;br&gt;
In This Article We Will be Seeing Different Array Methods.&lt;/p&gt;

&lt;p&gt;Follow Me on LinkedIn &lt;a href="https://www.linkedin.com/in/ajaysharma12799/"&gt;https://www.linkedin.com/in/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me on Github &lt;a href="https://www.github.com/ajaysharma12799/"&gt;https://www.github.com/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create Array Either Using Square Braces or Using new Array() Class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
let arr = new Array(length or element);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  Methods
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-pushelement"&gt;
  &lt;/a&gt;
  1. push(element)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.push(10); // Insert Element at Last of Array
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-pop"&gt;
  &lt;/a&gt;
  2. pop()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.pop(); // Remove Last Element of Array and Return It
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-shift"&gt;
  &lt;/a&gt;
  3. shift()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.shift(); // Remove First Element of Array and Return It
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-unshiftelement"&gt;
  &lt;/a&gt;
  4. unshift(element)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.unshift(20); // Insert Element at First Position in Array
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-length-not-a-method-but-a-property-"&gt;
  &lt;/a&gt;
  5. length ( Not a Method but a Property )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.length; // Return Length of Array
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-fillitem"&gt;
  &lt;/a&gt;
  6. fill(item)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;arr.fill(0); // Fill Entire Array With 0 or with Given Item
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-concatarray-can-take-single-array-or-multiple-arrays-and-always-return-new-array-"&gt;
  &lt;/a&gt;
  7. concat(array) ( Can Take Single Array or Multiple Arrays and Always Return New Array )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr1 = [1,2,3];
let newArray=arr1.concat([4,5,6]); // O/P = [1,2,3,4,5,6]

let arr2 = [1,2];
let newArray=arr2.concat([4,5], [7,8]); // O/P = [1,2,4,5,7,8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-find-take-a-function-which-execute-and-return-first-value-which-satisfies-condition"&gt;
  &lt;/a&gt;
  8. find() (Take a Function Which Execute and Return First Value Which Satisfies Condition)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
let found = arr.find(element =&amp;gt; element &amp;gt; 2);
console.log(found); // O/P = 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-findindex-take-a-function-which-execute-and-return-first-value-index-which-satisfies-condition"&gt;
  &lt;/a&gt;
  9. findIndex() (Take a Function Which Execute and Return First Value Index Which Satisfies Condition)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
let found = arr.findIndex(element =&amp;gt; element &amp;gt; 2);
console.log(found); // O/P = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-sort-sort-according-to-aplhabet-order"&gt;
  &lt;/a&gt;
  10. sort() // Sort According to Aplhabet Order
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,3,2,4,6];
arr.sort();
console.log(arr); // O/P = [1,2,3,4,5]

Note:- But This Method Will Not Sort Value Which is of 2 Digit, So We Need to Make Our Custom Function and Pass into Sort Method.

let arr = [1,4,2,45,6,7];
arr.sort((a,b) =&amp;gt; a-b); // Change a or b according to you if you want in Ascending or Descending Order.
console.log(arr); // O/P = [1,2,4,6,7,45];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-reverse"&gt;
  &lt;/a&gt;
  11. reverse()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,5,2,4,3];
let reversedArray = arr.reverse(); 
// Reverse Array and return Reference to Same Array
console.log(reversedArray); // O/P = [5,4,3,2,1]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#12-slicestart-end-extract-small-chunk-of-array-in-form-of-array-"&gt;
  &lt;/a&gt;
  12. slice(start, end) ( Extract Small Chunk of Array in Form of Array )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;start =&amp;gt; Starting Index From 0 and It is Included
end =&amp;gt; Ending Index Which is Length - 1 and It is Not Included

let arr = [1,2,3,4,5];
let slicedArray = arr.slice(0,3);
console.log(slicedArray); // O/P = [1,2,3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#13-splicestart-deletecount-optional-element-optional-remove-element-from-array-and-can-also-insert-new-elements-in-the-place-of-removed-element-"&gt;
  &lt;/a&gt;
  13. splice(start, deleteCount: Optional, element: Optional) ( Remove Element From Array and Can Also Insert New Elements In the Place of Removed Element )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
let splicedArray1 = arr.splice(2); 
console.log(splicedArray1);

/*
Will Remove Array Element From Index 2 to End and Return in Form of Array.
O/P = [3,4,5]
*/

let splicedArray2 = arr.splice(2, 2 10, 30);
console.log(splicedArray2);

/*
Will Remove Array Element From Index 2 to End and Return in Form of Array.
O/P = [3, 4] // Spliced Array
O/P = [1,2,10,30,5] // Original Array After Inserting New Element InPlace of Removed Element.
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#14-indexofelement-return-index-of-given-element-if-element-not-found-return-1-"&gt;
  &lt;/a&gt;
  14. indexOf(element); ( Return Index of Given Element, If Element Not Found Return -1 )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
console.log(arr.indexOf(5)); // O/P = 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#15-includeselement-startindex-optional-search-for-given-element-if-found-return-true-otherwise-false-"&gt;
  &lt;/a&gt;
  15. includes(element, startIndex: Optional) ( Search For Given Element If Found Return True Otherwise False )
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arr = [1,2,3,4,5];
console.log(arr.includes(5)); // O/P = true

console.log(arr.includes(2, 3)); // O/P = false, Because We Are Searching From Index 3 and 2 is Not Present in Array From Index 3.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Exploratory Data Analysis Using Python</title>
      <author>Mwenda Harun Mbaabu</author>
      <pubDate>Sat, 17 Jul 2021 06:37:22 +0000</pubDate>
      <link>https://dev.to/grayhat/exploratory-data-analysis-using-python-28h</link>
      <guid>https://dev.to/grayhat/exploratory-data-analysis-using-python-28h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6y54GtAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe53gtzrobrt8flibzs6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6y54GtAV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe53gtzrobrt8flibzs6.png" alt="Exploratory Data Analysis Using Python"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Exploratory data analysis is one of the most important step for any data science project. In today's session we will be performing data analysis of titanic dataset. To do so, we will be using the Pandas, Seaborn and Matplotlib library. You can download the dataset from &lt;a href="https://www.kaggle.com/c/titanic/data"&gt;Kaggle here&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-first-understand-what-is-exploratory-data-analysis"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let First Understand What Is Exploratory Data Analysis.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;According to wikipedia:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Exploratory data analysis, EDA is an approach to analyzing data sets to summarize their main characteristics, often with visual methods. A statistical model can be used or not, but primarily exploratory data analysis is for seeing what the data can tell us beyond the formal modelling or hypothesis testing task."  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exploratory data analysis in Python uses data visualisation to draw meaningful patterns and insights. It also involves the preparation of data sets for analysis by removing irregularities in the data. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note That:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If EDA is not done properly then it can hamper the further steps in the machine learning model building process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If done well, it may improve the efficiency of everything we do next.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-sourcing"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Data Sourcing&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is the very first step of Exploratory Data Analysis. Data Sourcing is the process of finding and loading the data into our system.&lt;/p&gt;

&lt;p&gt;1). Private Data&lt;/p&gt;

&lt;p&gt;2). Public Data&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Private Data.&lt;/strong&gt;&lt;br&gt;
As the name suggests, private data is given by private organisations. There are some security and privacy concerns attached to it. This type of data is used for mainly organisations internal analysis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public Data.&lt;/strong&gt;&lt;br&gt;
This type of Data is available to everyone. We can find this in government websites and public organizations etc. Anyone can access this data, we do not need any special permissions or approval.&lt;/p&gt;

&lt;p&gt;Famous Sources of Public Data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kaggle.com/"&gt;https://www.kaggle.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://archive.ics.uci.edu/ml/index.php"&gt;https://archive.ics.uci.edu/ml/index.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awesomedata/awesome-public-datasets"&gt;https://github.com/awesomedata/awesome-public-datasets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As i mentioned  earlier i will using public  data set from kaggle which can be obtained  from &lt;a href="https://www.kaggle.com/c/titanic/data"&gt;this&lt;/a&gt; link.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#storytelling"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Storytelling&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Let try to understand the dataset first. It has 12 columns and we will be using 11 features to predict the target variable which is ‘Survived’.&lt;/p&gt;

&lt;p&gt;The target variable is the one which we are trying to predict. Our first step would be to polish the features so that it can be used to input to a machine learning model which we can use to do our required task. &lt;/p&gt;

&lt;p&gt;To load the data into a dataframe we can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;titanic&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get idea about the dataset we can use the head function of the dataframe. It will return the first 5 rows. So executing the train.head() will give us the first 5 rows as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brkv6yGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3lnqow93o1j0hqcoi54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brkv6yGn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3lnqow93o1j0hqcoi54.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Similarly we can use the info and describe method to get detailed statistics about the data. &lt;/p&gt;

&lt;p&gt;One of the important objective data preprocessing and eda is to get rid of the null data. To do so we need to know where we have got null values. We shall use heatmap inorder to have an idea on this. To implement it seaborn library will be used. The following code snippet will create a heatmap for it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;yticklabels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cbar&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;viridis&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code would be as shown below: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K4MoDLKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu2atzx65ldnzhmoendz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K4MoDLKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eu2atzx65ldnzhmoendz.png" alt="heatmap plot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see from the diagram above the column &lt;strong&gt;‘Age’&lt;/strong&gt; and &lt;strong&gt;‘Cabin’&lt;/strong&gt; have got null values. While &lt;strong&gt;‘Cabin’&lt;/strong&gt; has huge amount null values, &lt;strong&gt;‘Age’&lt;/strong&gt; has moderate amount of null values.&lt;/p&gt;

&lt;p&gt;Here we would drop the ‘Cabin’ column as it has got mostly NULL values.&lt;/p&gt;

&lt;p&gt;To do so we will use the following code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;Cabin&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now comes the interesting part. We need to form a logic to impute the missing values of the &lt;strong&gt;‘Age’&lt;/strong&gt; column. We shall come back to it later after understanding the relation between &lt;strong&gt;‘Age’&lt;/strong&gt; and various other variables.&lt;/p&gt;

&lt;p&gt;Let us try to know if the dependent variable &lt;strong&gt;‘Survived’&lt;/strong&gt; has any relation with the variable &lt;strong&gt;‘Sex’&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To do so we would use factorplot. The following code snippet would return us the required figure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;Survived&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;Sex&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code is the following figure:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V8-gMiwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z7raerw15cfrl8ey9jh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V8-gMiwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8z7raerw15cfrl8ey9jh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inference:&lt;/strong&gt; As we all know from the movie as well as the story of titanic females were given priority while saving passengers. The above graph also tells us the same story. More number of male passengers have died than female ones.&lt;/p&gt;

&lt;p&gt;Similarly let us try to see how the variable &lt;strong&gt;‘Pclass’&lt;/strong&gt; is related to the variable &lt;strong&gt;‘Survived’.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To do so we would draw a &lt;strong&gt;countplot&lt;/strong&gt; using the following code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;Survived&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;Pclass&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code is the following figure: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--la0t0mvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sg6w73vs62unvjpi32k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la0t0mvP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sg6w73vs62unvjpi32k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inference:&lt;/strong&gt; The graph tells us that &lt;strong&gt;Pclass&lt;/strong&gt; 3 were more likely to be survived. It was meant for the richer people while Pclass 1 were the most likely victims which was relatively cheaper than class 3.&lt;/p&gt;

&lt;p&gt;Let us try to understand the column ‘Sibsip’ in detail. To do so we would again use the countplot from seaborn. The following code snippet would achieve the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;SibSp&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output of the above code is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FajJt-Gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q99hxb6w53dogxjb15xd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FajJt-Gv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q99hxb6w53dogxjb15xd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inference:&lt;/strong&gt; Here ‘SibSp’ variable refers to the number of sibling or spouse the person was accompanied with. We can see most of the people came alone.&lt;/p&gt;

&lt;p&gt;Lastly we have to figure out a way to fill the missing value of the variable &lt;strong&gt;‘Age’&lt;/strong&gt;. Here we segregated the &lt;strong&gt;‘Age’&lt;/strong&gt; variable according to the &lt;strong&gt;Pclass&lt;/strong&gt; variable as it was found out that &lt;strong&gt;‘Age’&lt;/strong&gt; and &lt;strong&gt;‘Pclass’&lt;/strong&gt; column were related.&lt;/p&gt;

&lt;p&gt;We would draw a boxplot that would tell us the mean value each of the &lt;strong&gt;Pclass&lt;/strong&gt;. To do so we can write the following code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Pclass'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'winter'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It would produce this graph: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgnewY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjnjrmhrnuual3yt7rte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYgnewY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjnjrmhrnuual3yt7rte.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From this graph we can find out the mean age for each of the &lt;strong&gt;Pclass&lt;/strong&gt;. &lt;br&gt;
We would impute the same for missing &lt;strong&gt;‘Age’&lt;/strong&gt; values. We can write a simple python function to get the same. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dealing With The Categorical Value:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have to convert the categorical values into numbers so that it can be used as an input to the model. To do so we would use the following code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;embark&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dummies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;Embarked&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;drop_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;sex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dummies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;Sex&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;drop_first&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly we have to drop all the columns that do not provide any meaningful information like &lt;strong&gt;‘Name’&lt;/strong&gt; and &lt;strong&gt;‘Ticket’&lt;/strong&gt; along with the previous &lt;strong&gt;‘Embarked’&lt;/strong&gt; and &lt;strong&gt;‘Sex’&lt;/strong&gt; as they have been replaced. Also we need add the newly created embark and sex column.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Sex'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Embarked'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Ticket'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;embark&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations , now our dataset is ready to be used as input to a machine learning model. This was a detailed analysis of the titanic dataset.&lt;/p&gt;

&lt;p&gt;You Can get the code full code here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google Colabs:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1UWyeKU8Hop9_yo5109Xuz78kuezlyt7u?usp=sharing"&gt;https://colab.research.google.com/drive/1UWyeKU8Hop9_yo5109Xuz78kuezlyt7u?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Hub:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Data-Science-East-AFrica/Exploratory-Data-Analysis-Using-Python/blob/main/Exploratory_Data_Analysis_Using_Python.ipynb"&gt;https://github.com/Data-Science-East-AFrica/Exploratory-Data-Analysis-Using-Python/blob/main/Exploratory_Data_Analysis_Using_Python.ipynb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;**More Resources on Data Analysis Using  Python:&lt;br&gt;
&lt;a href="https://github.com/LuxTechAcademy/Data-Cleaning-with-Python-and-Pandas"&gt;https://github.com/LuxTechAcademy/Data-Cleaning-with-Python-and-Pandas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get connected with me in twitter go to this link: &lt;a href="https://twitter.com/HarunMbaabu"&gt;https://twitter.com/HarunMbaabu&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>Laravel Image Text Watermarking Tutorial</title>
      <author>avani-trivedi</author>
      <pubDate>Sat, 17 Jul 2021 06:37:05 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/laravel-image-text-watermarking-tutorial-b9l</link>
      <guid>https://dev.to/avanitrivedi/laravel-image-text-watermarking-tutorial-b9l</guid>
      <description>&lt;p&gt;Hello Friends,&lt;/p&gt;

&lt;p&gt;Now let's see example of how to image text watermarking in laravel. This is a short guide on laravel if image text watermarking. We will use how to use image text watermarking in laravel. Here you will learn how to use image text watermarking in laravel. Let's get started with how to image text watermarking in laravel.&lt;/p&gt;

&lt;p&gt;More...&lt;br&gt;
&lt;a href="https://www.mywebtuts.com/blog/laravel-image-text-watermarking-tutorial"&gt;https://www.mywebtuts.com/blog/laravel-image-text-watermarking-tutorial&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
    </item>
    <item>
      <title>J.A.R.V.I.S</title>
      <author>Bolisetty Sujith</author>
      <pubDate>Sat, 17 Jul 2021 05:41:17 +0000</pubDate>
      <link>https://dev.to/bolisettysujith/j-a-r-v-i-s-l3a</link>
      <guid>https://dev.to/bolisettysujith/j-a-r-v-i-s-l3a</guid>
      <description>&lt;p&gt;A voice assistant which can be used to interact with your computer and also you have been seeing it in Iron man movies, but this JARVIS is not that much advanced as shown in movies. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#built-with-python"&gt;
  &lt;/a&gt;
  Built with: Python
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Demo video for &lt;strong&gt;&lt;em&gt;JARVIS&lt;/em&gt;&lt;/strong&gt; is available &lt;a href="https://docs.google.com/presentation/d/14w4dQUpqVOmGvAXEn8vYkHQUmMYU72wIb-AK0SWCWYk/edit?usp=sharing"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cool-functionalities-of-jarvis-"&gt;
  &lt;/a&gt;
  Cool functionalities of JARVIS 😎 :)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5kaccIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/FreshAnyHanumanmonkey-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5kaccIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/FreshAnyHanumanmonkey-size_restricted.gif" alt="JARVIS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have wrote code which you can use JARVIS in the following ways :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It can tell &lt;strong&gt;count of Covid-19 cases for each state in India&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can do &lt;strong&gt;Screen Recording with voice recording&lt;/strong&gt; stuff&lt;/li&gt;
&lt;li&gt;It can also do &lt;strong&gt;voice recording&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can access your &lt;strong&gt;mobile camera&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can access your &lt;strong&gt;web camera&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can read &lt;strong&gt;pdf's&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can check/find your &lt;strong&gt;Internet speed&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can tell your &lt;strong&gt;IP address&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can tell the &lt;strong&gt;latest news&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can check the &lt;strong&gt;system condition&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can send &lt;strong&gt;gmails&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can send &lt;strong&gt;whatsapp messages to Individual &amp;amp; group chats&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can play &lt;strong&gt;youtube songs&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;download youtube songs&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;download instagram profiles&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can find/tell your &lt;strong&gt;current location&lt;/strong&gt; where ever you are&lt;/li&gt;
&lt;li&gt;It can take &lt;strong&gt;screenshots&lt;/strong&gt; with a custom filename &lt;/li&gt;
&lt;li&gt;It can tell &lt;strong&gt;current time&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can tell &lt;strong&gt;current day&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can tell random &lt;strong&gt;progrmamming jokes&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can also tell your &lt;strong&gt;schedule&lt;/strong&gt; for each day&lt;/li&gt;
&lt;li&gt;It can be &lt;strong&gt;silent&lt;/strong&gt; for a certain number of time if we mention how much time we want it to be silent&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;search in wikipedia&lt;/strong&gt; and tell about it in 5 lines&lt;/li&gt;
&lt;li&gt;It can tell &lt;strong&gt;procedure/instructions&lt;/strong&gt; how to make something(Eg:How to make a cake)&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;search for information&lt;/strong&gt; in browser which we want&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;control system volumes&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;control system power activities&lt;/strong&gt;(Eg: shutdown, restart, sleep)&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;play music file&lt;/strong&gt; in a particular directory where the songs are present&lt;/li&gt;
&lt;li&gt;It can open your &lt;strong&gt;social media and open-source accounts&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open your &lt;strong&gt;college meeting accounts&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open your &lt;strong&gt;OTT platforms accounts&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open your &lt;strong&gt;all google apps&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open presentation tools like &lt;strong&gt;canva, google slide&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open &lt;strong&gt;shopping websites&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open &lt;strong&gt;all the URL links&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;It can open/close &lt;strong&gt;all the pc applications&lt;/strong&gt;(&lt;em&gt;NOTE&lt;/em&gt;: give correct path based on your OS)&lt;/li&gt;
&lt;li&gt;It can &lt;strong&gt;sleep until you say wake up&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Finally It &lt;strong&gt;can interact with you&lt;/strong&gt; and you can also add more commands if you want😎&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; python version &amp;gt;=3.6 and supported OS : Windows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#these-are-the-following-modules-used-in-jarvis-"&gt;
  &lt;/a&gt;
  These are the following modules used in JARVIS😉 :
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://pypi.org/project/SpeechRecognition/"&gt;SpeechRecognisation&lt;/a&gt; | &lt;a href="https://pypi.org/project/PyAudio/"&gt;PyAudio&lt;/a&gt; | &lt;a href="https://pypi.org/project/pyttsx3/"&gt;pyttsx3&lt;/a&gt; | &lt;a href="https://pypi.org/project/pywhatkit/"&gt;pywhatkit&lt;/a&gt; | &lt;a href="https://pypi.org/project/DateTime/"&gt;datetime&lt;/a&gt; | &lt;a href="https://pypi.org/project/wikipedia/"&gt;wikipedia&lt;/a&gt; | &lt;a href="https://pypi.org/project/pyjokes/"&gt;pyjokes&lt;/a&gt; | &lt;a href="https://pypi.org/project/opencv-python/"&gt;cv2&lt;/a&gt; | &lt;a href="https://pypi.org/project/cv2-tools/"&gt;cv2 tools&lt;/a&gt; | &lt;a href="https://pypi.org/project/requests/"&gt;requests&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://pypi.org/project/psutil/"&gt;psutil&lt;/a&gt; | &lt;a href="https://pypi.org/project/random2/"&gt;random&lt;/a&gt; | &lt;a href="https://pypi.org/project/instaloader/"&gt;instaloader&lt;/a&gt; | &lt;a href="https://pypi.org/project/PyAutoGUI/"&gt;PyAutoGUI&lt;/a&gt; | &lt;a href="https://pypi.org/project/PyPDF2/"&gt;PyPDF2&lt;/a&gt; | &lt;a href="https://pypi.org/project/bs4/"&gt;bs4&lt;/a&gt; | &lt;a href="https://pypi.org/project/PyQt5-Qt5/"&gt;PyQt5&lt;/a&gt; | &lt;a href="https://pypi.org/project/pywikihow/"&gt;pywikihow&lt;/a&gt; | &lt;a href="https://pypi.org/project/speedtest-cli/"&gt;speed test&lt;/a&gt; | &lt;a href="https://pypi.org/project/pytube/"&gt;pytube&lt;/a&gt; | &lt;a href="https://pypi.org/project/numpy/"&gt;numpy&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;| &lt;a href="https://pypi.org/project/phonenumbers/"&gt;phonenumbers&lt;/a&gt; | &lt;a href="https://pypi.org/project/folium/"&gt;folium&lt;/a&gt; | &lt;a href="https://pypi.org/project/opencage/"&gt;opencage&lt;/a&gt; | &lt;a href="https://pypi.org/project/Pillow/"&gt;pillow&lt;/a&gt; | &lt;a href="https://pypi.org/project/PyWave/"&gt;Pywave&lt;/a&gt; | &lt;a href="https://pypi.org/project/pywin32/"&gt;win32api&lt;/a&gt; | &lt;a href="https://docs.python.org/dev/library/msvcrt.html#msvcrt.kbhit"&gt;mscvrt&lt;/a&gt;| &lt;a href="https://pypi.org/project/covid-india/"&gt;covid&lt;/a&gt; | &lt;a href="https://pypi.org/project/urllib3/"&gt;urllib&lt;/a&gt; | &lt;a href="https://pypi.org/project/secure-smtplib/"&gt;smtplib&lt;/a&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-keys-used"&gt;
  &lt;/a&gt;
  API keys used
&lt;/h3&gt;

&lt;p&gt;To run this project you should need a API key for reading news. Register for your API key by clicking the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://newsapi.org/"&gt;NewsAPI&lt;/a&gt; : used for fetching news&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://opencagedata.com/"&gt;Open cage&lt;/a&gt; : to locate a place in maps&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#final-gui-of-jarvis"&gt;
  &lt;/a&gt;
  FINAL GUI of JARVIS😎
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pUqVSAKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knkpr3dhsywyf4umgmi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pUqVSAKE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knkpr3dhsywyf4umgmi.gif" alt="FinalGUI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#motivation-for-this-project"&gt;
  &lt;/a&gt;
  Motivation for this project🙃
&lt;/h3&gt;

&lt;p&gt;Due to covid19 in my house I'm in a separate room, without talking with anyone, so thought to talk with my laptop which I will use everyday, and came up with this project.&lt;/p&gt;

&lt;p&gt;To know more about this post or contribute to this project or use this J.A.R.V.I.S feel free to visit the &lt;a href="https://github.com/BolisettySujith/J.A.R.V.I.S"&gt;J.A.R.V.I.S&lt;/a&gt; GitHub repo😉.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you🙃
&lt;/h3&gt;

</description>
      <category>python</category>
      <category>ai</category>
      <category>voiceassistant</category>
    </item>
    <item>
      <title>7 Essential Array Methods  In JavaScript (2021)</title>
      <author>Jatin Kumar</author>
      <pubDate>Sat, 17 Jul 2021 05:02:08 +0000</pubDate>
      <link>https://dev.to/jatinkrr/7-essential-array-methods-in-javascript-you-need-2021-m73</link>
      <guid>https://dev.to/jatinkrr/7-essential-array-methods-in-javascript-you-need-2021-m73</guid>
      <description>&lt;p&gt;Looking for the easiest way to add, remove or find elements from an array? After reading this article you'll be able to do basic JS operations related to an array in just one line. Each method is explained with a code example.&lt;/p&gt;

&lt;p&gt;Overall there are several methods available in the JavaScript ecosystem. This article will cover the basic 7 methods through which you will be able to add, remove or find elements from an array in no time.&lt;/p&gt;

&lt;p&gt;Let's get started by assuming five vegetable emojis in an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2rghoBP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpco78bn6zmc4gg4f8u7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2rghoBP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpco78bn6zmc4gg4f8u7.png" alt="Initial state of vegetables array"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#push"&gt;
  &lt;/a&gt;
  PUSH
&lt;/h2&gt;

&lt;p&gt;The push method adds an element to the last position of an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-XJbw8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rezxg21dyq24696i4ya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-XJbw8x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rezxg21dyq24696i4ya.png" alt="push method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The push() can be used with apply() to merge arrays.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NCzSOfup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9bqypdq0z5dipubwlkg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NCzSOfup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9bqypdq0z5dipubwlkg.png" alt="merge two or more arrays with push method using apply from Array.prototype"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unshift"&gt;
  &lt;/a&gt;
  UNSHIFT
&lt;/h2&gt;

&lt;p&gt;The unshift method adds an element to the first position of an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0r_LwUnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bh3r24vczqepwchjrji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0r_LwUnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bh3r24vczqepwchjrji.png" alt="add elements using unshift method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The unshift() can be used to add a nested array at the beginning of an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88fXUtc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v84nlyb0vbf8kbh4mkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88fXUtc6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v84nlyb0vbf8kbh4mkp.png" alt="unshift method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pop"&gt;
  &lt;/a&gt;
  POP
&lt;/h2&gt;

&lt;p&gt;The pop method removes the last element from an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TJVXATSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bfbh5il3n1o8370e209.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TJVXATSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bfbh5il3n1o8370e209.png" alt="pop method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using pop() method on an empty array will returns undefined&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concat"&gt;
  &lt;/a&gt;
  CONCAT
&lt;/h2&gt;

&lt;p&gt;The concat method can merge multiple arrays and returns a single combined array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cHUweSg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st5edtb6ets3uz40en81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cHUweSg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/st5edtb6ets3uz40en81.png" alt="concat method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The conact() can be used to merge any type of object in an array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shift"&gt;
  &lt;/a&gt;
  SHIFT
&lt;/h2&gt;

&lt;p&gt;The shift method removes the first element from an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LHtyXLQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvar6026zpjof7bvpufq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LHtyXLQ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvar6026zpjof7bvpufq.png" alt="shift method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The shift() can be used to iterate through the array while printing the results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--upvyYcPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nnukrsmkvecp2odss8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--upvyYcPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nnukrsmkvecp2odss8u.png" alt="Iterate over an array and remove all the elements using the shift method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#indexof"&gt;
  &lt;/a&gt;
  INDEXOF
&lt;/h2&gt;

&lt;p&gt;The indexOf method returns the first position of an element which can be found in an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iILW8BCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8gnx9xuig1xqyspllln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iILW8BCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8gnx9xuig1xqyspllln.png" alt="indexOf method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This IndexOf() can be used to find occurrences of an element in an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_5PLm_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a86z13jnw41khqhh19xx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_5PLm_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a86z13jnw41khqhh19xx.png" alt="indexOf method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lastindexof"&gt;
  &lt;/a&gt;
  LASTINDEXOF
&lt;/h2&gt;

&lt;p&gt;The lastIndexOf method returns the last position of an element which can be found in an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrNiTfDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcts8zo7vkgo8atu86yb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrNiTfDh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcts8zo7vkgo8atu86yb.png" alt="lastIndexOfcode method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This lastIndexOf() can be used to find occurrences of an element in an array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSiVEd7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27rkgm0gpy2u6dufedvr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSiVEd7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27rkgm0gpy2u6dufedvr.png" alt="find occurances using lastIndexOf method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you'll be able to perform basic operations using array methods. 😎&lt;/p&gt;




&lt;p&gt;Sign up for the Medium newsletter to get notified about the next blog JavaScript posts and possible future giveaways&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eepurl.com/hD0nTT"&gt;Medium Newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/jatinsfeed"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="//www.linkedin.com/in/jatinkrr"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Happy coding!&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>programming</category>
      <category>bestofdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Ember Times - Issue No. 184</title>
      <author>The Ember Times</author>
      <pubDate>Sat, 17 Jul 2021 04:12:09 +0000</pubDate>
      <link>https://dev.to/embertimes/the-ember-times-issue-no-184-4ic6</link>
      <guid>https://dev.to/embertimes/the-ember-times-issue-no-184-4ic6</guid>
      <description>&lt;p&gt;👋 Emberistas! 🐹&lt;/p&gt;

&lt;p&gt;The Road to Ember 4.0 Polaris, introducing a11y-disabled-modifier, Emberliners talks, and get your update for ember-engines 0.8.18.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-road-to-ember-40-polaris-%F0%9F%9B%A3"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.emberjs.com/the-road-to-ember-4-0/"&gt;The Road to Ember 4.0 Polaris 🛣&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/mixonic"&gt;Matthew Beale (@mixonic)&lt;/a&gt; from the Ember Core Framework and Steering Committee &lt;a href="https://emberjs.com/teams/"&gt;teams&lt;/a&gt;, writes about &lt;a href="https://blog.emberjs.com/the-road-to-ember-4-0/"&gt;The Road to Ember 4.0&lt;/a&gt; on the official Ember blog.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Announcing Ember 4.0&lt;/strong&gt;: Ember 4.0 will be released around September 20th. Ember 4.4 will be the first LTS candidate of the 4.x series.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Whats in a 4.0?&lt;/strong&gt;: As a major version of Ember, there are no new features. This sections discusses the removal of deprecated APIs. For example, &lt;code&gt;Ember.Logger&lt;/code&gt; is removed in favor of native console APIs. Also, &lt;code&gt;sendAction&lt;/code&gt; is removed in favor of calling closure actions like any other callback.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Planning your upgrade to 4.0&lt;/strong&gt;: Consider using the &lt;a href="https://github.com/mixonic/ember-cli-deprecation-workflow"&gt;ember-cli-deprecation-workflow&lt;/a&gt; addon as part of your upgrade process.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Contributing to Ember 4.0&lt;/strong&gt;: Join us on &lt;a href="https://discord.com/invite/emberjs"&gt;Discord&lt;/a&gt; in the #dev-ember-js, #dev-ember-data, #dev-ember-cli, or #dev-ember-learning channels to find out how you can contribute.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please check out the &lt;a href="https://blog.emberjs.com/the-road-to-ember-4-0/"&gt;detailed post&lt;/a&gt; in full for more details on how you can prepare for your upgrade!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We're looking forward to working with the community on Ember 4.0 and on the opportunities beyond it. As always we appreciate your support, your trust, and our common partnership.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#introducing-the-a11ydisabledmodifier-modifier"&gt;
  &lt;/a&gt;
  &lt;a href="https://discord.com/channels/480462759797063690/480499624663056390/842592654696382474"&gt;Introducing the a11y-disabled-modifier Modifier 💚&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Inspired by the &lt;a href="https://css-tricks.com/"&gt;CSSTricks&lt;/a&gt; blog post on &lt;a href="https://css-tricks.com/making-disabled-buttons-more-inclusive/"&gt;Making Disabled Buttons More Inclusive&lt;/a&gt;, &lt;a href="https://github.com/chriskrycho/"&gt;Chris Krycho (@chriskrycho)&lt;/a&gt; created the &lt;a href="https://github.com/chriskrycho/a11y-disabled-modifier"&gt;a11y-disabled-modifier&lt;/a&gt; addon.&lt;/p&gt;

&lt;p&gt;The blog post argues against the &lt;code&gt;disabled&lt;/code&gt; attribute in &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; in favor of the &lt;code&gt;aria-disabled&lt;/code&gt; attribute since it does not prevent clicking and focusing on the button which is useful when you are navigating the site using the Tab key.&lt;/p&gt;

&lt;p&gt;This modifier implements accessible and usable button-disabling by adding &lt;code&gt;aria-disabled="true"&lt;/code&gt; to the target element when the &lt;code&gt;when&lt;/code&gt; named argument is truthy. It will also stop any clicks on the button from propagating and ensures form submission does not trigger.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="err"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;on&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;submit&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="na"&gt;this.submit&lt;/span&gt;&lt;span class="err"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;some text: &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;'submit'&lt;/span&gt; &lt;span class="err"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;disabled&lt;/span&gt; &lt;span class="na"&gt;when=&lt;/span&gt;&lt;span class="s"&gt;this.isInvalid}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out today by running &lt;code&gt;ember install a11y-disabled-modifier&lt;/code&gt; on your Ember app!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ember-berlin-meetup-with-4-talks-%F0%9F%93%BD"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?v=c-sWTZJ6nlM&amp;amp;ab_channel=Pusherl"&gt;Ember Berlin Meetup with 4 talks 📽&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Four amazing talks from our friends at &lt;a href="https://www.meetup.com/Ember-js-Berlin/"&gt;Emberliners meetups&lt;/a&gt; are now available for binge watching!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First up, is &lt;a href="https://www.youtube.com/watch?v=c-sWTZJ6nlM&amp;amp;t=540s"&gt;Embroider: from zero to route splitting in 3.5 weeks&lt;/a&gt; by &lt;a href="https://github.com/bendemboski"&gt;Ben Demboski (@bendemboski)&lt;/a&gt; which explores what it takes to update a large desktop Ember app to use Embroider.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/Agathebadia"&gt;Agathe Badia (@Agathebadia)&lt;/a&gt; shows her fascinating work on creating a &lt;a href="https://www.youtube.com/watch?v=c-sWTZJ6nlM&amp;amp;t=2156s"&gt;Colorblindness emulator with Ember, an A11y project&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/mydea"&gt;Francesco Novy (@mydea)&lt;/a&gt; presents &lt;a href="https://www.youtube.com/watch?v=c-sWTZJ6nlM&amp;amp;t=3480s"&gt;You could get used to this: Managing GraphQL data&lt;/a&gt; - a great primer on GraphQL in Ember.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lastly, &lt;a href="https://github.com/levelbossmike"&gt;Michael Klein (@levelbossmike)&lt;/a&gt; and &lt;a href="https://github.com/pangratz"&gt;Clemens Mueller (@pangratz)&lt;/a&gt; discuss &lt;a href="https://www.youtube.com/watch?v=c-sWTZJ6nlM&amp;amp;t=5118s"&gt;On the development of reactive systems with Ember.js&lt;/a&gt;, providing an insightful view on approaching Ember development as a reactive system using &lt;a href="https://ember-statecharts.com/"&gt;ember-statecharts&lt;/a&gt; addon.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These talks give a great snapshot lots of exciting developments happening around the Ember community 💗.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#emberengines-v0818-is-out"&gt;
  &lt;/a&gt;
  &lt;a href="https://twitter.com/MVillander/status/1406367740668092420"&gt;ember-engines v0.8.18 is out! 🎉&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you're already using &lt;a href="https://ember-engines.com/"&gt;ember-engines&lt;/a&gt; or plan on using it, be sure to &lt;a href="https://twitter.com/MVillander/status/1406367740668092420"&gt;upgrade your dependency&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;latest patch release&lt;/strong&gt; of ember-engines not only includes bug fixes for older Ember apps, but also several build fixes and new deprecation warnings to help up you keep your application up-to-date.&lt;/p&gt;

&lt;p&gt;A huge thank you goes to &lt;a href="https://github.com/thoov"&gt;Travis Hoover (@thoov)&lt;/a&gt;, &lt;a href="https://github.com/bertdeblock"&gt;Bert De Block (@bertdeblock)&lt;/a&gt;, &lt;a href="https://github.com/villander"&gt;Michael Villander (@villander)&lt;/a&gt; and &lt;a href="https://github.com/rwjblue"&gt;Robert Jackson (@rwjblue)&lt;/a&gt; for their work on the project!&lt;/p&gt;

&lt;p&gt;Check out the full list of recent updates in the following &lt;strong&gt;changelogs&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ember-engines/ember-engines/releases/tag/v0.8.16"&gt;v0.8.16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ember-engines/ember-engines/releases/tag/v0.8.17"&gt;v0.8.17&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ember-engines/ember-engines/releases/tag/v0.8.18"&gt;v0.8.18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#contributors-corner"&gt;
  &lt;/a&gt;
  &lt;a href="https://guides.emberjs.com/release/contributing/repositories/"&gt;Contributors' corner 👏&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This week we'd like to thank &lt;a href="https://github.com/nlfurniss" rel="noopener noreferrer"&gt;Nathaniel Furniss (@nlfurniss)&lt;/a&gt;, &lt;a href="https://github.com/locks" rel="noopener noreferrer"&gt;Ricardo Mendes (@locks)&lt;/a&gt;, &lt;a href="https://github.com/chrisrng" rel="noopener noreferrer"&gt;Chris Ng (@chrisrng)&lt;/a&gt;, &lt;a href="https://github.com/ijlee2" rel="noopener noreferrer"&gt;Isaac Lee (@ijlee2)&lt;/a&gt;, &lt;a href="https://github.com/scalvert" rel="noopener noreferrer"&gt;Steve Calvert (@scalvert)&lt;/a&gt;, &lt;a href="https://github.com/mixonic" rel="noopener noreferrer"&gt;Matthew Beale (@mixonic)&lt;/a&gt;, &lt;a href="https://github.com/fozy81" rel="noopener noreferrer"&gt;Tim (@fozy81)&lt;/a&gt;, &lt;a href="https://github.com/SergeAstapov" rel="noopener noreferrer"&gt;Sergey Astapov (@SergeAstapov)&lt;/a&gt;, &lt;a href="https://github.com/mansona" rel="noopener noreferrer"&gt;Chris Manson (@mansona)&lt;/a&gt;, &lt;a href="https://github.com/tcouloumy" rel="noopener noreferrer"&gt;@tcouloumy&lt;/a&gt;, &lt;a href="https://github.com/kennethlarsen" rel="noopener noreferrer"&gt;Kenneth Larsen (@kennethlarsen)&lt;/a&gt;, &lt;a href="https://github.com/jayjayjpg" rel="noopener noreferrer"&gt;Jesse Jordan (@jayjayjpg)&lt;/a&gt;, &lt;a href="https://github.com/amyrlam" rel="noopener noreferrer"&gt;Amy Lam (@amyrlam)&lt;/a&gt;, and &lt;a href="https://github.com/wondersloth" rel="noopener noreferrer"&gt;Matthew Edwards (@wondersloth)&lt;/a&gt; for their contributions to Ember and related repositories! 💖&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-us"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScqu7Lw_9cIkRtAiXKitgkAo4xX_pV1pdCfMJgIr6Py1V-9Og/viewform"&gt;Connect with us 🤓&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xCwKNRAu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nama5ksixqhan750nhek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xCwKNRAu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nama5ksixqhan750nhek.png" alt="Office Hours Tomster mascot"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Wondering about something related to Ember, Ember Data, Glimmer, or addons in the Ember ecosystem, but don't know where to ask? Readers’ Questions are just for you!&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Submit your own&lt;/strong&gt; short and sweet &lt;strong&gt;question&lt;/strong&gt; under &lt;a href="https://bit.ly/ask-ember-core"&gt;bit.ly/ask-ember-core&lt;/a&gt;. And don’t worry, there are no silly questions, we appreciate them all - promise! 🤞&lt;/p&gt;


&lt;p&gt;Want to write for the Ember Times? Have a suggestion for next week's issue? Join us at &lt;a href="https://discordapp.com/channels/480462759797063690/485450546887786506"&gt;#support-ember-times&lt;/a&gt; on the &lt;a href="https://discord.gg/emberjs"&gt;Ember Community Discord&lt;/a&gt; or ping us &lt;a href="https://twitter.com/embertimes"&gt;@embertimes&lt;/a&gt; on Twitter.&lt;/p&gt;


&lt;p&gt;Keep on top of what's been going on in Emberland this week by subscribing to our &lt;a href="https://embertimes.substack.com/"&gt;e-mail newsletter&lt;/a&gt;! You can also find our posts on the &lt;a href="https://blog.emberjs.com/tag/newsletter"&gt;Ember blog&lt;/a&gt;. See you in two weeks!&lt;/p&gt;




&lt;p&gt;That's another wrap! ✨&lt;/p&gt;

&lt;p&gt;Be kind,&lt;/p&gt;

&lt;p&gt;Chris Ng, Jesse Jordan, Tim Foster, Amy Lam, and the Learning Team&lt;/p&gt;

</description>
      <category>ember</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Challenge #3: Using Offline Tools to speed up dev in Serverless</title>
      <author>Raphael Jambalos</author>
      <pubDate>Sat, 17 Jul 2021 04:07:28 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/challenge-3-using-offline-tools-to-speed-up-dev-in-serverless-2hp8</link>
      <guid>https://dev.to/awscommunity-asean/challenge-3-using-offline-tools-to-speed-up-dev-in-serverless-2hp8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#quick-recap"&gt;
  &lt;/a&gt;
  Quick Recap
&lt;/h2&gt;

&lt;p&gt;In the first two challenges, we created a &lt;a href="https://dev.to/raphael_jambalos/challenge-1-create-a-simple-app-in-lambda-dynamodb-serverless-framework-of6"&gt;basic API-based loyalty application&lt;/a&gt; and we &lt;a href="https://dev.to/raphael_jambalos/challenge-2-add-sqs-s3-event-triggers-for-lambda-apps-3ian"&gt;upgraded our app to handle batch creating loyalty cards by uploading files to S3&lt;/a&gt;. Each restaurant under our company can now upload a CSV of old loyalty cards and have it batch-created in the system instead of filling up the form one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-next-challenge"&gt;
  &lt;/a&gt;
  Your Next Challenge
&lt;/h2&gt;

&lt;p&gt;We have shifted 90% of our old paper-based loyalty cardholders to our new upgraded system with your CSV upload module. Your manager is happy, and so are your customers. But deep down, you know something is wrong. You are not satisfied with your work.&lt;/p&gt;

&lt;p&gt;You write code, but there's no way to test locally. You have to use &lt;code&gt;serverless deploy&lt;/code&gt; every time. Need to correct that syntax error? Deploy first and invoke manually. It takes you 3-5 minutes to get feedback for such a small change. It's driving you nuts!&lt;/p&gt;

&lt;p&gt;In this challenge, we will introduce three ways to test locally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specification"&gt;
  &lt;/a&gt;
  Specification
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-use-serverless-offline"&gt;
  &lt;/a&gt;
  (1) Use Serverless Offline
&lt;/h3&gt;

&lt;p&gt;In the past two challenges, we created an API webserver, but we haven't been able to test our APIs locally. We deployed straight away. In frameworks like Flask and Ruby on Rails, we usually get to work with a local web server before deploying. &lt;/p&gt;

&lt;p&gt;Using serverless offline, upgrade your serverless.yml so that you can run a local version of your API and test your API via &lt;code&gt;localhost:8080&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can learn more about serverless offline &lt;a href="https://www.serverless.com/plugins/serverless-offline-python"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-serverless-invoke-local"&gt;
  &lt;/a&gt;
  (2) serverless invoke local
&lt;/h3&gt;

&lt;p&gt;This command lets you invoke your Lambda function locally through an emulator that comes prepackaged with Serverless Framework. You simply run the command below every time you want to trigger your function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;serverless invoke &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nt"&gt;--function&lt;/span&gt; functionName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command is pretty straightforward to use when testing out lambda functions that don't need you to send any input (i.e the Get All cards endpoints). But what if you need to send the card information to create a card?&lt;/p&gt;

&lt;p&gt;First, we create a file inside a mock file inside the mocks folder (let's name it mocks/create_card.json):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;CardName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Raphael Jambalos&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;CardNumber&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;4386290100000200&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;}"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's refer to it by adding the &lt;code&gt;--path&lt;/code&gt; parameter to our earlier command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;serverless invoke &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nt"&gt;--function&lt;/span&gt; create_card &lt;span class="se"&gt;\&lt;/span&gt;
                        &lt;span class="nt"&gt;--path&lt;/span&gt; mocks/create_card.json &lt;span class="se"&gt;\&lt;/span&gt;
                        &lt;span class="nt"&gt;--region&lt;/span&gt; ap-southeast-1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now be able to test your functions.&lt;/p&gt;

&lt;p&gt;I think one question is that when do you use serverless invoke over serverless offline. I usually use the &lt;code&gt;invoke&lt;/code&gt; command when the application I'm developing is not API-based - when lambda functions are triggered by other event sources like scheduled triggers or S3 file uploads.&lt;/p&gt;

&lt;p&gt;You can learn more about it here: &lt;a href="https://www.serverless.com/framework/docs/providers/aws/cli-reference/invoke-local/"&gt;https://www.serverless.com/framework/docs/providers/aws/cli-reference/invoke-local/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-using-dynamodb-offline"&gt;
  &lt;/a&gt;
  (3) Using DynamoDB Offline
&lt;/h3&gt;

&lt;p&gt;Even if we use serverless offline and serverless invoke local to run our functions locally, we are still referring to AWS resources in the cloud (such as the DynamoDB table that stores the loyalty cards we created). While it might not be a huge inconvenience to continue using DynamoDB in the cloud, it comes with a few caveats:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we have to deploy every time our schema changes in DynamoDB&lt;/li&gt;
&lt;li&gt;we incur charges in our AWS account (for most cases, this should be below 5USD. Except if you're doing stress testing - loading and reading thousands of rows of data often)&lt;/li&gt;
&lt;li&gt;if there's no internet, we cannot connect to the DynamoDB table (and hence, development stops)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this subchallenge, upgrade your serverless.yml file to use DynamoDb offline when you are developing. Install and run the DynamoDB client in your local machine. It should give you a local endpoint (i.e localhost:5000) and you should connect you serverless application there (by manipulating your serverless.yml)&lt;/p&gt;

&lt;p&gt;You can learn more about it here: &lt;a href="https://www.serverless.com/plugins/serverless-dynamodb-local"&gt;https://www.serverless.com/plugins/serverless-dynamodb-local&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-have-done"&gt;
  &lt;/a&gt;
  What we have done
&lt;/h2&gt;

&lt;p&gt;We used tools that allowed us to develop our serverless application with local tools. This speeds up development because we no longer have to communicate with AWS services in the cloud as we develop. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-off-your-work"&gt;
  &lt;/a&gt;
  Show off your work!
&lt;/h2&gt;

&lt;p&gt;Comment a screencap of your work below. Or better yet, create a blog post here in dev.to explaining how you did it. &lt;/p&gt;

&lt;p&gt;If you have any questions or are stuck somewhere, comment below or send me a pm, and I'd be happy to help you.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@glenncarstenspeters?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Glenn Carstens-Peters&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/computer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>aws</category>
      <category>python</category>
    </item>
    <item>
      <title>A thing that works when it shouldn't is just as bad as a thing that doesn’t work when it should (100 Bytes Of Wisdom: Day 64)</title>
      <author>Sam Jarman 👨🏼‍💻</author>
      <pubDate>Sat, 17 Jul 2021 03:50:03 +0000</pubDate>
      <link>https://dev.to/samjarman/a-thing-that-works-when-it-shouldn-t-is-just-as-bad-as-a-thing-that-doesn-t-work-when-it-should-100-bytes-of-wisdom-day-64-2a44</link>
      <guid>https://dev.to/samjarman/a-thing-that-works-when-it-shouldn-t-is-just-as-bad-as-a-thing-that-doesn-t-work-when-it-should-100-bytes-of-wisdom-day-64-2a44</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YtL1SCAu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1nefcd0lhnzs71tt98q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YtL1SCAu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1nefcd0lhnzs71tt98q.png" alt="A thing that works when it shouldn't is just as bad as a thing that doesn’t work when it should"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not understanding what is going on with some code or a system you're working on is fundamentally bad. Often, this means bugs, but sometimes it means things work but you don't know how. It's incredibly tempting to call it a day there and finish on that, but a truly disciplined engineer looks further and figures out what is actually going on. You learn more that way and next time you come to that code or system, you're better equipped to change it.&lt;/p&gt;

&lt;p&gt;Heads up: As with any terse bit of advice, there will be exceptions of course, and subtleties and nuance that can't possibly be captured in a Byte of Wisdom. This has been what I've experienced, I'd love to hear yours in the comments too!&lt;/p&gt;

&lt;p&gt;You can catch up with all the other bytes at &lt;a href="http://bytesofwisdom.com/"&gt;http://bytesofwisdom.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>journey</category>
      <category>advice</category>
    </item>
    <item>
      <title>Spring Boot Boilerplate for Your Next Projects</title>
      <author>Hiep Le</author>
      <pubDate>Sat, 17 Jul 2021 03:04:34 +0000</pubDate>
      <link>https://dev.to/hieptl/spring-boot-boilerplate-for-your-next-projects-3ccj</link>
      <guid>https://dev.to/hieptl/spring-boot-boilerplate-for-your-next-projects-3ccj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The source code and the content of this article will be updated frequently. For this reason, please follow my article and my Github in order to get update-to-date information.&lt;/p&gt;

&lt;p&gt;The last updated date: 17/07/2021.&lt;/p&gt;

&lt;p&gt;Please give me Github ⭐ if you like the project. Pull requests are highly appreciated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Github link: &lt;a href="https://github.com/hieptl/spring-boot-boilerplate"&gt;https://github.com/hieptl/spring-boot-boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn about React. I also have an article about &lt;strong&gt;Learning React By Building Netflix&lt;/strong&gt;: &lt;a href="https://dev.to/hieptl/learn-react-by-building-netflix-1127"&gt;https://dev.to/hieptl/learn-react-by-building-netflix-1127&lt;/a&gt;. The article will explain React concepts in details. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A boilerplate/starter project for quickly building RESTful APIs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spring Boot&lt;/li&gt;
&lt;li&gt;Spring Data JPA.&lt;/li&gt;
&lt;li&gt;Spring Security / JWT.&lt;/li&gt;
&lt;li&gt;Swagger.&lt;/li&gt;
&lt;li&gt;Mapstruct (converting entities to dtos and vice versa).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;In this project, I am using MySQL. However, the boilerplate will work well with different databases including SQL databases and NoSQL databases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;In the most cases you need to have Maven and JDK8+. The best way to run the sample applications is with IDEs like IntelliJ IDEA or Eclipse. &lt;/p&gt;

&lt;p&gt;In order to run the project, you need to follow the below steps: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step 1: Clone the project.&lt;/li&gt;
&lt;li&gt;Step 2: Access to your MySQL database and run the &lt;strong&gt;minimalist_db_boilerplate.sql&lt;/strong&gt; file.&lt;/li&gt;
&lt;li&gt;Step 3: cd to &lt;strong&gt;spring-boot-boilerplate&lt;/strong&gt; folder and run &lt;strong&gt;mvn clean package -DskipTests&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Step 4: Run the jar file in the &lt;strong&gt;target&lt;/strong&gt; folder with &lt;strong&gt;jar -jar target/spring-boot-boilerplate-0.0.1-SNAPSHOT.jar&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project Structure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;config&lt;/strong&gt;: stores configuration of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;controller&lt;/strong&gt;: stores controllers of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dto&lt;/strong&gt;: stores data transfer objects of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;exception&lt;/strong&gt;: stores custom exception of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;mapper&lt;/strong&gt;: stores mappers of the project. Mappers will be used to convert to entities and vice versa.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;model&lt;/strong&gt;: stores models of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;repository&lt;/strong&gt;: stores repositories of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;response&lt;/strong&gt;: stores response of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;security&lt;/strong&gt;: stores configuration about security of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;service&lt;/strong&gt;: stores services of the project.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;utils&lt;/strong&gt;: stores common functions that could be used in different placces in the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks and Best Regards,&lt;br&gt;
Hiep&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>java</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JavaScript question #Day 7</title>
      <author>Sooraj S</author>
      <pubDate>Sat, 17 Jul 2021 02:53:43 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-7-50ai</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-7-50ai</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lydia&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hallie&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullName&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;SyntaxError&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;Lydia Hallie&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D: &lt;code&gt;undefined&lt;/code&gt; &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;p&gt;In JavaScript, functions are objects, and therefore, the method &lt;code&gt;getFullName&lt;/code&gt; gets added to the constructor function object itself. For that reason, we can call &lt;code&gt;Person.getFullName()&lt;/code&gt;, but &lt;code&gt;member.getFullName&lt;/code&gt; throws a &lt;code&gt;TypeError&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you want a method to be available to all object instances, you have to add it to the prototype property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>node</category>
      <category>react</category>
    </item>
    <item>
      <title>Getting Started with JavaScript - Ultimate Free Resources</title>
      <author>Kritika</author>
      <pubDate>Sat, 17 Jul 2021 01:35:24 +0000</pubDate>
      <link>https://dev.to/kritikapattalam/getting-started-with-javascript-ultimate-free-resources-59p6</link>
      <guid>https://dev.to/kritikapattalam/getting-started-with-javascript-ultimate-free-resources-59p6</guid>
      <description>&lt;p&gt;In recent times few friends reached out to me, asking for links to resources that can help them kickstart into learning JavaScript/ES6. I have curated a list of links which are completely free that will help anyone in their journey towards learning JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;MDN (Mozilla) JavaScript Reference is the main documentation with examples and other information. It’s great to get in-depth information about individual language functions, methods etc.&lt;/p&gt;

&lt;p&gt;One can find it at  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript."&gt;MDN JavaScript Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compatibility-tables"&gt;
  &lt;/a&gt;
  Compatibility tables
&lt;/h3&gt;

&lt;p&gt;Since JavaScript is a developing language, new features get added regularly and some of them might not be supported by all browsers or engines. The below sites help you in identifying which features are supported by what browser/engine or version of a browser etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://caniuse.com"&gt;http://caniuse.com&lt;/a&gt; – per-feature tables of support, e.g. to see which engines support modern cryptography functions: &lt;a href="http://caniuse.com/#feat=cryptography"&gt;http://caniuse.com/#feat=cryptography&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://kangax.github.io/compat-table"&gt;https://kangax.github.io/compat-table&lt;/a&gt; – a table with language features and engines that support those or don’t support.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ides"&gt;
  &lt;/a&gt;
  IDE's
&lt;/h3&gt;

&lt;p&gt;Some of my favorite IDE's I use for development I have listed below&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://notepad-plus-plus.org/"&gt;Notepad ++&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#tutorials-courses"&gt;
  &lt;/a&gt;
  Tutorials / Courses
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript."&gt;MDN JavaScript Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript.info/"&gt;The Modern Javascript Tutorial&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://scotch.io/courses/getting-started-with-javascript-for-web-development"&gt;Getting Started with JavaScript for Web Development Courses&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://es6-features.org/"&gt;ES6-features.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javascripttutorial.net/"&gt;JavaScript Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javascripttutorial.net/es6/"&gt;ES6 Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrimba.com/learn/introtoes6"&gt;Intro to ES6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/es6/index.htm"&gt;Tutorials Point - ES6 for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.java5cript.com/"&gt;JavaScript Free Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#videos-courses"&gt;
  &lt;/a&gt;
  Videos/ Courses
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PkZNo7MFNFg&amp;amp;list=PLWKjhJtqVAbleDe3_ZA8h3AO2rXar-q2V&amp;amp;ab_channel=freeCodeCamp.orgfreeCodeCamp.orgVerified"&gt;Learn JavaScript - Full Course for Beginners - Video By freecodecamp.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/es6-javascript-improved--ud356"&gt;ES6 - JavaScript Improved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/javascript-essentials/"&gt;Javascript Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/ecmascript2015/"&gt;Learning ECMAScript The Next Generation of Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#books"&gt;
  &lt;/a&gt;
  Books
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://superherojs.com/"&gt;Understanding ECMAScript 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andersonguelphjs.github.io/OReilly_JavaScript_The_Good_Parts_May_2008.pdf"&gt;JavaScript the Good Parts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://speakingjs.com/es5/index.html"&gt;Speaking JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#learn-javascript-by-building-small-projects"&gt;
  &lt;/a&gt;
  Learn JavaScript by building small projects
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://javascript30.com/"&gt;30 Day Vanilla JS Coding Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/learn-javascript-by-building-7-games-video-course/"&gt;Learn Javascript by building 7 games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrimba.com/learn/adventcalendar/welcome-to-24-days-of-javascriptmas-cg2QbehG"&gt;24days of christmas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrimba.com/learn/learnjavascript"&gt;Learn JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;JavaScript Algorithms and Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freecodecamp.org/"&gt;Freecodecamp.org&lt;/a&gt; - You can search for javaScript courses and pick the ones which are more suitable for you&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/build-a-quiz-app-with-html-css-and-javascript/"&gt;Build a Quiz App with HTML, CSS, and JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asmarterwaytolearn.com/js/index-of-exercises.html"&gt;Smarter Way to learn JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Asabeneh/30-Days-Of-JavaScript"&gt;30 Days of JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learnjavascript.online/"&gt;Learn JavaScript Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.learn-js.org/en/"&gt;learn-js.org interactive JavaScript tutorial.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#github-repositories"&gt;
  &lt;/a&gt;
  Github Repositories
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Javascript Algorithm and Data Structures&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;33 JS Concepts&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/bradtraversy/vanillawebprojects"&gt;20+ Web Projects With Vanilla JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://github.com/bradtraversy/50projects50days"&gt;50 Projects in 50 Days - HTML/CSS and JavaScript&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="%5Bhttps://github.com/airbnb/javascript"&gt;JavaScript Style Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30 seconds of code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wesbos/JavaScript30"&gt;30 Day Vanilla JS Coding Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;Javascript Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAlgorithms/Javascript"&gt;The Algorithms - JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#coding-challenges"&gt;
  &lt;/a&gt;
  Coding Challenges
&lt;/h3&gt;

&lt;p&gt;One of the ways to learn any kinda programming language in a fun way is to take coding challenges. I love those challenges, I have listed the sites below, some are specific to javascript, while others such as hackerrank, leet code etc let you solve the challenges in the programming language of your choice such as JavaScript or Python or C or C++.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.hackerrank.com/"&gt;Hackerrank&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codingame.com/"&gt;Coding Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;Leet Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderbyte.com/"&gt;Coder Byte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exercism.io/my/tracks/javascript"&gt;Exercism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://play.elevatorsaga.com/"&gt;Elevator Saga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/"&gt;Code Wars&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#coding-ground"&gt;
  &lt;/a&gt;
  Coding Ground
&lt;/h3&gt;

&lt;p&gt;Coding grounds are online coding environment, which are readily available for developers to practice any new programming language they want to learn without having to worry about the environment set up in their local machines.&lt;br&gt;
Below are the couple of my favorite coding grounds which i use on a day-to-day basis when creating small code snippets for a functionality. They have been really useful when testing small sections/snippets, some of them also let you save these snippets so that you can refer them in the future as well.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://codepen.io/your-work"&gt;Codepen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsfiddle.net/"&gt;Js fiddle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.tutorialspoint.com/codingground.htm"&gt;Tutorials Point Coding Ground&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#blogs"&gt;
  &lt;/a&gt;
  Blogs
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dmitripavlutin.com/all-posts/"&gt;Dmitri Pavlutin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://davidwalsh.name/tutorials/javascript"&gt;David Walsh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://superherojs.com/"&gt;SuperHero.JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/"&gt;dev.to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope this is useful for anyone who is getting started with Javascript.&lt;br&gt;
Let me know whats your favorite resource among the list in the comments below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;These are some of the resources I used  when I initially started with JavaScript and would recommend to anyone who is starting to learn JavaScript, some of the coding challenges are something which I always have fun doing. I will update this post as and when I find new resources. Let me know in the comments below if you think there are other resources which should be added to this list as well.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript."&gt;MDN JavaScript Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript.info/"&gt;The Modern Javascript Tutorial&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets connect on  &lt;a href="https://twitter.com/KritikaPattalam"&gt;Twitter&lt;/a&gt;  | &lt;a href="https://www.linkedin.com/in/kritika-p-296739155/"&gt;LinkedIn&lt;/a&gt; for more web development related chats.&lt;/p&gt;

&lt;p&gt;Check out my other blog post: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kritikapattalam/create-a-github-profile-readme-md-with-widgets-47j7"&gt;Create a GitHub Profile README.md with widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
