<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Query in Apache CouchDB: Clouseau</title>
      <author>Jordan Soo Yen Yih</author>
      <pubDate>Mon, 15 Nov 2021 13:14:01 +0000</pubDate>
      <link>https://dev.to/yenyih/query-in-apache-couchdb-clouseau-41ll</link>
      <guid>https://dev.to/yenyih/query-in-apache-couchdb-clouseau-41ll</guid>
      <description>&lt;p&gt;In previous articles, we have talk about how to query with CouchDB Views and Mango Query. Both methods are working very well and able to cover a lot of use cases. Why Clouseau?&lt;/p&gt;

&lt;p&gt;There are still very limited for CouchDB Views and Mango Query when we talk about search, there are a lot of complex searching required which makes the Views function and Mango Index more complex and harder to build, at the same time need to have a great search performance. You are still able to build your own search engine from scratch with Mango and Views. However it is very tough and you have to put a lot of resources to build a good search engine, ton of work like text preprocessing, tokenization, algorithm, ranking and etc...üò∞&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e62JYe7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z4wlkbl16xv63b0qa8x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e62JYe7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5z4wlkbl16xv63b0qa8x.gif" alt="out_of_control_gif" width="499" height="499"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thanks-to-clouseau-brought-couchdb-search-to-the-next-level"&gt;
  &lt;/a&gt;
  Thanks to Clouseau brought CouchDB search to the next levelü•≥
&lt;/h2&gt;

&lt;p&gt;Start from CouchDB v3, CouchDB can build and query full-text search indexes using an external Java service that embeds Apache Lucene. If you have been already familiar with Elasticsearch, then it is very easy for you to catch up with CouchDB + Clouseau as they are using the same Lucene Syntax.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;To setup Clouseau works together with CouchDB, you may refer to the official docs &lt;a href="https://docs.couchdb.org/en/stable/install/search.html#install-search"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use?
&lt;/h2&gt;

&lt;p&gt;It is like Mango Query, create a design document for the search index function, then search with the index function.&lt;/p&gt;

&lt;p&gt;Example Search Index Function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function(document) {
    index("default", document._id);
    if (document.title) {
        index("title", document.title, {"store": true});
    }
    if (document.status) {
        index("status", document.status, { "store": false });
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Design Document in full view:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "_id": "_design/search",
  "_rev": "1-15807c8c7e310b566c0a41997d79b7fd",
  "views": {},
  "language": "javascript",
  "indexes": {
    "posts": {
      "analyzer": "standard",
      "index": "function(doc) {\r\n    index(\"default\", doc._id);\r\n    if (doc.status) {\r\n        index(\"status\", doc.status, { \"store\": false });\r\n    }\r\n    if (doc.title) {\r\n        index(\"title\", doc.title, {\"store\": true});\r\n    }\r\n}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above search index function allows us to search with document ID, title and status. By default it is searching with document ID if we didn't provide any key. The &lt;em&gt;"store"&lt;/em&gt; with boolean we pass in in the third argument is to indicate whether you want to return the value in the search result, the default value is false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/search/_search/posts?q=ea885d7d-7af2-4858-b7bf-6fd01bcd4544
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "total_rows": 1,
  "bookmark": "g2wAAAABaANkABFjb3VjaGRiQDEyNy4wLjAuMWwAAAACYQBuBAD_____amgCRj_6gH-AAAAAYQFq",
  "rows": [
    {
      "id": "ea885d7d-7af2-4858-b7bf-6fd01bcd4544",
      "order": [
        1.6563715934753418,
        1
      ],
      "fields": {
        "title": "Post Two Title"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us try to search with post's status:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/search/_search/posts?q=status:submitted
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "total_rows": 2,
  "bookmark": "g2wAAAABaANkABFjb3VjaGRiQDEyNy4wLjAuMWwAAAACYQBuBAD_____amgCRj_0mliAAAAAYQJq",
  "rows": [
    {
      "id": "c2ec3b79-d9ac-45a8-8c68-0f05cb3adfac",
      "order": [
        1.287682056427002,
        0
      ],
      "fields": {
        "title": "Post One Title"
      }
    },
    {
      "id": "4a2348ca-f27c-427f-a490-e29f2a64fdf2",
      "order": [
        1.287682056427002,
        2
      ],
      "fields": {
        "title": "Post Three Title"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#analyzers"&gt;
  &lt;/a&gt;
  Analyzersüìà
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Analyzers are settings that define how to recognize terms within text. Analyzers can be helpful if you need to &lt;a href="https://docs.couchdb.org/en/stable/ddocs/search.html#ddoc-search-language-specific-analyzers"&gt;index multiple languages&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are 6 analyzers that are supported by the search:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;classic&lt;/strong&gt; - The standard Lucene analyzer, circa release 3.1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;email&lt;/strong&gt; - Like the &lt;em&gt;standard&lt;/em&gt; analyzer, but tries harder to match an email address as a complete token.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;keyword&lt;/strong&gt; - Input is not tokenized at all.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;simple&lt;/strong&gt; - Divides text at non-letters.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;standard&lt;/strong&gt; - The default analyzer. It implements the Word Break rules from the &lt;a href="http://www.unicode.org/reports/tr29/"&gt;Unicode Text Segmentation algorithm&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;whitespace&lt;/strong&gt; - Divides text at white space boundaries.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on your use cases to pick the suitable analyzer for your search index.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#geographical-searches%F0%9F%97%BA"&gt;
  &lt;/a&gt;
  Geographical Searchesüó∫
&lt;/h2&gt;

&lt;p&gt;Besides that, you can also do geographical searches in CouchDB with Lucene's built-in geospatial capabilities.üòç&lt;/p&gt;

&lt;p&gt;Example geographical data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "name":"Aberdeen, Scotland",
    "lat":57.15,
    "lon":-2.15,
    "type":"city"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example search index for the geographic data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function(doc) {
    if (doc.type &amp;amp;&amp;amp; doc.type == 'city') {
        index('city', doc.name, {'store': true});
        index('lat', doc.lat, {'store': true});
        index('lon', doc.lon, {'store': true});
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;HTTP Request:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET /YOUR_DATABASE_NAME/_design/YOUR_DESIGN_DOC_NAME/_search/SEARCH_INDEX_NAME?q=lat:[0+TO+90]&amp;amp;sort="&amp;lt;distance,lon,lat,-74.0059,40.7127,km&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Abbreviated Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "total_rows": 205,
    "bookmark": "g1A...XIU",
    "rows": [
        {
            "id": "city180",
            "order": [
                8.530665755719783,
                18
            ],
            "fields": {
                "city": "New York, N.Y.",
                "lat": 40.78333333333333,
                "lon": -73.96666666666667
            }
        },
        {
            "id": "city177",
            "order": [
                13.756343205985946,
                17
            ],
            "fields": {
                "city": "Newark, N.J.",
                "lat": 40.733333333333334,
                "lon": -74.16666666666667
            }
        },
        {
            "id": "city178",
            "order": [
                113.53603438866077,
                26
            ],
            "fields": {
                "city": "New Haven, Conn.",
                "lat": 41.31666666666667,
                "lon": -72.91666666666667
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading.
&lt;/h2&gt;

&lt;p&gt;There are more you can do with CouchDB search. Do checkout the official documentation &lt;a href="https://docs.couchdb.org/en/stable/ddocs/search.html"&gt;here&lt;/a&gt; and also &lt;a href="https://lucene.apache.org/core/4_3_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#Overview"&gt;Lucene Syntax&lt;/a&gt; as CouchDB search query syntax is using the Lucene Syntax.üòä&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ma4Speot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sl9lfxeybit04rvku20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ma4Speot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sl9lfxeybit04rvku20.gif" alt="thats_all_folk" width="499" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>Localize (i18n) your Svelte App with Tolgee. You will save a lot of time.</title>
      <author>Jan Cizmar</author>
      <pubDate>Mon, 15 Nov 2021 13:04:22 +0000</pubDate>
      <link>https://dev.to/tolgee_i18n/localize-i18n-your-svelte-app-with-tolgee-you-will-save-a-lot-of-time-1g06</link>
      <guid>https://dev.to/tolgee_i18n/localize-i18n-your-svelte-app-with-tolgee-you-will-save-a-lot-of-time-1g06</guid>
      <description>&lt;p&gt;Localization is tricky part of application development. Using Tolgee open-source tool you can save a lot of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tolgee-features"&gt;
  &lt;/a&gt;
  Tolgee Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;All in One localization solution for your Svelte application üôå&lt;/li&gt;
&lt;li&gt;Out of box in-context localization üéâ&lt;/li&gt;
&lt;li&gt;Automated screenshot generation üì∑&lt;/li&gt;
&lt;li&gt;Translation management platform üéà&lt;/li&gt;
&lt;li&gt;Open-source and self-hosted üî•&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#svelte-integration"&gt;
  &lt;/a&gt;
  Svelte integration
&lt;/h2&gt;

&lt;p&gt;We have just implemented and documented Svelte integration, so now you can translate your Svelte application in dead simple way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started-on-tolgee-for-svelte"&gt;
  &lt;/a&gt;
  Get started on &lt;a href="https://tolgee.io/tolgee-for-svelte"&gt;Tolgee for Svelte&lt;/a&gt;! üéâ
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#or-check-out-svelte-tolgee-example-app"&gt;
  &lt;/a&gt;
  Or check out &lt;a href="https://github.com/tolgee/svelte-example"&gt;Svelte + Tolgee Example app&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;We will be happy for any feedback! üôè&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Like it? üòä Please star our projects on Github. It would help a lot üôè &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tolgee/tolgee-js"&gt;Tolgee JS (integrations monorepo) GitHub ‚≠ê&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tolgee/server"&gt;Tolgee Server (the platform) GitHub ‚≠ê&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Disclaimer: I am founder of Tolgee.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 59-61/100 Modules</title>
      <author>Rio Cantre</author>
      <pubDate>Mon, 15 Nov 2021 13:00:58 +0000</pubDate>
      <link>https://dev.to/riocantre/day-59-61100-modules-492k</link>
      <guid>https://dev.to/riocantre/day-59-61100-modules-492k</guid>
      <description>&lt;p&gt;"Write code that is easy to delete, not easy to extend."&lt;/p&gt;

&lt;p&gt;‚Äì Tef, Programming is Terrible&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qQzsdJSz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odzjryjzuqgf3fnjeloq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qQzsdJSz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/odzjryjzuqgf3fnjeloq.png" alt="module" width="880" height="486"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>challenge</category>
      <category>motivation</category>
      <category>programming</category>
    </item>
    <item>
      <title>4 Reasons Why Data Engineers Hate Google Tag Manager</title>
      <author>RudderStack</author>
      <pubDate>Mon, 15 Nov 2021 12:53:36 +0000</pubDate>
      <link>https://dev.to/rudderstack/4-reasons-why-data-engineers-hate-google-tag-manager-5h6c</link>
      <guid>https://dev.to/rudderstack/4-reasons-why-data-engineers-hate-google-tag-manager-5h6c</guid>
      <description>&lt;p&gt;GTM is a code injector. Browsers generally view code injectors negatively because they can easily become a weak link through which hackers can plant malicious code in a website or app. As a result, GTM is blocked by most ad blockers and browser privacy tools. It is estimated that¬†&lt;a href="https://backlinko.com/ad-blockers-users"&gt;42.7% of internet users&lt;/a&gt;¬†use ad blockers, meaning you could be missing anywhere from¬†&lt;a href="https://blog.atinternet.com/en/rocking-your-web-analytics-in-the-face-of-ad-blockers/"&gt;8% to 25%&lt;/a&gt;¬†of user traffic data if you're using GTM. If your entire mar-tech stack is delivered through GTM and it's blocked, you'll run into some serious challenges.&lt;/p&gt;

&lt;p&gt;For years,¬†&lt;a href="https://marketingplatform.google.com/about/tag-manager/"&gt;Google Tag Manager&lt;/a&gt;¬†(GTM) has made it easy for marketers and analysts to install and manage third-party analytics and marketing tools on their websites and apps. It provides a centralized platform allowing non-technical team members to add, edit, and disable tags without having to touch the source code. This means they don't have to bug you to add new tags or edit existing ones in the event of an update.&lt;/p&gt;

&lt;p&gt;But, as you know, putting such power in the hands of non-technical teams has the potential to backfire. Whatever they inject into the app or website via GTM bypasses your usual development and QA processes, which could result in a mess the data team has to clean up.&lt;/p&gt;

&lt;p&gt;So, while GTM is a useful tool, its shortcomings are quickly apparent to modern data-driven companies. Data engineers hate GTM and for good reason. Its susceptibility to ad blockers and proneness for misuse are just a start. Here, we'll detail four of the driving reasons GTM and data engineers don't get along, and we'll offer a better solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f3uKosUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/a6438c440c2fdc134ef787b7bcfb0adea0a3922e-503x496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3uKosUd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/a6438c440c2fdc134ef787b7bcfb0adea0a3922e-503x496.png" alt="GTM and Data Engineers" width="503" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-gtm-is-a-codeinjection-tool-prone-to-security-vulnerabilities"&gt;
  &lt;/a&gt;
  1. GTM is a code-injection tool prone to security vulnerabilities
&lt;/h2&gt;

&lt;p&gt;Since GTM is a code injection tool, it's not only blocked by ad blockers. It also opens up your site to exploitation because its ability to insert code could open the door to hackers. If a hacker gains access to your GTM account, they can wreak havoc behind the scenes by adding a few lines of seemingly harmless code. Often, this code will go unnoticed because it doesn't affect the look or functionality of the website/app.&lt;/p&gt;

&lt;p&gt;In some cases, your site or mobile app could be used to display unwanted advertising to generate revenue for the hacker, or they could redirect visitors to other sites filled with ads. In worst-case scenarios, your site/app could be exploited to steal PII. Both¬†&lt;a href="https://joom.team/en/why-is-there-a-strange-gtm-tag-in-the-code-of-my-joomla-site"&gt;Joom team&lt;/a&gt;¬†and¬†&lt;a href="https://blog.sucuri.net/2018/04/malicious-activities-google-tag-manager.html"&gt;Securi&lt;/a&gt;¬†documented many instances of this among their clientele.&lt;/p&gt;

&lt;p&gt;Security exploitation like this causes loopholes that will affect your ability to deliver quality data to the teams that need it, and fixing these issues is time-consuming and expensive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-it-has-limited-support-for-the-variety-of-tools-datadriven-businesses-need"&gt;
  &lt;/a&gt;
  2. It has limited support for the variety of tools data-driven businesses need
&lt;/h2&gt;

&lt;p&gt;Google Tag Manager provides¬†&lt;a href="https://support.google.com/tagmanager/answer/6106924?hl=en"&gt;native support&lt;/a&gt;¬†for ads and analytics networks. While it offers more support options for websites, it supports less than 12 tools for mobile apps. So, when it comes to integrations with tools across your stack, GTM simply falls short. To send events to tools for things like A/B testing, nurturing, customer engagement, and support, you'll have to come up with workarounds to integrate unsupported tools.&lt;/p&gt;

&lt;p&gt;For example, if you're managing an event-driven tool like Mixpanel via GTM using custom code, you may want to use another event-driven tool like Intercom down the line. Using GTM means you have to write custom code yet again to send the same sets of data to Intercom. And whenever any tool updates its API, you'll have to go back in to update your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-it-slows-site-performance"&gt;
  &lt;/a&gt;
  3. It slows site performance
&lt;/h2&gt;

&lt;p&gt;If not properly managed, GTM can add a serious performance burden to your digital properties. This can happen if the tag manager container has accumulated tags over time, perhaps through experimentation with different publishers or asset integrations.&lt;/p&gt;

&lt;p&gt;The implementation directions from a lot of third-party tracking pixels are just "make sure it fires on every page". So, less experienced GTM users often add more and more of those tags with the default "all pages - pageview" trigger which runs very early in the browser's rendering process, while it is still loading and parsing critical resources for the actual website ( such as HTML, CSS, JS, images, videos, etc.). What makes this worse is that, by default, tags are essentially treated as separate scripts. So, if there are 50 tags managed via GTM, the browser now tries to load a webpage and 50 different scripts simultaneously each time a user visits a new page.&lt;/p&gt;

&lt;p&gt;While users on midrange machines with a fast internet connection may not experience severe performance drops, users on older/weaker machines or mobile devices with slower connections will. For every page load, these weaker devices will do as much as their CPU power permits and then queue up the rest, locking up the browser window and rendering the website inoperable until all of that processing is completed. This not only results in a terrible user experience, it also affects your¬†&lt;a href="https://web.dev/vitals/"&gt;Core Web Vitals&lt;/a&gt;¬†scores (especially the First Input Delay), which will inadvertently affect site ranking on Google.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/maximilianwerner"&gt;Maximilian Werner&lt;/a&gt;, founder of¬†&lt;a href="https://www.obsessiveanalytics.com/"&gt;Obsessive Analytics Consulting&lt;/a&gt;, who has significant experience working with GTM, has seen this firsthand. "I had a client once where GTM caused the web pages to freeze for about 10 seconds on load because they had more than 120 tags firing on page load. Mobile devices basically crashed."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-its-difficult-to-manage-user-state-at-scale"&gt;
  &lt;/a&gt;
  4. It's difficult to manage user state at scale
&lt;/h2&gt;

&lt;p&gt;GTM uses a global JS window variable called a dataLayer to maintain something similar to an intermittent state. It can only keep track of variables on the current page. This means it cannot persist user state across pages on the same domain, let alone across domains.&lt;/p&gt;

&lt;p&gt;For example, assume that the checkout process of an e-commerce website is spread out across four pages: cart, personal info, payment info, and confirmation. When a user enters their name and email on the personal info page, and you use¬†&lt;code&gt;dataLayer.push({name: 'john doe', email: "johndoe@domain.com" })&lt;/code&gt;¬†to store that info either manually or through code automatically run by the ecommerce site (if they offer integration with GTM), then you can use that info on that page.&lt;/p&gt;

&lt;p&gt;However, when the user navigates to the next page, the¬†&lt;code&gt;dataLayer&lt;/code&gt;¬†is wiped clean since it's just a window variable, and you will no longer have access to that info. To carry the data over to the next page, you must persist the data yourself by writing custom JS to store it in a cookie or localStorage, and then read it out on the next page. This adds many more points of failure and stops you from adequately accounting for users joining funnels at different stages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theres-a-better-alternative-to-google-tag-manager"&gt;
  &lt;/a&gt;
  There's a better alternative to Google Tag Manager
&lt;/h2&gt;

&lt;p&gt;GTM simply can't meet the demands of the growing data-driven business - especially as data stacks become more complex. For a flexible and scalable solution that unlocks advanced use cases, you'll need a more robust tool like RudderStack for data integration.&lt;/p&gt;

&lt;p&gt;With RudderStack, you don't have to worry about security exploitations because RudderStack does not inject code into your website. You also don't have to worry about ad blockers---RudderStack uses a¬†&lt;a href="https://www.obsessiveanalytics.com/blog/making-rudder-stack-ad-blocker-proof-in-66-lines-of-code"&gt;proxied RudderStack and server-to-server integrations&lt;/a&gt;. And when it comes to support for tools, RudderStack offers¬†&lt;a href="https://rudderstack.com/integration"&gt;integrations&lt;/a&gt;¬†for more than 200. With integrations ranging from ad networks and corporate communications to attribution and marketing tools, RudderStack enables you to easily integrate the tools you already use, and it gives you flexibility as your stack grows to meet new business demands.&lt;/p&gt;

&lt;p&gt;RudderStack also makes your life a lot easier when it comes to keeping user session data intact, especially across different visits because it persists user state and makes it accessible anytime via¬†&lt;code&gt;rudderanalytics.getUserProperties()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, RudderStack gives you the ability to give every team the customer data they need. Instrument once with RudderStack's SDKs, then automatically send data to your warehouse and business tools. No more dealing with API changes and broken pipelines. You can even use GTM through RudderStack. So, if you want to keep using Google Tag Manager to manage your ad pixels and other Google-related tools, you can integrate it with RudderStack.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-a-better-data-integration-solution-today"&gt;
  &lt;/a&gt;
  Try a better data integration solution today
&lt;/h2&gt;

&lt;p&gt;Test out our event stream, ELT and reverse-ETL pipelines. Use our HTTP source to send data in less than 5 minutes, or install one of our 12 SDKs in your website or app.¬†&lt;a href="https://app.rudderlabs.com/signup?type=freetrial"&gt;Get started&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dataengineer</category>
      <category>googletagmanager</category>
      <category>dataanlytics</category>
    </item>
    <item>
      <title>The 7 Step Process I Used To Build A Landing Page To Promote My Book</title>
      <author>Mishacreatrix</author>
      <pubDate>Mon, 15 Nov 2021 12:47:04 +0000</pubDate>
      <link>https://dev.to/mishacreatrix/the-7-step-process-i-used-to-build-a-landing-page-to-promote-my-book-187o</link>
      <guid>https://dev.to/mishacreatrix/the-7-step-process-i-used-to-build-a-landing-page-to-promote-my-book-187o</guid>
      <description>&lt;p&gt;A custom landing page is an invaluable asset to have as a creator online. &lt;/p&gt;

&lt;p&gt;It acts as your own little space on the internet to promote something you've created. It shows your audience what your product is and how it can benefit them. It's also a place for people to buy your product directly.&lt;/p&gt;

&lt;p&gt;In fact, more and more people are moving away from the default landing pages services like Gumroad offer in favor of unique and highly customized options. &lt;/p&gt;

&lt;p&gt;The process of creating a custom landing page today has never been easier. You just need some time and a little knowledge of landing pages and you can create something that will encourage sign-ups and purchases.&lt;/p&gt;

&lt;p&gt;In this blog post, I share with you the exact 7 step process I used to build the landing page for my latest eBook: Design Faster, Design Better. This landing page is used to drive sales and inform potential readers what the book is about.&lt;/p&gt;

&lt;p&gt;You can follow along with this post to learn how to create your own landing page from scratch. This implementation is FREE and requires knowledge of web development (HTML, CSS, Tailwind) but there are no-code options out there which I'll mention.&lt;/p&gt;

&lt;p&gt;Here's the landing page I created to promote my &lt;a href="https://designfaster.netlify.app/"&gt;Design Faster, Design Better - Landing Page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-1-define-a-goal"&gt;
  &lt;/a&gt;
  Step 1 - Define A Goal
&lt;/h2&gt;

&lt;p&gt;You've no doubt heard this before but you need to take the time to write down the goal of your landing page.&lt;/p&gt;

&lt;p&gt;Believe me, I've skipped this step in the past only to realize how much time and effort would have been saved if I had taken the time to understand the meaning behind what I was creating. &lt;/p&gt;

&lt;p&gt;There is so much value in physically writing down the goal of your landing page: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You'll focus your mind on what you're doing.&lt;/li&gt;
&lt;li&gt;Your mind will continue to work on this in the background so you'll come up with excellent ideas when it comes time to write them down.&lt;/li&gt;
&lt;li&gt;You'll understand your intrinsic motivations for wanting to build the landing page. This allows you to continue working even when things get tough. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some examples of goals you might have for your landing page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To sell an eBook all about growing on social media&lt;/li&gt;
&lt;li&gt;To make enough money to buy a new laptop&lt;/li&gt;
&lt;li&gt;To help people who struggle with low motivation&lt;/li&gt;
&lt;li&gt;To encourage people to sign up for my newsletter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, your goal can be whatever you want, the more specific the better as this will help you when you do your research. &lt;/p&gt;

&lt;p&gt;It's also important to focus on one goal per landing page. Any more than one goal and your message becomes lost. Stick with one main goal and your message will be more direct and easier to understand.&lt;/p&gt;

&lt;p&gt;Here's the goal I picked: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;My goal is to create a custom landing page to promote my new eBook - Design Faster, Design Better. I want readers to learn about exactly what my book will help with and allow them to buy it if they would like. I'd like to achieve this at a low cost and I'd like to build the landing page myself from scratch to practice my web dev skills.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-2-perform-research"&gt;
  &lt;/a&gt;
  Step 2 - Perform Research
&lt;/h2&gt;

&lt;p&gt;The second step is likely where you'll spend the most time and that is: doing research.&lt;/p&gt;

&lt;p&gt;Now that you have your goal in mind there are a few key areas you'll need to understand:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your target audience&lt;/li&gt;
&lt;li&gt;What you want to say - your message&lt;/li&gt;
&lt;li&gt;Writing effective copy&lt;/li&gt;
&lt;li&gt;Landing page designs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#target-audience"&gt;
  &lt;/a&gt;
  Target Audience
&lt;/h3&gt;

&lt;p&gt;Your goal and the product you're selling should help you to hone in on your target audience. &lt;/p&gt;

&lt;p&gt;There are tons of great resources out there to help you with this process, here are some examples I would recommend:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.marketingevolution.com/marketing-essentials/target-audience"&gt;Steps to Find Your Target Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.hubspot.com/marketing/target-audience"&gt;How to Find Your Target Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.singlemindconsulting.com/blog/ux-identifying-your-target-audience/"&gt;UX: Identifying Your Target Audience&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After a lot of researching and digging into my social media, I felt my target audience for my book is: &lt;em&gt;people looking to improve their design skills productively.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;I wanted to keep this relatively open as I believe anyone can make use of design knowledge to improve what they're working on. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-effective-copy"&gt;
  &lt;/a&gt;
  Writing Effective Copy
&lt;/h3&gt;

&lt;p&gt;I'll be honest, copywriting wasn't and still isn't my strongest suit. With that said, I've done enough research and practice to be competent at it.&lt;/p&gt;

&lt;p&gt;If I can write effective copy, you certainly can.&lt;/p&gt;

&lt;p&gt;In my case, Twitter is an excellent resource for finding amazing people that share everything they know about writing copy.&lt;/p&gt;

&lt;p&gt;Some notable examples include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jmoserr"&gt;Jeremy Moser - @jmoserr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Charles_SEO"&gt;Charles Floate - @Charles_SEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/alexgarcia_atx"&gt;Alex Garcia - @alexgarcia_atx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Nicolascole77"&gt;Nicolas Cole - @Nicolascole77&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#your-message"&gt;
  &lt;/a&gt;
  Your Message
&lt;/h3&gt;

&lt;p&gt;Your message or what you want to say goes hand in hand with learning how to write compelling copy.&lt;/p&gt;

&lt;p&gt;As you research copywriting techniques, try to apply what you learn to your own message and what you want to say on your landing page.&lt;/p&gt;

&lt;p&gt;I'd recommend starting a blank page or a new file somewhere and writing everything you can think of about your product. You can always refine it and cherry-pick the best stuff when you're ready.&lt;/p&gt;

&lt;p&gt;This will take some time but if you remain patient and consistent you'll end up with a repository of writing to draw from when you start writing the actual copy for your landing page.&lt;/p&gt;

&lt;p&gt;You can also re-purpose this copy in other ways. For instance: with social media posts, blog posts, videos, podcasts. It's worth taking the time to write everything down.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#landing-page-design"&gt;
  &lt;/a&gt;
  Landing Page Design
&lt;/h3&gt;

&lt;p&gt;I'm a lot more confident with web page design than I am with copywriting so this one was great fun to learn about.&lt;/p&gt;

&lt;p&gt;Your goal here is to find a number of landing page designs that you like or find interesting. You can then take the best parts of each design and emulate them to create your own unique landing page design.&lt;/p&gt;

&lt;p&gt;In my case, I wanted the challenge of building a page from scratch so I went down this route. &lt;/p&gt;

&lt;p&gt;With that said, there's always the option to simply buy a landing page template. You can easily find a well-designed landing page to fit your needs at a reasonable price so you don't have to worry about this step. &lt;/p&gt;

&lt;p&gt;Here are some great sources of inspiration I used to find great landing page design ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/luisthewiz"&gt;Web Design Wizard - @luisthewiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/LoftedLearning"&gt;Logan - @LoftedLearning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/camduncannnn"&gt;CAM - @camduncannnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tailwindui"&gt;Tailwind UI - @tailwindui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://convertkit.com/product-landing-pages"&gt;11 Landing page examples that convert - ConvertKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#step-3-write-the-copy"&gt;
  &lt;/a&gt;
  Step 3 - Write The Copy
&lt;/h2&gt;

&lt;p&gt;Now you've done your research, know what you want to say, and have a general idea of the layout of your landing page, it's time to write!&lt;/p&gt;

&lt;p&gt;Of course, if you've been following along with me, you'll have a file filled with potential copy to use so this makes your life a lot easier.&lt;/p&gt;

&lt;p&gt;I would recommend writing the copy before you start designing your landing page as you can easily get distracted by design elements when you should be focusing on writing. &lt;/p&gt;

&lt;p&gt;Start a new document and write out the headings of your content. Then fill out each section with copy. Don't worry about this being perfect, you'll have plenty of opportunities to come back and refine things.&lt;/p&gt;

&lt;p&gt;Here's a sample of my rough copy layout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hero section, 

&lt;ul&gt;
&lt;li&gt;Title: Create Brilliant Designs In Half The Time&lt;/li&gt;
&lt;li&gt;Subtitle: Improve Your Design Skills, Learn How To Prevent Burnout, Unlock Unlimited Creativity&lt;/li&gt;
&lt;li&gt;Call to action: Get My Copy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Introduction

&lt;ul&gt;
&lt;li&gt;What is the pain point I'm trying to solve&lt;/li&gt;
&lt;li&gt;How does my book solve this problem&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Chapter Breakdown&lt;/li&gt;
&lt;li&gt;Free Sample

&lt;ul&gt;
&lt;li&gt;Download My Free Sample&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Final CTA

&lt;ul&gt;
&lt;li&gt;Improve your design skills, learn how to prevent burnout, and unlock unlimited creativity with Design Faster, Design Better.&lt;/li&gt;
&lt;li&gt;Get My Copy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#step-4-design-build-the-structure"&gt;
  &lt;/a&gt;
  Step 4 - Design + Build The Structure
&lt;/h2&gt;

&lt;p&gt;With your copy ready to go, it's time to design and build your landing page structure.&lt;/p&gt;

&lt;p&gt;I built my landing page using HTML, CSS, &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;, and hosted it for free on &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;. This solution worked well for me as it allowed for complete customization and free hosting (with a Netlify domain name for now).&lt;/p&gt;

&lt;p&gt;With that said, there are a number of no-code, low-code options that would work equally as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pre-built templates on &lt;a href="https://themeforest.net/"&gt;ThemeForest&lt;/a&gt; or &lt;a href="https://gumroad.com/"&gt;Gumroad&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carrd.co/"&gt;Carrd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webflow.com/"&gt;Webflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fromnotion.com/"&gt;fromNotion - build a landing page using Notion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In terms of which option to choose, I would recommend sticking with what you know. If there's a tool or programming stack you're familiar with, just use that if it will get the job done. &lt;/p&gt;

&lt;p&gt;Don't over-complicate things by trying to learn a completely new piece of software.&lt;/p&gt;

&lt;p&gt;If you have no clue where to start, Carrd is a great option.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-5-deploy-test"&gt;
  &lt;/a&gt;
  Step 5 - Deploy + Test
&lt;/h2&gt;

&lt;p&gt;Once you've built your landing page it's time to hit publish! &lt;/p&gt;

&lt;p&gt;This part was extremely hard for me as I always found small tweaks to make or typos that needed to be corrected before I made the landing page live.&lt;/p&gt;

&lt;p&gt;With that in mind, I'd recommend giving yourself a realistic launch date to work towards. This also allows you to build hype in your community about your new landing page ahead of its launch.&lt;/p&gt;

&lt;p&gt;Once you have launched the website it's important to make sure it works well on different screen sizes. In this day and age, a website should work well on most phones, tablets, and computers. &lt;/p&gt;

&lt;p&gt;Go to your landing page on your phone and test it out on your computer and ask some friends to do the same. Make any tweaks as needed.&lt;/p&gt;

&lt;p&gt;It's also a good idea to sanity check for spelling and grammar just in case there's a typo or something missing. &lt;/p&gt;

&lt;p&gt;Don't be afraid to make changes on the fly, it's your landing page and you can do what you want with it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-6-iterate"&gt;
  &lt;/a&gt;
  Step 6 - Iterate
&lt;/h2&gt;

&lt;p&gt;If you've been following along you should now have a brand new live landing page. Congrats!&lt;/p&gt;

&lt;p&gt;Be sure to send a post to your following on social media or your newsletter to encourage them to check it out.&lt;/p&gt;

&lt;p&gt;Keep in mind though, your work doesn't necessarily end here. &lt;/p&gt;

&lt;p&gt;Your first iteration should be good enough to publish. But over time you'll see things that can be improved, things that can be added, and things that should be removed from your landing page.&lt;/p&gt;

&lt;p&gt;Don't be afraid to make updates based on what you continue to learn about landing page design.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#step-7-continually-improve-over-time"&gt;
  &lt;/a&gt;
  Step 7 - Continually Improve Over Time
&lt;/h2&gt;

&lt;p&gt;You're landing page may never be 100% perfect but that's OK. Realize that you will continue to learn and build your skills over time and you can apply that knowledge to improving your landing page.&lt;/p&gt;

&lt;p&gt;With my landing page, for instance, there are no customer testimonials or reviews of my book yet which is something I'm eager to include. I'd also love to eventually add my book to Amazon via KDP and include links to it on my landing page.&lt;/p&gt;

&lt;p&gt;I keep a running list of potential improvements I'd like to make to my landing page and try to implement them when I have the time. &lt;/p&gt;

&lt;p&gt;Here's the link to the landing page I made once again if you're interested: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://designfaster.netlify.app/"&gt;Design Faster, Design Better - Landing Page&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#my-key-take-aways"&gt;
  &lt;/a&gt;
  My Key Take Aways
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A clear goal will help give you the motivation to continue working even when things get tough. &lt;/li&gt;
&lt;li&gt;The more time spent researching before design and implementation the better.&lt;/li&gt;
&lt;li&gt;You may not be good at writing right now but if you never practice, you'll never improve.&lt;/li&gt;
&lt;li&gt;Design on paper before you build. You wouldn't build a house without blueprints!&lt;/li&gt;
&lt;li&gt;Always test landing pages on more than one device. At the very least test on a phone, a tablet, and a computer.&lt;/li&gt;
&lt;li&gt;Don't be afraid to hit publish when something is good enough as opposed to perfect.&lt;/li&gt;
&lt;li&gt;Continue learning!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you enjoyed reading this post as it was extremely enjoyable to write. Let me know what you learned and what you'll apply to your own landing page project!&lt;/p&gt;

&lt;p&gt;Original thread on Twitter: &lt;a href="https://twitter.com/MishaCreatrix/status/1454412085459361796"&gt;Original Thread&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article was originally published over on my website: &lt;a href="https://www.mishacreatrix.com/book-landing-page"&gt;The 7 Step Process I Used To Build A Landing Page To Promote My Book&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>landingpagedesign</category>
      <category>webdev</category>
      <category>contentcreation</category>
      <category>copywriting</category>
    </item>
    <item>
      <title>How To Hire A Good Website Designer For Your Business?</title>
      <author>Mosche Amara</author>
      <pubDate>Mon, 15 Nov 2021 12:40:06 +0000</pubDate>
      <link>https://dev.to/amaramosche/how-to-hire-a-good-website-designer-for-your-business-20of</link>
      <guid>https://dev.to/amaramosche/how-to-hire-a-good-website-designer-for-your-business-20of</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fCC4ZOm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs80z9mkdqzhv3c41uyf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fCC4ZOm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs80z9mkdqzhv3c41uyf.PNG" alt="Image description" width="880" height="577"&gt;&lt;/a&gt;&lt;br&gt;
Providing better services than competitors is not as easy as it might seem these days. To satisfy the dynamic demand of customers, a website that is optimized, mobile-friendly, and feature-rich is necessary. The task of doing all that by yourself can be daunting. The good news is that you can hire web designers to handle that task for you. This article shows you how to hire a web designer, so you get a market-ready website in first-go/.  &lt;/p&gt;

&lt;p&gt;You should carefully analyze your business model and website objectives prior to &lt;a href="https://bit.ly/3wNK0pU"&gt;hiring a dedicated web designer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As an alternative, search online for websites that you like and ones that could possibly represent your brand image. At this point, you should also create an outline of your website's goals. Create a starting point for your project by determining why you want a website.&lt;/p&gt;

&lt;p&gt;Having a website that contains a handful of poorly constructed pages is anti-advertising and serves benefit to your competition.&lt;/p&gt;

&lt;p&gt;Consider these tips when choosing a company for web development to avoid such a pity fate:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Plan your budget&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You may not be aware of how much a web designer would charge to build your project at the beginning. You can absolutely answer the maximum budget you are willing to contribute to the development of the website. It will guide you in determining a list of potential contractors.&lt;/p&gt;

&lt;p&gt;Determine the main factors:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Take a good look at the portfolio of web designers.&lt;/strong&gt; &lt;br&gt;
Observe their design choices. A company that only works on template projects is unlikely to provide you with an individual and distinctive design. Review the site's navigation. Is it easy to navigate, and can you find the information you need on the site? Keep looking if it meets these criteria.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Check out the reviews and comments&lt;/strong&gt;&lt;br&gt;
Find out what other clients have to say about the agency or freelancer on social media. Read out if they have any negative reviews or recommendations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Be specific.&lt;/strong&gt;&lt;br&gt;
Once you have chosen the right web development company, make sure you state your wishes and tasks clearly. In order to avoid misunderstandings, the information should be as accurate as possible. Despite the fact that price is not always a factor in quality, a professional website cannot be cheap.&lt;/p&gt;

&lt;p&gt;You should be able to use these tips to determine how to choose a freelance website designer or an agency. &lt;/p&gt;

&lt;p&gt;Here are few things to ask to find out whether the experts of a particular web design company can accomplish the tasks assigned to them or not.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Would you mind sharing your portfolio with us?&lt;/strong&gt;&lt;br&gt;
There should be a selection of previous projects that a reputable and professional web design company can show you. If you are considering a contractor, ask them to show you their three favorite sites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Can you show us any other work you've done?&lt;/strong&gt; &lt;br&gt;
Potential partners are tested by asking such a question, forcing them to think in unusual circumstances. It is automatically considered a failed option if the company refused to show anything more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. What sites do our target audience most often visit?&lt;/strong&gt; &lt;br&gt;
The question provides an opportunity to determine whether an agency is well prepared for an appointment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Is there a site you really like in our field that we should check out?&lt;/strong&gt;&lt;br&gt;
 There are usually a few links to interesting and cool sites of other entities around your area that a good development company will have in stock. This will help you determine whether you share the same taste.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Give an example of how (insert the desired feature) would operate under adaptive web design.&lt;/strong&gt;&lt;br&gt;
The average person uses multiple devices nowadays. The website needs to handle these tasks by adapting to the characteristics of any display (remember what good responsive design means in the article above?).&lt;/p&gt;

&lt;p&gt;The development of a website takes how long? Find out which factors influence the time needed to build the site. Provide the designers with a few words to summarize all phases and steps of the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summing It Up!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A hasty and improper choice of a design company can lead to a website that brings no profit to the company, as well as financial problems. An online site's fault can lead to damages comparable to those caused by several failed transactions. Therefore, consider the above mentioned pointers to &lt;a href="https://bit.ly/3H8fZWq"&gt;hire the web design service providers&lt;/a&gt; that can offer you bespoke services in the first-go. &lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to add MDX to an Existing Gatsby Site</title>
      <author>Anna Rossetti</author>
      <pubDate>Mon, 15 Nov 2021 12:32:40 +0000</pubDate>
      <link>https://dev.to/rossettiquette/how-to-add-mdx-to-an-existing-gatsby-site-4kmd</link>
      <guid>https://dev.to/rossettiquette/how-to-add-mdx-to-an-existing-gatsby-site-4kmd</guid>
      <description>&lt;p&gt;My &lt;a href="https://dev.to/rossettiquette/a-web-developers-guide-to-making-your-first-personal-website-and-blog-22j2"&gt;previous article&lt;/a&gt; featured a guide for setting up a personal website using Gatsby. One of the first items on my upgrade list for this type of project is adding support for &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt;, which allows the use of React components inside Markdown files.&lt;/p&gt;

&lt;p&gt;Code snippets are really important for a developer's blog, so I like to use a custom code component to display them. I love the look and functionality of code blocks on Gatsby's &lt;a href="https://www.gatsbyjs.com/docs/quick-start/"&gt;official docs&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHXd-6Pt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgqgxjp121ifnj0kpqhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHXd-6Pt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgqgxjp121ifnj0kpqhp.png" alt="A screenshot of GatsbyJS's online documentation showing the custom code fragment" width="733" height="155"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are loads of other neat things that you can do with MDX, like Josh Comeau's &lt;a href="https://www.joshwcomeau.com/react/animated-sparkles-in-react/"&gt;custom text emphasis using animations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you started your Gatsby project without MDX, this guide will show you a step-by-step walk-through for adding it to your website. You can poke around with the finished code for this tutorial in &lt;a href="https://codesandbox.io/s/falling-sound-kuywk"&gt;this sandbox&lt;/a&gt;, or check out the &lt;a href="https://github.com/rossettiquette/my-tutorial-site/tree/002"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-install-the-mdx-packages-amp-official-mdx-plugins"&gt;
  &lt;/a&gt;
  Step 1: Install the MDX Packages &amp;amp; Official MDX Plugins
&lt;/h2&gt;

&lt;p&gt;To get started, you need to install the &lt;code&gt;@mdx-js/mdx&lt;/code&gt; and &lt;code&gt;@mdx-js/react&lt;/code&gt; packages as well as Gatsby's official &lt;code&gt;gatsby-plugin-mdx&lt;/code&gt; and &lt;code&gt;gatsby-plugin-feed-mdx&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; gatsby-plugin-mdx gatsby-plugin-feed-mdx @mdx-js/mdx @mdx-js/react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-2-edit-the-gatsby-configuration-file"&gt;
  &lt;/a&gt;
  Step 2: Edit the Gatsby Configuration File
&lt;/h2&gt;

&lt;p&gt;In &lt;em&gt;gatsby-config.js&lt;/em&gt;, edit the configuration for the &lt;code&gt;gatsby-transformer-remark&lt;/code&gt; plugin by replacing it with &lt;code&gt;gatsby-plugin-mdx&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;
-     resolve: `gatsby-transformer-remark`,
&lt;span class="gi"&gt;+     resolve: `gatsby-plugin-mdx`,
&lt;/span&gt;      options: {
&lt;span class="gi"&gt;+       extensions: [`.mdx`, `.md`],
&lt;/span&gt;&lt;span class="gd"&gt;-       plugins: [
&lt;/span&gt;          gatsbyRemarkPlugins: [ //added
          {
            resolve: `gatsby-remark-images`,
            options: {
              maxWidth: 630,
            },
          },
          {
            resolve: `gatsby-remark-responsive-iframe`,
            options: {
              wrapperStyle: `margin-bottom: 1.0725rem`,
            },
          },
          `gatsby-remark-prismjs`,
          `gatsby-remark-copy-linked-files`,
          `gatsby-remark-smartypants`,
        ],
      },
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It should now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`gatsby-plugin-mdx`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;`.mdx`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`.md`&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="na"&gt;gatsbyRemarkPlugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`gatsby-remark-images`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;630&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`gatsby-remark-responsive-iframe`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;wrapperStyle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`margin-bottom: 1.0725rem`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="s2"&gt;`gatsby-remark-prismjs`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;`gatsby-remark-copy-linked-files`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s2"&gt;`gatsby-remark-smartypants`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the same &lt;em&gt;gatsby-config.js&lt;/em&gt; file, replace &lt;code&gt;gatsby-plugin-feed&lt;/code&gt; with &lt;code&gt;gatsby-plugin-feed-mdx&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- resolve: `gatsby-plugin-feed`,
&lt;/span&gt;&lt;span class="gi"&gt;+ resolve: `gatsby-plugin-feed-mdx`,
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, change the plugin's configuration to replace all occurrences of &lt;code&gt;allMarkdownRemark&lt;/code&gt; with &lt;code&gt;allMDX&lt;/code&gt; and replace &lt;code&gt;html&lt;/code&gt; with &lt;code&gt;body&lt;/code&gt; in the GraphQL query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;resolve: `gatsby-plugin-feed-mdx`,
&lt;/span&gt;      options: {
        query: `
          {
            site {
              siteMetadata {
                title
                description
                siteUrl
                site_url: siteUrl
              }
            }
          }
        `,
        feeds: [
          {
&lt;span class="gd"&gt;-           serialize: ({ query: { site, allMarkdownRemark } }) =&amp;gt; {
&lt;/span&gt;&lt;span class="gi"&gt;+           serialize: ({ query: { site, allMdx } }) =&amp;gt; {
&lt;/span&gt;&lt;span class="gd"&gt;-             return allMarkdownRemark.nodes.map(node =&amp;gt; {
&lt;/span&gt;&lt;span class="gi"&gt;+             return allMdx.nodes.map(node =&amp;gt; {
&lt;/span&gt;                return Object.assign({}, node.frontmatter, {
                  description: node.excerpt,
                  date: node.frontmatter.date,
                  url: site.siteMetadata.siteUrl + node.fields.slug,
                  guid: site.siteMetadata.siteUrl + node.fields.slug,
                  custom_elements: [{ "content:encoded": node.html }],
                })
              })
            },
            query: `
              {
&lt;span class="gd"&gt;-               allMarkdownRemark(
&lt;/span&gt;&lt;span class="gi"&gt;+               allMdx(
&lt;/span&gt;                  sort: { order: DESC, fields: [frontmatter___date] },
                ) {
                  nodes {
                    excerpt
&lt;span class="gd"&gt;-                   html
&lt;/span&gt;&lt;span class="gi"&gt;+                   body
&lt;/span&gt;                    fields {
                      slug
                    }
                    frontmatter {
                      title
                      date
                    }
                  }
                }
              }
            `,
            output: "/rss.xml",
            title: "Jane Doe RSS Feed",
          },
        ],
      },
    },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-uninstall-redundant-plugins"&gt;
  &lt;/a&gt;
  Step 3: Uninstall Redundant Plugins
&lt;/h2&gt;

&lt;p&gt;Now that &lt;code&gt;gatsby-transformer-remark&lt;/code&gt; and &lt;code&gt;gatsby-plugin-feed&lt;/code&gt; are no longer used, you can uninstall them by running the following commands in the terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm uninstall &lt;span class="nt"&gt;--save&lt;/span&gt; gatsby-transformer-remark gatsby-plugin-feed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to save the changes in &lt;em&gt;gatsby-config.js.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-edit-the-gatsby-node-file"&gt;
  &lt;/a&gt;
  Step 4: Edit the Gatsby Node File
&lt;/h2&gt;

&lt;p&gt;In the &lt;em&gt;gatsby-node.js&lt;/em&gt; file, start by updating the GraphQL query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const result = await graphql(
&lt;/span&gt;    `
      {
&lt;span class="gd"&gt;-         allMarkdownRemark(
&lt;/span&gt;&lt;span class="gi"&gt;+         allMdx(
&lt;/span&gt;          sort: { fields: [frontmatter___date], order: ASC }
          limit: 1000
        ) {
          nodes {
            id
            fields {
              slug
            }
          }
        }
      }
    `
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The new query becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`
      {
          allMdx(
          sort: { fields: [frontmatter___date], order: ASC }
          limit: 1000
        ) {
          nodes {
            id
            fields {
              slug
            }
          }
        }
      }
    `&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now edit the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;-  const posts = result.data.allMarkdownRemark.nodes
&lt;/span&gt;&lt;span class="gi"&gt;+  const posts = result.data.allMdx.nodes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, in the &lt;code&gt;onCreateNode&lt;/code&gt; export:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;exports.onCreateNode = ({ node, actions, getNode }) =&amp;gt; {
&lt;/span&gt;  const { createNodeField } = actions

- if (node.internal.type === `MarkdownRemark`) {
&lt;span class="gi"&gt;+ if (node.internal.type === `Mdx`) {
&lt;/span&gt;    const value = createFilePath({ node, getNode })

    createNodeField({
      name: `slug`,
      node,
      value,
    })
  }
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After changes, it becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onCreateNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getNode&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createNodeField&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;`Mdx`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createFilePath&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getNode&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="nx"&gt;createNodeField&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`slug`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to save the changes in &lt;em&gt;gatsby-node.js.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-edit-the-front-page"&gt;
  &lt;/a&gt;
  Step 5: Edit the Front Page
&lt;/h2&gt;

&lt;p&gt;In  &lt;em&gt;src/pages/index.js&lt;/em&gt; , replace occurrences of &lt;code&gt;allMarkdownRemark&lt;/code&gt; with &lt;code&gt;allMdx&lt;/code&gt; in the &lt;code&gt;BlogIndex&lt;/code&gt; functional component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- const posts = data.allMarkdownRemark.nodes
&lt;/span&gt;&lt;span class="gi"&gt;+ const posts = data.allMdx.nodes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same needs to be done in the GraphQL query.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {
&lt;/span&gt;&lt;span class="gi"&gt;+ allMdx(sort: { fields: [frontmatter___date], order: DESC }) {
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the change, the query becomes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pageQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="s2"&gt;`
  query {
    site {
      siteMetadata {
        title
      }
    }
    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {
      nodes {
        excerpt
        fields {
          slug
        }
        frontmatter {
          date(formatString: "MMMM DD, YYYY")
          title
          description
        }
      }
    }
  }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to save the changes in &lt;em&gt;src/pages/index.js.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-edit-the-blog-post-template-file"&gt;
  &lt;/a&gt;
  Step 6: Edit the Blog Post Template File
&lt;/h2&gt;

&lt;p&gt;In &lt;em&gt;src/templates/blog-post.js&lt;/em&gt;, replace &lt;code&gt;markdownRemark&lt;/code&gt; with &lt;code&gt;mdx&lt;/code&gt; in the &lt;code&gt;BlogPostTemplate&lt;/code&gt; functional component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- const post = data.markdownRemark
&lt;/span&gt;&lt;span class="gi"&gt;+ const post = data.mdx
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also replace occurrences of &lt;code&gt;markdownRemark&lt;/code&gt; with &lt;code&gt;mdx&lt;/code&gt; in the GraphQL query, and use &lt;code&gt;body&lt;/code&gt; instead of &lt;code&gt;html&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;export const pageQuery = graphql`
&lt;/span&gt;  query BlogPostBySlug(
    $id: String!
    $previousPostId: String
    $nextPostId: String
  ) {
    site {
      siteMetadata {
        title
      }
    }
&lt;span class="gd"&gt;-   markdownRemark(id: { eq: $id }) {
&lt;/span&gt;&lt;span class="gi"&gt;+   mdx(id: { eq: $id }) {
&lt;/span&gt;
      id
      excerpt(pruneLength: 160)
&lt;span class="gd"&gt;-     html
&lt;/span&gt;&lt;span class="gi"&gt;+     body
&lt;/span&gt;      frontmatter {
        title
        date(formatString: "MMMM DD, YYYY")
        description
      }
    }
&lt;span class="gd"&gt;-   previous: markdownRemark(id: { eq: $previousPostId }) {
&lt;/span&gt;&lt;span class="gi"&gt;+   previous: mdx(id: { eq: $previousPostId }) {
&lt;/span&gt;      fields {
        slug
      }
      frontmatter {
        title
      }
    }
&lt;span class="gd"&gt;-   next: markdownRemark(id: { eq: $nextPostId }) {
&lt;/span&gt;&lt;span class="gi"&gt;+   next: mdx(id: { eq: $nextPostId }) {
&lt;/span&gt;      fields {
        slug
      }
      frontmatter {
        title
      }
    }
  }
&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final query looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pageQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="s2"&gt;`
  query BlogPostBySlug(
    $id: String!
    $previousPostId: String
    $nextPostId: String
  ) {
    site {
      siteMetadata {
        title
      }
    }
    mdx(id: { eq: $id }) {
      id
      excerpt(pruneLength: 160)
      body
      frontmatter {
        title
        date(formatString: "MMMM DD, YYYY")
        description
      }
    }
    previous: mdx(id: { eq: $previousPostId }) {
      fields {
        slug
      }
      frontmatter {
        title
      }
    }
    next: mdx(id: { eq: $nextPostId }) {
      fields {
        slug
      }
      frontmatter {
        title
      }
    }
  }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add an import statement for &lt;code&gt;MDXRenderer&lt;/code&gt; at the top of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;   import * as React from "react"
   import { Link, graphql } from "gatsby"
&lt;span class="gi"&gt;+  import { MDXRenderer } from "gatsby-plugin-mdx"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, find the the &lt;code&gt;&amp;lt;section/&amp;gt;&lt;/code&gt; element with the &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute and replace it with the &lt;code&gt;MDXRenderer&lt;/code&gt; component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;- &amp;lt;section dangerouslySetInnerHTML={{ __html: post.html }}
-   itemProp="articleBody"
- /&amp;gt;
&lt;/span&gt;
+ &amp;lt;MDXRenderer&amp;gt;{post.body}&amp;lt;MDXRenderer/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to save the changes in &lt;em&gt;src/templates/blog-post.js.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-7-add-an-mdx-blog-post-to-test-your-changes"&gt;
  &lt;/a&gt;
  Step 7: Add an .mdx Blog Post to Test Your Changes
&lt;/h2&gt;

&lt;p&gt;With all setup now complete, it's time to test that everything is working as it should. Add a new &lt;em&gt;index.mdx&lt;/em&gt; file in &lt;em&gt;content/blog/hello-mdx&lt;/em&gt;. Import components right in your mdx file or write some JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Hello&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;MDX!"&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;2021-10-25"&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;The&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;first&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;post&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;using&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;MDX!"&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
import {Button} from './button.js'

This post is written in MDX, allowing you to embed a component after block of code which explains its creation!&lt;span class="sb"&gt;

    js
    here's a button in React!
    &amp;lt;button onClick={alert("Hello MDX!")}&amp;gt;test&amp;lt;/button&amp;gt;

    Wow! Such button!


&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Button&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/Button&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, run &lt;code&gt;gatsby develop&lt;/code&gt; in your terminal and check out your new post. The &lt;code&gt;&amp;lt;Button&amp;gt;&lt;/code&gt; component should be rendered as an element:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0REFgw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t38ndt5f76mxcowif84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0REFgw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8t38ndt5f76mxcowif84.png" alt="Screenshot of the new blog post demonstrating successful MDX integration, with the alert box showing up after pressing the button component." width="880" height="938"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, to make sure your RSS feed is being correctly generated, use &lt;code&gt;gatsby build&lt;/code&gt; and &lt;code&gt;gatsby serve&lt;/code&gt;, then navigate to localhost:9000/rss.xml. The RSS plugin does not generate a file in development mode, so you need to use a production build instead to test the functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finished"&gt;
  &lt;/a&gt;
  Finished!
&lt;/h2&gt;

&lt;p&gt;And you're done! If anything hasn't quite gone according to plan, check out the official docs for the &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/"&gt;gatsby-plugin-mdx&lt;/a&gt; plugin, and the &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-feed-mdx/"&gt;gatsby-plugin-feed-mdx&lt;/a&gt; plugin. If you're new to MDX, Gatsby have &lt;a href="https://www.gatsbyjs.com/docs/mdx/"&gt;an awesome guide&lt;/a&gt; for new users.&lt;/p&gt;

&lt;p&gt;Also, if you are following along with my series on building up a personal website, you can check the other branches in the &lt;a href="https://github.com/rossettiquette/my-tutorial-site/"&gt;GitHub repo&lt;/a&gt; for updates to the tutorial project.&lt;/p&gt;

&lt;p&gt;And if you get stuck, you can always hit me up on &lt;a href="https://twitter.com/rossettiquette"&gt;Twitter&lt;/a&gt; for help!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://annarossetti.com/articles/how-to-add-mdx-to-gatsby/"&gt;my website&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>mdx</category>
      <category>writing</category>
      <category>react</category>
    </item>
    <item>
      <title>Tips to prevent a serverless wreck</title>
      <author>Matt Lewis</author>
      <pubDate>Mon, 15 Nov 2021 12:19:20 +0000</pubDate>
      <link>https://dev.to/aws-heroes/tips-to-prevent-a-serverless-wreck-15af</link>
      <guid>https://dev.to/aws-heroes/tips-to-prevent-a-serverless-wreck-15af</guid>
      <description>&lt;p&gt;Lately I've been involved in reviewing services developed using 'serverless' that had been struggling with performance issues. Rather than talk about all the benefits of serverless, this post looks at some top tips for keeping your service operational and production-ready, gained from analysing these real life issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-1-focus-on-observability-not-logs"&gt;
  &lt;/a&gt;
  TIP 1: Focus on observability not logs
&lt;/h3&gt;

&lt;p&gt;As an engineer, or someone responsible for monitoring a service, the best way to easily find and fix issues is through the use of observability and serverless monitoring tools rather than focusing on logs. Although AWS provide a service called &lt;code&gt;AWS X-Ray&lt;/code&gt; for distributed tracing, there are better tools in the partner ecosystems such as those provided by &lt;a href="https://lumigo.io/"&gt;Lumigo&lt;/a&gt;, &lt;a href="https://www.thundra.io/apm"&gt;Thundra&lt;/a&gt;, &lt;a href="https://www.instana.com/"&gt;Instana&lt;/a&gt; and several others. For example, Lumigo provides some key benefits over &lt;code&gt;X-Ray&lt;/code&gt; such as (thanks to &lt;a href="https://twitter.com/theburningmonk"&gt;Yan Cui&lt;/a&gt; for highlighting some of these):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto-instrumentation&lt;/li&gt;
&lt;li&gt;support for streams&lt;/li&gt;
&lt;li&gt;dashboard with overview of environment - lambda invocations, most errors, cold starts&lt;/li&gt;
&lt;li&gt;issues page showing recent failures including timeouts&lt;/li&gt;
&lt;li&gt;captures request and response for every HTTP request&lt;/li&gt;
&lt;li&gt;supports auto-scrubbing of sensitive data&lt;/li&gt;
&lt;li&gt;supports searching for specific transactions&lt;/li&gt;
&lt;li&gt;built in alerting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although there is still value in logging when stepping through complex business logic, you will soon find that these observability tools are your first point of call for understanding the behaviour and current state of your service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-2-alert-from-metrics"&gt;
  &lt;/a&gt;
  TIP 2: Alert from metrics
&lt;/h3&gt;

&lt;p&gt;Historically, I'd been involved in writing systems where you would log a failure using an &lt;code&gt;ERROR&lt;/code&gt; log level. These logs would be shipped, and another component would scrape the files, and alert based on log patterns. Unfortunately, it is still common to see this same approach replicated in a cloud environment.&lt;/p&gt;

&lt;p&gt;My recommended approach today is to use metrics. For example, when your function has finished processing, Lambda sends metrics about the invocation to &lt;code&gt;Amazon Cloudwatch&lt;/code&gt;. You can set alarms to respond to these changes in metrics, and out of the box Lambda provides a number of Invocation, Performance and Concurrency metrics. You can also create your own custom metrics using the Cloudwatch embedded metric format, taking into account your own specific context, which can be alerted on in the same way.&lt;/p&gt;

&lt;p&gt;A starting point for what alerts to configure for common AWS services is provided in &lt;a href="https://lumigo.io/blog/what-alerts-should-you-have-for-serverless-applications/"&gt;this post&lt;/a&gt; by &lt;a href="https://twitter.com/theburningmonk"&gt;Yan Cui&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although it is possible to ingest metrics into external systems, this should not be done for the purpose of alerting. This is because there is often a delay with the asynchronous nature of ingesting metrics, by which time, you are already aware of the errors from disappointed customers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-3-focus-on-async"&gt;
  &lt;/a&gt;
  TIP 3: Focus on async
&lt;/h3&gt;

&lt;p&gt;The serverless application lens part of the &lt;code&gt;Well Architected Framework&lt;/code&gt; noted that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;you can no longer sustain complex workflows using synchronous transactions. The more service interaction you need the more you end up chaining calls that may end up increasing the risk on service stability as well as response time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first two fallacies of "the 8 fallacies of distributed computing" are that "the network is reliable" and "latency is zero". Chaining together synchronous HTTP calls leads to a brittle service that is prone to break. This led to Tim Bray, a former distinguished engineer at AWS, to state that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äúif your application is cloud-native, or large-scale, or distributed, and doesn‚Äôt include a messaging component, that‚Äôs probably a bug.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are plenty of options available to decouple components in the AWS ecosystem. To get a better understanding of the differences between Events, Queues, Topics and Streams it's worth watching this &lt;a href="https://www.youtube.com/watch?v=d9Jb1WKCLd8"&gt;TechTalk&lt;/a&gt; by &lt;a href="https://twitter.com/julian_wood"&gt;Julian Wood&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally, I'm excited at the growing adoption of event-driven applications using an event bus provided by &lt;code&gt;Amazon EventBridge&lt;/code&gt;. Rather than orchestrating calls between components, you can publish an event that represents a significant change in state, and other components can subscribe to these events and respond accordingly. A good place to start here is looking at the talks and blogs by &lt;a href="https://twitter.com/sheenbrisals"&gt;Sheen Brisals&lt;/a&gt; on how Lego have adopted EventBridge.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-4-understand-your-timings"&gt;
  &lt;/a&gt;
  TIP 4: Understand your timings
&lt;/h3&gt;

&lt;p&gt;There is a fantastic article on the AWS Builders Library that talks about &lt;a href="https://aws.amazon.com/builders-library/timeouts-retries-and-backoff-with-jitter/"&gt;'Timeouts, retries and backoff with jitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you design a service, you need to be aware of the timeout settings and retry behaviour of all components in the flow of data from the frontend all the way to the backend. There is no point setting a Lambda timeout of 60 seconds if it is triggered by API Gateway with a default timeout of 29 seconds that cannot be increased.&lt;/p&gt;

&lt;p&gt;Alongside the timeout within a service, there are also timeout settings within the SDK. The default behaviour for the AWS SDK is different based on the service being invoked and the specific driver being used as highlighted in this &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/lambda-function-retry-timeout-sdk/"&gt;knowledge centre article&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--naoJ3lNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8lgo1wfwybif5hlfixi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--naoJ3lNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8lgo1wfwybif5hlfixi.png" alt="AWS SDK Timeouts" width="880" height="175"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the cases I looked at, no socket timeout had been set whilst using the AWS SDK for JavaScript. This meant that when a network problem was encountered, the API call would hang for 120 seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-5-know-your-design-patterns"&gt;
  &lt;/a&gt;
  TIP 5: Know your design patterns
&lt;/h3&gt;

&lt;p&gt;After saying that you should focus on asynchronous communication, there are times when you have no choice but to make a synchronous call. This may because you are reliant on an external interface. In which case, if the external API is failing, best practice is to respond back to the calling client immediately by closing the circuit, whilst retrying the API in the background until it is ready for the circuit to be opened. This is the basis of the &lt;code&gt;Circuit Breaker&lt;/code&gt; design pattern. &lt;a href="https://twitter.com/jeremy_daly"&gt;Jeremy Daly&lt;/a&gt; has written up a number of &lt;a href="https://www.jeremydaly.com/serverless-microservice-patterns-for-aws/"&gt;Serverless Microservice Patterns for AWS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-6-optimise-your-service"&gt;
  &lt;/a&gt;
  TIP 6: Optimise your service
&lt;/h3&gt;

&lt;p&gt;The bottom line is the more you understand both the programming language and the AWS services you are using, the better the chances of delivering a resilient, secure and highly available service.&lt;/p&gt;

&lt;p&gt;At a high level, I will break down optimising your service into three main areas:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a) General Optimisations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are set of optimisations when working with AWS Lambda functions that have emerged over time. AWS publish a set of &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html"&gt;best practices for working AWS Lambda functions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Having a good knowledge of the AWS Lambda lifecycle alongside associated configurations is essential. Some examples include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure HTTP Keep-Alive is enabled if using Nodejs&lt;/li&gt;
&lt;li&gt;Reduce package size to reduce cold start times using tools like &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;esbuild&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;AWS Lambda Power Tuning&lt;/code&gt; tool by &lt;a href="https://twitter.com/alex_casalboni"&gt;Alex Casalboni&lt;/a&gt; to determine the right memory/power configuration and instruction set architecture&lt;/li&gt;
&lt;li&gt;Use reserved concurrency to limit the blast radius of a function where appropriate. I have seen examples where this not being set during a batch load has resulted in the entire AWS Lambda concurrent executions for an entire account being consumed&lt;/li&gt;
&lt;li&gt;Initialise SDK clients and database connections out of the function handler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;b) Reduce network calls&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each time a call is made over the network, additional latency and error handling is introduced. These calls should be reduced to the minimum possible, and two specific examples come to mind.&lt;/p&gt;

&lt;p&gt;The first is where a call was made to DynamoDB to check a record doesn't exist, before a second call was made to put an Item. In this case, using a Condition Expression enabled this to be done in a single call.&lt;/p&gt;

&lt;p&gt;The second involved multiple calls to DynamoDB to retrieve data once after the other. In this case, the challenge was down to poor schema design. The growing adoption of Single Table Design in DynamoDB is driven by the desire to reduce the number of calls needed. &lt;/p&gt;

&lt;p&gt;If you plan on using DynamoDB in production, &lt;a href="https://www.dynamodbbook.com/"&gt;'The DynamoDB Book'&lt;/a&gt; by &lt;a href="https://twitter.com/alexbdebrie"&gt;Alex DeBrie&lt;/a&gt; is essential reading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c) Parallelise where possible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Although we want to reduce the number of network calls, sometimes there is no other option. In these cases, you should look to run in parallel. This has the overall result of reducing the function duration and the latency experienced by the calling consumer. In asynchronous JavaScript, it is easy to run tasks in parallel and wait for all of them to complete using &lt;code&gt;Promise.all&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; there are some optimisations that are good to always do since they are essentially free to carry out. Other ones will take up engineering time to set up, run, analyse and refactor. It makes sense to focus on the most frequently invoked services or functions or those that observability tools have highlighted as poorly performing. Always be careful over optimising and not taking into account engineering effort.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tip-7-serverless-lambda"&gt;
  &lt;/a&gt;
  TIP 7: Serverless != Lambda
&lt;/h3&gt;

&lt;p&gt;Finally, remember that &lt;code&gt;AWS Lambda&lt;/code&gt; is not a silver bullet.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;AWS Lambda&lt;/code&gt; was first launched, the configuration options where limited, which made it a simple service to use. Now, with Lambda extensions, layers, up to 15 minute timeout, and up to 10 GB memory allocation, all kinds of use cases have been opened up. However, this often leads to the default choice being writing a new function. If you are writing an ETL batch job using &lt;code&gt;AWS Lambda&lt;/code&gt; where you are having to chunk down files to process and allocate 15 minute timeout and 10GB RAM, it is likely there are better "serverless" options out there such as &lt;code&gt;AWS Glue&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;One thing better than writing a function which you have to manage and maintain is not writing a function at all, and this way we are moving to an approach of "favouring configuration over code".&lt;/p&gt;

&lt;p&gt;At the last AWS re:Invent, there was an announcement for &lt;a href="https://aws.amazon.com/glue/features/elastic-views/"&gt;AWS Glue Elastic Views&lt;/a&gt; which is currently in preview. This removes the need to write custom functions to combine and replicate data. More recent is the announcement that &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/aws-step-functions-200-aws-sdk-integration/"&gt;Step Functions now has direct integration for over 200 AWS Services&lt;/a&gt;. Again, this removes the need for writing custom code.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>aws</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Taking advantage of react-router v6 to manage Providers</title>
      <author>Daniel K≈Çys</author>
      <pubDate>Mon, 15 Nov 2021 12:15:17 +0000</pubDate>
      <link>https://dev.to/danielklys7/taking-advantage-of-react-router-v6-to-manage-providers-57np</link>
      <guid>https://dev.to/danielklys7/taking-advantage-of-react-router-v6-to-manage-providers-57np</guid>
      <description>&lt;h5&gt;
  &lt;a href="#all-of-us-know-how-tricky-may-react-architecture-be-one-of-the-best-approach-that-i-bumped-into-during-my-react-developer-career-was-to-move-files-around-until-it-feels-right"&gt;
  &lt;/a&gt;
  All of us know how tricky may react architecture be. One of the best approach that I bumped into during my react developer career was to &lt;a href="https://react-file-structure.surge.sh/"&gt;move files around until it feels right&lt;/a&gt;
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#and-today-id-love-to-share-my-approach-to-setup-raw-ltappproviders-gt-endraw-with-react-router-v6"&gt;
  &lt;/a&gt;
  and today I'd love to share my approach to setup &lt;code&gt;&amp;lt;AppProviders /&amp;gt;&lt;/code&gt; with &lt;a href="https://reactrouter.com/"&gt;React Router v6&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;React Router provides us with powerful tool which is nested routes. Right now we may create routes in the following fashion:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const Router = ({ providers }: { providers: React.ReactElement }) =&amp;gt; (
  &amp;lt;BrowserRouter&amp;gt;
    &amp;lt;Routes&amp;gt;
      &amp;lt;Route path={AppRoute.home} element={providers}&amp;gt;
        &amp;lt;Route index element={&amp;lt;Home /&amp;gt;} /&amp;gt;
      &amp;lt;/Route&amp;gt;
    &amp;lt;/Routes&amp;gt;
  &amp;lt;/BrowserRouter&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and if our &lt;code&gt;&amp;lt;AppProviders /&amp;gt;&lt;/code&gt; contains &lt;code&gt;&amp;lt;Outlet/&amp;gt;&lt;/code&gt; inside, it will also render content of our &lt;code&gt;subroute&lt;/code&gt;, in this case &lt;code&gt;&amp;lt;Home /&amp;gt;&lt;/code&gt;, as it is &lt;code&gt;index ('/')&lt;/code&gt; of our precedent route.&lt;/p&gt;

&lt;p&gt;So what we want to do is create our &lt;code&gt;&amp;lt;AppProviders /&amp;gt;&lt;/code&gt; right now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const AppProviders = () =&amp;gt; {
  const queryClient = new QueryClient();
  const theme = createTheme();

  return (
    &amp;lt;QueryClientProvider client={queryClient}&amp;gt;
      &amp;lt;CssBaseline /&amp;gt;
      &amp;lt;ThemeProvider theme={theme}&amp;gt;
        &amp;lt;Layout&amp;gt;
          &amp;lt;Outlet /&amp;gt;
        &amp;lt;/Layout&amp;gt;
      &amp;lt;/ThemeProvider&amp;gt;
      {openReactQueryDevtools &amp;amp;&amp;amp; &amp;lt;ReactQueryDevtools initialIsOpen={false} /&amp;gt;}
    &amp;lt;/QueryClientProvider&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could make more levels of routing to handle styles and &lt;code&gt;&amp;lt;Layout /&amp;gt;&lt;/code&gt; appearance but in this simple scenario it's not necessary.  &lt;/p&gt;

&lt;p&gt;Then we could simply pass our &lt;code&gt;&amp;lt;AppProviders /&amp;gt;&lt;/code&gt; as an prop to our Routing where we want to do it, for me it's &lt;code&gt;index.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;Router providers={&amp;lt;AppProviders /&amp;gt;} /&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById('root'),
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dtEHrJl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.memecreator.org/static/images/memes/5137923.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dtEHrJl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.memecreator.org/static/images/memes/5137923.jpg" alt="software architecture meme" width="430" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully it could help any of you improving your react architecture-game. &lt;/p&gt;

</description>
      <category>react</category>
      <category>architecture</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top Benefits of Video Ad Management</title>
      <author>hermoni versa</author>
      <pubDate>Mon, 15 Nov 2021 12:14:36 +0000</pubDate>
      <link>https://dev.to/hermoniversa/top-benefits-of-video-ad-management-5glp</link>
      <guid>https://dev.to/hermoniversa/top-benefits-of-video-ad-management-5glp</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.webnexs.com/vod-platform.php"&gt;Advertising Video-on-demand&lt;/a&gt;&lt;/strong&gt;(AVOD) is an advertisement genre streaming in digital screens, which is actually free for viewers but we need to spend time on the ads posted. Ads involve Pre-Ads, Mid-Ads &amp;amp; Post-Ads. It influences the viewers to get recognition about the services and pushing them to contribute. &lt;br&gt;
Webnexs solution excels in the Ad-based monetization process for delivering the best experiences and standardized video content for their viewers. The advertisements are inserted on the platform by,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Platform Owners&lt;/strong&gt; - Admin themself manage the ads insertion under Admin Panel ‚Üí Ad-Management&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ad-Managers&lt;/strong&gt; - Admin schedules the task of ads insertion to Ad-Managers, thereby providing them separate login. Ad-Manages are like sub-admin, assigned especially for Ad-Management service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publishers&lt;/strong&gt; - The corporate or agencies those who need to publish their Ads in the VOD platform have a separate login to manage their own ads. The publishers are provided with detailed reports that help them to have analytics of their Ads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits"&gt;
  &lt;/a&gt;
  BENEFITS:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Push revenue:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ad-Based videos steer major revenue for every business. Electronic ads are getting a huge pool of money in the current technology. Effective video ad monetization process promises the popularity &amp;amp; income generated in the business. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supports in Every device:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Evolution of internet technology provides video advertising content to reach netizen's devices. Being free of cost, viewers tend to watch the content at zero cost. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Increase Audience base:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another benefit is, it maximizes the audience base. It raises revenues based on the enlarging of ad-views. High visibility of ads results in a high turnover of returns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ways-for-building-your-ad-monetization-business"&gt;
  &lt;/a&gt;
  WAYS FOR BUILDING YOUR AD MONETIZATION BUSINESS:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Set up your Ad server:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Constructing an Ad-server or Network is an essential step to broadcast your advertising videos. It connects the viewers with network communication done by the company. Ad-networks are specialized in delivering various types of content smoothly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Insert Ads into your Videos:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After building up your servers, you can insert &amp;amp; upload ads into your videos. Many online video platforms are here to publish your ads in a simple way. It grants your videos to be run in any kind of browser/device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traces Profits:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At last, You can track and analyze your video ads that meet the profits or not. Also, you can get more information from video analytics that exist in the online video platform(OVP). Collected Information will helpful in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recognize your Top/bottom engaging content&lt;/li&gt;
&lt;li&gt;Correspond sight with ad revenues&lt;/li&gt;
&lt;li&gt;Addresses audience with Physical location&lt;/li&gt;
&lt;li&gt;Examine occasions for launching contents&lt;/li&gt;
&lt;li&gt;Figure out Usage frequency&lt;/li&gt;
&lt;li&gt;Identify devices utilized by the audience. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This information can help in providing a business decision, budgeting and making strategic activities to sustain development in this industry.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION:
&lt;/h1&gt;

&lt;p&gt;Creating your Ad based monetization provides the superiority of video ads &amp;amp; promotes your content in publishing your video platform.&lt;br&gt;
&lt;strong&gt;&lt;a href="https://www.webnexs.com/vod-platform.php"&gt;Webnexs Solution&lt;/a&gt;&lt;/strong&gt; handles an adequate approach for initiating standardized video advertising and inspect analytics to report your business frequently.   &lt;/p&gt;

</description>
      <category>videoad</category>
      <category>admanagement</category>
      <category>avod</category>
    </item>
    <item>
      <title>What customers want in an eCommerce site?</title>
      <author>WEBSI</author>
      <pubDate>Mon, 15 Nov 2021 12:11:09 +0000</pubDate>
      <link>https://dev.to/websi/what-customers-want-in-an-ecommerce-site-2imb</link>
      <guid>https://dev.to/websi/what-customers-want-in-an-ecommerce-site-2imb</guid>
      <description>&lt;p&gt;E-commerce websites appear to be a big deal these days and are the integral parts of the overall shopping scenario of this era. Your web store is the best way to let people infer what you are up to.  It's the most important and suitable platform to communicate your true value quotient and brand essence. So, you cannot take the web store for granted. &lt;br&gt;
Therefore, allow us to give you a pen picture as to what you should do on the interface to keep the virtual traffic coming. &lt;br&gt;
Simple product descriptions &lt;br&gt;
If you consult any &lt;a href="https://websi.in/"&gt;eCommerce development company in Kolkata&lt;/a&gt;, you will get enlightened on the importance of simple product descriptions on the web pages. &lt;br&gt;
Easy payment solutions &lt;br&gt;
Your target market segment or target customers would surely look at getting the leverage of easy payment solutions while striking a deal with you. So, keep that aspect in mind. Your e-commerce portal will bestow you with that particular feature. However, it is imperative that you employ a seasoned eCommerce web design entity to design and develop the web store. &lt;br&gt;
Manageable interface&lt;br&gt;
Based on the user requirements, you can choose to make the interface more manageable for the end users. It should be a convenient aspect for the users whom you are aiming at. &lt;br&gt;
Exciting discounts/ features &lt;br&gt;
Considerable number of discounts and user-friendly features would augment the stature of your e-commerce interface in front of the target audience. Offers and discounts will attract visitors. What's more, they will help you manage the online reputation to an optimal level. &lt;br&gt;
Services available for 24/7 &lt;br&gt;
When visitors would come to shop at your virtual store front, they will expect availability for 24/7. It is a must and this is one of the main reasons why business owners choose to have a website in the first place. &lt;br&gt;
The verdict &lt;br&gt;
It is the perfect compilation of consumer-focused features and  &lt;a href="https://websi.in/"&gt;eCommerce web design Kolkata &lt;/a&gt; which would attract a huge number of visitors to the web store. So, it is time for you to act prudently. Keep the aforesaid points in mind and give a rewarding experience to your customers. &lt;/p&gt;

</description>
      <category>ecommercedevelopment</category>
      <category>ecommercewebdesign</category>
      <category>ecommercewebdevelopment</category>
    </item>
    <item>
      <title>Adding Title Meta in Vue App</title>
      <author>LANRE OLANLOKUN</author>
      <pubDate>Mon, 15 Nov 2021 12:09:24 +0000</pubDate>
      <link>https://dev.to/iamdyt/adding-title-meta-in-vue-app-37k2</link>
      <guid>https://dev.to/iamdyt/adding-title-meta-in-vue-app-37k2</guid>
      <description>&lt;p&gt;This is going to be a short post.&lt;br&gt;
If you have ever-worked with NUxTJS, you would discover there is a helper method head() that gives access to manipulating HTML Head metadata tags, the likes of meta, title, link etc., and unlike NUXTJS VUESJS doesnt have this helper out of the box but one of the sure way to get this done in vuejs is by using the default "document object" that came with our browser.&lt;/p&gt;

&lt;p&gt;Let's see How&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open your VUEJS SFC (Single File Component).&lt;/li&gt;
&lt;li&gt;Navigate to the script tag.&lt;/li&gt;
&lt;li&gt;Write the created hook if it doesnt exist.&lt;/li&gt;
&lt;li&gt;Inside the created hook write.&lt;/li&gt;
&lt;li&gt;document.title = "Your title".
Do this for remaining SFC (.vue files) files in your app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
