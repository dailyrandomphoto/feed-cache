<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Difference between parameter and argument</title>
      <author>icncsx</author>
      <pubDate>Wed, 17 Nov 2021 17:21:37 +0000</pubDate>
      <link>https://dev.to/icncsx/difference-between-parameter-and-argument-50p0</link>
      <guid>https://dev.to/icncsx/difference-between-parameter-and-argument-50p0</guid>
      <description>&lt;p&gt;The two terms are used interchangeably in conversation, but they mean different things. You pass arguments when calling a method. And you use parameters within the method body.&lt;/p&gt;

&lt;p&gt;As most if not all programming languages are copy-by-value, the two are equivalent, only differing in the context. The two terms exist to distinguish whether you are talking about a method definition or a method call. When you're calling a method, you pass in arguments. When you're actually in the method body, you are using parameters. Arguments get copied-by-value to parameters.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>computerscience</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Announcing vite-react-ts-extended</title>
      <author>Ryota Murakami</author>
      <pubDate>Wed, 17 Nov 2021 17:11:52 +0000</pubDate>
      <link>https://dev.to/malloc007/announcing-vite-react-ts-extended-2093</link>
      <guid>https://dev.to/malloc007/announcing-vite-react-ts-extended-2093</guid>
      <description>&lt;h2&gt;
  &lt;a href="#2020-webpack-amp-babel-is-de-facto"&gt;
  &lt;/a&gt;
  2020 Webpack &amp;amp; Babel is de facto
&lt;/h2&gt;

&lt;p&gt;This year there has been a big movement in build tools in the JavaScript community.&lt;br&gt;&lt;br&gt;
In 2020, &lt;a href="https://2020.stateofjs.com/en-US/technologies/"&gt;Webpack&lt;/a&gt;, especially in combination with Babel, seemed to be the de facto standard for build tools.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2021-new-bundler-esbuild-by-golang"&gt;
  &lt;/a&gt;
  2021 New bundler ESBuild by Golang
&lt;/h2&gt;

&lt;p&gt;However, in 2021, the popularity of a completely new development environment/build tool that does not include Webpack has skyrocketed.&lt;br&gt;
Yes, it is &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;.&lt;br&gt;
Super-fast DevServer, super-fast HMR, super-fast build with &lt;a href="https://esbuild.github.io/"&gt;ESBuild&lt;/a&gt; that starts without build.&lt;br&gt;
Vite solves the problem that Webpack+Babel stacks used to have, that Local environment and Production builds become noticeably slower in proportion to the scale of the project.&lt;br&gt;
In &lt;a href="https://www.npmtrends.com/vite-vs-create-react-app"&gt;NPM Trend&lt;/a&gt;, you can see that Vite has overtaken the number of downloads of create-react-app since July.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nextjs-adopt-swc-over-the-babel"&gt;
  &lt;/a&gt;
  Next.js adopt SWC over the Babel
&lt;/h2&gt;

&lt;p&gt;The Next.js team has also responded by abandoning Babel and introducing &lt;a href="https://github.com/swc-project/swc"&gt;SWC&lt;/a&gt;, an ultra-fast TypeScript compiler, in Next v12.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#vitereacttsextended"&gt;
  &lt;/a&gt;
  vite-react-ts-extended
&lt;/h2&gt;

&lt;p&gt;What does that mean for us React Developers?&lt;br&gt;
The answer is that Create React App is no longer a good choice for many use cases.&lt;br&gt;
After four to five years of use as a Production Web Service, a demo for libraries, etc., and as a front-end for Toy App, the create react app seems to have become difficult to keep up with.ASo I created a Vite template for React-TypeScript that inherits the good points of create-react-app.&lt;/p&gt;

&lt;p&gt;The Vite default &lt;code&gt;react-ts&lt;/code&gt; template lacked Jest and ESLint (Prettier integrated).&lt;br&gt;
TailwindCSS has also been set up, which is useful if you want to start writing demo or experimental code right after installation.&lt;/p&gt;

&lt;p&gt;Jest comes pre-installed with React-Testing-Library, Hook-Testing-Library, MSW, and TypeScript support.&lt;/p&gt;

&lt;p&gt;You can easily install and run Jest with the following commands, &lt;/p&gt;

&lt;p&gt;yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx degit laststance/vite-react-ts-extended myapp
cd myapp
yarn install
yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;npm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx degit laststance/vite-react-ts-extended myapp
cd myapp
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;github: &lt;a href="https://github.com/laststance/vite-react-ts-extended"&gt;https://github.com/laststance/vite-react-ts-extended&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;so I would be happy if you could use it as a way to build a instant React+TypeScript development environment for new libraries or anything else! üíÖ&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>vite</category>
    </item>
    <item>
      <title>WordPress 5.7 is available: Changelog explained</title>
      <author>CodeWatchers</author>
      <pubDate>Wed, 17 Nov 2021 17:00:13 +0000</pubDate>
      <link>https://dev.to/codewatchers_en/wordpress-57-is-available-changelog-explained-5ej9</link>
      <guid>https://dev.to/codewatchers_en/wordpress-57-is-available-changelog-explained-5ej9</guid>
      <description>&lt;p&gt;&lt;a href="https://wordpress.org/news/2021/03/esperanza/"&gt;WordPress 5.7&lt;/a&gt; ‚ÄúEsperanza‚Äù was released 2 days ago, and that version is named &lt;strong&gt;Esperanza Spalding&lt;/strong&gt;, which is an American jazz bassist who became an accomplished singer, songwriter, and composer in her early 20‚Äôs.&lt;/p&gt;

&lt;p&gt;The versions 9.3 ‚Äì 9.9 of the Gutenberg plugin are included in this update, bringing hundreds of enhancements and bug fixes that make working in the block editor more efficient and enjoyable.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#draganddrop-for-blocks-and-patterns" class="anchor"&gt;
  &lt;/a&gt;
  Drag-and-Drop for Blocks and Patterns
&lt;/h2&gt;

&lt;p&gt;One thing that we need to highlight is the new capabilities for the block inserter which can now be dragged and dropped. Users can now drag blocks and block patterns directly into the post content area, easing furthermore the page building with Gutenberg.&lt;/p&gt;

&lt;p&gt;That's not all the changes that are made to improve the user experience. We can also consider the following modifications that give more control with existing blocks :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Buttons block&lt;/strong&gt;: The Buttons block now supports vertical alignments, and you can set the width of a button to a preset percentage.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Full height alignment&lt;/strong&gt;: Blocks such as the Cover block now can have an option to be expanded so that it fills the entire viewport.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Font size in more places&lt;/strong&gt;: You can now change the font size in the List and Code blocks&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Social Icons block&lt;/strong&gt;: You can now change the size of the icons in the Social Icons block.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also the block variations UI is improved with a new icon and description within the block inspector along with a dropdown that eases switching between variations. Reusable blocks have been updated to be saved at the same time the post is saved.&lt;/p&gt;

&lt;p&gt;Some more improvements have been added in version 1.0.1 of the Gutenberg plugin, and these aren't yet merged to the core. If you use Reusable blocks frequently, you may want to install the plugin to take advantage of the expanded UI.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#streamlined-admin-color-palette" class="anchor"&gt;
  &lt;/a&gt;
  Streamlined Admin Color Palette
&lt;/h2&gt;

&lt;p&gt;In addition to all the editor improvements, WordPress 5.7 introduces a &lt;a href="https://make.wordpress.org/core/2021/02/23/standardization-of-wp-admin-colors-in-wordpress-5-7/"&gt;streamlined color palette for the admin&lt;/a&gt;. It standardizes the palette to seven core colors and a range of &lt;a href="https://codepen.io/ryelle/full/WNGVEjw"&gt;56 shades&lt;/a&gt;. One of the benefits is that all the shades meet the requirements for &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html"&gt;WCAG 2.0 AA recommended contrast ratio&lt;/a&gt; against white or black.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewatchers.com/en/blog/wordpress-5-7-is-available-changelog-explained?utm_campaign=content-trimming&amp;amp;utm_source=dev.to&amp;amp;utm_medium=link"&gt;Read The Full Tutorial.&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Create Animated Progress Bar HTML</title>
      <author>Muhammad Rauf</author>
      <pubDate>Wed, 17 Nov 2021 16:51:37 +0000</pubDate>
      <link>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</link>
      <guid>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" alt="Image description" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
When thinking about user experience, one commonly occurring problem is not giving feedback to user input. Any action that your users take should cause a reaction. If your application has long-running tasks, it‚Äôs essential to show progress. Otherwise, users will be left confused.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will focus on how CSS transitions can be used to create an animated progress bar. I will leave a link to the GitHub repository at the end of the article where the final project is hosted. This is how the progress bar will look like.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-create-animated-progress-bar-it-takes-three-steps-only"&gt;
  &lt;/a&gt;
  To Create Animated Progress Bar It Takes Three Steps Only:-
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Make a HTML file and define markup&lt;/li&gt;
&lt;li&gt;Make a CSS file and define styling&lt;/li&gt;
&lt;li&gt;Make a JavaScript file and define scripting&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also do it in a single HTML file. Copy the following HTML, CSS and a bit JavaScript code and paste it where you want to show S&lt;/p&gt;

&lt;p&gt;HTML Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"softprogress"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;90%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"90"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;65%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"65"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;95%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"95"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text/css"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* softprogress bar CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ddd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f8d46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nc"&gt;.run-softprogress&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code-softprogress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;"%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--run-softprogress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* End softprogress bar CSS */&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;run-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;`--run-softprogress:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;code-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;%;`&lt;/span&gt;
  &lt;span class="p"&gt;);}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all, this is how to create animated progress bar using jQuery and CSS.You can customize this code further as per your requirement. And please feel free to give comments on this tutorial. Want to learn in detail you can visit our official website &lt;a href="https://softcodeon.com/tutorials/create-animated-progress-bar-html.htm"&gt;Create Animated Progress Bar HTML&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>LaTeX &amp; Macros: Macros with Arguments</title>
      <author>latexteada</author>
      <pubDate>Wed, 17 Nov 2021 16:42:19 +0000</pubDate>
      <link>https://dev.to/latexteada/latex-macros-macros-with-arguments-2a42</link>
      <guid>https://dev.to/latexteada/latex-macros-macros-with-arguments-2a42</guid>
      <description>&lt;p&gt;Hello, how are you? :) &lt;/p&gt;

&lt;p&gt;In this post I tell you &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to declare macros with arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you remember that in &lt;a href="https://dev.to/latexteada/latex-macros-creating-macros-macros-without-arguments-4338"&gt;this&lt;/a&gt; post I gave you a brief introduction to Macros without arguments, these are helpful in those situations where you need the same expression multiple times, but what if you need to have the same expression but just modify something?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-declare-macros-with-arguments"&gt;
  &lt;/a&gt;
  How to declare macros with arguments
&lt;/h2&gt;

&lt;p&gt;The command is the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tex"&gt;&lt;code&gt;&lt;span class="k"&gt;\newcommand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;[args]&lt;span class="p"&gt;{&lt;/span&gt;expr&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;\name&lt;/code&gt; is the name of the command &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;args&lt;/code&gt; is the number of arguments in the command, top 9&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;expr&lt;/code&gt; is the expression to manipulate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You already know what is &lt;code&gt;\name&lt;/code&gt;, but if you have forgotten it, you can check it &lt;a href="https://dev.to/latexteada/latex-macros-creating-macros-macros-without-arguments-4338"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;args&lt;/code&gt;, this is the number of arguments in the command, in other words, the &lt;em&gt;blanks&lt;/em&gt; to be filled&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you want 1 argument you put 1, if you want 2 put 2 and so on. &lt;strong&gt;&lt;em&gt;The maximum number of arguments is 9&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The same number of arguments declared in &lt;code&gt;args&lt;/code&gt; must match with the arguments used in the definition of &lt;code&gt;expr&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;To put the position of the commands, we need to use &lt;code&gt;#&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The arguments have an order&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see some examples to clarify the information &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UjGBrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhsztf1oc1r79njr4zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UjGBrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhsztf1oc1r79njr4zq.png" alt="Image description" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's analyze the code :) &lt;/p&gt;

&lt;p&gt;Here I declare two new commands &lt;/p&gt;

&lt;p&gt;The command &lt;code&gt;\oneArg&lt;/code&gt; has &lt;strong&gt;one&lt;/strong&gt; argument (&lt;em&gt;Which is declared in the square brackets&lt;/em&gt;) and this argument is going to be the exponent of &lt;em&gt;x&lt;/em&gt;. Can you notice, there is a &lt;code&gt;#&lt;/code&gt; this indicates &lt;em&gt;Here is going to be my argument&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The command &lt;code&gt;\twoArgs&lt;/code&gt; has &lt;strong&gt;two&lt;/strong&gt; arguments, one is going to be the variable, and the second is going to be the exponent, again, I use &lt;code&gt;#&lt;/code&gt; to say &lt;em&gt;Here is going to be my argument&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;See, when I use these new commands, check that &lt;code&gt;\oneArg&lt;/code&gt; has one curly brackets while &lt;code&gt;\twoArgs&lt;/code&gt; has two curly brackets&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The curly brackets match with the number of arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That code produces &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQB8dF-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjugdimjwxin9biciwx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQB8dF-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjugdimjwxin9biciwx.png" alt="Image description" width="176" height="119"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But wait, do you remember that the arguments have an order while declaring them, let's check it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZonM6jq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfun7zgdqxx3zsnnsipj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZonM6jq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfun7zgdqxx3zsnnsipj.png" alt="Image description" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we have two new commands &lt;code&gt;\first&lt;/code&gt; and &lt;code&gt;\second&lt;/code&gt; they have two arguments, but there are a subtle difference, did you notice it? Yes &lt;strong&gt;&lt;em&gt;The position of the arguments&lt;/em&gt;&lt;/strong&gt; Let's see what is the output &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XX_AJaGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ezw0068e32cjtgyob0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XX_AJaGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ezw0068e32cjtgyob0.png" alt="Image description" width="144" height="92"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have grasped what &lt;em&gt;have an order&lt;/em&gt; means &lt;/p&gt;

&lt;p&gt;This is all :) &lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

&lt;p&gt;Do not forget to follow me on Twitter &lt;code&gt;@latexteada&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Greetings :) &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>latex</category>
    </item>
    <item>
      <title>Callback Functions, Explain it to me like I'm 5.</title>
      <author>Brijrajsinh parmar</author>
      <pubDate>Wed, 17 Nov 2021 16:36:33 +0000</pubDate>
      <link>https://dev.to/brijrajparmar27/callback-functions-explain-it-to-me-like-im-5-17b0</link>
      <guid>https://dev.to/brijrajparmar27/callback-functions-explain-it-to-me-like-im-5-17b0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIds5KIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1130/1%2AZdcU_oRV2Gz2XLal1uoNxg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIds5KIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1130/1%2AZdcU_oRV2Gz2XLal1uoNxg.jpeg" alt="Image description" width="565" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi, since a 5yo will like chocolates, I will use that as an example!&lt;/p&gt;

&lt;p&gt;Assume you are the 5yo kid, and I give you a chocolate. If you open the wrapper and pop the chocolate into your mouth right away, that is a normal function. On the other hand, if you give it to your mom and she, say, after 5 minutes unwarps the chocolate and pops it into your mouth, voila! you have a callback function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciTfn-6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ACbqCJcKdhm-aJW7WhXA7sw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciTfn-6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ACbqCJcKdhm-aJW7WhXA7sw.jpeg" alt="Image description" width="700" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In programming, if all the data required by a function is ready, we can right away call that function ourselves, as below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;function greet(name) {&lt;br&gt;
   console.log("Hi, " + name )&lt;br&gt;
}&lt;br&gt;
greet("Brij")&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the other hand, assume we should fetch the name from a database over the network, which will take some time ‚Äî known as an asynchronous operation, and in such a case, if we call the &lt;code&gt;greet()&lt;/code&gt; function ourselves, name will still be undefined and our code will not work as intended. In such cases, we pass the &lt;code&gt;greet()&lt;/code&gt; function itself as an argument to another function, say, &lt;code&gt;fetchName()&lt;/code&gt;, that will first do the fetching and then using the fetched data call the &lt;code&gt;greet()&lt;/code&gt; function, as below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;function fetchName(cb) {&lt;br&gt;
   const name = // code to get the name&lt;br&gt;
   cb(name)&lt;br&gt;
}&lt;br&gt;
fetchName(greet)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note that here we are not calling the &lt;code&gt;greet()&lt;/code&gt; function; rather, the &lt;code&gt;fetchName()&lt;/code&gt; function will call it! In other words, we are passing a function as an argument to another function to be called back later by that function.&lt;/p&gt;

&lt;p&gt;I hope the above drops the penny further!&lt;/p&gt;

&lt;p&gt;if you enjoyed this do consider to drop a like or a follow.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>explainlikeimfive</category>
      <category>react</category>
    </item>
    <item>
      <title>7 Best Integration Platforms in 2021 </title>
      <author>Liz Parody</author>
      <pubDate>Wed, 17 Nov 2021 16:14:12 +0000</pubDate>
      <link>https://dev.to/lizparody/7-best-integration-platforms-in-2021-2lg2</link>
      <guid>https://dev.to/lizparody/7-best-integration-platforms-in-2021-2lg2</guid>
      <description>&lt;p&gt;An average mid-size company uses around 140 unique apps. A small business uses around 100, and a large enterprise uses around 290 &lt;a href="https://www.blissfully.com/saas-trends/2020-annual-report/#"&gt;SaaS products across their business&lt;/a&gt;. Just think about it, how many apps do you use per day? Well, companies use a lot more to keep their business running. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The great majority of those apps don't make sense in isolation.&lt;/strong&gt; Just like you prefer Google Docs notifications delivered to you right inside Slack, it's better for companies of all sizes to have their apps integrated or 'talking to each other.' The integration of apps enables the whole to be greater than the sum of its parts, and every app is carefully considered as part of a bigger business strategy.&lt;/p&gt;

&lt;p&gt;Even though the number of unique apps used by companies is quite large, at the same time, &lt;strong&gt;companies are churning through more than 30% of their apps every year&lt;/strong&gt;. So if you have a SaaS product, you should probably think about integrating it with existing apps because it's easier for companies to stop using your product if it's not a fundamental part of their business strategy and if they are not integrated with other apps.&lt;/p&gt;

&lt;p&gt;Integration platforms or iPaaS, help you solve the problem of integrating apps so you can maintain your focus on your SaaS company. Some of them are great if you want to connect two apps, others if you want a customizable integration and multiple tenants, and others for people that prefer no-code integration. There are different integration solutions for different needs, and this blog post will explore 7 different integration platforms following 8 criteria:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Code / no-code integration&lt;/li&gt;
&lt;li&gt;Flexibility and customization of the integration&lt;/li&gt;
&lt;li&gt;Cloud (private or public) / on-premise integration &lt;/li&gt;
&lt;li&gt;User profile&lt;/li&gt;
&lt;li&gt;Customer support, documentation, and training&lt;/li&gt;
&lt;li&gt;SaaS Embedding&lt;/li&gt;
&lt;li&gt;Pricing&lt;/li&gt;
&lt;li&gt;Number of applications supported&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The integration platforms are not ranked in a specific order.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jrYobaDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoqppc0a41qr8up8as6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrYobaDW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uoqppc0a41qr8up8as6.png" alt="Integration Platform Comparison" width="776" height="405"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dell-boomi"&gt;
  &lt;/a&gt;
  Dell Boomi
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NPqAEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4252u9nfy5df3v9x5p0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NPqAEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4252u9nfy5df3v9x5p0h.png" alt="Image description" width="820" height="313"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://boomi.com/"&gt;Dell Boomi&lt;/a&gt; is a cloud-native data integration platform that streamlines integration in complex hybrid cloud ecosystems and removes silos in organizations. The user-friendly interface is backed by intelligent recommendations to provide an end-to-end data integration experience. &lt;/p&gt;

&lt;p&gt;Dell Boomi is developer-friendly and offers a graphical user interface. No-code and low-code integration is available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;br&gt;
Is not as flexible a code-first solution, but it provides a comprehensive library of connectors, coupled with support for various integration patterns that enable you to build many integrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can integrate any combination of On-Premises, Cloud, and SaaS applications or data sources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Boomi offers &lt;a href="https://boomi.com/partners/oem-embedded-partners/#/e02e31"&gt;embedded solution&lt;/a&gt;, for software companies that are looking to integrate with their customers' applications.&lt;/p&gt;

&lt;p&gt;They also have standalone solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://boomi.com/compare/"&gt;There are 5 tiers&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Base: including standard features and support&lt;/li&gt;
&lt;li&gt;Professional: Base + Allows multiple environments (prod/test) and advanced workflows&lt;/li&gt;
&lt;li&gt;Pro Plus: Professional + includes services enablement&lt;/li&gt;
&lt;li&gt;Enterprise: Pro Plus + atom worker, parallel processing, and advanced security&lt;/li&gt;
&lt;li&gt;Enterprise Plus: Enterprise + message queuing, 15 standard connectors, and 2 enterprise connectors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Boomi is mainly for non-technical people, but their low-code solution can be used by technical people as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get in touch with the &lt;a href="https://boomi.com/company/contact/"&gt;contact form&lt;/a&gt;, the &lt;a href="https://community.boomi.com/s/"&gt;Boomi community&lt;/a&gt; and &lt;a href="https://help.boomi.com/"&gt;help and documentation&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dell Boomi comes with 1,500 built-in endpoint connections to automate many common integrations and reduce your time on creating customized connections. Other features included in this platform include API management, data discovery, and data quality governance.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#zapier"&gt;
  &lt;/a&gt;
  Zapier
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xcYsxBKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8gcq0wfejumi4yug36c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xcYsxBKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8gcq0wfejumi4yug36c.png" alt="Zapier integration" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zapier.com/"&gt;Zapier&lt;/a&gt; allows you to connect your apps and easily automate workflows. Anyone can build workflows with a few clicks, and it lets you automatically move info between your web apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You don't have to write code to integrate applications. You can solve problems fast with templates. You can add multiple steps and workflow logic through their drag and drop interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can tweak a template (called a zap) or start from scratch. Tailor automated solutions to your team's needs by adding multiple steps and workflow logic. Zapier falls short when it comes to flexibility and customization since you can only work with what they already have. No-code solutions are generally more rigid than code solutions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Zapier works exclusively in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Zapier is built for non-technical users, including marketers and managers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can receive support through the &lt;a href="https://zapier.com/help"&gt;help center&lt;/a&gt;, &lt;a href="https://zapier.com/experts"&gt;hiring an expert&lt;/a&gt; or in their &lt;a href="https://community.zapier.com/"&gt;community&lt;/a&gt;. You can also read their &lt;a href="https://platform.zapier.com/docs/zapier-intro"&gt;docs&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://platform.zapier.com/embed/overview"&gt;embed links to zaps in your product&lt;/a&gt;, helping your customers discover available integrations within your product, however customers are always redirected to Zapier to use and modify them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zapier.com/pricing"&gt;There are 3 tiers&lt;/a&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free: with 5 Zaps and 100 tasks/mo&lt;/li&gt;
&lt;li&gt;Starter: 29.99 USD/mo or 19.99 billed annually for 20 Zaps and 750 Tasks&lt;/li&gt;
&lt;li&gt;Professional: 49 USD/mo, unlimited zaps, and 2K task/mo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3000, including Google Sheets, Slack, Mailchimp, Trello, Gmail, and others.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#mulesoft"&gt;
  &lt;/a&gt;
  MuleSoft
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcPqKC_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jemsupebh8u0fz88gz7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcPqKC_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jemsupebh8u0fz88gz7.png" alt="Image description" width="880" height="539"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mulesoft.com/"&gt;MuleSoft&lt;/a&gt; is a developer-friendly platform to empower IT and business teams to create seamless digital experiences, products, and services with their platform for integration, APIs, and automation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mulesoft offers a code-based and no-code solution for its customers. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft could be very flexible, but to get the maximum advantage of the platform, you would probably have to hire a skilled MuleSoft engineer or consultant since the platform has a fairly high barrier to entry and requires training, certification, and substantial experience to use.&lt;/p&gt;

&lt;p&gt;Also, MuleSoft has a long implementation time, and &lt;a href="https://www.xplenty.com/blog/mulesoft-vs-xplenty-comparison-and-review/"&gt;it can take between one and six months&lt;/a&gt; of preparation before fully implementing the MuleSoft integration strategy. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can run MuleSoft on-premise and on the cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft is designed primarily for use by developers and IT specialists.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can contact sales, help center and Newsroom &lt;a href="https://www.mulesoft.com/contact"&gt;here&lt;/a&gt;, and also you can read the &lt;a href="https://docs.mulesoft.com/general/"&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mule runtime can be used to deploy applications in a &lt;a href="https://docs.mulesoft.com/mule-runtime/3.9/deployment-scenarios"&gt;standalone way&lt;/a&gt;, however this leaves a lot of work to the developer in terms of determining how to surface these integrations to end-users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MuleSoft is one of the most expensive solutions on the market today. In fact, many enterprises are spending hundreds of thousands of dollars a year on the MuleSoft Anypoint Platform, and some are even spending millions. According to the price-tracking website ITQlik, MuleSoft pricing starts at approximately $80,000 a year. However, the price that most of their enterprise customers pay is closer to $250,000 a year. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mulesoft.com/exchange/?type=connector"&gt;+500 connectors&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#trayio"&gt;
  &lt;/a&gt;
  Tray.io
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lejwtyo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/304ia9hin3lmhwwjh8io.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lejwtyo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/304ia9hin3lmhwwjh8io.png" alt="Image description" width="880" height="377"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;With &lt;a href="https://tray.io/"&gt;Tray.io&lt;/a&gt; you can quickly integrate your software applications using powerful automated workflows. Easily build and streamline processes using their visual workflow editor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Low code and no-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tray.io offers low-code and no-code solutions. You can create integrations with their drag-and-drop interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tray.io is flexible and allows you to grab the most data from any service with ease. You can have full API access - including custom fields and connect to any SaaS app with their universal connector.&lt;/p&gt;

&lt;p&gt;Their drag-and-drop interface is user-friendly, but it doesn't allow the level of flexibility that a code-first solution can provide. Adding a new first-class connector needs to be done by the Tray.io team and can frequently take a long time if the connector is not already on Tray‚Äôs roadmap.&lt;/p&gt;

&lt;p&gt;They have universal connectors like HTTP client connector, GraphQL connector, connectors for common databases, JDBC connector, CSV Editor, S/FTP, and universal triggers like webhooks, email, form.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Works on the cloud, it doesn't run on-premise but it has a mechanism to connect to on-premise systems for a custom enterprise quote.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since it is low-code and no-code, Tray.io can be used by technical and non-technical customers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get in contact with them &lt;a href="https://tray.io/lp/get/contact"&gt;here&lt;/a&gt;, use the chat and to learn more about the platform you can read the &lt;a href="https://tray.io/documentation/"&gt;developer docs&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can get &lt;a href="https://tray.io/solutions/embedded"&gt;Tray.io Embedded&lt;/a&gt; and deliver the integrations that your customers are asking for, without needing engineering to maintain them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tray.io/products/platform/pricing"&gt;You can choose between 4 tiers&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: $695/mo &lt;/li&gt;
&lt;li&gt;Standard Plus: $1,450/mo&lt;/li&gt;
&lt;li&gt;Professional: $2,450/mo&lt;/li&gt;
&lt;li&gt;Enterprise: Custom Pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100 connectors, including Salesforce, NetSuite, Snowflake, Slack, Shopify, Zoom, and others.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#celigo"&gt;
  &lt;/a&gt;
  Celigo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dY_WgbAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lif9p8p314pwfw1kx5gm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dY_WgbAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lif9p8p314pwfw1kx5gm.png" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code / no-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.celigo.com/"&gt;Celigo&lt;/a&gt; is a platform designed to integrate data into cloud applications and automate key parts of this process. This platform comes with a user-friendly guided interface and data flow templates for no-code integration. Non-technical users will find it easy to take a template and build on it with business logic. Technical users have the option of using JavaScript scripts, webhook, HTTP, REST API, FTP, hooks, wrappers, API tokens, and debuggers to develop automation flows that are customized to your organization.&lt;/p&gt;

&lt;p&gt;Celigo has an intuitive design and hundreds of pre-built connectors. It makes it possible for technical and non-technical users to build and maintain automation and integrations themselves. You can use templates or create your application from scratch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since it provides code and no-code solutions, Celigo gives a lot of flexibility to their customers and the possibility of customization of their integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use Celigo on both on-premise and on the cloud. &lt;a href="https://docs.celigo.com/hc/en-us/articles/360004081771-Integrate-data-through-firewall-with-on-premise-agent"&gt;An on-premise agent&lt;/a&gt; is a Windows software program that runs on your server, typically behind the firewall and within the same network as the systems you want to connect to. It establishes a secure tunnel to connect to integrator.io. You can connect to on-premise apps, but Celigo itself doesn‚Äôt run on premise. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Technical and non-technical users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find here the &lt;a href="https://docs.celigo.com/hc/en-us/categories/360002687531-Developers"&gt;developer docs&lt;/a&gt;, get in contact with them through &lt;a href="https://www.celigo.com/company/contact-us/"&gt;this form&lt;/a&gt;, or use the chat in &lt;a href="https://www.celigo.com/"&gt;their webpage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can have &lt;a href="https://www.celigo.com/embedded-integrations/"&gt;embedded integrations&lt;/a&gt; with Celigo, as well as standalone integrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can choose between 4 tiers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: $7,200/yr with 3 endpoint apps and 16 flows&lt;/li&gt;
&lt;li&gt;Professional: $18,000/yr with 5 endpoint apps and 100 flows&lt;/li&gt;
&lt;li&gt;Premium: $36,000/yr with 10 endpoint apps and unlimited flows&lt;/li&gt;
&lt;li&gt;Enterprise: $72,000/yr with 20 endpoint apps and unlimited flows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jitterbit"&gt;
  &lt;/a&gt;
  Jitterbit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQqto73i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mte1a8ojcx2x2yu6bzmh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQqto73i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mte1a8ojcx2x2yu6bzmh.jpeg" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jitterbit.com/"&gt;Jitterbit&lt;/a&gt; is an API integration platform designed to streamline the connection of cloud, on-premise, and SaaS applications. It also offers a way to add Artificial Intelligence technology into your applications and combine them in innovative ways to create new solutions. AI options include real-time language translation, a recommendation engine, and speech recognition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can quickly create new APIs or connect with external ones through an extensive library of pre-built templates and workflows. If the pre-built templates don't cover your needs, you can use a point-and-click graphical interface to create your own integrations and templates. Jitterbit only offers no-code integration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit offers a degree of flexibility and customization through its point-and-click graphical interface, but it doesn't provide the flexibility a code platform can offer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit supports on-premise, cloud, and hybrid cloud deployment and both real-time and batch processing operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit was built for non-technical people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit provides support via an online &lt;a href="https://community.jitterbit.com/s/"&gt;forum-based community&lt;/a&gt; and via &lt;a href="https://info.jitterbit.com/contact.html"&gt;online form submission&lt;/a&gt;. &lt;a href="https://success.jitterbit.com/display/DOC/Getting+Started"&gt;Documentation is comprehensive&lt;/a&gt;. Digital training materials are available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jitterbit only offers standalone applications. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can choose between &lt;a href="https://www.jitterbit.com/platform/pricing/"&gt;three tiers&lt;/a&gt;, the prices are not transparent, you will have to contact them to get more information.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard: 2-3 connections&lt;/li&gt;
&lt;li&gt;Professional: 5 connections&lt;/li&gt;
&lt;li&gt;Enterprise: 8 or more connections &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;+100&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fusebit"&gt;
  &lt;/a&gt;
  Fusebit
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F04NNjdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqnb7hfyc6y4snm1se94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F04NNjdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqnb7hfyc6y4snm1se94.png" alt="Image description" width="880" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fusebit.io/?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=post-7-best&amp;amp;utm_content=liz"&gt;Fusebit&lt;/a&gt; is a powerful integration platform that allows you to build integrations for your SaaS applications in minutes. It‚Äôs code-first and you can create connectors, code your logic, deploy your integration, and reduce integration engineering cost by 7x. Fusebit takes away the pain of developing against many disparate APIs while maintaining the flexibility and familiarity of a code-first platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code-first solution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using a no-code solution to create an integration sounds good on the surface, but usually, those integrations don't do exactly what your customers want, due to limitations in the visual authoring model. The Fusebit platform allows you to create flexible integrations that your customers will love, with full support for Node.js and the npm package ecosystem&lt;/p&gt;

&lt;p&gt;Fusebit was built for developers by developers to let you focus your time on the core integration logic while Fusebit takes the boilerplate off your plate. Our robust multi-tenant runtime keeps your customer data secure, while embeddable white-label configuration and lifecycle management components make you substantially more productive. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flexibility and customization of the integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because of its code-first solution, Fusebit is highly flexible and allows you to create powerful integrations that fulfill all your customer's requirements. Working with other platforms, you might encounter a functionality cliff you can‚Äôt get past, since there are specific integrations that can only be achieved through code. Fusebit is flexible enough that you will never find yourself in that situation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud / on-premise integration&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Fusebit works on the cloud and it can be deployed to a customer's AWS cloud instance if required (known as private cloud), which gives businesses many of the benefits of a public cloud - including self-service, scalability, and elasticity - with the additional data privacy and compliance controls enabled by dedicated resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User profile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit was built for developers, but uses accessible JavaScript to make it possible for anybody technical to use it, regardless of role&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Customer support, documentation, and training&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find support on the chat in the webpage, in the &lt;a href="https://developer.fusebit.io/docs"&gt;developer documentation&lt;/a&gt;, in &lt;a href="https://fusebit.io/contact/"&gt;slack, discord&lt;/a&gt; and &lt;a href="mailto:contact@fusebit.io"&gt;contact@fusebit.io&lt;/a&gt; email.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SaaS Embedding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit is the only iPaaS that's purely for embedded use cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fusebit.io/pricing/"&gt;There are 3 tiers&lt;/a&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Developer: Free forever and 10 connectors&lt;/li&gt;
&lt;li&gt;Team: $199/mo and 30 connectors&lt;/li&gt;
&lt;li&gt;Business: Custom pricing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Number of applications supported&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fusebit supports Slack, HubSpot, Salesforce, GitHub, Linear, Jira, Confluence, PagerDuty among others, and tens of new connectors are added monthly. Fusebit is an open model, meaning that you can create and add your own connector &lt;a href="https://github.com/fusebit/integrations"&gt;in this repository&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrations-platforms-chart"&gt;
  &lt;/a&gt;
  Integrations Platforms Chart
&lt;/h3&gt;

&lt;p&gt;Finally, you can check the chart below where you can find where the platforms are located taking into account: developer-friendly, no-code solution, embedded and standalone:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJiYe-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay9cotn59gewek035sgd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJiYe-RC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ay9cotn59gewek035sgd.png" alt="Image description" width="512" height="246"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h1&gt;

&lt;p&gt;What is your favorite integration platform? &lt;a href="https://twitter.com/fusebitio"&gt;Tell us what you think&lt;/a&gt; about the platforms here or let us know if we are missing one.&lt;/p&gt;

</description>
      <category>integrations</category>
    </item>
    <item>
      <title>Windows 22, for Browser Dark</title>
      <author>Abdul Rehman</author>
      <pubDate>Wed, 17 Nov 2021 16:10:08 +0000</pubDate>
      <link>https://dev.to/abdulrrehman0/windows-22-for-browser-dark-3723</link>
      <guid>https://dev.to/abdulrrehman0/windows-22-for-browser-dark-3723</guid>
      <description>&lt;p&gt;Windows 22 for browser using HTML,CSS, JS&lt;/p&gt;

&lt;p&gt;Hey Devs,&lt;br&gt;
From few days after making Windows 11 abd windows 12 i tried my best to make Windows 22 ui.&lt;br&gt;
I make it by using Html,Css,Js&lt;br&gt;
As a beginner, I tried my best in it.&lt;/p&gt;

&lt;p&gt;Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also try Windows 11 and wis it also a very awesome project.&lt;/p&gt;

&lt;p&gt;Window 11: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 12: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 11 dev.to: &lt;a href="https://bit.ly/3FdcPij"&gt;https://bit.ly/3FdcPij&lt;/a&gt;&lt;br&gt;
Window 12 dev.to :&lt;a href="https://bit.ly/3cndOAk"&gt;https://bit.ly/3cndOAk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By :Abdul Rehman&lt;/p&gt;

&lt;p&gt;About Me:&lt;br&gt;
I am 14 years old boy From Lahore, Pakistan. I am interested in things related to computer and internet. I started my journey as a Web Developer From April, 2021 and start learning web development from YouTube and created Windows 11,windows 12,windows 22 that is really awesome please Try once. I make these windows on my PC(Which is too much slow) with 2gb ram and 32gb HDD(10gb usable).&lt;br&gt;
Thank You.&lt;br&gt;
I need your support.&lt;br&gt;
Your one comment is a source of motivation for me.&lt;br&gt;
Thanks again..&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Windows 22, for Browser</title>
      <author>Abdul Rehman</author>
      <pubDate>Wed, 17 Nov 2021 16:02:44 +0000</pubDate>
      <link>https://dev.to/abdulrrehman0/windows-22-for-browser-2omk</link>
      <guid>https://dev.to/abdulrrehman0/windows-22-for-browser-2omk</guid>
      <description>&lt;p&gt;Windows 22 for browser using HTML,CSS, JS&lt;/p&gt;

&lt;p&gt;Hey Devs,&lt;br&gt;
From few days after making Windows 11 abd windows 12 i tried my best to make Windows 22 ui.&lt;br&gt;
I make it by using Html,Css,Js&lt;br&gt;
As a beginner, I tried my best in it.&lt;/p&gt;

&lt;p&gt;Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;br&gt;
Live demo : &lt;a href="https://win22.netlify.app/"&gt;https://win22.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also try Windows 11 and wis it also a very awesome project.&lt;/p&gt;

&lt;p&gt;Window 11: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 12: &lt;a href="https://window-11.netlify.app/"&gt;https://window-11.netlify.app/&lt;/a&gt;&lt;br&gt;
Window 11 dev.to: &lt;a href="https://bit.ly/3FdcPij"&gt;https://bit.ly/3FdcPij&lt;/a&gt;&lt;br&gt;
Window 12 dev.to :&lt;a href="https://bit.ly/3cndOAk"&gt;https://bit.ly/3cndOAk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By :Abdul Rehman&lt;/p&gt;

&lt;p&gt;About Me:&lt;br&gt;
I am 14 years old boy From Lahore, Pakistan. I am interested in things related to computer and internet. I started my journey as a Web Developer From April, 2021 and start learning web development from YouTube and created Windows 11,windows 12,windows 22 that is really awesome please Try once. I make these windows on my PC(Which is too much slow) with 2gb ram and 32gb HDD(10gb usable).&lt;br&gt;
Thank You.&lt;br&gt;
I need your support.&lt;br&gt;
Your one comment is a source of motivation for me.&lt;br&gt;
Thanks again..&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Develop a Spam Filtering Model in Python &amp; Deploy it with Django</title>
      <author>paulsaul621</author>
      <pubDate>Wed, 17 Nov 2021 15:30:09 +0000</pubDate>
      <link>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</link>
      <guid>https://dev.to/paulwababu/develop-a-spam-filtering-model-in-python-deploy-it-with-django-2pco</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Spam is a fact of life on the internet. If you enable comments or contact sections on your website, you will have to deal with spammers. To prevent your site from making a poor first impression, you‚Äôll need to find a way to stop spam in its tracks. This is especially important if you are developing a website without a content management system like Wordpress as they come bundled with spam filtering plugins. You could also use an API like &lt;a href="https://akismet.com/"&gt;Akismet&lt;/a&gt;, however this comes at a cost, which can be avoided by implementing a relatively accurate model of your own.&lt;/p&gt;

&lt;p&gt;Kaggle and other data science bootcamps are great for learning how to build and optimize models, but they don‚Äôt teach you how to actually use this models in real world scenarios, where there‚Äôs a major difference between building a model, and deploying it to be used by end users on the internet. &lt;/p&gt;

&lt;p&gt;In this tutorial, you‚Äôre going to build an SMS spam detection web application. This application will be built in Python using the Django framework, and will include a deep learning model that you will train to detect SMS spam by leveraging the Naive Bayes theorem. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#naive-bayes-classification"&gt;
  &lt;/a&gt;
  Naive Bayes classification
&lt;/h2&gt;

&lt;p&gt;The classification of Naive Bayes is a simple probability algorithm based on the fact that all model characteristics are independent. We assume that every word in the message is independent of all other words in the context of the spam filters, and we count them with the ignorance of the context.&lt;/p&gt;

&lt;p&gt;By the state of the current set of terms, our classification algorithm generates probabilities of the message to be spam or not spam. The probability estimation is based on the Bayes formula, and the formula components are determined on the basis of the word frequencies in the whole message package.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-building"&gt;
  &lt;/a&gt;
  Model Building
&lt;/h2&gt;

&lt;p&gt;The data is a collection of SMS messages tagged as spam or ham that can be found &lt;a href="https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv"&gt;here&lt;/a&gt;. First, we will use this dataset to build a prediction model that will accurately classify which texts are spam and which are not, then save the model to be used later for predictions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploration-of-dataset"&gt;
  &lt;/a&gt;
  Exploration of dataset
&lt;/h2&gt;

&lt;p&gt;The first thing that should be done is to import dependencies. If you do not have the libraries installed, kindly do so before proceeding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report
import joblib
import pickle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we load the dataset using pandas:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df = pd.read_csv('https://raw.githubusercontent.com/paulwababu/datasets/main/spam.csv', encoding = 'latin-1')
print(df.head())
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Drop the unwanted columns, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis=1, inplace=True)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have to convert the non-numerical column 'spam' and 'ham' into numerical values using pandas map() function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df['label'] = df['v1'].map({'ham': 0, 'spam': 1})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we have to separate the feature columns(independent variables) from the target column(dependent variable).&lt;/p&gt;

&lt;p&gt;The feature columns are the columns that we try to predict from, and the target column is the column with the values we try to predict.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;X = df['v2'] 
y = df['label']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ml-model-building"&gt;
  &lt;/a&gt;
  ML Model Building
&lt;/h2&gt;

&lt;p&gt;Let us now proceed to building our actual model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cv = CountVectorizer()
X = cv.fit_transform(X) 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
model = MultinomialNB()
model.fit(X_train,y_train)
#model.score(X_test,y_test)
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              precision    recall  f1-score   support

           0       0.99      0.99      0.99      1587
           1       0.93      0.92      0.92       252

    accuracy                           0.98      1839
   macro avg       0.96      0.95      0.96      1839
weighted avg       0.98      0.98      0.98      1839
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only Naive Bayes classifier easy to implement but also provides very good result. &lt;/p&gt;

&lt;p&gt;In the code above, we create a vectorize function that transforms a given text into a vector on the basis of the frequency (count) of each word that occurs in the entire text. We then proceed to splitting the data into train and test variables which we use to get the classification report of the model. We then call the multinomial Naive Bayes model which is suitable for classification with discrete features (e.g., word counts for text classification)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model-and-vectorizer-persistence"&gt;
  &lt;/a&gt;
  Model and Vectorizer Persistence.
&lt;/h2&gt;

&lt;p&gt;After training the model, we should to have a way to persist the model for future use without having to retrain. To achieve this, need to save the model for the later use. Add the following lines of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the model
joblib_file = "MultinomialNaiveBayesModel.joblib"
joblib.dump(clf, joblib_file) 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to save the vectorize function that we created earlier otherwise you throw it away because a vectorizer once created, doesn't exist past the lifetime of your vectorize function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Save the vectorizer
vec_file = 'MultinomialNaiveBayesModelVectorizer.pickle'
pickle.dump(cv, open(vec_file, 'wb'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we intend to retrain the model, we can use the partial_fit function in order to keep improving the model incase of model degradation over time. I will post a blog later that addresses how to identify and correct &lt;a href="https://www.section.io/engineering-education/correcting-data-shift/#:~:text=Prior%20probability%20shift%20is%20characterized,the%20reverse%20of%20covariate%20shift.&amp;amp;text=If%20the%20prior%20probabilities%20are,50%25%20non%2Dspam%20mail."&gt;dataset shift in machine learning&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#turning-the-spam-message-classifier-into-a-django-web-application"&gt;
  &lt;/a&gt;
  Turning the Spam Message Classifier into a Django Web Application
&lt;/h2&gt;

&lt;p&gt;Having trained and saved the model for classifying SMS messages in the previous section, we will develop a web application that consists of a simple web page with a form field that lets us enter a message. After submitting the message to the web application, it will render it on a new page which gives us a result of spam or not spam.&lt;/p&gt;

&lt;p&gt;Below is snapshot of the final implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bzq99ry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637150283253/YWtssz89w.png" alt="CfyuGX7l5aBe6TuCx-PjciFKywPM_rAAmOCaJcTuStURvV.width-800.png" width="800" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following Python best practices, we will create a virtual environment for our project, and install the required packages.&lt;/p&gt;

&lt;p&gt;First, create the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ mkdir djangoapp
$ cd djangoapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create a virtual environment and install the required packages.&lt;/p&gt;

&lt;p&gt;For macOS and Unix systems:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ source myenv/bin/activate
(myenv) $ pip install django requests numpy joblib scikit-learn

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For Windows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 -m venv myenv
$ myenv\Scripts\activate
(myenv) $ pip install django requests numpy joblib scikit-learn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-up-your-django-application"&gt;
  &lt;/a&gt;
  Setting Up Your Django Application
&lt;/h2&gt;

&lt;p&gt;First, navigate to the directory djangoapp we created and establish a Django project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ django-admin startproject mainapp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will auto-generate some files for your project skeleton:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mainapp/
    manage.py
    mainapp/
        __init__.py
        settings.py
        urls.py
        asgi.py
        wsgi.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, navigate to the directory you just created (make sure you are in the same directory as manage.py) and create your app directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py startapp monitor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the mainapp/settings.py file, look for the following line and add the app we just created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'monitor', #new line
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure you are in the monitor directory then create a new directory called templates then a new file called urls.py. Your directory structure of monitor application should look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;monitor/
    __init__.py
    admin.py
    apps.py
    migrations/
    templates/
        __init__.py
    models.py
    tests.py
    urls.py
    views.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ensure your mainapp/urls.py file, add our monitor app URL to include the URLs we shall create next on the monitor app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    #path('admin/', admin.site.urls),
    path('', include('monitor.urls')),#monitor app url
]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, on the monitor/urls.py file, add our website there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.urls import path
from .views import *

urlpatterns = [
    path('', views.sms, name = 'sms'),
    path('inbox/', views.inbox, name='inbox')
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs create another directory to store our machine learning model. I‚Äôll also add the dataset to the project for those who want to achieve the whole dataset. (It is not compulsory to create a data folder.) Be sure to move the vectorizer file and the joblib file we created earlier to ml/model folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(venv)$ mkdir ml
(venv)$ mkdir ml/models
(venv)$ mkdir ml/data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to tell Django where our machine learning model and our vectorizer file is located. Add these lines to settings.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
MODELS = os.path.join(BASE_DIR, 'ml/models')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#load-model-and-vectorizer-through-appspy"&gt;
  &lt;/a&gt;
  Load Model and Vectorizer through apps.py
&lt;/h2&gt;

&lt;p&gt;Load your machine learning models and your vectorizer in apps.py so that when the application starts, the trained model is loaded only once. Otherwise, the trained model is loaded each time an endpoint is called, and then the response time will be slower. &lt;/p&gt;

&lt;p&gt;Let‚Äôs update apps.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
import joblib
from django.apps import AppConfig
from django.conf import settings


class ApiConfig(AppConfig):
    name = 'api'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModel.joblib")
    model = joblib.load(MODEL_FILE)

class VectorizerConfig(AppConfig):
    name = 'api2'
    MODEL_FILE = os.path.join(settings.MODELS, "MultinomialNaiveBayesModelVectorizer.pickle")
    model = joblib.load(MODEL_FILE)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-modelspy"&gt;
  &lt;/a&gt;
  Edit models.py
&lt;/h2&gt;

&lt;p&gt;Create our database models which we shall use to store our classified models. On the monitor/models.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.db import models

# Create your models here.
class Monitor2(models.Model):
    message = models.CharField(max_length=50, blank=True, null=True)
    SPAM = 1
    HAM = 0
    IS_SPAM_OR_NAH = [(SPAM, 'spam'), (HAM, 'not_spam')]
    messageClassified = models.IntegerField(choices=IS_SPAM_OR_NAH, null=True)
    contact = models.CharField(max_length=50, blank=True, null=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#edit-viewspy"&gt;
  &lt;/a&gt;
  Edit views.py
&lt;/h2&gt;

&lt;p&gt;The views will be mainly responsible for two tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Process incoming POST requests.&lt;/li&gt;
&lt;li&gt;Make a prediction with the incoming data and give the result as a Response.&lt;/li&gt;
&lt;li&gt;Display the classified text into a HTML template.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
from datetime import datetime
from .models import *
from django.shortcuts import render, redirect


def sms(request):
    if request.method == 'POST':
        number = request.POST['contact']
        message = request.POST['message']
# datetime object containing current date and time
        now = datetime.now()    
        now = now.strftime("%d/%m/%Y %H:%M:%S")

        naiveModel = ApiConfig.model
        naiveVect = VectorizerConfig.model
        convertString = str(message)
        message = convertString
        data = [message]
        vect = naiveVect.transform(data).toarray()
        my_prediction = naiveModel.predict(vect)
        print(my_prediction)
        saveNow = Monitor2(
            message=message,
            messageClassified=my_prediction,
            contact=number
        )
        saveNow.save()
    return render(request, 'sms.html')

#inbox view
def inbox(request):
    dataSaved = Monitor2.objects.all()
    data = {
        "dataSaved": dataSaved,
    }
    print(data)
    return render(request, 'inbox.html', data)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the monitor/templates folder, create sms.html and inbox.html web page and add the lines below:&lt;/p&gt;

&lt;p&gt;monitor/templates/sms.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;form id="myform" method="POST"&amp;gt;
        {% csrf_token %}
          &amp;lt;div class="row"&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="name1" class="form-control p-4" placeholder="Your Name" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
              &amp;lt;div class="col-6 form-group"&amp;gt;
                  &amp;lt;input type="text" name="contact" class="form-control p-4" placeholder="Your Contact" required="required"&amp;gt;
              &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;

          &amp;lt;div class="form-group"&amp;gt;
              &amp;lt;textarea class="form-control py-3 px-4" name="message" rows="5" placeholder="Message" required="required"&amp;gt;&amp;lt;/textarea&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div&amp;gt;
              &amp;lt;button class="btn btn-primary py-3 px-5" type="submit"&amp;gt;Send Message&amp;lt;/button&amp;gt;
          &amp;lt;/div&amp;gt;
      &amp;lt;/form&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;monitor/templates/inbox.html file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;style&amp;gt;
table, th, td {
  border:1px solid black;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;h2&amp;gt;A basic HTML table&amp;lt;/h2&amp;gt;

&amp;lt;table style="width:100%"&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;#&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;From&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Body&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Classification&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
  {% for x in dataSaved %}
  &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;{{ loop.index }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.contact }}&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;{{ x.message }}&amp;lt;/td&amp;gt;
      {% if x.messageClassified == 1 %}
      &amp;lt;td&amp;gt;Spam&amp;lt;/td&amp;gt;
      {% else %}
      &amp;lt;td&amp;gt;Non Spam&amp;lt;/td&amp;gt;
      {% endif %}
  &amp;lt;/tr&amp;gt;
  {% endfor %}
&amp;lt;/table&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the necessary migrations like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(myenv) $ python manage.py makemigrations
(myenv) $ python manage.py migrate
(myenv) $ python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#testing-if-it-works"&gt;
  &lt;/a&gt;
  Testing if it works!
&lt;/h2&gt;

&lt;p&gt;Head over &lt;a href="http://127.0.0.1:8000"&gt;http://127.0.0.1:8000&lt;/a&gt; and complete the form with both spam and non spam&lt;/p&gt;

&lt;p&gt;Proceed to &lt;a href="http://127.0.0.1:8000/inbox"&gt;http://127.0.0.1:8000/inbox&lt;/a&gt; to check out the classified data! Below is a snapshot of my implementation, sorry I couldn't make the CSS;(&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt-_QaVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637159575230/G4Yj5QNXf.png" alt="Screenshot from 2021-11-17 17-32-30.png" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-staying-tuned"&gt;
  &lt;/a&gt;
  Thanks for staying tuned!
&lt;/h3&gt;

</description>
      <category>algorithms</category>
      <category>django</category>
      <category>machinelearning</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What Is Crypto and How Does It Work ?</title>
      <author>Bek Brace</author>
      <pubDate>Wed, 17 Nov 2021 15:27:25 +0000</pubDate>
      <link>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</link>
      <guid>https://dev.to/bekbrace/what-is-crypto-and-how-does-it-work--3h0k</guid>
      <description>&lt;p&gt;I hate changes ! I like to use what I know and what I'm used to use .. if that makes any sense!&lt;br&gt;
I love real cigarettes (when I used to smoke!) and never had Vype or e-cigarettes, I like to date real women drinking coffee and having a human interaction [have you seen that video in Japan where there was a wedding between a man and his digital girlfriend living in a hologram ?!] and of course I love real money in coin and paper ..&lt;/p&gt;

&lt;p&gt;As technology evolves, things around us change, take a look to Zuckerberg's Meta where he wants to have a paralel world using Augmented reality, where people live virtually and trade virtually using digital money .. the term ‚Äúdigital money‚Äù is frequently used to characterize cryptocurrency. While this definition is accurate, it falls short of capturing what makes cryptocurrency so special and intriguing to so many investors.&lt;/p&gt;

&lt;p&gt;Let's talk a little bit about "what is Crypto?"&lt;/p&gt;

&lt;p&gt;Cryptocurrency is, at its foundation, a value system. &lt;br&gt;
When you buy a cryptocurrency, you then are betting that the asset‚Äôs value will rise in the future, similar to how stock market investors purchase securities in the hopes of seeing the company‚Äôs stock price rise .. exact same concept&lt;/p&gt;

&lt;p&gt;Stock values are based on discounted projections of future cash flows .. and because there is no underlying corporation, there is no valuation metric for cryptocurrencies; the value of a cryptocurrency is solely determined by investor appetite [acquiring or getting rid of] !&lt;/p&gt;

&lt;p&gt;Now the two elements that determine the cryptocurrency‚Äôs value are :&lt;br&gt;
1- The chance of other investors buying whatever cryptocurrency they want.&lt;br&gt;
2- The utility of that cryptocurrency‚Äôs blockchain &lt;/p&gt;

&lt;p&gt;Let's discuss this further and ask :&lt;br&gt;
What is cryptocurrency really and how does it actually work?&lt;/p&gt;

&lt;p&gt;Blockchain technology is the heart and soul of cryptocurrency, but what exactly is a blockchain?&lt;/p&gt;

&lt;p&gt;Simply put, a blockchain is a digital ledger of transactions. This database (or ledger) is shared over a network of computer systems. The ledger is not controlled by a single system. Instead, a blockchain is maintained and transactions are authenticated by a decentralized network of computers.&lt;/p&gt;

&lt;p&gt;Those who are in favor of blockchain technology [ and I - miraculously - became one of them!] claim that it can improve data openness, trust, and security when shared across a network. &lt;/p&gt;

&lt;p&gt;Detractors claim that blockchain is inconvenient, inefficient, expensive, and wasteful of energy.&lt;/p&gt;

&lt;p&gt;If a rational crypto investor believes in the power and utility of a digital asset‚Äôs underlying blockchain, they will purchase it. All cryptocurrencies are built on the blockchain, which means that crypto investors are betting (whether they realize it or not) on the blockchain‚Äôs robustness and attractiveness.&lt;/p&gt;

&lt;p&gt;On the underlying blockchain, cryptocurrency transactions are recorded in eternity. In the form of ‚Äòblocks,‚Äô groups of transactions are added to the ‚Äòchain,‚Äô which authenticate the transactions‚Äô legitimacy and keep the network up and operating. The shared ledger, which is open to the public, records all batches of transactions. Anyone can look at the transactions on the biggest blockchains, such as Bitcoin (BTC) and Ethereum (ETH), at any time (ETH).&lt;/p&gt;

&lt;p&gt;However, why do users devote computing resources to verifying blockchain transactions?&lt;/p&gt;

&lt;p&gt;They are compensated with the underlying cryptocurrency, to be sure. A proof-of-work (PoW) mechanism is an incentive-driven system. Miners are the computers that ‚Äòwork‚Äô to ‚Äòverify‚Äô the authenticity of blockchain transactions. Miners receive freshly generated crypto currencies in exchange for their energy.&lt;/p&gt;

&lt;p&gt;By the way, I am preparing some quick tutorials with streamlit on blockchain and crypto, if you're into Python programming, I think you'll like it :)&lt;/p&gt;

&lt;p&gt;Back to our crypto-talk .. So, cryptocurrency investors - and this could be you -  do not keep their funds in regular bank accounts, right? You have digital addresses instead. These addresses include private and public keys, which are long sequences of numbers and letters that allow cryptocurrency users to send and receive money. Unlocking and sending cryptocurrency requires private keys. Public keys are made available to the public and allow the possessor to receive cryptocurrency from anyone.&lt;/p&gt;

&lt;p&gt;Bitcoin, without a doubt, has shifted the paradigm; there has never been anything quite like it before, and it has created an altogether new platform for investing, and a new way of thinking about money.&lt;/p&gt;

&lt;p&gt;I still love real things , but to tell the truth cryptocurrency is the future of global finance, maybe next year maybe in 10 or 20 years, either way it's gonna happen and you better be ready.&lt;/p&gt;

</description>
      <category>bigdata</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>AzureFunBytes Reminder - Supercharge your Java Apps on Azure with @rorypreddy - 11/18/2021</title>
      <author>Jay Gordon</author>
      <pubDate>Wed, 17 Nov 2021 15:23:18 +0000</pubDate>
      <link>https://dev.to/azure/azurefunbytes-reminder-supercharge-your-java-apps-on-azure-with-rorypreddy-11182021-1lki</link>
      <guid>https://dev.to/azure/azurefunbytes-reminder-supercharge-your-java-apps-on-azure-with-rorypreddy-11182021-1lki</guid>
      <description>&lt;p&gt;After a short break for some Microsoft streaming events, AzureFunBytes returns to LearnTV for another fun conversation about the products, people, and services that make for an delightful Azure experience. &lt;/p&gt;

&lt;p&gt;AzureFunBytes is a weekly opportunity to learn more about the fundamentals and foundations that make up Azure. It's a chance for me to understand more about what people across the Azure organization do and how they do it. Every week we get together at 11 AM Pacific on &lt;a href="https://cda.ms/226"&gt;Microsoft LearnTV&lt;/a&gt; and learn more about Azure.&lt;/p&gt;

&lt;p&gt;When: November 18,  2021 11 AM Pacific / 2 PM Eastern&lt;br&gt;
Where: &lt;a href="https://cda.ms/226"&gt;Microsoft LearnTV&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJzmXQeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z7BxBMz1--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2xzw2g664tj31jij13t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJzmXQeR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z7BxBMz1--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_66%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j2xzw2g664tj31jij13t.gif" alt="AzureFunBytes animation" width="880" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Java is one of the most used and trusted programming languages in software engineering.  Java's creation dates back to 1995 with the 1.0 JD released on January 23, 1996.  In March of 2022 we should see the release of Java SE 18!  That's a lot of progress! &lt;/p&gt;

&lt;p&gt;A few examples of some of the features of Java include:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Object Oriented&lt;/strong&gt; - Everything is an object which means you are creating objects within your software that contain both data and methods.&lt;br&gt;
&lt;strong&gt;Platform independent&lt;/strong&gt; - Java is platform independent meaning you can run it across Windows, Linux, or even Mac OS.  &lt;strong&gt;Simple and Familiar&lt;/strong&gt; - Java's style tends to remove complexity using concepts like explicit pointers, storage classes, Goto statements and more.&lt;br&gt;
&lt;strong&gt;Security&lt;/strong&gt; - Auth methods are based on public-key encryption helping you provide more secure and tamper free software.&lt;br&gt;
&lt;strong&gt;Dynamic&lt;/strong&gt; - Java supports dynamic loading of classes and supports functions from native languages like C++.&lt;/p&gt;

&lt;p&gt;There are many ways to deploy your Java applications on Azure including Azure App Service, Azure Spring Cloud, Azure Kubernetes Service (AKS), and Azure Red Hat OpenShift for hardware and software infrastructure management.&lt;/p&gt;

&lt;p&gt;This week our friend, Microsoft Senior Cloud Advocate, &lt;a href="https://twitter.com/rorypreddy"&gt;Rory Preddy&lt;/a&gt; returns to the show to discuss how to supercharge your Java apps on Azure. This session is a fast-paced tour of all things Java and Azure at the modern Microsoft of today. You‚Äôll hear about the broad range of tools, services, and APIs that Azure offers for Java developers. Short demos will show how you can easily get started deploying Java applications... Who is it aimed at? Developers that want to learn about building and running Java applications on Azure. Why should you attend? As a developer, you want to use a cloud platform that supports familiar tools and frameworks. Wherever you are in Java‚Äîfrom Java EE/Jakarta EE to Spring and microservices‚ÄîAzure offers a choice of services and first-class integration with DevOps tooling popular with Java shops.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/grItVFwAjZo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We've got a big agenda planned, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Microsoft OpenJDK&lt;/li&gt;
&lt;li&gt;Java hosting options on Azure

&lt;ul&gt;
&lt;li&gt;Virtual Machines&lt;/li&gt;
&lt;li&gt;Jakarta EE Images&lt;/li&gt;
&lt;li&gt;App service&lt;/li&gt;
&lt;li&gt; Azure Spring Cloud&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;DevOps Tool Integrations

&lt;ul&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;GitHub Actions&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Monitoring and tools&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#about-rory-preddy"&gt;
  &lt;/a&gt;
  About Rory Preddy:
&lt;/h2&gt;

&lt;p&gt;Rory works in the Developer Relations team at Microsoft as a Senior Cloud Advocate. Cloud Advocates use their deep research skills to help professional cloud developers discover and successfully use Microsoft‚Äôs platforms.&lt;/p&gt;

&lt;p&gt;A seasoned speaker whose talks are both meaningful and humorous, Rory speaks around the world empowering developers to achieve more.  Rory is a passionate advocate for Accessibility in programming working to help understand the need to consider inclusivity of those with disabilities as a priority in their development cycle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In Rory's own words:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My life is a hilarious roller coaster of miss-intended programming bugs because at 120 cm tall and 50 kilograms I completely fall off your radar.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why did my scale call me! Why does facial recognition see me as a child? These are all valid questions I often ask myself as I navigate my weird and different world. Have you heard the phrase ‚ÄúYou have to be this tall for Micro-services‚Äù? well what about: ‚ÄúYou have to be this tall to operate a mobile phone?‚Äù. I am finding it harder and harder to reach any button except for ‚Äú#‚Äù and ‚Äú9‚Äù.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Building accessibility into the planning stages of programming can eliminate barriers for participation and create an inclusive environment for people with disabilities. Programming for diversity serves as an unquestionable indicator that your software embraces the diversity of your users and cares about their safety and comfort.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So be part on Thursday, November 18th at 11 AM PT / 2 PM ET on &lt;a href="https://cda.ms/226"&gt;LearnTV&lt;/a&gt; with your questions and say:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Simple&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[]){&lt;/span&gt;  
     &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello Java"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Learn about Azure fundamentals with me!&lt;/p&gt;

&lt;p&gt;Live stream is normally found on Twitch, YouTube, and &lt;a href="https://cda.ms/226"&gt;LearnTV&lt;/a&gt; at 11 AM PT / 2 PM ET Thursday. You can also find the recordings here as well:&lt;/p&gt;

&lt;p&gt;Useful Docs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cda.ms/219"&gt;Get $200 in free Azure Credit&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/243"&gt;Microsoft Learn: Introduction to Azure fundamentals&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cs"&gt;Azure for Java developer documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3c2"&gt;Microsoft OpenJDK&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cf"&gt;Getting Started - Java Coding Pack&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cj"&gt;Use the Azure SDK for Java&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3ck"&gt;Microsoft Learn: Java on Azure Learning Path&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cn"&gt;Microsoft Learn: Monitoring Java Applications on Azure&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3ct"&gt;What is Azure Spring Cloud?&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cq"&gt;Spring on Azure integration documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cx"&gt;Azure Spring Cloud CI/CD with GitHub Actions&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cda.ms/3cy"&gt;Automate application deployments to Azure Spring Cloud&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>webdev</category>
      <category>azure</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
