<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Programming for Art</title>
      <author>Engin Arslan</author>
      <pubDate>Tue, 08 Jun 2021 20:36:26 +0000</pubDate>
      <link>https://dev.to/inspiratory/programming-for-art-1efa</link>
      <guid>https://dev.to/inspiratory/programming-for-art-1efa</guid>
      <description>&lt;p&gt;Programming is not something that readily comes into mind when thinking about art, but many applications of programming allow for artistic expression. There is even a field of programming called &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Creative_coding"&gt;creative coding&lt;/a&gt;&lt;/strong&gt; where the goal is not to create something functional but rather expressive.&lt;/p&gt;

&lt;p&gt;Even though programming for art has been a thing for a while, it used to be fairly inaccessible as it required deep knowledge in the field. Take &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Demoscene"&gt;Demoscene&lt;/a&gt;,&lt;/strong&gt; for example. Demoscene is a &lt;strong&gt;computer art subculture&lt;/strong&gt; that has been around since the 1980s. It involves creating audiovisual presentations, called &lt;strong&gt;demos&lt;/strong&gt;, that are not only artistic creations but also technical achievements.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UsxEZ1ZNxyM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It can be challenging, even for a programmer, to understand how a demo is implemented. That is not to say other fields of art are devoid of technicalities. But, I can hope to create something that resembles a painting given a brush and a paint but creating a programmatic art given a computer and a programming environment can remain a monumental challenge for a non-expert.&lt;/p&gt;

&lt;p&gt;Nowadays, we have modern, &lt;strong&gt;high-level&lt;/strong&gt; &lt;strong&gt;programming languages&lt;/strong&gt; and &lt;strong&gt;libraries&lt;/strong&gt; that make programming a lot more accessible. Tasks like creating a website, building a game, or creating programmatic art have become a lot easier&lt;/p&gt;

&lt;p&gt;If you are not too familiar with programming, there are two concepts to unpack there. &lt;strong&gt;High-level programming languages&lt;/strong&gt; and &lt;strong&gt;programming libraries&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#highlevel-programming-languages"&gt;
  &lt;/a&gt;
  High-Level Programming Languages
&lt;/h2&gt;

&lt;p&gt;According to Wikipedia, a &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/High-level_programming_language"&gt;high-level programming language&lt;/a&gt;&lt;/strong&gt; is a programming language with &lt;strong&gt;strong abstraction from the details of the computer&lt;/strong&gt;. Essentially, high-level refers to the &lt;strong&gt;level of abstraction&lt;/strong&gt;. A high-level abstraction means a concept is presented in a way that is stripped away from the underlying details. Think of using a phone. At a &lt;strong&gt;high level&lt;/strong&gt;, to use a phone, you would need to turn it on and press the buttons on the screen. At a &lt;strong&gt;low level&lt;/strong&gt;, the battery in the phone needs to power the processor of the phone, and the touch screen needs to register the pressure, etc. Honestly, I don't even know how a phone works at a low level to give accurate examples here. The good thing is that I don't need to. I am still able to use a phone without knowing how it works. That is made possible by abstracting away the low-level details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42PEYF0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jg4pvFM.png%255B/img%255D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42PEYF0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jg4pvFM.png%255B/img%255D" alt="https://i.imgur.com/jg4pvFM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A high-level programming language provides similar flexibility. It allows you to program the computer without having to worry about low, machine-level details. This is one of the factors that makes programming so much easier than it used to be. With a low-level programming language, you need to worry about how the memory is &lt;strong&gt;allocated&lt;/strong&gt; in your program, how it is &lt;strong&gt;garbage collected&lt;/strong&gt;, etc... Essentially, we would need to tackle concerns that don't directly relate to the task at hand. High-level programming languages abstract away those details so you can focus on the primary goal and ignore the complex peripheral issues.&lt;/p&gt;

&lt;p&gt;Another thing that makes programming easier is &lt;strong&gt;programming libraries&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-libraries"&gt;
  &lt;/a&gt;
  Programming Libraries
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LWOneL_M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jnifRiq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LWOneL_M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/jnifRiq.png" alt="https://i.imgur.com/jnifRiq.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A programming library (or package) is a bundle of code that is previously written for a specific purpose that is packaged and shared for reusability.&lt;/p&gt;

&lt;p&gt;Imagine trying to build a first-person shooter game. If we had to write every piece of functionality we need by ourselves, we would have to write a lot of code to handle the 3D graphics. That means a lot of complex mathematical operations would need to be implemented in code. We would have to spend weeks or even months developing the foundational pieces before doing anything unique to our game. Luckily, creating and displaying 3D graphics on the computer is a solved problem. Many other smart people out there had to work on similar issues, and some of them choose to share their solutions to these problems in the form of &lt;strong&gt;programming libraries&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;That is why getting started with programming is so much easier nowadays than it was before. You can simply install a library that would do the most complex tasks for you to focus on building things that will be unique to your application.&lt;/p&gt;

&lt;p&gt;There are libraries out there that would allow you to build 3D graphics, data visualizations, e-commerce solutions, and even artificial intelligence applications. Nowadays, building a software application is mostly about figuring out how to use these libraries and bringing them together in ways that are unique to what you are trying to build.&lt;/p&gt;

&lt;p&gt;A high-level programming language and programming language libraries can help you focus on creating art using programming instead of wrestling with technicalities.&lt;/p&gt;

&lt;p&gt;One of the most suitable programming languages for this task is &lt;strong&gt;JavaScript&lt;/strong&gt;. JavaScript is a &lt;strong&gt;modern&lt;/strong&gt;, &lt;strong&gt;dynamic,&lt;/strong&gt; and &lt;strong&gt;expressive&lt;/strong&gt; programming language with vast popularity and a huge ecosystem. It has a lot of programming libraries that would help you to create all kinds of artistic works. One example of those libraries is &lt;a href="https://p5js.org/"&gt;&lt;strong&gt;p5.js&lt;/strong&gt;&lt;/a&gt;. p5.js is a &lt;strong&gt;creative coding&lt;/strong&gt; library that makes it easy to create visuals and animations. Here is an editable example below for a visual created by p5.js.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/twhite96/embed/XMMjjP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programming-libraries-for-art"&gt;
  &lt;/a&gt;
  Programming Libraries for Art
&lt;/h2&gt;

&lt;p&gt;It is hard to prescribe any programming libraries for programming art since what you choose to use is only limited by your creativity. Nevertheless, here are some programming libraries in JavaScript that can help you in programming artistic works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#threejs"&gt;
  &lt;/a&gt;
  Three.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RIQYPcsA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mcaRA4J.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RIQYPcsA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/mcaRA4J.png" alt="https://i.imgur.com/mcaRA4J.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://threejs.org/"&gt;&lt;strong&gt;Three.js&lt;/strong&gt;&lt;/a&gt; is a JavaScript library that allows you to create 3D visuals in the web browser. It has been around for a long time and is used to deliver a lot of impressive projects. If you want to create &lt;strong&gt;3D&lt;/strong&gt;, &lt;strong&gt;Virtual Reality&lt;/strong&gt;, or &lt;strong&gt;Augmented Reality&lt;/strong&gt; experiences on the web, then Three.js is the tool for the job. We could already create 3D graphics in the browser by using an &lt;strong&gt;API (application programming interface)&lt;/strong&gt; called &lt;strong&gt;WebGL&lt;/strong&gt; but Three.js abstracts away the complexity of this API to make working with 3D much easier.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ml5js"&gt;
  &lt;/a&gt;
  ml5.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3iUBLMYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zW8Pmlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iUBLMYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zW8Pmlo.png" alt="https://i.imgur.com/zW8Pmlo.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; is an exciting frontier in computer science that is ripe for artistic exploration. Unfortunately, working with machine learning can be quite challenging for someone who doesn't have in-depth knowledge in the field. &lt;strong&gt;&lt;a href="https://ml5js.org/"&gt;ml5.js&lt;/a&gt;&lt;/strong&gt; is a JavaScript programming library that makes it easy to work with machine learning by providing high-level abstractions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#matterjs"&gt;
  &lt;/a&gt;
  Matter.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmAIu4qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ePdWz1C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmAIu4qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/ePdWz1C.png" alt="https://imgur.com/ePdWz1C.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://brm.io/matter-js/"&gt;&lt;strong&gt;Matter.js&lt;/strong&gt;&lt;/a&gt; is a &lt;strong&gt;2D physics engine&lt;/strong&gt; that works in the web browser. It allows you to create realistic interactions on and in between shapes by simulating forces such as kinetic or gravity. You can combine it with other libraries such as &lt;strong&gt;p5.js&lt;/strong&gt; to create visuals that can interact with each other in realistic ways.&lt;/p&gt;

&lt;p&gt;These are just a few examples of all the awesome libraries in the JavaScript ecosystem that can help you create art and express your creativity. There are a lot more examples, such as &lt;strong&gt;&lt;a href="https://phaser.io/"&gt;Phaser.js&lt;/a&gt;&lt;/strong&gt; for creating games, &lt;strong&gt;&lt;a href="https://howlerjs.com/"&gt;howler.js&lt;/a&gt;&lt;/strong&gt; for working with audio, &lt;a href="https://github.com/NaturalNode/natural"&gt;&lt;strong&gt;natural&lt;/strong&gt;&lt;/a&gt; for natural language processing, etc.&lt;/p&gt;

&lt;p&gt;This is not to say even a person without any coding knowledge can start programming as soon as they sit in front of a computer. But thanks to modern programming languages and libraries, programming for art is a lot more accessible than before for anyone willing to learn the basics of programming. I have created &lt;strong&gt;&lt;a href="http://www.codingforvisuallearners.com/"&gt;Coding for Visual Learners&lt;/a&gt;&lt;/strong&gt; exactly for this purpose. It is not specifically a Programming for Art course, but it teaches programming in an artist-friendly way. Once you learn programming fundamentals, you can apply it to whatever you want, whether creating art, building web applications, or even programming robots!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>art</category>
      <category>p5js</category>
    </item>
    <item>
      <title>Googley eyes, Clippy's story after retirement and 60 floppy's - videos with a tenuous link to tech! [I was bored]</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 08 Jun 2021 20:00:49 +0000</pubDate>
      <link>https://dev.to/inhuofficial/googley-eyes-microsoft-clippy-s-story-after-retirement-and-60-floppy-s-videos-with-a-tenuous-link-to-tech-4bci</link>
      <guid>https://dev.to/inhuofficial/googley-eyes-microsoft-clippy-s-story-after-retirement-and-60-floppy-s-videos-with-a-tenuous-link-to-tech-4bci</guid>
      <description>&lt;p&gt;My fiancé is out, I am still working at 8:30pm but a video came onto YouTube on autoplay that just made me smile and got me back into work mode after a slump as it was just so silly yet clever (the third video here). &lt;/p&gt;

&lt;p&gt;As some of you may also be bored or working (too much) I thought a little distraction may be welcomed!&lt;/p&gt;

&lt;p&gt;Don't worry I won't be posting stuff like this and cluttering your feed very often, it is just a little side post to hopefully spread a little joy and get those batteries recharged to keep you motivated!&lt;/p&gt;

&lt;p&gt;Plus as an added bonus it is a nice way for you all to see how much of a weirdo I am 🤣&lt;/p&gt;

&lt;p&gt;If you have any videos that are equally entertaining with a tenuous link to tech...share them in the comments!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-with-one-you-are-likely-to-have-stumbled-across"&gt;
  &lt;/a&gt;
  Lets start with one you are likely to have stumbled across
&lt;/h2&gt;

&lt;p&gt;The floppotron.&lt;/p&gt;

&lt;p&gt;For young whipper snappers - we used to have floppy disks (that were hard...stupid naming in tech isn't a new thing!), with a total capacity of 1.44 megabytes (which was HUGE at the time).&lt;/p&gt;

&lt;p&gt;Here you can find dozens (5 dozen to be precise) of them and their drives used to create music!&lt;/p&gt;

&lt;p&gt;As with anything in tech you should stress test your creation, so it is only fitting I present you with "Through the Fire and the Flames" on the floppotron, the ultimate stress test!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/c4Dz7633PnU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="http://silent.org.pl/home/"&gt;the floppotron website&lt;/a&gt;, the workings behind floppotron are impressive!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#while-we-are-on-the-theme-of-music-with-random-devices"&gt;
  &lt;/a&gt;
  While we are on the theme of music with random devices
&lt;/h2&gt;

&lt;p&gt;Ok so the floppotron is a masterpiece...but if you want something that is silly as well as impressive you have to check out &lt;a href="https://www.youtube.com/channel/UCDwMh0pu1iSXeKx7qmqjIQA"&gt;device orchestra&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I promised you googley eyes...but I bet you weren't expecting them on a toothbrush!&lt;/p&gt;

&lt;p&gt;Check out these two silly videos! (I had to include them both as the "Jack Sparrow" toothbrush with eye makeup is beyond perfect).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9Zd9hURkmXM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;And I am a big fan of Imagine Dragons so I had to include this one as well!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nvNLFYk16sk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-was-it-you-were-saying-about-clippy"&gt;
  &lt;/a&gt;
  What was it you were saying about Clippy?
&lt;/h2&gt;

&lt;p&gt;Some of you may have never heard of Clippy, but he was a little character that Microsoft had in Word that was their "help" section.&lt;/p&gt;

&lt;p&gt;If you don't know about &lt;a href="https://en.wikipedia.org/wiki/Office_Assistant"&gt;Clippy here is the wikipedia entry&lt;/a&gt; to bring you up to speed.&lt;/p&gt;

&lt;p&gt;For those of you who do remember Clippy, this video for Delta Heavy's "Ghost" is designed for you and is another masterpiece!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b4taIpALfAo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-delta-heavy-have-one-of-the-most-beautiful-videos-i-have-ever-seen"&gt;
  &lt;/a&gt;
  And Delta Heavy have one of the most beautiful videos I have ever seen
&lt;/h2&gt;

&lt;p&gt;The story told in this video is just beautiful.&lt;/p&gt;

&lt;p&gt;I won't spoil that story for you (I had to watch it a couple of times to grasp everything at play) but the 8 bit style video is beautifully designed.&lt;/p&gt;

&lt;p&gt;I tried for hours to replicate the style with no success, just a testament to the talent of the artists who created it.&lt;/p&gt;

&lt;p&gt;Oh and although it isn't my normal taste in music, the tune is very catchy too!&lt;/p&gt;

&lt;p&gt;And yes, I know this one doesn't have a link to tech, it is just too impressive to not share it though. It is your own fault for reading my sh*t post ad expecting any kind of coherent thought!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ebILIKHi9wo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-light-show-genius"&gt;
  &lt;/a&gt;
  A light show genius
&lt;/h2&gt;

&lt;p&gt;There isn't much to say here, trying to compute the amount of work that goes into this lightshow on somebodies house is just too difficult for my meagre brain to comprehend!&lt;/p&gt;

&lt;p&gt;I will let the work speak for itself!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jCOsr8SpFdw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finally-can-i-introduce-you-to-captain-disillusion"&gt;
  &lt;/a&gt;
  Finally can I introduce you to Captain Disillusion!
&lt;/h2&gt;

&lt;p&gt;This is more for the people here who like to fiddle with video production and rendering. &lt;/p&gt;

&lt;p&gt;I still consider it tech as there is a surprising amount of math and coding involved.&lt;/p&gt;

&lt;p&gt;Plus, this is a gem of a channel even if you don't partake in video production as you learn loads about how things are faked.&lt;/p&gt;

&lt;p&gt;To make the link a little less tenuous - here is a long video analysing how the visual effects were done in "Flight of the Navigator" - one of the greatest films ever made (possibly..."hu hu"😋)&lt;/p&gt;

&lt;p&gt;Perhaps save this one for when you don't have anything to do, when I first watched it I couldn't do anything else it was that interesting.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tyixMpuGEL8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-a-bonus-video"&gt;
  &lt;/a&gt;
  And a bonus video
&lt;/h2&gt;

&lt;p&gt;For any of you who enjoy gaming, just watch what is coming next from Nvidia!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0frNP0qzxQc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You expect a conclusion? They are silly / entertaining videos (in my opinion), what is there to conclude? I can conclude that this post took 30 minutes to write, so my "5 minute break" wasn't quite as expected 😋&lt;/p&gt;

&lt;p&gt;Anyway don't forget to give this a ❤ and a 🦄 while I get back to work.&lt;/p&gt;

&lt;p&gt;Finally:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Leave a comment for the algo, even if it just to say how pointless this post was 😋 (although preferably with some silly videos to add to the playlist!)&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to tame the chaos and make Slack calm and productive</title>
      <author>Paco</author>
      <pubDate>Tue, 08 Jun 2021 19:55:16 +0000</pubDate>
      <link>https://dev.to/paco/how-to-tame-the-chaos-and-make-slack-calm-and-productive-m3h</link>
      <guid>https://dev.to/paco/how-to-tame-the-chaos-and-make-slack-calm-and-productive-m3h</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published on&lt;/em&gt; &lt;a href="https://pacohq.com"&gt;&lt;em&gt;Paco&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;Do you use Slack for team communication? We love it — and so do lots of teams around the world! Slack helps keep your team on the same page. It’s a space for you to collaborate with your colleagues and make decisions faster.&lt;/p&gt;

&lt;p&gt;But have you ever felt overwhelmed by the constant stream of information Slack gives you? As your team grows, Slack becomes more crowded with streams, channels, and conversations. It becomes a never-ending source of noise, and hard to keep up with. With so many updates, messages, and files, it’s easy to get lost in the noise.&lt;/p&gt;

&lt;p&gt;Do you sometimes struggle with the feeling of FOMO — “fear of missing out” when it comes to your Slack messages? That someone was about to send you an important Slack message and you might miss taking action on it? I know how it feels. I struggled with it at first, too.&lt;/p&gt;

&lt;p&gt;Don’t worry — here are some 🔥 tips and tricks to take back control of your Slack life, and turn Slack into a calmer, more productive environment.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#set-up-slack%C2%A0right"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Set up Slack right&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GOflGZGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpplg4horjy7jhpfkig4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOflGZGc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpplg4horjy7jhpfkig4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, it starts with the basics. Slack is highly configurable — so make sure to get the most out of your workspace and channel setup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use&lt;/strong&gt; &lt;a href="https://slack.com/intl/en-us/help/articles/360035692513-Guide-to-Workflow-Builder"&gt;&lt;strong&gt;Workflows&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;in your Slack workspace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Workflows help you automate routine processes into workflows in your Slack workspace, and easily trigger them based on events or commands — without any coding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIkQKvKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vb5j5sma6xf1i8ewgp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIkQKvKg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vb5j5sma6xf1i8ewgp7.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gku7-wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywg3qfvaespc5ssc7gzc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gku7-wK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywg3qfvaespc5ssc7gzc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use these&lt;/strong&gt; &lt;a href="https://slack.com/intl/en-us/blog/collaboration/how-to-use-slack-channels-to-organize-your-work"&gt;&lt;strong&gt;best practices&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;for optimally configuring Slack channels&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s always a good idea to set and enforce rules for creating new channels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a customized onboarding message and add sticky for the channels.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This can either be done via the &lt;a href="https://slack.com/intl/en-in/slack-tips/automatically-onboard-new-channel-members"&gt;Workflow Builder&lt;/a&gt; or by using a &lt;a href="https://slack.com/intl/en-us/help/articles/205239997-Pin-messages"&gt;pinned message&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BIToK3AW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyqvjgosbywryfmicwex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BIToK3AW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nyqvjgosbywryfmicwex.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bno4d3lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5vz4b35wwkmcvxmb4w5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bno4d3lv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5vz4b35wwkmcvxmb4w5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lay down some ground rules and expectations, and make it visible to new users. Pin it for everyone to see and refer.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#narrow-down-on-the-default-channels-for-new-workspace-users"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Narrow down on the default channels for new Workspace users&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bbi7c_V9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ae9h9i8ak2q557uqbmu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bbi7c_V9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ae9h9i8ak2q557uqbmu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The default channels are a list of channels that gets automatically joined by users when they join the Slack workspace.&lt;/p&gt;

&lt;p&gt;Keep the default list of channels lean and to the minimum to avoid information overload. An example candidate is: a channel where announcements relevant to all company workspace users is broadcasted.&lt;/p&gt;

&lt;p&gt;How to modify default channels? Simply open up the Slack workspace “Settings &amp;amp; Administration” tab and go to the workspace settings. Select the “Default Channels” option and then make your modifications to the list of channels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ve3TxMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iux00egjrr97vwl8n9ih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Ve3TxMi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iux00egjrr97vwl8n9ih.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNLJyBTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3dredvtzd24weremm7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNLJyBTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3dredvtzd24weremm7g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customize-the-sidebar-and-prioritize-your-important-slack-channels-%C2%A0messages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Customize the Sidebar and prioritize your important Slack Channels / Messages&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-ryXk6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llx7elmv7ser9e5adxzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-ryXk6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llx7elmv7ser9e5adxzs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Slack offers a very flexible customization option for the Sidebar. From the ‘Preferences’ menu, you can choose to edit the sidebar.&lt;/p&gt;

&lt;p&gt;Select sort by most recent and to reduce the sidebar clutter, check the “Show unread conversations, plus your starred section”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHL2icYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tylu8vnsqjph6yhrkt31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHL2icYJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tylu8vnsqjph6yhrkt31.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, for Slack’s Pro, Business+, or Enterprise Grid plan users: there is an option to create custom sections for your channels and DMs in the sidebar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Custom sections are only visible to you and won’t affect what your teammates see in their sidebars.&lt;/li&gt;
&lt;li&gt;  Custom sections can only be created in Slack from your desktop, but you can view and move conversations in and out of your custom sections from both your desktop and mobile devices.&lt;/li&gt;
&lt;li&gt;  In an Enterprise Grid organization, your custom sections will apply to all your workspaces.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customize-your-slack-notifications-turn-off-notifications-on-all-except-the-most-important-channels"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Customize your Slack Notifications: Turn off notifications on all except the most important channels&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xRw7u2-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zlx6fpjwqhzjc6yf0a1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xRw7u2-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1zlx6fpjwqhzjc6yf0a1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s face it, Slack channel notifications can be a distraction and can sometimes be overwhelming when you’re working on other tasks. Luckily, you can choose to remain focused on the most important channels and stop other lesser important channel notifications from distracting you.&lt;/p&gt;

&lt;p&gt;Here is how to customize the Slack notification preferences:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Right click on the Channel name and select the ‘Change Notifications’ tab&lt;/li&gt;
&lt;li&gt;  For low priority channels, either select ‘Nothing’ (meaning notifications fully muted) or ‘Just @ mentions’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---GpmvCu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqf7ej7z4iudliikvbdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---GpmvCu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqf7ej7z4iudliikvbdl.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---m3tTVSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a9wje33hknt1ydye4hl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---m3tTVSN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a9wje33hknt1ydye4hl.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hshxXdiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdsc0ip95dpsg0bdnil8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hshxXdiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdsc0ip95dpsg0bdnil8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cut-out-ambiguity%E2%80%8A%E2%80%8Ause-crisp-and-clear-communication-in-your-slack%C2%A0messages"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cut out ambiguity — use crisp and clear communication in your Slack messages&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7uGBbiWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6g87fpei81p2iduzqk7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7uGBbiWu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6g87fpei81p2iduzqk7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we communicate poorly, people get confused. This can lead to wasted time as people try to figure out what another person is communicating, or leads to back-and-forth messages.&lt;/p&gt;

&lt;p&gt;If your messages are ambiguous or difficult to understand then it’s likely that your audience won’t understand them either. Messages that are concise, clear, and direct are the easiest to engage with. The next time you hit send in Slack, make sure to do a quick check of the message.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0tf4APe6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asgzpbn54uoykf8v9v8o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tf4APe6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asgzpbn54uoykf8v9v8o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#work-smarter-with-slacks-threaded-conversations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Work smarter with Slack’s threaded conversations&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20pCd6rF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bet129quxqyviaajw7ia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20pCd6rF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bet129quxqyviaajw7ia.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Slack threaded messages let you move messages and their responses in a “conversation” thread format for easy reference. These threaded conversations are great if you want to be able to scroll easily through your communications and follow discussions within a thread easily in an organized way.&lt;/p&gt;

&lt;p&gt;Slack threads let you make ordered, category-based collections of your Slack messages and group them in the channel or DMs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Result?&lt;/strong&gt; Less clutter in the channel or DMs, and referencing information is a lot easier.&lt;/p&gt;

&lt;p&gt;Slack’s threaded messages are very similar to replies/comments in Gmail and messages/posts in Facebook and Twitter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to use threads in Slack?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Hover your mouse over any DM or Channel message&lt;/li&gt;
&lt;li&gt;  Click on the “Reply to thread” icon and respond there&lt;/li&gt;
&lt;li&gt;  To respond to someone who is not in message thread, use the @ name mention&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;There is more:&lt;/strong&gt; you can even turn on or turn off notifications to every thread using the “more actions” extended menu when you click on the three dots.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISWA9i-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3l9604t29np903a959s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISWA9i-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3l9604t29np903a959s.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--okVF7Ur_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbj2tkd3mkgq9zufgjbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--okVF7Ur_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbj2tkd3mkgq9zufgjbv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-the-slack-remind-to-stay-on%C2%A0task"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Use the Slack /remind to stay on task&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5OqiVla4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jx9y5vvztl6ltn9sa2ks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OqiVla4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jx9y5vvztl6ltn9sa2ks.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To set a reminder for another person or a channel, you can use the /remind slash command&lt;/p&gt;

&lt;p&gt;Reminders are set by default in the time-zone your Slack profile is configured for.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting a personal reminder via the Slack GUI or using /remind slash command&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on “Set yourself a reminder” via the shortcuts menu&lt;/li&gt;
&lt;li&gt;  Select the date/time and write a short description of the reminder&lt;/li&gt;
&lt;li&gt;  Once done, you will see a quick confirmation message via the Slackbot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azbC_8Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8459fh0tsis4fko2gi3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azbC_8Us--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8459fh0tsis4fko2gi3k.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfogdFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2likq9dh1ueuqjk7676e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfogdFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2likq9dh1ueuqjk7676e.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0m5CUM6H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzeb4iqlzqikla8yqpoc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0m5CUM6H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzeb4iqlzqikla8yqpoc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting a reminder for another person or channel via /remind slash command&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Type the reminder message in the message box in the following format: &lt;em&gt;/remind [&lt;a class="mentioned-user" href="https://dev.to/someone"&gt;@someone&lt;/a&gt;
 or #channel] [what] [when]&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;  Send the message to schedule the reminder. Slackbot will send the reminder in a DM to the person you selected, or trigger a message to the channel you specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HA6J1uYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgak3yrudu3g2scl00jq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HA6J1uYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgak3yrudu3g2scl00jq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#favorite-star-important-direct-messages-or%C2%A0channels"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Favorite (Star) Important Direct Messages or Channels&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H77t4Nf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ksb9nc9us3iatau83xy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H77t4Nf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ksb9nc9us3iatau83xy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starring (or favoriting) a Slack channel or DM is an easy way to mark it as important and keep track of it. Starred items show up within a new “Starred” section in your Sidebar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to star (favorite) a Slack channel or DM?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Simply do a right click and select “Start channel” or “Star conversation” from the menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LcCq9VZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opyzcbzv29wes93xs0iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LcCq9VZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opyzcbzv29wes93xs0iw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wDXl3Wr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c1us4x8eijzhgxf0d8p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDXl3Wr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c1us4x8eijzhgxf0d8p.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cktOAjNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ff2fzsjcp4fcoaa6y7u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cktOAjNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ff2fzsjcp4fcoaa6y7u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoid-frequent-context-switching"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Avoid frequent Context Switching&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DxfTwxDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91lgg99g1xllp7swgau0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DxfTwxDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/91lgg99g1xllp7swgau0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Context switching is when you’re in the middle of something and have to switch activities in order to complete another task. Stop jumping around in Slack.&lt;/p&gt;

&lt;p&gt;Focusing on one task at a time will get you further ahead. It’s time to stop context switching and get focused. You can do it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ou-EBNKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgp9kw533uzr1yzui3lp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ou-EBNKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rgp9kw533uzr1yzui3lp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cleanup-mute-or-get-rid-of-the-slack-channels-you-rarely%C2%A0use"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Clean-up! Mute or get rid of the Slack channels you rarely use&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrE-QRXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc5klz5i60c1pe6p8ky2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrE-QRXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc5klz5i60c1pe6p8ky2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have so many Slack channels, you can easily feel overwhelmed and it’s easy to get distracted from what matters. Get rid of the Slack channels you rarely use or mute them in the channel settings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to mute a Slack channel:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open the channel you’d like to mute and click on the ‘&lt;strong&gt;Show Channel Details’&lt;/strong&gt; icon to the top right&lt;/li&gt;
&lt;li&gt; Select &lt;strong&gt;More&lt;/strong&gt; (three dots)&lt;/li&gt;
&lt;li&gt; Select &lt;strong&gt;Mute &amp;lt;#channel name&amp;gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMjay-sM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1osiktpajmy07mjk5wbb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMjay-sM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1osiktpajmy07mjk5wbb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#always-set-and-update-your-slack-availability-and-status%E2%80%8A%E2%80%8Aand-go%C2%A0async"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Always set and update your Slack availability and status — and go Async!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzRW8T34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05fex77oydn9fs8zbosj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzRW8T34--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05fex77oydn9fs8zbosj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let your team know when they can reach you and when they should be patient!&lt;/p&gt;

&lt;p&gt;Slack’s availability and status options make it easy to let others know how quickly you can respond to messages and when you’re available.&lt;/p&gt;

&lt;p&gt;Defining your own &lt;strong&gt;Asynchronous Communication&lt;/strong&gt; rules is an easy way to keep your team informed about the level of responsiveness you want to offer and help them choose the best time to reach out.&lt;/p&gt;

&lt;p&gt;Doing so is easy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Indicate your availability&lt;/li&gt;
&lt;li&gt;  Update your status: let others know if you’re in a meeting or about to take a break&lt;/li&gt;
&lt;li&gt;  Set your Async Communication expectations loud and clear&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to set your Slack availability and status?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on the Slack profile icon to the top right and set the availability&lt;/li&gt;
&lt;li&gt;  Click on the ‘Update your status’ button to set a status message&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WrwJsRKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ve4xcoyxcrit8ee7hbk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrwJsRKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ve4xcoyxcrit8ee7hbk.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tK5X4BYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssf99zff9oxlctsl2zdd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tK5X4BYL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssf99zff9oxlctsl2zdd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limit-distractions-amp-practise-deep-work%E2%80%8A%E2%80%8Aset-dnd-do-not-disturb-when-you-need-to-reclaim-your-calm%C2%A0time"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Limit Distractions &amp;amp; Practise Deep Work — set DND (Do Not Disturb) when you need to! Reclaim your calm time&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HZslfoZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0fhhqj8jwruurz86yk1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HZslfoZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0fhhqj8jwruurz86yk1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Slack Do Not Disturb (DND) is a very powerful feature to provide you with uninterrupted time to focus on specific tasks or just rest and recharge.&lt;/p&gt;

&lt;p&gt;Let’s be honest — sometimes, we need to do Deep work or focus on a specific task or be away from work. The DND feature is the best way to manage this — it pauses all your instant notifications and helps you stay focused.&lt;/p&gt;

&lt;p&gt;Reclaim your calm time, rather than getting distracted by notifications!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does DND in Slack do?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Pauses all notifications and mentions&lt;/li&gt;
&lt;li&gt;  Others will see a DND icon next to your username in their Slack display&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to configure Slack DND?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Click on your profile icon in the top right of the Slack window&lt;/li&gt;
&lt;li&gt;  Select ‘Pause Notifications’ and chose the desired DND duration (or set a custom duration)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M-pxwieq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/385pam5k5bqmq4olnuhh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M-pxwieq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/385pam5k5bqmq4olnuhh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-slack-as-scratchpad%E2%80%8A%E2%80%8Adm-yourself"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Use Slack as scratchpad — DM yourself!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_5TEhGus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz6tvip2iod3g6vs87xn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_5TEhGus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz6tvip2iod3g6vs87xn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is simple, yet awesome! Ever wondered why Slack provided us the option to DM ourselves?&lt;/p&gt;

&lt;p&gt;Need to take a note, save a message, write a draft or just jot down something for future reference? Simply DM it to yourself — it’s really that simple! Slack DM is a simple but powerful scratchpad for your own personal usage.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-use-of-slacks-official-integrations%E2%80%8A%E2%80%8Athere-are-some-nifty-productivity-apps-available-in-the-slack-app-directory"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Make use of Slack’s official integrations — there are some nifty productivity apps available in the Slack App Directory!&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHYLHj5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzucmx3r0ck9q4wff6pu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHYLHj5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzucmx3r0ck9q4wff6pu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to get something fancier than Slack’s native capabilities for your productivity needs? Head off to Slack’s &lt;a href="https://slack.com/apps"&gt;official app directory&lt;/a&gt;, and pick something nifty to fit your needs!&lt;/p&gt;

&lt;p&gt;A bit of shameless self-promotion: we recommend checking out &lt;a href="https://pacohq.com"&gt;&lt;strong&gt;Paco&lt;/strong&gt;&lt;/a&gt;, the new trending 🔥 Slack productivity app that helps you control the Slack chaos and be more calm and productive.&lt;/p&gt;

&lt;p&gt; &lt;br&gt;
 &lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published on&lt;/em&gt; &lt;a href="https://pacohq.com/blog/guide/how-to-tame-the-chaos-and-make-slack-calm-and-productive-2/"&gt;&lt;em&gt;Paco&lt;/em&gt;&lt;/a&gt; &lt;em&gt;|&lt;/em&gt; &lt;a href="http://www.pacohq.com"&gt;&lt;em&gt;www.pacohq.com&lt;/em&gt;&lt;/a&gt; &lt;em&gt;| Follow on Twitter:&lt;/em&gt; &lt;em&gt;&lt;a href="https://twitter.com/pacofetch?ref_src=twsrc%5Etfw"&gt;Follow @pacofetch&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>slack</category>
      <category>productivity</category>
      <category>developerproductivity</category>
      <category>paco</category>
    </item>
    <item>
      <title>Let's Dive into React (Pt. 3)</title>
      <author>Abdur-Rahman</author>
      <pubDate>Tue, 08 Jun 2021 19:43:05 +0000</pubDate>
      <link>https://dev.to/shafspecs/let-s-dive-into-react-pt-3-2647</link>
      <guid>https://dev.to/shafspecs/let-s-dive-into-react-pt-3-2647</guid>
      <description>&lt;p&gt;In the last articles &lt;em&gt;&lt;a href="https://dev.to/shafspecs/let-s-dive-into-react-pt-1-4i7b"&gt;1&lt;/a&gt; and &lt;a href="https://dev.to/shafspecs/let-s-dive-into-react-pt-2-3omm"&gt;2&lt;/a&gt;&lt;/em&gt;, we setup our project and did a little chit-chat about what was actually happening. But now, let's start writing code. In this project, we will be making a counter that has a button to increase the count and another to decrease the count.&lt;/p&gt;

&lt;p&gt;Open your VS Code or any text editor you use, and let's navigate to our &lt;code&gt;index.jsx&lt;/code&gt;, this is where all action will be taking place. For now, let's leave &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;index.css&lt;/code&gt; alone.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xaJyFU4b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7kb4fbzxvjvuckjrf3b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xaJyFU4b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7kb4fbzxvjvuckjrf3b.png" alt="Our index.jsx"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's explain this code we wrote above. On the 1st line, we imported React library from our &lt;code&gt;node_modules&lt;/code&gt; folder (&lt;em&gt;you can head there yourself, and you will see a folder named &lt;code&gt;react&lt;/code&gt;&lt;/em&gt;), this is necessary and will be imported on every page we write some React code. On the 2nd line, we imported React-DOM into the file, this is necessary in our entry-level file only (&lt;em&gt;in our case, &lt;code&gt;index.jsx&lt;/code&gt;&lt;/em&gt;), and we will use it to render our page.&lt;/p&gt;

&lt;p&gt;Rendering is simply the act of showing what we wrote in our React file on the browser.&lt;/p&gt;

&lt;p&gt;On the 4th line, I called the &lt;code&gt;render()&lt;/code&gt; function to give us our webpage. This method takes 2 parameters, the first is &lt;strong&gt;what&lt;/strong&gt; to render, and the second is &lt;strong&gt;where&lt;/strong&gt; to render. We chose to render &lt;code&gt;Hello React&lt;/code&gt; and to render it in the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element with id:  &lt;code&gt;root&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kD8D1tkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7nc3ygxe0smkqs4j9cr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kD8D1tkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7nc3ygxe0smkqs4j9cr.png" alt="Our div element"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's edit our code, in the &lt;a href="https://dev.to/shafspecs/let-s-dive-into-react-pt-2-3omm"&gt;last article&lt;/a&gt; I mentioned that you needed to understand modules in JavaScript, this is because we will be using them here. It's possible for us to write our code below line 2 and just render it at the end, but what if it's a site? full of pages and several links? Our code will be long and that's inconvenient.&lt;/p&gt;

&lt;p&gt;Instead, let's split our code into modules or different files and render them in the &lt;code&gt;index.jsx&lt;/code&gt;. To start off, let's create a new file called &lt;code&gt;App.jsx&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PCr2tYAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjai8wm9xhkjl58kl9h8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCr2tYAp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tjai8wm9xhkjl58kl9h8.png" alt="App.jsx"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's the first thing, now I want you to import 'React' from it's module (&lt;em&gt;no answers shown yet, refer above for a hint&lt;/em&gt;). Let's create a component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's a component?&lt;/strong&gt;: &lt;strong&gt;A component can be defined simply as a JavaScript function or class that holds some JSX code (could be a simple header to a HTML page) and is used elsewhere. And that brings us to an advantage of React over pure HTML, and that's re-usability. Imagine we have a tic-tac-toe game. In HTML, we will have to write a separate code for each of the 9 squares and what will happen if clicked. In React, we can simply just write the code for a square and reuse it 9 times, hence shorter code and higher level of productivity.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In our &lt;code&gt;App&lt;/code&gt; component, let's create a function called &lt;code&gt;App&lt;/code&gt;. Can be arrow function or a normal function, doesn't matter.&lt;br&gt;
Our function will have a return method in it, Let's create a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag and write 'Hello World' in it. Feel free to add a tag in the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and write more things. &lt;strong&gt;And this brings up another important rule, your return function can return only one thing, in our case, one &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kgL7inrs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f26f50vreo81pzj23q5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kgL7inrs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f26f50vreo81pzj23q5b.png" alt="Wrong way to write React"&gt;&lt;/a&gt;&lt;br&gt;
In our wrong code above, we see errors throughout, and this is due to the ability of React to read our code before runtime and tell us typographical errors in our code. &lt;/p&gt;

&lt;p&gt;We can save our code and run &lt;code&gt;npm run start&lt;/code&gt; but wait, we can still see 'Hello React'. That's because &lt;code&gt;index.jsx&lt;/code&gt; is our entry point and since we haven't linked it to our &lt;code&gt;App.jsx&lt;/code&gt;, we still see our old code.&lt;/p&gt;

&lt;p&gt;Let's import &lt;code&gt;App.jsx&lt;/code&gt; into our &lt;code&gt;index&lt;/code&gt;, first we have to export our function &lt;code&gt;App&lt;/code&gt; as the default export, And that's shown below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YNSHX8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50rizptgjttub14ir5kg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YNSHX8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50rizptgjttub14ir5kg.png" alt="Our export"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we've done that, our &lt;code&gt;App.jsx&lt;/code&gt; can be seen by any file in our project. We still won't see any change yet because we haven't changed our &lt;code&gt;index.jsx&lt;/code&gt;, let's import &lt;code&gt;App&lt;/code&gt; from &lt;code&gt;App.jsx&lt;/code&gt; into our file&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3OQPVZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft7uiom0th03l8we4sty.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3OQPVZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft7uiom0th03l8we4sty.png" alt="importing App.jsx"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We don't need to add &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.jsx&lt;/code&gt; into our file, React automatically handles that (&lt;strong&gt;only for JS files, if CSS or other, we add the extension&lt;/strong&gt;). In our first parameter, let's set our App as the rendered thing. First we remove the ;Hello React' message, then we write what we imported (&lt;code&gt;App&lt;/code&gt;) like we are writing HTML (in between the tag symbol, &amp;lt; &amp;gt;). Like below&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LzGJlSnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gyl4zxzk6d32k3ows0tt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LzGJlSnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gyl4zxzk6d32k3ows0tt.png" alt="New Index.jsx look"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Allow me to add something here, and that's the fact that any tag without a closing tag e.g &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag must have the &lt;code&gt;/&lt;/code&gt; at the end i.e &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;, just typing &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; is wrong. So there we have it, save that and run it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--reVBSLEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2icggk9tbvvza28a3d9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--reVBSLEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2icggk9tbvvza28a3d9.png" alt="Our page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voila! We now have hello world written there. In the next article, we will actually start building the counter app and adding CSS. Feel free to add, change or do whatever. If you want a greater challenge, create a new component entirely and import it into the &lt;code&gt;App.jsx&lt;/code&gt;, display it from there like we did in &lt;code&gt;index.jsx&lt;/code&gt; and keep having fun.  &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>a first look at react 18 with vite and netlify</title>
      <author>anthony-campolo</author>
      <pubDate>Tue, 08 Jun 2021 19:42:46 +0000</pubDate>
      <link>https://dev.to/ajcwebdev/a-first-look-at-react-18-with-vite-and-netlify-5411</link>
      <guid>https://dev.to/ajcwebdev/a-first-look-at-react-18-with-vite-and-netlify-5411</guid>
      <description>&lt;p&gt;When it’s released, &lt;a href="https://github.com/reactwg/react-18/discussions/4"&gt;React 18&lt;/a&gt; will include out-of-the-box improvements including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/reactwg/react-18/discussions/21"&gt;Automatic batching&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;New APIs (like &lt;a href="https://github.com/reactwg/react-18/discussions/41"&gt;&lt;code&gt;startTransition&lt;/code&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://github.com/reactwg/react-18/discussions/37"&gt;new streaming server renderer&lt;/a&gt; with built-in support for &lt;code&gt;React.lazy&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The React team has also taken a new step by creating the &lt;a href="https://github.com/reactwg/react-18"&gt;React 18 Working Group&lt;/a&gt; to provide feedback, ask questions, and collaborate on the release. The Working Group is hosted on &lt;a href="https://github.com/reactwg/react-18/discussions"&gt;GitHub Discussions&lt;/a&gt; and is available for the public to read.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-18-working-group"&gt;
  &lt;/a&gt;
  React 18 Working Group
&lt;/h2&gt;

&lt;p&gt;Members of the working group can leave feedback, ask questions, and share ideas. The core team will also use the discussions repo to share our research findings. As the stable release gets closer, any important information will also be posted on this blog.&lt;/p&gt;

&lt;p&gt;Because an initial surge of interest in the Working Group is expected, only invited members will be allowed to create or comment on threads. However, the threads are fully visible to the public, so everyone has access to the same information. The team believes this is a good compromise between creating a productive environment for working group members, while maintaining transparency with the wider community.&lt;/p&gt;

&lt;p&gt;No specific release date is scheduled, but the team expects it will take several months of feedback and iteration before React 18 is ready for most production applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Library Alpha: Available today&lt;/li&gt;
&lt;li&gt;Public Beta: At least several months&lt;/li&gt;
&lt;li&gt;Release Candidate (RC): At least several weeks after Beta&lt;/li&gt;
&lt;li&gt;General Availability: At least several weeks after RC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More details about the projected release timeline are &lt;a href="https://github.com/reactwg/react-18/discussions/9"&gt;available in the Working Group&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-react-app-with-vites-react-template"&gt;
  &lt;/a&gt;
  Create React App with Vite's React Template
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn create @vitejs/app ajcwebdev-react18 &lt;span class="nt"&gt;--template&lt;/span&gt; react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install dependencies
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;ajcwebdev-react18
yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#start-development-server"&gt;
  &lt;/a&gt;
  Start development server
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uCffAHl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdvsb936oo4qlhq2fw12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uCffAHl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdvsb936oo4qlhq2fw12.png" alt="01-create-vite-app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-raw-reactalpha-endraw-and-raw-reactdomalpha-endraw-"&gt;
  &lt;/a&gt;
  Install &lt;code&gt;react@alpha&lt;/code&gt; and &lt;code&gt;react-dom@alpha&lt;/code&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h3&gt;

&lt;p&gt;If we look in our &lt;code&gt;package.json&lt;/code&gt; we'll see the following dependencies included from the Vite template.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^17.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"react-dom"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^17.0.0"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install &lt;code&gt;alpha&lt;/code&gt; versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react@alpha react-dom@alpha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check your &lt;code&gt;dependencies&lt;/code&gt; for the new versions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^18.0.0-alpha-e6be2d531"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"react-dom"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^18.0.0-alpha-e6be2d531"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use &lt;code&gt;esbuild.jsxInject&lt;/code&gt; to automatically inject JSX helper imports for every file transformed by ESBuild:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// vite.config.js&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;reactRefresh&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
  &lt;span class="na"&gt;esbuild&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;jsxInject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`import React from 'react'`&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mainjsx"&gt;
  &lt;/a&gt;
  main.jsx
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#appjsx"&gt;
  &lt;/a&gt;
  App.jsx
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt;
          &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-logo"&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          React 18 Deployed on Netlify with Vite
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deploy-to-netlify"&gt;
  &lt;/a&gt;
  Deploy to Netlify
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;netlify.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[build]&lt;/span&gt;
  &lt;span class="py"&gt;publish&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"dist"&lt;/span&gt;
  &lt;span class="py"&gt;command&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"yarn build"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a blank GitHub repository at &lt;a href="https://github.com/new/"&gt;github.new&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
git add README.md
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"first commit"&lt;/span&gt;
git remote add origin https://github.com/ajcwebdev/ajcwebdev-react18.git
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Connect your GitHub repository to Netlify.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QpK5ixoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sud29dkfgb9kxcthbm0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QpK5ixoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sud29dkfgb9kxcthbm0a.png" alt="02-connect-github-repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The build commands are included from your &lt;code&gt;netlify.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yLoFwQH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfdbymv7infchvybsjgh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yLoFwQH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfdbymv7infchvybsjgh.png" alt="03-build-commands-auto-imported"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn build
yarn run v1.22.4
warning package.json: No license field

$ vite build
vite v2.3.7 building for production...
transforming...
✓ 26 modules transformed.
rendering chunks...

dist/assets/favicon.17e50649.svg   1.49kb
dist/assets/logo.ecc203fb.svg      2.61kb
dist/index.html                    0.51kb
dist/assets/index.7cb030a3.js      0.39kb / brotli: 0.20kb
dist/assets/index.0673ce28.css     0.76kb / brotli: 0.40kb
dist/assets/vendor.9aeda92c.js     134.00kb / brotli: 37.26kb

Done in 4.86s.
​
(build.command completed in 5.1s)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set a custom domain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrZeACqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adsfhpjsem8g8wkcm6ap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrZeACqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adsfhpjsem8g8wkcm6ap.png" alt="04-custom-domain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to your &lt;a href="https://ajcwebdev-react18.netlify.app/"&gt;new domain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9_Cifr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sx49sydxcw7q6hgc2tv7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9_Cifr3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sx49sydxcw7q6hgc2tv7.png" alt="05-deployed-website-on-netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find all the code for this article &lt;a href="https://github.com/ajcwebdev/ajcwebdev-react18"&gt;on my GitHub&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>suspense</category>
      <category>vite</category>
      <category>netlify</category>
    </item>
    <item>
      <title>Learning Web Dev on the Web | A Roadmap with Resources</title>
      <author>Nukala Suraj</author>
      <pubDate>Tue, 08 Jun 2021 18:16:04 +0000</pubDate>
      <link>https://dev.to/lucidmach/learning-web-dev-on-the-web-a-roadmap-with-resources-2e6m</link>
      <guid>https://dev.to/lucidmach/learning-web-dev-on-the-web-a-roadmap-with-resources-2e6m</guid>
      <description>&lt;p&gt;As a sequel to my first blog, &lt;a href="https://dev.to/lucidmach/learning-web-dev-on-the-web-ifp"&gt;learning web dev on the web&lt;/a&gt; which had info on some of the most epic &lt;strong&gt;youtube channels&lt;/strong&gt; from where you can &lt;em&gt;learn &lt;strong&gt;web dev&lt;/strong&gt; for &lt;strong&gt;free&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This blog is going to be a roadmap with carefully curated resources that'll take you from Zero to Hero in no time,&lt;br&gt;
(*Terms and Conditions apply 😂 Just Kidding)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-dev-web-dev"&gt;
  &lt;/a&gt;
  Website Dev !== Web Dev
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;web dev&lt;/strong&gt; is a person who &lt;strong&gt;builds apps&lt;/strong&gt; that run &lt;strong&gt;on the web&lt;/strong&gt; and with tools like &lt;strong&gt;react native(for mobile)&lt;/strong&gt; and &lt;strong&gt;electron(for desktop)&lt;/strong&gt; he is now expected to be &lt;em&gt;able to build pretty much any kind of software&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Spotify, Netflix, YouTube, Discord, WhatsApp, Figma... are some of the more popular web apps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pZEuWrUX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.devrant.com/devrant/rant/r_1922199_oCEix.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZEuWrUX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.devrant.com/devrant/rant/r_1922199_oCEix.jpg" alt="meme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building &lt;strong&gt;websites&lt;/strong&gt; is basically pretty much a &lt;strong&gt;prerequisite&lt;/strong&gt; for web developers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-roadmap"&gt;
  &lt;/a&gt;
  The Roadmap
&lt;/h2&gt;

&lt;p&gt;A Web App has 2 major components&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;FrontEnd&lt;/strong&gt; (AKA The &lt;strong&gt;UI&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Backend&lt;/strong&gt; (AKA The &lt;strong&gt;API&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  FrontEnd
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h4&gt;

&lt;p&gt;Ideally this shouldn't take you more than 1 hour to learn HTML, the markup that is the &lt;strong&gt;foundation stone&lt;/strong&gt; of the &lt;strong&gt;web&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCI08ckY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/UB1O30fR-EE/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCI08ckY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/UB1O30fR-EE/maxresdefault.jpg" alt="HTML by Traversy Media"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is by &lt;code&gt;Brad Traversy&lt;/code&gt; of traversy media, one of the first channels on youtube to post web dev tutorials &lt;a href="https://www.youtube.com/watch?v=UB1O30fR-EE"&gt;HTML Crash Course for Beginners&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rwd"&gt;
  &lt;/a&gt;
  RWD
&lt;/h4&gt;

&lt;p&gt;In the above video, you'd have also learnt some basic CSS, but to make stuff on the web &lt;strong&gt;look beautiful on any screen&lt;/strong&gt;, there's something called RWD or Responsive(to screen) Web Development.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vHNHIl6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d31ezp3r8jwmks.cloudfront.net/gjQ6wqLoXSviuBRJPa3PXUPi" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vHNHIl6d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d31ezp3r8jwmks.cloudfront.net/gjQ6wqLoXSviuBRJPa3PXUPi" alt="Conquering Responsive Layouts"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://courses.kevinpowell.co/conquering-responsive-layouts"&gt;Conquering Responsive Layouts&lt;/a&gt; by &lt;code&gt;Kevin Powell&lt;/code&gt; AKA &lt;strong&gt;the king of CSS on youtube&lt;/strong&gt;, made this binge-able but don't binge 21 day course on everything you need to know in CSS&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h4&gt;

&lt;p&gt;Now that you can make beautiful website that look kick-ass on any screen. The next step lies in making them &lt;strong&gt;interactable&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8gThZTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.fs.teachablecdn.com/Mk8sfdnTzdk3ONMbBFWg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8gThZTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.fs.teachablecdn.com/Mk8sfdnTzdk3ONMbBFWg" alt="Modern JavaScript"&gt;&lt;/a&gt;&lt;br&gt;
Enter Shaun from &lt;code&gt;Net Ninja&lt;/code&gt; the &lt;strong&gt;greatest teacher&lt;/strong&gt; on YouTube, he makes javascript so easy that the memes that say javascript is mind boggling would make no sense.🤯&lt;br&gt;
He has a &lt;a href="https://youtube.com/playlist?list=PL4cUxeGkcC9haFPT7J25Q9GRB_ZkFrQAc"&gt;free playlist on youtube&lt;/a&gt; as well as a &lt;a href="https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/"&gt;course on udemy&lt;/a&gt; that only includes the extra projects&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h4&gt;

&lt;p&gt;Git, the most overhyped tech that really is just something that lets you go &lt;strong&gt;open source&lt;/strong&gt; [so that other people can &lt;strong&gt;contribute&lt;/strong&gt; to your apps for &lt;strong&gt;free&lt;/strong&gt;], while github is really just &lt;strong&gt;google drive&lt;/strong&gt; for &lt;strong&gt;code&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_TN4V8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/IHaTbJPdB-s/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_TN4V8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/IHaTbJPdB-s/maxresdefault.jpg" alt="Learn Git in 20mins"&gt;&lt;/a&gt;&lt;br&gt;
Kyle Cook from &lt;code&gt;WebDevSimplified&lt;/code&gt; is perhaps the most underrated youtube channel, he &lt;strong&gt;super simplifies&lt;/strong&gt; everything while trying to stay &lt;strong&gt;short and concise&lt;/strong&gt; while making tutorials. &lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=IHaTbJPdB-s"&gt;Learn Git in 20mins&lt;/a&gt; is an amazing video that just told me that &lt;em&gt;people think git is complex while in reality its a super simple thing&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Backend
&lt;/h3&gt;

&lt;p&gt;This is perhaps the best time to switch to the backend. Since you already learnt javascript as a part of this roadmap, node.js would be the best backend language for you... if you're comfy with other languages please do stick to that&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rest-api"&gt;
  &lt;/a&gt;
  REST API
&lt;/h4&gt;

&lt;p&gt;A REST API is a &lt;strong&gt;HTTP based API&lt;/strong&gt; to which you could send data(in the web world as json) and receive processed data.&lt;br&gt;
You could connect to&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A database (SQL or NoSQL)&lt;/li&gt;
&lt;li&gt;A ML model
...&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--voJLvmdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/zb3Qk8SG5Ms/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--voJLvmdY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/zb3Qk8SG5Ms/maxresdefault.jpg" alt="NodeJS Crash Course"&gt;&lt;/a&gt;&lt;br&gt;
This is the topic that brought a lot of fame to &lt;code&gt;Net Ninja&lt;/code&gt; since, it became outdated Shaun makes a revamped kickass &lt;a href="https://youtube.com/playlist?list=PL4cUxeGkcC9jsz4LDYc6kv3ymONOKxwBU"&gt;NodeJS Crash Course&lt;/a&gt; youtube playlist that has one of the &lt;strong&gt;most simplest explanation&lt;/strong&gt; to a lot of the &lt;strong&gt;core backend concepts&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#authorization"&gt;
  &lt;/a&gt;
  Authorization
&lt;/h4&gt;

&lt;p&gt;Now that you can build web apps, you need to learn how to secure it. It's a common misconception that authorization is the  same as authentication but there's a huge difference. &lt;br&gt;
&lt;strong&gt;Authorization&lt;/strong&gt; is &lt;strong&gt;ensuring&lt;/strong&gt; that a user is a &lt;strong&gt;registered one&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aVtE7g_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/2jqok-WgelI/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aVtE7g_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/2jqok-WgelI/maxresdefault.jpg" alt="Build A Node.js API Authentication With JWT Tutorial"&gt;&lt;/a&gt;&lt;br&gt;
The most fun teacher on youtube brings us &lt;a href="https://www.youtube.com/watch?v=2jqok-WgelI"&gt;Build A Node.js API Authentication With JWT Tutorial&lt;/a&gt; that covers everything from &lt;strong&gt;encrypting user data&lt;/strong&gt; to simplifying &lt;strong&gt;JWTs&lt;/strong&gt; while &lt;em&gt;making it as fun and enjoyable as possible&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HEADS UP ON THE SILLY PUNS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h4&gt;

&lt;p&gt;In authorization you only see if a user has been register/is in our database. We need a technique to figure out &lt;strong&gt;if a user&lt;/strong&gt; who's registering is &lt;strong&gt;valid&lt;/strong&gt;.&lt;br&gt;
Unless you've been living under a rock you've obviously done an email verification. Authentication is exactly that.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJIbBl5T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ViiBA_--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://geekyturtles.com/assets/static/cover.872e63c.a2359baff849b8f684836f5a43dde302.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJIbBl5T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ViiBA_--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://geekyturtles.com/assets/static/cover.872e63c.a2359baff849b8f684836f5a43dde302.png" alt="Confirmation Email with Node.js"&gt;&lt;/a&gt;&lt;br&gt;
My personal inspiration to getting into web dev, the G.O.A.T, the one and only &lt;code&gt;Ben Awad&lt;/code&gt; brings his casual youtube videos on web security &lt;a href="https://www.youtube.com/watch?v=76tKpVbjhu8"&gt;Confirmation Email with Node.js&lt;/a&gt; is a good starting video on the topic, but since he doesn't have a playlist on it so you'll have to just casually watch his amazing videos&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#advanced-stuff"&gt;
  &lt;/a&gt;
  Advanced Stuff
&lt;/h4&gt;

&lt;p&gt;Congratulations you've now reached the point where it's incredibly tough to find video resources on anything.&lt;br&gt;
The Documentation is your best friend at this stage.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#reactsveltevue"&gt;
  &lt;/a&gt;
  React/Svelte/Vue
&lt;/h5&gt;

&lt;p&gt;Now the need to &lt;strong&gt;reuse components&lt;/strong&gt; becomes a serious issue and this lead to the &lt;strong&gt;rise UI libraries&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y20X8GR9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/FMCX25WjU9o/maxresdefault.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y20X8GR9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/FMCX25WjU9o/maxresdefault.jpg" alt="Practical React"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;Ben Awad&lt;/code&gt; is the god of react youtube tutorials and his &lt;a href="https://www.youtube.com/playlist?list=PLN3n1USn4xlntqksY83W3997mmQPrUmqM"&gt;Practical React&lt;/a&gt; playlist is the bible/bagwadh gita/quran.&lt;br&gt;
As for the rest the documentations are unbeatable especially for Svelte&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTICE I DIDN'T MENTION ANGULAR, HIGHLY INTENSIONAL BUT DON'T LET THAT STOP YOU IF YOU'RE INTO IT.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h5&gt;

&lt;p&gt;GraphQL is a &lt;strong&gt;Query Language&lt;/strong&gt; like SQL that gives you way more &lt;strong&gt;freedom&lt;/strong&gt; and &lt;strong&gt;flexibility&lt;/strong&gt; while fetching resources from your database&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c69Amdh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.howtographql.com/social.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c69Amdh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.howtographql.com/social.png" alt="How To GraphQL"&gt;&lt;/a&gt;&lt;br&gt;
Check Out &lt;a href="https://www.howtographql.com"&gt;How To GraphQL&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#microservices"&gt;
  &lt;/a&gt;
  MicroServices
&lt;/h5&gt;

&lt;p&gt;A whole new approach to building &lt;strong&gt;highly modular&lt;/strong&gt; and &lt;strong&gt;scalable&lt;/strong&gt; web applications&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YZFvmDJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-c.udemycdn.com/course/480x270/2887266_c696_5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YZFvmDJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img-c.udemycdn.com/course/480x270/2887266_c696_5.jpg" alt="Microservices with Node and React"&gt;&lt;/a&gt;&lt;br&gt;
Unfortunately the only good resource that I've found for microservices is a &lt;a href="https://www.udemy.com/course/microservices-with-node-js-and-react/"&gt;udemy course&lt;/a&gt; but it's by &lt;code&gt;Stephan Grider&lt;/code&gt; who turns out to be my go to udemy instructor when I want to learn anything ground up.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h5&gt;

&lt;p&gt;That's right, ML in web apps, if you think about it, most of the AI you interact with is usually in some form of an API&lt;br&gt;
I've 2 resources here&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Theory and Understanding of the Algorithms
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8XlpS0e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yt3.ggpht.com/ytc/AAUvwnjEkKLjVVfaGrs4Y-teISVqFmssnK7Ia19fLGi-%3Ds900-c-k-c0x00ffffff-no-rj" alt="StatQuest"&gt;
&lt;a href="https://youtube.com/playlist?list=PLblh5JKOoLUICTaGLRoHQDuF_7q2GfuJF"&gt;StatQuest&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The Code and Implementation
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ncCATUNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.python-engineer.com/images/titles/mlfromscratch.webp" alt="Python Engineer"&gt;
&lt;a href="https://youtube.com/playlist?list=PLqnslRFeH2Upcrywf-u2etjdxxkL8nl7E"&gt;Python Engineer&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Mental health-first</title>
      <author>Jasdeep Khalsa</author>
      <pubDate>Tue, 08 Jun 2021 18:12:32 +0000</pubDate>
      <link>https://dev.to/jasdeepkhalsa/mental-health-first-2292</link>
      <guid>https://dev.to/jasdeepkhalsa/mental-health-first-2292</guid>
      <description>&lt;p&gt;We tend to design and build&lt;/p&gt;

&lt;p&gt;Businesses, cultures, workplaces and systems which are…&lt;/p&gt;

&lt;p&gt;Privacy-first&lt;br&gt;
Security-first&lt;br&gt;
Customer-first&lt;/p&gt;

&lt;p&gt;I think it's about time we start to design and build things which are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mental health-first&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other things are important, but nothing is more important than mental health.&lt;/p&gt;

&lt;p&gt;If your mental health wears down, your physical health can also be affected and then nothing else is achievable.&lt;/p&gt;

&lt;p&gt;Do you agree or disagree? I would love to know your thoughts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo credits by &lt;a href="https://unsplash.com/@jareddrice?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jared Rice&lt;/a&gt; on Unsplash&lt;/em&gt;&lt;/p&gt;

</description>
      <category>mentalhealth</category>
      <category>kindness</category>
      <category>mentalhealthawareness</category>
      <category>fridaythoughts</category>
    </item>
    <item>
      <title>JavaScript-30-Day-8</title>
      <author>KUMAR HARSH</author>
      <pubDate>Tue, 08 Jun 2021 18:00:27 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/javascript-30-day-8-4lhj</link>
      <guid>https://dev.to/cenacr007_harsh/javascript-30-day-8-4lhj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#fun-with-html5-canvas"&gt;
  &lt;/a&gt;
  &lt;center&gt;Fun With HTML5 Canvas&lt;/center&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LTv7r0i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w88lr1zbkmw69iufi97d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTv7r0i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w88lr1zbkmw69iufi97d.png" alt="ss"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#click-for-project-demo"&gt;
  &lt;/a&gt;
  &lt;a href="https://cenacrharsh.github.io/JS-30-DAY-8/"&gt;click for project demo&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;On day-8 of javascript-30 we learnt the fundamentals of HTML5 Canvas. It was the most interesting challenge up until now where we made a sort of painting canvas and the results were pretty awesome.&lt;/p&gt;

&lt;p&gt;So we'll be making a canvas where if the user clicks down the mouse and drags he can draw on the canvas, and to fine tune it we would also use &lt;code&gt;hsl()&lt;/code&gt; to change the colors as well.&lt;/p&gt;

&lt;p&gt;Canvas on the web is something like Microsoft paint, where you get a block of actual pixels, you need to then draw on that.&lt;/p&gt;

&lt;p&gt;Accoring to &lt;strong&gt;&lt;a href="https://www.w3schools.com/html/html5_canvas.asp"&gt;w3schools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The HTML  element is used to draw graphics, on the fly, via JavaScript.The  element is only a container for graphics. You must use JavaScript to actually draw the graphics.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First thing we do is add the canvas element&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"draw"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;then we grab that element&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#draw&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we need one more important thing that is the &lt;code&gt;context&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The thing is we don't draw directly on the canvas element in HTML, but we draw on something called the context. The context can either be &lt;strong&gt;2d&lt;/strong&gt; (which is what we will be working with) or &lt;strong&gt;3d&lt;/strong&gt; for stuff like video games and 3d rendering.&lt;/p&gt;

&lt;p&gt;So we're going to grab the context&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We mention 2d that is we are asking for 2d context.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: the &lt;strong&gt;d&lt;/strong&gt; in &lt;strong&gt;2d&lt;/strong&gt; must be small or else &lt;code&gt;getContext()&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now when we added the &lt;code&gt;canvas&lt;/code&gt; element we gave it initial height and width of 800px but now size up our canvas to be the exact dimensions of the window before we do any of the drawing.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we'll need a couple of base settings like &lt;code&gt;strokeStyle&lt;/code&gt;, &lt;code&gt;lineCap&lt;/code&gt;, &lt;code&gt;lineJoin&lt;/code&gt;, &lt;code&gt;lineWidth&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#BADA55&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineJoin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineCap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;All the different properties can be read on &lt;a href="https://www.w3schools.com/html/html5_canvas.asp"&gt;w3schools&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Basically when you draw on something first of all there needs to be a color, end of line should be squared or rounded and so on.&lt;/p&gt;

&lt;p&gt;On our canvas nothing happens on simply moving the mouse, unless we have the cursor down. So for that we will simply create a flag and initially set it false, then we attach &lt;code&gt;eventListeners()&lt;/code&gt; to it and change it's value to true on cursor down and back to false on cursor up. We'll also use a &lt;code&gt;mouseout&lt;/code&gt; event listener simply because if we click down and go out of the window and let go of the cursor and then comeback, it's still going to think the mouse is down since we never triggered a mouse up on that event.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We'll see why we updated the variables &lt;code&gt;lastX&lt;/code&gt; and &lt;code&gt;lastY&lt;/code&gt; on &lt;code&gt;mousedown&lt;/code&gt; shortly.&lt;/p&gt;

&lt;p&gt;With this we have our &lt;strong&gt;Click and Drag&lt;/strong&gt; functionality. We are all set to draw.&lt;/p&gt;

&lt;p&gt;We use a couple of variables.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we need the co ordinates while drawing hence the variables lastX and lastY.&lt;/p&gt;

&lt;p&gt;We have a couple of issues at this point.&lt;/p&gt;

&lt;p&gt;First one no matter where we tap on screen the initial coordinates is (0,0) so lines are drawn from Origin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FO_bphif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgyzap0884dz200zrtxx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FO_bphif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgyzap0884dz200zrtxx.png" alt="img1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we need to keep updating X and Y. We do so inside our &lt;code&gt;draw&lt;/code&gt; function which is called &lt;code&gt;mousemove&lt;/code&gt; event&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5NzmfV5P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i36x4nqggajvi8eohyg9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5NzmfV5P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i36x4nqggajvi8eohyg9.png" alt="img2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It only solves half our problem as still initial line is started from origin so we update X and Y inside &lt;code&gt;mousedown&lt;/code&gt; as well and since mousedown comes before mousemove our value of X and Y would be updated and we would have our cursor where we want from the start.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2V9M3s3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lfo6b8t8fh2x4a64xou.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2V9M3s3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lfo6b8t8fh2x4a64xou.png" alt="img3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now inside our &lt;code&gt;draw()&lt;/code&gt; function we use &lt;strong&gt;&lt;a href="https://mothereffinghsl.com/"&gt;hsl()&lt;/a&gt;&lt;/strong&gt; to add colors to our lines and play with the stroke width.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,100%,50%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;//start from&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//go to&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This part stops the function from running when they are not moused down.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In HSL, S stands for saturation and L for lightness so we use fixed values for them and update our H or hue.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//declared outside function&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c1"&gt;//inside draw function&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,100%,50%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Max value for hue is 360 so we reset it every time it reaches max value.&lt;/p&gt;

&lt;p&gt;The value for &lt;code&gt;[lastX, lastY] = [e.offsetX, e.offsetY];&lt;/code&gt; offset is coming for the event &lt;code&gt;e&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The last part is to update the stroke width. We start with a value of 75 and maintain a variable &lt;code&gt;isDirection&lt;/code&gt; which keeps track of the value, and accordingly we keep increasing value of stroke to a certain point and then revert back to initial width.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//declared outside function&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//inside function&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the end we could also experiment with &lt;code&gt;globalCompositeOperation()&lt;/code&gt; which gives effects like that of photoshop blend modes. Read more on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Additionally if we want the site to be functional on screen touch devices as well we do some tweaks to it. Read more &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events/Using_Pointer_Events"&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the complete &lt;strong&gt;script.js&lt;/strong&gt; code to avoid any confusion.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#draw&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#BADA55&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineJoin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineCap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// ctx.globalCompositeOperation = "multiply";&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;strokeStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,100%,50%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;beginPath&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;//start from&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moveTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//go to&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;lineWidth&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lineWidth&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mousedown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;lastX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;offsetY&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;canvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseout&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isDrawing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;and with this our project for the day was completed.&lt;/p&gt;

&lt;p&gt;GitHub repo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cenacrharsh"&gt;
        cenacrharsh
      &lt;/a&gt; / &lt;a href="https://github.com/cenacrharsh/JS-30-DAY-8"&gt;
        JS-30-DAY-8
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#blog-on-day7-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-7 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-7-dd9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-7&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 7 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#blog-on-day6-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-6 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-6-103k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-6&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 6 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#blog-on-day5-of-javascript30"&gt;
  &lt;/a&gt;
  Blog on Day-5 of javascript30
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/javascript-30-day-5-dl2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript-30-Day-5&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 5 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://twitter.com/cenacr007_harsh"&gt;Follow me on Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Follow me on Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DEV Profile&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__641726"&gt;
  
    .ltag__user__id__641726 .follow-action-button {
      background-color: #000000 !important;
      color: #000000 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/cenacr007_harsh" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOSLbihe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---UOoV_Rg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/db02e77a-1c1c-423b-8d31-85eca73347ae.jpg" alt="cenacr007_harsh image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;KUMAR HARSH&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cenacr007_harsh"&gt;B.Tech (CSE) | Competitive Programming Enthusiast | Front End Web Developer | Cloud Computing (GCP) | Blogger&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can also do the challenge at &lt;a href="https://javascript30.com/"&gt;javascript30&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks &lt;a class="mentioned-user" href="https://dev.to/wesbos"&gt;@wesbos&lt;/a&gt;
 , &lt;a href="https://github.com/wesbos"&gt;WesBos&lt;/a&gt; to share this with us! 😊💖&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please comment and let me know your views&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>github</category>
    </item>
    <item>
      <title>Modular Monoliths: Have we come full circle?</title>
      <author>Ruben Casas</author>
      <pubDate>Tue, 08 Jun 2021 17:57:59 +0000</pubDate>
      <link>https://dev.to/infoxicator/modular-monoliths-have-we-come-full-circle-o4f</link>
      <guid>https://dev.to/infoxicator/modular-monoliths-have-we-come-full-circle-o4f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-an-apology"&gt;
  &lt;/a&gt;
  First an Apology...
&lt;/h2&gt;

&lt;p&gt;This is a public apology to my friend Brandon &lt;a class="mentioned-user" href="https://dev.to/flybayer"&gt;@flybayer&lt;/a&gt;
. Back in 2020 when he published &lt;a href="https://blitzjs.com/"&gt;Blitz&lt;/a&gt;, I replied to one of his tweets with something along the lines of:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I don't understand why people want to go back to the monolith, especially on top of React, I thought we have gone past that and microservices + SPAs are the norm today". &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was wrong, very wrong...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-a-middle-ground"&gt;
  &lt;/a&gt;
  Is There a Middle Ground?
&lt;/h2&gt;

&lt;p&gt;I have been exploring a lot of the new cool stuff that is coming to the JavaScript ecosystem lately, and I have noticed an interesting trend: developers want the flexibility and scalability of modular systems but without the maintenance and complexity overhead that it brings.&lt;/p&gt;

&lt;p&gt;This is where backend tools like &lt;a href="https://github.com/module-federation/MicroLib"&gt;&lt;code&gt;MicroLib&lt;/code&gt;&lt;/a&gt; and Full Stack "meta-frameworks" like &lt;a href="https://blitzjs.com/"&gt;&lt;code&gt;Blitz&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://remix.run/"&gt;&lt;code&gt;Remix&lt;/code&gt;&lt;/a&gt; promise to bring back the "good old productivity win" of monolithic frameworks like Ruby on Rails but keeping the modularity and component first approach of the modern web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modular-monoliths"&gt;
  &lt;/a&gt;
  Modular Monoliths
&lt;/h2&gt;

&lt;p&gt;This concept is not new and probably not very popular these days; It is an architectural style where you build applications in a modular fashion by enforcing strict boundaries between different domains and improving code reusability which makes code organization and dependency management easier. The key to a Modular monolith is that you keep the parts (modules) that compose the system as a single deploying unit, aka "monolith".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0why-would-anybody-use-this"&gt;
  &lt;/a&gt;
   Why Would Anybody Use This?
&lt;/h2&gt;

&lt;p&gt;Being the middle ground between a traditional monolith and a full-blown microservices architecture, a modular monolith only brings limited benefits in terms of scalability, autonomous  teams, and independent delivery, however, it could be a better approach than starting with microservices from day one. This follows the advice of Martin Fowler in his article &lt;a href="https://martinfowler.com/bliki/MonolithFirst.html"&gt;"Monolith First"&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The modular monolith could be implemented as a way of identifying the boundaries of the system while keeping the agility and low maintenance overhead of a monolith in order to increase development speed and quicker time to market. &lt;/p&gt;

&lt;p&gt;This path could lead to an initial design of the system and serve as an intermediate state that can be sliced into individual microservices in the future, however, if the team already has the experience and are comfortable with microservices, there are clear system boundaries from day one and the infrastructure is already in place, then going straight to microservices should be considered instead. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-generation-modular-monoliths"&gt;
  &lt;/a&gt;
  New Generation Modular Monoliths
&lt;/h2&gt;

&lt;p&gt;How are the new full stack "meta-frameworks" like &lt;code&gt;blitz.js&lt;/code&gt; (built on top of &lt;a href="https://nextjs.org/"&gt;next.js&lt;/a&gt;) the new generation of modular monoliths? &lt;/p&gt;

&lt;p&gt;The way a framework like &lt;code&gt;Blitz&lt;/code&gt; works is by keeping the frontend separate in a Single Page Application fashion but connecting to the data layer without the use of REST/GraphQL APIs allowing for direct database access. It remains as a single deploying unit, however, it has clear boundaries that can be "peeled off" and moved to separate APIs like microservices or serverless functions in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hexagons-hexagons-everywhere"&gt;
  &lt;/a&gt;
  Hexagons, Hexagons Everywhere!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RusFjjyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cpljev4yrwoq4g5rxzb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RusFjjyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cpljev4yrwoq4g5rxzb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to keep your frontend and backends separate but you don't want to pay the &lt;a href="https://martinfowler.com/bliki/MicroservicePremium.html"&gt;"microservices premium"&lt;/a&gt;, another interesting pattern that has emerged is libraries like &lt;a href="https://github.com/module-federation/MicroLib"&gt;"MicroLib"&lt;/a&gt;, built on top of &lt;a href="https://webpack.js.org/concepts/module-federation/"&gt;Module Federation&lt;/a&gt; and based on "hexagonal architecture" to create a "polylith", a monolith comprised of multiple (what would otherwise be) microservices. &lt;/p&gt;

&lt;p&gt;The key difference with a traditional "modular monolith" is that a "polylith" can independently deploy the multiple modules that comprise the system. This could be the "best of both worlds" in terms of manageability, reusability, and autonomy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Senior Engineers learned the phrase "it depends" from Architects... so should you implement a modular monolith? Well, it depends on your requirements and where you are in the lifecycle of your application. Big companies like Shopify have successfully scaled their monoliths by &lt;a href="https://shopify.engineering/deconstructing-monolith-designing-software-maximizes-developer-productivity"&gt;implementing a modular monolith&lt;/a&gt; and prove that the answer is not always microservices. &lt;/p&gt;

</description>
      <category>architecture</category>
      <category>react</category>
      <category>javascript</category>
      <category>microservices</category>
    </item>
    <item>
      <title>Reverse An Array - 3 Methods</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Tue, 08 Jun 2021 17:54:47 +0000</pubDate>
      <link>https://dev.to/amritanshu/reverse-an-array-3-methods-2ekn</link>
      <guid>https://dev.to/amritanshu/reverse-an-array-3-methods-2ekn</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Method 1 - Revere with For Loop and print
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReverseArray&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Array with some element&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;// reverse loop and printing&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt; &lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Method 2 - Using Array List
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Method 2 Reverse an array using array list&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReverseArray&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Array List&lt;/span&gt;
        &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// reverse array and method&lt;/span&gt;
        &lt;span class="nc"&gt;Collections&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Method 3 - Two Pointers and Swap
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Method 3 Reverse with swap&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ReverseArray&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Array with some element&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// looping and swapping&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;--;&lt;/span&gt;
        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nl"&gt;i:&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>java</category>
      <category>javascript</category>
      <category>oop</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Pure CSS Tabs</title>
      <author>mrwolferinc</author>
      <pubDate>Tue, 08 Jun 2021 17:49:04 +0000</pubDate>
      <link>https://dev.to/mrwolferinc/pure-css-tabs-54ak</link>
      <guid>https://dev.to/mrwolferinc/pure-css-tabs-54ak</guid>
      <description>&lt;p&gt;An example of some tabs created using HTML and CSS. I tried to make it as modern and mobile-friendly as possible. I hope you enjoy it!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/mrwolferinc/embed/vYxayJe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 08 Jun 2021 17:43:47 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-27od</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-27od</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-4-most-important-hooks-you-need-to-know-in-react"&gt;
  &lt;/a&gt;
  The 4 most important hooks you need to know in React
&lt;/h2&gt;

&lt;p&gt;A simple and to-the-point post on the most important React hooks you need to know — as advertised, &lt;a class="mentioned-user" href="https://dev.to/ishakmohmed"&gt;@ishakmohmed&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ishakmohmed" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yijs0tUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Id4qtXvg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/583562/527d95b2-6692-4bae-871e-b47b97da3d05.jpeg" alt="ishakmohmed image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ishakmohmed/react-hooks-usecontext-useeffect-usestate-useref-summarized-like-crazy-short-concise-article-254k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Hooks (useContext, useEffect, useState, useRef) Summarized Like Crazy (Short &amp;amp; Concise Article).&lt;/h2&gt;
      &lt;h3&gt;Mohmed Ishak ・ Jun 2 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#reactnative&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#lights-camera-code"&gt;
  &lt;/a&gt;
  Lights, camera, code 🎬
&lt;/h2&gt;

&lt;p&gt;Kudos to &lt;a class="mentioned-user" href="https://dev.to/hieptl"&gt;@hieptl&lt;/a&gt;
 for sharing this incredibly thorough tutorial on... building Netflix to learn React?! 🤯 Impressive stuff.  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/hieptl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2oa9laIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--07EsPMQR--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641709/9edaa516-54bf-49b0-87ca-6ed62069dbd3.jpeg" alt="hieptl image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/hieptl/learn-react-by-building-netflix-1127" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React By Building Netflix&lt;/h2&gt;
      &lt;h3&gt;Hiep Le ・ Jun 1 ・ 35 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#coding-through-the-obstacles"&gt;
  &lt;/a&gt;
  Coding through the obstacles
&lt;/h2&gt;

&lt;p&gt;Thank you to &lt;a class="mentioned-user" href="https://dev.to/resourcefulmind"&gt;@resourcefulmind&lt;/a&gt;
 for providing this follow-up on your &lt;a href="https://dev.to/resourcefulmind/a-beginner-s-journey-into-software-development-in-nigeria-86b"&gt;last article&lt;/a&gt; about how internet access is a major barrier for coders in Nigeria. Really glad you are finding some solutions that work for you. freeCodeCamp is awesome!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/resourcefulmind" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WOJJiNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--QecMLNY1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/435270/7ca3876e-ca85-478e-a2fa-c634f4a78121.png" alt="resourcefulmind image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/resourcefulmind/learn-to-code-using-freecodecamp-especially-if-you-do-not-have-24-7-internet-access-101e" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn to code using FreeCodeCamp Especially If You Do Not Have 24/7 Internet Access&lt;/h2&gt;
      &lt;h3&gt;Opeyemi Stephen ・ Jun 3 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#vanilla-js-swirl"&gt;
  &lt;/a&gt;
  Vanilla JS Swirl 🍦
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/ivavay"&gt;@ivavay&lt;/a&gt;
 built a Chrome extension that gives you a random Chinese idiom every time you open a new tab. They break down the process to help you learn how to make your own extension with JS&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ivavay" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SM-pdfKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WA5OiIC6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/360901/e621e936-3c93-44d4-b80a-ecd202d44ed4.jpeg" alt="ivavay image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ivavay/how-to-make-a-chrome-extension-with-javascript-5157" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to make a chrome extension with javascript&lt;/h2&gt;
      &lt;h3&gt;Ivy Chen  ・ Jun 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-safer-and-more-secure-git"&gt;
  &lt;/a&gt;
  A safer and more secure Git
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/mishmanners"&gt;@mishmanners&lt;/a&gt;
 is here to save you from needing to authenticate Git so you don't have to type a password with every action. These ideas are SO helpful — and much more secure! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mishmanners" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OwuwYieg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5RYSMLa0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/397557/afcf6be6-f639-43ac-bdba-4a6056f7aada.jpeg" alt="mishmanners image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/github/how-to-never-type-passwords-when-using-git-18bb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to never type passwords when using Git&lt;/h2&gt;
      &lt;h3&gt;Michelle Mannering ・ Jun 3 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#soft-skills-hard-covers"&gt;
  &lt;/a&gt;
  Soft skills, hard covers
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/espoir"&gt;@espoir&lt;/a&gt;
 has rounded up a mini library of books that will help your expand upon your soft skills as a developer. Do you have any titles to share? &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/espoir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLN3YV7v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X1BSSQV1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/9206/8159a728-621b-4f37-9ba3-b9bff6bdb6b4.jpg" alt="espoir image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/espoir/my-books-recommendations-to-enhance-your-soft-skills-as-a-developer-4k3o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My books recommendations to enhance your Soft Skills as a developer&lt;/h2&gt;
      &lt;h3&gt;Espoir Murhabazi ・ Jun 5 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#books&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#demystifying-the-mystical"&gt;
  &lt;/a&gt;
  De-mystifying the mystical ✨
&lt;/h2&gt;

&lt;p&gt;Thanks to &lt;a class="mentioned-user" href="https://dev.to/endingwithali"&gt;@endingwithali&lt;/a&gt;
 for this terrific look under the hood of web servers. &lt;/p&gt;

&lt;p&gt;Want to read more of Ali's work? Head over to &lt;a href="https://www.therelicans.com/endingwithali"&gt;TheRelicans.com&lt;/a&gt;! It's a community created by New Relic for all levels of software developers — and it's built on Forem 🌱 &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/endingwithali" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pZSSf5bz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Ugt2OHpg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/73460/bf407318-efb6-4642-a10e-9fdcb07d119c.jpg" alt="endingwithali image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/endingwithali/how-do-web-servers-work-54ci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How do web servers work?&lt;/h2&gt;
      &lt;h3&gt;Ali ・ Jun 2 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#backend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#servers&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#development&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
  </channel>
</rss>
