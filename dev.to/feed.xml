<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>8 JavaScript Animation Libraries You should "MUST TRY" </title>
      <author>Subhampreet Mohanty üë®‚Äçüíª</author>
      <pubDate>Tue, 09 Feb 2021 05:42:47 +0000</pubDate>
      <link>https://dev.to/subhampreet/8-javascript-animation-libraries-you-should-must-try-2ac</link>
      <guid>https://dev.to/subhampreet/8-javascript-animation-libraries-you-should-must-try-2ac</guid>
      <description>&lt;p&gt;If you're looking to grab your website visitor's attention, what can be better than animations.&lt;/p&gt;

&lt;p&gt;You know, the first moments to hold the user's feet are very important. A boring, poor website can make users jump out of it right away.&lt;/p&gt;

&lt;p&gt;Let's see some awesome JavaScript Animation Libraries that can help you to create amazing web animations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  ‚ö° Introduction
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1lvpA7HG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o6e65lnllt5r250k7f07.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1lvpA7HG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o6e65lnllt5r250k7f07.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animating with JavaScript libraries is more efficient and advanced compared to SVG and CSS. In today‚Äôs world, JavaScript is an essential language because of the magic it does while animating. &lt;/p&gt;

&lt;p&gt;Animations using JavaScript is a complex task to perform. It needs an extensive amount of knowledge and skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  üçÄ Prerequisites
&lt;/h3&gt;

&lt;p&gt;JavaScript Animation Libraries is an exciting and interactive topic. Therefore, I recommend the reader to have a basic understanding of HTML, CSS, and JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-animations" class="anchor"&gt;
  &lt;/a&gt;
  üåü JavaScript Animations
&lt;/h3&gt;

&lt;p&gt;Animations on web applications are appealing and grab the user‚Äôs attention. JavaScript can animate what CSS can‚Äôt. JavaScript is the preferred tool of use because it handles more complex and advanced effects.&lt;/p&gt;

&lt;p&gt;There are several JavaScript animation libraries. Here is a list of the best JavaScript animation libraries you can use in your project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#01-animejs" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;01. ANIME.JS&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UUOU0Si2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xbm3q1fxwylmqr9aplxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UUOU0Si2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xbm3q1fxwylmqr9aplxt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are many JavaScript animation libraries out there, but &lt;b&gt;&lt;a href="https://animejs.com/"&gt;Anime.js&lt;/a&gt;&lt;/b&gt; is one of the best. It‚Äôs easy to use, has a small and simple API, and offers everything you could want from a modern animation engine. The library has a small file size and supports all modern browsers, including IE/Edge 11+.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#02-gsap" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;02. GSAP&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://greensock.com/"&gt;GSAP&lt;/a&gt;&lt;/b&gt; is a robust JavaScript toolset that turns developers into animation superheroes. Build high-performance animations that work in every major browser. Animate CSS, SVG, canvas, React, Vue, WebGL, colors, strings, motion paths, generic objects...anything JavaScript can touch! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qg3eIZfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rudrs9pjcb3cnpf2dg21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qg3eIZfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rudrs9pjcb3cnpf2dg21.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;GSAP's&lt;/b&gt; ScrollTrigger plugin lets you create jaw-dropping scroll-based animations with minimal code. No other library delivers such advanced sequencing, reliability, and tight control while solving real-world problems on millions of sites. GSAP works around countless browser inconsistencies; your animations just work. At its core, &lt;b&gt;GSAP&lt;/b&gt; is a high-speed property manipulator, updating values over time with extreme accuracy. It's up to 20x faster than jQuery! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#03-mojs" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;03. MO.JS&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://mojs.github.io/"&gt;mo.js&lt;/a&gt;&lt;/b&gt; is a javascript motion graphics library that is a fast, retina-ready, modular, and open source. In comparison to other libraries, it has a different syntax and code animation structure approach. The declarative API provides you complete control over the animation, making it customizable with ease.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WkXOtiGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bqzazuz483l17zej1bas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WkXOtiGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bqzazuz483l17zej1bas.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The library provides built-in components to start animating from scratch like HTML, shape, swirl, burst, and stagger but also brings you tools to help craft your animation in a most natural way. Using &lt;b&gt;mo.js&lt;/b&gt; on your site will enhance the user experience, enrich your content visually and create delightful animations precisely.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#04-popmotion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;04. POPMOTION&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDNqmVN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0dlr82v0ar5t5rpkeh8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDNqmVN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0dlr82v0ar5t5rpkeh8f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://popmotion.io/"&gt;Popmotion&lt;/a&gt;&lt;/b&gt; gives the power of JavaScript merged with the simplicity of CSS to make declarative animations easily on your HTML, SVG, and React projects. Its API implement semantics to make easier work with different JavaScript flavors and propose a library of custom animation to enhance your workflow pace.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#05-threejs" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;05. THREE.JS&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-2Myc2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.queppelin.com/wp-content/uploads/2020/08/threejs-4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-2Myc2x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.queppelin.com/wp-content/uploads/2020/08/threejs-4.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://threejs.org/"&gt;Three.js&lt;/a&gt;&lt;/b&gt; is a lightweight and user-friendly JavaScript 3D animation library. It makes it easy to come up with 3D content on a web page. &lt;b&gt;Three.js&lt;/b&gt; uses WebGL (Web Graphics Library) to draw 3D animations.&lt;/p&gt;

&lt;p&gt;WebGL is a JavaScript API for rendering interactive 3D graphics. It creates a scene with a camera and a geometric cube. A WebGL renderer is created for the scene and the camera.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#06-kutejs" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;06. KUTE.JS&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rXn9QDxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wyusc3peivrl1qig0i31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rXn9QDxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wyusc3peivrl1qig0i31.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A modern JavaScript animation engine built on ES6+ standards with the most essential features for the web, delivering easy to use methods to set up high performance, cross-browser animations. The focus is code quality, flexibility, performance, and size.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://thednp.github.io/kute.js/"&gt;KUTE.js&lt;/a&gt;&lt;/b&gt; packs a series of components for presentation attributes, SVG transform, draw SVG strokes, and path morphing, text string write up or number countdowns, plus additional CSS properties like colors, border-radius, or typographic properties.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#07-scroll-reveal" class="anchor"&gt;
  &lt;/a&gt;
  &lt;blockquote&gt;07. SCROLL REVEAL&lt;/blockquote&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvtjkXke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gaphs5yb7zcfdxm2lizp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvtjkXke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gaphs5yb7zcfdxm2lizp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://scrollrevealjs.org/"&gt;ScrollReveal&lt;/a&gt;&lt;/b&gt; is a JavaScript library for easily animating elements as they enter/leave the viewport. It was designed to be robust and flexible, but hopefully, you‚Äôll be surprised below at how easy it is to pick up.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#08-howlerjs" class="anchor"&gt;
  &lt;/a&gt;
  08. HOWLER.JS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3nY3AqXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g22gmyb2ps6gvb9iab0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3nY3AqXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g22gmyb2ps6gvb9iab0l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;a href="https://howlerjs.com/"&gt;Howler.js&lt;/a&gt;&lt;/b&gt; is an open-source JavaScript audio library. It‚Äôs used in game development and audio-related web apps. &lt;b&gt;Howler.js&lt;/b&gt; makes coding easy while working with audio in JavaScript on web platforms.&lt;/p&gt;

&lt;p&gt;It lays out a modern audio library supporting the Web Audio API and a fallback technique for HTML5 Audio.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Howler.js&lt;/b&gt; supports all browser-ready files from MP3, MP4, DOLBY, MPEG, WEBA, OGG to WAV. The library controls audio patterns by playing, pausing, looping, and seek to rate. Loaded audios are cached automatically, resulting in a more excellent performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion üëã
&lt;/h3&gt;

&lt;p&gt;There are many JavaScript animation libraries that can be implemented on your projects. Those listed above are a few with the best combination of complexity, ease, and stability. Each animation library differs from others and each fit different situations.&lt;/p&gt;

&lt;p&gt;Let‚Äôs suppose you are looking for a powerful animation. The best JavaScript library options to go for is &lt;b&gt;Anime.js, Velocity.js, GreenSock.js, and Popmotion.js.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for an audio library, the best option is &lt;b&gt;Howler.js&lt;/b&gt;. If you want 3D animations, the best JavaScript animation to use is &lt;b&gt;Three.js.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for a JavaScript animation library great for creating typing animations used on webpages, then &lt;b&gt;Type.js&lt;/b&gt; is the best option.&lt;/p&gt;

&lt;p&gt;Although using a JavaScript animation library makes your web application stand out. Overdoing it beats the purpose and often confuses the user. Be careful and sensibly use animations.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>We Refactored 10K Lines of Code in Our Open-Source React¬†Project</title>
      <author>sidney alcantara</author>
      <pubDate>Tue, 09 Feb 2021 02:15:46 +0000</pubDate>
      <link>https://dev.to/notsidney/we-refactored-10k-lines-of-code-in-our-open-source-react-project-1a9a</link>
      <guid>https://dev.to/notsidney/we-refactored-10k-lines-of-code-in-our-open-source-react-project-1a9a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#know-the-how-the-when-and-the-why-behind-our-refactoring" class="anchor"&gt;
  &lt;/a&gt;
  Know the how, the when, and the why behind our refactoring
&lt;/h3&gt;

&lt;p&gt;When working on any project, especially in the MVP stage, we as developers often prioritise one thing above all else when writing code: making sure it &lt;em&gt;works&lt;/em&gt;. Unfortunately, this can mean we write code hyperfocused on the MVP‚Äôs requirements, so we end up with code that is hard to maintain or cumbersome to expand. Of course, this isn‚Äôt a problem one can easily avoid since we don‚Äôt live in an ideal world. The forces of time are always against us ‚Äî sometimes we just need to push something out.&lt;/p&gt;

&lt;p&gt;I‚Äôm a software engineer building &lt;a href="https://firetable.io/?utm_source=Medium&amp;amp;utm_medium=blog&amp;amp;utm_content=MediumArticle&amp;amp;utm_campaign=We%20Refactored%2010%2C000%2B%20Lines%20of%20Code%20in%20Our%20Open-Source%20React%C2%A0Project"&gt;Firetable&lt;/a&gt;, an open-source React app that combines a spreadsheet UI with Firestore and Firebase‚Äôs full power. We ran into this exact issue with some fundamental code: the code for all the different &lt;a href="https://github.com/AntlerVC/firetable/wiki/Field-Types"&gt;field types&lt;/a&gt;, from the simple &lt;code&gt;ShortText&lt;/code&gt; to the complex &lt;code&gt;ConnectTable&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;After refactoring, we now have a more solid foundation to build more features, we squashed a few hard-to-find bugs, and we now even a &lt;a href="https://github.com/AntlerVC/firetable/wiki/Extending-Firetable:-Adding-a-Field-Type"&gt;guide on how our contributors can write new field types&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#when-code-smells-and-tech-debt-became-big-problems" class="anchor"&gt;
  &lt;/a&gt;
  When code smells and tech debt became big problems
&lt;/h1&gt;

&lt;p&gt;When we first started building Firetable, the idea was to build a spreadsheet interface, and naturally, the resulting product closely matched that. Looking at old screenshots, it‚Äôs remarkable how closely it resembles spreadsheet programs like Excel and Google Sheets:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdvOkHn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kgkgz3y4szlo1q1r6psq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdvOkHn0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kgkgz3y4szlo1q1r6psq.jpg" alt="An old screenshot of Firetable with a UI very similar to a spreadsheet program"&gt;&lt;/a&gt;&lt;/p&gt;

A screenshot of an old Firetable build from February 2020




&lt;p&gt;We used &lt;a href="https://adazzle.github.io/react-data-grid/"&gt;React Data Grid&lt;/a&gt; to implement this. It accepts ‚Äúformatter‚Äù components used to render cells and ‚Äúeditor‚Äù components used to edit cells when a user double-clicks the cell. We structured our code around this, with &lt;code&gt;formatters&lt;/code&gt; and &lt;code&gt;editors&lt;/code&gt; becoming folders alongside the code for &lt;code&gt;Table&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A few months later, we added the &lt;code&gt;SideDrawer&lt;/code&gt;, a form-like UI that slides over the main table. It was designed to make it easier to edit all the fields of a single row at a time, which we found was an everyday workflow for our users. At the time, it seemed like the most logical way to structure this new code was similar to how we structured the &lt;code&gt;Table&lt;/code&gt;, so we created a &lt;code&gt;Fields&lt;/code&gt; folder in the &lt;code&gt;SideDrawer&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mhrrxCLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/54pxk5s8j04ficgwnz4l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mhrrxCLY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/54pxk5s8j04ficgwnz4l.gif" alt="Screen recording of a user selecting a cell and opening the side drawer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But as we maintained this code, cracks began to show.&lt;/p&gt;

&lt;p&gt;One of our distinctive field types is &lt;code&gt;Action&lt;/code&gt;, which displays a button on the table that lets the user run code based on the row‚Äôs data using Firebase Cloud Functions and show the results in the very same cell. We‚Äôve used it for novel applications such as setting our database‚Äôs access controls from right within Firetable using &lt;a href="https://firebase.google.com/docs/auth/admin/custom-claims"&gt;Firebase Auth custom roles&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We had a bug where the Cloud Function wasn‚Äôt receiving the right parameters when called by &lt;code&gt;Action&lt;/code&gt; cells. But to update the code, we had to do it in &lt;em&gt;two separate locations&lt;/em&gt; ‚Äî the &lt;code&gt;Table&lt;/code&gt; formatter and the &lt;code&gt;SideDrawer&lt;/code&gt; field. Not only that, it turns out we had &lt;em&gt;duplicated&lt;/em&gt; the code calling the Cloud Function due to time constraints. There was simply no clear location for that shared code, and the bug was too high-priority for us to have time to answer that question correctly.&lt;/p&gt;

&lt;p&gt;The final straw was when we noticed we had inconsistently implemented the column lock feature. Some fields remained editable in the &lt;code&gt;SideDrawer&lt;/code&gt; but not the &lt;code&gt;Table&lt;/code&gt; or vice versa, or we didn‚Äôt implement it at all for that field. This was a result of adding this feature &lt;em&gt;after&lt;/em&gt; we had implemented the minimum requirements for each field type, so we had to go through each &lt;code&gt;Table&lt;/code&gt; formatter and each &lt;code&gt;SideDrawer&lt;/code&gt; field ‚Äî double the number of field types we had. This tedious manual process was clearly prone to errors.&lt;/p&gt;

&lt;p&gt;At this point, we knew it was time to refactor.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#refactoring-for-success" class="anchor"&gt;
  &lt;/a&gt;
  Refactoring for success
&lt;/h1&gt;

&lt;p&gt;We identified the main problem: we &lt;strong&gt;didn‚Äôt have a single place to store code&lt;/strong&gt; for each field type. It was scattered throughout the codebase: &lt;code&gt;Table&lt;/code&gt; formatters and editors, &lt;code&gt;SideDrawer&lt;/code&gt; fields, column settings, and more. This scattering rapidly inflated the cost for adding new features for field types and weeding out bugs.&lt;/p&gt;

&lt;p&gt;The first thing we did was invert our approach to code structure entirely ‚Äî instead of grouping code by each feature that would &lt;em&gt;use&lt;/em&gt; the field types, we grouped the code by the field types themselves.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i8oh7Vfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gpdidsjuxj66n9w7rzy5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i8oh7Vfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gpdidsjuxj66n9w7rzy5.png" alt="Diagram visualising the previous paragraph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new approach translates to a new top-level component folder called &lt;code&gt;fields&lt;/code&gt;, comprising subfolders for each field type, and within each, we have files such as &lt;code&gt;TableCell.tsx&lt;/code&gt; and &lt;code&gt;SideDrawerField.tsx&lt;/code&gt;. Then we could export these features in a config object, so all this code would only need to be imported once by the consumer. This is similar to a problem solved by React Hooks: &lt;a href="https://reactjs.org/docs/hooks-intro.html#complex-components-become-hard-to-understand"&gt;grouping related code&lt;/a&gt; and not having to think about lifecycle methods.&lt;/p&gt;

&lt;p&gt;This approach also simplifies how we import a field‚Äôs code throughout the codebase. Previously in the &lt;code&gt;Table&lt;/code&gt; and &lt;code&gt;SideDrawer&lt;/code&gt;, we would rely on &lt;code&gt;switch&lt;/code&gt; statements that looped through each field type until we could fetch the correct component &lt;em&gt;and&lt;/em&gt; import each field one by one. So whenever we added a new field type, we would also have to add a new entry to these &lt;code&gt;switch&lt;/code&gt; blocks ‚Äî again ballooning the cost of development. Instead, we could create a single array with every field config, then share it across the codebase. So we only need to define a new field type &lt;em&gt;once.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Additionally, the config object lets us quickly implement new features and ensure &lt;em&gt;all&lt;/em&gt; fields do so correctly. Now we could simply check if a field‚Äôs config has a property. And since we‚Äôre using TypeScript, each config object must implement &lt;a href="https://github.com/AntlerVC/firetable/blob/master/www/src/components/fields/types.ts#L9"&gt;our interface&lt;/a&gt;, which can enforce certain features (properties of the interface) to be of a particular type, such as a React component accepting specific props. This new functionality allowed us to fix column locking implementation and made it much easier to develop a new feature, default values for columns. All we had to do was add a new property to the interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--At3VmXK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2n9v8omxdsf9om9rb6ke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--At3VmXK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2n9v8omxdsf9om9rb6ke.png" alt="Example of the significant amount of code we were able to reduce with the new code structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this in mind, our refactor not only made our code easier to maintain and fix bugs ‚Äî but it also provided a much more solid foundation on which we can build advanced features for fields and removing extra costs to development.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lessons-for-the-future" class="anchor"&gt;
  &lt;/a&gt;
  Lessons for the future
&lt;/h1&gt;

&lt;p&gt;Of course, we could have avoided all this pain and extra work had we initially gone with this approach. But we don‚Äôt live in an ideal world. All of the non-ideal solutions I mentioned above were the result of time constraints on our end, especially when we were working on other projects simultaneously, which directly impacted day-to-day work.&lt;/p&gt;

&lt;p&gt;Many of us work for a business that doesn‚Äôt have excellent code quality as its primary goal. I work for a global early-stage venture capital firm, &lt;a href="https://www.antler.co/apply?utm_source=Firetable&amp;amp;utm_medium=blog&amp;amp;utm_content=TechTracking&amp;amp;utm_campaign=We%20Refactored%2010%2C000%2B%20Lines%20of%20Code%20in%20Our%20Open-Source%20React%C2%A0Project"&gt;Antler&lt;/a&gt;, and I would be very shocked if this were the case for us. As developers, we are hired to build tech solutions that meet business requirements, and the ‚Äúhow‚Äù is abstracted away. In this case, however, our poorly-structured code and the amount of accrued tech debt were directly impacting our ability to work.&lt;/p&gt;

&lt;p&gt;And whilst writing this article, I came across &lt;a href="https://refactoring.guru/"&gt;Refactoring.Guru&lt;/a&gt;, an excellent guide on refactoring. We clearly satisfied their first recommendation on when to refactor: ‚ÄúWhen you‚Äôre doing something for the third time, start refactoring.‚Äù&lt;/p&gt;

&lt;p&gt;This experience has taught us many valuable lessons on code structure and when a refactor is necessary. I hope you‚Äôve gained some insights by reading about our journey.&lt;/p&gt;




&lt;p&gt;Thanks for reading! You can find out more about Firetable below and follow me on Twitter &lt;a href="https://twitter.com/nots_dney"&gt;@nots_dney&lt;/a&gt; as I write more about what we‚Äôre building at &lt;a href="https://twitter.com/AntlerEng"&gt;Antler Engineering&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AntlerVC"&gt;
        AntlerVC
      &lt;/a&gt; / &lt;a href="https://github.com/AntlerVC/firetable"&gt;
        firetable
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Excel/Google Sheets like UI for Firebase/Firestore. No more admin portals!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://firetable.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ba2e2d5751fc15017562a66fda8872ce5c5334a6a12108a186322bcaca7f26d/68747470733a2f2f666972657461626c652e696f2f736f6369616c2d696d6167652e6a7067" alt="Firetable: Combine the power of Firestore with the simplicity of spreadsheets"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/AntlerVC/firetable/blob/master/LICENSE"&gt;
    &lt;img src="https://camo.githubusercontent.com/98ad9d23634f00cc8e27dde1767e9e6fcfa7dc172b560ed07b92b64ed8076d3b/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6963656e73652f416e746c657256432f666972657461626c65"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/AntlerVC/firetable/commits/develop"&gt;
    &lt;img src="https://camo.githubusercontent.com/3d859a48d7767b17a25a369be5a3995c5aca22283bdd47d059ac19fce3c7ba87/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6173742d636f6d6d69742f416e746c657256432f666972657461626c652f646576656c6f70"&gt;
  &lt;/a&gt;
  &lt;a href="https://npmjs.com/package/firetable" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c31f50b9bd3a221e3f491e14aef2f26fc84d66212ff7ec8d2c4c1965e8a0c990/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f666972657461626c65"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h1&gt;
Features&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spreadsheet interface for viewing Firestore collections, documents, and
subcollections.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add, edit, and delete rows&lt;/li&gt;
&lt;li&gt;Sort and filter by row values&lt;/li&gt;
&lt;li&gt;Resize and rename columns&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;27 different column types
&lt;a href="https://github.com/AntlerVC/firetable/wiki/Field-Types"&gt;Read more&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic types: Short Text, Long Text, Email, Phone, URL‚Ä¶&lt;/li&gt;
&lt;li&gt;Custom UI pickers: Date, Checkbox, Single Select, Multi Select‚Ä¶&lt;/li&gt;
&lt;li&gt;Uploaders: Image, File&lt;/li&gt;
&lt;li&gt;Rich Editors: JSON, Code, Rich Text (HTML)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Powerful access controls with custom user roles
&lt;a href="https://github.com/AntlerVC/firetable/wiki/Role-Based-Security-Rules"&gt;Read more&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supercharge your database with your own scripts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action field: trigger any Cloud Function&lt;/li&gt;
&lt;li&gt;Derivative field: populate cell with value derived from the rest of the
row‚Äôs values&lt;/li&gt;
&lt;li&gt;Aggregate field: populate cell with value aggregated from the row‚Äôs
sub-table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrations with external services.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connect Table uses Algolia to get a snapshot of another table‚Äôs row values&lt;/li&gt;
&lt;li&gt;Connect Service uses any HTTP endpoint to get a cell value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Firetable makes it easy to use key Firebase products&lt;/h2&gt;
&lt;p&gt;
  &lt;a href="https://firebase.google.com/products/firestore" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---XgOfNKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/AntlerVC/firetable/wiki/images/firebase/firestore.png" alt="Cloud Firestore" width="32%"&gt;
  &lt;/a&gt;
  &lt;a href="https://firebase.google.com/products/auth" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veDYy3_J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/AntlerVC/firetable/wiki/images/firebase/authentication.png" alt="Firebase Authentication" width="32%"&gt;
  &lt;/a&gt;
  &lt;a href="https://firebase.google.com/products/functions" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iExBUmqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/AntlerVC/firetable/wiki/images/firebase/functions.png" alt="Firebase Functions" width="32%"&gt;
  &lt;/a&gt;
  &lt;a href="https://firebase.google.com/products/hosting" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rtxvYDpy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/AntlerVC/firetable/wiki/images/firebase/hosting.png" alt="Firebase Hosting" width="32%"&gt;
  &lt;/a&gt;
  &lt;a href="https://firebase.google.com/products/storage" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSDkAR31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/AntlerVC/firetable/wiki/images/firebase/storage.png" alt="Firebase Storage" width="32%"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
&lt;a href="https://try.firetable.io" rel="nofollow"&gt;Live demo ‚Üí&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://try.firetable.io" rel="nofollow"&gt;&lt;br&gt;
  &lt;img alt="Firetable demo GIF" src="https://camo.githubusercontent.com/e2166800f38ce536894d11cea8e45dadb3c90dea80e5ca592810b032d955f45f/68747470733a2f2f666972657461626c652e696f2f64656d6f2e676966"&gt;&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;
Getting started&lt;/h1&gt;

&lt;p&gt;To set‚Ä¶&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AntlerVC/firetable"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How to Become a Web Developer in 2021</title>
      <author>Nathan Vaughn</author>
      <pubDate>Tue, 09 Feb 2021 00:08:05 +0000</pubDate>
      <link>https://dev.to/inspirnathan/how-to-become-a-web-developer-in-2021-1cpm</link>
      <guid>https://dev.to/inspirnathan/how-to-become-a-web-developer-in-2021-1cpm</guid>
      <description>&lt;p&gt;Greetings, future web developers! Welcome to the beginning of an amazing journey! Web development in 2021 is fun, amazing, rewarding, and makes you feel like a god on the Internet. Web developers get paid really well and are needed across the entire world üåé.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.glassdoor.com/Salaries/junior-developer-salary-SRCH_KO0,16.htm"&gt;glassdoor&lt;/a&gt;, the average junior developer salary is $70,439 as of the time of this writing, and you don't even need a college degree! üò≤&lt;/p&gt;

&lt;p&gt;In my opinion, web development is the most efficient way to escape poverty and get your life back together. It's freedom. It's empowering, makes you think critically, and the community of web developers is vast.&lt;/p&gt;

&lt;p&gt;Eventually, you can take all the lessons you've learned in your own career and create your own business. Another advantage of web development is the ability to work remotely, which is very beneficial in times of a pandemic. Did I mention that web development is really fun? üôÇ&lt;/p&gt;

&lt;p&gt;If you want to learn how to code right away, then skip down to the section called "Web Development Resources" where you'll find plenty of websites and videos to help get you started in web development. However, I recommend you read everything I have typed below. You might not understand everything quite yet, but that's okay!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-web-developers-do" class="anchor"&gt;
  &lt;/a&gt;
  What Web Developers Do
&lt;/h2&gt;

&lt;p&gt;What do web developers do? They create websites that you visit on the Internet. Websites can do all kinds of things: create social media platforms to share photos üñºÔ∏è, create and play music üéπ, provide a canvas to draw on üé®, create a platform to watch videos üé¨, provide a marketplace to sell goods üçé, and more. The possibilities are endless!&lt;/p&gt;

&lt;p&gt;There are tons of different tools you can use to design and develop websites. You may have seen tools for building websites such as &lt;a href="https://www.wix.com/"&gt;Wix&lt;/a&gt; or &lt;a href="https://wordpress.com/"&gt;WordPress&lt;/a&gt;. These websites provide "What You See Is What You Get" (WYSIWYG) tools. WYSIWYG is pronounced like "whiz-ee-wig".&lt;/p&gt;

&lt;p&gt;While WYSIWYG tools do exist, you'll have more power and flexibility as a web developer if you learn three languages: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML"&gt;Hypertext Markup Language (HTML)&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS"&gt;Cascading Style Sheets (CSS)&lt;/a&gt;, and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript (JS)&lt;/a&gt;. These three languages are used in practically every website you will see on the Internet. HTML is used to create content on your website. CSS is used to style everything such as changing colors. JavaScript is used to add programmable functionality to your website and make your content more dynamic.&lt;/p&gt;

&lt;p&gt;There are many popular frameworks/libraries such as &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;, &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;, and &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; that build on top of JavaScript to help developers create performant applications and improve the developer experience.&lt;/p&gt;

&lt;p&gt;Your journey begins by learning HTML, CSS, and JS, but it doesn't end there. Learning web development is an infinite journey all of us web developers partake. JavaScript constantly evolves. You'll always encounter people, young and old, who can teach you new tricks. You'll find yourself reading documentation on lots of different tools. New tools come out every year that can cause paradigm shifts in how we program. Being a web developer means going on a lifelong journey that has no end, and that's okay because we are all on this perpetual path.&lt;/p&gt;

&lt;p&gt;You'll find yourself using Google and &lt;a href="https://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt; a lot regardless of experience level. It's okay to search for something you don't know or can't remember. Even experienced developers do it all the time!&lt;/p&gt;

&lt;p&gt;Being a good web developer means adapting to the never-ending changing technologies out there. It means putting arrogance aside and realizing there's always something more to learn, perhaps having an insatiable appetite for knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#computer-basics" class="anchor"&gt;
  &lt;/a&gt;
  Computer Basics
&lt;/h2&gt;

&lt;p&gt;Let's start with the very basics. You're viewing this website in a browser. As of today, there are multiple browsers: Internet Explorer, Microsoft Edge, Mozilla Firefox, Google Chrome, Apple Safari, Opera, Brave, and more. The most common browsers you will develop for are Microsoft Edge, Google Chrome, and Apple Safari.&lt;/p&gt;

&lt;p&gt;Are you viewing this website on a mobile device such as an iPhone, iPad, or one of the many types of Android phones? Or, are you viewing this on a "desktop" computer such as a MacBook, iMac, or PC? You'll commonly hear the terms "desktop" versus "mobile" a lot when you're creating websites.&lt;/p&gt;

&lt;p&gt;Your browser is running on a certain type of operating system. The three most common operating systems are Windows, MacOS, and Linux, but other types of operating systems exist. Mobile devices have their own operating systems. On iPhones, the operating system is called iOS. On phones such as the Google Pixel, the operating system is called Android.&lt;/p&gt;

&lt;p&gt;How does the Internet work? Computers connected to the web are called &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works"&gt;clients and servers&lt;/a&gt;. A browser is a type of client that sends &lt;em&gt;requests&lt;/em&gt; to a server. The server then &lt;em&gt;responds&lt;/em&gt; to the request from the browser. What is a server? It's a program running on a computer somewhere in the world.&lt;/p&gt;

&lt;p&gt;A server is nothing scary. For example, here's a small program that runs a server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeHead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Node server listening on port 3000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;How many lines of code are there? Looks like 7 if you exclude the empty lines. That's all it takes to run a server! This server simply responds with "Hello World". Nothing fancy. Servers can respond with all types of things. They can respond with HTML files, CSS files, JavaScript files, images, and more.&lt;/p&gt;

&lt;p&gt;What do I mean by HTML file? It's a file on your computer that ends with the extension, &lt;code&gt;.html&lt;/code&gt;. If you've ever saved an image to your computer, then you probably have seen them saved as &lt;code&gt;something.jpeg&lt;/code&gt; or &lt;code&gt;something.png&lt;/code&gt;. The &lt;code&gt;.jpeg&lt;/code&gt; and &lt;code&gt;.png&lt;/code&gt; extensions tell you what kind of file they are. Therefore, a CSS file would end in &lt;code&gt;.css&lt;/code&gt; and a JavaScript file would end in &lt;code&gt;.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-programming-interface-api" class="anchor"&gt;
  &lt;/a&gt;
  Application Programming Interface (API)
&lt;/h2&gt;

&lt;p&gt;You'll commonly hear the term, API, in your web development career. What is an API? If you go on &lt;a href="https://en.wikipedia.org/wiki/API"&gt;Wikipedia&lt;/a&gt;, it'll say that an API is "a computing interface that defines interactions between multiple software intermediaries." Seems kinda vague, huh? I like to think of an API as a tool created by developers that other developers can use.&lt;/p&gt;

&lt;p&gt;For example, software developers have created a &lt;a href="https://swapi.dev/"&gt;Star Wars API&lt;/a&gt; and &lt;a href="https://pokeapi.co/"&gt;Pok√©mon API&lt;/a&gt;. The Star Wars API lets you grab data about characters, planets, species, vehicles, and more from the Star Wars universe. The Pok√©mon API lets you grab data about Pok√©mon, including movesets, types, abilities, and more.&lt;/p&gt;

&lt;p&gt;Developers can create APIs using lots of different programming languages: Node.js (server-side JavaScript), Ruby, Java, C#, C++, Rust, Elixir, Python, and more! These languages run on the server, and the browser (the client) can make requests to the APIs to grab the data it needs.&lt;/p&gt;

&lt;p&gt;You might hear the term, API, used for features of a library or framework. A library is bit of code that developers create, so they can be reused across applications. Open source libraries are pieces of code shared publicly so everyone can see how they were built. Frameworks are an abstraction layer around code and/or patterns that helps developers build applications.&lt;/p&gt;

&lt;p&gt;I like to think of a library as a tool or set of tools, and a framework as an architecture or strategy that helps you leverage tools a certain way. For example, &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; is considered a library while &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt; and &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; are considered frameworks. Angular and Vue provide helpful utilities to help you build an application beyond providing libraries of code. Once you start leveraging more tools and libraries such as &lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt; and &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt;, you'll start realizing that you're building your own toolchains to the point where the terms "libraries" and "frameworks" start converging.&lt;/p&gt;

&lt;p&gt;If I were to build my own library or framework, I would design it in such a way that other developers have a good experience with it. Suppose I'm building a library for &lt;a href="https://en.wikipedia.org/wiki/Complex_number"&gt;complex numbers&lt;/a&gt;. I would want to make sure the API I provide to other developers is intuitive and easy to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ComplexNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; + &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;i`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComplexNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// returns 1 + 3i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This seems easy to use, but what problems will it create in the future? Talking to other developers and getting insight on what problems this code creates is one way of improving your API. That is, it's one way to make sure you're building a tool that is easy to use. &lt;/p&gt;

&lt;p&gt;It's important as a web developer to have good documentation skills as well. I would want to make sure my API is documented well, so others understand how to use it. Notice that in this context, an API isn't providing data. It's providing a way to use my library. An API is a tool for other developers to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrated-development-environment-ide" class="anchor"&gt;
  &lt;/a&gt;
  Integrated Development Environment (IDE)
&lt;/h2&gt;

&lt;p&gt;Before you start coding, it's a good idea to download an an Integrated Development Environment (IDE). The most popular choice is currently &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;. This program has a robust list of extensions that help making coding easier. VS Code lets you customize a lot of features and includes support for &lt;a href="https://code.visualstudio.com/docs/editor/emmet"&gt;Emmet snippets&lt;/a&gt; that assists you in writing HTML and CSS.&lt;/p&gt;

&lt;p&gt;I still remember writing one of my first programs using Notepad on Windows. &lt;br&gt;
üòÇ&lt;/p&gt;

&lt;p&gt;If you want to practice coding online, you can use online IDEs such as &lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt; and &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt;. On CodePen, you'll find lots of creative applications created by developers across the world that will hopefully inspire your own creative side.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#version-control" class="anchor"&gt;
  &lt;/a&gt;
  Version Control
&lt;/h2&gt;

&lt;p&gt;Most software developers these days use &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;, a version control system. It helps you save the state of your code in remote servers and collaborate with team members more efficiently. Have you ever been working on a paper in school and keep changing the title of it to be something like "Finished_Paper_v1", "Finished_Paper_v2", and so on...? It's better to use a version control system that helps you "version" your files for you. You can also perform a "diff" to see the differences between two versions of a file.&lt;/p&gt;

&lt;p&gt;It's important to not only version your own code, but to keep track of the versions of code you're using from other developers. If you're using version 15 of React instead of version 17, then you might notice a lot of differences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-development-resources" class="anchor"&gt;
  &lt;/a&gt;
  Web Development Resources
&lt;/h2&gt;

&lt;p&gt;Teaching about HTML, CSS and JavaScript (JS) would obviously take a lot of time and make this article really long. I'm here to point you to resources that I personally find both the best use of time and affordable. There are many wonderful web developers that teach web development. Although I've been coding for many years, I enjoy watching new introductory tutorials to see what cool new tools people use nowadays that didn't exist when I first started learning web development.&lt;/p&gt;

&lt;p&gt;There are so many online tutorials for learning web development. Two great websites to learn web development are &lt;a href="https://www.w3schools.com/"&gt;w3schools&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Learn"&gt;MDN&lt;/a&gt;. The w3schools website has tons of examples and lessons to help you pick up HTML, CSS, and JS quickly. MDN has more thorough definitions and can teach you about topics you may not find in w3schools. Use them together as you begin your web development journey.&lt;/p&gt;

&lt;p&gt;Next, I will discuss a list of free videos you can find on YouTube followed by paid courses you can find on Udemy. YouTube provides a lot of free tutorials that have amazing instructors. If you want to learn more, want to build more projects, or simply want a different teaching style, then I would recommend watching the Udemy courses as well. The more exposure to as many different instructors as possible will increase your awareness to different styles of coding and tools that are available to you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-courses-by-the-net-ninja" class="anchor"&gt;
  &lt;/a&gt;
  Free Courses by The Net Ninja
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt;The Net Ninja&lt;/a&gt; covers a huge range of web development courses. I have been supporting him on &lt;a href="https://www.patreon.com/thenetninja"&gt;Patreon&lt;/a&gt; for years because I believe in his vision. His British accent is always a pleasure to listen to. Below is a list of free videos to help you get started on your Web Development journey.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9ivBf_eKCPIAYXWzLlPAm6G"&gt;HTML and CSS&lt;/a&gt;: Learn the fundamentals of HTML, CSS, and the DOM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9haFPT7J25Q9GRB_ZkFrQAc"&gt;JavaScript&lt;/a&gt;: Learn the fundamentals of JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9i3FXJSUfmsNOx8E7u6UuhG"&gt;CSS Flexbox&lt;/a&gt;: Learn how to use CSS Flexbox to layout components on the screen easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9itC4TxYMzFCfveyutyPOCY"&gt;CSS Grid&lt;/a&gt;: Learn how to use CSS Grid to layout components in a grid-like pattern.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jx2TTZk3IGWKSbtugYdrlu"&gt;Asynchronous JavaScript&lt;/a&gt;: Learn how to use JavaScript to fetch data from a server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9gZD-Tvwfod2gaISzfRiP9d"&gt;React&lt;/a&gt;: Learn how to use the React framework once you're comfortable with JavaScript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-courses-by-traversy-media" class="anchor"&gt;
  &lt;/a&gt;
  Free Courses by Traversy Media
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Traversy Media&lt;/a&gt; also covers a huge range of web development courses. Brad provides great overviews on a broad range of topics to help you get jumpstarted on all of them. I have been supporting him on &lt;a href="https://www.patreon.com/traversymedia"&gt;Patreon&lt;/a&gt; for years as well. His story is an inspirational one, and he's very dedicated to helping people become successful.&lt;/p&gt;

&lt;p&gt;After watching The Net Ninja's videos, I recommend watching some of these videos to help you become familiar with tools you'll need in your web development career.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=VfGW0Qiy2I0"&gt;Web Development in 2021&lt;/a&gt;: A great overview of tools and software developers will encounter on their journey in 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=x4q86IjJFag"&gt;Google Chrome Developer Tools Crash Course&lt;/a&gt;: Learn how to debug web applications using Chrome Developer Tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=SWYqp7iY_Tc"&gt;Git&lt;/a&gt;: Learn how to use the version control software, Git, to save the state of your code in remote servers and collaborate with team members more efficiently.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7r4xVDI2vho"&gt;Unit Testing&lt;/a&gt;: A good developer writes a lot of tests! Get started with the Jest test runner by watching this awesome course. Keep in mind that this video was created in April 2018, so be aware that some things might have changed since then.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=deyxI-6C2u4"&gt;React &amp;amp; Webpack 4 From Scratch - No CLI&lt;/a&gt;: This is an important course because it teaches you how to create a React project from scratch, so you understand how create-react-app works internally. If you need help understanding Babel, I have my own &lt;a href="https://inspirnathan.com/posts/12-babel-tutorial-part-1/"&gt;Babel series&lt;/a&gt; that you can check out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-courses-by-ania-kub%C3%B3w" class="anchor"&gt;
  &lt;/a&gt;
  Free Courses by Ania Kub√≥w
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC5DNytAJ6_FISueUfzZCVsw"&gt;Ania Kub√≥w&lt;/a&gt; provides a lot of really fun JavaScript videos, ranging from game development to building mobile apps with &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Xm4BObh4MhI"&gt;12hr+ YouTube Coding Bootcamp 2021&lt;/a&gt;: Ania Kub√≥w put in a lot of work to make a free 12 hour long bootcamp to help aspiring web developers like yourself get a nice career. She covers HTML, CSS, CSS Flexbox, JavaScript, asynchronous JavaScript, working with GitHub, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Rumf96j0cR0"&gt;Unit Testing with Mocha/Chai&lt;/a&gt;: Mocha is another test runner you can use instead of Jest. Chai is a library commonly used with Mocha to help making unit testing easier.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dhpjjAxKbHE"&gt;Flappy Bird in React Native&lt;/a&gt;: Once you get more comfortable with JavaScript and learn React, you can move onto React Native. In this tutorial, you learn how to make Flappy Bird on mobile devices such as your phone or tablet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awesome-paid-courses" class="anchor"&gt;
  &lt;/a&gt;
  Awesome Paid Courses
&lt;/h2&gt;

&lt;p&gt;The courses below are paid courses on &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;, but are a valuable use of your time to help you learn web development even faster. Udemy courses provide lifelong access, so you can always use the courses as a reference if you need them later. Some instructors, such as the ones listed below, keep their courses up to date so as software changes, you can use the videos to keep your own software up to date in case anything changes! Udemy will also send you updates from each instructor you purchase at least one course from. These instructors will often email you discounts on new courses they create, or will let you know when their current courses receive updates.&lt;/p&gt;

&lt;p&gt;Almost all Udemy courses go on sale to around $12 practically every other week, so try waiting for courses to go on sale before purchasing them. If you go to the instructor's YouTube channel or website, then you may find coupons listed there as well. I recommend NOT buying at the full course price unless you really want to give the instructor more money for doing such an excellent job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/javascript-the-complete-guide-2020-beginner-advanced/"&gt;JavaScript&lt;/a&gt;: Maximilian Schwarzm√ºller from the &lt;a href="https://academind.com/"&gt;Academind&lt;/a&gt; team teaches about old JavaScript, modern JavaScript, object-oriented programming concepts, how to work with JavaScript libraries, server side JavaScript with Node.js, security, data structures and algorithms, a bit of TypeScript, and more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://50projects50days.com/"&gt;50 Projects, 50 Days&lt;/a&gt;: This doesn't really take 50 days to complete. &lt;a href="https://www.traversymedia.com/"&gt;Brad Traversy&lt;/a&gt; and &lt;a href="https://www.florin-pop.com/"&gt;Florin Pop&lt;/a&gt; do a great job building 50 projects to get you more comfortable with HTML, CSS, and JavaScript. You get to work with various Web APIs so you can understand what tools are available to you in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/css-the-complete-guide-incl-flexbox-grid-sass/"&gt;Complete CSS Guide&lt;/a&gt;: The &lt;a href="https://academind.com/"&gt;Academind&lt;/a&gt; team, Maximilian Schwarzm√ºller and Manuel Lorenz, cover an in depth tutorial on HTML, CSS, and Sass to help you "flex" your CSS skills (pun definitely intended üòÇ).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/react-the-complete-guide-incl-redux/"&gt;React&lt;/a&gt;: Maximilian Schwarzm√ºller from the &lt;a href="https://academind.com/"&gt;Academind&lt;/a&gt; team teaches you about how to use React and Redux, a state management library commonly used with React applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/understanding-typescript/"&gt;TypeScript&lt;/a&gt;: Maximilian Schwarzm√ºller from the &lt;a href="https://academind.com/"&gt;Academind&lt;/a&gt; team goes in depth with teaching TypeScript, builds a drag &amp;amp; drop project, uses React with TypeScript, and uses Node.js with TypeScript. TypeScript is a superset of JavaScript aimed at writing cleaner code by adding stricter types to JavaScript language. You don't need to learn TypeScript to get a job in web development, but more companies are seeking developers who know it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/nodejs-express-mongodb-bootcamp/"&gt;Node.js, Express, MongoDB&lt;/a&gt;: Jonas Schmedtmann discusses how to build a RESTful API using Node.js, Express, MongoDB, and more. You don't need to learn all these technologies to get a job in web development, but it'll give you a ton more experience if you take the time to learn about these tools. Express is a framework built on top of Node.js. MongoDB is a type of database. In this course, you'll learn how to build web applications that connect to a database and learn best practices for authentication, authorization, and security. Additionally, you'll learn how to set up credit card payments with &lt;a href="https://stripe.com/"&gt;Stripe&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#going-further-into-web-development" class="anchor"&gt;
  &lt;/a&gt;
  Going Further into Web Development
&lt;/h2&gt;

&lt;p&gt;Like I mentioned earlier, web development is a never-ending journey. There are so many topics to learn about that I haven't even mentioned in this article. There's so many things to learn! If you're trying to get a job as a frontend developer, then I suggest focusing on HTML, CSS, JavaScript, and React first. React is one of the most in demand skills in the job market right now, and I predict it will continue to grow. However, if you're trying to apply to a job that requires Angular or Vue experience, then learn about those technologies instead. You may even find that you enjoy working with them more. We all have our own tastes and preferences.&lt;/p&gt;

&lt;p&gt;If you want more pay or want to learn more, then you'll find many opportunities to continue your web development journey. Here is an amazing &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Web Developer Roadmap&lt;/a&gt; put together by Kamran Ahmed on GitHub. You can choose between three main paths: frontend, backend, and DevOps. However, you can also choose to be a full stack developer that has experience in a bit of everything. It doesn't hurt to learn as much as you can in your web developer career to open up as many opportunities as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-stay-up-to-date-with-technology" class="anchor"&gt;
  &lt;/a&gt;
  How to Stay Up to Date with Technology
&lt;/h2&gt;

&lt;p&gt;It's important to stay up to date with important technologies, but it's difficult to keep track of everything. If you're using an open source library hosted on &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;, then you can see when the last commit to a repository took place. This will let you know if any changes occurred or if people are still actively working on it.&lt;/p&gt;

&lt;p&gt;Twitter is full of a lot of web developers that post updates on various technologies such as Node.js, the ECMAScript standard for JavaScript, and more. I would recommend creating an account and following people who tweet about the latest trends in technology to keep up with them. If you're using a library on GitHub, try to see if a code contributor to that library uses Twitter or posts updates on their personal website.&lt;/p&gt;

&lt;p&gt;Instructors on &lt;a href="http://youtube.com/"&gt;YouTube&lt;/a&gt;, &lt;a href="http://udemy.com/"&gt;Udemy&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;, and other platforms create new courses all the time. These instructors try to keep up with the latest trends and technologies so they can target skills desirable in the current job market. Try to analyze the course syllabus (if it's public) to see how the technology has changed or to learn about tools you may not know about.&lt;/p&gt;

&lt;p&gt;A lot of developers post on blogging platforms such as &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; and &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt;. Read articles they post to keep up with cool techniques and technologies. You can use Google to help you find articles on these websites by using a search query such as "site:medium.com javascript" or "site:dev.to javascript" in the Google search engine.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://www.thoughtworks.com/radar"&gt;Technology Radar&lt;/a&gt; by ThoughWorks, a consultancy company full of talented software developers. They get real-world experience with lots of different tools and techniques and report how the market is adapting to new technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The world of web development is vast, but like everything in life, you must take the first step and continue taking one step at a time. Practice every day until typing HTML, CSS, and JS becomes muscle memory. Go to as many interviews as possible. Take as many notes as possible. Don't get discouraged if the first few interviews end poorly. Look for a team that will help mold you into a kinder and more talented developer. It might seem stressful at first, but there are many developers across Twitter, including myself, that will help encourage you and keep that fire inside you burning strong üî•.&lt;/p&gt;

&lt;p&gt;Never give up!!! üåü&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Javascript Event Loop for dummies ü§°</title>
      <author>Papa Abdoulaye Diagne</author>
      <pubDate>Mon, 08 Feb 2021 22:03:25 +0000</pubDate>
      <link>https://dev.to/papidiagne30/javascript-event-loop-for-dummies-1bdi</link>
      <guid>https://dev.to/papidiagne30/javascript-event-loop-for-dummies-1bdi</guid>
      <description>&lt;p&gt;If someone who is not in the tech industry (a Muggle üòÜ) asks you what JavaScript is, could you define it? Well, you could say something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Javascript is an &lt;strong&gt;asynchronous&lt;/strong&gt;, &lt;strong&gt;single-threaded&lt;/strong&gt; and &lt;strong&gt;non-blocking&lt;/strong&gt; language which uses some tools like a &lt;strong&gt;call stack&lt;/strong&gt;, an &lt;strong&gt;event loop&lt;/strong&gt;, a &lt;strong&gt;callback queue&lt;/strong&gt; and some other &lt;strong&gt;APIs&lt;/strong&gt; for &lt;strong&gt;concurrency&lt;/strong&gt;".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But BRUUUH??!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/toB3AnUDkqE3GENKx0/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/toB3AnUDkqE3GENKx0/giphy.gif" alt="Confused GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That sounds like a dangerous spell in Harry Potter that would send your enemy straight to hell, doesn't it? But don't worry, I don't like when people use some complicated words to say barely nothing either. So let's go through each of those bizarre words.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Call stack&lt;/strong&gt;: that is where our tasks (functions encountered in the code) are stacked. When we encounter a function, we push it to the stack and when we return from that function, we pop it off the stack (LIFO)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Single-threaded&lt;/strong&gt;: in simple words, JavaScript can only do one thing at a time (one call stack). One element (function) in the stack is executed at a time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Non-blocking&lt;/strong&gt;: it means that whenever a "slow" task (I'll tell you what i mean by that later) is encountered in the call stack, it doesn't block the execution of the following tasks.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Asynchronous&lt;/strong&gt;: The non-blocking behavior we explained above is done by using &lt;strong&gt;asynchronous callbacks&lt;/strong&gt; which means that we run the "slow" task, give it a callback (an action to do when it's done), and run that callback later.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Callback queue&lt;/strong&gt;: basically the place where the callbacks are queued (FIFO) waiting for their turn to be called by our MVP, the call stack üòé&lt;/li&gt;
&lt;li&gt;The famous &lt;strong&gt;Event Loop&lt;/strong&gt;: that's what this whole article is about. Basically, it's the process of  checking if the call stack is empty, and if so, taking off the first element (the first callback) in the queue (if it is not empty, of course üôÑ) and pushing it to the stack for it to be executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easy Peasy, isn't it üòå?! NO?! Alright, I admit, that's a lot of words. So let's see a straightforward example to explain all of this.&lt;/p&gt;




&lt;p&gt;Let's admit we're in a restaurant where some &lt;strong&gt;orders&lt;/strong&gt; are already cooked and are quick to serve by the &lt;strong&gt;waitress&lt;/strong&gt;, and some other are harder to make and are going to take time to be cooked by the &lt;strong&gt;chef&lt;/strong&gt; (the "slow" tasks I was talking about üòâ). We imagine that whatever the chef cooks, he puts it on his big table for the waitress to take it (It's my article, I do what i want, okay? üòí)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXfO9OAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bcyir11p5bqkal01pdld.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXfO9OAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bcyir11p5bqkal01pdld.png" alt="Restaurant example image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we suppose that our waitress has 3 orders on her list. The quick orders are represented in white and the "slow" ones are represented in blue. They are &lt;strong&gt;stacked&lt;/strong&gt; in her list.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eTPgRMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sxceheoh9t2y18pssw8n.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eTPgRMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sxceheoh9t2y18pssw8n.gif" alt="Stacked functions GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The order on the top of the list (a hamburger) is then served to client 4 and get's removed from the list when it's done &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc4bzNIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mue80zgnyai9n968vaof.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc4bzNIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mue80zgnyai9n968vaof.gif" alt="Get hamburger GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can notice that the next order is a slow order. So the waitress gives it to the chef who cooks it, and puts the bowl of cooked salad on his table, for the waitress to serve it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dYisWVEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5rtbyez3k7trxwrjipwb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dYisWVEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5rtbyez3k7trxwrjipwb.gif" alt="Get salad GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meanwhile, the waitress takes care of the next order (a cup of juice) which is quick, and serves it to the client 4 (he's quite hungry üòÖ)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LcZ7vPdy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pl14qjezikwdwincroyt.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LcZ7vPdy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pl14qjezikwdwincroyt.gif" alt="Get juice GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it's done, the waitress notices that her list is empty. So she checks the chef's table to see if there is any meal on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M2nRaIP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a1vqlespaz0fri7541nx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M2nRaIP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a1vqlespaz0fri7541nx.gif" alt="Check table GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If so, she takes that meal, and serves it the corresponding client (in this case, she serves a delicious bowl of salad the client 3)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Su_pxwtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/68zqxk6aoi9pq2kht7fc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Su_pxwtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/68zqxk6aoi9pq2kht7fc.gif" alt="Salad Bowl GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Her list being still empty, she checks the chef's table once again and see's that there's nothing on it. Thus, she can clock out and go home üéâ.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJvA2aMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1xijvge18o933rzlkeiy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJvA2aMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1xijvge18o933rzlkeiy.gif" alt="Second table check GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it!! That's how JavaScript works. You still can't make the connection between the example and the weird words above üò©? Alright, let's see, with the same animation, how the following code is going to be executed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;cb&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Slow!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;7000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bye!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;First of all, let's place our weird words to where they belong in the animation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iepF2oJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v908v9655k5ccabrx14p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iepF2oJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v908v9655k5ccabrx14p.png" alt="Event loop image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's see how it works&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JNUvMc4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mo2h5r746hsicv0jjeht.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JNUvMc4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mo2h5r746hsicv0jjeht.gif" alt="JS Process GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;main()&lt;/code&gt; function specified here is just the main thread of our code.&lt;/li&gt;
&lt;li&gt;Each function is pushed to the stack when it is called, and popped off it when it returns something.&lt;/li&gt;
&lt;li&gt;Our slow function (&lt;code&gt;setTimeout()&lt;/code&gt;) is not handled by the javascript engine, but by some WebAPIs in the browser which will push the resulting callback into the queue when it's done.&lt;/li&gt;
&lt;li&gt;Meanwhile, the functions in the stack continue to get executed. Whenever the stack is empty, the event loop checks if the callback queue is empty, takes the first element in it (our callback function) and push it to the call stack&lt;/li&gt;
&lt;li&gt;The execution continues until there's nothing left in the call stack or in the callback queue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See? It's not that complicated, right? &lt;/p&gt;




&lt;p&gt;I hope this article helped you understand better the famous event loop and made you feel better with javascript. It is fundamental to understand these concepts in order to avoid some strange behaviors when you write asynchronous functions. If it still seems confusing to you, I recommend &lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ&amp;amp;ab_channel=JSConf"&gt;this excellent video of Philip Roberts&lt;/a&gt; explaining it:&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me if you have any questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/nushen96"&gt;nushen96&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/papidiagne30"&gt;papidiagne30&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Peace out!! ‚úåüèæ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>async</category>
      <category>promises</category>
    </item>
    <item>
      <title>Super simple communication between tabs, windows or iframes</title>
      <author>Simon Str√∂m</author>
      <pubDate>Mon, 08 Feb 2021 21:29:05 +0000</pubDate>
      <link>https://dev.to/stroemdev/super-simple-communication-between-tabs-windows-or-iframes-3ckf</link>
      <guid>https://dev.to/stroemdev/super-simple-communication-between-tabs-windows-or-iframes-3ckf</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;At the time of writing this is not supported in Safari browsers. This code example uses &lt;a href="https://www.npmjs.com/package/broadcastchannel-polyfill"&gt;this polifill&lt;/a&gt;, it offers partial support.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, you have your web app running. The user opens it multiple times, in tabs or windows, or you might have several iframes on the same page, like the example below. Now you want to send data, events, or any other information across them. How do you do? Well, the answer is actually really simple...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#enter-raw-brodacastchannel-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  Enter &lt;code&gt;BrodacastChannel&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;All you have to create is a &lt;code&gt;BroadcastChannel&lt;/code&gt; instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BroadcastChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;It only needs one parameter, the name of the channel. So in any other web app or piece of code you can create a connection by creating a new channel with the same name. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that the applications must be under the same &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Origin"&gt;origin&lt;/a&gt;. For example the same domain name, scheme (HTTP/HTTPS), and port. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now you need to do two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Subscribe to messages&lt;/li&gt;
&lt;li&gt;Send messages&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So to subscribe, you need an event handler for the &lt;code&gt;onmessage&lt;/code&gt; event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;
  &lt;span class="cm"&gt;/* The code above is the same as:
   const data = e.data
   and uses a feature called object destructruring
  */&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;onmessage&lt;/code&gt; handler will receive the event payload, and the most interesting property would be the data sent. That is what is sent from another tab, frame, iframe, or window. Now look at how we send some data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello!!!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Just use the &lt;code&gt;postMessage&lt;/code&gt; function on your channel. &lt;/p&gt;

&lt;p&gt;Now we send a simple string message to every other listener. Running the code above in one tab would look like this in another console: &lt;code&gt;Hello!!!&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;The data you can send is not limited to strings. You can send objects as well. &lt;/p&gt;

&lt;p&gt;To close a channel you can call the &lt;code&gt;close&lt;/code&gt; method, so it stops listening and can be garbage collected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Below is a simple demo where you can change the background gradient in both iframes by clicking any button in either one of them:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/efqce"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/efqce"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reuse-the-channel" class="anchor"&gt;
  &lt;/a&gt;
  Reuse the channel
&lt;/h1&gt;

&lt;p&gt;If you want to reuse the channel you might do it by sending actions across like you handle actions using a reducer/redux. Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;

  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ACTION_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;doActionOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="cm"&gt;/* etc. */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And dispatching like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ACTION_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;This is a really simple way to handle events across your application instances or different applications under the same domain. It might be session-/user information or any other data you want to broadcast. One day it might be working across all browsers without polyfill as well...&lt;/p&gt;

&lt;p&gt;More information can be found &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API"&gt;here in the MDN docs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>3 apprenticeship programs to apply to in 2021 (part 2)</title>
      <author>Jasterix</author>
      <pubDate>Mon, 08 Feb 2021 20:19:57 +0000</pubDate>
      <link>https://dev.to/jasterix/3-apprenticeship-programs-available-this-year-1pl8</link>
      <guid>https://dev.to/jasterix/3-apprenticeship-programs-available-this-year-1pl8</guid>
      <description>&lt;p&gt;As a bootcamp grad, I try to keep an eye out for opportunities like these to share with my network. It can be difficult to compete against more experienced developers and CS majors for FTE positions. But many companies are specifically seeking us out for the unique perspectives we bring.&lt;/p&gt;

&lt;p&gt;In addition to the &lt;a href="https://dev.to/jasterix/3-top-tier-apprenticeships-you-should-apply-to-3cmd"&gt;3 programs I shared&lt;/a&gt;, below is a list of 3 more programs, with applications opening this year.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.onramp.io/ts/role/6000deec27899c320a84ddb4"&gt;Pandora + Sirius XM&lt;/a&gt; - Applications opened &lt;strong&gt;NOW&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a six-month apprenticeship at SiriusXM + Pandora. It seems to be a collaboration with Onramp, which offers support in preparing to apply. The program has a few locations available - Oakland, CA; New York, NY; and Atlanta, GA&lt;/li&gt;
&lt;li&gt;The apprenticeship website offers some details into the program, like salary ($23 - $29 / hour based on location), as well as a roadmap of the interview process from application to getting an offer. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://apprentices.seesparkbox.com/"&gt;Sparkbox&lt;/a&gt; - Applications open &lt;strong&gt;Fall 2021&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A little known apprenticeship program. In addition to Fullstack, they also have a Frontend Design Apprenticeship. I learned about this program from this interview on &lt;a href="https://www.youtube.com/watch?v=xU2tB0m5tlQ&amp;amp;t=771s&amp;amp;ab_channel=TheComeUp"&gt;The Come Up&lt;/a&gt;. Hearing about &lt;a href="https://www.youtube.com/channel/UCCOcO-zIigdIxaT94SZYqzw"&gt;Jhilene's&lt;/a&gt; with Sparkbox, I would highly recommend applying. &lt;/li&gt;
&lt;li&gt;Working with this dev shop in Dayton, OH, apprentices can expect to build core fundamentals of object-oriented programming. The company prioritizes test-driven development, writing clean code, and helping nontraditional developers enter the industry.&lt;/li&gt;
&lt;li&gt;What does it take to become a Sparkbox apprentice? Passion, character, and initiative. Applications for the 2022 Full-Stack Developer Apprenticeship will open later this year. Set a reminder to apply Fall 2021, follow them on &lt;a href="https://twitter.com/hearsparkbox"&gt;Twitter&lt;/a&gt;, and check their amazing blog, &lt;a href="https://sparkbox.com/foundry/category/apprenticeship"&gt;the Foundry&lt;/a&gt; for updates. They even have an &lt;a href="https://github.com/sparkbox/apprenticeships"&gt;apprenticeship GitHub repo&lt;/a&gt; that further provides more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://careers.twitter.com/en/twitter-engineering-apprenticeship-program.html"&gt;Twitter&lt;/a&gt; -  Applications open &lt;strong&gt;April 2021&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Twitter apprenticeship is open to developers from a variety of backgrounds. Similar to the Google program, apprentices can expect to be employed after the 12-month program. This is because apprentices are hired as full-time Twitter employees, but with additional hands-on coaching and support to succeed. &lt;/li&gt;
&lt;li&gt;Applicants need two years' of (any) work experience, proficiency in 1 language, and an interest in working on iOS; Android; Web technologies; or backend systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Did I miss any 2021 apprenticeship programs? Let me know in the comments! üôÇ&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The Unbiased Guide to Choosing the Right BI Tool</title>
      <author>Jacob Cohen</author>
      <pubDate>Mon, 08 Feb 2021 19:54:21 +0000</pubDate>
      <link>https://dev.to/harperdb/the-unbiased-guide-to-choosing-the-right-bi-tool-3oe6</link>
      <guid>https://dev.to/harperdb/the-unbiased-guide-to-choosing-the-right-bi-tool-3oe6</guid>
      <description>&lt;p&gt;Business Intelligence (BI) is the ultimate end goal of digital transformation. The ability to make better, smarter, more efficient decisions based on data collected across the business is what drives technical investment. This makes choosing the right tool paramount for your organization. As a database instructor and mentor of mine used to say: data is worthless until it becomes information. Information is what happens when you use data to glean insights and conclusions. What better way to do that than with a tool designed for the job? Great news! There are a ton of options out there for you, potentially too many. &lt;strong&gt;In this blog, I‚Äôll discuss strategies for selecting the right BI tool as well as some important things to keep in mind throughout the process.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs start by defining what exactly makes up a BI tool. Don‚Äôt tell my English teachers, but I‚Äôm going to cite Wikipedia. According to them, ‚ÄúBusiness intelligence software is a type of application software designed to retrieve, analyze, transform and report data for business intelligence. The applications generally read data that has been previously stored‚Ä¶‚Äù I think that does a pretty good job of defining the broad terms, but that still leaves us with a wide variety of software choices. Spreadsheets, database management studios, dashboarding tools, data mining software, all fall under this umbrella. For the purposes of this blog, I‚Äôll be operating under the assumption that we are referring to the more colloquial BI tools which focus on providing visualization capabilities to end users of any skill level. &lt;em&gt;Please note that I‚Äôm agnostic here and neither I nor HarperDB are promoting certain tools over others. This blog is intended to share my experience and provide general guidelines for making the decision that‚Äôs right for you.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are plenty of minor factors that come into play when choosing the right BI tool, but let‚Äôs take a look at some important ones. Here are what I consider to be effective criteria to determine the right BI tool for your organization: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical Compatibility&lt;/strong&gt;&lt;br&gt;
Does the tool connect to the existing datastores in your organization? If the tool can‚Äôt connect to your datastores or would require a large data integration project, it‚Äôs probably best to move on and find something that works a little closer to out-of-the-box. I‚Äôve worked with quite a few organizations that have legacy data stored in legacy database technologies. Just because the tools are old doesn‚Äôt make the data any less valuable and it may be critical for true business intelligence understanding. If this is the case for your organization, you may have to skip some of the more modern, web-based solutions. For example, neither Looker nor Google Data Studio support old school JDBC or ODBC connections, which can be a limiting factor of legacy technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Base/Ease of Use&lt;/strong&gt;&lt;br&gt;
What tools are your end-users already familiar with? Providing them with BI tools that have a similar user experience to tools they already use helps ease the transition to the new tool and drives adoption. If end users are intimidated by the complexity of the new solution they are far less likely to adopt it. For example, if most of the end-users are already Excel power users, selecting Microsoft PowerBI is going to have a far greater chance of success because PowerBI is basically Excel for analytics. Another example is if your organization is powered by G Suite, going with Google Data Studio might make the most sense because it fits into the already existing ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reporting Capabilities&lt;/strong&gt;&lt;br&gt;
Does the tool provide the proper reporting and analytics? At the end of the day, if you need to run specific analytics and produce distinctive charts, you need the right tool that can do it. The big players in the BI tool world most likely have everything you need, but it‚Äôs still important to verify ahead of time. I have seen cases where the leading tool is disqualified for not being able to produce a chart that a key stakeholder considered critical.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collaborative Functionality&lt;/strong&gt;&lt;br&gt;
Does the tool feature collaborative functionality to build and share charts and dashboards across teams? We should be past the days of accessing an Excel file or, even worse, an Access database file from a shared drive. (Yet I keep seeing them, so don‚Äôt feel too bad if you have some left, but please digitally transform already). This means we should be choosing tools that are collaborative at their core. The ability to build a chart with your team, share, and distribute is critical in modern business. Especially now that I haven‚Äôt left my house in months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;br&gt;
Is the functionality worth the cost? I‚Äôm not going to dig too much into this one, it‚Äôs pretty obvious. However, if Fred, our COO, were writing this blog this section would be the largest one, but that‚Äôs his job. That‚Äôs the point, the technical team may want the biggest and baddest tool, but if the business stakeholders don‚Äôt see the value in it then you‚Äôre not getting your fancy tool. Pricing for BI tools is wide-ranging, for example, Tableau is over $800 per user per year and Google Data Studio is free. Sure, Tableau has more features, but ask your COO which one they prefer once they hear that tidbit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optional: Mobile Friendly&lt;/strong&gt;&lt;br&gt;
Does the tool offer mobile-friendly dashboarding and reporting? Now, I say this is optional because for some organizations this just isn‚Äôt a priority or a necessity. Others could find immense value in giving its users a real-time dashboard in the palm of their hands. For example, anyone with physical assets could benefit from having status and management of everything with them at all times instead of relying on a laptop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ancillary Requirements&lt;/strong&gt;&lt;br&gt;
What else do we need? Here‚Äôs my catchall. Each organization operates its own way, I‚Äôm sure there are things I‚Äôve missed here that are important to you. Maybe you only run Microsoft OS, so the tool needs to be able to run there as well. Perhaps email alerting is a requirement.&lt;/p&gt;

&lt;p&gt;There are plenty of criteria and requirements that could sway the decision of a BI tool. Hopefully, this blog helps provide some unbiased opinions and thoughts of what to look for when getting started with your BI tool search. &lt;/p&gt;

&lt;p&gt;Now for a bit of HarperDB bias. Our database technology was built to be powerful and easy to use for all aspects of data collection and analysis. In fact, HarperDB can easily serve as a data warehouse to coalesce data from disparate data stores, so you only need to hook your BI tool up to a single data source. We offer plenty of &lt;a href="https://studio.harperdb.io/support/drivers"&gt;drivers, like ODBC and JDBC, out-of-the-box&lt;/a&gt; that work natively with client-based tools like Tableau and PowerBI. We also have an &lt;a href="https://studio.harperdb.io/support/drivers"&gt;Excel Add-In&lt;/a&gt; that can be used for makeshift BI purposes. In fact, I‚Äôve seen some of our partners build some incredibly powerful tools for users who just want to stay in Excel for everything. However, as a newer database, there are times when we run into BI tools that don‚Äôt support HarperDB out of the box. Fortunately, many of these tools allow the community to build their own connectors and integrations. We currently have someone working on a &lt;a href="https://feedback.harperdb.io/suggestions/107119/create-a-data-studio-connector-bounty-2000-usd"&gt;Google Data Studio connector&lt;/a&gt; through our &lt;a href="https://harperdb.io/developers/bounty-program/"&gt;bounty program&lt;/a&gt; which should be ready to go in the near future. I‚Äôm pretty excited for that one! Additionally, the &lt;a href="http://studio.harperdb.io/"&gt;HarperDB Studio&lt;/a&gt; has built in charting functionality, making it a free and powerful BI tool of its own. Did I convince you to give it a try? &lt;a href="https://harperdb.io/harperdb-cloud-get-started-today/"&gt;Try HarperDB Cloud for free today!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Elf_ohag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/msyxnk1a7sqoeq8y0fd4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Elf_ohag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/msyxnk1a7sqoeq8y0fd4.png" alt="charting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HarperDB Studio Charting&lt;/em&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>datascience</category>
      <category>webdev</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>The spread operator in Javascript</title>
      <author>Arika</author>
      <pubDate>Mon, 08 Feb 2021 19:30:00 +0000</pubDate>
      <link>https://dev.to/test555creator/the-spread-operator-in-javascript-35cm</link>
      <guid>https://dev.to/test555creator/the-spread-operator-in-javascript-35cm</guid>
      <description>&lt;p&gt;When I first stumbled upon the ... operator it looked confusing and I didn't really know what to do with it. Javascript already had built in functions that were doing the exact same thing as this new operator so the need to integrate it in my code wasn't very clear to me. Today, after I used it for quite a while, it's one of my favorite ES6 features and it helps me manipulate arrays and strings much easier than before.&lt;/p&gt;

&lt;p&gt;MDN says that:&lt;/p&gt;

&lt;p&gt;"Spread syntax allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected."&lt;/p&gt;

&lt;p&gt;Pretty simple, no? In plain English this means that this operator spreads the items inside an iterable (be it string, array, set or anything that we can loop through really) inside a receiver (a receiver is something that receives the spread values).&lt;/p&gt;

&lt;p&gt;Now that we got the definition out of the way, what exactly can we do with this operator?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Copy an array&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mllouI9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1zyd8jrjgnfbsusrkd7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mllouI9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1zyd8jrjgnfbsusrkd7p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Copy an array and add new elements to it&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pvdBIQjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/br2jganeibnzie1pzsfh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pvdBIQjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/br2jganeibnzie1pzsfh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Concatenate arrays&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CWX0cq95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wt541one7sfmmgytmr4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWX0cq95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wt541one7sfmmgytmr4e.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This works with arrays holding different types or mixed arrays, like so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lROk8bzI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aqr7c8ig2tthdncj64ol.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lROk8bzI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aqr7c8ig2tthdncj64ol.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cPLiHXWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d6kkumznarx2ounhcnq1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPLiHXWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/d6kkumznarx2ounhcnq1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Spread elements on function calls&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VgqKiGcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ci9gqwskiyws0r9t62e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VgqKiGcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9ci9gqwskiyws0r9t62e.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Copy object literals&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKH2z3qO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iyl2691gjhws59600c3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKH2z3qO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iyl2691gjhws59600c3v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Concatenate and add new properties to object literals&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3CS32Qht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qo6karh3j2zq0po2j0m1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3CS32Qht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qo6karh3j2zq0po2j0m1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: negativespace/ @negativespace on Pexels&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Announcing a New Kind of Boot Camp: Front-End Foxes School</title>
      <author>Jen Looper</author>
      <pubDate>Mon, 08 Feb 2021 16:44:36 +0000</pubDate>
      <link>https://dev.to/frontendfoxes/announcing-a-new-kind-of-boot-camp-front-end-foxes-school-f4g</link>
      <guid>https://dev.to/frontendfoxes/announcing-a-new-kind-of-boot-camp-front-end-foxes-school-f4g</guid>
      <description>&lt;p&gt;Front-End Foxes is a 501(c)(3) nonprofit, tax-exempt charity registered in Massachusetts, USA. We are people who identify as women and who want to learn front-end technologies to make websites and mobile apps.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://frontendfoxes.org"&gt;Front-End Foxes online&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Founded by Jen Looper in February 2018, we create and host educational events to teach front-end technologies to women in a cool and fun way. Our activities include free self-driven code labs completed in a workshop format in groups with mentoring by volunteers, either online or in-person. The goal of the program is to familiarize women with front-end technologies in a supportive and inclusive environment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rz9JfwJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kdt3jd3ouw7pjiztpurn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rz9JfwJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kdt3jd3ouw7pjiztpurn.png" alt="Workshop Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In 2020 we pivoted to an entirely online format, and hosted several Zoom workshops and streamed events via our chapters. In 2021 we propose to retain this model for the Community wing of the organization while creating a completely new, Educational wing. &lt;strong&gt;With this structure we intend to launch a new online boot camp to teach development skills to women in a new and unique way.&lt;/strong&gt; We are one of the very few non-corporate, free-of-charge community-generated bootcamps for women in the world.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get ready for the first &lt;a href="https://frontendfoxes.school"&gt;Front-End Foxes School&lt;/a&gt; cohort launching in Spring of 2021!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#our-team" class="anchor"&gt;
  &lt;/a&gt;
  Our Team
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Staff&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWgX4KHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/htmkopn3u37f4ab2up2x.png" alt="Jen"&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Jen Looper (President and Founder)&lt;/strong&gt; is a Google Developer Expert and a Cloud Developer Advocate Lead at Microsoft with over 20 years' experience as a web and mobile developer. She is a multilingual multiculturalist with a passion for teaching.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KA2mN_td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fkiah4igdpdbs8h8pfel.png" alt="Diana"&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Diana Rodr√≠guez (Education Coordinator)&lt;/strong&gt; is a web developer, infrastructure and automation specialist with over 20 years‚Äô experience in the tech ecosystem. Strong in community presence, she leads GDG Durham and PyLadies RDU.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXCUukYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/svijhk81yfgb7iow44ry.png" alt="Jaeriah"&gt;&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Jaeriah Tay (Student Satisfaction Coordinator)&lt;/strong&gt; is a multilingual front-end developer/designer who builds and designs product and integrations at Chec/Commerce.js. Coming from a design and entrepreneurial background, Jaeriah applies her passion by building software and working on developer resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#what-is-frontend-foxes-school" class="anchor"&gt;
  &lt;/a&gt;
  What is Front-End Foxes School?
&lt;/h2&gt;

&lt;p&gt;We propose to host, throughout the year, four cohorts of 11 weeks each. Each cohort will be designed for 60 students, with one paid, trained instructor per region teaching via our online platform twice a week, aided by volunteer mentor coaches.&lt;/p&gt;

&lt;p&gt;We will teach the basics of web development starting with JavaScript, HTML and CSS and finally teaching React.js as a framework of choice. Our project-based curriculum allows new developers to create and maintain a web portfolio site and a GitHub presence for professional use. Paid instructors will be responsible for teaching the curriculum while volunteers will be sourced from our community of experienced developers. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wO67utAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dh763vzh3yxudramnyuo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wO67utAH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dh763vzh3yxudramnyuo.jpg" alt="Bogota"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Learning and Teaching together in Bogot√°, Colombia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Each cohort of 60 will be comprised of three regional groups of 20. Due to time zone constraints, we propose that each seasonal cohort include a group from Asia, one from Europe/Africa, and one from the Americas. Thus, over a year, we propose to teach 12 groups for a total of 240 students trained per year. &lt;/p&gt;

&lt;p&gt;We would like to potentially engage with sponsoring companies to offer apprenticeships to students who graduate from our cohorts, to help continue their training and progress with their entrance into technical fields. In addition, we welcome cohort students to our Slack channel to discover mid-career and senior women developers for networking and mentoring opportunities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-goals" class="anchor"&gt;
  &lt;/a&gt;
  Our Goals
&lt;/h2&gt;

&lt;p&gt;ü¶ä We propose to teach cohorts of women front-end web development skills, skills often not taught in college. We will use a project-based curriculum designed to help students build their professional portfolios.&lt;/p&gt;

&lt;p&gt;ü¶ä Provide opportunities for companies to help improve the pipeline of well-trained new developers for the front-end ecosystem.&lt;/p&gt;

&lt;p&gt;ü¶ä Use a state-of-the-art learning platform to provide an excellent learning experience&lt;/p&gt;

&lt;p&gt;ü¶ä Make online learning accessible to remote corners of the world through a performant and lean experience for all users via our whitelabeled platform and worldwide mentoring team&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Front-End Foxes School is a part-time program, taught twice a week in the evenings - perfect for working women, students and moms. We will ALWAYS be free of charge for students with no strings attached.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#join-us" class="anchor"&gt;
  &lt;/a&gt;
  Join us!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Teach!&lt;/strong&gt; We are currently looking for instructors eager to teach! This is a &lt;strong&gt;paid position&lt;/strong&gt; and we want to hear from you! Please contact &lt;a href="mailto:diana@frontendfoxes.org"&gt;diana@frontendfoxes.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sponsor!&lt;/strong&gt; We need sponsors for our efforts! If you'd like to be a part of this new and innovative effort, please reach out to Jen Looper - &lt;a href="mailto:jen@frontendfoxes.org"&gt;jen@frontendfoxes.org&lt;/a&gt; for a complete prospectus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coach!&lt;/strong&gt; We are looking for volunteer mentors to help coach students. Come bring your skills as a developer and help the next generation of women developers enter the work force. If you want to coach, please reach out to &lt;a href="mailto:diana@frontendfoxes.org"&gt;diana@frontendfoxes.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn!&lt;/strong&gt; If you are interested in learning more about the cohorts, reach out to &lt;a href="mailto:jaeriah@frontendfoxes.org"&gt;jaeriah@frontendfoxes.org&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Thank you to the community for your continued support as we plot the next course for Front-End Foxes, Inc.!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Find us online at &lt;a href="https://frontendfoxes.school"&gt;Front-End Foxes School&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Javascript Module Pattern </title>
      <author>Guilherme Gules</author>
      <pubDate>Mon, 08 Feb 2021 16:20:49 +0000</pubDate>
      <link>https://dev.to/guilhermegules/javascript-module-pattern-556i</link>
      <guid>https://dev.to/guilhermegules/javascript-module-pattern-556i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Sidenote: ES6 introduced a new feature in JS called 'modules', they're essentially a syntax for importing and exporting code between JavaScript files. They're powerful and bring a new horizon for JS development but it's not the subject today.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Today we will talk about &lt;strong&gt;IIFEs&lt;/strong&gt; or &lt;strong&gt;Immediately Invoked Functions Expressions&lt;/strong&gt;, working with vanilla JS we can use these functions for better-scoped and responsibilities definition on our code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-iife" class="anchor"&gt;
  &lt;/a&gt;
  What is IIFE?
&lt;/h3&gt;

&lt;p&gt;It's a JavaScript pattern, that allows us to create modules with more lexical scope for our functions, create functions for executing simple tasks and immediately execute and help with code organization too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-module" class="anchor"&gt;
  &lt;/a&gt;
  Creating a module
&lt;/h3&gt;

&lt;p&gt;We will init using an anonymous closure. Thus we create a lexical scope, and the code that it's inside of the scope will be only accessed by the function, including properties too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function() {
  // Your functions and variables will be scoped in this function
  // In this case our console.log will be executed immediately 
  console.log("My first module");
})();
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#exporting-module" class="anchor"&gt;
  &lt;/a&gt;
  Exporting module
&lt;/h3&gt;

&lt;p&gt;With that we can use only a returned properties and functions by our module, thus that way keeping our code scoped on the module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const moduleA = (function() {
  const moduleAValue = "Module A";

  function modifyModuleAValue() {
    return `${this.moduleAValue}-123`; 
  }

  return {
    getter: () =&amp;gt; {
       return moduleAValue;
    },
    modifyModuleAValue,
  }
})
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-iife-for-making-simple-scripts" class="anchor"&gt;
  &lt;/a&gt;
  Using IIFE for making simple scripts
&lt;/h3&gt;

&lt;p&gt;With this pattern, we can create simple scripts for immediate execution, a great example is the use of login scripts for adding more agility to the development process:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(() =&amp;gt; {
   const user = "myuser@email.com";  
   const pass = "secretpass123";

   document.getElementById("user-input").value = user;  
   document.getElementById("user-pass").value = pass;
   document.getElementById("submit").click();
})();
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With this simple script, we can create an automated login.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iife-on-es6" class="anchor"&gt;
  &lt;/a&gt;
  IIFE on ES6+
&lt;/h3&gt;

&lt;p&gt;When ES6 was released, it brought some new additions, one of which is &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;, this type of variable declaration has the scope of blocks, so when we get a &lt;code&gt;curly braces&lt;/code&gt; block, our &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; has the respective &lt;code&gt;curly braces&lt;/code&gt; scope. So we do not need this pattern all the time but the knowledge always helps in certain situations.&lt;/p&gt;

&lt;p&gt;Thanks for reading I hope that was useful.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#helpful-links" class="anchor"&gt;
  &lt;/a&gt;
  Helpful links
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/#introduction"&gt;Learning JavaScript Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;MDN Web Docs - IIFE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to get an accurate position estimate from the Geolocation API in JavaScript</title>
      <author>Micha≈Ç Gacka</author>
      <pubDate>Mon, 08 Feb 2021 15:15:32 +0000</pubDate>
      <link>https://dev.to/m3h0w/how-to-get-an-accurate-position-estimate-from-the-geolocation-api-in-javascript-1njf</link>
      <guid>https://dev.to/m3h0w/how-to-get-an-accurate-position-estimate-from-the-geolocation-api-in-javascript-1njf</guid>
      <description>&lt;p&gt;The Geolocation API has been introduced into modern browsers many years ago and hasn't changed much since yet it still can waste many hours of your time if you don't know how to work with it. There's a lot of magic happening behind the scenes that isn't properly explained in the documentation. Here's a straightforward way to get an accurate estimate without you having to spend the 2 days I've spent figuring out why my location estimates look like out of a random number generator.&lt;/p&gt;

&lt;p&gt;There are 2 functions you can use to ask the browser for location estimates: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition"&gt;getCurrentPosition()&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition"&gt;watchPosition()&lt;/a&gt;. So far so good: the first will spit out 1 position on success, while the second will keep throwing new positions at you as they are updated. It's important to note that the &lt;code&gt;GeolocationCoordinates&lt;/code&gt; object that we get as a result of either of these 2 functions contains the estimated position and accuracy of the measurement in meters.&lt;/p&gt;

&lt;p&gt;For my application, where the user was supposed to trigger a location measurement it seemed obvious to use the &lt;code&gt;getCurrentPosition()&lt;/code&gt; since in that case, I wouldn't have to take care of storing the state of change coming from &lt;code&gt;watchPosition()&lt;/code&gt; and having to use &lt;code&gt;clearWatch()&lt;/code&gt; to stop listening at an appropriate time. It seemed perfect. And turned out to be completely useless.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getCurrentPosition()&lt;/code&gt; accepts an &lt;code&gt;options&lt;/code&gt; object where you can turn &lt;code&gt;enableHighAccuracy&lt;/code&gt; boolean to true. It comes with high hopes and an even larger disappointment. Even with the boolean, the measurements I'd get from my phone would have an accuracy of thousands of meters which rendered them virtually useless for what I needed.&lt;/p&gt;

&lt;p&gt;Enter &lt;code&gt;watchPosition()&lt;/code&gt;. After reading some obscure blog I don't remember the name of that went into details of how the GPS module might work in the phone, I learned that it might take a few seconds to warm up and spit out a correct position. And that is the crucial piece of knowledge you need to solve this problem. One that should definitely be explained in more depth in some of the official sources that explain how to use this API.&lt;/p&gt;

&lt;p&gt;Knowing that I implemented my logic using &lt;code&gt;watchPosition()&lt;/code&gt; instead and it turned out that indeed, magically the accuracy again starts at thousands of meters but, after a few seconds of these bad measurements, the GPS kicks in and provides estimates with a few meters of accuracy. These, finally, make sense for my application.&lt;/p&gt;

&lt;p&gt;Here's an example of a function I use within the React's &lt;code&gt;useEffect()&lt;/code&gt; hook. Note the returned function that allows me to clear the watch by returning it from the hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ILocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errorMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;setAccuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geoId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;watchPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;setAccuracy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;showErrorSnackBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The GPS accuracy isn't good enough&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;showErrorSnackBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;enableHighAccuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Clear watch called&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearWatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geoId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;That's all you need to get accurate estimates from the Geolocation API. Let me know in the comments if this worked for you ‚òÄÔ∏è&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;br&gt;
Here's also a React hook version of a similar functionality (still imperfect but a good starting point for your own Geolocation hook):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;accuracyThresholdWaitTime&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;PositionOptions&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ILocation&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAccuracy&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ILocation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setAccuracy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NodeJS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Timeout&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;geoId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;watchPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;setAccuracy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setLocation&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lng&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;enableHighAccuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;maximumAge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;accuracyThresholdWaitTime&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Failed to reach desired accuracy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;accuracyThresholdWaitTime&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clearWatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;geoId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeout&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Geolocation API not available&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;accuracyThresholdWaitTime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;accuracyThreshold&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;It lets you specify an &lt;code&gt;accuracyThresholdWaitTime&lt;/code&gt; which decides how long the &lt;code&gt;watchLocation&lt;/code&gt; will listen for before deciding that the accuracy is not good enough (for example when someone is indoors the accuracy will never get better than ~10m and you might need it to reach ~3m to serve your purpose).&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>The Single Div trend &amp; Making the React Logo.</title>
      <author>Akshaya Venkatesh</author>
      <pubDate>Mon, 08 Feb 2021 14:13:21 +0000</pubDate>
      <link>https://dev.to/venkyakshaya/the-single-div-trend-making-the-react-logo-284c</link>
      <guid>https://dev.to/venkyakshaya/the-single-div-trend-making-the-react-logo-284c</guid>
      <description>&lt;p&gt;&lt;strong&gt;What to expect?&lt;/strong&gt;&lt;br&gt;
This blog explains why creating single div art is a popular trend and how to build the React JS logo with just one div and pure CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the "Single Div" hubbub all about?&lt;/strong&gt;&lt;br&gt;
Let us consider a basic example - creating a series of different colored dots. I could just create an array of elements and assign different colors to them but if I am given a condition that I may use only one div element - I will choose to use the background property (among other ways) to achieve the same. This is the main reason for the popularity of this trend. It challenges the developer to harness or exploit many CSS properties that would not be used otherwise.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Breaking down the React logo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--goETGOXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x3x5w638kkixi9s3h3vw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goETGOXU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x3x5w638kkixi9s3h3vw.gif" alt="Animated React Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The logo is pretty straightforward - there are three elliptical orbits with a nucleus at their center in what I like to call "React Blue"  (hex code - #61dafb). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
As promised, HTML will have nothing but a &lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Orbit shape&lt;/strong&gt;&lt;br&gt;
For the orbit's elliptical shape, we first create a class that can style all three orbits. It simply uses the border properties to define the shape. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;.logo-orbit {&lt;br&gt;
  height: 100px;&lt;br&gt;
  width: 300px;&lt;br&gt;
  border-radius: 50%;&lt;br&gt;
  border: 10px solid $react-blue;&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
This can style any div to look something like this üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjVpmyRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6wzge8wele13ln86jm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjVpmyRd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h6wzge8wele13ln86jm9.png" alt="React logo central ellipse orbit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The 3 orbits&lt;/strong&gt;&lt;br&gt;
For the central orbit, select the div tag and apply the &lt;code&gt;.logo-orbit&lt;/code&gt; class. I have used Scss and extended the class name in the styles.&lt;br&gt;
&lt;code&gt;div{&lt;br&gt;
  @extend .logo-orbit;&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
For those not familiar with Scss, please replace &lt;code&gt;@extend .logo-orbit&lt;/code&gt; with styles in the &lt;code&gt;.logo-orbit&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Next, we use the &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt; pseudo-selectors. These are conventionally used for inserting content but here we use them for the other two orbits as follows.&lt;br&gt;
&lt;code&gt;:before, :after {&lt;br&gt;
    @extend .logo-orbit;&lt;br&gt;
    content: "";&lt;br&gt;
    position: absolute;&lt;br&gt;
    top: -10px;&lt;br&gt;
    left: -10px;&lt;br&gt;
    box-sizing: inherit; &lt;br&gt;
  }&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
It is worth noting that although &lt;code&gt;box-sizing&lt;/code&gt; is an inherited property, the pseudo-elements do not inherit them and require an explicit inheritance. &lt;/p&gt;

&lt;p&gt;Next, we position the logo with rotation as follows.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JIe3p0M4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/093ewdrgyf1kedlhzs51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JIe3p0M4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/093ewdrgyf1kedlhzs51.png" alt="React logo 3 orbits"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;:before {    &lt;br&gt;
    transform: rotate(60deg);&lt;br&gt;
  }&lt;br&gt;
  &amp;amp;:after {&lt;br&gt;
    transform: rotate(-60deg);&lt;br&gt;
  }&lt;/code&gt;&lt;br&gt;
Now we are only left with the nucleus. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nucleus&lt;/strong&gt;&lt;br&gt;
We use &lt;code&gt;radial-gradient&lt;/code&gt; with the background property applied to the div for creating the nucleus as follows.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qo_Wp38Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e0nl7ziy1la7bpwj7rsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qo_Wp38Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e0nl7ziy1la7bpwj7rsp.png" alt="Complete react logo"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;background: radial-gradient(circle, $react-blue 24px, transparent 25px);&lt;/code&gt;&lt;br&gt;
With that the logo is done. The complete code along with the turn animation can be found in the following Codepen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/akshaya-venkatesh8/embed/eYZdaOy?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;There is so much that can be done with just a single div. Be sure to checkout &lt;a href="https://a.singlediv.com"&gt;a.singlediv.com&lt;/a&gt; by &lt;a href="https://twitter.com/lynnandtonic"&gt;Lynn Fisher&lt;/a&gt; who started this trend. Let me know about your single-div creations in the comments or reach me on &lt;a href="https://twitter.com/venkyakshaya"&gt;Twitter&lt;/a&gt;.  Thank you for reading! &lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>css</category>
      <category>html</category>
    </item>
  </channel>
</rss>
