<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Add a 'Slider' to your Website using CSS and Javascript</title>
      <author>Devang Saklani</author>
      <pubDate>Sun, 27 Jun 2021 13:38:11 +0000</pubDate>
      <link>https://dev.to/devang/add-a-slider-to-your-website-using-css-and-javascript-238e</link>
      <guid>https://dev.to/devang/add-a-slider-to-your-website-using-css-and-javascript-238e</guid>
      <description>&lt;p&gt;In this article I will tell you several ways to &lt;strong&gt;add a Slider to your website&lt;/strong&gt; and how you can use these sliders to make your website look more &lt;strong&gt;Attractive&lt;/strong&gt; and more &lt;strong&gt;Functional&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-of-all-what-is-meant-by-slider"&gt;
  &lt;/a&gt;
  First of all, What is meant by slider?
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;slider&lt;/strong&gt; is a term that refers to a slideshow on a website. An example of a &lt;strong&gt;slider&lt;/strong&gt; can be a revolving carousel that displays products or photos.&lt;/p&gt;

&lt;p&gt;Types of Sliders we are going to build:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;With plain CSS and JS (not recommended)&lt;/li&gt;
&lt;li&gt;Using CSS frameworks (like Bootstrap)&lt;/li&gt;
&lt;li&gt;Using JS libraries (best way)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#slider-using-plain-css-and-js"&gt;
  &lt;/a&gt;
  Slider using plain CSS and JS
&lt;/h1&gt;

&lt;p&gt;In this method we will use only CSS and a little bit of JS for making a slider. This is a simple demo of it :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvUTcywa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64rqh5qsc01hqumylg56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvUTcywa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/64rqh5qsc01hqumylg56.png" alt="W3Scchools slider example"&gt;&lt;/a&gt;&lt;br&gt;
Codepen example: &lt;a href="https://codepen.io/devang47/pen/OJmLELR"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can &lt;strong&gt;customize&lt;/strong&gt; it as much as you want (if you know how to).&lt;br&gt;
I won't do deeper into its working as it is already full explained by W3Schools in &lt;a href="https://www.w3schools.com/howto/howto_js_slideshow.asp"&gt;this article.&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;And a person Named &lt;a href="https://www.toptal.com/css/full-page-slider-css-and-javascript"&gt;Stefan Vitasovic&lt;/a&gt; has &lt;strong&gt;made  a cool slider&lt;/strong&gt; using plain CSS and JS. I would recommened you to check-out his method, If you are making it with plain JS. Check out what he made &lt;strong&gt;&lt;a href="http://stefan.lynxdev.io/projects/fullscreen-slider/"&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would suggest not to use this method if you are a beginner as this method is most complicated. But it can be really helpful to you in some way! i.e. you will get deeper knowledge of It's working and I am sure you will learn many things from it.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#using-css-libraries-bootstrap"&gt;
  &lt;/a&gt;
  Using CSS libraries (Bootstrap)
&lt;/h1&gt;

&lt;p&gt;In this method we will use &lt;strong&gt;&lt;em&gt;Bootstrap&lt;/em&gt;&lt;/strong&gt; to make a Image slider.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pR3_-hJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s48fjyhnt26vb5dc8gh0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pR3_-hJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s48fjyhnt26vb5dc8gh0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, import bootstrap CSS and JS files from any CDN network (for a quick setup).&lt;br&gt;
Then go to &lt;a href="https://getbootstrap.com/docs/5.0/components/carousel/"&gt;this page&lt;/a&gt; to get the HTML Markup or just copy this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel"&amp;gt;
  &amp;lt;div class="carousel-inner"&amp;gt;
    &amp;lt;div class="carousel-item active"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1623646230868-48e8e88b38e4?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="carousel-item"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1599636647429-8cbd70bead58?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="carousel-item"&amp;gt;
      &amp;lt;img src="https://images.unsplash.com/photo-1622556474520-59904a30f654?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" class="d-block w-100" alt="..."&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev"&amp;gt;
    &amp;lt;span class="carousel-control-prev-icon" aria-hidden="true"&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;span class="visually-hidden"&amp;gt;Previous&amp;lt;/span&amp;gt;
  &amp;lt;/button&amp;gt;
  &amp;lt;button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next"&amp;gt;
    &amp;lt;span class="carousel-control-next-icon" aria-hidden="true"&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;span class="visually-hidden"&amp;gt;Next&amp;lt;/span&amp;gt;
  &amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

// Bootstrap CSS and JS files 
&amp;lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"&amp;gt;
&amp;lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Codepen example: &lt;a href="https://codepen.io/devang47/pen/vYmBrXN"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can do many customizations like: add &lt;strong&gt;Controls&lt;/strong&gt;, &lt;strong&gt;Indicators&lt;/strong&gt;, &lt;strong&gt;Captions&lt;/strong&gt;, &lt;strong&gt;Custom Transition effects&lt;/strong&gt; etc. by reading their documentation &lt;a href="https://getbootstrap.com/docs/5.0/components/carousel/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All I have to say about this is that this is a really easy and fast way to add/make a slider in your Website without compromising anything. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-javascript-library-to-add-a-slider"&gt;
  &lt;/a&gt;
  Using Javascript library to add a slider
&lt;/h1&gt;

&lt;p&gt;This is (according to me) the best way to add a Image/Normal Slider with good Animations in your website.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cbd31G7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g4i3ntecjr5k8uubjur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cbd31G7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g4i3ntecjr5k8uubjur.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
 In this we will use a JS library called &lt;strong&gt;&lt;a href="https://swiperjs.com/"&gt;SwiperJS&lt;/a&gt;&lt;/strong&gt;. You can use others too, but this one is &lt;strong&gt;maintained&lt;/strong&gt; and really &lt;strong&gt;popular&lt;/strong&gt; among developers. Also the things and &lt;strong&gt;customizations&lt;/strong&gt; you can do with it are just Amazing.&lt;/p&gt;

&lt;p&gt;Also, This library has support for Swipe gestures (which is a really difficult thing to make with plain JS). Check example &lt;a href="https://swiperjs.com/demos"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#but-how-to-make-it-work"&gt;
  &lt;/a&gt;
  &lt;strong&gt;But, How to make it work?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;First of all import it's CSS and JS files from any CDN network, or just copy these links:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;// Both are same (import any one)
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.min.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

// Same here (import any one)
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/swiper/swiper-bundle.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Basic HTML markup:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="swiper-container"&amp;gt;
  &amp;lt;!-- Additional required wrapper --&amp;gt;
  &amp;lt;div class="swiper-wrapper"&amp;gt;
    &amp;lt;!-- Slides --&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1623646230868-48e8e88b38e4?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1599636647429-8cbd70bead58?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class="swiper-slide"&amp;gt;  &amp;lt;img src="https://images.unsplash.com/photo-1622556474520-59904a30f654?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=crop&amp;amp;fm=jpg&amp;amp;h=720&amp;amp;ixlib=rb-1.2.1&amp;amp;q=80&amp;amp;w=1280" style="width:100%"&amp;gt;&amp;lt;/div&amp;gt;
    ...
  &amp;lt;/div&amp;gt;
  &amp;lt;!-- If we need pagination --&amp;gt;
  &amp;lt;div class="swiper-pagination"&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;!-- If we need navigation buttons --&amp;gt;
  &amp;lt;div class="swiper-button-prev"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class="swiper-button-next"&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;!-- If we need scrollbar --&amp;gt;
  &amp;lt;div class="swiper-scrollbar"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These images in &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; are placeholders, you can change these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic CSS:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
.swiper-container {
  width: calc(1280px/2);
  height: calc(720px/2);
}


//buttons
.swiper-button-next, .swiper-container-rtl .swiper-button-prev {
  color: white;
}
.swiper-button-prev, .swiper-container-rtl .swiper-button-next{
  color: white;
}

//swiper bullets
.swiper-pagination-bullet-active{
  background-color: white;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Basic JS:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const swiper = new Swiper('.swiper-container', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,

  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
  },

  // Navigation arrows
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
  },

  // And if we need scrollbar
  scrollbar: {
    el: '.swiper-scrollbar',
  },
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is really &lt;strong&gt;Easy to setup&lt;/strong&gt; and it is &lt;strong&gt;highly maintained&lt;/strong&gt; library. You can do many customizations in this library such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;turn off &lt;strong&gt;Preloading Images&lt;/strong&gt; to get &lt;strong&gt;Lazyload&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;use &lt;code&gt;swiper.activeIndex&lt;/code&gt; in JS to get current index of frame&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Add a slider inside a Slider&lt;/strong&gt; and many more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would recommened you to read their &lt;strong&gt;Official Documentation&lt;/strong&gt; &lt;a href="https://github.com/nolimits4web/swiper"&gt;here&lt;/a&gt; or Check out some &lt;strong&gt;Examples&lt;/strong&gt; &lt;a href="https://swiperjs.com/demos"&gt;here&lt;/a&gt; to get more information about this Library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-implement-these-sliders-for-better-uiux"&gt;
  &lt;/a&gt;
  How to Implement these Sliders for better UI/UX:
&lt;/h2&gt;

&lt;p&gt;TBH I don't know much about Design, so I would recommened you to read these articles to get proper information about &lt;strong&gt;Where/How to use Sliders for better UI and UX&lt;/strong&gt; : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.shift4shop.com/sliders-web-design"&gt;https://blog.shift4shop.com/sliders-web-design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://smartslider3.com/blog/homepage-slider-examples/"&gt;https://smartslider3.com/blog/homepage-slider-examples/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A post by Devang. Hope it helps!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Run creat-react-app with HTTPS</title>
      <author>Pranjal Jain</author>
      <pubDate>Sun, 27 Jun 2021 13:19:00 +0000</pubDate>
      <link>https://dev.to/pranjaljain0/run-creat-react-app-with-https-4ep6</link>
      <guid>https://dev.to/pranjaljain0/run-creat-react-app-with-https-4ep6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In current days we host websites on &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; and &lt;a href="https://www.netlify.com"&gt;Netlify&lt;/a&gt; and we are automatically assigned a generated SSL to provide with Secured connection(HTTPS), but in the development period we are unaware of the process to run it with HTTPS and we miss out on some testing which works only on HTTPS like google apis, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Configure creat-react-app project to handle https&lt;/li&gt;
&lt;li&gt;Generate SSL Certificates for localhost&lt;/li&gt;
&lt;li&gt;Add certificates to the project&lt;/li&gt;
&lt;li&gt;Trust certificate in browser&lt;/li&gt;
&lt;li&gt;Run the project secured&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#configure-creatreactapp-project-to-handle-https"&gt;
  &lt;/a&gt;
  Configure creat-react-app project to handle https
&lt;/h3&gt;

&lt;p&gt;Add a file &lt;code&gt;.env&lt;/code&gt; in the root directory of the project with the line&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HTTPS=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#generate-ssl-certificates-for-localhost"&gt;
  &lt;/a&gt;
  Generate SSL Certificates for localhost
&lt;/h3&gt;

&lt;p&gt;Follow this article to generate a SSL certificate for localhost. and place the certificates in the root directory.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/pranjaljain0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3T-ID9xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bxfA76Io--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/476007/fd6c70da-c0dc-434e-9956-fc722081b87c.png" alt="pranjaljain0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pranjaljain0/generate-an-ssl-certificate-with-the-root-certificate-for-localhost-18je" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Generate an SSL Certificate With the Root Certificate for localhost&lt;/h2&gt;
      &lt;h3&gt;Pranjal Jain ・ Jun 24 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webassembly&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
after following this article you must have 8 new files in your directory, which are&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rootCA.key
rootCA.pem
rootCA.srl
server.crt
server.csr
server.csr.cnf
server.key
v3.ext
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-certificates-to-the-project"&gt;
  &lt;/a&gt;
  Add certificates to the project
&lt;/h3&gt;

&lt;p&gt;in the &lt;code&gt;.env&lt;/code&gt; file add these two properties and there paths.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SSL_CRT_FILE=server.crt
SSL_KEY_FILE=server.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you will be using the &lt;code&gt;server.crt&lt;/code&gt; as your certificate file &amp;amp; &lt;code&gt;server.key&lt;/code&gt; as your key for certificate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#trust-certificate-in-browser"&gt;
  &lt;/a&gt;
  Trust certificate in browser
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.techrepublic.com/article/how-to-add-a-trusted-certificate-authority-certificate-to-chrome-and-firefox/"&gt;Follow this article&lt;/a&gt; to trust the certificate on your browser &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-the-project-secured"&gt;
  &lt;/a&gt;
  Run the project secured
&lt;/h3&gt;

&lt;p&gt;Hence you have HTTPS enabled for your project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oBy64XZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1310j6p88oh03b0nqrx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oBy64XZe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1310j6p88oh03b0nqrx.png" alt="HTTPS Enabled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're stuck anywhere do leave a comment.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter at &lt;a href="https://twitter.com/pranjaljain0"&gt;Twitter/pranjaljain0&lt;/a&gt;&lt;br&gt;
Follow me on Github at &lt;a href="https://github.com/pranjaljain0"&gt;github/pranjaljain0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webpack</category>
      <category>security</category>
    </item>
    <item>
      <title>LAUNCHING MATLAB MONDAYS💥, a Crash Course✨🌟</title>
      <author>Aatmaj</author>
      <pubDate>Sun, 27 Jun 2021 12:58:37 +0000</pubDate>
      <link>https://dev.to/aatmaj/launching-matlab-mondays-a-crash-course-nb1</link>
      <guid>https://dev.to/aatmaj/launching-matlab-mondays-a-crash-course-nb1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone-get-ready-for-the-blast-launching-the-all-new-matlab-crash-course"&gt;
  &lt;/a&gt;
  Hello everyone⭐ Get ready for the blast💣❤️‍🔥 Launching the all new MATLAB crash course. 💎
&lt;/h2&gt;




&lt;p&gt;So dear friends ✔️ I have decided to launch a crash course 🧲 to cover all the basics of MATLAB 😇. This course will be launched on this platform every Monday😊 I will quickly 💨 cover all the basics required.🌤️ &lt;/p&gt;

&lt;p&gt;This is ideally a binge-course for fast-tracking through MATLAB.🏃‍♀️🏃 All the blogs are 2-3 minutes read. 🎲&lt;/p&gt;

&lt;p&gt;In case you want more advanced topics to be covered, please put them in the comment box below 👇 and I will cover them 💦 after the basics🎈🎈🎈&lt;/p&gt;




&lt;p&gt;Before learning MATLAB, I would like to share a few words of caution.😵 MATLAB is neither free nor open. 😞 Unless you are a student ✍️ affiliated to any university 🏫 MATLAB might not be the best fit for you. However, there are good alternatives to MATLAB as mentioned &lt;a href="https://perso.crans.org/besson/matlab-clones.en.html"&gt;here&lt;/a&gt;.😎&lt;br&gt;
Among these options, I would however advise two alternatives✋- Python (with scientific add-ons) and the Julia language. Julia is a better alternative 👌 to MATLAB with syntax very similar to it.🔆 You can read more about the benefits of Julia &lt;a href="https://www.linkedin.com/posts/wonderbiz-technologies_julia-programming-language-the-rising-star-activity-6812722852954017793-NDEd"&gt;here&lt;/a&gt;.👏 &lt;br&gt;
However one point of advantage 🪔 is that the syntax of MATLAB is very similar to that of GNU Octave 🌈, so in case you want to proceed your research there🥕, you might find this course of advantage.🌞&lt;/p&gt;

</description>
      <category>matlab</category>
    </item>
    <item>
      <title>I bought new Macbook Air M1 (one of my goals completed)</title>
      <author>Thu Htet Tun</author>
      <pubDate>Sun, 27 Jun 2021 12:36:56 +0000</pubDate>
      <link>https://dev.to/thuhtetdev/i-bought-new-macbook-air-m1-one-of-my-goals-completed-2kbb</link>
      <guid>https://dev.to/thuhtetdev/i-bought-new-macbook-air-m1-one-of-my-goals-completed-2kbb</guid>
      <description>&lt;p&gt;Hello Guys!&lt;/p&gt;

&lt;p&gt;Buying a new macbook is one of my goals in this year.&lt;br&gt;
And I got it. This is my very first macbook. &lt;br&gt;
I'm ready to use this for my educational &amp;amp; career purposes.&lt;/p&gt;

&lt;p&gt;I uploaded vlog on my YouTube Channel.&lt;br&gt;
If you want to see my happiness, please go for it. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#youtube-link"&gt;
  &lt;/a&gt;
  YouTube link
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=neagi_Pej1g"&gt;https://www.youtube.com/watch?v=neagi_Pej1g&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>My Dev Journey: Week 8</title>
      <author>Harry York</author>
      <pubDate>Sun, 27 Jun 2021 12:07:16 +0000</pubDate>
      <link>https://dev.to/harryyork97/my-dev-journey-week-8-4k8d</link>
      <guid>https://dev.to/harryyork97/my-dev-journey-week-8-4k8d</guid>
      <description>&lt;p&gt;This week was careers week on my coding bootcamp, and as such this week was a lot less new concept heavy as many of the previous weeks have been. Instead of new technologies we had a few lectures on CV writing, portfolio preparation, and technical tests.&lt;/p&gt;

&lt;p&gt;If you've enjoyed any of my blog series, then maybe consider following me on &lt;a href="https://twitter.com/grand_oldduke"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/harryyork97"&gt;GitHub&lt;/a&gt; 😁 and I'd also really appreciate if you all could check out my new &lt;a href="https://harryyork.dev/"&gt;portfolio site&lt;/a&gt; 🙏🏼 and maybe leave a few beginner project ideas in the comments to give me some inspiration!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-ive-done-this-week"&gt;
  &lt;/a&gt;
  What I've done this week
&lt;/h2&gt;

&lt;p&gt;Whilst I created my first development CV during this week the two most important things I've done this week were completing a back-end project I worked on during the back-end portion of the course, this involved a broad scope of unit and integration testing. And then once I was happy with the functionality of my API I hosted it on Heroku which what the first time I've hosted anything. And then I got to write my first README for the repo, and I wanted to make this one as good as I could becasue it's the first I've written and I've really enjoyed this project and didn't want to half-do the last thing 😁&lt;/p&gt;

&lt;p&gt;But by far the thing I'm most excited about this week, is buying my first domain for my &lt;a href="https://harryyork.dev/"&gt;portfolio site&lt;/a&gt;, and creating my first front-end project. We've not done the front end block of the course (this starts next week) but I wanted to complete a portfolio site that I could link to in my CV, for job applications (if any hiring managers are reading my blog still on week 8, then please hire me 😅) and socials too! My portfolio uses a bootstrap template but I went through and dipped my toes in the luke warm waters of HTML and CSS to make it match a style closer to my CV styling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-ive-found-useful-this-week"&gt;
  &lt;/a&gt;
  Resources I've found useful this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-google-domains-on-github-pages"&gt;
  &lt;/a&gt;
  Setting up google domains on GitHub pages
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://dev.to/trentyang/how-to-setup-google-domain-for-github-pages-1p58"&gt;dev&lt;/a&gt; article was really useful in helping guide through setting up my newly minted domain, with github pages, as well as the &lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site"&gt;GitHub Pages docs&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap-docs"&gt;
  &lt;/a&gt;
  Bootstrap docs
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/"&gt;bootstrap docs&lt;/a&gt; were crucial for my brief intro to HTML and CSS work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#design-inspiration"&gt;
  &lt;/a&gt;
  Design inspiration
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.canva.com/en/"&gt;Canva&lt;/a&gt; was pretty useful in getting design inspiration for structure of my CV, I then created my CV in Affinity Publisher, which took a fair bit of getting used to again, because I'm much more used to Adobe InDesign&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>bootcamp</category>
    </item>
    <item>
      <title>Getting Started with 'Git'</title>
      <author>BHAVIN VIRANI</author>
      <pubDate>Sun, 27 Jun 2021 11:49:29 +0000</pubDate>
      <link>https://dev.to/bhavinvirani/getting-started-with-git-1jlj</link>
      <guid>https://dev.to/bhavinvirani/getting-started-with-git-1jlj</guid>
      <description>&lt;p&gt;In this Blog i'll cover some basic commands of git, using that command you can easily work with git and Github as beginner.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Before starting this this blog I want to mention that &lt;code&gt;Git&lt;/code&gt; and &lt;code&gt;Github&lt;/code&gt; are not same. many people are understandably confused😕 between this two words at their beginning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#github-is-a-website-for-hosting-projects-that-use-git-for-version-control"&gt;
  &lt;/a&gt;
  GitHub is a website for hosting projects that use git for version control.
&lt;/h4&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-git-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;git&lt;/code&gt; ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Git is a version control system (VCS) that makes easier to track changes to files(code). For example, when you edit a file, git can help you to determine exactly what changed in your file, who changed that file, and why change that.&lt;/li&gt;
&lt;li&gt;Git is a command line tool. it is very useful when we are working on team project or multiple people working on same project&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#what-is-raw-github-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;github&lt;/code&gt; ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GitHub is a Git repository hosting service, but it adds many of its own features. GitHub provides a Web-based graphical interface. It also provides access control and several collaboration features&lt;/li&gt;
&lt;li&gt;Git also helps us to store our code safe and secure🔐 and many people use git and github daily to track their daily work. It makes them different from others.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To use git we'll need to download and install git on our system by using &lt;a href="https://git-scm.com/downloads"&gt;git&lt;/a&gt;. There are both options are available in market. command-line interface(CLI) and graphical user interface(GUI) as Github desktop but I recommend CLI for beginners.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After installation to check if git was installed properly or not execute the command:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#first-step-after-installing-git"&gt;
  &lt;/a&gt;
  First step after Installing Git
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The first thing you should do when you install Git is to set your user-name and email address. This is important because every Git commit uses this information&lt;/li&gt;
&lt;li&gt;you can set your user-name and email using this commands and  also change them at any time
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"&amp;lt;User-Name&amp;gt;"&lt;/span&gt;
git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &amp;lt;Email&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#create-local-git-repository"&gt;
  &lt;/a&gt;
  Create local git repository
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We'll require git repository to use functionalities of git by using given command.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;This'll create hidden &lt;code&gt;.git&lt;/code&gt; folder in current directory. this is the "repository"(or repo) where git stores all of its internal tracking data. Any changes you make to any files within the original folder will now be possible to track.&lt;/li&gt;
&lt;li&gt;The original directory is now referred as working directory.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#staging"&gt;
  &lt;/a&gt;
  Staging
&lt;/h2&gt;

&lt;p&gt;The staging area (aka index) is a container where git collects all changes which will be part of the next commit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use below showen comannd to add individual files into staging area
&lt;code&gt;git add &amp;lt;File1 path&amp;gt; &amp;lt;File2 path&amp;gt;...&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add README.md app/&lt;span class="k"&gt;*&lt;/span&gt;.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;we also stage all changes together&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add -A
OR
git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#status"&gt;
  &lt;/a&gt;
  status
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git staus&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Above command is very useful. It gives overall status of working git directory&lt;/li&gt;
&lt;li&gt;The git status command displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git.

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#commit"&gt;
  &lt;/a&gt;
  Commit
&lt;/h2&gt;

&lt;p&gt;The "commit" command is used to save your changes to the local repository. we also need commit message it is important to help other people understand what was changed and why you changed it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;" &amp;lt;Commit message&amp;gt; "&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#push"&gt;
  &lt;/a&gt;
  push
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;git push&lt;/code&gt; command is used to upload local repository content to a remote repository.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;But there is one problem. we can't push directly our local repository to remote repo. in Order to do that first we need create repository on githuib and configure that remote repository with local repository. let's see how&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git remote add &amp;lt;remote_name&amp;gt; &amp;lt;remote_repo_url&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add origin https://github.com/bhavinvirani/my_repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after creatig a repository on the GitHub, You will find the link on that repository itself&lt;/p&gt;

&lt;p&gt;Now, we can push our data on remote repository using this command&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git push &amp;lt;remote_name&amp;gt; &amp;lt;remote_branch_name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;If you are pushinga local branch for the first time on a remote, the "-u" option is helpful. It makes sure that a tracking connection between the local and your remote branch.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;After having set tracking connection, you can perform future pushes without providing additional options - since the tracking connection provides default values for the push command.&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#here-i-show-whole-flow-of-git-commands"&gt;
  &lt;/a&gt;
  Here i Show whole flow of git commands
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;span class="c1"&gt;// make same changes in working directory&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;A&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;commit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;made some changes in working directory&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;remote&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/bhavinvirani/my_repo.git&lt;/span&gt;
&lt;span class="nx"&gt;git&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="nx"&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this blog we learned basic command of git and how to push our local repository to remote repository, It is good to use git and github daily to track our code or data.&lt;/p&gt;

&lt;p&gt;Stay tuned for some advanced git commands and topics like branches and operations with remote repository which I cover in next article of this series&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checkout-my-raw-github-%F0%9F%91%81-endraw-"&gt;
  &lt;/a&gt;
  checkout my &lt;code&gt;Github 👁&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bhavinvirani"&gt;
        bhavinvirani
      &lt;/a&gt; / &lt;a href="https://github.com/bhavinvirani/bhavinvirani"&gt;
        bhavinvirani
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;

&lt;/div&gt;  

&lt;h1&gt;
Hi 👋, I'm Bhavin!&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
🌱 currently I'm &lt;code&gt;learning&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
🥅 2021 Goal: Contribute to Open Source stuff&lt;/li&gt;
&lt;li&gt;
👯 I’m looking to collaborate on JS project&lt;/li&gt;
&lt;li&gt;
📪 How to reach me: &lt;code&gt;bhavinvirani45@gmail.com&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
Connect with me&lt;/h3&gt;

&lt;p&gt;
&lt;a href="https://www.linkedin.com/in/bhavin-virani-2a14441b7/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e3d78e5310a41c0667e07077cf93596229de398b154b83885dc068874ed5365/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c696e6b6564696e2d2532333145373742352e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d7768697465" alt="[/in/bhavin-virani-2a14441b7/](https://www.linkedin.com/in/bhavin-virani-2a14441b7/)" height="30" width="120"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/BhavinVirani45" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13039975938e719b60e38191d050a182c1615f0e64a87494792c510ee111917a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d2532333030616365652e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d74776974746572266c6f676f436f6c6f723d7768697465" alt="[BhavinVirani45](twitter.com/BhavinVirani45)" height="30" width="100"&gt;&lt;/a&gt;
&lt;a href="https://dev.to/bhavinvirani" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd31e3397cb63ddbff05c6cc2c20e40ea5f2764cb752980c7dc62e2e09edc72d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6465762d2532333234323932652e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d646576646f74746f266c6f676f436f6c6f723d7768697465" alt="[/bhavinvirani](https://dev.to/bhavinvirani)" height="30" width="100"&gt;&lt;/a&gt;
&lt;a href="https://discord.com/channels/bhavin_45#0852" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/8cdc282c3750da790f197e36002d577eeee4bf783e0be1f946a73eaf1340d6a9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646973636f72642d253233303042332e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465" alt="https://discord.com/channels/bhavin_45#0852" height="30" width="100"&gt;

&lt;/a&gt;
&lt;/p&gt;




&lt;h3&gt;
Languages and Tools&lt;/h3&gt;

&lt;p&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QG_b2spU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg" alt="javascript" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://nodejs.org/en/docs/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbyWitP7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original.svg" alt="javascript" width="40" height="40"&gt; &lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7B8eMcKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original.svg" width="40" height="40"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/bhavinvirani/bhavinvirani/main/#"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-ExagyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/mongodb/mongodb-original-wordmark.svg" alt="mongodb" width="40" height="40"&gt; &lt;/a&gt;

 &lt;a href="https://www.python.org" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ka8K9yX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg" alt="python" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.w3.org/html/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QXRvq6Ke--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg" alt="html5" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://git-scm.com/" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/fbfcb9e3dc648adc93bef37c718db16c52f617ad055a26de6dc3c21865c3321d/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6769742d73636d2f6769742d73636d2d69636f6e2e737667" alt="git" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.w3schools.com/css/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mHD1LdvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg" alt="css3" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://getbootstrap.com" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38b8DYFn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg" alt="bootstrap" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://heroku.com" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/df12cb598044a3f38efc1f45e3580558c324cf8789b79487125044eeebcc4dee/68747470733a2f2f7777772e766563746f726c6f676f2e7a6f6e652f6c6f676f732f6865726f6b752f6865726f6b752d69636f6e2e737667" alt="heroku" width="40" height="40"&gt; &lt;/a&gt; 
&lt;a href="https://www.mysql.com/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IfMZ2i4X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/mysql/mysql-original-wordmark.svg" alt="mysql" width="40" height="40"&gt; &lt;/a&gt;
&lt;a href="https://www.linux.org/" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vSVMkLYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devicons/devicon/master/icons/linux/linux-original.svg" alt="linux" width="40" height="40"&gt; &lt;/a&gt;
&lt;/p&gt;




&lt;div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/884e0d1886d6bf88350bbc1f4b0163c618ce8412fd378bfa53718748b0b4082b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d62686176696e766972616e69267468656d653d6461726b266c616e67735f636f756e743d36266c6f63616c653d656e266c61796f75743d636f6d70616374"&gt;&lt;img src="https://camo.githubusercontent.com/884e0d1886d6bf88350bbc1f4b0163c618ce8412fd378bfa53718748b0b4082b/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67733f757365726e616d653d62686176696e766972616e69267468656d653d6461726b266c616e67735f636f756e743d36266c6f63616c653d656e266c61796f75743d636f6d70616374" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/170978bac3ed2ee09947e74522f9fca4080a98d146f5d1544fa14299db390a13/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d62686176696e766972616e69267468656d653d6461726b2626636f756e745f707269766174653d7472756573686f775f69636f6e733d7472756526686964653d697373756573"&gt;&lt;img src="https://camo.githubusercontent.com/170978bac3ed2ee09947e74522f9fca4080a98d146f5d1544fa14299db390a13/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d62686176696e766972616e69267468656d653d6461726b2626636f756e745f707269766174653d7472756573686f775f69636f6e733d7472756526686964653d697373756573" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1fe71c8ea351bccd471794d02679f8277357816c52c5fb454bfee7d08c865e5e/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d62686176696e766972616e69267468656d653d6461726b"&gt;&lt;img src="https://camo.githubusercontent.com/1fe71c8ea351bccd471794d02679f8277357816c52c5fb454bfee7d08c865e5e/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2f3f757365723d62686176696e766972616e69267468656d653d6461726b" alt="bhavinvirani"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/029218399283d3a9edf6117b31cb75fde56adf885cfbbea312100f3793be6c49/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d62686176696e766972616e69266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174"&gt;&lt;img src="https://camo.githubusercontent.com/029218399283d3a9edf6117b31cb75fde56adf885cfbbea312100f3793be6c49/68747470733a2f2f6b6f6d617265762e636f6d2f67687076632f3f757365726e616d653d62686176696e766972616e69266c6162656c3d50726f66696c65253230766965777326636f6c6f723d306537356236267374796c653d666c6174" alt="bhavinvirani" width="130" height="25"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bhavinvirani/bhavinvirani"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>beginners</category>
      <category>github</category>
      <category>git</category>
    </item>
    <item>
      <title>How to create a smooth draggable list with react in 10 mins</title>
      <author>Augustus Otu</author>
      <pubDate>Sun, 27 Jun 2021 11:43:01 +0000</pubDate>
      <link>https://dev.to/augani/how-to-create-a-smooth-draggable-list-with-react-in-10-mins-2fbn</link>
      <guid>https://dev.to/augani/how-to-create-a-smooth-draggable-list-with-react-in-10-mins-2fbn</guid>
      <description>&lt;p&gt;Welcome to another tutorial!!&lt;/p&gt;

&lt;p&gt;Today, we are going to create a draggable list that you can use in your react applications with ease, using framer-motion. If you go to their examples page on  &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt"&gt;codesandbox&lt;/a&gt; , you will see this implemented. In case you want to know how you can do it yourself, read on.&lt;/p&gt;

&lt;p&gt;To start, if you have a list of items in a container or div that you want to have your users reorder by just dragging one item over another to swap positions, it's not a hustle since you are in the right place. This is what we are going to build in a few minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRiw6JXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624633429677/_MvQHtavH.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRiw6JXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624633429677/_MvQHtavH.gif" alt="chrome-capture.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the code, my favorite part!!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Item&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a normal react app where you are exporting the main component called App. We have another component below that will be the item in the main we will be dragging. A list that we map to produce our six items in the main app.&lt;/p&gt;

&lt;p&gt;For now, our item component is just normal div with no properties to make it interactive, we add the framer motion package since that is what we will be using.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add framer-motion //or
npm i framer-motion
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When its done doing it magic, we import it into our file and get the &lt;strong&gt;motion&lt;/strong&gt; element from &lt;em&gt;'framer-motion'&lt;/em&gt;. Then change our normal div in the &lt;strong&gt;Item&lt;/strong&gt; component to &lt;em&gt;motion.div&lt;/em&gt;, so we have properties we can use to drag and reorder the item when rendered.&lt;/p&gt;

&lt;p&gt;Next, we will have to add the properties we want to use;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;drag&lt;/strong&gt;- this will allow us drag our div when rendered in the page. This takes in two types, a boolean and string(x or y). When set to true, we can drag the component in both direction, when set to &lt;strong&gt;y&lt;/strong&gt; we can only drag it up or down and &lt;strong&gt;x&lt;/strong&gt;, left or right. For this tutorial we only want our users dragging it either up or down, so we set it to &lt;strong&gt;y&lt;/strong&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;drag&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what the code looks like now. If you dragged the element, you will realise it goes outside our container that the list rendered in. We don't want that, so we need to add constraints to make sure users can only drag within the container.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;dragConstraints&lt;/strong&gt; - this takes an object of the four sides of the area the item is in, top, bottom, left, right. These accept values as pixels. How far away from the top, bottom, left or right should be the limit, where the component can't be dragged across. If you give it a &lt;strong&gt;top&lt;/strong&gt; of &lt;strong&gt;0&lt;/strong&gt;, it means the element can only be dragged to the very edge of the top of the parent component, in this case, our container.
If you give it a &lt;strong&gt;10&lt;/strong&gt;, it means it can be dragged up to 10px from the top of the parent component. For our case, we want it to be able to reach the edges and since we are only dragging on the &lt;strong&gt;y&lt;/strong&gt; axis, we only need to take care of the top and bottom.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;dragListeners&lt;/strong&gt; - One thing we also need to take care of is to know when the item is being dragged and when it is dropped after dragging. This will help us be able to reorder the items very well. 
When dragging the item, we might want to help the users know by performing some form of animation on the item being dragged by either increasing it in size or decreasing it, just to differentiate that from the other items.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;layout&lt;/strong&gt; - We will add this property as well to help us animate the item when dragging as it will be changing position i n the list. Framer motion has done a lot of work for us to have these cool stuff. &lt;a href="https://www.framer.com/api/motion/animation/#layout-animations"&gt;Read more&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;animations&lt;/strong&gt; - We also might want to add a couple of animations to the item that will be dragged, in our case, we can add the whileHover and whileTap properties or leave it, I ill but you can check the docs later and add. I think the name gives a hint about what each does. When the item is hovered, do this, when the item is tapped or clicked, do that.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;controls&lt;/strong&gt; - We want to add the various functions that will be called to help us reorder our list when it is dragged from one position to the other. They are &lt;strong&gt;updateOrder&lt;/strong&gt; and &lt;strong&gt;updatePosition&lt;/strong&gt;, and we will use the &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt?file=/src/use-position-reorder.js:0-1772"&gt;usePositionReOrder&lt;/a&gt; and &lt;a href="https://codesandbox.io/s/framer-motion-2-drag-to-reorder-fc4rt?file=/src/use-measure-position.js"&gt;useMeasurePosition&lt;/a&gt; hooks. We don't need to rewrite our own.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What &lt;strong&gt;usePositionReorder&lt;/strong&gt; hook does is reorder our list that is rendered when we drag an item from one position to the other and also updates the position of the item given its new position after the drag event. Use measure position uses the ref of the item to determine its position from where it was dragged from and where it has been placed and its index in the list. This is what it uses to send the data to &lt;strong&gt;updatePosition&lt;/strong&gt; from the &lt;strong&gt;usePositionReOrder&lt;/strong&gt; hook. So it will take data from the item being dragged such as its dragoffset vertically, since we are only dragging along the y axis. This will help the hook swap the item that we are changing positions with the dragged item.&lt;/p&gt;

&lt;p&gt;When the item is being dragged, aside from letting the component itself know that it is in a dragging state, we have to let our &lt;strong&gt;usePositionReOrder&lt;/strong&gt; hook know, using another property which is the &lt;strong&gt;onViewBoxUpdate&lt;/strong&gt; prop. This property is a callback that will fire every time the viewport is updated due to a drag activity. And it sends the delta of the item and the index to &lt;strong&gt;updateOrder&lt;/strong&gt; from the &lt;strong&gt;usePositionReorder&lt;/strong&gt; hook. The list is reordered and sent back to us in the &lt;strong&gt;orderedList&lt;/strong&gt; and a new list is rendered into our view. &lt;/p&gt;

&lt;p&gt;Our code finally looks like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;motion&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;framer-motion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;usePositionReorder&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./usePositionReorder&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useMeasurePosition&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./useMeasurePosition&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item One&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Two&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Three&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item Four&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;updatedList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;usePositionReorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updatedList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Item&lt;/span&gt;
          &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ind&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isdragged&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMeasurePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updatePosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;zIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;dragConstraints&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;dragElastic&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;layout&lt;/span&gt;
      &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;itemRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onDragStart&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onDragEnd&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDragged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mf"&gt;1.05&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onViewportBoxUpdate&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;isdragged&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;updateOrder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;drag&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;motion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When clicking to drag the items in the list, you will realize they are a bit hard to drag from one end to the other. We can add the &lt;strong&gt;dragElastic&lt;/strong&gt; property of 1 to make it smoother.&lt;/p&gt;

&lt;p&gt;Now this is our look&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GOI_l7fK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624791455644/WYNY6AiNu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOI_l7fK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624791455644/WYNY6AiNu.gif" alt="chrome-capture (1).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The possibilities are endless, so go ahead and build something with it. A &lt;a href="https://github.com/Augani/react-draggable-list"&gt;link&lt;/a&gt; to the repo to view the entire code and &lt;a href="https://react-wt4hcq.stackblitz.io"&gt;live&lt;/a&gt;.&lt;br&gt;
And explore more with framer motion &lt;a href="https://www.framer.com/api/motion/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Till next time..&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>4 Steps to Select Color palette for your Project.</title>
      <author>Vansh Sharma</author>
      <pubDate>Sun, 27 Jun 2021 11:40:37 +0000</pubDate>
      <link>https://dev.to/vanshsh/4-steps-to-select-color-palette-for-your-project-ddl</link>
      <guid>https://dev.to/vanshsh/4-steps-to-select-color-palette-for-your-project-ddl</guid>
      <description>&lt;p&gt;Let's accept this if there is something that can haunt a Front-end Web Developer before starting any new project then that is &lt;strong&gt;Selecting the appropriate color scheme&lt;/strong&gt; unless you are among those fortunate ones (&lt;em&gt;Designers&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;If you are like me who always find it difficult to select &lt;strong&gt;Color Palette&lt;/strong&gt; for the projects. Then this &lt;strong&gt;4 Steps Guide&lt;/strong&gt; will help you. Without any further ado let's jump into the guide:&lt;/p&gt;

&lt;h2&gt;Step 1&lt;/h2&gt;

&lt;p&gt;Choose a &lt;strong&gt;Base color&lt;/strong&gt;: This will be the theme color for your project. Some points to keep in mind while selecting a base color.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select it from any given &lt;em&gt;requirements&lt;/em&gt; by the client&lt;/li&gt;
&lt;li&gt;Select it from the *established logo*of the company&lt;/li&gt;
&lt;li&gt;Don't go for the business &lt;em&gt;Competitors’&lt;/em&gt; colors&lt;/li&gt;
&lt;li&gt;Think of the target &lt;em&gt;audience&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;If you are still struggling you can go for any random color 
&lt;strong&gt;Remember&lt;/strong&gt; no color is bad color if combined properly and used carefully with other colors.&lt;/li&gt;
&lt;li&gt;Or you can refer to these sites : &lt;a href="https://www.awwwards.com/"&gt;Awwwards&lt;/a&gt;, &lt;a href="https://www.designspiration.com/"&gt;Designinspiration&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the sake of an example, we will take #30c9e8 &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M0qZ54qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w17d7bovs49h6f7ao0f0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M0qZ54qx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w17d7bovs49h6f7ao0f0.jpeg" alt="Base Color"&gt;&lt;/a&gt;&lt;br&gt;
Now we will make Color Palette around this color.&lt;/p&gt;

&lt;h2&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Find a &lt;strong&gt;Complementary color&lt;/strong&gt;: This color will mostly be used for links, buttons, CTA. This will help user to notice the important section of the website clearly. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to  &lt;a href="https://paletton.com/"&gt;Paletton&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Enter your &lt;strong&gt;Base color&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Toggle on &lt;strong&gt;Complementary color&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;You will find a new color on the right side of the screen copy the HEX number from there.&lt;/li&gt;
&lt;li&gt;and use it as &lt;strong&gt;complementary color&lt;/strong&gt; in your project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#color-palette"&gt;
  &lt;/a&gt;
  Color palette:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BjBSj06C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b1sxg8tg5zb52tny4ab.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BjBSj06C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b1sxg8tg5zb52tny4ab.jpeg" alt="Complementary color"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Step 3&lt;/h2&gt;

&lt;p&gt;Select &lt;strong&gt;Harmonious color&lt;/strong&gt;: Harmonious colors are those colors that sit next to each other in the &lt;strong&gt;color wheel&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create two shapes and fill them with  #424242  and #fafafa &lt;/li&gt;
&lt;li&gt;Insert a color fill layer above your two shapes&lt;/li&gt;
&lt;li&gt;Change that fill to your base color (#30c9e8)&lt;/li&gt;
&lt;li&gt;Set the blending mode to overlay, and bring the opacity right down to between 5 and 40% (in the example below, it’s set at 40%)&lt;/li&gt;
&lt;li&gt;Use the color picker and copy your new values&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#color-palette"&gt;
  &lt;/a&gt;
  Color palette:
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xq6dBimj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjw5f3yi1v5vucxq6c43.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xq6dBimj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjw5f3yi1v5vucxq6c43.jpeg" alt="Harmonious color"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Step 4&lt;/h2&gt;

&lt;p&gt;Add &lt;strong&gt;White color&lt;/strong&gt; to your palette: If you go through any website then you will find that they all have used &lt;strong&gt;white color&lt;/strong&gt; in one way or another for their website. Because it perfectly balances the overall contrast of the theme. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-palette"&gt;
  &lt;/a&gt;
  Final palette:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tl1qZfXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hspenqzmh0ixlnhd5v1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tl1qZfXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hspenqzmh0ixlnhd5v1.jpeg" alt="Final Palette"&gt;&lt;/a&gt;&lt;br&gt;
Hurrah!&lt;br&gt;
Our color palette is ready. Some points to remember:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Selection of colors, design is all about creativity, and creativity doesn't have &lt;strong&gt;hard-and-fast rule&lt;/strong&gt;. So give wings to your imagination and creativity and &lt;strong&gt;Let the work speak for itself.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;These were some of the basic rules to get started with if you are struggling to find the basic color palette. &lt;/li&gt;
&lt;li&gt;You can use as many colors as you want in your color palette. But we know &lt;em&gt;With great power comes great responsibility&lt;/em&gt;. So why go to 6-7 colors if you can do it in 4-5 colors.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Simplicity is the key to brilliance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt; Always keep your audience in mind while selecting the colors because ultimately they are on the receiving end.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all for this blog. Do let me know if this was helpful. &lt;br&gt;
Also, do share your feedback. Meet you in the next blog. Until then:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Keep learning, Keep moving&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Vanshsh2701"&gt;Twitter&lt;/a&gt; &lt;br&gt;&lt;br&gt;
 &lt;a href="https://www.linkedin.com/in/vanshsharma27/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;


&lt;p&gt;Credits:&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;cite&gt;&lt;br&gt;
 &lt;a href="https://www.smashingmagazine.com/2016/04/web-developer-guide-color/"&gt;Laura Elizabeth&lt;/a&gt; &lt;br&gt;
&lt;/cite&gt;&lt;/p&gt;

</description>
      <category>css</category>
    </item>
    <item>
      <title>Javascript: Under the hood</title>
      <author>Mayank Vats</author>
      <pubDate>Sun, 27 Jun 2021 11:02:47 +0000</pubDate>
      <link>https://dev.to/_mayankvats/javascript-under-the-hood-411n</link>
      <guid>https://dev.to/_mayankvats/javascript-under-the-hood-411n</guid>
      <description>&lt;p&gt;    One day, a curious guy named Thomas, who is a Software Developer, was wondering What does the execution context means? What actually happens when the JavaScript program first runs? If JavaScript is single threaded then how does it work asynchronously?&lt;/p&gt;

&lt;p&gt;    He then shifted himself into learning mode and started searching for the answers and wrote about all his learning, which I am going to share here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rocket-the-first-run"&gt;
  &lt;/a&gt;
  🚀 The First Run
&lt;/h2&gt;

&lt;p&gt;        Whenever we write the JavaScript code and execute it in our browser or in NodeJs, following things happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The compiler goes throw the whole source code, assigning memory to the variables, storing function definitions and creating Global Execution Context (Creation Phase).&lt;/li&gt;
&lt;li&gt;Then, it assigns the values to the variables, makes execution context on each function call, and also pushes the function onto the call stack (Execution Phase)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var message = "Hello World!";

const send = function (message) {
  const log = `"${message}" sent to the reciever`;
  console.log(log);
};

send(message);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;    For the code above, firstly the compiler reads through it and decides which variables need memory and what function definitions needs to be stored, this is the Creation Phase.&lt;/p&gt;

&lt;p&gt;    Secondly, the compiler goes through the code again and this time it assigns the values to the variables and looks for the function calls to create an Execution Context.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xVOO3etb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qmk58h03fh56pt3lq5d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVOO3etb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qmk58h03fh56pt3lq5d.jpeg" alt="Execution Context"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    In the image above GEC is the Global Execution Context, which is always at the base of the call stack, you may have seen something like &lt;code&gt;&amp;lt;anonymous&amp;gt;&lt;/code&gt; in the browser's console.&lt;/p&gt;

&lt;p&gt;    Similarly, when the send function is called, the creation and execution phases are carried out and an execution context is created.&lt;/p&gt;

&lt;p&gt;    Execution Context can be thought of as an environment or a place where the current code execution is taking place.&lt;/p&gt;

&lt;p&gt;    So, whenever the JavaScript code runs, very first execution context that is the Global Execution Context is created, this Global Execution Context is the place which is responsible for storage and execution of the rest of the code, then on every function call a new execution context gets created, which may also refer to its parent execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rocket-synchronous-nature"&gt;
  &lt;/a&gt;
  🚀 Synchronous Nature
&lt;/h2&gt;

&lt;p&gt; JavaScript is a single threaded programming language, that means, JavaScript engine has only one call stack and one memory heap. Due to the presence of only single call stack it can run single instruction at a time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3AcnfhRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r397i4sqmjhph4jegbq.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3AcnfhRh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2r397i4sqmjhph4jegbq.jpeg" alt="Call stack and Heap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Earlier, JavaScript was used for only dynamic rendering of elements in the web pages and form validation. These tasks required only single thread to run on. But, as the technology progressed and web applications became more complex, more long running tasks such as an API call, querying the database, prompting user to upload a file, became headache with this synchronous flow.&lt;/p&gt;

&lt;p&gt;To mimic this synchronous and blocking nature, Open your browser's console and type &lt;code&gt;alert()&lt;/code&gt; and press enter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rocket-asynchronous-nature"&gt;
  &lt;/a&gt;
  🚀 Asynchronous Nature
&lt;/h2&gt;

&lt;p&gt;    JavaScript got its asynchronous nature with the help of its runtime, which consists of a JavaScript Engine, Web APIs, callback queue and an event loop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rv9qUbyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo7dqdmryb7q3kjz12n6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rv9qUbyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yo7dqdmryb7q3kjz12n6.jpeg" alt="JavaScript Runtime"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;JavaScript Engine&lt;/em&gt;, consists of Call Stack and Memory Heap, which are responsible for execution of the  JavaScript code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Call Stack&lt;/em&gt;, keeps record of the current running function as well as the functions that needs to be executed once the current function completes its execution and is popped off the stack. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Callback Queue&lt;/em&gt;, is a queue which keeps record of the functions(or processes) that needs to be executed by the engine.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Event Loop&lt;/em&gt;, firstly checks if Call Stack is empty, monitors the Callback Queue and checks for any DOM events or processes in the queue that needs to be executed by pushing onto the stack. &lt;/p&gt;

&lt;p&gt;Combination of these is what gives JavaScript its asynchronous capabilities. Let's go through an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log("Fetching Data");

function sayHello() {
  console.log("JS says Hello!");
}

function fetchDatabase() {
  console.log("Data Retrieved");
}

setTimeout(() =&amp;gt; {
  fetchDatabase();
}, 3000);

sayHello();
console.log("Meanwhile doing some other task...");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run the above code in the browser or in the node, the output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Fetching Data
JS says Hello!
Meanwhile doing some other task...
Data Retrieved
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following things happened when the above code is run:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript printed the first statement.&lt;/li&gt;
&lt;li&gt;After that, it called the Web API that is &lt;code&gt;setTimeout()&lt;/code&gt; and delegated the task of fetching from the database.&lt;/li&gt;
&lt;li&gt;Then the &lt;code&gt;sayHello()&lt;/code&gt; function gets pushed on to the Call Stack and the second statement gets printed and &lt;code&gt;sayHello()&lt;/code&gt; is popped off the stack.&lt;/li&gt;
&lt;li&gt;Meanwhile the Callback Queue keeps record for some other pending tasks or DOM events and Event Loop continuously checks for the tasks in the queue and pushes the task onto the Call Stack.&lt;/li&gt;
&lt;li&gt;The third statement gets printed, and after 3 seconds the data is retrieved and Event Loop pushes it onto the Call Stack and the last statement gets printed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;    Here you saw that how &lt;code&gt;setTimeout()&lt;/code&gt; simulated a long running task of fetching from database and the asynchronous nature of the runtime made the code Non-blocking.&lt;/p&gt;

&lt;p&gt;In this post you got an idea about:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Execution Context and the two phases&lt;/li&gt;
&lt;li&gt;Single threaded nature of JavaScript&lt;/li&gt;
&lt;li&gt;Call Stack and Memory Heap&lt;/li&gt;
&lt;li&gt;JavaScript Runtime, event loop, callback queue&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep Learning and Keep Growing 🎉&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>All About Competitive Coding</title>
      <author>Mayank Pathak</author>
      <pubDate>Sun, 27 Jun 2021 11:02:31 +0000</pubDate>
      <link>https://dev.to/mayankpathak/all-about-competitive-coding-10mp</link>
      <guid>https://dev.to/mayankpathak/all-about-competitive-coding-10mp</guid>
      <description>&lt;p&gt;Hello 👋 Beautiful People out there, Hope you find yourself well and healthy.&lt;/p&gt;

&lt;p&gt;I'm bringing my new article which is focused on the A, B, C's of &lt;strong&gt;Competitive Coding&lt;/strong&gt; and to bring the &lt;strong&gt;top 10 competitive coding platforms&lt;/strong&gt; where you can learn, practice, master and compete with others based on your coding skills.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : This article is going to be long but you will enjoy reading every bit of it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many of you would have master some of the coding language and may be want to particularly check where you stand with the skills you have developed among the others who are deploying their skills in this small world. Because the level of competition is very high, since each one of us is better than other and becoming more and more better. Hence to make a count on yourself Competitive Coding provides the best outcome which will have you to access and know better of your coding skills. But before that let’s know what actually Competitive Coding Means.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-competitive-coding"&gt;
  &lt;/a&gt;
  What is Competitive Coding 👨‍💻
&lt;/h3&gt;

&lt;p&gt;As  &lt;a href="https://en.wikipedia.org/wiki/Competitive_programming#:~:text=Competitive%20programming%20is%20a%20mind,referred%20to%20as%20sport%20programmers."&gt;Wikipedia says,&lt;/a&gt;  competitive programming is a mind sport usually held over the Internet or a local network, involving participants trying to program according to provided specifications.&lt;/p&gt;

&lt;p&gt;Basically, it is a type of contest where a number of programmers attempt to solve programming questions in a limited amount of time with under some preconditions set by the organizer. You can write your solution in any programming language that you’re comfortable with. Solutions should pass all of the test cases (given and hidden) in order to be accepted under certain time and space limits.&lt;/p&gt;

&lt;p&gt;Time and Space Complexity plays a very major role in competitive coding. You might pass all the public and hidden test cases and your code would have satisfied all the given conditions, but if the written code is not efficient in the time and memory aspect then you can’t win any competitive coding contest. Best Code should take the least possible time and memory (i.e., space) to compile and run to provide the best outputs.&lt;/p&gt;

&lt;p&gt;Big tech companies, like Facebook, Google, Amazon, Microsoft etc hire through competitive programming competitions. As an added bonus, various online competitions offer some amazing prizes for the winners.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#major-benefits-of-competitive-coding"&gt;
  &lt;/a&gt;
  Major Benefits of Competitive Coding 👨‍💻
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Helps you to do a coding task in a stipulated time –&lt;/strong&gt; Need to Complete a given task with in the given time range, hence it indirectly increases you thinking and working capabilities.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cracking the Job Interviews –&lt;/strong&gt; It definitely helps one to prepare for technical and coding interviews as the questions and the contests held make you more ready to crack any interview.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Strengthen your programming and software knowledge –&lt;/strong&gt; As you practice more and more on certain portion it indirectly makes you master of that thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Helps you to land a job in Dream Companies –&lt;/strong&gt; There are many examples of this where a lot of aspirants got their dream job after practicing, coding and competing in such platforms. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Increases your Problem-solving skills –&lt;/strong&gt; As you solve an enormous number of problems it makes problem solving as your habit and you are able to think and come to the logic quite fast, that is why it increases your problem-solving skills. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Helps you better to work in a team –&lt;/strong&gt; Since most of the coding contests take place as a group of some coders, hence it taught you how to work better with a team and lead to success.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Better self-assessment and correct the mistakes –&lt;/strong&gt; All of the platforms provide you to keep track of your activities and the mistakes that you have done, hence it helps to assess yourself and not to repeat a mistake again.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Makes you faster and more focused –&lt;/strong&gt; With continuous practice and time on these platforms you become faster and more focused to solve the particular problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hence, what we can say that the benefits from Competitive coding is endless as it helps us to make better day by day, here only some of the main benefits have been listed which are mainly to motivates you and dive directly to the choice of your platform to prepare and compete with all the coders and programmers out there in this world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite-for-competitive-coding"&gt;
  &lt;/a&gt;
  Prerequisite for Competitive Coding 👨‍💻
&lt;/h3&gt;

&lt;p&gt;There are some basic and important conditions that have to meet before you start for competitive coding, this is because if you start without these condition then at each point you will stuck with some or the other problem and at last, finally you will give up with the competitive coding. So, the prerequisite are –&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pick a suitable language to code, in my opinion C++ is best for competitive coding.&lt;/li&gt;
&lt;li&gt;Choose a powerful code editor to run and compile your code, VS Code is best suitable to use in my opinion.&lt;/li&gt;
&lt;li&gt;Select a few platforms to practice, some of the best platforms are listed below.&lt;/li&gt;
&lt;li&gt;Make clear with the Data-Structures and Algorithms, good hands on these are very much required in competitive coding.&lt;/li&gt;
&lt;li&gt;Solve different kinds of problems to build a great confidence on your coding skills.&lt;/li&gt;
&lt;li&gt;Most important is to have continuous involvement in practicing.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : Remember one cannot master a skill in a night, it takes continuous passion and determination to master such things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now let’s list down the competitive coding platforms where you can show case your skills and knowledge among all others.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : Most of the below listed competitive platforms are not suitable for beginners. But you can at least try to explore these and gain some basic knowledge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#list-of-top-10-competitive-coding-platforms"&gt;
  &lt;/a&gt;
  List of Top 10 Competitive Coding Platforms 👨‍💻
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#1-hackerrank"&gt;
  &lt;/a&gt;
  1. HackerRank
&lt;/h3&gt;

&lt;p&gt;HackerRank provides you with topic wise as well as language-based proficiency to master with their learning and practicing curve. They have a long-listed problems to try from easy to the hardest level and if you are able to solve the coding problems that are on HackerRank then you are among those who can compete in the Competitive Coding with full of Confidence. &lt;/p&gt;

&lt;p&gt;There are always some or the other coding competitions held on this platform, also various organization uses HackerRank to find suitable candidate for their company through these competitions. I would suggest that one should have a complete knowledge about this platform.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://www.hackerrank.com/"&gt;https://www.hackerrank.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-codingame"&gt;
  &lt;/a&gt;
  2. CodinGame
&lt;/h3&gt;

&lt;p&gt;CodinGame is a technology company editing an online platform for developers, allowing them to play with programming with increasingly difficult puzzles, to learn to code better with an online programming application supporting twenty-five programming languages, and to compete in multiplayer programming contests involving timed artificial intelligence, or code golf challenges.&lt;/p&gt;

&lt;p&gt;CodinGame also serves as a recruiting platform, allowing developers to get noticed by companies based on their performance on the contests, as there is coding contest which occurs continuously on this platform. You are going to love this platform.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://www.codingame.com/"&gt;https://www.codingame.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-project-euler"&gt;
  &lt;/a&gt;
  3. Project Euler
&lt;/h3&gt;

&lt;p&gt;Project Euler is a website dedicated to a series of computational problems intended to be solved with computer programs. The project attracts adults and students interested in mathematics and computer programming. Since its creation in 2001 by Colin Hughes, Project Euler has gained notability and popularity worldwide.&lt;/p&gt;

&lt;p&gt;Project Euler helps you to keep track of the progress that you have completed on this portal. Since the levels of programming problem is quite high and solving these problems are not an easy task, therefore if you are able to solve those problems than you are on a good track to build the Competitive skills, and can easily perform on any programming competition using the skills gained through this awesome platform.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://projecteuler.net/"&gt;https://projecteuler.net/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-leetcode"&gt;
  &lt;/a&gt;
  4. LeetCode
&lt;/h3&gt;

&lt;p&gt;It's a website where people–mostly software engineers–practice their coding skills. There is 800+ questions (and growing), each with multiple solutions. Questions are ranked by level of difficulty: easy, medium, and hard. This platform is not for the beginners as the level of difficulty for problems is high.&lt;/p&gt;

&lt;p&gt;You can practice these problems to crack any coding interview as the main focused of problems on this platform is to prepare well for the interviews. Also, it creates several contests based on the coding where you can participate and earn a reward. Hence indirectly helps you to compete among several others from all over the world.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://leetcode.com/"&gt;https://leetcode.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-exercism"&gt;
  &lt;/a&gt;
  5. Exercism
&lt;/h3&gt;

&lt;p&gt;Exercism aims to provide opportunity for people of all backgrounds by helping them develop their programming skills through practice and mentorship. We provide thousands of exercises spread across over 50 language tracks.&lt;/p&gt;

&lt;p&gt;One can practice the programming problems that are available on this platform. Their main area of interest is to provide only the programming skills to the learners as of now and gaining popularity day by day.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://exercism.io/"&gt;https://exercism.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-spoj"&gt;
  &lt;/a&gt;
  6. SPOJ
&lt;/h3&gt;

&lt;p&gt;The SPOJ platform is centred around an online judge system, which serves for the automatic assessment of user-submitted programs. It also has a long list of programming problems to solve where you can keep track of your progress and the ranking among all the users on this platform.&lt;/p&gt;

&lt;p&gt;SPOJ also creates several contests and hackathon time to time where you can show case your programming skills. It also provides you with the option to set the programming problems and also to set the coding contests and hackathons.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://www.spoj.com/"&gt;https://www.spoj.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-coderbyte"&gt;
  &lt;/a&gt;
  7. CoderByte
&lt;/h3&gt;

&lt;p&gt;CoderByte is a web application built to help you practice programming and improve your coding skills. They offer a collection of code challenges and web development courses that can help you prepare for upcoming job interviews. The coding challenges range in difficulty and they can all be completed straight in our online editor.&lt;/p&gt;

&lt;p&gt;CoderByte offers more than 200 various types of coding challenges which you can solve in an online editor using 10 different programming languages. It provides official solutions and more than 800,000 user created solutions. It also provides you with some of the starter courses and the interview preparation kit to try out. CoderByte is also act as a Recruiting platform where some of the best technical talent is hired. &lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://coderbyte.com/"&gt;https://coderbyte.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-codewars"&gt;
  &lt;/a&gt;
  8. CodeWars
&lt;/h3&gt;

&lt;p&gt;CodeWars is an educational community for computer programming. On the platform, Software developers train on programming challenges known as kata. These discrete programming exercises train a range of skills in a variety of programming languages, and are completed within an online IDE.&lt;/p&gt;

&lt;p&gt;There are several Coding challenges that take place on CodeWars and one can participate in these challenges under the conditions set to qualify. You can Improve your skills by training with others on real code challenges. They have a built-in platform called as Kata where you can practice certain challenges and can check-up your progress and ranks among all others on the Kata.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://www.codewars.com/"&gt;https://www.codewars.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-top-coder"&gt;
  &lt;/a&gt;
  9. Top Coder
&lt;/h3&gt;

&lt;p&gt;Top coder is a crowdsourcing company with an open global community of designers, developers, data scientists, and competitive programmers. Top coder pays community members for their work on the projects and sells community services to corporate, mid-size, and small-business clients.&lt;/p&gt;

&lt;p&gt;You can check their various articles and videos on the competitive programming topics. They have a long list of programming question to try and master the programming topics. They have a lot of resources which you can read, practice, and try out by yourself to gain a better understanding of the things.&lt;/p&gt;

&lt;p&gt;Link to visit - &lt;a href="https://www.topcoder.com/"&gt;https://www.topcoder.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-codechef"&gt;
  &lt;/a&gt;
  10. CodeChef
&lt;/h3&gt;

&lt;p&gt;CodeChef offers thousands of the competitive programming challenges. Basically, it is an Indian Software company which has the community of developers across the globe. It allows you to write code in their online editor and view a collection of challenges. The coding problems are separated into different categories based on your skill level.&lt;/p&gt;

&lt;p&gt;CodeChef is a go-on platforms for many programmers and developers as there are always some or the other coding competition takes place. You can also practice some of the coding problems that they have on their platform. It also provides you with some of the tutorials which you can take to make yourself comfortable with the topics and the coding and competing environment on CodeChef.&lt;/p&gt;

&lt;p&gt;Link to Visit - &lt;a href="https://www.codechef.com/"&gt;https://www.codechef.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this article helps the community of learners and beginners to select the best competitive platform and master their programming skills, as each platform is better than other as they provide the best content and results those ones need to master. These platforms are also a great resource to practice well for your programming interviews. The quality and depth of the problems on these platforms are unmatchable.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#thank-you-for-reading-would-love-%E2%9D%A4-to-hear-your-valuable-feedback"&gt;
  &lt;/a&gt;
  Thank you for Reading, would Love ❤ to hear your valuable feedback.
&lt;/h4&gt;

&lt;p&gt;If anything is confusing or incorrect then let me know in the comment section. Thanks, from my side, this is Mayank, keep learning and exploring!!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-connect-at-twitter-linkedin"&gt;
  &lt;/a&gt;
  Let's Connect at &lt;a href="https://twitter.com/mayankp4513"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/mayank-pathak4513/"&gt;LinkedIn&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;If you liked the article and find it useful then please consider &lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;Buying me a Coffee&lt;/a&gt; to show your support🙏 and love🤟. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/mayankpathak"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meet you in the next article.....till then bye bye✋&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>programming</category>
      <category>competitiveprogramming</category>
    </item>
    <item>
      <title>Principles of Efficient Learning</title>
      <author>Abhinav Pandey</author>
      <pubDate>Sun, 27 Jun 2021 10:59:13 +0000</pubDate>
      <link>https://dev.to/abh1navv/principles-of-efficient-learning-38kh</link>
      <guid>https://dev.to/abh1navv/principles-of-efficient-learning-38kh</guid>
      <description>&lt;p&gt;As individuals who take initiatives to improve our abilities and become a better version of ourselves, our learning can become much more effective and faster if we develop an efficient learning process. Below is a list of principles which will help us in defining such processes:&lt;/p&gt;

&lt;p&gt;These principles are notes from the course &lt;a href="https://www.udemy.com/course/learning-to-learn-efficient-learning-zero-to-mastery/"&gt;Learning to Learn [Efficient Learning] : Zero to Mastery&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-principles"&gt;
  &lt;/a&gt;
  The Principles
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Learning vs Winning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;prioritize long-term learning over short term results&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://paulgraham.com/lesson.html"&gt;The Lesson to Learn&lt;/a&gt; by Paul Graham.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;In theory you shouldn't have to prepare for a test in a class any more than you have to prepare for a blood test.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Success and obstacles&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you need drive and persistence&lt;/li&gt;
&lt;li&gt;embrace the early obstacles&lt;/li&gt;
&lt;li&gt;everyone was once a beginner&lt;/li&gt;
&lt;li&gt;important topics are not easy to learn&lt;/li&gt;
&lt;li&gt;failures are progress&lt;/li&gt;
&lt;li&gt;keep a positive perspective. E.g. I'm not there yet but I will get there (by doing this).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Enjoy sucking at something at first&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Quiting is ok&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it is possible that the path is not for you&lt;/li&gt;
&lt;li&gt;it is important to know when to quit in order to find the things better suited to you.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Sometimes we have to know when to turn around and pick the right path in order to use our resources efficiently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Compoud learning&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;learn in small chunks every day.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If you improve by 1% every day, in 70 days you're twice as good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Your failures don't count against you&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;People will not remember how many times you failed in the process.&lt;/li&gt;
&lt;li&gt;They only care about what you are now.&lt;/li&gt;
&lt;li&gt;You don't have to be successful a lot of times.&lt;/li&gt;
&lt;li&gt;Nobody cares about how many interviews you failed. They only care about the one you passed.&lt;/li&gt;
&lt;li&gt;Do not avoid doing things because of fear of failure.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The more failures we have, the more feedback we will have for improvement&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Choice vs Chore&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"I want to do this" over "I have to do this"&lt;/li&gt;
&lt;li&gt;learning is a choice like watching a tv show and not a chore like washing clothes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pareto principle&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;80/20 principle - 80% success comes from doing 20% of the work.&lt;/li&gt;
&lt;li&gt;achieve initial 80% as fast as possible&lt;/li&gt;
&lt;li&gt;define the 20% you need to do for it&lt;/li&gt;
&lt;li&gt;ask yourself the below question&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Is this the best use of my time?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Skill stacking - Career strategy&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;don't lose your curiosity &lt;/li&gt;
&lt;li&gt;value learning in your decisions and practices&lt;/li&gt;
&lt;li&gt;gather and combine skills in unique ways&lt;/li&gt;
&lt;li&gt;develop many skills that work well together&lt;/li&gt;
&lt;li&gt;develop combinations that make you stand out &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Happiness factors&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To be a good learner, first focus on being happy&lt;/li&gt;
&lt;li&gt;identify areas that make you feel happy . Examples:

&lt;ul&gt;
&lt;li&gt;physical and mental health &lt;/li&gt;
&lt;li&gt;good sleep - to feel energetic&lt;/li&gt;
&lt;li&gt;learning everyday - gives a sense of achievement at the end of the day and keeps me motivated&lt;/li&gt;
&lt;li&gt;getting enough leisure time - to relax my mind&lt;/li&gt;
&lt;li&gt;having control over my work - stress management&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Productivity time&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find time of the day when you're most productive.&lt;/li&gt;
&lt;li&gt;Learn during that time.&lt;/li&gt;
&lt;li&gt;Do not start learning at that time of the day when you were otherwise not doing anything productive.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;This is only part of the course. These principles will form the basis of more specific learning techniques which we will define going forward. &lt;/p&gt;

&lt;p&gt;If you are already curious about it, do check out the full course. It also helps you connect with an already learning community on Discord which can lead to improved support and focus in your learning journey. (This is not an advertisement. I'm just a fellow learner using this blog for saving my notes)&lt;/p&gt;

&lt;p&gt;Happy Learning!!&lt;br&gt;
&lt;a href="https://i.giphy.com/media/8dYmJ6Buo3lYY/source.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/8dYmJ6Buo3lYY/source.gif" alt="Learning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can connect with me at  &lt;br&gt;
&lt;a href="https://www.linkedin.com/in/abh1navv"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.twitter.com/abh1navv"&gt;Twitter/@abh1navv&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>learning</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Host your Website/API FOREVER for FREE(Not a Joke!)</title>
      <author>PyBash</author>
      <pubDate>Sun, 27 Jun 2021 10:35:01 +0000</pubDate>
      <link>https://dev.to/pybash/host-your-website-api-forever-for-free-not-a-joke-2mc2</link>
      <guid>https://dev.to/pybash/host-your-website-api-forever-for-free-not-a-joke-2mc2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-back-a-little-plug"&gt;
  &lt;/a&gt;
  Welcome Back! A Little Plug?
&lt;/h2&gt;

&lt;p&gt;Welcome back, today with a post on Web Development mostly! But you can use your creative knowledge to extend it and be sure to leave it in the comments for others as well! Anyways a shameless plug to my &lt;a href="https://discord.gg/FwsGkZAqcZ"&gt;Discord server&lt;/a&gt; - if you want to chat with me! Or have questions ask in the help channels! Ahh and the plug is over! Let's get into the actual stuff now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-into-it"&gt;
  &lt;/a&gt;
  Let's get into it!
&lt;/h2&gt;

&lt;p&gt;Well, firstly it is going to be hosted on &lt;a href="https://replit.com"&gt;repl.it&lt;/a&gt;, so if you want to customize the domain, refer &lt;a href="https://replit.com/talk/learn/How-to-use-a-custom-domain/8834"&gt;here&lt;/a&gt;. Anyways now on to the actual part. So I will be using this simple flask app to demostrate - &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Ok so once you have your website/API written in repl.it, Run the code by using the Run button on the top of the screen, &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E31umsCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gskf0bdw8ahdegyzzpm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E31umsCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gskf0bdw8ahdegyzzpm.png" alt="run-repl-it"&gt;&lt;/a&gt; &lt;br&gt;
once running you should see a new pane open on the right showing you website, copy the address of that from the address bar on top of the pane! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y9_MMueG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2p0vkpo39lysvxzc8lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y9_MMueG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2p0vkpo39lysvxzc8lm.png" alt="new-pane"&gt;&lt;/a&gt; &lt;br&gt;
Now, we are going to go to another website known as &lt;a href="https://uptimerobot.com"&gt;UptimeRobot&lt;/a&gt;, this website is going to ping our website every 5 mins to keep the server running for ever. After visiting UptimeRobot, you need to sign up for an account. Once that is complete, Click on Create new Monitor. Once you have done that fill in the details as follows:&lt;/p&gt;

&lt;p&gt;Monitor Type - HTTP(s)&lt;br&gt;
Friendly Name - Anything of your wish&lt;br&gt;
URL/IP - Address you copied from repl.it.&lt;br&gt;
Monitoring Interval - every 5 minutes&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zamK2hwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byjpi6oer8e9d808c735.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zamK2hwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/byjpi6oer8e9d808c735.png" alt="new-monitor-screenshot"&gt;&lt;/a&gt;&lt;br&gt;
Then click create new monitor and then click close. You should see a new monitor in your dashboard, and that's all actually! Now close the browser window and check if the website keeps running after an hour, do not open repl.it anymore within this one hour! If it is running after one hour, then, great it will keep running forever, if it doesn't however comment below, and I will try to help you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h2&gt;

&lt;p&gt;Anyways, as you know everything that has a start has an end, similarly, this post has too! So byeeeeeeee!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>backend</category>
      <category>javascript</category>
      <category>node</category>
    </item>
  </channel>
</rss>
