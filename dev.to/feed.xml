<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>NodeJS + Express partie 5 : Routes et Controllers</title>
      <author> Eric Le Codeur</author>
      <pubDate>Mon, 01 Nov 2021 11:04:18 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/nodejs-express-partie-5-routes-et-controllers-18l</link>
      <guid>https://dev.to/ericlecodeur/nodejs-express-partie-5-routes-et-controllers-18l</guid>
      <description>&lt;p&gt;Voici une série d'articles qui vous permettra créer des applications backend avec NodeJS + Express.&lt;/p&gt;

&lt;p&gt;Cette série est la suite de ma série sur les bases de NodeJS. Si vous n'avez pas les connaissances de bases en NodeJS lisez cette série d'abord : &lt;a href="https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014"&gt;Introduction à NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js est aujourd'hui un incontournable, il est donc essentiel pour un développeur de le maitriser.&lt;/p&gt;

&lt;p&gt;Je vais donc publier un nouvel article environ au deux jours et petit à petit vous apprendrez tout ce qu'il y a à savoir sur Node.js + Espress&lt;/p&gt;

&lt;p&gt;Pour ne rien manquer suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#express-router"&gt;
  &lt;/a&gt;
  Express Router
&lt;/h2&gt;

&lt;p&gt;Comme vous l'avez vu dans l'article précédent, créer une API CRUD avec Express est simple. Mais vous devriez avoir remarqué maintenant que tout ce code dans le même fichier est volumineux et nous allons bientôt nous perdre.&lt;/p&gt;

&lt;p&gt;Par convention, le développeur Express divise le code en différents fichiers et dossiers pour optimiser l'organisation du code.&lt;/p&gt;

&lt;p&gt;La première chose à faire, et la plus évidente, est de séparer la route et les codes d'implémentation de la route.&lt;/p&gt;

&lt;p&gt;Voici un exemple que nous utilisons dans l'article précédent&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le but ici sera de scinder la route et son code d'implémentation. Pour ce faire, nous pouvons utiliser un routeur d'appel Express Package&lt;/p&gt;

&lt;p&gt;Le routeur aide à créer une liste de toutes vos routes d'applications et à les associer à un fichier de contrôleur contenant le code d'implémentation.&lt;/p&gt;

&lt;p&gt;La première étape consiste à créer un fichier pour mettre toutes nos routes d'applications. Par exemple : /routes/products.js peut contenir toutes les routes liées à la ressource produit&lt;/p&gt;

&lt;p&gt;Et à l'étape suivante, nous allons créer un fichier de contrôleur pour mettre tous nos codes d'implémentation de routes. Par exemple : /controllers/products.js&lt;/p&gt;

&lt;p&gt;A partir de mon article précédent voici un exemple de route et un fichier de contrôleur.&lt;/p&gt;

&lt;p&gt;routes/products.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;getProducts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;getProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;updateProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;deleteProduct&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../controllers/products.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getProducts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deleteProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comme vous pouvez le voir, la mise en œuvre est très simple et directe.&lt;/p&gt;

&lt;p&gt;Créez d'abord une instance de l'objet Routeur&lt;/p&gt;

&lt;p&gt;Importez ensuite toutes les fonctions du contrôleur.&lt;/p&gt;

&lt;p&gt;Enfin, utilisez l'objet routeur pour créer une association de route et de contrôleur.&lt;/p&gt;

&lt;p&gt;Voici un exemple des fonctions du contrôleur&lt;br&gt;
contrôleurs/produits.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getProducts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newProduct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;updatedProduct&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product updated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product deleted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;getProducts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;getProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;createProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;updateProduct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;deleteProduct&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rien de vraiment nouveau ici, c'est la même implémentation mais le code est maintenant dans des fonctions séparées avec un paramètre req et res.&lt;/p&gt;

&lt;p&gt;Une fois les routes et les fichiers de contrôleurs créés, nous devons dire à Express d'utiliser ces routes&lt;/p&gt;

&lt;p&gt;À partir du fichier principal, ajoutez un app.use () avec notre référence d'itinéraires&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products_routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./routes/products.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;products_routes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notez que app.use() a un préfixe de routes dans '/api/products' qui signifie que tous les chemins d'URL dans le fichier de routes incluront automatiquement ce préfixe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt; afin d'être avisé de la parution du prochain article (d'ici deux jours).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction to Basic Python Syntax for Beginners</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Mon, 01 Nov 2021 11:01:10 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/introduction-to-basic-python-syntax-for-beginners-3c1</link>
      <guid>https://dev.to/vadimkolobanov/introduction-to-basic-python-syntax-for-beginners-3c1</guid>
      <description>&lt;h3&gt;
  &lt;a href="#a-few-words-about-python"&gt;
  &lt;/a&gt;
  A few words about python
&lt;/h3&gt;

&lt;p&gt;Python is a very popular programming language at the moment, and its popularity is only growing over time. It has found its application in many areas of software development.&lt;/p&gt;

&lt;p&gt;Let's look at the main characteristics of Python as a programming language:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High-level.&lt;/li&gt;
&lt;li&gt;General purpose.&lt;/li&gt;
&lt;li&gt;Interpreted.&lt;/li&gt;
&lt;li&gt;Object-oriented.&lt;/li&gt;
&lt;li&gt;Imperative.&lt;/li&gt;
&lt;li&gt;Strictly (strongly) typed.&lt;/li&gt;
&lt;li&gt;It has dynamic typing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's look at this in more detail&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High-level&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Programming languages are divided into high-level and low-level. Low-level languages are languages that are close to programming in machine code or structures close to them (for example, byte codes). Classics of low-level programming: Assembler.&lt;/p&gt;

&lt;p&gt;High-level languages are designed accordingly for ease of use and speed of program writing. They use certain abstractions - data structures, a certain set of auxiliary functions, etc. These are almost all the languages you know.&lt;/p&gt;

&lt;p&gt;It is worth noting that high-level languages are heterogeneous. Some, such as Python, completely free the programmer from direct use of computer resources, others, such as C, allow you to work directly with memory and even use assembler inserts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General purpose.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Languages are divided into general-purpose languages (Python, C, Pascal) and specialized (DSL) (SQL, HTML).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interpreted&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Languages are divided into interpreted (Python, Basic) and compiled (C, Pascal). In the first case, the program is executed by a special interpreter program, "on the fly", in the second, the program is first converted into executable files understandable to the computer.&lt;/p&gt;

&lt;p&gt;It is worth noting that in fact, many modern "interpreted languages" are actually intermediate representation languages that first distill our program into special "byte codes" understandable to the interpreter, after which he interprets them. Python, Java, and many others are just such languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Object-oriented.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Languages are divided into procedural, functional, and object-oriented languages, depending on which structures the program is structured with and how the problem is solved.&lt;/p&gt;

&lt;p&gt;In object-oriented languages, we work with classes as types and instances of classes as objects of this type. Problem-solving is based on the interaction of different classes.&lt;/p&gt;

&lt;p&gt;Nevertheless, Python, being an object-oriented language, supports both procedural programming and a program that can be written without a single class.&lt;/p&gt;

&lt;p&gt;Functional languages are based on a different computing system from the previous ones, called lambda calculus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Imperative&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Languages are divided into imperative - when we set a sequence of commands to perform a task, and declarative - when we describe the result we want to get (SQL).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Strictly (strongly) typed.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Strongly typed languages assume that the interpreter will not implicitly cast types when trying to execute a command. (Java, Python, Haskell, Lisp) Implicit-type conversions can occur in weakly typed languages. (C, JavaScript, Visual Basic, PHP.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic typing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dynamic typing assumes that during the execution of a command, a variable can contain objects of various types.&lt;/p&gt;

&lt;p&gt;Static typing assumes that when setting a variable, the data type that it can contain is immediately indicated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-features"&gt;
  &lt;/a&gt;
  Python Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are many features in the standard library.&lt;/li&gt;
&lt;li&gt;Introspection.&lt;/li&gt;
&lt;li&gt;Automatic memory management.&lt;/li&gt;
&lt;li&gt;Multiplatform.&lt;/li&gt;
&lt;li&gt;Design patterns.&lt;/li&gt;
&lt;li&gt;Usability &lt;/li&gt;
&lt;li&gt;Readability - part of the syntax is a formatting&lt;/li&gt;
&lt;li&gt;Interactive language&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#basic-concepts"&gt;
  &lt;/a&gt;
  Basic concepts
&lt;/h3&gt;

&lt;p&gt;A variable is a named memory area whose name can be used to access data. The object (in Python everything is an object) referenced by a variable is called the value of the variable.&lt;/p&gt;

&lt;p&gt;Variable assignment (assignment) is the process of specifying an object variable to which it will refer. In Python, assignment is performed using =&lt;/p&gt;

&lt;p&gt;An operator or instruction is the smallest part of a programming language. This is a command or a set of commands that can be executed by an executor. The objects on which operators perform actions are called operands. Depending on their number, the operators are divided into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unary (-1 is a unary minus).&lt;/li&gt;
&lt;li&gt;Binary (1 + 2 - addition).&lt;/li&gt;
&lt;li&gt;Ternary
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;on_true&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;on_false&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Expression is a set of variables, operators, and functions that can be evaluated according to the syntax of the language.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-types-in-python"&gt;
  &lt;/a&gt;
  Data Types in Python
&lt;/h3&gt;

&lt;p&gt;All data types built into Python are divided into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Immutable&lt;/strong&gt; - numbers, strings, tuples, boolean.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mutable&lt;/strong&gt; - dictionaries, lists, sets, and virtually all other types.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are 3 types of numbers in Python:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integers (int).&lt;/li&gt;
&lt;li&gt;Decimal numbers (float).&lt;/li&gt;
&lt;li&gt;Complex numbers are a pair of integers, the first of which is called the real part, and the second is called the imaginary part.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Operations performed on numbers:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"+" is the addition of two numbers.&lt;br&gt;
"-" - subtraction.&lt;br&gt;
"&lt;em&gt;" - multiplication.&lt;br&gt;
"&lt;/em&gt;*" - exponentiation.&lt;br&gt;
"/" - true division.&lt;br&gt;
"//" - quotient.&lt;br&gt;
"%" is the remainder of the division.&lt;br&gt;
"-" - unary minus.&lt;br&gt;
"abs" are the number module.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-information"&gt;
  &lt;/a&gt;
  Additional information
&lt;/h3&gt;

&lt;p&gt;PEP - Python Enhancement Proposals.&lt;/p&gt;

&lt;p&gt;PEP-8 is a set of rules on how to write code.&lt;/p&gt;

&lt;p&gt;PEP-257 standard flow for docstrings&lt;/p&gt;

&lt;p&gt;Python is not named after a snake&lt;/p&gt;

&lt;p&gt;Python creator - Guido van Rossum&lt;br&gt;
and he named his language after the Monty Python troupe.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-luck"&gt;
  &lt;/a&gt;
  Good Luck!
&lt;/h3&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>learning</category>
    </item>
    <item>
      <title>Why a Python Web Development Company Will be In Demand in the Future?
</title>
      <author>Margaret D</author>
      <pubDate>Mon, 01 Nov 2021 10:39:49 +0000</pubDate>
      <link>https://dev.to/margaretd/why-a-python-web-development-company-will-be-in-demand-in-the-future-2e8j</link>
      <guid>https://dev.to/margaretd/why-a-python-web-development-company-will-be-in-demand-in-the-future-2e8j</guid>
      <description>&lt;p&gt;Python is one of the best programming/development languages in the world, and all for good reasons. With its ability to execute the modern programming requirements, not to mention operationalizing artificial intelligence and machine learning into our daily lives, Python is pivotal to live the future we so desire. &lt;/p&gt;

&lt;p&gt;Within the world of development, web development is quickly gaining popularity among other forms of solutions. Merging web development with Python, we have got a wide range of opportunities to decipher and implement. &lt;/p&gt;

&lt;p&gt;Every business leader needs to make the decision about which programming language the company will adopt so that the journey to the future becomes easier, smoother, and adaptable. With Python already showing the signs of being a future-oriented programming language, it may make a choice easier.&lt;/p&gt;

&lt;p&gt;But that is not enough to hire a &lt;a href="https://www.inexture.com/services/python-development-company-usa/"&gt;Python web development company&lt;/a&gt; or in-house programmers. That’s why you must go through this article to understand why Python is your ideal choice for future-oriented web development. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-python-and-why-must-you-use-it-for-web-app-development"&gt;
  &lt;/a&gt;
  What is Python, and Why Must You Use it for Web App Development?
&lt;/h1&gt;

&lt;p&gt;Python’s a high-level object-oriented coding language. While focusing on Rapid Action Development, Python offers simple syntax, indentation rigidity, and easy code readability. &lt;/p&gt;

&lt;p&gt;It’s a powerful language compatible with Windows, Mac, and Linux-based systems. Added to this, Python’s object-oriented programming approach is useful in writing clear and logical code for all sorts of development projects. &lt;/p&gt;

&lt;p&gt;Here’s an overview of development activities what you can do with Python;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create web applications on the server&lt;/li&gt;
&lt;li&gt;Create workflows while developing a software&lt;/li&gt;
&lt;li&gt;Python can be used to connect and communicate with databases. &lt;/li&gt;
&lt;li&gt;It can be used to read and modify files. &lt;/li&gt;
&lt;li&gt;You can use Python programming to handle big data and complex solutions. &lt;/li&gt;
&lt;li&gt;Complete rapid prototyping or production-ready software development with Python.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Python is a popular programming language. The &lt;a href="https://insights.stackoverflow.com/survey/2021"&gt;Stack Overflow Survey of 2021 &lt;/a&gt; finds that 48.24% of programmers love to work with Python after JavaScript and HTML/CSS. &lt;/p&gt;

&lt;p&gt;And the TIOBE Index also shares a similar analysis where in October 2020, Python ranked third, but in October 2021, Python has achieved the first rank. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEhoYxTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieu5qdf48qx377b3l2me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEhoYxTX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieu5qdf48qx377b3l2me.png" alt="Image description" width="512" height="218"&gt;&lt;/a&gt;&lt;br&gt;
Source: &lt;a href="https://www.tiobe.com/tiobe-index/"&gt;TIOBE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python’s popularity is not unfounded. There are several reasons behind it, or we can say that there are several benefits of using Python. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JjXuRCNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy45ktxlx2gj7a8yqge9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JjXuRCNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy45ktxlx2gj7a8yqge9.png" alt="Image description" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Cross-Platform Development: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python has seamless compatibility with Android, iOS, Linux, Mac, and Windows operating systems. This makes it an efficient and versatile programming language and helps produce flawless code. The coding part is, of course, dependent on the developer, but writing this sort of code with Python is easier. &lt;/p&gt;

&lt;p&gt;Besides full compatibility with the operating system, you can build front-end and back-end services with Python. Lastly, it's a write once run anywhere type of language. Provided that you are using the right framework, you can write the Python code once and run it on Android, iOS, Windows, etc. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. Vast Libraries: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python has a wide range and variety of libraries that make coding quick, efficient, and reliable. There are over 137,000 Python libraries available today. While hiring a Python development company, make sure to ask them what libraries the developers there have worked with. &lt;/p&gt;

&lt;p&gt;You don't need someone who has experience with every single one of these libraries, but you need someone who has worked with the best ones. These libraries help fast-track the development of web applications and other digital solutions. &lt;/p&gt;

&lt;p&gt;They provide editable code scripts for different technologies and functions like image recognition, AI, ML, data visualization, etc. To sum it up, Python libraries make it easier to complete and build the complex aspects of an application. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. Easy to Learn:&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;First, Python has extensive use cases and applications. On the other hand, it is easy to learn and use. Anyone who has basic technical knowledge about coding can easily grasp the syntax and other aspects of Python. &lt;/p&gt;

&lt;p&gt;This easy to learn aspect also makes Python a popular language and one of the reasons why Python’s future fate is sealed and meant to be strong, prevalent, and sustainable. &lt;/p&gt;

&lt;p&gt;Plus, we found on the Stack Overflow survey that 22,006 respondents who are working with JavaScript want to work with Python. The same story applies to several other programming languages. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oyAnt3TV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20lzu4zjnio9ayz8w8gc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oyAnt3TV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20lzu4zjnio9ayz8w8gc.png" alt="Image description" width="512" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The numbers are 19,884 for HTML/CSS and 12,995 for Java. So, we can say that as more programmers are wanting to work with Python, they must also understand its utility with reference to the future programming requirements. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3mbng-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv9406gtfpt8oebazhs1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3mbng-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vv9406gtfpt8oebazhs1.png" alt="Image description" width="512" height="435"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://insights.stackoverflow.com/survey/2021"&gt; Stackoverflow Survey &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. An Amazing Community:&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;One could only imagine the extent of community support enjoyed by Python developers seeing to its popularity. From writing the code to understanding its potential, finding bugs, writing a specific function, etc., there is help available in Python. &lt;/p&gt;

&lt;p&gt;A Python web development services company will get access to an extensive support system for development. Take it in this way; the Python web development companies don’t need to provide separate reskilling or upskilling lessons to their developers. &lt;/p&gt;

&lt;p&gt;They can access the same from free YouTube channels or follow other Python developers on GitHub. In the future, this support structure will only grow stronger and better because Python as a programming language is continuously becoming better. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. Asynchronous Coding in Python: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Asynchronous coding allows running a small unit of the application separately from the primary application. This makes Python a modular programming language where the developers can  create modules of the entire application. &lt;/p&gt;

&lt;p&gt;These modules run separately from other modules, but once they are joined together, they work as a single unit. Asynchronous programming allows a Python web development company to build applications with better performance and responsiveness. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. In-Built Testing Units: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Testing a web application before its launch is crucial. Testing takes time, but it takes relatively little time in Python because the testing framework is built within Python. &lt;/p&gt;

&lt;p&gt;This implies that Python has unit tests that simplify text execution and accelerate report generation. This is done with Unittest, a testing framework of the Java Programming language, but also a default testing framework for web applications built with Python. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#signs-why-python-is-the-programming-language-of-the-future"&gt;
  &lt;/a&gt;
  Signs Why Python is the Programming Language of the Future
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8trivwtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w49ucivr2h2yrpskohn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8trivwtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w49ucivr2h2yrpskohn2.png" alt="Image description" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python’s versatility is provided by its functions, features, and possibilities. The same aspects will take Python to the next level. Here are a few aspects to prove that Python is gearing up for a better and bigger place in the development world. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Automating tasks:&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although it’s an existing component used by expert Python web development services providers, task automation is one of the futuristic components of Python. &lt;/p&gt;

&lt;p&gt;While working on Python, the developers can write scripts that make it possible to introduce automation into a solution or program. For instance, you can write the code to automate the promotional aspects of a blog. The thing where you get the option to post the blog on social media automatically after writing and publishing is a simple example. &lt;/p&gt;

&lt;p&gt;Also, chatbots with automated functions are also built with Python and continue to see improvement in the same. Along with text, the automation-led chatbots can be added with voice support and NLP introduced by Python. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Machine Learning:&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We analyzed a &lt;a href="https://developer.ibm.com/blogs/why-machine-learning-is-primarily-written-in-python/"&gt;post by IBM&lt;/a&gt; stating why Python is a preferred language for machine learning. &lt;/p&gt;

&lt;p&gt;While most of the aspects mentioned in the post are similar to those discussed above, semantics and open-source make writing machine learning programs with Python possible. &lt;/p&gt;

&lt;p&gt;The Python syntax has got accolades for being simple and math-like. On the one hand, the simple syntax makes it easier to understand, learn, and execute. The math-like structure is especially useful when writing code scripts for machine learning. &lt;/p&gt;

&lt;p&gt;The open-source part of this programming language helps to customize Python according to the requirements. This adds another layer of flexibility. And with the dynamics of the present and the future, we need a programming language that can be customized according to the requirements. &lt;/p&gt;

&lt;p&gt;Pro-tip; when you understand the elements of &lt;a href="https://www.inexture.com/how-to-shortlist-the-best-python-development-company/"&gt;choosing the best Python development company&lt;/a&gt;, their understanding of data and of the process of harnessing the data is important. &lt;/p&gt;

&lt;p&gt;This is because the extent of data we will generate in the future will be far more and bigger than what we are doing today. The data is going to be raw, unstructured, and fragmented. Python has the power and ability to deal with all these issues. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Python for Data Science:&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moving one step ahead from the machine learning and automation tasks, Python is also used for implementation in data sciences. As a result, we have seen several developers working on and presenting new examples of using Python for this purpose. &lt;/p&gt;

&lt;p&gt;Case in point, Tensorflow, Numpy, Pandas, Seaborn, and Matplotib. These are the libraries and frameworks that are used by Python developers to develop advanced applications and solutions. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Compatibility with Hadoop:&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moving to the last point that books Python’s place as the development language of the future is its integrability with Hadoop. Hadoop is based on Java and uses a series of computers to solve complex problems. &lt;/p&gt;

&lt;p&gt;Due to this, Hadoop gets lots of data and information that needs processing. Here are some development activities that you can do with Python, one it has a math-like structure, which makes it easier to solve complex problems. Second, Python is also able to process large amounts of data. &lt;/p&gt;

&lt;p&gt;Hence, with Hadoop compatibility, we can use Python to create a large network of computers that can easily handle and process large amounts of data. &lt;/p&gt;

&lt;p&gt;Any Python web development company, which has not yet explored the above-given aspects, risks losing value in the future. Python has proved its potential to become the go-to language for developing complex and data-intensive applications in the future. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#big-companies-using-python-today-and-might-do-in-future"&gt;
  &lt;/a&gt;
  Big Companies using Python Today and Might do in Future
&lt;/h1&gt;

&lt;p&gt;Python’s importance and the examples of its applications are available almost everywhere. For those who don’t know, YouTube is made with Python. Look at the amount of data the platform generates every day. Still, it runs smoothly and has become one of the most active online platforms globally. &lt;/p&gt;

&lt;p&gt;Here are some of the biggest companies using Python;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E_knU0av--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6mkniovac3kcfl5qnqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E_knU0av--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6mkniovac3kcfl5qnqb.png" alt="Image description" width="880" height="480"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Google:&lt;/b&gt;
Google’s YouTube is the biggest user of Python, and it's everywhere. From view video counter to controlling the website templates, administer videos, accessing canonical data, etc. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s not it! The guys responsible for YouTube development at Google are not sitting idle and maintaining the platform. They are regularly working on making YouTube even better, and that too by using Python. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Instagram:&lt;/b&gt; 
Owned by Facebook now, Instagram is one of the biggest social media platforms, and it uses Python. A Python web development services company must make an effort to understand how Instagram is using Python for its development aspects. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instagram uses Python to implement the business logic to fulfill the requirements of more than 1.3 billion active users. Specifically, Instagram uses CPython as a runtime system to execute the code. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Netflix:&lt;/b&gt; 
Another online video streaming platform giant, Netflix also uses Python but for limited functionality. But out of them, the part where Netflix sends suggestions to its users is built and executed with Python. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to this, Python is also used for security automation, auto-remediation, risk classification, and vulnerability identification on Netflix. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Facebook:&lt;/b&gt; 
1/4th of Facebook’s code is written in Python. Because Python has an amazing compatibility with other programming languages, the developers here won’t face any issue with fusing different languages together. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two Facebook teams use Python extensively, and these are infrastructure and production engineering.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Uber:&lt;/b&gt; 
If all these companies are using Python, how can the ridesharing giant Uber miss out on Python. Uber’s usage of Python includes functions like SDK installation, creating an Uber session, obtaining the list of available products, price, time estimates, ride requests, etc. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The majority of the data-intensive functions on Uber are executed with the help of Python code. So when you are looking to hire a Python web development company, their understanding of how these big companies are using Python is an important factor to judge their potential. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#platforms-that-will-take-python-into-the-future"&gt;
  &lt;/a&gt;
  Platforms that Will Take Python into the Future
&lt;/h1&gt;

&lt;p&gt;Python cannot single-handedly stream into the future and become the favorite programming language. Its reliability and sustainability in the future is based on these platforms;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Flask:&lt;/b&gt;
Flask is a microservices-based platform, which is a handy coding method today and for the future. Also, Flask speeds up the development process while maintaining Python’s initial “easy-to-use” benefit. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Among other aspects of Python development, Flask is effective for building web applications and services. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Pandas:&lt;/b&gt;
Pandas is another one of the best platforms on Python used for building web applications and organizing large amounts of data. Furthermore, it is also used to build solutions that employ artificial intelligence and machine learning. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#is-there-anything-that-can-thwart-pythons-success-in-the-future"&gt;
  &lt;/a&gt;
  Is there anything that Can Thwart Python’s Success in the Future?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.inexture.com/services/python-development-company-usa/"&gt;Python development services &lt;/a&gt;are not ideal in every respect. There are some areas where it lacks and others where it needs improvement. Here are some disadvantages of Python you must consider before pinning all your future hopes on it. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Python’s Speed is Low: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;With all the talk about Python being an amazing interpreted language and a dynamically typed language, Python’s line-by-line code execution makes it slow. &lt;/p&gt;

&lt;p&gt;Added to this, the dynamic nature of Python also makes it slow. This means the for projects where speed is crucial, Python may not be an ideal choice. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. Low Memory Optimization: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python may be simple to develop and execute, but it is not a memory-efficient programming language. As Python uses large amounts of memory, applications that need to be memory efficient are not ideal to be developed with Python. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. Access to Database: &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Python lacks the level of efficiency it possesses with reference to coding, in database linkage, and access. A Python web development company will find that Python’s database layer is underdeveloped and traditional compared to younger and more advanced databases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Without a doubt, Python is the best programming language to be built ever. It has applications in the present and has a great potential to fulfill the requirements of futuristic programming. &lt;/p&gt;

&lt;p&gt;With a simple code syntax, a large number of libraries, and extensive community support, Python web development services become easier, faster, and more accurate.   &lt;/p&gt;

&lt;p&gt;It has gained impressive popularity in the last few years and continues to do so as you are reading this article. With everything considered, it might be a good choice to switch to Python and start your journey towards the future with a new approach and more possibilities. &lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Calling all Contentful app builders! We've now released App sharing and custom App icons!</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Mon, 01 Nov 2021 10:27:57 +0000</pubDate>
      <link>https://dev.to/contentful/calling-all-contentful-app-builders-weve-now-released-app-sharing-and-custom-app-icons-58ci</link>
      <guid>https://dev.to/contentful/calling-all-contentful-app-builders-weve-now-released-app-sharing-and-custom-app-icons-58ci</guid>
      <description>&lt;p&gt;I'm really excited to tell you about two new features of the Contentful App Framework!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-contentful-app-framework"&gt;
  &lt;/a&gt;
  What's the Contentful App Framework?
&lt;/h2&gt;

&lt;p&gt;The App Framework lets you use your favourite tools and frameworks and easily connect them to Contentful to customise the editor experience in the web UI.&lt;/p&gt;

&lt;p&gt;We’ve got a huge collection of apps in the app marketplace from Cloudinary, Google Analytics, Gatsby Cloud, Netlify, Shopify — and more — and you can also build your own custom integrations using our open-source tools.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;npx create-contentful-app&lt;/code&gt; in your terminal to get our recommended source code and you’re good to go! It includes &lt;a href="https://f36.contentful.com/"&gt;Forma36&lt;/a&gt; — our design system — and all the required library code for you to get started.&lt;/p&gt;

&lt;p&gt;You can also learn more about the Contentful App Framework in our &lt;a href="https://www.contentful.com/developers/videos/app-framework-course/"&gt;new video course in the developer portal&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-heres-where-it-gets-really-exciting"&gt;
  &lt;/a&gt;
  But here's where it gets really exciting
&lt;/h2&gt;

&lt;p&gt;We’ve now released &lt;strong&gt;app sharing&lt;/strong&gt;. This means you can easily share your Contentful apps across organisations using a link, or an embeddable share button.&lt;/p&gt;

&lt;p&gt;If you’ve built an amazing app you’d love to share with the community, head on over to your app definition settings, click on the sharing tab, and choose to share your app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1JZSMTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeiadgbkhjqmf8fv3ufp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1JZSMTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yeiadgbkhjqmf8fv3ufp.png" alt="A screenshot showing that app sharing is turned on for my blog metrics Contentful app" width="880" height="543"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;You can now share your app with others using the link that’s been generated, and showcase an install button on your GitHub readme — or anywhere else! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJcEsQAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75ocm6e9km6wak27gjnl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJcEsQAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75ocm6e9km6wak27gjnl.png" alt="A screenshot of a GitHub README showcasing a Contentful App install button" width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-wait-theres-more"&gt;
  &lt;/a&gt;
  But wait — there's more!
&lt;/h2&gt;

&lt;p&gt;You can also add custom icons to your apps, making it easy for people to find what they’re looking for when browsing their list of apps.&lt;/p&gt;

&lt;p&gt;We’re excited to see the types of apps you’ve been building and how you’ve been using Contentful in the community. So why not head over to the &lt;a href="https://www.contentful.com/slack"&gt;Contentful Community Slack&lt;/a&gt; and and share what you’ve built!&lt;/p&gt;

&lt;p&gt;To see it all in action, check out this video from me and &lt;a class="mentioned-user" href="https://dev.to/musicalwebdev"&gt;@musicalwebdev&lt;/a&gt;
. Happy building!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B4ZRouKk-vA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>opensource</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>OG-image Error</title>
      <author>jjung99</author>
      <pubDate>Mon, 01 Nov 2021 10:26:32 +0000</pubDate>
      <link>https://dev.to/jjung99/og-image-error-2n7p</link>
      <guid>https://dev.to/jjung99/og-image-error-2n7p</guid>
      <description></description>
      <category>ogimage</category>
      <category>opensource</category>
      <category>nextjs</category>
      <category>seo</category>
    </item>
    <item>
      <title>NextJS API working on locals but not working on production</title>
      <author>Olatunji Abayomi </author>
      <pubDate>Mon, 01 Nov 2021 10:25:05 +0000</pubDate>
      <link>https://dev.to/abayomijohn273/nextjs-api-working-on-locals-but-not-working-on-production-2je6</link>
      <guid>https://dev.to/abayomijohn273/nextjs-api-working-on-locals-but-not-working-on-production-2je6</guid>
      <description>&lt;p&gt;Hey, I am writing this post to share the experience I had dealing with NextJS API not working on production (that is, returning a 404 Bad Request).&lt;/p&gt;

&lt;p&gt;A 400 Bad Request simply means that the server cannot process a request due to client error and this errors could be wrong URL or issues in the service use in the request.&lt;/p&gt;

&lt;p&gt;For this particular use-case, the problem was related to the environment variables.&lt;/p&gt;

&lt;p&gt;The environment variables store in the .env.local file wasn't working after deploying to &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; and the solution is to also setup your variables on Vercel.&lt;/p&gt;

&lt;p&gt;Let me show you a walkthrough;&lt;/p&gt;

&lt;p&gt;Adding the variables needed in your project in .env file, you can check &lt;a href="https://nextjs.org/docs/basic-features/environment-variables"&gt;Environment Variable&lt;/a&gt; for more information of that. (NOTE: Make sure you add it to &lt;strong&gt;.gitignore&lt;/strong&gt; so you don't expose it).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SAMPLE ENV VARIABLE&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DB_USER=james
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After deploying the app on Vercel, navigate to &lt;strong&gt;Settings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8C8rgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7veree7j0mn13gt9aloe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh8C8rgD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7veree7j0mn13gt9aloe.png" alt="Image Navigate to Settings" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Environment Variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HWbRT14K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmqahfionpsjyuix591g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HWbRT14K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmqahfionpsjyuix591g.png" alt="Image Navigate to environment variable" width="880" height="513"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From there, you can add your environment variable and your web app will work as expected.&lt;/p&gt;

&lt;p&gt;I hope this is helpful to you.&lt;/p&gt;

&lt;p&gt;❤️❤️❤️&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Build a Slider with React!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Mon, 01 Nov 2021 10:24:16 +0000</pubDate>
      <link>https://dev.to/ziratsu/build-a-slider-with-react-4651</link>
      <guid>https://dev.to/ziratsu/build-a-slider-with-react-4651</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;It's time to build an awesome &lt;em&gt;slider&lt;/em&gt; with React!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/og3wCO98HkQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Check out the source code  &lt;a href="https://github.com/Ziratsu/Slider-React"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-your-component"&gt;
  &lt;/a&gt;
  1. Create your component.
&lt;/h2&gt;

&lt;p&gt;Create a Slider.js file, which will represent your component. You'll need to return each card from your upcoming data, so you'll need to use the .map() function in order to do that.&lt;br&gt;
Since it's an example, the data are located in a dataSlider.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Slider.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./dataSlider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Slider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container-slider"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; 
                        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`/Imgs/img&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
                        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What's all that code for the img tag you ask? Let's break that down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;for the link '&lt;code&gt;/Imgs/img${index + 1}.jpg)&lt;/code&gt;' ⇒ you refer back to your ressources in a dynamic way, which is why you need to use the backticks as well as the ${}.&lt;/li&gt;
&lt;li&gt;for process.env.PUBLIC_URL ⇒ this will be replaced by your application URL when you'll build your app.
For the css, you'll need to add a div containing the img, like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"slide"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; 
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`/Imgs/img&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fix the error that shows up in the console, you need to add a key, which is a reference to dataSlider and its different ids, you can also use the handy "uuid" tool to do so :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide active-anim&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
 ...
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the different images are there, you just can't see them. To remedy that, you need to add a component (which you'll create in a minute), twice, below the slider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-the-button-component"&gt;
  &lt;/a&gt;
  2. Create the button component.
&lt;/h2&gt;

&lt;p&gt;Create another file called BtnSlider.js which will be your buttons needed to go from one image to another.&lt;/p&gt;

&lt;p&gt;Import the left and right arrow icons. Then, create a simple button with a classname, containing the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Slider.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;leftArrow&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./icons/left-arrow.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;rightArrow&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./icons/right-arrow.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BtnSlider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn-slide"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;rightArrow&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For now, there's no logic, we'll create some state and pass that state through the props to change the style of our button. Let's do it!&lt;/p&gt;

&lt;p&gt;In your Slider.js file, add a const to be able to use the state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create the nextSlide and the prevSlide functions, which for now will be empty :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nextSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you can pass it to your component BtnSlider, with the prop moveSlide. You also need to add the direction:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="na"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nextSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="na"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;prevSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to your BtnSlider component and take them from the props. You can check it out in the console with a console log of course:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BtnSlider&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;moveSlide&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn-slide"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;rightArrow&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you need to add an onClick to trigger the moveSlide from our props, and modify the classname of your button for the direction:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;moveSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn-slide next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn-slide prev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now as you can see, the arrows do appear but they're both the right arrow, which isn't what we want. Therefore you need to change the source for the image, with a condition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;rightArrow&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;leftArrow&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's what your full BtnSlider.js should look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Slider.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;leftArrow&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./icons/left-arrow.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;rightArrow&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./icons/right-arrow.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BtnSlider&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;moveSlide&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;
      &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;moveSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn-slide next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn-slide prev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;rightArrow&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;leftArrow&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-back-to-your-slider"&gt;
  &lt;/a&gt;
  3. Back to your slider!
&lt;/h2&gt;

&lt;p&gt;Now it's time to change the classname for the div that returns our images. Replace "slide" with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide active-anim&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; 
    &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`/Imgs/img&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What does this mean? Well, you need to add + 1 each time since the index starts at 0. The condition is for the css, &lt;em&gt;active-anim&lt;/em&gt; sets the opacity at 1.&lt;/p&gt;

&lt;p&gt;Now you can see the images!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-create-the-logic-of-the-slider"&gt;
  &lt;/a&gt;
  4. Create the logic of the slider.
&lt;/h2&gt;

&lt;p&gt;Let's create the logic of our functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nextSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first condition checks if slideIndex is inferior to 5 (since you only have five images), then it'll show the next image.&lt;/p&gt;

&lt;p&gt;The second condition checks if you're at the last item of your array and if you are, then it'll reset back to the first image.&lt;/p&gt;

&lt;p&gt;And vice versa for the second function. However, instead of putting &lt;em&gt;setSlideIndex(5)&lt;/em&gt;, it's better to put &lt;em&gt;setSlideIndex(dataSlider.length)&lt;/em&gt;, since the length of your array may change if you add an image for instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-add-the-dots-at-the-bottom-of-the-slider"&gt;
  &lt;/a&gt;
  5. Add the dots at the bottom of the slider.
&lt;/h2&gt;

&lt;p&gt;Let's create an empty array with a length of 5, in order to use the .map() function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container-dots"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;classname&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"dot"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we do want some dynamic classname, in much the same way as we did for our arrows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last thing to add is the ability to click on it and for the image to change:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
    &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;moveDot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Therefore you need to add this function that'll go to the appropriate image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moveDot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now make sure you use an anonymous function for the onClick, otherwise it'll trigger the moveDot function when the component is created, which is to say upon landing on the page, which isn't what we want of course!&lt;/p&gt;

&lt;p&gt;Here's what your full Slider.js file looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Slider.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;BtnSlider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./BtnSlider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./dataSlider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Slider&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nextSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prevSlide&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moveDot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setSlideIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container-slider"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;dataSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
                    &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide active-anim&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; 
                        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PUBLIC_URL&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;`/Imgs/img&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
                        &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="na"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nextSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;BtnSlider&lt;/span&gt; &lt;span class="na"&gt;moveSlide&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;prevSlide&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container-dots"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; 
                    &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;moveDot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slideIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
                    &lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Well done!&lt;/strong&gt; You now have an awesome slider for your website!&lt;/p&gt;

&lt;p&gt;Drop some love by liking or commenting ♥&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you very soon for other surprising tutorials!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>My last contributions for Hackoctoberfest </title>
      <author>Amazing </author>
      <pubDate>Mon, 01 Nov 2021 10:09:02 +0000</pubDate>
      <link>https://dev.to/beamazedvariable/my-last-contributions-for-hackoctoberfest-19bo</link>
      <guid>https://dev.to/beamazedvariable/my-last-contributions-for-hackoctoberfest-19bo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pr-4-telescope"&gt;
  &lt;/a&gt;
  PR 4 : Telescope
&lt;/h2&gt;

&lt;p&gt;I got mentioned in &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2407"&gt;issue-2407&lt;/a&gt; where it seem like our &lt;code&gt;stagging&lt;/code&gt; server is broken after my PR got merged &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The issue is that @typescript-eslint/eslint-plugin and @typescript-eslint/parser don't support eslint v8.1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So I got a change to practice to do &lt;code&gt;git revert &amp;lt;commit-id&amp;gt;&lt;/code&gt; to revert my commit and return the packages version back to where it were before.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout master
git pull upstream master
git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; issue-2407
git revert 3d7a3336d4bf89b6174b81c0999c29f411490ffc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eventhough we did attempt to update other plugins to the latest version but once again the code broke and sadly I have to fully revert my commit and made &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2408#event-5544732573"&gt;PR-2408&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;While resolving: @senecacdot/telescope@2.2.0
&lt;span class="c"&gt;#9 13.23 npm ERR! Found: eslint@7.23.0&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR! node_modules/eslint&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR!   dev eslint@"7.23.0" from the root project&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR! &lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR! Could not resolve dependency:&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR! peer eslint@"&amp;gt;=7.28.0" from eslint-plugin-prettier@4.0.0&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR! node_modules/eslint-plugin-prettier&lt;/span&gt;
&lt;span class="c"&gt;#9 13.23 npm ERR!   dev eslint-plugin-prettier@"4.0.0" from the root project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pr-5-updating-the-environmentsetupmd-for-telescope"&gt;
  &lt;/a&gt;
  PR 5: Updating the &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2400"&gt;environment-setup.md&lt;/a&gt; for Telescope
&lt;/h2&gt;

&lt;p&gt;When I try to set up the Telescope project, I did have some good reading and usefull links so as to help other new contributors to join the project can set up the environment faster and I decide to create another PR just to add some more usefull information on how to set up WSL2 ready to go. Compare to other docs PR that I did, this time I has to put a lot of consider and fix my draft many times so it work for the project in general and for people who trying to set up the environment, but I was really happy after my PR got merged. Also during the time that I try to update the environment-setup.md, &lt;a class="mentioned-user" href="https://dev.to/cindy"&gt;@cindy&lt;/a&gt;
 Le also fixing and updating the same doc and it is my first time ever resolving a conflict and I have to redo it 3 times just to have it work like the way I wanted.&lt;/p&gt;

&lt;p&gt;I thought I will make it to &lt;a href="https://github.com/industrial-optimization-group/desdeo-frontend/issues/3#event-5538349288"&gt;PR-6&lt;/a&gt; for Hackoctober but unfortunately weekends work hold me down a bit.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>opensource</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Command Line Based Web Portfolio!</title>
      <author>Ashwath Mittal </author>
      <pubDate>Mon, 01 Nov 2021 10:06:39 +0000</pubDate>
      <link>https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6</link>
      <guid>https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6</guid>
      <description>&lt;p&gt;👋Hi there fellow developers! 🎊&lt;br&gt;
I hope you're doing fantastic!&lt;/p&gt;

&lt;p&gt;In the past, I was powerfully impressed by a portfolio that was inspired by 🪟 Windows 11 made by VovaCodes (&lt;a href="https://www.vovacodes.ca/"&gt;https://www.vovacodes.ca/&lt;/a&gt;).&lt;br&gt;
So, this basically has always been my small dream to build a portfolio-app that visually mimics a Command Line Interface.&lt;/p&gt;

&lt;p&gt;Recently, I had some free time and I finally decided to turn this plan into reality. So, I started working on Command Line &lt;br&gt;
inspired portfolio ✨.&lt;br&gt;
You can try it out here: &lt;a href="https://ashwathmittal.github.io/AshwathMittal/#/terminal"&gt;https://ashwathmittal.github.io/AshwathMittal/#/terminal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source Code On GitHub: &lt;a href="https://github.com/AshwathMittal/AshwathMittal/"&gt;https://github.com/AshwathMittal/AshwathMittal/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an Angular app. It is written in TypeScript, so if you're learning it, you could explore the GitHub repo 💥&lt;/p&gt;

&lt;p&gt;Cheers! 🤙&lt;/p&gt;

&lt;p&gt;Keep in mind, this is a work in progress! More features to come (and bugs tackled 😄)&lt;/p&gt;

</description>
      <category>linux</category>
      <category>css</category>
      <category>angular</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Salesforce Solution Providers in the Travel industry: What problems CRM solves in travel agencies?</title>
      <author>UI/UX Design Services </author>
      <pubDate>Mon, 01 Nov 2021 10:05:53 +0000</pubDate>
      <link>https://dev.to/reloadux/salesforce-solution-providers-in-the-travel-industry-what-problems-crm-solves-in-travel-agencies-3kag</link>
      <guid>https://dev.to/reloadux/salesforce-solution-providers-in-the-travel-industry-what-problems-crm-solves-in-travel-agencies-3kag</guid>
      <description>&lt;p&gt;&lt;a href="https://tkxel.com/salesforce-consulting-services/"&gt;Salesforce Solution providers&lt;/a&gt; (CRM Solution), also known as systems for managing customer relationships, are among the most sought-after solutions businesses require in their daily operations. As a result, many companies implement these systems to streamline internal processes, increase customer service, and build stronger relationships with partners and customers.&lt;/p&gt;

&lt;p&gt;Travel businesses are not the most unusual. In the face of high competition and the necessity to keep up with the times and improvement, they constantly seek improvements. In this article, we will discuss the issues CRM solutions can solve in the travel industry and then look at the advantages of CRM.&lt;/p&gt;

&lt;h2&gt;Incompleteness or "mess" in records - Maintenance and creation of high-quality databases&lt;/h2&gt;

&lt;p&gt;A quality database assists travel companies in improving their relationships with their customers, their loyalty, and, consequently, the overall revenue. So what can you find included in a database of information?&lt;/p&gt;

&lt;p&gt;In the beginning, contact information, general information and the list of demands during every interaction with the customer and contact times, and the summary of conversations details about scheduled tours, the reasons behind the rejection, and more.&lt;/p&gt;

&lt;p&gt;Insufficient "mess" in records and precise database maintenance leads to the elimination of information loss and the need to search for documents or notes that, in turn, influences company performance.&lt;/p&gt;

&lt;p&gt;Additionally, CRM software solutions offer the ability to schedule automatic reminders. For example, imagine you received an email from a person thinking of booking a trip to Europe, and you decided to call him back later.&lt;/p&gt;

&lt;p&gt;To not lose your client, you will need to set a reminder for them that you should call the person on day X. It is also possible to make notes about his preferences, the discounts you'd like to offer, or the amount of the budget.&lt;/p&gt;

&lt;p&gt;When developing your CRM system, keep in mind the introduction of automatic updates to ensure that every change appears for users who have an access point to your database.
So, in the end, you will have a well-organized database that can help managers quickly find their way through massive data streams, avoid leads, and offer higher-quality services.&lt;/p&gt;

&lt;h2&gt;Audience segmentation and targeted advertising&lt;/h2&gt;

&lt;p&gt;Through CRM systems, it is possible to define your target audience. For example, what's the ratio of women and men younger and adult? What is the budget average of your target audience?&lt;/p&gt;

&lt;p&gt;What are the most popular destinations for its staff members and what modes of transport do they prefer? What are the most well-known tours?&lt;/p&gt;

&lt;p&gt;A CRM software application lets you address these issues and create an overview of your typical client and segment your customer base into different segments. Of course, the parameters for each piece could be other, ranging from the customer's age to their budget.&lt;/p&gt;

&lt;p&gt;Then, you will determine the size and the critical features of each segment and then create individual offers for each piece.
For instance, in the settings, you can select various filters to define the customers who booked a family summer trip to Italy in the past year and then send them deals. The targeted approach and the improvement of your target aid in sales enforcement.&lt;/p&gt;

&lt;h2&gt;Advertising campaigns are prepared&lt;/h2&gt;

&lt;p&gt;The development of CRM applications can bring many advantages. One of these is the automated and efficient management of the creation of advertising campaigns process.&lt;/p&gt;

&lt;p&gt;The first is that you have an existing client base (including those who are currently and prospective), and you can split into segments and then, using filters, create your email campaign that targets specific groups.&lt;/p&gt;

&lt;p&gt;In addition, CRM systems usually provide different templates for content email campaign preparation. For example, they may include elements such as text as well as buttons (social media buttons, call-to-action buttons, for instance, "Contact Us," "Book a tour," in line with your purpose) as well as images.&lt;/p&gt;

&lt;p&gt;The CRM software applications provide the capability to plan marketing campaigns and launch them. For example, you've designed numerous campaigns and now require them to be sent at a different date. You can save them as drafts and then set them up for automated sending on a required day and at the appropriate time.&lt;/p&gt;

&lt;h2&gt;Analyzing marketing campaigns&lt;/h2&gt;

&lt;p&gt;In the previous paragraphs, we've discussed the use of CRM systems to aid in the segmentation of the target audience and for targeting campaigns' preparation. Another advantage of a CRM software system is the capability to analyze the outcomes of your efforts.&lt;/p&gt;

&lt;p&gt;You've, for instance, sent an email marketing campaign that reached 500 customers. Utilizing the CRM software, you'll be able to estimate its effectiveness by analyzing indicators as the proportion of emails opened and the percentage of readers of letters, click-through rates, and the percentage of clients who have contacted you and who arranged the tour.&lt;/p&gt;

&lt;p&gt;Travel companies, therefore, utilize customized websites and mobile &lt;a href="https://tkxel.com/salesforce-consulting-services/"&gt;CRM application development&lt;/a&gt; to target the improvement of their marketing campaigns and enhancing them and for testing and analysis.&lt;/p&gt;

&lt;h2&gt;Teamwork and task assignment&lt;/h2&gt;

&lt;p&gt;There are a variety of CRM-related scenarios in the field of travel. Apart from the goals mentioned above, travel businesses continue to work on CRM application development to ensure that they have efficient work planning collaboration, teamwork, and work schedules.&lt;/p&gt;

&lt;p&gt;With the aid of the interactive dashboard built into the CRM software, it is possible to coordinate and oversee employee work assign tasks, take notes on calls (both scheduled and received) leads, partners email, partners, and look through work calendars, schedule reminders, and much more. In addition, a built-in calendar lets you visualize your plans and the finalization.&lt;/p&gt;

&lt;p&gt;Travel agencies also opt for CRM development applications to automate processing requests, track outbound, and inbound messages and phone calls, and make comprehensive KPI reports.&lt;/p&gt;

&lt;p&gt;So CRM applications are widely utilized within travel, making it easier for employees' work and speeding up many processes. In addition, we offer custom services for mobile and web-based application design services, which include CRM software development and integration.&lt;/p&gt;

&lt;p&gt;To know more about the features of CRM systems, check out our blog post "&lt;a href="https://tkxel.com/blog/salesforce-consultants-do-i-need-one/"&gt;Salesforce Consultants – Do I need one?&lt;/a&gt;".&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Adding PhpMyAdmin to Laragon Lite</title>
      <author>Dendi Handian</author>
      <pubDate>Mon, 01 Nov 2021 09:56:16 +0000</pubDate>
      <link>https://dev.to/dendihandian/adding-phpmyadmin-to-laragon-lite-j96</link>
      <guid>https://dev.to/dendihandian/adding-phpmyadmin-to-laragon-lite-j96</guid>
      <description>&lt;h2&gt;
  &lt;a href="#download-the-latest-phpmyadmin"&gt;
  &lt;/a&gt;
  Download The Latest PhpMyAdmin
&lt;/h2&gt;

&lt;p&gt;Download it from &lt;a href="https://www.phpmyadmin.net/downloads"&gt;https://www.phpmyadmin.net/downloads&lt;/a&gt;, extract the archive to the &lt;code&gt;C:\laragon\etc\apps&lt;/code&gt; (if you use the default laragon installation directory) and name the folder as &lt;code&gt;phpMyAdmin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--otsm3yc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mp3c75uz6hv862cgk02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--otsm3yc9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mp3c75uz6hv862cgk02.png" alt="Image description" width="650" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And restart the laragon's apache server to take effect and make sure the MySQL server is started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#access-the-phpmyadmin"&gt;
  &lt;/a&gt;
  Access the PhpMyAdmin
&lt;/h2&gt;

&lt;p&gt;Now when you click the &lt;code&gt;Database&lt;/code&gt; button in laragon,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j307QnTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7eodhf0ez7ct84lf4ts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j307QnTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7eodhf0ez7ct84lf4ts.png" alt="Image description" width="636" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will open the browser and direct you the phpmyadmin login page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OJrIr_MI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbmlgvdfazgp2z1hny6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OJrIr_MI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbmlgvdfazgp2z1hny6.png" alt="Image description" width="716" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Explain Me Cookies Like I Am 9</title>
      <author>Aditya Priyadarshi</author>
      <pubDate>Mon, 01 Nov 2021 09:47:06 +0000</pubDate>
      <link>https://dev.to/foxy4096/explain-me-cookies-like-i-am-9-1kmn</link>
      <guid>https://dev.to/foxy4096/explain-me-cookies-like-i-am-9-1kmn</guid>
      <description>&lt;p&gt;Use your knowledge,&lt;/p&gt;

&lt;p&gt;I am kinda busy these days.&lt;/p&gt;

&lt;p&gt;Peace ✌&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
