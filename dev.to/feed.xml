<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Local Storage API en JavaScript üçÇ</title>
      <author>dux</author>
      <pubDate>Mon, 02 Aug 2021 17:41:19 +0000</pubDate>
      <link>https://dev.to/duxtech/local-storage-api-en-javascript-o88</link>
      <guid>https://dev.to/duxtech/local-storage-api-en-javascript-o88</guid>
      <description>&lt;h1&gt;
  &lt;a href="#%C3%ADndice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;√çndice&lt;/strong&gt;
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#id1"&gt;Qu√© es Local Storage?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id2"&gt;Caracter√≠sticas de Local Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id3"&gt;Almacenar valores en Local Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id4"&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt; para convertir arreglos y objetos a strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id5"&gt;Obtener valores de Local Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id6"&gt;&lt;code&gt;JSON.parse()&lt;/code&gt; para convertir strings a arreglos u objetos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id7"&gt;Eliminar valores de Local Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id8"&gt;Conclusiones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#id9"&gt;Referencias&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-qu%C3%A9-es-local-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. ¬øQu√© es Local Storage?&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Local Storage es una API del navegador que permite la persistencia de datos en memoria. Dichos datos se almacenan en el propio browser web y pueden ser accedidos a los mismos aun si cerramos el navegador o apagamos el computador.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-caracter%C3%ADsticas-de-local-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Caracter√≠sticas de Local Storage&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;No soporta tipos de datos num√©ricos, ni arreglos, ni objetos.&lt;/li&gt;
&lt;li&gt;Solo podemos almacenar cadenas de texto.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localStorage.setItem()&lt;/code&gt; guarda los datos.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localStorage.getItem()&lt;/code&gt; obtiene los datos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-almacenar-valores-en-local-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Almacenar valores en Local Storage&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Para poder guardar datos en el Local Storage del navegador usamos el m√©todo &lt;code&gt;setItem()&lt;/code&gt; del objeto &lt;code&gt;localStorage&lt;/code&gt;. Por ejemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nombre&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cristian&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Almacena una propiedad nombre con el valor de Cristian.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#4-raw-jsonstringify-endraw-para-convertir-arreglos-y-objetos-a-strings"&gt;
  &lt;/a&gt;
  4. &lt;code&gt;JSON.stringify()&lt;/code&gt; para convertir arreglos y objetos a strings &lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Para poder almacenar arreglos y objetos en el storage es posible usar &lt;code&gt;JSON.stringify()&lt;/code&gt;, esto convertir√° un arreglo u objeto en string. Por ejemplo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;persona&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;nombre&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cris&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;persona&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;persona&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Almacena el objeto &lt;code&gt;persona&lt;/code&gt; convirti√©ndolo a string con &lt;code&gt;JSON.stringify()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#5-obtener-valores-de-local-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Obtener valores de Local Storage&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Para obtener valores del Local Storage usamos el m√©todo &lt;code&gt;getItem()&lt;/code&gt; del objeto &lt;code&gt;localStorage&lt;/code&gt;. Por ejemplo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;persona&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// "{ id:1, nombre:Cris }" es un string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Obtiene el objeto &lt;code&gt;persona&lt;/code&gt; en formato string.&lt;br&gt;
Si intentamos obtener un valor que no existe, el navegador regresar√° un &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#6-raw-jsonparse-endraw-para-convertir-strings-a-arreglos-u-objetos"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;JSON.parse()&lt;/code&gt; para convertir strings a arreglos u objetos &lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Para convertir arreglos u objetos en formato string se usa el m√©todo &lt;code&gt;JSON.parse()&lt;/code&gt;, por ejemplo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;persona&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="c1"&gt;// { id:1, nombre:Cris } es un objeto&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#7-eliminar-valores-de-local-storage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Eliminar valores de Local Storage&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Se usa el m√©todo &lt;code&gt;removeItem()&lt;/code&gt; y recibe el &lt;code&gt;key&lt;/code&gt; del elemento que deseas eliminar, por ejemplo:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;persona&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Elimina el objeto &lt;code&gt;persona&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tamb√≠en se puede limpiar &lt;strong&gt;TODO&lt;/strong&gt; el storage usando:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#8-conclusiones"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Conclusiones&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Es un API de los navegadores web modernos que permiten la persistencia de datos.&lt;/li&gt;
&lt;li&gt;Solo podemos almacenar cadenas de texto.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localStorage.setItem()&lt;/code&gt; guarda los datos.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localStorage.getItem()&lt;/code&gt; obtiene los datos.&lt;/li&gt;
&lt;li&gt;Si tratamos de obtener un dato que no existe el navegador regresa &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;JSON.stringify()&lt;/code&gt; convierte un tipo de dato a string&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;JSON.parse()&lt;/code&gt; opuesto al anterior.&lt;/li&gt;
&lt;li&gt;No existe un m√©todo de local storage que permite actualizar los datos, pero es posible hacer esto usando todos los m√©todos que vimos en este post&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#9-referencias"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. Referencias&lt;/strong&gt;&lt;a&gt;&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/course/javascript-moderno-guia-definitiva-construye-10-proyectos/learn/lecture/21852728#content"&gt;https://www.udemy.com/course/javascript-moderno-guia-definitiva-construye-10-proyectos/learn/lecture/21852728#content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Quiz√° pueda ser de tu inter√©s algunos de los siguientes posts escritos por mi, dales un ojo, es gratis!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/duxtech" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjv7Wnd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--40XPhqX3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/391281/fe9f8985-2f7e-4614-af22-73b275663b9a.jpg" alt="duxtech"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/duxtech/el-mejor-curso-de-node-y-express-de-2021-28d2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;El mejor curso gratuito de Node y Express de 2021&lt;/h2&gt;
      &lt;h3&gt;dux „Éª Jul 15 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#backend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#spanish&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;




&lt;div class="ltag__link"&gt;
  &lt;a href="/duxtech" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjv7Wnd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--40XPhqX3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/391281/fe9f8985-2f7e-4614-af22-73b275663b9a.jpg" alt="duxtech"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/duxtech/npm-cheat-sheet-4ak1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;NPM Cheat Sheet &lt;/h2&gt;
      &lt;h3&gt;dux „Éª Jun 29 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#spanish&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/duxtech" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjv7Wnd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--40XPhqX3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/391281/fe9f8985-2f7e-4614-af22-73b275663b9a.jpg" alt="duxtech"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/duxtech/10-preguntas-y-respuestas-frecuentes-al-momento-de-aprender-node-js-1ncl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 preguntas y respuestas frecuentes al momento de aprender Node.js&lt;/h2&gt;
      &lt;h3&gt;dux „Éª Jul 8 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#spanish&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#backend&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" alt="gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>spanish</category>
    </item>
    <item>
      <title>Binary Search - JavaScript | Plus Big O Performance Explained Simply</title>
      <author>Danny Adams</author>
      <pubDate>Mon, 02 Aug 2021 17:31:02 +0000</pubDate>
      <link>https://dev.to/doabledanny/binary-search-javascript-plus-big-o-performance-explained-simply-3jbn</link>
      <guid>https://dev.to/doabledanny/binary-search-javascript-plus-big-o-performance-explained-simply-3jbn</guid>
      <description>&lt;p&gt;This article was originally published on &lt;a href="https://www.doabledanny.com/binary-search-javascript"&gt;DoableDanny.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Binary Search algorithm is used to search for any element in a &lt;em&gt;sorted&lt;/em&gt; array. If the element is found, it returns the element‚Äôs index. If not, it returns -1.&lt;/p&gt;

&lt;p&gt;Binary Search is a simple and intuitive algorithm that also has great performance; it can find the value fast ‚Äì much faster than the &lt;a href="https://www.doabledanny.com/linear-search-in-javascript"&gt;Linear Search algorithm&lt;/a&gt; (as used by the built-in method &lt;code&gt;indexOf()&lt;/code&gt;) when the array is large.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binary-search-steps"&gt;
  &lt;/a&gt;
  Binary Search Steps
&lt;/h2&gt;

&lt;p&gt;Binary search is a ‚Äúdivide and conquer‚Äù type algorithm, meaning it divides the array roughly in half every time that it checks whether a value is the one we are looking for.&lt;/p&gt;

&lt;p&gt;Why? It means that upon every check, the data the algorithm has to work with gets halved upon each comparison, allowing the value to be found much faster.&lt;/p&gt;

&lt;p&gt;See the gif below demonstrating Binary and Linear Search. The target is the value 9.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PNWqc_R9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gb49p4klebgbtdwijpak.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PNWqc_R9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gb49p4klebgbtdwijpak.gif" alt="Binary search gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Linear Search, if the target is at the end of the array, every single element has to be looped over and checked if it equals the target.&lt;/p&gt;

&lt;p&gt;With Binary Search we:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start in the middle and check if the target is greater or less than that middle value.&lt;/li&gt;
&lt;li&gt;If the target is greater than the middle value, we will next look at the second half of the array (ignore the left side)&lt;/li&gt;
&lt;li&gt;If the target is smaller, we look at the first half of the array (ignore the right side).&lt;/li&gt;
&lt;li&gt;We pick the middle of that half and check if it‚Äôs greater or less than our target.&lt;/li&gt;
&lt;li&gt;Repeat this process until we find our target.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example: [1, 2, 5, 9] with target= 5&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start at middle (even length array, so middle ‚Äì 1): [1, &lt;strong&gt;2&lt;/strong&gt;, 5, 9]&lt;/li&gt;
&lt;li&gt;Is 5 greater than, smaller than, or equal to 2?&lt;/li&gt;
&lt;li&gt;Greater, so 5 must be in the right half of the array: [5, 9].&lt;/li&gt;
&lt;li&gt;Pick new middle: [&lt;strong&gt;5&lt;/strong&gt;, 9]&lt;/li&gt;
&lt;li&gt;Is 5 greater than, smaller than, or equal to 5?&lt;/li&gt;
&lt;li&gt;Equal! Return the index of that element, 2.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, with Binary Search, the data set keeps getting divided in half until we find our target. This tremendously decreases time complexity!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binary-search-in-javascript"&gt;
  &lt;/a&gt;
  Binary Search in JavaScript
&lt;/h2&gt;

&lt;p&gt;Now we understand the logic of Binary Search, let‚Äôs implement it in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Search the right half&lt;/span&gt;
      &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Search the left half&lt;/span&gt;
      &lt;span class="nx"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;middle&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;middle&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Found target&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;middle&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Target not found&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// -1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 4&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;binarySearch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here‚Äôs what‚Äôs going on:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The function accepts a sorted array and a target value.&lt;/li&gt;
&lt;li&gt;Create a left pointer at the first element of the array, and a right pointer at the last element of the array.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While the left pointer comes before the right pointer:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a pointer in the middle.&lt;/li&gt;
&lt;li&gt;If the target is greater than the middle element, move the left pointer up.&lt;/li&gt;
&lt;li&gt;If the target is less than the middle element, move the right pointer down.&lt;/li&gt;
&lt;li&gt;If the target equals the middle, return the index.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the value isn‚Äôt found, return -1.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On each iteration of the while loop, we are effectively discarding half of the array, until we find our value or until we‚Äôve exhausted the array.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binary-search-time-complexity"&gt;
  &lt;/a&gt;
  Binary Search time complexity
&lt;/h2&gt;

&lt;p&gt;We will now discuss the performance of Binary Search in terms of Big O Notation.&lt;/p&gt;

&lt;p&gt;If you're unfamiliar with Big O, I strongly suggest that you check out this article I wrote: &lt;a href="https://www.doabledanny.com/big-o-notation-in-javascript"&gt;Big O Notation in JavaScript | The Ultimate Beginners Guide with Examples&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's a very important topic and will undoubtedly make you a better developer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-case-complexity-of-binary-search"&gt;
  &lt;/a&gt;
  Best case complexity of Binary Search
&lt;/h3&gt;

&lt;p&gt;The best case complexity of Binary Search occurs when the first comparison is correct (the target value is in the middle of the input array).&lt;/p&gt;

&lt;p&gt;This means that regardless of the size of the array, we‚Äôll always get the result in constant time. Therefore, the best case time complexity is O(1) - constant time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#worst-case-complexity-of-binary-search"&gt;
  &lt;/a&gt;
  Worst case complexity of Binary Search
&lt;/h3&gt;

&lt;p&gt;The worst case complexity of Binary Search occurs when the target value is at the beginning or end of the array.&lt;/p&gt;

&lt;p&gt;See the image below: if we have an array 32 elements long and our target is 32, then the array will be divided five times until we find 32. So, the &lt;a href="https://www.doabledanny.com/big-o-notation-in-javascript"&gt;Big O complexity&lt;/a&gt; of binary search is O(log(n)) ‚Äì logarithmic time complexity: log(32) = 5.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mWB53BIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytb86rcdobrziiqwgnjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mWB53BIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytb86rcdobrziiqwgnjn.png" alt="Binary Search Steps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#average-case-complexity-of-binary-search"&gt;
  &lt;/a&gt;
  Average case complexity of Binary Search
&lt;/h3&gt;

&lt;p&gt;The average case is also of O(log(n)).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#space-complexity-of-binary-search"&gt;
  &lt;/a&gt;
  Space complexity of Binary Search
&lt;/h2&gt;

&lt;p&gt;Binary Search requires three pointers to elements (start, middle and end), regardless of the size of the array. Therefore the space complexity of Binary Search is O(1) ‚Äì constant space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-summary-table"&gt;
  &lt;/a&gt;
  Performance summary table
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUnF5ZoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egc098kzd70c6dcx2cy3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUnF5ZoP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egc098kzd70c6dcx2cy3.PNG" alt="Binary search performance summary table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linear-search-vs-binary-search"&gt;
  &lt;/a&gt;
  Linear Search vs Binary Search
&lt;/h2&gt;

&lt;p&gt;Binary Search has much better time complexity than &lt;a href="https://www.doabledanny.com/linear-search-in-javascript"&gt;Linear Search&lt;/a&gt;, which has a Big O(n) ‚Äì linear time.&lt;/p&gt;

&lt;p&gt;From the graph of Big O Notation below, we can see that with larger input arrays, Binary Search (yellow line) will take a lot less time to compute than Linear Search (blue line).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9PVMxAnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vklm8js37u8a9myvhfo8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9PVMxAnn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vklm8js37u8a9myvhfo8.png" alt="Graph of Big O Notation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It should be noted that Binary Search only works on sorted arrays.&lt;/strong&gt; The sorting step, if using an efficient algorithm, will have a time complexity of O(nlog(n)). Since Linear Search can work on sorted arrays, if the array is small, or if we need to search the array just once, then Linear Search might be a better choice.&lt;/p&gt;

&lt;p&gt;Binary Search is a great choice if we have to make multiple searches on large arrays. For example, if we have a large 10,000 element array, Linear Search would require 10,000 comparisons at worst case. Binary Search would require log(10,000) = 14 comparisons. That‚Äôs a lot less!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-you-want-to-master-algorithms"&gt;
  &lt;/a&gt;
  If you Want to Master Algorithms...
&lt;/h2&gt;

&lt;p&gt;If you want to further your knowledge of algorithms and data structures, check out: &lt;a href="https://ad.admitad.com/g/05dgete24sfa55577a70b3e3b7aadc/?ulp=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjs-algorithms-and-data-structures-masterclass%2F"&gt;JavaScript Algorithms and Data Structures Masterclass by Colt Steele&lt;/a&gt;. It‚Äôs the best Udemy course I‚Äôve ever taken üëå.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article, you can say thanks by subscribing to my &lt;a href="https://www.youtube.com/channel/UC0URylW_U4i26wN231yRqvA"&gt;YouTube channel&lt;/a&gt; üôè&lt;/p&gt;

&lt;p&gt;Also, feel free to connect with me on &lt;a href="https://twitter.com/DoableDanny"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>Flutter counter app, but using isolates</title>
      <author>Hrishikesh Pathak</author>
      <pubDate>Mon, 02 Aug 2021 17:28:00 +0000</pubDate>
      <link>https://dev.to/hrishiksh/flutter-counter-app-but-using-isolates-4e5j</link>
      <guid>https://dev.to/hrishiksh/flutter-counter-app-but-using-isolates-4e5j</guid>
      <description>&lt;p&gt;Asynchronous and parallelism is two different things. Let's take an example. Our brain can do only one thing at a time. It can't handle two different things at the same instant. If you want to talk about multitasking here, it is actually asynchronous in nature. In multitasking, if a job is taking more time, then we move to another work and when the first job is done, we come back to process the output from the first job.&lt;/p&gt;

&lt;p&gt;It is simple, right. Till now, it looks like asynchronous processing is the bast way to boost our productivity, right ? Yeah, but not 100% right.&lt;/p&gt;

&lt;p&gt;Nowadays, multicore CPU are default in our machines, it can do a lot of different things parallelly. So to use this architecture, we have to make our software in a way to use multicore or multiple thread. &lt;/p&gt;

&lt;p&gt;But the thing is that flutter use only one thread, and it does all of its work on a single thread. In this thread, it has to pump 60 Frames Per Second to give a fluid experience to the end user. If we do some heavy work or long-running task in this thread, Then flutter thread will be busy in the heavy work and as a result frame rates of our app will drop and the app looks sluggish, or stutters.&lt;/p&gt;

&lt;p&gt;So what to do ? How to do heavy lifting work in out flutter app ? There are many ways to this in flutter. Like writing asynchronous code or using compute function.&lt;/p&gt;

&lt;p&gt;But the best way I have found that to use an isolated. If you haven't heard this name before, don't worry. I am here to help.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-isolate-in-flutter"&gt;
  &lt;/a&gt;
  What is an Isolate in flutter
&lt;/h2&gt;

&lt;p&gt;Isolate is a container which  is completely separate from flutter thread and don't share any memory with the app. Isolate means a CPU thread which run in its own sandbox. We can create an isolate from a flutter app and communicate with an isolate by passing messages to and fro with the isolate.&lt;/p&gt;

&lt;p&gt;So enough of introduction, let's see how to create and use isolates in flutter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-are-going-to-make"&gt;
  &lt;/a&gt;
  What we are going to make
&lt;/h2&gt;

&lt;p&gt;Here we will use the basic flutter counter app and implement  isolate to generate random numbers. Just like the vanilla flutter counter app, but with isolate. Excited ? Let's dive in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-an-isolate-in-flutter"&gt;
  &lt;/a&gt;
  How to create an Isolate in flutter
&lt;/h2&gt;

&lt;p&gt;To create Isolate in flutter, we need to import &lt;code&gt;dart:isolate&lt;/code&gt; package. We can start an isolate from our main thread with &lt;code&gt;Isolate.spawn&lt;/code&gt; method. This is the entry point to our isolate, and we have to pass a &lt;code&gt;ReceivePort&lt;/code&gt; in &lt;code&gt;Isolate.spawn&lt;/code&gt; method to receive message from the isolate and listen the messages as a stream in the main thread.&lt;/p&gt;

&lt;p&gt;Let us create a stateful widget named &lt;code&gt;MyApp&lt;/code&gt; in flutter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_MyAppState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_MyAppState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_MyAppState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Counter"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="nl"&gt;floatingActionButton:&lt;/span&gt; &lt;span class="n"&gt;FloatingActionButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{},&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, I define the &lt;code&gt;Isolate _isolate&lt;/code&gt; variable in the top of the stateful widget. As we need to listen, the incoming values from the isolate inside the &lt;code&gt;build&lt;/code&gt; function as a stream.&lt;/p&gt;

&lt;p&gt;Then in the &lt;code&gt;initState&lt;/code&gt; function in our widget, we start our isolate and pass a &lt;code&gt;ReceivePort&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;initState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;spawnIsolate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;Future&lt;/span&gt; &lt;span class="nf"&gt;spawnIsolate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ReceivePort&lt;/span&gt; &lt;span class="n"&gt;_receivePort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReceivePort&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;_isolate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Isolate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;spawn&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remoteIsolate&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;debugName:&lt;/span&gt; &lt;span class="s"&gt;"remoteIsolate"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, &lt;code&gt;remoteIsolate&lt;/code&gt; is the entry point of the isolate. &lt;/p&gt;

&lt;p&gt;We have defined a &lt;code&gt;ReceivePort _receivePort&lt;/code&gt; and send the &lt;code&gt;_receivePort.sendPort&lt;/code&gt; to the created isolate. This &lt;code&gt;sendPort&lt;/code&gt; is the address of the main thread of the application. We have given our isolate a name called &lt;code&gt;remoteIsolate&lt;/code&gt;. This will be helpful to debug our code later.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;remoteIsolate&lt;/code&gt; can use &lt;code&gt;sendPort&lt;/code&gt; to send data to the main thread.&lt;/p&gt;

&lt;p&gt;Now inside the &lt;code&gt;remoteIsolate&lt;/code&gt; function, which is the entry point of our isolate, we define the working or functionality of our isolate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;remoteIsolate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SendPort&lt;/span&gt; &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hi i am from remote Isolate"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can listen to this message in our main thread using the &lt;code&gt;ReceivePort&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Till now, I think you have understood the basic working of an &lt;code&gt;Isolate&lt;/code&gt; and how to use &lt;code&gt;ReceivePort&lt;/code&gt; and &lt;code&gt;SendPort&lt;/code&gt; to communicate between isolate and the main thread.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bidirectional-communication-between-isolate-and-the-mainthread"&gt;
  &lt;/a&gt;
  Bidirectional communication between isolate and the main-thread
&lt;/h2&gt;

&lt;p&gt;Bidirectional communication between isolate and the main thread is very useful if we have to use the same isolate repeatedly.&lt;/p&gt;

&lt;p&gt;To send a message from the main-thread to our isolate, we need the &lt;code&gt;sendPort&lt;/code&gt; of the isolate. To get that &lt;code&gt;sendPort&lt;/code&gt;, we the isolate is initialize for the first time, we create a &lt;code&gt;ReceivePort&lt;/code&gt; inside the isolate and send the &lt;code&gt;sendPort&lt;/code&gt; to the main thread as a message. &lt;/p&gt;

&lt;p&gt;Then we can use this &lt;code&gt;sendPort&lt;/code&gt; of the isolate to send a message from our main thread.&lt;/p&gt;

&lt;p&gt;Let's modify our &lt;code&gt;remoteIsolate&lt;/code&gt; function from above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;remoteIsolate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SendPort&lt;/span&gt; &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ReceivePort&lt;/span&gt; &lt;span class="n"&gt;_isolateReceivePort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReceivePort&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_isolateReceivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have to identify the &lt;code&gt;sendPort&lt;/code&gt; from the rest of the message in our main-thread.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;SendPort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SendPort from Isolate received"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use this &lt;code&gt;sendPort&lt;/code&gt; to send any message to the isolate. So we can now use bidirectional messaging in flutter isolate and can reuse the isolate over and over again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutter-counter-app-using-isolate"&gt;
  &lt;/a&gt;
  Flutter counter app using Isolate
&lt;/h2&gt;

&lt;p&gt;As I have promised before in this article, This is the complete source-code of isolate implementation in the flutter counter app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'dart:isolate'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'dart:math'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_MyAppState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_MyAppState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_MyAppState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ReceivePort&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;Isolate&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;_isolate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;SendPort&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;_isolateSendPort&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;remoteIsolate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SendPort&lt;/span&gt; &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;ReceivePort&lt;/span&gt; &lt;span class="n"&gt;_isolateReceivePort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReceivePort&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_isolateReceivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_isolateReceivePort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;listen&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Random&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;nextInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;});&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt; &lt;span class="n"&gt;spawnIsolate&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_receivePort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReceivePort&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;_isolate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;Isolate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;spawn&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remoteIsolate&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;!.&lt;/span&gt;&lt;span class="na"&gt;sendPort&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;debugName:&lt;/span&gt; &lt;span class="s"&gt;"remoteIsolate"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;spawnIsolate&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_isolate&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;_isolate&lt;/span&gt;&lt;span class="o"&gt;!.&lt;/span&gt;&lt;span class="na"&gt;kill&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Counter"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;StreamBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;stream:&lt;/span&gt; &lt;span class="n"&gt;_receivePort&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;initialData:&lt;/span&gt; &lt;span class="s"&gt;"NoData"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AsyncSnapshot&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;SendPort&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
              &lt;span class="n"&gt;_isolateSendPort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
              &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;floatingActionButton:&lt;/span&gt; &lt;span class="n"&gt;FloatingActionButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;_isolateSendPort&lt;/span&gt;&lt;span class="o"&gt;!.&lt;/span&gt;&lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;},&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have like this article, leave a comment. If you want to use a file picker in flutter, you can read &lt;a href="https://www.devquark.com/blog/file-picker-flutter"&gt;this article&lt;/a&gt;. Follow me on &lt;a href="https://twitter.com/hrishikshpathak"&gt;Twitter&lt;/a&gt; to discuss cool new tech.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>android</category>
      <category>ios</category>
    </item>
    <item>
      <title>Localize Your Content And Succeed Globally</title>
      <author>Shada </author>
      <pubDate>Mon, 02 Aug 2021 17:12:27 +0000</pubDate>
      <link>https://dev.to/strapi/localize-your-content-and-succeed-globally-496o</link>
      <guid>https://dev.to/strapi/localize-your-content-and-succeed-globally-496o</guid>
      <description>&lt;p&gt;Each global region has its customs, jokes, and different expectations of how content should be presented. &lt;/p&gt;

&lt;p&gt;Launching your product into another region requires adequate and precise information about the region you are targeting. Creating content that can appeal to customers in their own culture is imperative as it leads to the success of your product in a different market.&lt;/p&gt;

&lt;p&gt;Appreciate the cultural difference and localize your content for different regions that your product is present in. &lt;/p&gt;

&lt;p&gt;What pleases a user in Johannesburg might not impress a user in Beijing:&lt;/p&gt;

&lt;p&gt;Giant companies like &lt;a href="https://www.mcdonalds.com/us/en-us.html"&gt;McDonald‚Äôs&lt;/a&gt; and &lt;a href="https://www.nike.com/"&gt;Nike&lt;/a&gt; win more customers through their websites by meticulously localizing their website content.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#we-will-cover-the-following-points-in-this-article"&gt;
  &lt;/a&gt;
  We will cover the following points in this article:
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Importance of localizing content&lt;/li&gt;
&lt;li&gt;Consequences of not localizing your content&lt;/li&gt;
&lt;li&gt;Factors of localization&lt;/li&gt;
&lt;li&gt;Best practices of localization&lt;/li&gt;
&lt;li&gt;In conclusion&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And we will dive deep into factors and localization best practices that drive your website to localization success.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#importance-of-localizing-content"&gt;
  &lt;/a&gt;
  Importance of localizing content
&lt;/h1&gt;

&lt;p&gt;Localization maximizes your audience globally. There are more than 3 billion people who are using the internet daily. &lt;/p&gt;

&lt;p&gt;Localizing your content to many regions allows you to win more customers. Localization broadens product variety, breaks cultural and language barriers. It leads to an increase in sales and product success in different locations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consequences-of-not-localizing-your-content"&gt;
  &lt;/a&gt;
  Consequences of not localizing your content
&lt;/h2&gt;

&lt;p&gt;Once your website is available in any country, and the content is not localized. Cultural differences and language become barriers. &lt;/p&gt;

&lt;p&gt;Potential customers are lost due to this: &lt;/p&gt;

&lt;p&gt;Users prefer websites and mobile applications that are thoroughly localized to their culture. In the end, your competitor and rivals gain more strength to win more users. &lt;/p&gt;

&lt;p&gt;Once your competitor has built a strong relationship with users, it gets harder to win customers in that region.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Preference to Native Language Statistics shows that 72.1% of internet users prefer to visit websites in their native language. Another stat shows that 90% of online shoppers prefer the native language when available on a website. And 78% of online shoppers will surely purchase if the website is localized.~&lt;/em&gt; &lt;a href="https://www.crystalhues.com/blog/facts-about-website-localization"&gt;&lt;em&gt;crystalhues&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#factors-to-consider-when-localizing-content"&gt;
  &lt;/a&gt;
  Factors to consider when localizing content
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#seo-strategy"&gt;
  &lt;/a&gt;
  SEO strategy
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Americans wear pants and play soccer while the British wear trousers and play football.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you shift your content to focus on various global regions, SEO strategies need to be revised and changed. Using the exact keywords in different locations could lead to failure. Use local keywords, phrases, and backlinks. &lt;/p&gt;

&lt;p&gt;What is popular in one location won‚Äôt be popular in another location:&lt;/p&gt;

&lt;p&gt;As you localize your website, it is imperative to revise your SEO strategy specifically for that location.&lt;/p&gt;

&lt;p&gt;Many Chinese residents use &lt;a href="https://www.baidu.com/"&gt;Baidu&lt;/a&gt; as google, and other American sites were blocked. On the other hand, Russians prefer the &lt;a href="https://yandex.com/"&gt;Yandex&lt;/a&gt; search engine. Suppose you‚Äôre targeting any region that doesn‚Äôt use Google as its primary search engine. &lt;/p&gt;

&lt;p&gt;You must prepare a list of keywords to enhance the website for those search engines. This list will go far in helping you to optimize your website and search engine results page (SERP). You will also need to know your potential customer and their needs when searching for your website in that region.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cultural-sensitivity"&gt;
  &lt;/a&gt;
  Cultural sensitivity
&lt;/h2&gt;

&lt;p&gt;Colors have different meanings across the globe. In western culture, the color white symbolizes purity and innocence, primarily used in weddings. While in eastern culture, white symbolizes sadness, and it is often linked to death. &lt;/p&gt;

&lt;p&gt;It is essential to question your choices on content if it is relevant to the cultural status quo. Talk to language experts or natives of the location to know more about a specific region. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#currency-numeric-formats-and-measurements"&gt;
  &lt;/a&gt;
  Currency, numeric formats, and measurements
&lt;/h2&gt;

&lt;p&gt;Nothing frustrates me as using a website that does not use my currency. Suddenly I have to start checking currency exchange rates online. Whenever selling goods and providing services online, use a specific currency for every particular country. &lt;/p&gt;

&lt;p&gt;And finally, review tax rates and laws. Present any necessary information to the user regarding tax rates or the law.&lt;/p&gt;

&lt;p&gt;People are willing to buy the key point when they don‚Äôt have to do currency conversions and calculations to know your online product costs.&lt;/p&gt;

&lt;p&gt;Numeric formats differ across global regions. Optimize your website so that the number is suitable for the specific region and finally consider measurements. &lt;/p&gt;

&lt;p&gt;In America, they use Miles, and other countries use Kilometers(km). A customer familiar with using Kilometres might underestimate the speed of 200m/h while comparing it to a car with a speed of 210 Km/h.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customer-care-service"&gt;
  &lt;/a&gt;
  Customer care service
&lt;/h2&gt;

&lt;p&gt;Product documentation, chatbots, and customer call center have to play a role also. Suppose you are going to localize your website. Customers need the assurance to assist them in a language that they can understand if they experience trouble with your product.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#best-practices-of-localization"&gt;
  &lt;/a&gt;
  Best practices of localization
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#keep-track-of-localization-results"&gt;
  &lt;/a&gt;
  Keep track of localization results
&lt;/h2&gt;

&lt;p&gt;Monitor and track localization results effectively to change the content strategy whenever necessary. Your implemented strategy might not perform well as you had expected. &lt;/p&gt;

&lt;p&gt;So it is better to use language management systems to track performance rather than waiting for the user‚Äôs feedback or change in sales reports to know the outcome of localizing your content. Also, the content strategy should clearly state a backup plan. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adequate-planning"&gt;
  &lt;/a&gt;
  Adequate planning
&lt;/h2&gt;

&lt;p&gt;The first step to localization is knowing which content should be localized. What languages will be translated? Create a plan and decision to translate specific languages. Set a demographic target to avoid unnecessary work. &lt;/p&gt;

&lt;p&gt;Above all, localization should also be involved in the website design process (at the beginning of the website development stage).&lt;/p&gt;

&lt;p&gt;While planning, ask yourself questions such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Am I taking the right approach?&lt;/li&gt;
&lt;li&gt;How can I plan my SEO strategy?&lt;/li&gt;
&lt;li&gt;What is my target market?&lt;/li&gt;
&lt;li&gt;Did I network with the right people who know more about the targeted market?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#test-your-software-and-proofread"&gt;
  &lt;/a&gt;
  Test your software and proofread
&lt;/h2&gt;

&lt;p&gt;The final content you have been working on has to be reviewed by professional translators and software/UI developers before rolling out the product to the public. &lt;/p&gt;

&lt;p&gt;The complete look of the localized content matters the most. Does each piece of the content resonate well with the culture? &lt;/p&gt;

&lt;p&gt;Localization testing involves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Testing localization aspects such as content transition.&lt;/li&gt;
&lt;li&gt;Linguistics.&lt;/li&gt;
&lt;li&gt;Checking typography and verifying the cultural appropriateness of the user interface. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#externalize-all-translatable-content"&gt;
  &lt;/a&gt;
  Externalize all translatable content
&lt;/h2&gt;

&lt;p&gt;Do not hardcode strings. It should translate strings and content to be stored in resource files. In the future, you won‚Äôt have to break the strings again if you do this. This will allow translation to be easily carried out and also make the translation procedure highly effective. &lt;/p&gt;

&lt;p&gt;This will also improve teamwork as translators work on the resource file containing the resource files, and the software developer focuses on internalization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-unicodeutf8-encoding-of-strings-and-text-expansion"&gt;
  &lt;/a&gt;
  Using Unicode/UTF-8 encoding of strings and text expansion
&lt;/h2&gt;

&lt;p&gt;Use the UTF-8 encoding when encoding strings. This encoding supports all languages.&lt;/p&gt;

&lt;p&gt;Leave plenty of space for text expansion when translating languages. Translating English to Spanish adds more words, and this affects the user interface. Text contraction might also occur if you are translating English that has lower text length. Keep this in mind.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you want to succeed internationally, you have to build websites and mobile applications that do not discriminate. Appreciate cultural differences and implement localization best practices.&lt;/p&gt;

</description>
      <category>content</category>
      <category>cms</category>
      <category>headless</category>
      <category>global</category>
    </item>
    <item>
      <title>Migrating a React codebase to web components</title>
      <author>Maroun Baydoun</author>
      <pubDate>Mon, 02 Aug 2021 17:05:08 +0000</pubDate>
      <link>https://dev.to/maroun_baydoun/migrating-a-react-codebase-to-web-components-3d8m</link>
      <guid>https://dev.to/maroun_baydoun/migrating-a-react-codebase-to-web-components-3d8m</guid>
      <description>&lt;p&gt;I recently migrated a browser extension from React to web components. This post describes my observations, learnings and pain points. Anything mentioned applies to native web components only. Third-party libraries such as &lt;a href="https://stenciljs.com/"&gt;stencil&lt;/a&gt; and &lt;a href="https://lit.dev/"&gt;lit&lt;/a&gt; offer a different set of solutions. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-the-extension-do"&gt;
  &lt;/a&gt;
  What does the extension do?
&lt;/h3&gt;

&lt;p&gt;The extension controls the playback of Youtube‚Ñ¢ videos from any tab in the browser. The user can assign shortcuts to play/pause videos even when the browser is in the background. &lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://chrome.google.com/webstore/detail/youtube-controller/poalplpedjpddipkghmlhkmgbcnmecop"&gt;install the extension&lt;/a&gt; on Chrome and &lt;a href="https://github.com/maroun-baydoun/youtube-controller-extension"&gt;check the code&lt;/a&gt; on Github.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-did-i-migrate"&gt;
  &lt;/a&gt;
  Why did I migrate?
&lt;/h3&gt;

&lt;p&gt;The extension was originally written using vanilla JavaScript in 2015. As the codebase grew in complexity, it became difficult to maintain the UI. I wanted a tiny framework to help me organise the interface into components. I chose &lt;a href="https://github.com/jorgebucaran/hyperapp"&gt;hyperapp&lt;/a&gt; for its small bundle size and seemingly easy API. It wasn‚Äôt that straightforward to learn after all and the documentation was lacking at the time. &lt;/p&gt;

&lt;p&gt;A few months later, I migrated to React. I wanted a familiar library that I didn‚Äôt need to relearn from scratch. I was finally happy with the quality of the code. The more I thought about it, however, the more I realised I was over-engineering my solution. &lt;/p&gt;

&lt;p&gt;Do I really need to ship two rather large packages, &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;? The answer was no, even though extensions are loaded locally and package size is not a major concern. The other problem was minification. While minified code is not prohibited, it could &lt;a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/What_next_#your_development_environment"&gt;delay the review process&lt;/a&gt; on some platforms. &lt;/p&gt;

&lt;p&gt;I needed a light-weight solution that doesn‚Äôt rely on external libraries. Enter web components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview-of-web-components"&gt;
  &lt;/a&gt;
  Overview of web components
&lt;/h3&gt;

&lt;p&gt;Web components are a set of four standards that have very good &lt;a href="https://caniuse.com/?search=web%20components"&gt;browser support&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom HTML elements&lt;/li&gt;
&lt;li&gt;Shadow DOM&lt;/li&gt;
&lt;li&gt;Templates&lt;/li&gt;
&lt;li&gt;EJS modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more about the &lt;a href="https://www.webcomponents.org/specs"&gt;specs&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparing-web-components-to-react"&gt;
  &lt;/a&gt;
  Comparing web components to React
&lt;/h3&gt;

&lt;p&gt;The following is a list of things I‚Äôve learned during the migration.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#custom-elements-are-classes"&gt;
  &lt;/a&gt;
  Custom elements are classes
&lt;/h4&gt;

&lt;p&gt;Since the release of hooks, I have completely stopped writing class components in React. Custom elements can only be declared as classes however. They have specific methods to hook (no pun intended) into the lifecycle of the element. In that sense, they are quite similar to class components in React. One of the biggest differences is the lack of a render method. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#back-to-imperative-programming"&gt;
  &lt;/a&gt;
  Back to imperative programming
&lt;/h4&gt;

&lt;p&gt;Building React components boils down to describing the end result and letting the library take care of the rest. This is done in the render method of class components or as the returned result of functional ones. Custom elements, on the other hand, require direct DOM manipulation to achieve the same result. DOM Elements are queried, created, inserted and modified. &lt;/p&gt;

&lt;p&gt;React:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CapitalisedText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Web components:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CapitalisedText&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#no-binding-in-templates"&gt;
  &lt;/a&gt;
  No binding in templates
&lt;/h4&gt;

&lt;p&gt;Templates are not equivalent to the rendering blocks of React components. It is not possible to pass and render JavaScript data. Nor is it possible to run conditions or loops. All of that has to happen in the custom element lifecycle methods. &lt;/p&gt;

&lt;p&gt;A template defined in the document:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"capitalised-text-template"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The web component consumes the template but has to do the necessary DOM updates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CapitalisedText&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#capitalised-text-template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#out-of-the-box-css-scoping"&gt;
  &lt;/a&gt;
  Out of the box css scoping
&lt;/h4&gt;

&lt;p&gt;Many solutions exist to scope css in React components. CSS modules, different CSS-in-JS libraries etc. Using the shadow dom in custom elements comes with out-of-the-box support for that. Styles defined in the custom element don‚Äôt leak out to the rest of the document, and styles declared elsewhere in the document don‚Äôt leak into the custom element. It is a powerful feature when writing reusable components but can be restrictive in other scenarios. It is always possible to write custom elements without shadow DOM however.&lt;/p&gt;

&lt;p&gt;Using &lt;a href="https://github.com/css-modules/css-modules"&gt;css modules&lt;/a&gt; with React to avoid style collisions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./stlyle.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CapitalisedText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the shadow DOM in the web component to encapsulate styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"capitalised-text-template"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CapitalisedText&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shadowRoot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#capitalised-text-template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#custom-elements-remain-in-the-dom-tree"&gt;
  &lt;/a&gt;
  Custom elements remain in the DOM tree
&lt;/h4&gt;

&lt;p&gt;When React renders a component, it creates and appends DOM elements. The component itself is nowhere to be seen in the DOM tree. Custom elements are part of the DOM tree. This is important to note when considering querying and styling. &lt;/p&gt;

&lt;p&gt;React:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7H3Y5wfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg246qnlvq61rf0308pu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7H3Y5wfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eg246qnlvq61rf0308pu.png" alt="Structure of the dom elements of a React component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web component:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kuo_VLK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t35l5rkybcn1tdgy356a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuo_VLK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t35l5rkybcn1tdgy356a.png" alt="Structure of the dom elements of a web component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#attributes-vs-properties"&gt;
  &lt;/a&gt;
  Attributes vs. properties
&lt;/h4&gt;

&lt;p&gt;React components have props that can be of any data type. Custom elements, like any built-in html element, have attributes that can only contain strings. They also have properties that can contain any data type but can only be set using JavaScript. Learn more about &lt;a href="https://open-wc.org/guides/knowledge/attributes-and-properties/"&gt;attributes and properties&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#listening-to-attribute-changes-is-optin"&gt;
  &lt;/a&gt;
  Listening to attribute changes is opt-in
&lt;/h4&gt;

&lt;p&gt;A react component re-renders when prop values change. Web components expose the &lt;code&gt;attributeChangedCallback&lt;/code&gt; that can be used to update the UI in response to changes in attributes. This callback doesn‚Äôt fire by default however. Every web component has to explicitly list the attributes it wants to listen to using the &lt;code&gt;observedAttributes&lt;/code&gt; static method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Conclusion&lt;br&gt;
Web components are surprisingly good at managing a code base using vanilla JavaScript. Some developers can perceive the current standards as bare-bones however. In fact, the term &lt;em&gt;components&lt;/em&gt; is somewhat misleading. It draws parallels with existing frameworks and libraries whose components have many more features.&lt;/p&gt;

&lt;p&gt;Overall, I'm satisfied with my decision to migrate to web components. I'll definitely use them again for other projects. &lt;/p&gt;

&lt;p&gt;What's your opinion on web components? Do you think they can replace tools such as React or Vue?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Operating Systems: Program Vs Process, What's the difference?</title>
      <author>Kathan Vakharia</author>
      <pubDate>Mon, 02 Aug 2021 16:52:43 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/operating-systems-program-vs-process-what-s-the-difference-11mf</link>
      <guid>https://dev.to/kathanvakharia/operating-systems-program-vs-process-what-s-the-difference-11mf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-text-book-definition"&gt;
  &lt;/a&gt;
  A Text Book Definition
&lt;/h2&gt;

&lt;p&gt;A program in itself is just a text i.e. a &lt;em&gt;passive&lt;/em&gt; entity. &lt;/p&gt;

&lt;p&gt;When you run a program that is open an executable( .exe or a.out ), O.S creates an &lt;em&gt;active&lt;/em&gt; entity known as process. A process is created for the program execution. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;üí°&lt;strong&gt;A process is a program in execution&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Still, confused? Let's take an example to make this distinction super obvious.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-by-example"&gt;
  &lt;/a&gt;
  Understanding by Example üß∂
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CgDgkb48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vuhkyg3seyopr39x156.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CgDgkb48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vuhkyg3seyopr39x156.jpg" alt="Image1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's say you wrote a C program, &lt;code&gt;example.C&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You compiled it into &lt;code&gt;a.out&lt;/code&gt;  using &lt;code&gt;gcc example.C&lt;/code&gt; command. &lt;/p&gt;

&lt;p&gt;It is important to note here is both of the files, &lt;code&gt;example.C&lt;/code&gt; and &lt;code&gt;a.out&lt;/code&gt; are programs only - a set of instructions.&lt;/p&gt;

&lt;p&gt;Both files reside in the &lt;em&gt;secondary&lt;/em&gt; memory i.e your hard disk.&lt;/p&gt;

&lt;p&gt;Now when you type &lt;code&gt;a.out&lt;/code&gt; in the terminal to execute the compiled file, your operating system creates a data structure( process ) for the program execution in the &lt;em&gt;main/primary&lt;/em&gt; memory. It looks like the following, &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5fgOAWa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky27vcp650sjd0aigunq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fgOAWa7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky27vcp650sjd0aigunq.jpg" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A good analogy is to think of &lt;strong&gt;processes&lt;/strong&gt; like our &lt;strong&gt;body&lt;/strong&gt; and &lt;strong&gt;program&lt;/strong&gt; as our &lt;strong&gt;soul&lt;/strong&gt;. The body cannot exist without a soul and the soul needs the body to take action! &lt;/p&gt;

&lt;p&gt;The operating system's job is to give the set of instructions in &lt;code&gt;a.out&lt;/code&gt; to CPU for execution one by one. &lt;/p&gt;

&lt;p&gt;While executing a program, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stack space is used for &lt;em&gt;function calling&lt;/em&gt; - to store &lt;strong&gt;activation records&lt;/strong&gt; ( information about called function )&lt;/li&gt;
&lt;li&gt;Heap space is used for &lt;em&gt;dynamic memory allocation&lt;/em&gt; - memory allocated using &lt;code&gt;malloc, calloc&lt;/code&gt; function is present in this section of the process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is important to note that, the &lt;em&gt;stack grows downwards&lt;/em&gt; and the &lt;em&gt;heap grows upwards&lt;/em&gt; since before program execution operating system cannot predict the exact size of both.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ùó Don't confuse this heap portion with &lt;strong&gt;heap&lt;/strong&gt; data structure, they both are completely different things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>tutorial</category>
      <category>os</category>
    </item>
    <item>
      <title>Qwik: the answer to optimal fine-grained lazy loading
</title>
      <author>Mi≈°ko Hevery</author>
      <pubDate>Mon, 02 Aug 2021 16:50:10 +0000</pubDate>
      <link>https://dev.to/mhevery/qwik-the-answer-to-optimal-fine-grained-lazy-loading-2hdp</link>
      <guid>https://dev.to/mhevery/qwik-the-answer-to-optimal-fine-grained-lazy-loading-2hdp</guid>
      <description>&lt;p&gt;Qwik aims to delay the loading and executing of JavaScript for as long as possible and to only do so upon user action, to deliver the fastest loads. This is done during the initial load, as well as during the whole application lifetime. Put differently, Qwik wants to have fine-grained lazy-loading. By "fine-grained," we mean that only the code that is directly required to process user action will be downloaded. In this post, we‚Äôll explore the technical challenges that  need to be solved to achieve fine-grained lazy loading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serialize-listeners"&gt;
  &lt;/a&gt;
  Serialize listeners
&lt;/h2&gt;

&lt;p&gt;The most obvious challenge to solve is the initial page load. We‚Äôve already covered how to do this in &lt;a href="https://dev.to/mhevery/html-first-javascript-last-the-secret-to-web-speed-4ic9"&gt;HTML first, JavaScript last&lt;/a&gt;. The trick is to serialize event name and event action as URL into the DOM attribute. A top-level global event handler can then listen to events and download the code associated with the event.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;"./MyComponent_onClick"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;click me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code achieves that with no JavaScript (outside of a 1kb loader) loaded on the initial page load. This solves the initial time-to-interactive goal, but creates a new issue. We don't want to cause full application download and bootstrap on the first user interaction. Doing so would only move the problem from initial load to initial interaction. (If anything, this would worsen the situation, because it would introduce significant latency to first user interaction.) &lt;/p&gt;

&lt;p&gt;The solution is to ensure that no single user interaction causes a full application download or bootstrap. Instead, we only want to download and bootstrap/rehydrate the code/component which is directly needed to process the interactions. We want fine-grained lazy loading.&lt;/p&gt;

&lt;p&gt;Serializing events into HTML/DOM is what makes this all possible. Without it, it would be impossible to delay the template from loading, because the framework would need to download the template to identify where the events are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asynchronous-outoforder-component-hydration"&gt;
  &lt;/a&gt;
  Asynchronous, out-of-order component hydration
&lt;/h2&gt;

&lt;p&gt;To ensure that the first interaction does not cause a full application download and bootstrap, it is necessary to rehydrate the components asynchronously and out of order.&lt;/p&gt;

&lt;p&gt;Here asynchronously means that the rendering system can pause rendering to asynchronously download a template for a component, and then continue the rendering process. This is in stark contrast to all of the existing frameworks, which have fully synchronous rendering pipelines. And because the rendering is synchronous, there is no place to insert asynchronous lazy-loading. The consequence  is that all of the templates need to be present ahead of call to render. &lt;/p&gt;

&lt;p&gt;Another issue with existing rehydration strategies is that they start at the root component and synchronously rehydrate all of the components below. The consequence is that all the components must be rehydrated at the same time, forcing the download of every component. This would cause an extended processing time for the first interaction. Out-of-order hydration means that each component can be rehydrated independently from any other component and in any order. This allows Qwik to only rehydrate the minimum number of components that are needed to process the request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;decl:template=&lt;/span&gt;&lt;span class="s"&gt;"./path/MyComponent_template"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ... some content ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above case, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; represents a component associated with &lt;code&gt;MyComponent_template.ts&lt;/code&gt;. Qwik will only download the template if it determines that the component needs to be rerendered, thus further delaying its download. &lt;/p&gt;

&lt;p&gt;Without out-of-order rehydration, the framework is forced to download all the templates and rehydrate them all at once. This would create large download and execution pressure on the first interaction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#separation-of-rendering-from-event-handlers"&gt;
  &lt;/a&gt;
  Separation of rendering from event handlers
&lt;/h2&gt;

&lt;p&gt;An essential consideration for Qwik is that all of the existing rendering systems inline event listeners into the template. The consequence of the above is that when a component needs to be rerendered (or rehydrated) the browser must also download all of the listeners, regardless of if they are required. The listeners often close over complex code, which further increases the amount of code that is downloaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;complexFunction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./large-dependency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onclick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;complexFunction&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;rarely&lt;/span&gt; &lt;span class="nx"&gt;clicked&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;click&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="nx"&gt;downloaded&lt;/span&gt; &lt;span class="nx"&gt;eagerly&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Qwik separates the event handles from the template code. This means that either the listeners or template can be downloaded independently, and on an as-needed basis. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;MyComponent_template.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="nx"&gt;MyComponent_template&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./MyComponent_onClick&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;rarely&lt;/span&gt; &lt;span class="nx"&gt;clicked&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;click&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="nx"&gt;downloaded&lt;/span&gt; &lt;span class="nx"&gt;lazily&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;MyComponent_onClick.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;complexFunction&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./large-dependency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;complexFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Without the separation of event handlers from the templates, the framework would have to download a lot more code than required to rerender the component. Plus event handlers are often complex and have other dependencies, which adds to the amount of code that needs to be downloaded. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serialization-of-component-state"&gt;
  &lt;/a&gt;
  Serialization of component state
&lt;/h2&gt;

&lt;p&gt;When a component gets rehydrated, an essential part of the process is to restore the component's state. Existing frameworks don't have a way to serialize the state, as there is no standard way to demarcate where the component's state is.&lt;/p&gt;

&lt;p&gt;Qwik breaks components up into several pieces.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;props&lt;/em&gt;: These are just properties of the components that are reflected in the DOM. For example: &lt;code&gt;&amp;lt;counter min="0" max="100"/&amp;gt;&lt;/code&gt; the props are &lt;code&gt;{min: 0, max: 100}&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;state&lt;/em&gt;: Internal state of the component, which can be serialized into the DOM.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;transient state&lt;/em&gt;: Any additional state that component may cache, but which cannot be serialized. This information needs to be recomputed (e.g. temporary promises while the component is talking to the server).
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;decl:template=&lt;/span&gt;&lt;span class="s"&gt;"./Conter_template"&lt;/span&gt;
     &lt;span class="na"&gt;:.=&lt;/span&gt;&lt;span class="s"&gt;'{count: 42}'&lt;/span&gt;
     &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;"./Counter_incremente"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  42
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;"./Counter_decrement"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the component can‚Äôt serialize its state, it won‚Äôt be possible to rehydrate the specific component in isolation. (Where would the component get its state?) As a result,  the framework would have to download extra code to compute or download the state from the server. Qwik avoids all of this by &lt;a href="https://dev.to/mhevery/html-first-javascript-last-the-secret-to-web-speed-4ic9"&gt;serializing state in the DOM&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serialization-of-appshared-state"&gt;
  &lt;/a&gt;
  Serialization of app/shared state
&lt;/h2&gt;

&lt;p&gt;In addition to the component state, which is private to the component, the application state is also shared between components. It, too, needs to be serialized into the DOM. The shared state is broken down to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;key&lt;/em&gt;: An ID that uniquely identifies a piece of state. The ID is then used as a reference it in the components.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;state&lt;/em&gt;: Shared state between the components which can be serialized into the DOM.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;transient state&lt;/em&gt;: Any additional state that applications may cache, but can't be serialized. This information needs to be able to be recomputed.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;:cart:=&lt;/span&gt;&lt;span class="s"&gt;"./Cart"&lt;/span&gt;
     &lt;span class="na"&gt;cart:432=&lt;/span&gt;&lt;span class="s"&gt;"{items: ['item:789', 'item:987']}"&lt;/span&gt;
     &lt;span class="na"&gt;:item:=&lt;/span&gt;&lt;span class="s"&gt;"./Item"&lt;/span&gt;
     &lt;span class="na"&gt;item:789=&lt;/span&gt;&lt;span class="s"&gt;"{name: 'Shoe' price: '43.21'}"&lt;/span&gt;
     &lt;span class="na"&gt;item:987=&lt;/span&gt;&lt;span class="s"&gt;"{name: 'Sock' price: '12.34'}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Serializing the application‚Äôs state allows the components to render the same information in multiple locations, and communicate with other components. Without the framework understanding and managing the shared state, it would not be possible to hydrate components independently because the framework would not know when the state changes. (For example, Angular and React don't have explicit state management tied to the render function. As a result, the only sensible thing to do when the application state changes is to rerender the entire application, which prevents fine-grained lazy-loading.) &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reactive-connections-between-app-state-and-components"&gt;
  &lt;/a&gt;
  Reactive connections between app state and components
&lt;/h2&gt;

&lt;p&gt;The real benefit of having a framework that understands the state is that the framework knows the relationship between state and components. This is important because it tells the framework which component needs to be rehydrated when a given state changes. Or more importantly, it tells the framework which components don't need to be rehydrated when a state changes. For example, adding an item to a shopping cart should only rerender the component that displays the shopping cart count, which is only a tiny portion of the overall page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;:cart:=&lt;/span&gt;&lt;span class="s"&gt;"./Cart"&lt;/span&gt;
     &lt;span class="na"&gt;cart:432=&lt;/span&gt;&lt;span class="s"&gt;"{items: ['item:789', 'item:987']}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;decl:template=&lt;/span&gt;&lt;span class="s"&gt;"./Unrelated"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;decl:template=&lt;/span&gt;&lt;span class="s"&gt;"./ShoppingCart"&lt;/span&gt;
       &lt;span class="na"&gt;bind:cart:432=&lt;/span&gt;&lt;span class="s"&gt;"$cart"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   2 items
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;"./AddItem"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;buy&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The goal of Qwik is to rehyrate the minimum number of components. When the user clicks on the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; Qwik will download &lt;code&gt;./AddItem&lt;/code&gt;, updating the &lt;code&gt;cart:432&lt;/code&gt; application state. Qwik will then determine that a component with &lt;code&gt;bind:cart:432&lt;/code&gt; is the only component that uses the state, and therefore the only component which needs to be rehydrated and rerendered. Qwik can prune most of the components on the page, allowing it to keep the lazy-loading fine-grained. Knowing which components are connected to which state is a critical property that is not present in other frameworks. It is the property that allows for fine-grained lazy loading during application startup, as well as throughout its lifetime. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#component-isolation"&gt;
  &lt;/a&gt;
  Component isolation
&lt;/h2&gt;

&lt;p&gt;So far, we have discussed how Qwik supports fine-grained lazy loading of code. All of the above works because Qwik understands the data flow in the application. Qwik uses this information to prune the components that do not need to be rehydrated and only rehydrate the necessary components. The implication is that the components must not talk to other components without Qwik's knowledge. Components can't have secret conversations with other components. &lt;/p&gt;

&lt;p&gt;If the components get a hold of state without Qwik's knowledge, Qwik would not know that the component needs to be rehydrated/rerendered when the state changes. This is why components need to list their dependencies in the component's properties explicitly.&lt;/p&gt;

&lt;p&gt;Without explicit listing, the framework would have no choice but to rerender everything once the state changes. This would cause the whole application to be downloaded and boottraped.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are many ways in which the approach to building web applications needs to change to structure it for lazy loading. The issue is that the current frameworks do not help with this problem, and sometimes they even make it worse (for example, forcing full-page rehydration, synchronous rendering, etc.). Qwik makes fine-grained lazy loading a reality, so that developers can build sites/apps that load in sub-seconds, no matter how large and complex they become. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try it on &lt;a href="https://stackblitz.com/edit/qwik-todo-demo"&gt;StackBlitz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Star us on &lt;a href="https://github.com/builderio/qwik"&gt;github.com/builderio/qwik&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href="https://twitter.com/QwikDev"&gt;@QwikDev&lt;/a&gt; and &lt;a href="https://twitter.com/builderio"&gt;@builderio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chat us on &lt;a href="https://discord.gg/JHVpZmqSs4"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join &lt;a href="https://builder-io.rippling-ats.com/"&gt;builder.io&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 (Extreme) Performance Tips in C#üî•</title>
      <author>Dotnetsafer</author>
      <pubDate>Mon, 02 Aug 2021 16:46:37 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/5-extreme-performance-tips-in-c-1l9o</link>
      <guid>https://dev.to/dotnetsafer/5-extreme-performance-tips-in-c-1l9o</guid>
      <description>&lt;p&gt;If you have taken a call to grow your career in the information technology sector, knowledge of coding is essential. It is the most in-demand skill in the industry. Thus, the programming knowledge you gain and practice, in the beginning, is priceless.&lt;/p&gt;

&lt;p&gt;Here you have 5 good tips that will help you learn programming skills.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#write-unit-tests-for-nonpublic-methods"&gt;
  &lt;/a&gt;
  Write unit tests for non-public methods
&lt;/h3&gt;

&lt;p&gt;Surely if you work with projects that require quality control you have had to introduce a test project that involves unit tests. In that case, you have probably had problems trying to try a method that is not public.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;C#&lt;/em&gt; allows internal assemblies to be made visible to other assemblies. To solve it we will add the following attribute in the &lt;em&gt;AseemblyInfo.cs.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="c1"&gt;// Make a specific assembly visible  &lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;InternalsVisibleTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MyTestAssembly"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#use-tuples"&gt;
  &lt;/a&gt;
  Use tuples
&lt;/h3&gt;

&lt;p&gt;Sometimes it is better to use a containing tuple of typed values than to use classes, especially when the data structure created is only going to be used at a specific moment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetEmployee&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="c1"&gt;//create a tuple and return it  &lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#no-need-to-create-temporary-collections-better-to-use-yield"&gt;
  &lt;/a&gt;
  No need to create temporary collections, better to use yield
&lt;/h3&gt;

&lt;p&gt;We usually create enumerable temporary structures to return in a method.&lt;/p&gt;

&lt;p&gt;Something similar to the following üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetValuesGreaterThan100&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tempResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;  
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;tempResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tempResult&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In these cases we can save a couple of lines of code by using the yield command.&lt;/p&gt;

&lt;p&gt;Next we show the previous example but using yield üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="n"&gt;IEnumerable&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetValuesGreaterThan100&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;value&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#report-that-the-method-is-obsolete"&gt;
  &lt;/a&gt;
  Report that the method is obsolete
&lt;/h3&gt;

&lt;p&gt;If your library is being used by different clients and you want some method to stop being used because there is another method that replaces them or simply because it no longer works, you can indicate it with the following attribute üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Obsolete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This method will be obsolete soon. To replace it you can use the XYZ method."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Here the implementation  &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code would cause a warning in the code that invokes this method. However, if you want it to no longer be usable in any way, you would use an additional &lt;em&gt;Boolean&lt;/em&gt; parameter such as &lt;em&gt;True&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Obsolete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This method will be obsolete soon. To replace it you can use the XYZ method."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Here the implementation  &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#remember-that-linq-queries-are-deferred"&gt;
  &lt;/a&gt;
  Remember that linq queries are deferred
&lt;/h3&gt;

&lt;p&gt;When a query is made in &lt;em&gt;linq&lt;/em&gt; it only actually runs when the results are accessed. This is called deferred execution. In order for the query to be executed only once, we must use the &lt;em&gt;ToList&lt;/em&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;_public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;MyComponentLegacyMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;  
&lt;span class="c1"&gt;// Without the ToList method this linq query would be executed twice  &lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;masterCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Average&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>netcore</category>
      <category>programming</category>
    </item>
    <item>
      <title>Netflix Free Trial is Back| Get Premium account for free and assist to all favourite shows</title>
      <author>Olga Myler</author>
      <pubDate>Mon, 02 Aug 2021 16:30:42 +0000</pubDate>
      <link>https://dev.to/netflixfreetrial/netflix-free-trial-is-back-get-premium-account-for-free-and-assist-to-all-favourite-shows-52m7</link>
      <guid>https://dev.to/netflixfreetrial/netflix-free-trial-is-back-get-premium-account-for-free-and-assist-to-all-favourite-shows-52m7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqKaSAfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3ehiqy34is9noh27ysw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqKaSAfP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3ehiqy34is9noh27ysw.jpeg" alt="Netflix Free Trial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get a Free Netflix Premium Account or Upgrade your current account for 1 more year for free.&lt;/p&gt;

&lt;p&gt;Netflix service is used and liked by thousands of people around the world. But the fact is that all cannot afford its subscription costs. Imagine if you get your Netflix account for free without any monthly subscription? Then free Netflix account login can work wonders for you. You can enjoy your home entertainment now with free Netflix Premium Account or Upgrade your current account for 1 more year for free.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts for you:&lt;/p&gt;

&lt;p&gt;üëâüëâ&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;üëàüëà&lt;br&gt;
üëâüëâ&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;üëàüëà&lt;/p&gt;




&lt;p&gt;&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords List [August 2021] -&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts With Passwords 2021 Some people have premium plans and share their email and password for free so that users can access and watch without spending a lot of money. Ive mentioned a free Netflix account list with username and passwords for you guys here. And its one of the best ways for you to get free accounts.&lt;/p&gt;

&lt;p&gt;(Working) Free Netflix Premium Accounts &amp;amp; Passwords (July 2021)&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021: You can find a number of different websites offering Free Netflix Accounts by searching on Google. However, the problem with them is that they are no longer functional or even exist. To improve the Google user experience, weve added a brief article on Netflix, Netflix Accounts, and a lot more information about it.&lt;/p&gt;

&lt;p&gt;1000+ Free Netflix Accounts &amp;amp; Passwords [May 2021] 100%&lt;/p&gt;

&lt;p&gt;Free Netflix Account and Passwords Generator of 2021 . You can see numerous sites on Google that offer Free Netflix Account Generator. However, the issue with them is that they are done working or don't exist. Indeed, to improve the client experience on Google, we have included a short article How you will get Free Netflix Accounts.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 - Profile | ISA Connect&lt;/p&gt;

&lt;p&gt;Netflix accounts are free. Here I will provide a free daily account 5+ for Netflix 2021 as the plan is very expensive We cannot present your account to everyone because we have a budget. So search with our Netflix account. If you want to help us, we can give you more and more accounts. Keep commenting and sharing the post.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 Today 28/07/2021 | ahlakid.com&lt;/p&gt;

&lt;p&gt;22 hours ago Free Netflix Account &amp;amp; Passwords Premium Generator. But in this, we can provide the free Netflix account and password 2021 (Netflix Dump Accounts 2021) that you can use and access all types of premium services offered by Netflix. Basically, Netflix is an American Multinational Provider of Online Streaming Media Founded in 1997 by Reed Hastings.&lt;/p&gt;

&lt;p&gt;free netflix premium account generator [9wk] | Posts | Intelex&lt;/p&gt;

&lt;p&gt;As a result, it is not possible for everyone to win the giveaway. That is why to help you further, I am adding 10 more Netflix accounts daily on this page. You will find the email and password below. Simply use these credentials to log in to Netflix, and you will be good to go. #1 Free Netflix Email And Password Details (27, July, 2021)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-free-netflix-account-email-amp-password-27-july-2021-"&gt;
  &lt;/a&gt;
  1 Free Netflix Account Email &amp;amp; Password (27, July, 2021) -
&lt;/h1&gt;

&lt;p&gt;Free Netflix Premium Accounts 2021 Username, Passwords. We have just activated a few of the accounts for you! we hope you will not going to change the password. This is only for you! Username Password Subscription Plan [email protected] itechhacks.com: 60-Days [email protected] itechhacks.com: 60-Days [email protected] 17737271888: 30-Days [email protected] 123456: 90-Days&lt;/p&gt;

&lt;p&gt;100 Free Netflix accounts logins 2021 Updated List (Premium&lt;/p&gt;

&lt;p&gt;100 Free Netflix accounts logins 2021 March Updated List (Premium Access) Filed in Articles by TMLT Editorials on ADS! Download JAMB CBT Software Now for FREE! Free Netflix Accounts Logins: Are you looking for free Netflix accounts and passwords? First of all, there is no such thing as a free Netflix account and or free trial because officially Netflix doesnt offer it. If any&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021 - Rocked Buzz&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts consist of up-to-date accounts that can be used in April 2021. The following consists of the accounts previously offered for our followers to use. &lt;a href="mailto:kenguyun@yahoo.es"&gt;kenguyun@yahoo.es&lt;/a&gt; :sad21. &lt;a href="mailto:hurnd12a@hotmail.co.uk"&gt;hurnd12a@hotmail.co.uk&lt;/a&gt; :ppunh. &lt;a href="mailto:halfund.as21@bluewin.ch"&gt;halfund.as21@bluewin.ch&lt;/a&gt; :alloun. &lt;a href="mailto:hungfad114@freenet.de"&gt;hungfad114@freenet.de&lt;/a&gt; :ouyn2. &lt;a href="mailto:gyhn21@yahoo.fr"&gt;gyhn21@yahoo.fr&lt;/a&gt; :2112.&lt;/p&gt;

&lt;p&gt;Free Netflix Premium Accounts [Username And Password]&lt;/p&gt;

&lt;p&gt;10+ Free Netflix Premium Accounts 2021 (Username and Password) Many free Netflix premium accounts, emails, and passwords are available online. If you find them before others do, you can use these accounts freely without any charge. This method does test your speed, so best of luck! Below weve added passwords and usernames that will give you access to Netflix premium accounts without&lt;/p&gt;

&lt;p&gt;Free Netflix Premium accounts Now 2021 - Google Groups&lt;/p&gt;

&lt;p&gt;download (1).jfif There are numerous destinations who are as of now offering free netflix accounts. Jun 26. . Jordan Eli. Jun 26. How To Get Free Netflix Premium Accounts Latest 2021. download (1).jfif The #1 Netflix Generator Our generator is the best one for winning free Netflix.&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 List &amp;amp; Password Generator&lt;/p&gt;

&lt;p&gt;Now more than 69 million users are using the free Netflix account 2021. Netflix is an American company which was founded in 1997 by Reed Hastings and Marc Randolph. In older time they only provide the DVD rental service over the USA. Now it is one of the biggest community to provide online streaming of movies and TV shows. On Netflix, you can watch your favorite movies and TV shows on-demand. You just&lt;/p&gt;

&lt;p&gt;Free Netflix account hack october 2021. trickszylo Free Netflix account. Free Netflix account and password. how to get Free Netflix account. Free Netflix accounts reddit. Netflix account Free january 2021. Free Netflix account tricksndtips. Free Netflix account every day. Free Netflix premium account and password. a Free Netflix account with password. Free Netflix account twitter. Netflix premium&lt;/p&gt;

&lt;p&gt;Free Netflix Account 2021 Today 26/07/2021 | ahlakid.com&lt;/p&gt;

&lt;p&gt;Latest Netflix Account 26 July 2021 For Free, youll get 100% free Netflix Daily Accounts running. Tired of knowing how to get a Premium Netflix account running in July 2021. 26/07/2021 updated today. If yes, then do not worry. My friend, you are now on the right site because here I am going to update 5+ 100% free Netflix Premium accounts running every day. Netflix Account is the ideal&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 - Net Account Generator&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021. Welcome to the new free Netflix Account Generator of 2021. Are you searching for a free Netflix premium account?? You are at the right place But Remember!!! There are some points that you need to do before generating the Account. These points are listed down. Read these points carefully and then generate your free account and enjoy your favorite shows . Must-Do. Allow&lt;/p&gt;

&lt;p&gt;PrEMiuM Netflix Account generator Free 2021 Without&lt;/p&gt;

&lt;p&gt;PrEMiuM Netflix Account generator Free 2021 Without Human Verification . 88 views. Skip to first unread message Its.sharmin. Jahan. unread, , 12:25:02 AM Jun 3 to PrEMiuM Netflix Account generator Free 2021 Without Verification . The #1 Netflix Generator. We are so proud to say that we are the first NETFLIX Account Generator in the world, we have more&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts Emails &amp;amp; Password [Todays Working Accounts ...&lt;/p&gt;

&lt;p&gt;Once you are satisfied with the Free Netflix accounts 2021 you can go for a Subscription. You can get original content, a good user experience, and a separate library of movies and shows if you subscribed for it. If you want to cancel your subscription you can cancel your Netflix subscription account anytime you want. Hope some suggestions for the Free Netflix account list 2021 helped you and it is&lt;/p&gt;

&lt;p&gt;50+ Free Netflix Accounts &amp;amp; Passwords May 2021 [100%&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 22 July 2021 : Almost everyone who loves watching movies and series prefers using Netflix as it contains a huge library of Movies and Web Series.Netflix services are not free and the users need to buy a subscription for accessing their service. In case, you are not able to purchase the Netflix Subscription then dont worry as we are here to help you out.&lt;/p&gt;

&lt;p&gt;Netflix Free Accounts Email &amp;amp; Password July 28, 2021&lt;/p&gt;

&lt;p&gt;Categories Netflix Guide Tags Free Netflix Accounts, Free Netflix Accounts email and password, Free Netflix Accounts june 2021 Leave a comment Post navigation. Vipleague Alternatives-Top 10 Best Sites Like Stream2Watch For Free Online Sports . Netflix Cookies (Update 1 Hour Ago)[100% Working] Leave a Comment Cancel reply. Comment. Name Email Website.&lt;/p&gt;

&lt;p&gt;How To Get Free Netflix Account In Premium Netflix Accounts&lt;/p&gt;

&lt;p&gt;netflix premium accounts free 2021 netflix premium account (lifetime) netflix premium accounts 2021 netflix premium account free apk netflix premium account email and password netflix premium account generator v3.6 netflix premium accounts generator v1.2 netflix premium account generator free download netflix premium account password netflix premium accounts and&lt;/p&gt;

&lt;p&gt;Get FREE Netflix Account in 2021 - How To Get Netflix Premium For FREE&lt;/p&gt;

&lt;p&gt;Netflix Premium Free - hhttps://bit.ly/3qG9imOGet FREE Netflix Account in 2021 - How To Get Netflix Premium FOR FREE in 2021 | free netflix account for 30 d...&lt;/p&gt;

&lt;p&gt;(Working) Free Netflix Premium Accounts &amp;amp; Passwords (February 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Premium Accounts of July 2021. Netflix premium accounts generator and access to free subscription legally. These free netflix login IDs and passwords are 100% working and safe with unlimited access.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts Email &amp;amp; Password March 2021(100%&lt;/p&gt;

&lt;p&gt;25+ Free Netflix Accounts (March 2021) As we revealed to you before, we shared Daily 25+ Free Netflix Accounts with usernames and passwords, and those are 100% working. On the off chance that the above common Premium Accounts are not working, you can get these Netflix accounts. Mercifully dont change the secret phrase and let utilize this superior HD record for all clients. Today&lt;/p&gt;

&lt;p&gt;Get Netflix For FREE | July 2021 - Super Easy&lt;/p&gt;

&lt;p&gt;3 Ways to get FREE Netflix. Even though theres no free Netflix trial this year, there are ways to get free Netflix. Read on to find how. 1. Rent DVDs free in Netflix. Netflix doesnt offer free 30-days trials in 2021, but they still offer a free trial for DVD rental service. The service has two plans: $7.99/mo. for Standard and $11.99/mo ...&lt;/p&gt;

&lt;p&gt;[!!FREE!!] Netflix Account Generator 2021 Netflix Premium Account&lt;/p&gt;

&lt;p&gt;More. [!!FREE!!] Netflix Account Generator 2021 Netflix Premium Account. netflix account generator,free netflix account generator,free netflix account generator 2020,free netflix account generator ...&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords (May 2021) - Review&lt;/p&gt;

&lt;p&gt;Here I have shared the working Netflix Accounts &amp;amp; Passwords. To read the full guide, please refer to this page&lt;/p&gt;

&lt;p&gt;(100% Working)Free Netflix Accounts Email &amp;amp; Password May 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Working Account Id Passward. Netflix, Inc. is associate yank content platform and production company headquartered in Los Gatos, California.Netflix was based in 1997 by Reed Hastings and brandy Randolph in Scotts natural depression, California. Netflix streaming service has many top mind bending movies and tv shows to watch. The companys primary business could be a&lt;/p&gt;

&lt;p&gt;free netflix accounts with email and password 2021 fresh list in 2021&lt;/p&gt;

&lt;p&gt;We have shared the list of working Free Netflix Account 2021. Check out these Free Netflix Accounts generated by Netflix premium account generator.&lt;/p&gt;

&lt;p&gt;How to Get Free Netflix Account in 2021 {3 Ways} - TechWhoop&lt;/p&gt;

&lt;p&gt;40+ Free Netflix Account Usernames With Passwords. If you want some free Netflix premium accounts that have been activated already. Here is a list of different free netflix account and password for netflix account login. Copy and paste away, mate! First one is the user name, and the password follows it on the next line.&lt;/p&gt;

&lt;p&gt;Netflix Account Generator 2021 - Free Online Premium Accounts&lt;/p&gt;

&lt;p&gt;Netflix Account Generator 2021. Netflix is the biggest Entertainment website that almost all individuals watch for the sake of fun, entertainment, and pleasure as well. There are many tools that you can find for Netflix accounts but most of them did not work. Netflix Account Gen is the best tool that anyone can use to generate free Netflix ...&lt;/p&gt;

&lt;p&gt;140 Free Premium Netflix Account 2021 ideas in 2021 | netflix account ...&lt;/p&gt;

&lt;p&gt;Explore Gift Cards Shop 2021's board "Free Premium Netflix Account 2021" on Pinterest. See more ideas about netflix account, netflix, netflix premium.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021: Username and Passwords [Today]&lt;/p&gt;

&lt;p&gt;3 Free Working Netflix Accounts Passwords 2021; 4 Netflix Account Generators Reality Check; 5 Final Words; About Netflix. For someone new to this platform, here is a brief description of Netflix. Netflix is a media service provider that offers almost thousands of Movies, TV Series, Documentaries, and many more interesting shows. It can be accessed through different devices like&lt;/p&gt;

&lt;p&gt;FREE Netflix Accounts &amp;amp; Password (100+ Working)[Updated 2021]&lt;/p&gt;

&lt;p&gt;Features Of Premium Free Netflix Accounts Free Netflix Accounts 2021. Before friends, lets talk about the features of the | Free Netflix Premium Account |. Although there are many features of Netflix, but in this post we will tell you only about the best features of Netflix : Access To The Vast Library Of Digital Content. Well, we all know that Netflix provides video streaming content. In this we can&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts of 2021 (100% Working) - Giveaway World&lt;/p&gt;

&lt;p&gt;. Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! INSTRUCTIONS. - Click the button below. - Follow All the steps. - Prepare Your popcorn and enjoy !! . Click to Grap your Netflix Account.&lt;/p&gt;

&lt;p&gt;Netflix Accounts - Free Netflix Accounts &amp;amp; Passwords That Still&lt;/p&gt;

&lt;p&gt;Netflix Accounts Free Netflix Account Email And Password 2021 July: Netflix Hesaplar / Netflix Accounts: 0: Friday at 6:25 PM: Similar threads. Netflix Accounts Working Free Netflix Accounts &amp;amp; Password List. Started by Redman; Friday at 6:31 PM; Replies: 0; Netflix Hesaplar / Netflix Accounts. Netflix Accounts Long-Term Free Working Netflix Accounts &amp;amp; Passwords. Started by Redman; Friday&lt;/p&gt;

&lt;p&gt;Get A Netflix Account For Free ^&amp;amp;Free Netflix Account Generator 2021&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 Private Hack Netflix ... //unofficeny sites files webform List Of Free Netflix Accounts &amp;amp; Passwords In 2021 (100% Working) ... 100+ Free Netflix Account Generator Without Human Verification Free netflix account generator //akiroobsess free-netflix-account-gener... Free netflix account generator no human verification Are you looking&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts and Passwords 2021 - made-by.org&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts and Passwords Trial 2021. You have a full 30-day free trial window option on Netflix. Afterward, payment is mandatory. During this time, you're faced with the need to make a choice out of the three levels available. And, you guessed right, they come with differing benefits at the same time cost.&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts, Cookies, Login &amp;amp; Passwords 2021&lt;/p&gt;

&lt;p&gt;Free Working Netflix Accounts 2021: Getting Free Netflix Accounts is not easy, some websites simply drop in accounts and passwords for their users, but they never seem to regular check it monthly for expiry. So of their users goes as far as changing the login details which is a non-welcoming action. To increase your chance of getting a working account, weve also shared Netflix Cookies and&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts 2021 [100% Working Methods]&lt;/p&gt;

&lt;p&gt;This is a list of free Netflix accounts for July 2021. Publicly shared Netflix accounts are hard to get. However, we update this list every month. So check them out, and if you find the accounts are not working then it means the accounts are already taken by other lucky users. Email: &lt;a href="mailto:jackgates123@gmail.com"&gt;jackgates123@gmail.com&lt;/a&gt;. Password: newacccx007_x. Email: &lt;a href="mailto:francisdx@hotmail.com"&gt;francisdx@hotmail.com&lt;/a&gt;. Password:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-netflix-account-username-amp-password"&gt;
  &lt;/a&gt;
  Free Netflix Account Username &amp;amp; Password
&lt;/h2&gt;

&lt;p&gt;Free Netflix Account Hack,netflix Premium Account Free,free Netflix Accounts That Work 2021,netflix Account Generator No Human Verification,free Netflix Account Generator 2021,free Netflix Account And Password 2021,.Free Netflix Accounts 2021. Netflix Premium Account Features You can watch the films on your cell, tablet or PC. In case you need to watch them on TV, continuous sharp TVs&lt;/p&gt;

&lt;p&gt;Free Netflix Account (Username and Password) Working 2021&lt;/p&gt;

&lt;p&gt;For those who are willing get Free Netflix account check the table below: Free Netflix Account Email Netflix Password; &lt;a href="mailto:nataliya.herus@gmail.com"&gt;nataliya.herus@gmail.com&lt;/a&gt;: 17737271888: &lt;a href="mailto:jrrllicey@hotmail.com"&gt;jrrllicey@hotmail.com&lt;/a&gt;: 123456: &lt;a href="mailto:eeyidogan@hotmail.com"&gt;eeyidogan@hotmail.com&lt;/a&gt;: 517454614: &lt;a href="mailto:barxky1976@yahoo.com"&gt;barxky1976@yahoo.com&lt;/a&gt;: interview0929: &lt;a href="mailto:forshee@oasisband.net"&gt;forshee@oasisband.net&lt;/a&gt;: qwerty7: &lt;a href="mailto:Lundind1@yahoo.com"&gt;Lundind1@yahoo.com&lt;/a&gt;: rock88: &lt;a href="mailto:nataliyva.herus@gmail.com"&gt;nataliyva.herus@gmail.com&lt;/a&gt;: 17737271888:&lt;/p&gt;

&lt;p&gt;Op6FQE4s NETFLIX PREMIUM ACCOUNT GENERATOR #2021# FREE NETFLIX&lt;/p&gt;

&lt;p&gt;Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! Here are the direct download links for Netflix Premium Account Generator 2021. This will help you to generate a premium account and password in just 3 minutes without veri- fication! So that you no longer need to subscribe to the premium subscription of Netflix. You can easily get a Netflix&lt;/p&gt;

&lt;p&gt;Free Netflix Account Generator 2021 - Netflix Premium Account&lt;/p&gt;

&lt;p&gt;Use our latest version of Free Netflix Account Generator 2021 and get free Netflix Accounts &amp;amp; Passwords Now! Here are the direct download links for Netflix Premium Account Generator 2021. This will help you to generate a premium account and password in just 3 minutes without veri- fication! So that you no longer need to subscribe to the premium subscription of Netflix. You can easily&lt;/p&gt;

&lt;p&gt;Free Netflix Accounts &amp;amp; Passwords Daily Logins (21, July, 2021)&lt;/p&gt;

&lt;p&gt;Get Free Netflix Accounts (2020) with Username &amp;amp; Password (21, July, 2021) This is the part where we get to serve up free Netflix accounts and passwords along with premium features. We have collected these logins from Reddit. You only have to copy &amp;amp; paste the username &amp;amp; ID for the login. Its that easy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3loU98W"&gt;GET NETFLIX PREMIUM FOR FREE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://bit.ly/3loU98W"&gt;UPGRADE YOUR CURRENT ACCOUNT FOR 1 MORE YEAR FOR FREE&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Land Your FIRST Web Developer Job In 1 Month</title>
      <author>DevPool</author>
      <pubDate>Mon, 02 Aug 2021 16:08:05 +0000</pubDate>
      <link>https://dev.to/devpool3000/how-to-land-your-first-web-developer-job-in-1-month-54l8</link>
      <guid>https://dev.to/devpool3000/how-to-land-your-first-web-developer-job-in-1-month-54l8</guid>
      <description>&lt;p&gt;The following tips helped me to land my first junior full-stack position in one month back in 2016. Even though I did only 4/7 tips, but that's because I was completely new to the game, and it felt less "competitive" than it is today. The following tips were thought out based on what I did personally in the past and what I've learned/witnessed by working in the field for over 5 years now.&lt;/p&gt;

&lt;p&gt;Let's start with the most apparent/easy one first.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Having a Portfolio&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKWtxG3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3od79zs3bfam1xzfmkc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKWtxG3E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3od79zs3bfam1xzfmkc.jpg" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back when I was applying for my first junior web developer position in 2016, I didn't have a website because it didn't "feel" necessary or competitive as it is today for a lot of new developers.&lt;/p&gt;

&lt;p&gt;There are many more self-taught developers, graduates from colleges, and coding bootcamps, and the chances of them having a portfolio are high. So little by little, I'm starting to believe that having a portfolio could help you stand out and maybe land on the interview. But at the end of the day, your interviewer will judge you based on your skills and not if you have a portfolio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Publicly Available GitHub Projects&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ijlKd5TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xz3yvidtg8n0an23p61.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ijlKd5TJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xz3yvidtg8n0an23p61.jpg" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I was applying for my first junior full-stack position, I had two available projects on my GitHub. A small frontend application and a full web app with complex features. I confidently explained each technology I used, why I wrote the code the way I did, how I built my schema, and how I imported the data in (this part is called fixtures, but I didn't know about it back then).&lt;/p&gt;

&lt;p&gt;My projects aimed directly at becoming a full stack developer, so I already knew what jobs to apply for and where I will stand out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optimize Your LinkedIn For Recruiters To Find You Faster&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cliCZg7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7f3lgatypc098mutgfyf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cliCZg7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7f3lgatypc098mutgfyf.jpg" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LinkedIn is the tool that recruiters use religiously to find candidates for new open roles. If you don't have a LinkedIn profile, create one. If you have one, but it's empty, it's time to update it with your projects, languages/frameworks that you know, or what to be proficient in. Use an "About You" section if you haven't done so. The more information you have on your profile, the higher the chance of finding you because it is all based on keywords. Also, it doesn't mean you have to mention all languages and frameworks (then you will look like the master of none).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Attend Hackathons&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RnYSwSc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iykookbvvcrwjepovw5q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RnYSwSc5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iykookbvvcrwjepovw5q.jpg" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are multiple reasons why you would want to attend a hackathon. But one of the main reasons you want to consider is because many tech professionals are attending it. Some of them go there to have fun, and others could be looking for new developers to fill in a role they have open at a company they work at. Also, if you're a self-taught developer or graduate from a coding bootcamp, you may not have as many professional contacts. So this is the perfect way to get to know more people within your field.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prepare For An Interview&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bshrr2CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xozvtavp3mdo40eus2mw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bshrr2CH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xozvtavp3mdo40eus2mw.jpg" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I was writing my first resume, I didn't have a link to my portfolio, GitHub, or even my LinkedIn! &lt;/p&gt;

&lt;p&gt;But it had all the essential information that a recruiter/employer wanted to see. I had a summary that underlined what I was looking for and where I see myself heading in the future. Highlighted my strength, technical skills, and a lot more (I have a video on this. If you haven't seen it yet, I have it available on my YouTube channel DevPool). You also want to go over the interview stages (screening, coding, and behavioral). Each of them is important because if you passed the coding, it doesn't mean that the company will hire you if you didn't pass the behavioral.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;While Waiting Try To Upskill&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5owh29q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5e0w5z35xukqyr6i8mj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5owh29q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5e0w5z35xukqyr6i8mj.jpg" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could work on a new project using new technology, but if you already have like 100, should you be working on 101?&lt;/p&gt;

&lt;p&gt;The best way to upskill your skills is to work. Now hold up, isn't this what we are trying to do? Yes, and there are jobs that you can start applying for. The only important thing you will be getting out of it is building something real users are using. You've probably guessed that I'm referring to non-profit organizations. You can include that into your resume and start applying for jobs again as you're working there. The difference now is that the recruiter or an employer cannot say, "you don't have working experience".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Repeat&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Fy3OzIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h472ialzfwjng0rv3d7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Fy3OzIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h472ialzfwjng0rv3d7.jpg" alt="7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I remember when I applied to 10 jobs a day minimum, which would lead to a lot of rejections. I had no idea what I was doing because it was my first time, but I would ask for feedback on what I did wrong and see how I could improve. The fact that I was applying to many jobs per week helped me fix many mistakes much-much faster than I anticipated. So by the time I was reaching the end of the month, I was able to get several offers to choose from.&lt;/p&gt;

&lt;p&gt;There is the say "repetition is the key," and it's there for a reason.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are the seven tips that I hope can help some get that junior developer job much faster than you thought.&lt;/p&gt;

&lt;p&gt;For more helpful tips and advice, subscribe to my channel DevPool and don't miss future topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="//youtube.com/channel/UC03vw5F2isFkbJhyEZU5bvg?sub_confirmation=1"&gt;YouTube - DevPool&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Loaded in 600 milliseconds</title>
      <author>Vedran Cindriƒá</author>
      <pubDate>Mon, 02 Aug 2021 15:47:44 +0000</pubDate>
      <link>https://dev.to/cindreta/loaded-in-600-milliseconds-5daf</link>
      <guid>https://dev.to/cindreta/loaded-in-600-milliseconds-5daf</guid>
      <description>&lt;p&gt;One of the first movies I ever saw in a cinema was in my tiny home town &lt;a href="https://goo.gl/maps/jwNFFPLRB8pbJiDx9"&gt;Nova Gradi≈°ka&lt;/a&gt; in Croatia. The movie playing that day was &lt;a href="https://www.imdb.com/title/tt0187078/"&gt;Gone in 60 seconds&lt;/a&gt;. As you can imagine I was blown away. My first movie on the big screen. And at the time there were a lot of popular actors in it like Nicolas Cage, Angelina Jolie, Vinnie Jones and others. Really an experience I remember to this day as you can see. In particular a scene from that movie seems like a great intro to this article. So, before you continue, play the video and &lt;strong&gt;get yourself into the performance groove&lt;/strong&gt;. Don't forget to do the finger thing that Cage does üòÇ&lt;br&gt;
≈æ&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iKcYz6rDRVk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before you think "Oh no, yet another guide i'll never actually be able to implement on my website" let me stop you there! &lt;strong&gt;More or less everything we will go through in this article is easily achievable.&lt;/strong&gt; In some cases some things might take 2 minutes and some might take longer but in general the goal is to bring your website performance up as fast as possible.&lt;/p&gt;

&lt;p&gt;Personally, I'm very passionate about website performance, loading times and optimizing everything in the stack to run as smoothly as possible. For the past 10 years I've spent a lot of my time chasing milliseconds in our software development company. Performance is something we included in every of our projects and the same is with our startup - &lt;a href="https://treblle.com"&gt;Treblle&lt;/a&gt;. To be honest my obsession with performance is probably the reason why we were able to build &lt;a href="https://treblle.com"&gt;Treblle&lt;/a&gt;. Besides that I‚Äôve also spent a lot of time consulting for other companies on how to improve performance. Going after their developers and tidying things up.&lt;/p&gt;

&lt;p&gt;Based on my experience I came up with a list of things you can do almost day one on any projects that would improve the speed drastically and show a noticeable improvement. Some will take time but most are hassle free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lazyload-everything"&gt;
  &lt;/a&gt;
  Lazyload (everything)
&lt;/h3&gt;

&lt;p&gt;When someone visits your website they probably don't see the entire website but only, what in the marketing world they call, "above the fold" content. In most cases that includes a hero element with either text, images/video and a call to action. Below that is everything else explaining why your product or startup is the next big thing (same as ours üòé). More often than not a user might only view that hero element, scroll a few times but won‚Äôt reach the end of the website. &lt;strong&gt;So why load all the images, videos, iframes and content that nobody will see?&lt;/strong&gt; That right there is the fundamental idea behind lazy loading. It‚Äôs probably the simplest and most effective thing you can do to improve your website load time. The reason why it has such a huge impact is because 90% of the time the content we are loading on the rest of the website are images and videos. So if you have 20 - 30 images on your website and the users can only see 3-4, why load the rest? Sounds logical - it is - but you would be surprised at how many websites don't do this. Especially considering that it‚Äôs super easy to add it to your website.&lt;/p&gt;

&lt;p&gt;The first way we can add lazy loading to our website is by using a really tiny Javascript library called: &lt;a href="https://github.com/aFarkas/lazysizes"&gt;lazysizes&lt;/a&gt;. I've used this puppy in every website we‚Äôve developed for the past 5 years and it works like a charm. You can lazy load images, iframes, videos and even widgets. It works with the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element as well as picture elements which is great for responsive design.&lt;/p&gt;

&lt;p&gt;To use it simply replace your existing &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements with the following:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Note that the path to the real image is in the "data-src" attribute and to enable lazy loading you have to add a class of "lazyload". You also might be wondering what the mambo jumbo in the "src" attribute is. Well it‚Äôs basically a really tiny image with a light gray background. This is used to fill up the space and not cause jumps in layouts shift while the image is "replaced". In any case you are done. Nothing more or less to do. The plugin has more options which you can check out on their website.&lt;/p&gt;

&lt;p&gt;Another way you could start using lazy loading is by utilizing a new HTML standard attribute called &lt;code&gt;loading&lt;/code&gt;. Now it does have limited support but it is probably the future of lazy loading and it will be a default HTML attribute once everybody starts supporting it.&lt;/p&gt;

&lt;p&gt;You use it by adding &lt;code&gt;loading="lazy"&lt;/code&gt; to any image element like so:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Again, maybe wait a bit with this one because it‚Äôs lacking support for older browsers but definitely keep an eye for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-images"&gt;
  &lt;/a&gt;
  Optimize images
&lt;/h3&gt;

&lt;p&gt;I'm adding this because it has a huge impact and it‚Äôs dead simple to do. Yet - most people don‚Äôt do it. When you are using images as design elements, backgrounds and such simply run them through something like &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; or &lt;a href="https://www.jpegmini.com/"&gt;JPEGMini&lt;/a&gt;. I've been using the FREE Mac app of &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; for years and it works like a charm. In some cases it &lt;strong&gt;reduces images by like 80%&lt;/strong&gt; and I simply get shocked. You don't have to think about it, simply drag and drop the images and they are automatically saved as optimized images with as little as possible quality loss. They also have a webservice so you can connect your user generated images with their API and have them optimized as well.&lt;/p&gt;

&lt;p&gt;As far as SVG goes I use another free and awesome service called &lt;a href="https://vecta.io/nano"&gt;SVG Nano&lt;/a&gt;. It's just like &lt;a href="https://imageoptim.com/mac"&gt;ImageOptim&lt;/a&gt; but for SVGs and the results are astonishing. You can have a Full HD illustration cut down to like 10KB which is great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minify-and-compress"&gt;
  &lt;/a&gt;
  Minify and compress
&lt;/h3&gt;

&lt;p&gt;A must do when working with CSS and JS is to minimize them! Don't use a non minimized version of your code or other plugins/packages/dependencies in production. Simply don't. You can manually minimize the CSS/JS via tools like this: &lt;a href="https://minifycode.com/"&gt;https://minifycode.com/&lt;/a&gt; or &lt;a href="https://www.minifier.org/"&gt;https://www.minifier.org/&lt;/a&gt;. Ideally you should include minification in your build process either via &lt;a href="https://webpack.js.org/guides/production/#minification"&gt;Webpack&lt;/a&gt; or some other tool. If you don't know how to do any of those then you can maybe download already minified versions of various frameworks and JS plugins.&lt;/p&gt;

&lt;p&gt;Just consider this: a non minified and uncompressed version of Jquery is 290Kb whereas a minified and compressed version is 90KB. &lt;strong&gt;You just saved 200KB or 70% of the download size&lt;/strong&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preconnect"&gt;
  &lt;/a&gt;
  Preconnect
&lt;/h3&gt;

&lt;p&gt;Preconnect is a relatively modern type of link element that became popular with HTML5 and HTTP2. The idea behind it is super simple but very effective. By adding one or more preconnect tags to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element of your website you tell browsers that, down the line, you will eventually download something from that domain. Browsers can initiate a connection and essentially prepare whatever they need to instantly download something from that domain. This as you can imagine can speed things up for you - especially if you are downloading fonts, images and JS. Using preconnect could not be simpler. Before you call on any CSS and JS in your &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element add one of these:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel="preconnect" href="https://domain.com/" crossorigin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And that's it. Later on if you're downloading something from domain.com like an image or JS or CSS it will be faster because the browser is already ready for it. To give you an idea here are top 3 most common preconnect scenarios:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&amp;gt;
&amp;lt;link rel="preconnect" href="https://www.google-analytics.com/" crossorigin&amp;gt;
&amp;lt;link rel="dns-prefetch" href="https://yourid.cloudfront.net"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#use-a-cdn"&gt;
  &lt;/a&gt;
  Use a CDN
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pXMIbCMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/cdn-illustration%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pXMIbCMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/cdn-illustration%402x.jpg" alt="use a cdn"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today with cloud providers like AWS, Azure and CloudFlare using a CDN couldn't be easier and it has a big performance impact! A CDN or a Content Distribution Network simply takes time files you upload (CSS/JS/images) and stores them across multiple different servers in various parts of the world. So let's say you have a visitor from India and your server is in the Us. If you are using a CDN for your assets then that CDN will serve those assets from a server in India rather than the US one. &lt;strong&gt;This will reduce latency and load times but also enable parallel resource downloading&lt;/strong&gt; since the files are downloaded from a different domain. Another great thing about CDNs is that they are already optimized for performance. Everything we had to do to tweak our server earlier is already done for us ü§üüèª If you are worried about pricing - don't be. Using a CDN nowadays is super affordable especially for the impact it has on performance.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#go-back-to-basics"&gt;
  &lt;/a&gt;
  Go back to basics
&lt;/h3&gt;

&lt;p&gt;I've always been a fan of minimalism except when it comes to Apple devices ü•∫ Guilty as charged. But when it comes to front-end development I love minimalism to a fault. What I mean by minimalism is simple: reduce the number of resources you are using in your pages. This time under resources I don't just mean images and JS but rather fonts, various CSS frameworks, JS frameworks and dependencies. &lt;strong&gt;When we are talking about fonts my rule is 1 custom font with a maximum of 2-3 weights&lt;/strong&gt;. If I really really have to, I will include a second font but then I will try to reduce the weights as much as possible. And yes I understand you should make your website look pretty but not at the cost of extreme performance.&lt;/p&gt;

&lt;p&gt;Another really trivial and stupid problem i repeatdy have seen happen is that developers include multiple versions of JQuery or Bootstrap or some other plugin. I‚Äôve noticed this goes to extremes with Wordpress themes and plugins. It‚Äôs like a frenzy of repeat includes. Every plugin simply piles on it‚Äôs own Bootstrap version, Jquery version or something. Make sure you nip that because you really don‚Äôt wanna be loading multiple useless libraries.&lt;/p&gt;

&lt;p&gt;Finally, think about what you actually need. Do you need a 150KB animation library for CSS and animating that one section on the home page? Can that be done using native CSS or JS. Do you really need JQuery, an Ajax Form plugin and a Form validation plugin to make an HTTP request? Do you need a 200KB parallax plugin that requires another dependency or can you make a similar effect with CSS. Do you really need another library to tell time with JS?&lt;/p&gt;

&lt;p&gt;Consider the fact that an average modern F1 car has 5000 parts and weights around 750 KG whereas a regular car has around 30 000 parts and weights 1300 KG. Just let that sink in. &lt;strong&gt;Do you want your website to be like an F1 car or like your neighbors Toyota Camry?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfQBv9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/f1-redbull%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfQBv9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/f1-redbull%402x.jpg" alt="F1 Redbull"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#optimize-your-server"&gt;
  &lt;/a&gt;
  Optimize your server
&lt;/h3&gt;

&lt;p&gt;Your infrastructure has a significant role in load times and performance. If you have a lousy server nothing you do will help you. Especially if the server is located in a different part of the world and most of your users are accessing it from across the pond. There are easy wins that you can do to make sure you get the best performance with as little as possible.&lt;/p&gt;

&lt;p&gt;The first thing is to make sure that you are running on HTTP2. It's not that complicated to install it in case your hosting provider isn't running on that by default. HTTP2 is much faster than HTTP1. It's also much newer so it has a lot more features that deal with a lot of performance issues that HTTP1 had. One of the biggest things that HTTP2 can do is download resources in parallel. Coupled with other features HTTP2 makes a huge difference and you should find a way to get your website on it.&lt;/p&gt;

&lt;p&gt;Next up if you are developing on top of the LAMP stack and you are using PHP then go check if you are running PHP 7+ at a minimum. PHP has been kicking ass in terms of performance in recent versions like PHP 7 and PHP 8. Just by upgrading from PHP 5 to 7 you will get 60% better performance and render times. PHP 8 also contains a lot of JIT improvements which again makes the jump from 7 to 8 worth it.&lt;/p&gt;

&lt;p&gt;Another thing you can easily do is adjust the server configuration to make it even faster. This includes making sure you are compressing resources like CSS/JS, sending the correct mime types, taking advantage of browser cache and others. To save you some time I'll share my custom Apache configuration I've been using for years.&lt;/p&gt;

&lt;p&gt;The first step would be to create a new Apache config with our performance settings. Open your terminal, SSH to your server and navigate to &lt;code&gt;/etc/apache2/conf-available/&lt;/code&gt; and type in:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo curl https://gist.githubusercontent.com/cindreta/e536faa5494d0a0be409d435757ff9a7/raw/0a24629059e243a44d2caf5d1e95ce1c8df4822f/performance.conf - o performance.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This will download the custom performance configuration from a gist on my Github and save it as a file called &lt;code&gt;performance.conf&lt;/code&gt; which we will include in our default Apache config.&lt;/p&gt;

&lt;p&gt;Now that we have the file navigate to &lt;code&gt;/etc/apache2/sites-available/&lt;/code&gt; where you should find all your Apache Vhosts. The default one should be called &lt;code&gt;000-default.conf&lt;/code&gt;. Simply do sudo nano 000-default.conf and before the end tag &lt;code&gt;&amp;lt;/VirutalHost&amp;gt;&lt;/code&gt; simply add our custom config like so:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Include /etc/apache2/conf-available/performance.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Save the changes and reload the Apache server by issuing a command: &lt;code&gt;sudo systemctl restart apache2&lt;/code&gt;.If apache starts normally then everything is ok, if we messed something up or you are missing some Apache modules like mod_deflate, mod_rewrite apache will throw an error and you can either try to debug what‚Äôs up or remove the config file from your vhost.&lt;/p&gt;

&lt;p&gt;An additional note I would like to mention: you could have used .htaccess to enable the configuration but I would suggest you don't. The reason is, you guessed it, performance. Adding complicated and long config options to &lt;code&gt;.htaccess&lt;/code&gt; actually slows down the Apache server because it has to do more work to compile that. I don‚Äôt like messing around with servers also but it‚Äôs worth doing it via config files like shown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-html"&gt;
  &lt;/a&gt;
  Understand HTML
&lt;/h3&gt;

&lt;p&gt;HTML is the most forgiving language on planet Earth. If you make a mistake like forgetting to close a tag or mistype the tag name it will still do it‚Äôs best to render and show the content. A lot of this has to do with browser engines but the fact is you can get away with pretty much anything. And people tend to abuse that. There are around a 100 tags in HTML spanning from more common like &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; to weird ones like &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; and others. Yet people mostly use 10 of them and probably the one that is used the most is the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element. I've seen this trend phenomenon 10x with these "new kids on the block" learning HTML via React or Angular...In short learn HTML and use appropriate tags. If you are building a list then use &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;. If you are displaying titles then use &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;... And guess what - the numbers have a meaning üòä. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; would imply it's the most important title in the page hence use it accordingly. Same goes for other elements on the page like &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Writing good, semantic, meaningful HTML &lt;strong&gt;helps the browser render faster&lt;/strong&gt; but also it saves time on paint events, style recalculations and similar. Another benefit of writing good structured HTML is the on site SEO aspect of it. Google and other engines love when you make their job easier and use tags that have meaning. It also helps anyone else reading your source to better understand what you tried to do, what is what and similar. So just use HTML as &lt;a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee"&gt;sir Tim&lt;/a&gt; wanted you to.&lt;/p&gt;

&lt;p&gt;Another small but interesting tip is to minimize the amount of white space and empty lines also helps with performance. You can even do this automatically by using server side plugins mod_pagespeed for Apache and Ngix. Of course if you are using a back-end programming language which compiles your HTML into views, like Laravel, then there are packages for that like HTMLMin and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-first"&gt;
  &lt;/a&gt;
  CSS first
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-Gqcwba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/css-first%402x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-Gqcwba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2yzzcow4k19m2.cloudfront.net/835adbfb-d840-46e2-8758-ad949f91f861/images/blog/css-first%402x.jpg" alt="CSS first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like Donalds thing was "America first", I believe, for us front-end developers, it should be "CSS first". What I mean by that is that if you can make something using CSS rather than using an image or Javascript - then do it. When I see a design my first question is what can i do only with CSS. I evaluate everything from backgrounds, shapes, ornaments, structures and try to figure out if there is a way to do it only with CSS. &lt;strong&gt;You will be surprised how many things you can do in CSS once you master it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I've seen many, many instances where CSS was able to replace a shape or even a background image. So by writing maybe 10 lines of CSS you save 50-100KB in transfer data on those images. The main reason why most websites are slow is because they use too many images or pile on too many JS plugins to do basic things like hovering, animations and effects. CSS is good at all of those things - you just need to learn how to use it.&lt;/p&gt;

&lt;p&gt;Another important practice you can apply is writing better and more optimized CSS. Yes - that is a thing. You can also do your website an injustice if you write sloppy and bad CSS. So let's just name a few things you can do to write better CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the less lines of CSS you can write - the better&lt;/li&gt;
&lt;li&gt;the shorter your selectors are - the better&lt;/li&gt;
&lt;li&gt;run all the animations on the GPU vs the CPU&lt;/li&gt;
&lt;li&gt;stop supporting ancient browsers&lt;/li&gt;
&lt;li&gt;use shorthand properties when you can&lt;/li&gt;
&lt;li&gt;don't overwrite - learn browser defaults and framework resets&lt;/li&gt;
&lt;li&gt;separate media queries into its own files&lt;/li&gt;
&lt;li&gt;don't bloat your code with third party addons/plugins that you don't understand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The sooner you start practicing these things the faster you will see results. The best thing about this is you can directly edit CSS rules in a browser and test in literary seconds. So get to it.&lt;/p&gt;

&lt;p&gt;---&lt;/p&gt;

&lt;p&gt;Hope some of these help you reduce your load times and improve your performance in one days work. Some will take longer but they will also make you a better developer in the long run. &lt;strong&gt;At the end of the day performance is a give and take between design, style and functionality.&lt;/strong&gt; You should be walking in the middle of that line for the best of both worlds.&lt;/p&gt;

&lt;p&gt;PS. If you like these articles say hello on my &lt;a href="https://twitter.com/cindreta"&gt;Twitter&lt;/a&gt; or if you are using APIs be a champ and give &lt;a href="https://treblle.com/"&gt;Treblle&lt;/a&gt; a try - you won't regret it.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Improving UX of forms using only HTML</title>
      <author>Stas Melnikov</author>
      <pubDate>Mon, 02 Aug 2021 15:46:36 +0000</pubDate>
      <link>https://dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0</link>
      <guid>https://dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-showhide-password-pattern"&gt;
  &lt;/a&gt;
  The show/hide password pattern
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTrkwlGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375969/5654c4c7e7954c349c336abe5e7c3ef0/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3Da55AdGf9N1gjMZc0hXK7gvhtu5NWeun1AnQG4xYqiLQ%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTrkwlGS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375969/5654c4c7e7954c349c336abe5e7c3ef0/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3Da55AdGf9N1gjMZc0hXK7gvhtu5NWeun1AnQG4xYqiLQ%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the last years, the hide/show button pattern became very popular. But a lot of people use it wrong. The mistake is in choosing the right HTML element. &lt;/p&gt;

&lt;p&gt;People think users will interact with an element only using a mouse. Just click one time, two, etc. But the value of this pattern is more important.&lt;/p&gt;

&lt;p&gt;Firstly, users use the keyboard quickly focusing from the field to the button using the tab key. Then they push the enter key for showing or hiding the password. &lt;/p&gt;

&lt;p&gt;Secondly, screen readers have to detect this element is interactive. Then users can use it.&lt;/p&gt;

&lt;p&gt;So only one element meets all these requirements ‚Äî the button element. Use it and your users will be happy to use your interface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#showing-the-correct-virtual-keyboard-when-you-ask-to-enter-a-code"&gt;
  &lt;/a&gt;
  Showing the correct virtual keyboard when you ask to enter a code
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQk_ZAAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375684/ffe486076c174da29946eb5b3fe99d1f/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3DBsLdISRPEFuilBqpLQxPa0Cv62j1L50bKIM6KICYInA%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQk_ZAAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/54375684/ffe486076c174da29946eb5b3fe99d1f/1.jpg%3Ftoken-time%3D1629158400%26token-hash%3DBsLdISRPEFuilBqpLQxPa0Cv62j1L50bKIM6KICYInA%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to make UX of forms more simple and user-friendly you should right choose the type attribute. That's important because the attribute helps browsers show the most appropriate virtual keyboard. Thus users can more quickly fill forms. For example, if users fill in a phone number type="tel" shows the keyboard with digits and other special symbols.&lt;/p&gt;

&lt;p&gt;But there are cases when existing values can't be applied. For example, when you sign in you want to ask users to enter a numeric code. &lt;/p&gt;

&lt;p&gt;In these cases, you can use the special inputmode attribute that helps browsers display a correct keyboard as well. In the cases with a numeric code, you should use the numeric value. Then browsers will display the keyboard with digits only and users will fill the field quickly as well as with the type attribute.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
üòä If you like this post, please, &lt;a href="https://twitter.com/intent/tweet?text=Stas%20Melnikov%20told%20about%20how%20we%20can%20improve%20UX%20of%20forms%20using%20only%20HTML%20on%20%40ThePracticalDev%20www.dev.to/melnik909/improving-ux-of-forms-using-only-html-21c0"&gt;share on Twitter&lt;/a&gt;&lt;br&gt;
üñê I make free written accessibility review so that you don't make common mistakes. If you're interested in that chat me on &lt;a href="mailto:melnik909@ya.ru"&gt;melnik909@ya.ru&lt;/a&gt; or dev.to direct. Please, specify the subject of the email "Stas, need help" &lt;/p&gt;

&lt;p&gt;ü•á If you want to be first who take my tips get &lt;a href="https://www.patreon.com/melnik909"&gt;my paid subscription on Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üéÅ Make a gift yourself or friends who like frontends: üëï &lt;a href="https://www.redbubble.com/i/t-shirt/Front-End-developer-by-melnik909/79109127.FPE53"&gt;T-Shirt&lt;/a&gt;, üéÅ &lt;a href="https://www.redbubble.com/i/sticker/Front-End-developer-by-melnik909/79109127.EJUG5"&gt;Stickers&lt;/a&gt;, ü•Ω &lt;a href="https://www.redbubble.com/i/mask/Front-End-developer-by-melnik909/79109127.6BSL1"&gt;Masks&lt;/a&gt;, üß© &lt;a href="https://www.redbubble.com/i/magnet/Front-End-developer-by-melnik909/79109127.TBCTK"&gt;Magnets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.S.&lt;/strong&gt; This post was written with the support of my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten.&lt;/p&gt;

</description>
      <category>ux</category>
      <category>html</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
