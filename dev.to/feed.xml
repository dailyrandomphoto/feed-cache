<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>You MUST stop doing this now, really!</title>
      <author>Keff</author>
      <pubDate>Fri, 17 Sep 2021 10:19:30 +0000</pubDate>
      <link>https://dev.to/nombrekeff/you-must-stop-doing-this-now-really-5820</link>
      <guid>https://dev.to/nombrekeff/you-must-stop-doing-this-now-really-5820</guid>
      <description>&lt;h4&gt;
  &lt;a href="#what-using-titles-like-the-one-above"&gt;
  &lt;/a&gt;
  What? Using titles like the one above!
&lt;/h4&gt;

&lt;p&gt;It might only be me, but I hate &lt;a href="https://dev.to/search?q=you%20MUST"&gt;these types&lt;/a&gt; of titles. &lt;/p&gt;

&lt;p&gt;I think it would be much better if you focused the title on why you should do a thing, rather than just telling me I should. You should not just assume I don't know the thing, give me some value. Just because you, a random person on the internet, say so, I won't be doing it (not even reading the post, you see). &lt;/p&gt;

&lt;p&gt;The content of the post may be good, and maybe you MUST do the thing, but there are better ways of presenting it and probably perform better (&lt;em&gt;note that this is just my opinion&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For example instead of: &lt;br&gt;
&lt;strong&gt;You MUST do this &amp;lt;thing&amp;gt;!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You could rephrase it as: &lt;br&gt;
&lt;strong&gt;If you do &amp;lt;thing&amp;gt;, you will increase performance by 25%&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Or instead of: &lt;br&gt;
&lt;strong&gt;If you are a manager you MUST do this!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You could rephrase it as: &lt;br&gt;
&lt;strong&gt;As a manager I implemented &amp;lt;thing&amp;gt; and made our team 2x faster&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;See the difference?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first ones are just plain clickbait, making me feel like I'm missing out on something and making me feel somewhat attacked by not doing the thing.&lt;/li&gt;
&lt;li&gt;The second ones offer more value (I know why I should do the thing) and invites me to learn a bit more&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Rant over, quite a quick one. But one that bothers me quite a bit, do you feel the same way?&lt;/p&gt;

</description>
      <category>rant</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>SQL Select with IN clause from list with JPA</title>
      <author>Adrian Matei </author>
      <pubDate>Fri, 17 Sep 2021 10:03:47 +0000</pubDate>
      <link>https://dev.to/codever/sql-select-with-in-clause-from-list-with-jpa-1g41</link>
      <guid>https://dev.to/codever/sql-select-with-in-clause-from-list-with-jpa-1g41</guid>
      <description>&lt;p&gt;The native SQL query we want to map in JPA is similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SELECT * FROM PARTNER where PARTNER_NUMBER IN ('id1', 'idn').
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With JPA you can use a &lt;code&gt;TypedQuery&lt;/code&gt; for example and set the expected list of the &lt;code&gt;IN&lt;/code&gt; clause directly as query parameter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Stateless&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PartnerDataRepository&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Inject&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;EntityManager&lt;/span&gt; &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;findPartnerDataFromList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partnerNumbers&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;TypedQuery&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
          &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createNamedQuery&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;FIND_PARTNER_DATA_IN_LIST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setParameter&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;PARTNER_NUMBERS&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;partnerNumbers&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getResultList&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the named query itself you can pass the parameter with &lt;code&gt;:&lt;/code&gt; as you would when setting a "normal" parameter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Entity&lt;/span&gt;
&lt;span class="nd"&gt;@Access&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;AccessType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;FIELD&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Inheritance&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strategy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;InheritanceType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SINGLE_TABLE&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Table&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TABLE_NAME&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@NamedQueries&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;
  &lt;span class="nd"&gt;@NamedQuery&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;PartnerData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;FIND_PARTNER_DATA_IN_LIST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"select m from PartnerData m where partnerNumber in :partnerNumbers"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PartnerData&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;TABLE_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"PARTNER"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;PARTNER_NUMBERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"partnerNumbers"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;FIND_PARTNER_DATA_IN_LIST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="s"&gt;"findPartnerDataWithPartnerNumbers"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;//... rest ignored for brevity&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Shared ‚ù§Ô∏è from &lt;a href="https://www.codever.land/snippets/61446015fb0221040e46d431/details"&gt;Codever&lt;/a&gt;.  üëâ  use the &lt;a href="https://www.codever.land/snippets/61446015fb0221040e46d431/details"&gt;&lt;strong&gt;copy to mine&lt;/strong&gt;&lt;/a&gt; functionality to add it to your personal snippets collection. &lt;/p&gt;


&lt;/blockquote&gt;

</description>
      <category>java</category>
      <category>jpa</category>
      <category>codever</category>
      <category>snippets</category>
    </item>
    <item>
      <title>Coding is a Craft</title>
      <author>Theo Selin</author>
      <pubDate>Fri, 17 Sep 2021 09:23:15 +0000</pubDate>
      <link>https://dev.to/theo_selin/coding-is-a-craft-4i99</link>
      <guid>https://dev.to/theo_selin/coding-is-a-craft-4i99</guid>
      <description>&lt;p&gt;I'm sitting here working on my fundamental programming-skills and just found the perfect analogy for what I'm actually doing: It's craftmanship, almost like an artform. Even though I already know how to finish the task the seventh time, my brain structures the required steps much faster. Everyone can use a hammer and a nail, but a carpenter has run the miles, if you know what I mean.&lt;/p&gt;

&lt;p&gt;I have a history in design and art, and I can say that this is just as much of a marathon as any other craft.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1i7ocVeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfzjihlkc4ssvxvdjezt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1i7ocVeK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hfzjihlkc4ssvxvdjezt.png" alt="Craftmanship"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding Closures in JavaScript</title>
      <author>Shounak Das</author>
      <pubDate>Fri, 17 Sep 2021 09:22:36 +0000</pubDate>
      <link>https://dev.to/snkds/understanding-closures-in-javascript-dfd</link>
      <guid>https://dev.to/snkds/understanding-closures-in-javascript-dfd</guid>
      <description>&lt;p&gt;The callbacks, event handlers, higher-order functions can access outer scope variables thanks to closures. They are important in functional programming and are often asked in coding interviews.&lt;/p&gt;

&lt;p&gt;Closures are difficult to grasp at the beginning. If you haven't reached the &lt;em&gt;"Aha!"&lt;/em&gt; moment in understanding closures, I hope this article will benefit you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scope"&gt;
  &lt;/a&gt;
  Scope
&lt;/h2&gt;

&lt;p&gt;In order to understand closures, you must have a very good understanding of scopes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The scope is the context in which values and expressions are visible or can be referenced.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are 3 types of variable scopes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Global scope&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local scope&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Block scope (introduced in ES6)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#global-variables"&gt;
  &lt;/a&gt;
  Global Variables
&lt;/h2&gt;

&lt;p&gt;Any variable that is declared &lt;em&gt;outside a function&lt;/em&gt; has a global scope.&lt;/p&gt;

&lt;p&gt;A global variable can be accessed by all &lt;strong&gt;functions&lt;/strong&gt; and &lt;strong&gt;scripts&lt;/strong&gt; in a document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mango&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// fruit can be accessed here&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// fruit can be accessed here as well&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, any variable that is initialized or has been assigned a value &lt;em&gt;inside a function&lt;/em&gt; without being declared first will be &lt;strong&gt;global&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// call the function first&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementByID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My favorite fruit is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// fruit can be accessed here&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mangoes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// fruit can be used here too&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#local-variables"&gt;
  &lt;/a&gt;
  Local Variables
&lt;/h2&gt;

&lt;p&gt;Any variable that is declared &lt;em&gt;inside a function&lt;/em&gt; has a &lt;strong&gt;local&lt;/strong&gt; scope.&lt;/p&gt;

&lt;p&gt;A local variable can be only accessed by the &lt;strong&gt;function&lt;/strong&gt; where it was declared.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// fruit can NOT be used here&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementByID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fruit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My favorite fruit is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mangoes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// fruit can be used here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note:- Changes made to a variable in the global scope takes effect inside the local scope as well&lt;/p&gt;

&lt;p&gt;However, changes made inside the local scope don't affect the global scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similar to the local scope is the &lt;strong&gt;Block&lt;/strong&gt; scope.&lt;/p&gt;

&lt;p&gt;A block is any part of the code enclosed within &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Variables declared using the &lt;code&gt;let&lt;/code&gt; keyword are accessible within the block in which it is declared.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note:- Variables declared with the &lt;code&gt;var&lt;/code&gt; keyword can NOT have block scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#scope-nesting"&gt;
  &lt;/a&gt;
  Scope Nesting
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs play a bit more with scopes, and nest one scope into another. For example, the function &lt;code&gt;innerFunc()&lt;/code&gt; is nested inside an outer function &lt;code&gt;outerFunc()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outerFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Outer scope&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;outerVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I'm outside&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;innerFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Inner scope&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outerVar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;innerFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you access the variable &lt;code&gt;outerVar&lt;/code&gt; of &lt;code&gt;outerFunc()&lt;/code&gt; from within &lt;code&gt;innerFunc()&lt;/code&gt; scope?&lt;/p&gt;

&lt;p&gt;Indeed. Try it yourself and find out.&lt;/p&gt;

&lt;p&gt;Now you know two interesting things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scopes can be nested.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The variables of the outer scope are accessible inside the inner scope.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-lexical-scope"&gt;
  &lt;/a&gt;
  The Lexical Scope
&lt;/h2&gt;

&lt;p&gt;How does JavaScript understand that &lt;code&gt;outerVar&lt;/code&gt; inside &lt;code&gt;innerFunc()&lt;/code&gt; corresponds to the variable &lt;code&gt;outerVar&lt;/code&gt; of &lt;code&gt;outerFunc()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;JavaScript implements a scoping mechanism named &lt;strong&gt;lexical scoping&lt;/strong&gt; (or static scoping).&lt;/p&gt;

&lt;p&gt;Lexical scoping means that the accessibility of variables is determined by the position of the variables inside the nested scopes.&lt;/p&gt;

&lt;p&gt;It‚Äôs called lexical (or static) because the engine determines the nesting of scopes at the lexing (&lt;em&gt;aka&lt;/em&gt; tokenizing) time just by looking at the JavaScript source code, &lt;em&gt;without executing it&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-closure"&gt;
  &lt;/a&gt;
  The Closure
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs make a change: &lt;code&gt;innerFunc()&lt;/code&gt; to be invoked outside of its lexical scope (outside of &lt;code&gt;outerFunc()&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Would &lt;code&gt;innerFunc()&lt;/code&gt; still be able to access &lt;code&gt;outerVar&lt;/code&gt;? Let's see.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outerFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;outerVar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I'm outside&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;innerFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;outerVar&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// logs "I'm outside"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;innerFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myInnerFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;outerFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;myInnerFunc&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;innerFunc()&lt;/code&gt; still has access to &lt;code&gt;outerVar&lt;/code&gt; from its lexical scope, even after being executed &lt;em&gt;outside of its lexical scope&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In other words, &lt;code&gt;innerFunc()&lt;/code&gt; remembers the variable &lt;code&gt;outerVar&lt;/code&gt; from its lexical scope.&lt;/p&gt;

&lt;p&gt;So, &lt;code&gt;innerFunc()&lt;/code&gt; is a closure because it &lt;em&gt;closes over&lt;/em&gt; the variable &lt;code&gt;outerVar&lt;/code&gt; from its lexical scope.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The closure is a function that has access to its lexical scope when executed &lt;strong&gt;outside&lt;/strong&gt; of its lexical scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A rule of thumb to identify a closure:&lt;/p&gt;

&lt;p&gt;If inside a function you see a variable not defined inside that function, most likely that function is a closure because that particular variable is &lt;em&gt;captured&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading üôè&lt;/p&gt;

&lt;p&gt;More articles on JavaScript soon.&lt;/p&gt;




&lt;p&gt;I write daily &lt;a href="https://twitter.com/theShounakDas"&gt;Twitter&lt;/a&gt; threads on web development concepts, resources, and tips.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>closures</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How I create a nice Github profile page in 5 min!</title>
      <author>CodeOz</author>
      <pubDate>Fri, 17 Sep 2021 08:19:41 +0000</pubDate>
      <link>https://dev.to/codeoz/how-i-create-a-nice-github-profile-page-in-5-min-1m12</link>
      <guid>https://dev.to/codeoz/how-i-create-a-nice-github-profile-page-in-5-min-1m12</guid>
      <description>&lt;p&gt;I will show you how create my profile github page in &lt;strong&gt;5 min!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's check my current profile page&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://twitter.com/Code__oz"&gt;https://twitter.com/Code__oz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(And follow me on github üëÄ)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-create-profile-on-github"&gt;
  &lt;/a&gt;
  How I create profile on github
&lt;/h3&gt;

&lt;p&gt;Before custom it, we need to create it!&lt;/p&gt;

&lt;p&gt;It's very easy.&lt;/p&gt;

&lt;p&gt;Go to github and create a new repository&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/new"&gt;https://github.com/new&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create the repository with your &lt;strong&gt;own github name!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vrbyZGDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clgq2ufp0t2kspyaagy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vrbyZGDB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clgq2ufp0t2kspyaagy6.png" alt="Screenshot 2021-09-16 at 23.24.51"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will have a special event from github page!&lt;/p&gt;

&lt;p&gt;Make you repository public &amp;amp; click on &lt;code&gt;Add a README file&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Go back to your profil and you can see that you have a profile page!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4JPxlsY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmexy17nw1sqcjr64xfu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4JPxlsY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nmexy17nw1sqcjr64xfu.png" alt="Screenshot 2021-09-16 at 23.26.19"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-your-profil"&gt;
  &lt;/a&gt;
  Custom your profil
&lt;/h3&gt;

&lt;p&gt;Ok so now it's the moment of fun!&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://rahuldkjain.github.io/gh-profile-readme-generator/"&gt;https://rahuldkjain.github.io/gh-profile-readme-generator/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;After you fill all information that you need, click to &lt;code&gt;Generate README&lt;/code&gt; at the bottom page.&lt;/p&gt;

&lt;p&gt;Edit &lt;code&gt;README&lt;/code&gt; on your repository and paste the code above!&lt;/p&gt;

&lt;p&gt;And yes we did it in 5min!&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;If you want to have a nice article to read about web dev, you can subscribe to my FREE newsletter &amp;amp; get a &lt;strong&gt;cheatlist about Javascript&lt;/strong&gt; at this URL üëá&lt;/p&gt;

&lt;p&gt;üéÅ &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚òïÔ∏è You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; üôè&lt;/p&gt;

&lt;p&gt;üèÉ‚Äç‚ôÇÔ∏è You can follow me on üëá&lt;/p&gt;

&lt;p&gt;üïä Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üë®‚Äçüíª Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark üîñ this article!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>github</category>
      <category>node</category>
    </item>
    <item>
      <title>How to generate a random unique identifier with UUID</title>
      <author>Anton Paliakou</author>
      <pubDate>Fri, 17 Sep 2021 08:15:42 +0000</pubDate>
      <link>https://dev.to/toni777772/how-to-generate-a-random-unique-identifier-with-uuid-cbo</link>
      <guid>https://dev.to/toni777772/how-to-generate-a-random-unique-identifier-with-uuid-cbo</guid>
      <description>&lt;p&gt;UUID is a universally unique identifier. UUID can be used to identify types, interfaces, and other items.&lt;br&gt;
Creating an object or some entity with an unique identifier is a common task for developers. UUID structure created for to do this and to do it best, do not need create "bicycle".&lt;br&gt;
&lt;strong&gt;UUID is guaranteed to be unique&lt;/strong&gt;. When initializing the structure, a new UUID is created with RFC 4122 version 4 random bytes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Foundation&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;identifier&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uuidString&lt;/span&gt;
&lt;span class="kt"&gt;Swift&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;identifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Result: "6A967474-8672-4ABC-A57B-52EA809C5E6D" &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Available iOS 6.0+, macOS 10.8+, tvOS 9.0+, watchOS 2.0+.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#whats-uuid-from-a-code-perspective"&gt;
  &lt;/a&gt;
  What's UUID from a code perspective?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://developer.apple.com/documentation/foundation/uuid"&gt;UUID&lt;/a&gt; is a simple structure and is a part of Foundation framework.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ReferenceConvertible&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Hashable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;Equatable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;CustomStringConvertible&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;/// ...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;UUID conforms 4 protocols: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/foundation/referenceconvertible"&gt;ReferenceConvertible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/swift/hashable"&gt;Hashable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/documentation/swift/equatable"&gt;Equatable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toCustomStringConvertible"&gt;CustomStringConvertible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, the structure has some properties:&lt;/p&gt;

&lt;p&gt;1 &lt;code&gt;uuid&lt;/code&gt; - Returns the UUID as bytes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;UInt8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2 &lt;code&gt;uuidString&lt;/code&gt; - Returns a string created from the UUID, such as ‚ÄúE621E1F8-C36C-495A-93FC-0C247A3E6E5F‚Äù&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;uuidString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Articles comes to devto portal with delay 1-2 week, if you want read my articles without delay you can visit &lt;a href="https://tonidevblog.com/"&gt;ToniDevBlog&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Article originally published at &lt;a href="https://tonidevblog.com/posts/how-to-generate-a-random-unique-identifier-with-uuid/"&gt;ToniDevBlog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for reading! See you soon. üëã&lt;/p&gt;

</description>
      <category>swift</category>
      <category>ios</category>
      <category>uuid</category>
      <category>apple</category>
    </item>
    <item>
      <title>Time to say goodbye to Docker Swarm  </title>
      <author>Rub√©n Mart√≠n Pozo</author>
      <pubDate>Fri, 17 Sep 2021 08:12:37 +0000</pubDate>
      <link>https://dev.to/playtomic/time-to-say-goodbye-to-docker-swarm-2iej</link>
      <guid>https://dev.to/playtomic/time-to-say-goodbye-to-docker-swarm-2iej</guid>
      <description>&lt;p&gt;We've been using Docker Swarm almost from the beginning of Playtomic's history. It has performed astonishingly well from day one. We haven't had a significant issue in four years. But, with tears in our eyes, it's time to say goodbye.&lt;/p&gt;

&lt;p&gt;Why are we moving away from Docker Swarm? Well, the future of Docker Swarm is not clear. Although Docker Swarm is part of docker-ce distribution, Mirantis (owner of Docker Enterprise since November 2019) said that their main orchestrator would be Kubernetes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The primary orchestrator going forward is Kubernetes. Mirantis is committed to providing an excellent experience to all Docker Enterprise platform customers and currently expects to support Swarm for at least two years, depending on customer input into the roadmap. Mirantis is also evaluating options for making the transition to Kubernetes easier for Swarm users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is true that in a later &lt;a href="https://www.mirantis.com/blog/mirantis-will-continue-to-support-and-develop-docker-swarm/"&gt;post&lt;/a&gt;, Mirantis said that they were going to support Docker Swarm in the future, but clearly, the orchestrator competition is led by Kubernetes. &lt;/p&gt;

&lt;p&gt;However, the main reason why we're moving away from Docker Swarm is that we need capabilities that are not easy to get with Docker Swarm at the moment. Playtomic is growing pretty fast, and we need tools that allow us to scale up and down automatically as required. &lt;/p&gt;

&lt;p&gt;In a containerized environment, scaling means that you need to automatically scale up the number of instances and the number of nodes in the cluster. That's something that it's not easily achievable with Docker Swarm, unfortunately.&lt;/p&gt;

&lt;p&gt;Also, we've grown into different teams, and these teams need a way to manage their services in the cluster autonomously. On the other hand, giving full access to the cluster to every team is risky. That's why we looked for a way of granted access just to the resources the team needs to manage. Again, Docker Swarm doesn't offer a straightforward solution to this problem.&lt;/p&gt;

&lt;p&gt;For all these reasons, we've been testing Kubernetes for a while, and although Kubernetes is definitely more complex than Docker Swarm is also more powerful. Once you understand how Kubernetes operates and understand its design, it opens up many new exciting possibilities for us here at Playtomic. &lt;/p&gt;

&lt;p&gt;We're running our Kubernetes cluster on EKS. That gives us kind of the same feeling we had with Docker Swarm since setting up the system is pretty straightforward. We don't need to fully understand the internals of the cluster to operate it. &lt;/p&gt;

&lt;p&gt;Farewell Docker Swarm, you served us well. &lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@carrier_lost?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ian Taylor&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/docker?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>infrastructure</category>
      <category>k8s</category>
      <category>kubernetes</category>
      <category>swarm</category>
    </item>
    <item>
      <title>Manage errors better</title>
      <author>JOOJO DONTOH</author>
      <pubDate>Fri, 17 Sep 2021 08:07:34 +0000</pubDate>
      <link>https://dev.to/joojodontoh/manage-errors-better-3ih1</link>
      <guid>https://dev.to/joojodontoh/manage-errors-better-3ih1</guid>
      <description>&lt;p&gt;There is absolutely no engineer or dev who always writes error free code. In this line of business (Software engineering) errors and bugs will always be around and can definitely be a huge pain in the a** ü§¨. Errors can appear in any part of the implementation process right up through sandbox environments to production/already shipped products. The main aim of this article is to try and help prevent, mitigate and handle errors properly. Ok let's go&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLYr3Vlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/0BP6TC2sPVnNFxsF96/giphy.gif%3Fcid%3Decf05e47yvw5yheeq9e9h168u0zdzhte36qfokg0iawfrubd%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLYr3Vlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/0BP6TC2sPVnNFxsF96/giphy.gif%3Fcid%3Decf05e47yvw5yheeq9e9h168u0zdzhte36qfokg0iawfrubd%26rid%3Dgiphy.gif%26ct%3Dg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The main things this article will focus on are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Detailed self explanatory errors&lt;/li&gt;
&lt;li&gt;Logs&lt;/li&gt;
&lt;li&gt;Proper notifications management&lt;/li&gt;
&lt;li&gt;Quick response&lt;/li&gt;
&lt;li&gt;Thorough RCA&lt;/li&gt;
&lt;li&gt;Long term fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#detailed-self-explanatory-errors"&gt;
  &lt;/a&gt;
  Detailed self explanatory errors
&lt;/h2&gt;

&lt;p&gt;Errors can be difficult and extremely cumbersome to find. The last thing you want after combing through lines of code or log statements is an error message so vague that you wished you hadn't found it. It gets worse when more than one service is involved. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iYeLUCiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FjOsaw9z4BhrW/giphy.gif%3Fcid%3Decf05e4703z4eeld7o2rq1uvgrsichdfdnoeapprl0upp8jk%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iYeLUCiW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/FjOsaw9z4BhrW/giphy.gif%3Fcid%3Decf05e4703z4eeld7o2rq1uvgrsichdfdnoeapprl0upp8jk%26rid%3Dgiphy.gif%26ct%3Dg"&gt;&lt;/a&gt;&lt;br&gt;
At the very least, you may want to consider being clear and unambiguous with your error responses and relating status codes. &lt;br&gt;
For example, let's say a user who does not have the access to a particular resource tries to access it; while trying to access that resource, your service keeps responding with status code of 204 and an error message of no content. Any new dev or perhaps your future self who may not know that the user does not have permission, may begin to debug for why the resource isn't being sent back since the response is misleading. An appropriate response may be a 401 status code with a response message of "not authorized".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/lvQe7YwEEJoaIluvs6/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/lvQe7YwEEJoaIluvs6/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logs"&gt;
  &lt;/a&gt;
  Logs
&lt;/h2&gt;

&lt;p&gt;Logs are a very essential aspect of running through the inner workings of application especially during investigations. Many of us may have found ourselves in circumstances where the production server has been down, forcing us to rummage through the logs for causative issues. This is enough a reason to make sure that logs are clear and run through most functions of your application to provide an adequate stack map of previous actions. Thankfully, there are many well known packages which already handle most of the heavy lifting for us. &lt;a href="https://github.com/winstonjs/winston"&gt;Winston&lt;/a&gt; is a good example of such loggers. You may also want to consider the various levels of logs through out the application;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Info level logs - these are most likely user driven actions that happen while the program runs. These logs could also serve as &lt;a href="https://en.wikipedia.org/wiki/Code_smell"&gt;code smells&lt;/a&gt; for highlighting potential causes of errors &lt;/li&gt;
&lt;li&gt;Notice level logs - these logs are to be done when a notable error occurs&lt;/li&gt;
&lt;li&gt;Warning level logs - these logs are usually made to highlight events that may drive the application into a failed state. For example these errors could be made to send alerts when a notable error such as a status 500 happens more than 10 times in 5 mins or when cache storage is reaching its capacity.&lt;/li&gt;
&lt;li&gt;Error level logs - At this level, anything that is regarded as an error must be logged. This may be an internal error or an error response.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/LOQyoLIojnizS949is/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/LOQyoLIojnizS949is/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is also important to add context to your log messages. Contextless error messages are basically noise since most of these messages can't contribute to investigation or troubleshooting efforts. Context can be added to a log message by subtly stating the surrounding actions or processes of the error. For example, imagine working on a banking application that throws an error: &lt;br&gt;
&lt;code&gt;Transaction failed&lt;/code&gt;&lt;br&gt;
In many ways this error is very vague because there are many types of transactions and routines that happen in a banking application. Noting the transaction ID and the type of transaction it is provides greater meaning to the log. ie &lt;code&gt;userOnlinePayment Transaction 394fs948dne7ndue84nd74: failed&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proper-notifications-management"&gt;
  &lt;/a&gt;
  Proper notifications management
&lt;/h2&gt;

&lt;p&gt;As said earlier, errors are part of the development process and can't be entirely removed, therefore once they occur at an alarming rate, adequate structuring to inform all relevant devs is important. This in many ways is similar to warning and notice logs. Various cloud providers such as Google cloud platform provide out of the box solutions such as monitoring tools and channels to inform engineers whenever necessary. &lt;br&gt;
Notification overload may however be birthed from this if not controlled. Therefore in the case of devops, attaching an infrastructure to the right application is important. This not only relieves some of the devs from excessive notifications, but also ensures that these notifications get to the right devs. Managing the frequency of notifications also reduces desensitization to them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-response"&gt;
  &lt;/a&gt;
  Quick response
&lt;/h2&gt;

&lt;p&gt;For most companies, server/service downtime means financial loss which is bad for everyone. Therefore reacting quickly in such moments is of utmost importance. All the earlier points lead up to this one because they contribute to troubleshooting efforts. Troubleshooting efforts are important to not only find the errors but to assess the severity of the error and how long is needed to solve it. This information could be the deciding factor for a rollback or a total shutdown. In some cases, a rollback may be good because it allows for a quick dive into the RCA to generate long term fixes as quick as possible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xUOxeZUc8UFwMgH2MM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xUOxeZUc8UFwMgH2MM/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thorough-root-cause-analysis-rca-discussion"&gt;
  &lt;/a&gt;
  Thorough root cause analysis (RCA) discussion.
&lt;/h2&gt;

&lt;p&gt;After a fix has been deployed or a rollout done, the next course of action is to prevent the error from happening again. RCA discussions are very key to understanding the surrounding concepts of the problem while figuring out that point of failure along with others if there are any. RCAs are better done as a group since the outcomes provide a more diverse facet to the problem. An RCA also means providing long term solutions such as locating all contributing factors including devs who may need extra training or mentorship.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l3vR25Tup6jPFhsFW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l3vR25Tup6jPFhsFW/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#long-term-fixes"&gt;
  &lt;/a&gt;
  Long term fixes
&lt;/h2&gt;

&lt;p&gt;Unlike short term fixes that handle the immediate problem, long term fixes are set in place to make sure errors do not recur while strengthening various failure points. &lt;br&gt;
An example of the difference between a short and long term fix is as follows; Let's say two helper methods call one particular a model method to insert data into the DB. However, just one of these helper methods have implemented a mandatory data mutation before the data is to be stored. This creates the problem of data inconsistency in the DB which affects endpoints that are retrieving this information. The somewhat short term fix will be to implement the said data mutation in the functions that do not have it to stop the entry of dirty data into the DB. On the other hand, the long term fix will be to move the data mutation logic into the model method to prevent the issue from ever happening and then writing a script to cleanse the already inserted data if the data is frequently used. In this example the long term fix not only solves the issue but also enforces a proper code structure and industry standards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/emN0LqTozqRGNwVPAg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/emN0LqTozqRGNwVPAg/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These steps help to put most errors to bed and make the whole development process more manageable. Share your thoughts in the comments if you have any! Catch you in the next one üòÅüòÅ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/12noFudALzfIynHuUp/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/12noFudALzfIynHuUp/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Foobar: Please Pass the Coded Messages</title>
      <author>Gangbaolede Li</author>
      <pubDate>Fri, 17 Sep 2021 08:06:42 +0000</pubDate>
      <link>https://dev.to/itepsilon/foobar-please-pass-the-coded-messages-4dhn</link>
      <guid>https://dev.to/itepsilon/foobar-please-pass-the-coded-messages-4dhn</guid>
      <description>&lt;p&gt;You need to pass a message to the bunny workers, but to avoid detection, the code you agreed to use is... obscure, to say the least. The bunnies are given food on standard-issue plates that are stamped with the numbers 0-9 for easier sorting, and you need to combine sets of plates to create the numbers in the code. The signal that a number is part of the code is that it is divisible by 3. You can do smaller numbers like 15 and 45 easily, but bigger numbers like 144 and 414 are a little trickier. Write a program to help yourself quickly create large numbers for use in the code, given a limited number of plates to work with.&lt;/p&gt;

&lt;p&gt;You have L, a list containing some digits (0 to 9). Write a function solution(L) which finds the largest number that can be made from some or all of these digits and is divisible by 3. If it is not possible to make such a number, return 0 as the solution. L will contain anywhere from 1 to 9 digits.  The same digit may appear multiple times in the list, but each element in the list may only be used once.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#languages"&gt;
  &lt;/a&gt;
  Languages
&lt;/h1&gt;

&lt;p&gt;To provide a Java solution, edit Solution.java&lt;br&gt;
To provide a Python solution, edit solution.py&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#test-cases"&gt;
  &lt;/a&gt;
  Test cases
&lt;/h1&gt;

&lt;p&gt;Your code should pass the following test cases.&lt;br&gt;
Note that it may also be run against hidden test cases not shown here.&lt;/p&gt;

&lt;p&gt;Input:&lt;br&gt;
solution.solution([3, 1, 4, 1])&lt;br&gt;
Output:&lt;br&gt;
    4311&lt;/p&gt;

&lt;p&gt;Input:&lt;br&gt;
solution.solution([3, 1, 4, 1, 5, 9])&lt;br&gt;
Output:&lt;br&gt;
    94311&lt;/p&gt;

&lt;p&gt;Solution:&lt;br&gt;
python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;solution&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# already divisible by 3 =&amp;gt; use all digits
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# check backward if there is a digit that is 1 mod 3
&lt;/span&gt;        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="c1"&gt;# there must be two digits that each of them is 2 mod 3
&lt;/span&gt;        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# check backward if there is a digit that is 2 mod 3
&lt;/span&gt;        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="c1"&gt;# there must be two digits that each of them is 1 mod 3
&lt;/span&gt;        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>google</category>
      <category>foobar</category>
      <category>python</category>
    </item>
    <item>
      <title>Ecommerce and Next.js on the Jamstack ‚Äî with Colby Fayock</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Fri, 17 Sep 2021 07:47:04 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/ecommerce-and-next-js-on-the-jamstack-with-colby-fayock-5bbb</link>
      <guid>https://dev.to/whitep4nth3r/ecommerce-and-next-js-on-the-jamstack-with-colby-fayock-5bbb</guid>
      <description>&lt;p&gt;I sat down with &lt;a href="https://twitter.com/colbyfayock"&gt;Colby Fayock&lt;/a&gt; to talk about &lt;a href="https://nextjs.org/docs"&gt;Next.js&lt;/a&gt;, how all of its features help enable developers to build great experiences on the web, and how it can help solve the many challenges of building e-commerce sites on the Jamstack.&lt;/p&gt;

&lt;p&gt;In this video, we cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Next.js?&lt;/li&gt;
&lt;li&gt;Is Next.js a static site generator?&lt;/li&gt;
&lt;li&gt;What does server-side rendering mean?&lt;/li&gt;
&lt;li&gt;What makes Next.js a strong framework?&lt;/li&gt;
&lt;li&gt;What are some e-commerce challenges that Next.js helps to solve?&lt;/li&gt;
&lt;li&gt;How is performance important to e-commerce?&lt;/li&gt;
&lt;li&gt;How does Next.js help with performance?&lt;/li&gt;
&lt;li&gt;How is SEO important to e-commerce?&lt;/li&gt;
&lt;li&gt;How does Next.js help with SEO?&lt;/li&gt;
&lt;li&gt;What's the most overlooked, yet oddly difficult part of e-commerce?&lt;/li&gt;
&lt;li&gt;Accessibility, internationalisation and personalisation in e-commerce&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Colby is a super-nice host and I can't wait to hang out with him again. Thanks for having me, Colby!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GyXyygeC2RE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__186511"&gt;
  
    .ltag__user__id__186511 .follow-action-button {
      background-color: #692ba8 !important;
      color: #ffffff !important;
      border-color: #692ba8 !important;
    }
  
    &lt;a href="/colbyfayock" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xlv1dTkX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--VO7FWp_z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/186511/c8cb9a0a-e3bb-4f6e-a332-c45617c1455a.png" alt="colbyfayock image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/colbyfayock"&gt;Colby Fayock&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/colbyfayock"&gt;I help others learn by doing through articles, videos, and courses about Javascript, React, and the static web. https://colbyfayock.com/newsletter&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>nextjs</category>
      <category>webdev</category>
      <category>ecommerce</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Google Play Kafkaesque Experience</title>
      <author>Shai Almog</author>
      <pubDate>Fri, 17 Sep 2021 07:23:09 +0000</pubDate>
      <link>https://dev.to/codenameone/google-play-kafkaesque-experience-mp3</link>
      <guid>https://dev.to/codenameone/google-play-kafkaesque-experience-mp3</guid>
      <description>&lt;p&gt;It seems that every other week someone else writes in &lt;a href="https://reddit.com/r/androiddev/"&gt;/r/AndroidDev&lt;/a&gt; complaining that Google unjustly removed his app. This happened to us with a few apps but usually it was because of changing policy or just stupid policy. Never anything as ludicrous as what we've experienced for the past few weeks.&lt;/p&gt;

&lt;p&gt;A few weeks ago we got a threatening email from Google Play:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4cXW9sp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jb0q2zaje2ktmozdtw6u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4cXW9sp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jb0q2zaje2ktmozdtw6u.png" alt="Letter From Google"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Those guys collecting user phone numbers sound like pretty bad people right... Only we don't collect any phone numbers. Never did and don't care about them at all. Wouldn't know what to do with them.&lt;/p&gt;

&lt;p&gt;Notice the lack of any technical information in the email. How was this determined, how can this be fixed other than by saying we collect phone numbers (which again, we don't). &lt;/p&gt;

&lt;p&gt;Nothing. &lt;/p&gt;

&lt;p&gt;Also one week? What company can get anything done in one week? &lt;/p&gt;

&lt;p&gt;That's insane.&lt;/p&gt;

&lt;p&gt;So we instantly appealed the process then tried to go through all the libraries we used. Maybe something was in violation. We couldn't find anything.&lt;/p&gt;

&lt;p&gt;In desperation I decompiled the APK: bingo!&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; of the APK we had a &lt;code&gt;READ_PHONE_STATE&lt;/code&gt; permission. We didn't add it though...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-was-googles-fault"&gt;
  &lt;/a&gt;
  It was Googles Fault
&lt;/h2&gt;

&lt;p&gt;Turns out &lt;a href="https://stackoverflow.com/a/49561996/2935174"&gt;Firebase had a bug&lt;/a&gt; in the version we used. Updating to a newer version removed the phone permission. Jackpot.&lt;/p&gt;

&lt;p&gt;So we built a new bundle, verified the decompiled APK didn't include that permission and chugged this down to Google being stupid about phrasing their emails and packaging their own libraries. &lt;/p&gt;

&lt;p&gt;But no. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-app-got-removed-anyway"&gt;
  &lt;/a&gt;
  Our App Got Removed Anyway
&lt;/h2&gt;

&lt;p&gt;Same reason, no further explanation or anything. The appeal I sent was returned with the response that our case was reviewed and we're still at fault. No further helpful information was provided.&lt;/p&gt;

&lt;p&gt;Then it started happening to our customers: &lt;a href="https://stackoverflow.com/questions/68921544/google-play-recent-review-notification-apk-has-a-prominent-disclosure-but-the"&gt;https://stackoverflow.com/questions/68921544/google-play-recent-review-notification-apk-has-a-prominent-disclosure-but-the&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means there's something seriously problematic in Codename One and we can't find it. We spent weeks pouring over every single thing that might impact Googles review process. We resubmitted the app with minor changes dozens of times, to no avail. Unfortunately, every submit meant two days of waiting period until we got rejected again.&lt;/p&gt;

&lt;p&gt;The rejection system didn't even indicate if there was any "improvement". Are we on the right track? Is anyone there?&lt;/p&gt;

&lt;p&gt;I won't go into all the things we tried but we tried a lot of variations on the solving the problem... Nothing worked.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-support"&gt;
  &lt;/a&gt;
  Google Support
&lt;/h2&gt;

&lt;p&gt;So the obvious thing would be "write to support", surely the can help?&lt;/p&gt;

&lt;p&gt;There's a support button that in my case literally leads you in a constant redirect loop back to Google play. Maybe it's because I have multiple Google Accounts and multiple play accounts. I still have no idea. But Steve was able to get an email chain going. It was 30 emails deep by the time we solved the issue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infuriating-solution"&gt;
  &lt;/a&gt;
  Infuriating Solution
&lt;/h2&gt;

&lt;p&gt;So early on I had a suspicion that this was due to one of our old beta/test tracks. They are all disabled and haven't been used since we originally created the app a few years back. So naturally I updated the version in all the beta/testing tracks and then proceeded to pause all of these tracks. &lt;/p&gt;

&lt;p&gt;It turns out that this wasn't enough. We had to literally submit an alpha, go through the process. Graduate it to beta and then to production. This was the only way to "clear" the old broken version that we had.&lt;/p&gt;

&lt;p&gt;Originally a few years ago a phone permission was a part of the app (which was a valid case back then to handle Android bugs, not collect phones or anything). This was in a paused unused old alpha channel... Instead of suspending the alpha channel or just writing to us that we have a problem in that old unused channel our entire app got suspended with no support!&lt;/p&gt;

&lt;p&gt;Amazingly this same thing happened to our customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apple-is-better"&gt;
  &lt;/a&gt;
  Apple is Better
&lt;/h2&gt;

&lt;p&gt;I had my share of run-ins with Apples review process. It isn't pleasant. But there's a human being on the other side. They answer, they communicate, they use technical terms to explain the problem. Hell, they even called me over the phone twice to discuss my problem.&lt;/p&gt;

&lt;p&gt;Google used to be better, flawed but better. It seems that in its zeal to copy Apple they copied all the bad stuff without the good stuff. &lt;/p&gt;

&lt;p&gt;This latest experience has really soured me further on Google. I used to be such a fan of the company, but things like &lt;a href="https://hackernoon.com/why-and-how-we-left-app-engine-after-it-almost-destroyed-us-40ac2fc0b1a8?1"&gt;this&lt;/a&gt; make me want to completely &lt;a href="https://github.com/tycrek/degoogle"&gt;degoogle&lt;/a&gt; my life. I'm still an Android user but with every incident like this I feel a strong urge to move back to iOS. It's a shame we have so little choice here...&lt;/p&gt;

</description>
      <category>android</category>
      <category>java</category>
      <category>kotlin</category>
      <category>startup</category>
    </item>
    <item>
      <title>How to deploy your Django app with PostgreSQL on AWS</title>
      <author>Tomi Tokko</author>
      <pubDate>Fri, 17 Sep 2021 07:19:48 +0000</pubDate>
      <link>https://dev.to/tomitokko3/how-to-deploy-your-django-app-with-postgresql-on-aws-3012</link>
      <guid>https://dev.to/tomitokko3/how-to-deploy-your-django-app-with-postgresql-on-aws-3012</guid>
      <description>&lt;p&gt;If you want to deploy a Django project to AWS, then Qovery is the right platform for you. In this post, you will learn how to deploy your Django application to AWS using Qovery.&lt;/p&gt;

&lt;p&gt;The first thing you need to do is to make sure that you have an &lt;a href="https://aws.com"&gt;AWS&lt;/a&gt; account and a Qovery account. To create a Qovery account, just go to &lt;a href="https://qovery.com"&gt;qovery.com&lt;/a&gt; and signup with either your Github or Gitlab account. Once you have these two ready, you can move on with the tutorial.&lt;/p&gt;

&lt;p&gt;To be able to use AWS with Qovery, you need to connect these two together. The first step to connecting your AWS account to Qovery is by creating your AWS credentials with the right IAM permissions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-aws-credentials"&gt;
  &lt;/a&gt;
  Create AWS Credentials
&lt;/h2&gt;

&lt;p&gt;We need to get two credentials from our AWS account, which are &lt;code&gt;access key id&lt;/code&gt; and &lt;code&gt;secret access key&lt;/code&gt;. To get these credentials, you need to go into your AWS console, and search for IAM. The first result that comes up is &lt;code&gt;IAM&lt;/code&gt;, and it has a subtitle of &lt;code&gt;Manage access to AWS resources&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CVgriqPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zupqmr42zmqprufha4sr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVgriqPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zupqmr42zmqprufha4sr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on IAM, and it should take you to the IAM (Identity and Access Management) dashboard. In there, navigate to the left corner of the page and click on User groups&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CIUr_MOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etnrjm7vkijf84uxt8xi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIUr_MOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etnrjm7vkijf84uxt8xi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In User groups, head over to the top-right corner of the page and click on Create group. Under user group name, input Admins (NOTE: You must input &lt;b&gt;Admins&lt;/b&gt; as the name of the group. If another name is used instead, it will not work). Ignore where you see 'Add users to the group' and 'Attach permissions policies', then scroll down and click on Create group. You should get a green confirmation that the group has been successfully created, and you should also see the Admins group now listed in the list of groups. This step is visualized with the images below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WWd3lsG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68bklt4um3azfd2pdd3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWd3lsG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68bklt4um3azfd2pdd3j.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6i-mgcy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ytjd6a34ol8jek4whaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6i-mgcy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ytjd6a34ol8jek4whaw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WjHuEfS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2bhz3j2zzccwy2rxqu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WjHuEfS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2bhz3j2zzccwy2rxqu4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ7viOI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qt2c6mxx6cbn0722mb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQ7viOI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qt2c6mxx6cbn0722mb4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing we need to do is to create a new user. To do this, head over to the left corner of the page and click on 'Users'&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKryPBgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4kvspyh16xs87envk5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKryPBgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ow4kvspyh16xs87envk5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, head to the top right corner and click on 'Add users'. Then input qovery as the User name, and under 'Select AWS access type', tick the option that says 'Access key - Programmatic access', then click on Next.&lt;/p&gt;

&lt;p&gt;In permissions, it will automatically select the option 'Add user to group', under that, tick the Admins group we created earlier. After that, click on Next twice, and then hit Create user.&lt;/p&gt;

&lt;p&gt;Once you have these done, you should now have your &lt;code&gt;Access key ID&lt;/code&gt; and &lt;code&gt;Secret access key&lt;/code&gt;. Make sure you download this information as a csv file so that you don't loose it, because, when you go away from that page or close that tab, you will not be able to access the Secret access key again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gUF_xHPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fe0uzp6ycpvyli30ryc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gUF_xHPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5fe0uzp6ycpvyli30ryc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQk0EQ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqyq4x5xz03uj4aqdi14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQk0EQ7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqyq4x5xz03uj4aqdi14.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bbInnNb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anxqqd43owcxc8wtzs1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbInnNb7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/anxqqd43owcxc8wtzs1p.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zXSfS2g7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0jngr6nm2e068tzvk86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zXSfS2g7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0jngr6nm2e068tzvk86.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing we need to do is to setup IAM permissions to the 'qovery' user we created earlier.&lt;/p&gt;

&lt;p&gt;Under the list of users, click on qovery. When you click on it, it will take you to a page which contains the summary of that user. In there you will see a text that says 'Add inline policy', click on it, and it should take you to a page that says 'Create Policy'. In that page, switch over to the JSON section. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aXS94CW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jp77y5yn10e8lo3fvyw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXS94CW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jp77y5yn10e8lo3fvyw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--91ZsRsoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48fehjh46n1w4arzrf5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--91ZsRsoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48fehjh46n1w4arzrf5t.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5vGlbD7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihh8in0970veksouh9or.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5vGlbD7b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihh8in0970veksouh9or.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the JSON tab, you need to replace the code in there with the code below:&lt;br&gt;
&lt;code&gt;{&lt;br&gt;
  "Version": "2012-10-17",&lt;br&gt;
  "Statement": [&lt;br&gt;
    {&lt;br&gt;
      "Effect": "Allow",&lt;br&gt;
      "Action": [&lt;br&gt;
        "iam:*",&lt;br&gt;
        "s3:*",&lt;br&gt;
        "cloudwatch:*",&lt;br&gt;
        "autoscaling:*",&lt;br&gt;
        "application-autoscaling:*",&lt;br&gt;
        "elasticloadbalancing:*",&lt;br&gt;
        "organizations:DescribeAccount",&lt;br&gt;
        "organizations:DescribeOrganization",&lt;br&gt;
        "organizations:DescribeOrganizationalUnit",&lt;br&gt;
        "organizations:DescribePolicy",&lt;br&gt;
        "organizations:ListChildren",&lt;br&gt;
        "organizations:ListParents",&lt;br&gt;
        "organizations:ListPoliciesForTarget",&lt;br&gt;
        "organizations:ListRoots",&lt;br&gt;
        "organizations:ListPolicies",&lt;br&gt;
        "organizations:ListTargetsForPolicy",&lt;br&gt;
        "dynamodb:*",&lt;br&gt;
        "ecr:*",&lt;br&gt;
        "ec2:*",&lt;br&gt;
        "elasticache:*",&lt;br&gt;
        "cloudtrail:LookupEvents",&lt;br&gt;
        "kms:DescribeKey",&lt;br&gt;
        "kms:ListAliases",&lt;br&gt;
        "dynamodb:*",&lt;br&gt;
        "tag:GetResources",&lt;br&gt;
        "rds:*",&lt;br&gt;
        "ecs:*",&lt;br&gt;
        "eks:*",&lt;br&gt;
        "logs:*",&lt;br&gt;
        "events:DescribeRule",&lt;br&gt;
        "events:DeleteRule",&lt;br&gt;
        "events:ListRuleNamesByTarget",&lt;br&gt;
        "events:ListTargetsByRule",&lt;br&gt;
        "events:PutRule",&lt;br&gt;
        "events:PutTargets",&lt;br&gt;
        "es:AddTags",&lt;br&gt;
        "es:RemoveTags",&lt;br&gt;
        "es:ListTags",&lt;br&gt;
        "es:DeleteElasticsearchDomain",&lt;br&gt;
        "es:DescribeElasticsearchDomain",&lt;br&gt;
        "es:CreateElasticsearchDomain",&lt;br&gt;
        "events:RemoveTargets",&lt;br&gt;
        "kms:*"&lt;br&gt;
      ],&lt;br&gt;
      "Resource": "*"&lt;br&gt;
    }&lt;br&gt;
  ]&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you have that JSON code in there, click on 'Review Policy'&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--01UgAO4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvnnb5fl6tlfihbq0g1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--01UgAO4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvnnb5fl6tlfihbq0g1.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Then in the name field, input qovery_permissions, and now click on 'Create policy'&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f1iiXPK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wz3vdsjq6b3cjij0u1ia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1iiXPK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wz3vdsjq6b3cjij0u1ia.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9ccLAYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xp8j05x2ujkjgrxbjgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9ccLAYm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xp8j05x2ujkjgrxbjgm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have successfully created your AWS credentials. The next step is to connect it with Qovery&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-aws-to-qovery"&gt;
  &lt;/a&gt;
  Connect AWS to Qovery
&lt;/h2&gt;

&lt;p&gt;Qovery is a platform that helps in deploying web apps. Before following along it this tutorial, make sure that you are signed up to Qovery. To do that, heaad over to &lt;a href="https://qovery.com"&gt;qovery.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first thing to do here is to create a new organisation. Go to the top-right corner and click on New organization&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sf8LBEla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6io2r9o4cem9b4pnc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sf8LBEla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3v6io2r9o4cem9b4pnc6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose your plan&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QH49oNym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5psjjmnf795fd0tkozql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QH49oNym--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5psjjmnf795fd0tkozql.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then input a name for your organization, and click 'Create'&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YUYBjb3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99rct55mhw5cwi5ygtpa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YUYBjb3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99rct55mhw5cwi5ygtpa.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that your new organization is created, go into the settings of that organization by clicking the gear icon at the top-right corner of the organization page, and then click on 'Clusters' which is located in the left corner of the Settings page.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r7r9vfGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rg32lg56b9lpmc8d3rs6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r7r9vfGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rg32lg56b9lpmc8d3rs6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--696A5laQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv1u74yezyjfq5h90pg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--696A5laQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv1u74yezyjfq5h90pg4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the cluster section, click on 'Add Cluster'. Then input a name for the cluster, and under cloud provider, select 'Amazon Web Services' and also select a region the best suites you. Then click on Create. Your new cluster has now been created successfully.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DuMuD5sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrivsdtgfk20yg6u0uvc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DuMuD5sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrivsdtgfk20yg6u0uvc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mar8m4zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6shhitzpkdw9lmse3tyx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mar8m4zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6shhitzpkdw9lmse3tyx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing to do is to input our AWS credentials into this cluster. To do this, first click on 'Edit'&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MU74AiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd1vd6qxclgorygu9p82.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MU74AiUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd1vd6qxclgorygu9p82.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then head over to credentials and click on Add&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnM_Nfbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xdr4miv1ef4h2xnoa78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnM_Nfbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xdr4miv1ef4h2xnoa78.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you need to enter a name for the new credential, and input your AWS Access Key ID and also your Secret Access Key, then click on save.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p32J60lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etty7gslr2jw6j586xaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p32J60lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etty7gslr2jw6j586xaf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, on your cluster, click on install. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---hvPLrQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuultcbzyd4ss5w3ci1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---hvPLrQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zuultcbzyd4ss5w3ci1c.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will go ahead and install your cluster fully. This usually takes 30 minutes, but you will be notified when this process is done. Now, you have successfully installed Qovery on AWS!&lt;/p&gt;

&lt;p&gt;The next thing to do now is to deploy our Django application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploy-a-django-app"&gt;
  &lt;/a&gt;
  Deploy A Django App
&lt;/h2&gt;

&lt;p&gt;Now that we have everything setup, the next step is to deploy our Django app.&lt;/p&gt;

&lt;p&gt;Before we start deploying, make sure that you have pushed your django project to the github account that you used to sign up to Qovery. Your django project must contain a 'requirements.txt' file and also two other files which are 'Dockerfile' and 'entrypoint.sh'. These files are used by Qovery to run and manage our application. &lt;/p&gt;

&lt;p&gt;For the Dockerfile, just paste the code below into it:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3.8.0-alpine

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update &amp;amp;&amp;amp; apk add postgresql-dev gcc python3-dev musl-dev

RUN pip install --upgrade pip
COPY ./requirements.txt /usr/src/app/requirements.txt
RUN pip install -r requirements.txt

COPY djangofollow /usr/src/app/
COPY entrypoint.sh /usr/src/app

EXPOSE 8000

ENTRYPOINT ["./entrypoint.sh"]`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In the 'entrypoint.sh' file, input this code in it:&lt;br&gt;
    #!/bin/sh&lt;br&gt;
    set -euo pipefail&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python manage.py migrate

exec python manage.py runserver 0.0.0.0:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Now that we have these done, we are good to go.&lt;/p&gt;

&lt;p&gt;In the organization page, click on 'Create Project' and a new project will be created, now click on 'Create Environment' and input the name of the environment, and a new environment will be created.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PmoMCsK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5jddudiv4tlj4zahnk9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PmoMCsK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5jddudiv4tlj4zahnk9.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDb2ErJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itwatj2xbavw35whxskt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDb2ErJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itwatj2xbavw35whxskt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's create a new application by clicking on the 'Add my first app' button. Then input the name of the app and then choose the Github repository of the app and also the Branch. Then click on 'Create'&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--emljS2KU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bwyrj25w01uei7jmd5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--emljS2KU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bwyrj25w01uei7jmd5w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should see a confirmation message that says that your app has been created&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4qGcLiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28y3nhykkl4k0bqdbkyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4qGcLiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28y3nhykkl4k0bqdbkyt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, click on settings in the app and head over to the General section, in there, under Build mode, change the option from Buildpacks to Dockerfile, then click on save. Also go into port, and add a port of 8000, and click save again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Osw7fryh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7wyp74nm2knk4uns1y5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Osw7fryh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7wyp74nm2knk4uns1y5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQWkctBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0u9jt2gwoijcjcq624qc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQWkctBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0u9jt2gwoijcjcq624qc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---AbIiv3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzbzfuo3fq08sf9boo8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---AbIiv3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzbzfuo3fq08sf9boo8r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing to do is to create a new postgresql database. To do this, head over to the environment, and at the top-right corner, click on Add, and under it click on Database&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--INkq6-tE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kafj6gchbohf8wz0yj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--INkq6-tE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8kafj6gchbohf8wz0yj1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, choose a database name, and under Type, choose POSTGRESQL and version 11.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nFVyPAne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sj4qtrvzbvckultgtyh4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nFVyPAne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sj4qtrvzbvckultgtyh4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click create, it will create a new postgresql database and it will redirect you to the database page. In there, got to the top-right corner and click on settings, under settings, click Deploy&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPCp3-si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l78gbj3st02chcj68i6x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPCp3-si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l78gbj3st02chcj68i6x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will deploy your posgresql database.&lt;/p&gt;

&lt;p&gt;Once your database is deployed and running, the database page should look like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bCC2T01S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjbcitcocnlaqwrf4f5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bCC2T01S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhjbcitcocnlaqwrf4f5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we have our app created and our postgresql database deployed, let's connect them together using environment and secret variables.&lt;/p&gt;

&lt;p&gt;Go into the app, at the left part, head over to 'Environment Variables'. Now what you need to do is to got into the 'settings.py' file of your django project and set the database using this format: &lt;br&gt;
&lt;code&gt;DATABASES = {&lt;br&gt;
  'default': {&lt;br&gt;
    'ENGINE': 'django.db.backends.postgresql_psycopg2',&lt;br&gt;
    'NAME': os.environ.get('QOVERY_POSTGRESQL_Z5B5DF0B7_DEFAULT_DATABASE_NAME', 'postgres'),&lt;br&gt;
    'USER': os.environ.get('QOVERY_POSTGRESQL_Z5B5DF0B7_LOGIN', 'postgres'),&lt;br&gt;
    'PASSWORD': os.environ.get('QOVERY_POSTGRESQL_Z5B5DF0B7_PASSWORD'),&lt;br&gt;
    'HOST': os.environ.get('QOVERY_POSTGRESQL_Z5B5DF0B7_HOST', 'z5b5df0b7-postgresql.||Q_DOMAIN||'),&lt;br&gt;
    'PORT': os.environ.get('QOVERY_POSTGRESQL_Z5B5DF0B7_PORT', 5432),&lt;br&gt;
  }&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All you need to do is to replace all the QOVERY_POSTGRESQL_XYXYXYX with the values in your Environment Variable.&lt;/p&gt;

&lt;p&gt;Once you have done this, the final thing to do is to deploy your django app. Now, go into your app and click on Actions, under Actions, click Deploy&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1O9ylRBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxqfnn8a3j6vnz8rc7js.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1O9ylRBT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxqfnn8a3j6vnz8rc7js.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congrats! You have successfully deployed your Django app with PostgreSQL On AWS using Qovery. &lt;/p&gt;

&lt;p&gt;You can also watch the video version of this tutorial &lt;a href="https://www.youtube.com/watch?v=Qlwv7FzHADM"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>django</category>
      <category>qovery</category>
      <category>postgres</category>
      <category>aws</category>
    </item>
  </channel>
</rss>
