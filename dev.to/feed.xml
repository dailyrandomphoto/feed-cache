<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cool minecraft plugin! ITEMSADDER</title>
      <author>Dima Gashuk</author>
      <pubDate>Wed, 20 Oct 2021 18:26:27 +0000</pubDate>
      <link>https://dev.to/damfler/cool-minecraft-plugin-itemsadder-2cji</link>
      <guid>https://dev.to/damfler/cool-minecraft-plugin-itemsadder-2cji</guid>
      <description>&lt;h3&gt;
  &lt;a href="#this-is-all-serious"&gt;
  &lt;/a&gt;
  This is all serious!
&lt;/h3&gt;

&lt;p&gt;I got acquainted with the wonderful ItemsAdders plugin, this plugin allows you to make new items, blocks, weapons, potions on yml markup, in general, anything you want, even planes and cars!!!&lt;/p&gt;

&lt;p&gt;This plugin is like a framework that helps us do wonderful things. Everything we want can be done effortlessly, without any problems, just by prescribing the type of object, its properties, if desired, enchantment and texture (taken from your texture pack, about this separately).&lt;/p&gt;

&lt;p&gt;To begin with, I will show you screenshots of images from the plugin page and a link to this plugin:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pGK0iy8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m874pxuchv32r0f1modk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pGK0iy8Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m874pxuchv32r0f1modk.png" alt="Preview"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3x_4kKo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3k2omm8fldfu3jlxvmxt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3x_4kKo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3k2omm8fldfu3jlxvmxt.png" alt="Preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-cost-of-the-plugin"&gt;
  &lt;/a&gt;
  The cost of the plugin
&lt;/h3&gt;

&lt;p&gt;The main problem of the plugin is its cost, it costs h 16.95 EUR, although I can say it's not very expensive for such a cool plugin, and I can say from hearsay that it's like 1-2 times to go to McDonald's :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opportunities"&gt;
  &lt;/a&gt;
  Opportunities
&lt;/h3&gt;

&lt;p&gt;I repeat, everything is possible here, from the usual sword texture, to cars, planes and new workbenches with their own mechanics.&lt;br&gt;
This plugin is well optimized, it can even compete with a huge number of mods, and the big plus is that it works without mods, and the server does not load from the word at all (for all the time of my game I have never experienced discomfort).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#texture-pack"&gt;
  &lt;/a&gt;
  Texture pack
&lt;/h3&gt;

&lt;p&gt;I mentioned that you use your own texture pack, this is not a joke, you will need to make ready-made textures or models, but do not rush to form them into a ready-made pack, because the texture pack structure of the ItemsAdder is different.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lessons-on-youtube"&gt;
  &lt;/a&gt;
  Lessons on YouTube
&lt;/h3&gt;

&lt;p&gt;I will teach lessons on this wonderful plugin on my YouTube channel, unfortunately they will be in Russian, for many it will be a minus:(&lt;br&gt;
But I also created a repository on github, where I will post ready-made templates of all types of items, I will attach the link later, as soon as everything is ready and I will be able to make sure that I put only allowed materials on display!&lt;/p&gt;

</description>
      <category>minecraft</category>
      <category>yml</category>
      <category>news</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Deep Dive into CodeCast's Studio</title>
      <author>CodeCast</author>
      <pubDate>Wed, 20 Oct 2021 18:22:54 +0000</pubDate>
      <link>https://dev.to/codecast/deep-dive-into-codecasts-studio-3f68</link>
      <guid>https://dev.to/codecast/deep-dive-into-codecasts-studio-3f68</guid>
      <description>&lt;p&gt;We previously wrote about our Player in an earlier blog post, speaking about how it is the heart and soul of CodeCast. Following that analogy, our Studio is every other system in the body that keeps the heart pumping and alive. &lt;/p&gt;

&lt;p&gt;Without the Studio, there would be no Casts to watch. The Studio, &lt;a href="https://info.codecast.io/download"&gt;available to download&lt;/a&gt; on Mac, Windows &amp;amp; Linux, is how the users create Casts. The goal of this blog post is to take a deep dive into the Studio to show you exactly how it works, and exactly why you should be using it to teach code.&lt;/p&gt;

&lt;p&gt;Firstly, it’s free. That may sound like a gimmick or a catch, but currently, our entire community and software are entirely free to use. The goal of CodeCast is to allow people to teach code in a way that is intuitive, simple, and using software that does all the work for them. So let’s see how that works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-an-account"&gt;
  &lt;/a&gt;
  Creating An Account
&lt;/h3&gt;

&lt;p&gt;Before you can get started with making your &lt;a href="https://info.codecast.io/blog/how-to-make-your-first-cast"&gt;first ever Cast&lt;/a&gt;, you need to create an account. You can either use your email to sign up or you can authorize an account using your preexisting GitHub account.&lt;/p&gt;

&lt;p&gt;You can do this either by signing up directly on the Studio or signing up on &lt;a href="http://codecast.io/signup"&gt;our website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M2lGU0Xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/029i0a598qojw90lvqxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M2lGU0Xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/029i0a598qojw90lvqxo.png" alt="Studio Sign Up View"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note, you will be required to log in to the Studio and the website separately, as logging into one doesn’t automatically log you into the other.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-studio-view"&gt;
  &lt;/a&gt;
  The Studio View
&lt;/h3&gt;

&lt;p&gt;Now that you’ve made an account (and logged in), we will begin to go over the Studio. This is the view you see now that you’re logged in:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iI-QTOFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zh5prdjohk47yahytt39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iI-QTOFS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zh5prdjohk47yahytt39.png" alt="Studio View"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-folder"&gt;
  &lt;/a&gt;
  Project Folder
&lt;/h3&gt;

&lt;p&gt;Clicking on Add another Project Folder allows you to add directories to your Cast. Anything inside the directory (with some limitations like node_modules) will be available to anyone watching your Cast. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--InbxQ9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98ek7nnaqh5t2jj4f2mb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--InbxQ9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/98ek7nnaqh5t2jj4f2mb.png" alt="Add Project Folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are able to add multiple directories and you can add directories once a Cast is live.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cRUPo3fL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vrinmteojx783r58sf1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cRUPo3fL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vrinmteojx783r58sf1.png" alt="Add folders while live"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While the Cast is live, any edits you make within that directory will reflect live on the Player. This means that you can write new lines of code in any existing files on your local machine (in the code editor of your choice), or you can create new files, folders, etc. all within the directory you uploaded, and it will be available to your audience.&lt;/p&gt;

&lt;p&gt;You’re also able to change the name of your directories within the studio by clicking on the pencil next to the uploaded directory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgGpRYj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yq8gwd77k00pck3qeqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZgGpRYj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yq8gwd77k00pck3qeqm.png" alt="Change folder name"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding in any directories is encouraged, but completely optional.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screen-sharing"&gt;
  &lt;/a&gt;
  Screen Sharing
&lt;/h3&gt;

&lt;p&gt;You’re able to add media to your videos via screen sharing, or with your webcam. You can also choose individual windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XiDoHcNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4gkv10r7hal5nn8onhd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XiDoHcNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i4gkv10r7hal5nn8onhd.png" alt="Screen sharing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just click Select a Screen Sharing to select which screen or window you want to share.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HhT39UO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcxne9bojx9f6aete33j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HhT39UO_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fcxne9bojx9f6aete33j.png" alt="Select A Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can deactivate a screen during a live Cast by hitting the green window button to the left of the screen name.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1WrgCYu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8l8jzdy02fek1tcjcw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WrgCYu2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8l8jzdy02fek1tcjcw5.png" alt="Deactivate a screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also select which audio input you wish to include alongside your screen share. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#casting-details"&gt;
  &lt;/a&gt;
  Casting Details
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TpTOpv-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ang45ou44nsq6sg3ou3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpTOpv-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ang45ou44nsq6sg3ou3d.png" alt="Casting Details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can enter casting details here before starting the Cast, or after the Cast is finished. Casting details, including the cover, can be edited at any point after the Cast has ended by going to the Cast on the website and hitting edit, or editing it on the Player directly after the Cast has ended.&lt;/p&gt;

&lt;p&gt;If you’re going to be sharing your Cast with people while it’s live, it’s highly recommended that you fill this out before casting. It can also be altered in the middle of a live Cast.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#permissions"&gt;
  &lt;/a&gt;
  Permissions
&lt;/h3&gt;

&lt;p&gt;Permissions by default will publish the Cast to your personal account with private access. Remember to change this to public if you’re doing a live Cast that you want others to view. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S7YA_nd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0mfxiqo3zl4hsoz4wnz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7YA_nd---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0mfxiqo3zl4hsoz4wnz.png" alt="Permissions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Permissions can be changed in the middle of a live Cast, or anytime after the Cast is published.&lt;/p&gt;

&lt;p&gt;If you belong to an organization, making the Cast private will still make it accessible to anyone else that is part of the organization, but not the general public. This is a great way for people to communicate with Casts across workplaces!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-view"&gt;
  &lt;/a&gt;
  Live View
&lt;/h3&gt;

&lt;p&gt;When you’re reading to start a Cast, hit the big green ‘Start Streaming” button and a countdown will appear like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8iy9ySOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adjwuyope4wel55d2vo3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8iy9ySOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adjwuyope4wel55d2vo3.gif" alt="Live view gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the countdown is finished, it will then look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Obc7bZTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxt7vr1zegbv1ykwbz3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Obc7bZTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxt7vr1zegbv1ykwbz3y.png" alt="Live Studio View"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It shows you that it’s live, gives you a live view count of people currently watching, as well as showcases the length that the Cast has been on for. &lt;/p&gt;

&lt;p&gt;Below that you can access the Cast URL by clicking the copy button directly to the right of the URL, or clicking on the new window button to open the Player. If you’re doing a live Cast, it is recommended that you keep the Player open to keep up with the chat!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VKeNMENO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpdcj1103x41wyniqv8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VKeNMENO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpdcj1103x41wyniqv8q.png" alt="Cast Url"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cast-ended"&gt;
  &lt;/a&gt;
  Cast Ended
&lt;/h3&gt;

&lt;p&gt;Once you’re done with the Cast, hit “End Streaming”. You’ll then see a summary of the Cast, including length. You’re also given the URL to access the recorded version of the Cast.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hC_ETeP4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omp2rk4z82q2rvbmgedx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hC_ETeP4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omp2rk4z82q2rvbmgedx.png" alt="Cast Ended Studio View"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s important to note that it does take some time for any media to upload, so you’ll see a “preparing media” banner on the Player when opening the Cast right away after ending it. This will go away once the media has finished being uploaded.&lt;/p&gt;

&lt;p&gt;All in all, the Studio is an incredibly useful tool that combines both live streaming media and code, making it a stand-out product in the development world.&lt;/p&gt;

&lt;p&gt;Prefer a video tutorial? Watch the video below for a follow-along tutorial!‍&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dzlKc6rr0LU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>startup</category>
    </item>
    <item>
      <title>React/Webpack: From MB to KB. How we solved our bundling problem</title>
      <author>Georgios Kampitakis</author>
      <pubDate>Wed, 20 Oct 2021 17:50:54 +0000</pubDate>
      <link>https://dev.to/gkampitakis/reactwebpack-from-mb-to-kb-how-we-solved-our-bundling-problem-156e</link>
      <guid>https://dev.to/gkampitakis/reactwebpack-from-mb-to-kb-how-we-solved-our-bundling-problem-156e</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article was first posted on &lt;a href="https://tech.sovrn.com/2021/02/22/react-webpack-bundling.html"&gt;Sovrn Tech Blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article I am going to describe the mistakes we made in bundling our UI application written in React.&lt;/p&gt;

&lt;p&gt;The reasons we reached serving a bundle &amp;gt; &lt;code&gt;11.0mb&lt;/code&gt; for a relative small application and the steps we took in order to minimize and split that bundle for better loading performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-context"&gt;
  &lt;/a&gt;
  Some Context
&lt;/h2&gt;

&lt;p&gt;Our UI is a React application where we use &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; for bundling our application, &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; as a design system for our components and an internal library which is a wrapper of &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; that we use across the company for creating a cohesive and consistent brand identity in the UI. Finally we have split our application to smaller independent npm modules which we pull into our main UI like “plugins”.&lt;/p&gt;

&lt;p&gt;Bundling never has been an issue or at least noticeable enough that we had to take action. But after a extensive updates in all of our dependencies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Webpack v4&lt;/code&gt; to &lt;code&gt;Webpack v5&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;React 16.8.x&lt;/code&gt; to &lt;code&gt;React 16.14.x&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Material-UI v3&lt;/code&gt; to &lt;code&gt;Material-UI v4&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;… and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;we started noticing our application was taking more time to load and was slower in a “cold start”.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With the term “cold start” I mean we haven’t used the application for a long time and when we visit our browser doesn’t have any resources cached.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;Our first action was to visit Chrome Devtools and inspect what was slowing us down&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9lG2Il5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c88np4fu6q2x51t1r45o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lG2Il5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c88np4fu6q2x51t1r45o.png" alt="Chrome Devtools Network Tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Time here is not representative as the screenshot is from local served instance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So we noticed the bundle was much bigger but we couldn’t understand what was different as our implementation remained the same so we should not be pulling more dependencies into our bundle.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solutions"&gt;
  &lt;/a&gt;
  The solution(s)
&lt;/h2&gt;

&lt;p&gt;We started by analyzing our bundle and understanding what exactly was delivered to the user. We found a webpack plugin that helped us to do this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/webpack-bundle-analyzer"&gt;Webpack Bundle Analyzer&lt;/a&gt; - “Visualize size of webpack output files with an interactive zoomable treemap.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gDkONQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7pcblcxnzprq6x1ezj4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gDkONQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7pcblcxnzprq6x1ezj4.png" alt="Webpack Bundle Analyzer TreeMap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;From this image we could right away understand that multiple things were wrong&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;As you can see we were having multiples instances of the same library being pulled from different dependencies. For example &lt;code&gt;underground-ui-whitespace-sovrn-content&lt;/code&gt;, &lt;code&gt;underground-ui-sync-skys-services-content&lt;/code&gt;, etc, all those modules are the “plugins” I mentioned above, and they all have a copy of the &lt;code&gt;Material-UI&lt;/code&gt; even if &lt;code&gt;Material-UI&lt;/code&gt; is present in the main application. The same thing happened with React as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another issue was some “heavy” libraries we were not really utilizing to excuse relying on them, e.g. &lt;a href="https://momentjs.com/"&gt;Moment.js&lt;/a&gt;, &lt;a href="http://bluebirdjs.com/docs/getting-started.html"&gt;Bluebird&lt;/a&gt;, &lt;a href="https://lodash.com/"&gt;Lodash&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Last mistake that was noticeable just from this view was that we were not tree shaking. It’s evident from &lt;code&gt;Material-UI&lt;/code&gt; icons section we were importing &lt;strong&gt;all&lt;/strong&gt; the icons. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we had a plan.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#peer-dependencies-and-versioning"&gt;
  &lt;/a&gt;
  Peer dependencies and versioning
&lt;/h3&gt;

&lt;p&gt;For the first issue we reviewed all of our internal UI “plugins” and we found that in our dependencies most of the duplicated libraries were locked in specific versions. By doing so, mistakenly were declaring that our “plugin” could only work with this specific version so we ended with different versions of the same library.&lt;/p&gt;

&lt;p&gt;The solution was using &lt;code&gt;peerDependencies&lt;/code&gt; and using ^ syntax in our versions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;^ in semantic versioning means we accept all minor releases ( e.g 1.x ) and not a specific one.&lt;/p&gt;

&lt;p&gt;Peer dependency means that your package needs a dependency that is the same exact dependency as the person installing your package.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So now the main application was responsible for providing the dependencies to the “plugins” for running.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heavy-libraries"&gt;
  &lt;/a&gt;
  "Heavy" libraries
&lt;/h3&gt;

&lt;p&gt;Second step was removing the “heavy” libraries, it was easy removing &lt;a href="https://momentjs.com/"&gt;Moment.js&lt;/a&gt;, &lt;a href="http://bluebirdjs.com/docs/getting-started.html"&gt;Bluebird&lt;/a&gt;. We replaced the first with &lt;a href="https://date-fns.org/"&gt;date-fns&lt;/a&gt; and &lt;a href="http://bluebirdjs.com/docs/getting-started.html"&gt;Bluebird&lt;/a&gt; with native promises. &lt;a href="https://lodash.com/"&gt;Lodash&lt;/a&gt; unfortunately because of time constraints we could not refactor into moving out from some “handy” utilities it provides but we are planning to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tree-shaking"&gt;
  &lt;/a&gt;
  Tree shaking
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Tree shaking is a term commonly used in the JavaScript context for dead-code elimination.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Third step was tree shaking and needed more investigation. So we started by reading for &lt;a href="https://mui.com/guides/minimizing-bundle-size/"&gt;Material-UI Minimizing Bundle Size&lt;/a&gt; and how to &lt;code&gt;import&lt;/code&gt; for shaking &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; components and icons but we could not find something wrong there. So our next option was &lt;a href="https://webpack.js.org/guides/tree-shaking/"&gt;Webpack Tree Shaking&lt;/a&gt;. Lot’s of interesting points there but the one we needed was this&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It relies on the static structure of ES2015 module syntax, i.e. import and export.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;but we were compiling our own modules and the main UI to &lt;code&gt;module: commonjs&lt;/code&gt; and &lt;code&gt;target: es5&lt;/code&gt; so Webpack was not able to understand what was “dead code” and should be tree shaken. So we changed to compile into &lt;code&gt;module: esnext&lt;/code&gt; and &lt;code&gt;target: es2017&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RYGBZKnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjtxt8c10pug7felw36f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYGBZKnf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjtxt8c10pug7felw36f.png" alt="TreeMap after changes"&gt;&lt;/a&gt;&lt;em&gt;The results were &lt;strong&gt;amazing&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We dropped from the &lt;code&gt;11.0mb&lt;/code&gt; to &lt;code&gt;4.67mb&lt;/code&gt; without losing any functionality but still something was not right. The module in the screenshot &lt;code&gt;@sovrn/platform-ui-core&lt;/code&gt; is the wrapper we use around &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; and we could see some components that we were clearly not using. We went back did some reading and found the &lt;code&gt;sideEffects&lt;/code&gt; property in &lt;code&gt;package.json&lt;/code&gt; that &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; has adopted for - &lt;em&gt;denoting which files in a project are “pure” and therefore safe to prune if unused&lt;/em&gt;. &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; uses it but we didn’t so we were not able to tree shake our internal &lt;a href="https://mui.com/"&gt;Material-UI&lt;/a&gt; wrapper.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For more information about &lt;code&gt;sideEffects&lt;/code&gt; &lt;a href="https://webpack.js.org/guides/tree-shaking/#clarifying-tree-shaking-and-sideeffects"&gt;Clarifying tree shaking and sideEffects&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sKPdJhnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxxua8vhuezxyyu5n171.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sKPdJhnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxxua8vhuezxyyu5n171.png" alt="Final TreeMap"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;So the bundle after this change was &lt;code&gt;3.34mb&lt;/code&gt; and &lt;code&gt;269kb&lt;/code&gt; Gzipped&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#bonuses"&gt;
  &lt;/a&gt;
  Bonuses
&lt;/h2&gt;

&lt;p&gt;Of course after so much investigation we identified other places were we could improve our application.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#code-splitting"&gt;
  &lt;/a&gt;
  Code Splitting
&lt;/h3&gt;

&lt;p&gt;Our application is structured in a way that can be code split ( “plugin” components ). So we leveraged &lt;a href="https://webpack.js.org/guides/code-splitting/"&gt;Webpack Code Splitting&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/code-splitting.html"&gt;React Code Splitting&lt;/a&gt; with &lt;code&gt;lazy loading&lt;/code&gt; so we load the bundles for the plugins only when we need them.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JcFPT1rQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqiks0ki8pxrpzbc1dnf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JcFPT1rQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqiks0ki8pxrpzbc1dnf.png" alt="TreeMap with codesplitting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;the final bundle looks like this&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So now on our initial load we only pull dependencies and bundles used for the initial scene meaning we are pulling a bundle of &lt;code&gt;~1.9mb&lt;/code&gt; or &lt;code&gt;~173kb&lt;/code&gt; Gzipped.&lt;/p&gt;

&lt;p&gt;All the colorful modules are our “plugins” that can be dynamically loaded on request.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-keep-track"&gt;
  &lt;/a&gt;
  How to keep track
&lt;/h3&gt;

&lt;p&gt;Last but not least, we wanted to make sure we could keep track of our bundle and make sure that every time we introduce a new change we can see how it affects our bundle.&lt;/p&gt;

&lt;p&gt;There are many tools you can use and integrate to your CI/CD pipeline. We use &lt;a href="https://www.npmjs.com/package/bundlesize"&gt;Bundlesize&lt;/a&gt;, which you can configure it and set limits for your bundlesize and if the build isn’t below those limits it will fail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;...
 PASS  dist/static/js/140.39a3af3a.js: 171.73KB &amp;lt; maxSize 244KB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

 PASS  dist/static/js/201.e6df94bb.chunk.js: 3.33KB &amp;lt; maxSize 244KB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

 PASS  dist/static/js/218.9e0f9972.chunk.js: 2.47KB &amp;lt; maxSize 244KB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

 PASS  dist/static/js/246.1c66cc41.chunk.js: 3.49KB &amp;lt; maxSize 244KB &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in conjunction with &lt;a href="https://www.npmjs.com/package/webpack-bundle-analyzer"&gt;Webpack Bundle Analyzer&lt;/a&gt; we can know what’s wrong in our bundle or not.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;




&lt;p&gt;If you liked or found the post useful leave a ❤️&lt;/p&gt;

</description>
      <category>react</category>
      <category>webpack</category>
      <category>javascript</category>
      <category>c</category>
    </item>
    <item>
      <title>Introduction to Database Schemas</title>
      <author>Dubymar Tollinchi</author>
      <pubDate>Wed, 20 Oct 2021 17:18:55 +0000</pubDate>
      <link>https://dev.to/dubymarjtr/introduction-to-database-schemas-9dk</link>
      <guid>https://dev.to/dubymarjtr/introduction-to-database-schemas-9dk</guid>
      <description>&lt;p&gt;About I year ago I took &lt;em&gt;Introduction to Databases&lt;/em&gt; at my college, where I first learned &lt;strong&gt;SQL&lt;/strong&gt;. I consider it to be quite a simple language to understand and write, considering my basic experience in that class. I knew database is an important concept for web developers to understand, so I made sure I understood the foundations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-database-schemas-and-how-to-implement-one"&gt;
  &lt;/a&gt;
  What are database schemas and how to implement one?
&lt;/h2&gt;

&lt;p&gt;When learning about &lt;strong&gt;databases schemas&lt;/strong&gt;, the best way to describe them would be as a "blueprint". This blueprint will contain the shape and format of the data, as well as the necessary patterns to retrieve the information when requested. This is called &lt;em&gt;logical schema&lt;/em&gt; and it is the first step to developing a database. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#designing-schemas-for-relational-databases"&gt;
  &lt;/a&gt;
  Designing schemas for relational databases
&lt;/h3&gt;

&lt;p&gt;As I learned with relational (or static) databases, we do this applying Entity-Relationship (ER) models, which are diagrams that &lt;em&gt;describe entities, their attributes, and how they relate to one another&lt;/em&gt;. Using ER models in the early stage of designing the database is very convenient since it gives you a clear idea of how your data will be stored, connected, and retrieved.  &lt;/p&gt;

&lt;p&gt;In class, the first thing I used to do was determine the &lt;strong&gt;entities&lt;/strong&gt; that I had, and by an entity I mean a real-life "object" or "thing" that exists, something that we can identify. These entities have &lt;strong&gt;attributes&lt;/strong&gt;, which describe the characteristics of these objects. One (or a combination) of these attributes should be unique, which would be used as the identifier. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kGGweGTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bo26zuwqnggy7mkjpej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kGGweGTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bo26zuwqnggy7mkjpej.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, the &lt;em&gt;fun&lt;/em&gt; part: figuring out how the entities are going to relate to one another. This is done using minimum and maximum cardinality, which will determine one-to-one, one-to-many, or many-to-many relationships. For example, &lt;strong&gt;students and classes&lt;/strong&gt;: students can take many classes, and classes can be taken by many students. This easy example represents a many-to-many relationship, but in real life, even if you know how your data will be, figuring this out can be a headache.&lt;/p&gt;

&lt;p&gt;Once everything is looking good we start developing the &lt;strong&gt;physical schema&lt;/strong&gt;. The first step is to declare the tables, one per entity, and declare its attributes as columns. A very important step is to identify the primary key, which sometimes can be unique or composite. These keys will be used as foreign keys in other tables to relate to one another.&lt;/p&gt;

&lt;p&gt;In my basic experience, relating tables can get complicated. Basic relationships between tables might just include a primary key of one table as the foreign key in another table, but also might include several tables with primary keys from different tables as foreign keys in one or more tables. So, it can get pretty messy.&lt;/p&gt;

&lt;p&gt;During this stage, we use &lt;strong&gt;normalization&lt;/strong&gt; to minimize data redundancy and inconsistencies. Normalization is a process where we split tables depending if we encounter certain elements that can be treated in their separate table. Another thing to have in mind is predicted query patterns and what tables will be accessed more than others. By doing this we can identify database indexes, so we can &lt;em&gt;speed up the retrieval process&lt;/em&gt;. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#designing-schemas-for-nonrelational-and-nosql-databases"&gt;
  &lt;/a&gt;
  Designing schemas for non-relational and NoSQL databases
&lt;/h3&gt;

&lt;p&gt;This process is often quite different. Non-relational databases are used for &lt;em&gt;high performance using a limited number of predefined queries&lt;/em&gt;. These database schemas are designed depending on the application that will use them. &lt;/p&gt;

&lt;p&gt;The first step is to determine the primary queries (pseudo queries, since the database, does not exist yet) the database needs to run. Knowing this will help us understand how we can structure our data in a way that is optimized to retrieve.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;customer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1294730&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;john.doe@email.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;123 Main St&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;orders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;orderID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Laptop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;599.99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;orderID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;product&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bed sheets&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;35.99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 
            &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Working with JavaScript, we can use an object as an example. This object will track information for a &lt;strong&gt;customer&lt;/strong&gt; and its &lt;strong&gt;orders&lt;/strong&gt;, so here we can have an idea of how the information can be accessed. First access the customer object, which in this case is one simple object, but realistically it will be an array of objects. Once there, we use the customer id to locate the record that we want. Then we can access its properties, such as email or address. We can also access a nested array of objects (or records in this case) such as &lt;strong&gt;orders&lt;/strong&gt;. Doing this we can know all the orders placed by costumers.&lt;/p&gt;

&lt;p&gt;This is very convenient and easier to work with by the fact that all the information related to an entity can be stored in one single record, unlike relational databases. But non-relational databases are not great at combining data from multiple entities in a single query, so we have to decide the best way to represent our data. Avoiding duplicated data will reduce the number of items to maintain. &lt;/p&gt;

&lt;p&gt;In my JavaScript project for this semester, I am planning to create an e-Commerce, where I can implement a non-relational database using MongoDB to get started with back-end development. &lt;/p&gt;

</description>
      <category>database</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Welcome Thread - v147</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 20 Oct 2021 17:14:55 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v147-4mkj</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v147-4mkj</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/10LKovKon8DENq/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/10LKovKon8DENq/giphy.gif" alt="Pokémon friends"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Which Domain is Best: BlogSpot Domain Vs Custom Domain</title>
      <author>Bhavyashah</author>
      <pubDate>Wed, 20 Oct 2021 16:18:05 +0000</pubDate>
      <link>https://dev.to/bhavyashah/which-domain-is-best-blogspot-domain-vs-custom-domain-19l0</link>
      <guid>https://dev.to/bhavyashah/which-domain-is-best-blogspot-domain-vs-custom-domain-19l0</guid>
      <description>&lt;p&gt;Have you ever thought of buying a domain name for your blog? Many bloggers are stuck between purchasing a free blogspot domain vs purchasing a custom domain. Though there are many different things to consider, at the end of the day, choosing an appropriate domain will help your blog convert better. So should you buy a domain or stick to BlogSpot?&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See My Answer is if your content is unique and different from other people then you have to purchase a Custom Domain Because If you are starting a blog then you have to invest something then you can concentrate on that particular blogging because you are thinking about how we manage domain money from blogging.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;See I also Started my blog named as a custom domain blogtriggers.com I think If you are doing blogging then you have to use custom domain name for branding your blogging about particular niche.  &lt;/p&gt;

&lt;p&gt;For More Details about &lt;a href="https://www.blogtriggers.com/2021/08/blogspot-vs-custom-domain.html"&gt;blogspot domain vs custom domain&lt;/a&gt; then read this posts for details information&lt;/p&gt;

</description>
      <category>blogger</category>
      <category>difference</category>
      <category>domain</category>
    </item>
    <item>
      <title>Go .. C of 21st century</title>
      <author>Bek Brace</author>
      <pubDate>Wed, 20 Oct 2021 16:16:00 +0000</pubDate>
      <link>https://dev.to/bekbrace/go-c-of-21st-century-4ibd</link>
      <guid>https://dev.to/bekbrace/go-c-of-21st-century-4ibd</guid>
      <description>&lt;p&gt;Go language, it is a statically typed compiled language and it is often described as c for the 21st century!&lt;/p&gt;

&lt;p&gt;It was created at google in 2007 by legends who really know their stuff like Ken Thompson the inventor of the (b) and (c) programming languages; and then version 1.0 was released as open source software in 2012; and the was design was meant to be simple and efficient and that's why we call it go.&lt;/p&gt;

&lt;p&gt;The source code is compiled down to machine code which means it generally outperforms interpreted languages but it's famous for its extremely fast compile times made possible by innovations to dependency analysis and even though it's a statically typed language it performs type inference to deliver a syntax that is very concise and practical.&lt;/p&gt;

&lt;p&gt;It also has a package and module system making it easy to import and export code between projects to get started install go and then open an empty directory on your system.&lt;/p&gt;

&lt;p&gt;Create a file ending in go then add package main at the top to create a standalone executable then&lt;br&gt;
declare a main function which is where your program will start executing &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jGeFUsmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jel4d44r081ryqa97pci.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jGeFUsmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jel4d44r081ryqa97pci.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go has a standard library of core packages to handle common requirements like math networking or formatted io by importing "fmt" we can print a line to the standard output then run the go build command and it quickly compiles the source code and dependencies into an executable binary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4vYIrz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw8sfahwq7bkg0p6tuu2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4vYIrz4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qw8sfahwq7bkg0p6tuu2.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJWXfHK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fa41fm8v5prm3wxdjud.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJWXfHK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fa41fm8v5prm3wxdjud.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it comes to dependencies we can also link to remote packages on github.&lt;/p&gt;

&lt;p&gt;Run go mod init from the command line and that creates a go module file that enables dependency tracking.&lt;/p&gt;

&lt;p&gt;Go is like a concise version of c or c plus plus if you know any of those languages, you declare a&lt;br&gt;
variable with the var keyword followed by its name and type and initialize it with a value or you might use the short assignment syntax to replace var and let go automatically infer the type and you can define multiple variables from a single line go has all the other features you would expect in a programming language like arrays maps loops and control flow but also allows you to store the memory address of a value using pointers while disallowing pointer arithmetic which often leads to dangerous and unpredictable behavior in&lt;br&gt;
addition it supports concurrency with go routines which are functions that can run at the same time as other functions by utilizing multiple threads on a cpu.&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title>Sam Lessin: co-Founder and co-CEO of Fin</title>
      <author>Taylor Veino</author>
      <pubDate>Wed, 20 Oct 2021 16:12:16 +0000</pubDate>
      <link>https://dev.to/gunio/sam-lessin-co-founder-and-co-ceo-of-fin-23o4</link>
      <guid>https://dev.to/gunio/sam-lessin-co-founder-and-co-ceo-of-fin-23o4</guid>
      <description>&lt;p&gt;Sam Lessin is the co-founder and co-CEO of Fin. He also invests in tech startups through Slow Ventures, where he is a partner and early investor in companies like Venmo and Masterclass. Previously, he was a Vice President of Product Management at Facebook until 2014, where he managed several product groups.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://bit.ly/3DW9ILf"&gt;this episode&lt;/a&gt;, Teja Yenamandra, CEO of Gun.io talks to Sam about his journey from the VP of Product Management at Facebook to coding boot camp, his "human in the loop" approach at Fin, and the dirty secret about all CEOs.&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/thefrontierpod/sam-lessin"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;Sam Lessin&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/thefrontierpod"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        The Frontier Podcast
      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-sam-lessin" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-sam-lessin" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-sam-lessin" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-sam-lessin" alt="The Frontier Podcast" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MEkq_lJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4bxuWncX--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/588/3bc4eaf4-f28f-426d-aeb2-3776ef9ab535.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-sam-lessin"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/thefrontierpod/sam-lessin"&gt;
      &lt;img id="episode-profile-image" alt="Sam Lessin" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnF4DTeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xDjgyg6L--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/588/3bc4eaf4-f28f-426d-aeb2-3776ef9ab535.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


</description>
      <category>career</category>
      <category>podcast</category>
      <category>ai</category>
    </item>
    <item>
      <title>Create Mad Libs game in Python</title>
      <author>pythonscholar</author>
      <pubDate>Wed, 20 Oct 2021 16:03:02 +0000</pubDate>
      <link>https://dev.to/pythonscholar/create-mad-libs-game-in-python-hc8</link>
      <guid>https://dev.to/pythonscholar/create-mad-libs-game-in-python-hc8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-mad-libs-game"&gt;
  &lt;/a&gt;
  What is Mad Libs Game?
&lt;/h2&gt;

&lt;p&gt;Mad Libs is the quintessential game of make-believe. You provide a list of words, and everyone else adds in their own silly, outrageous, or even absurd ideas for what they might be. Everyone laughs uproariously while using the best words, puns, and turns of phrase they can think up. There are tons of variations that you can take your Mad Libs adventures with at any time to suit your mood or theme.&lt;/p&gt;

&lt;p&gt;Mad Libs Generator will give you a variety of prompts that you can use to start your story, or you can use them as the basis for your own stories. You then get to add in your funny word-puns, slogans, quotes, poetry beats, and even sound effects.&lt;/p&gt;

&lt;p&gt;You can check our &lt;a href="https://pythonscholar.com/python-projects/mad-libs-game-in-python/"&gt;How to Create Mad Libs game in Python&lt;/a&gt; guide to learn more about mad libs games using Python.&lt;/p&gt;

&lt;p&gt;Now let's see a simple tutorial on how to create a mad libs game using only basic python skills; mostly, we will use python string and python &lt;a href="https://pythonscholar.com/python-programming/python-input-and-output/"&gt;input-output function&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; In the first step, we will take the required input from the user and store it in the python variable to use in the future in our mad lib story. Copy the below code in your python compiler or Python IDE.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;verb_1 = input("Enter a verb of choice, and press enter:")
adj_1 = input("Enter a adjective of choice, and press enter:")
verb_2 = input("Enter second verb of choice, and press enter:")
body_part = input("Enter a body part name of choice, and press enter:")
adverb = input("Enter an adverb of choice, and press enter:")
body_part_2 = input("Enter any body name of your choice,and press enter:")
noun = input("Enter a noun of choice, and press enter:")
verb_3 = input("Enter the third verb of choice, and press enter:")
animal = input("Enter name of any animal of choice, and press enter:")
noub_2 = input("Enter an noun of choice , and press enter:")
verb_4 = input("Enter the fourth verb of choice, and press enter:")
adj_2 = input("Enter an adjective of choice, and press enter:")
color = input("Enter any color name, and press enter:")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Now, let’s add the user inputs into a story and make it a fun game, here; we will use python string to print our story.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;story = "Most doctors agree that bicycle of" + verb_1 + " is a/an " + adj_1 + " form of exercise." + verb_2 +" a bicycle enables you to develop your " + body_part + " muscles as well as " + adverb + " increase the rate of a " + body_part_2 + " beat. More " + noun + " around the world "+ verb_3 +" bicycles than drive "+ animal +". No matter what kind of "+ noun_2 +"you "+ verb_4 + ", always be sure to wear a/an " +adj_2+ " helmet.Make sure to have " + color + " reflectors too! "
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; In the last step, we will print the story to get the final output of our name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(story)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, just using basic python skills, we have created a small game. &lt;/p&gt;

&lt;p&gt;We hope you have enjoyed this tutorial and learned something new.&lt;/p&gt;

&lt;p&gt;Happy learning.&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>programming</category>
      <category>github</category>
    </item>
    <item>
      <title>Web API in NET 6 + Docker</title>
      <author>Bervianto Leo Pratama</author>
      <pubDate>Wed, 20 Oct 2021 15:57:44 +0000</pubDate>
      <link>https://dev.to/berviantoleo/web-api-in-net-6-docker-41d5</link>
      <guid>https://dev.to/berviantoleo/web-api-in-net-6-docker-41d5</guid>
      <description>&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;How are you? I hope all of you are stay safe and having a great day!&lt;/p&gt;

&lt;p&gt;If you want to follow this step-by-step. Please install some tools that will be required here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;.NET 6: &lt;a href="https://dotnet.microsoft.com/download/dotnet/6.0"&gt;https://dotnet.microsoft.com/download/dotnet/6.0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Docker: &lt;a href="https://docs.docker.com/get-docker/"&gt;https://docs.docker.com/get-docker/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#project-preparation"&gt;
  &lt;/a&gt;
  Project Preparation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create the Web API from template.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new webapi &lt;span class="nt"&gt;-o&lt;/span&gt; DockerNetExample
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Create the solution to link the project and link the project.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet new sln
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet sln add DocketNetExample
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Your project is ready now. :)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#prepare-for-dockerfile"&gt;
  &lt;/a&gt;
  Prepare for Dockerfile
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create your &lt;code&gt;Dockerfile&lt;/code&gt; at the root, similar place with the &lt;code&gt;.sln&lt;/code&gt; file.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; mcr.microsoft.com/dotnet/sdk:6.0-alpine as build&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet restore
&lt;span class="k"&gt;RUN &lt;/span&gt;dotnet publish &lt;span class="nt"&gt;-o&lt;/span&gt; /app/published-app

&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; mcr.microsoft.com/dotnet/aspnet:6.0-alpine as runtime&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; --from=build /app/published-app /app&lt;/span&gt;
&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; [ "dotnet", "/app/DockerNetExample.dll" ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#build-the-image-and-run-the-container"&gt;
  &lt;/a&gt;
  Build the Image and Run the Container
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Build your image use &lt;code&gt;docker build . -t dotnetexample&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run a container with previous image. &lt;code&gt;docker run --name dotnetexample -p 8081:80 -d dotnetexample&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check your container. &lt;code&gt;docker ps&lt;/code&gt;. You would see like this.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eOv2unya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33ddsbs0ncgcfj0tvmf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eOv2unya--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/33ddsbs0ncgcfj0tvmf6.png" alt="Docker PS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check your API use browser or another things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: If you use Firefox, the return will be like this, the value maybe will be different, since it returns randomly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7VVXkFfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7puo2cy9fizwsefvaazo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VVXkFfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7puo2cy9fizwsefvaazo.png" alt="Browser Firefox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Congrats. You are done. :)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#repository"&gt;
  &lt;/a&gt;
  Repository
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bervProject"&gt;
        bervProject
      &lt;/a&gt; / &lt;a href="https://github.com/bervProject/docker-net-example"&gt;
        docker-net-example
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank you
&lt;/h2&gt;

&lt;p&gt;Thank you for visiting this tutorial. If you have any questions or suggestions, please comment in here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/BYoRqTmcgzHcL9TCy1/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/BYoRqTmcgzHcL9TCy1/giphy.gif" alt="Thank you"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>docker</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why 404 error ?</title>
      <author>Clément Gaudinière</author>
      <pubDate>Wed, 20 Oct 2021 15:56:39 +0000</pubDate>
      <link>https://dev.to/clementgaudiniere/why-404-error--1n89</link>
      <guid>https://dev.to/clementgaudiniere/why-404-error--1n89</guid>
      <description>&lt;p&gt;Hello everyone, today we're going to look at HTTP errors, you know like when you get a page not found with the 404 error. In reality there are almost a hundred different error codes. Don't worry, it's difficult to know them all by heart, but there are techniques to find out roughly where the error comes from. You are ready, so let's go !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-did-you-invent-these-numbers-"&gt;
  &lt;/a&gt;
  Why did you invent these numbers ?
&lt;/h3&gt;

&lt;p&gt;But then why did we invent these error numbers? The answer is actually quite simple, when a user requests a web page through his browser, the browser will send a request to the server under the world famous HTTP protocol. The server will also respond in HTTP format, and if all goes well will send the requested resource (in our case the web page). But everything gets complicated when there is an error. Knowing that there is an error is good, but knowing where is even better. This is why error numbers were quickly assigned to each different type of error. This is much more practical and saves time for many developers. For example, errors starting with 5 are problems at the server level. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-five-categories-of-error"&gt;
  &lt;/a&gt;
  The five categories of error
&lt;/h3&gt;

&lt;p&gt;To simplify the whole thing, and to put some order in all these errors, categories have been created. There are three different categories: &lt;br&gt;
1 - Informations&lt;br&gt;
2 - Success&lt;br&gt;
3 - Redirects&lt;br&gt;
4 - Web client errors&lt;br&gt;
5 - Server errors&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agP1A-7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/641cck3qcpk7m2oc4krl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agP1A-7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/641cck3qcpk7m2oc4krl.jpg" alt="The five categories of error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So if an error number starts with 4, we know directly that the problem comes from the web client.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-404-error-"&gt;
  &lt;/a&gt;
  Why 404 error ?
&lt;/h3&gt;

&lt;p&gt;But why 404 errors? If you have been following this, you will notice that the first number is a 4 and that the error comes directly from the web client and not from the server. Indeed, the 404 error means that the resource is not found, the server has searched for it on its side but has not found it, so the error comes from the web client which has not provided the right url.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x5IiZIZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp6qdfennctlljpd4q37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5IiZIZx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp6qdfennctlljpd4q37.png" alt="404 error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#going-further-with-error-418"&gt;
  &lt;/a&gt;
  Going further with error 418
&lt;/h3&gt;

&lt;p&gt;The HTTP error 418 has nothing to do with the other errors. Indeed its meaning is "I'm a teapot". It is actually a joke since it first appeared in the famous RFC 2324 on April 1, 1998. The explanations given by the developers are: " There is coffee all over the world. Increasingly, in a world in which computing is ubiquitous, the computists want to make coffee. Coffee brewing is an art, but the distributed intelligence of the web- connected world transcends art. Thus, there is a strong, dark, rich requirement for a protocol designed expressly for the brewing of coffee. Coffee is brewed using coffee pots. Networked coffee pots require a control protocol if they are to be controlled".&lt;br&gt;
In other words, the famous Hyper Text Coffee Pot Control Protocol, or HTCPCP, is intended to send an error back to all those who would like to control a coffee pot remotely, telling them that they have mistakenly addressed themselves to ... a teapot 😂.&lt;br&gt;
This April 1st "joke" had its heyday at the time and is still featured on a number of official links in which its error code has been preserved.&lt;br&gt;
There are still people asking questions about this 418 error, even today!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybILfSlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urbg4ysdsbn36dg5kzxs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybILfSlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urbg4ysdsbn36dg5kzxs.jpg" alt="Google teapot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#specific-errors"&gt;
  &lt;/a&gt;
  Specific errors
&lt;/h3&gt;

&lt;p&gt;For those who wish to find a specific error, you can refer to these different tables classified by categories.&lt;br&gt;
Some codes are not yet in use, but are intended for future use. Other codes do not result in any specific display to the user, but are implied (e.g. codes 200 or 304, which are never seen by the client as they concern the majority of successful requests).&lt;/p&gt;

&lt;p&gt;All major HTTP errors are represented in these different tables, of the different error types:&lt;/p&gt;

&lt;p&gt;Codes beginning with 1 (Informations):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;Continue&lt;/td&gt;
&lt;td&gt;Waiting for the application to be processed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;Switching Protocols&lt;/td&gt;
&lt;td&gt;Acceptance of the change of protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;Processing&lt;/td&gt;
&lt;td&gt;Processing in progress (prevents the customer from exceeding the waiting time limit).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;Early Hints&lt;/td&gt;
&lt;td&gt;While waiting for the final response, the server returns links that the client can start downloading.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 2 (Success):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;OK&lt;/td&gt;
&lt;td&gt;Request successfully processed. The response will depend on the query method used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;Created&lt;/td&gt;
&lt;td&gt;Request successfully processed and document created.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;202&lt;/td&gt;
&lt;td&gt;Accepted&lt;/td&gt;
&lt;td&gt;Request processed, but no guarantee of result.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;203&lt;/td&gt;
&lt;td&gt;Non-Authoritative Information&lt;/td&gt;
&lt;td&gt;Information returned, but generated by an uncertified source.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;No Content&lt;/td&gt;
&lt;td&gt;Request successfully processed but no information to return.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;205&lt;/td&gt;
&lt;td&gt;Reset Content&lt;/td&gt;
&lt;td&gt;Request successfully processed, current page can be deleted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;206&lt;/td&gt;
&lt;td&gt;Partial Content&lt;/td&gt;
&lt;td&gt;Only part of the resource has been transmitted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;207&lt;/td&gt;
&lt;td&gt;Multi-Status&lt;/td&gt;
&lt;td&gt;Multiple answers.(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;208&lt;/td&gt;
&lt;td&gt;Already Reported&lt;/td&gt;
&lt;td&gt;The document was previously sent in this collection.(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;Content Different&lt;/td&gt;
&lt;td&gt;The copy of the resource on the client side differs from that on the server (content or properties).(WebDav)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;226&lt;/td&gt;
&lt;td&gt;IM Used&lt;/td&gt;
&lt;td&gt;The server has completed the request for the resource, and the response is a representation of the result of one or more instance manipulations applied to the current instance.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 3 (Redirects):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Multiple Choices&lt;/td&gt;
&lt;td&gt;The requested URI refers to several resources.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;301&lt;/td&gt;
&lt;td&gt;Moved Permanently&lt;/td&gt;
&lt;td&gt;Permanently moved document.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;302&lt;/td&gt;
&lt;td&gt;Found&lt;/td&gt;
&lt;td&gt;Document moved temporarily.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;303&lt;/td&gt;
&lt;td&gt;See Other&lt;/td&gt;
&lt;td&gt;The answer to this request lies elsewhere.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;304&lt;/td&gt;
&lt;td&gt;Not Modified&lt;/td&gt;
&lt;td&gt;Document not modified since the last request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;305&lt;/td&gt;
&lt;td&gt;Use Proxy (since HTTP/1.1)&lt;/td&gt;
&lt;td&gt;The request must be re-addressed to the proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;306&lt;/td&gt;
&lt;td&gt;Switch Proxy&lt;/td&gt;
&lt;td&gt;Code used by an older version of RFC 26167, now reserved. It meant "The following requests must use the specified proxy ".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;307&lt;/td&gt;
&lt;td&gt;Temporary Redirect&lt;/td&gt;
&lt;td&gt;The request must be temporarily redirected to the specified URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;308&lt;/td&gt;
&lt;td&gt;Permanent Redirect&lt;/td&gt;
&lt;td&gt;The request must be permanently redirected to the specified URI.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;310&lt;/td&gt;
&lt;td&gt;Too many Redirects&lt;/td&gt;
&lt;td&gt;The request has to be redirected too many times, or falls victim to a redirection loop.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 4 (Web client errors):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;400&lt;/td&gt;
&lt;td&gt;Bad Request&lt;/td&gt;
&lt;td&gt;The syntax of the query is wrong.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;Unauthorized&lt;/td&gt;
&lt;td&gt;Authentication is required to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;402&lt;/td&gt;
&lt;td&gt;Payment Required&lt;/td&gt;
&lt;td&gt;Payment required to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;403&lt;/td&gt;
&lt;td&gt;Forbidden&lt;/td&gt;
&lt;td&gt;The server has understood the request, but refuses to execute it. Unlike the 401 error, authenticating will not make any difference. On servers where authentication is required, this usually means that authentication has been accepted but the access rights do not allow the client to access the resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;Not Found&lt;/td&gt;
&lt;td&gt;Resource not found.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;405&lt;/td&gt;
&lt;td&gt;Method Not Allowed&lt;/td&gt;
&lt;td&gt;Unauthorised query method.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;406&lt;/td&gt;
&lt;td&gt;Not Acceptable&lt;/td&gt;
&lt;td&gt;The requested resource is not available in a format that would respect the "Accept" headers of the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;407&lt;/td&gt;
&lt;td&gt;Proxy Authentication Required&lt;/td&gt;
&lt;td&gt;Access to the resource allowed by identification with the proxy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;408&lt;/td&gt;
&lt;td&gt;Request Time-out&lt;/td&gt;
&lt;td&gt;The amount of time a request from the client has been waiting on the server side. According to the HTTP specification: "The client did not produce a request within the time the server was willing to wait. The client MAY repeat the request without modification at any later time ".&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;409&lt;/td&gt;
&lt;td&gt;Conflict&lt;/td&gt;
&lt;td&gt;The request cannot be processed at this time.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;410&lt;/td&gt;
&lt;td&gt;Gone&lt;/td&gt;
&lt;td&gt;The resource is no longer available and no redirection address is known.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;411&lt;/td&gt;
&lt;td&gt;Length Required&lt;/td&gt;
&lt;td&gt;The length of the request was not specified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;412&lt;/td&gt;
&lt;td&gt;Precondition Failed&lt;/td&gt;
&lt;td&gt;Preconditions sent by the request not checked.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;413&lt;/td&gt;
&lt;td&gt;Request Entity Too Large&lt;/td&gt;
&lt;td&gt;Treatment abandoned due to too high a demand.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;414&lt;/td&gt;
&lt;td&gt;Request-URI Too Long&lt;/td&gt;
&lt;td&gt;URI too long.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;415&lt;/td&gt;
&lt;td&gt;Unsupported Media Type&lt;/td&gt;
&lt;td&gt;Unsupported query format for a given method and resource.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;416&lt;/td&gt;
&lt;td&gt;Requested range unsatisfiable&lt;/td&gt;
&lt;td&gt;Incorrect "range" query header fields.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;417&lt;/td&gt;
&lt;td&gt;Expectation failed&lt;/td&gt;
&lt;td&gt;Expected and defined behaviour in the header of the unsatisfactory request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;418&lt;/td&gt;
&lt;td&gt;I’m a teapot&lt;/td&gt;
&lt;td&gt;"I am a teapot": This code is defined in RFC 232410 dated 1 April 1998, Hyper Text Coffee Pot Control Protocol. It is a webmaster's joke, intended to send an error back to anyone who wants to remotely control a coffee pot, telling them that they have mistakenly addressed a teapot :)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;421&lt;/td&gt;
&lt;td&gt;Bad mapping / Misdirected Request&lt;/td&gt;
&lt;td&gt;The request has been sent to a server that is not capable of producing a response (for example, because a connection has been reused).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;422&lt;/td&gt;
&lt;td&gt;Unprocessable entity&lt;/td&gt;
&lt;td&gt;The entity provided with the request is incomprehensible or incomplete.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;423&lt;/td&gt;
&lt;td&gt;Locked&lt;/td&gt;
&lt;td&gt;The operation cannot take place because the resource is locked.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;424&lt;/td&gt;
&lt;td&gt;Method failure&lt;/td&gt;
&lt;td&gt;A method in the transaction has failed.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;425&lt;/td&gt;
&lt;td&gt;Too Early&lt;/td&gt;
&lt;td&gt;The server cannot process the request as it may be replayed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;426&lt;/td&gt;
&lt;td&gt;Upgrade Required&lt;/td&gt;
&lt;td&gt;The client should change the protocol, for example to TLS/1.0.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;428&lt;/td&gt;
&lt;td&gt;Precondition Required&lt;/td&gt;
&lt;td&gt;The request must be conditional.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;429&lt;/td&gt;
&lt;td&gt;Too Many Requests&lt;/td&gt;
&lt;td&gt;The customer has made too many requests within a given time frame.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;431&lt;/td&gt;
&lt;td&gt;Request Header Fields Too Large&lt;/td&gt;
&lt;td&gt;The HTTP headers sent exceed the maximum size allowed by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;449&lt;/td&gt;
&lt;td&gt;Retry With&lt;/td&gt;
&lt;td&gt;Code defined by Microsoft. The request should be returned after performing an action.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;450&lt;/td&gt;
&lt;td&gt;Blocked by Windows Parental Controls&lt;/td&gt;
&lt;td&gt;Code set by Microsoft. This error occurs when Windows Parental Controls are enabled and block access to the page.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;451&lt;/td&gt;
&lt;td&gt;Unavailable For Legal Reasons&lt;/td&gt;
&lt;td&gt;This error code indicates that the requested resource is inaccessible for legal reasons.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;456&lt;/td&gt;
&lt;td&gt;Unrecoverable Error&lt;/td&gt;
&lt;td&gt;Unrecoverable error.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Codes beginning with 5 (Server errors):&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;th&gt;Message&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;Internal Server Error&lt;/td&gt;
&lt;td&gt;Internal server error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;501&lt;/td&gt;
&lt;td&gt;Not Implemented&lt;/td&gt;
&lt;td&gt;Claimed functionality not supported by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;502&lt;/td&gt;
&lt;td&gt;Bad Gateway ou Proxy Error&lt;/td&gt;
&lt;td&gt;By acting as a proxy or gateway server, the server received an invalid response from the remote server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;503&lt;/td&gt;
&lt;td&gt;Service Unavailable&lt;/td&gt;
&lt;td&gt;Service temporarily unavailable or under maintenance.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;504&lt;/td&gt;
&lt;td&gt;Gateway Time-out&lt;/td&gt;
&lt;td&gt;Time taken to wait for a response from a server to an intermediate server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;505&lt;/td&gt;
&lt;td&gt;HTTP Version not supported&lt;/td&gt;
&lt;td&gt;HTTP version not supported by the server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;506&lt;/td&gt;
&lt;td&gt;Variant Also Negotiates&lt;/td&gt;
&lt;td&gt;Negotiation error.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;507&lt;/td&gt;
&lt;td&gt;Insufficient storage&lt;/td&gt;
&lt;td&gt;Insufficient space to edit properties or build the collection.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;508&lt;/td&gt;
&lt;td&gt;Loop detected&lt;/td&gt;
&lt;td&gt;Loop in a resource linkage.(WebDAV)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;509&lt;/td&gt;
&lt;td&gt;Bandwidth Limit Exceeded&lt;/td&gt;
&lt;td&gt;Used by many servers to indicate a quota overrun.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;510&lt;/td&gt;
&lt;td&gt;Not extended&lt;/td&gt;
&lt;td&gt;The request does not respect the extended HTTP resource access policy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;511&lt;/td&gt;
&lt;td&gt;Network authentication required&lt;/td&gt;
&lt;td&gt;The client must authenticate to access the network. Used by captive portals to redirect clients to the authentication page.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I hope you have enjoyed this article.  If you have any questions, feel free to ask me in the comments. 👍&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>O que é Javascript?</title>
      <author>Thomas Lincoln</author>
      <pubDate>Wed, 20 Oct 2021 15:56:38 +0000</pubDate>
      <link>https://dev.to/samoht/o-que-e-javascript-38b0</link>
      <guid>https://dev.to/samoht/o-que-e-javascript-38b0</guid>
      <description>&lt;p&gt;Olá, meu caro programador, hoje, como primeiro post dessa conta, eu irei explicar o que é Javascript de uma forma breve, algo leve &lt;br&gt;
para iniciantes conseguirem se conectar com a linguagem.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-javascript"&gt;
  &lt;/a&gt;
  O que é Javascript?
&lt;/h2&gt;

&lt;p&gt;Bem, essa é uma pergunta meio simples, mas caso você não saiba irei responder. Javascript é uma linguagem de programação de alto nível (aguenta aí que eu já te explico o que é isso). Ela é uma das linguagens mais simples para um iniciante, é possível até mesmo aprender lógica de programação com ela.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mas o que é uma linguagem de programação de alto nível?. Bem, uma linguagem de programação de alto nível é uma linguagem que se assemelha bastante a nossa linguagem, isso, essa mesma que você usa pra falar "aaaaaaaa to cansado desse professor e dessa aula". Porém, com algumas modificações e em inglês (ta vendo como inglês é importante?).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Um outro fato importante, é que ela faz parte da "trindade do desenvolvimento web", sendo os membros o HTML, o Css e O Javascript. São as três principais linguagens usadas no desenvolvimento web frontend.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#por-que-foi-criado-o-js"&gt;
  &lt;/a&gt;
  Por que foi criado o Js?
&lt;/h2&gt;

&lt;p&gt;Bem, pode passar despercebido por muitos, mas eu acho importante saber o motivo da linguagem ter sido criada. Enfim vamos para a explicação.&lt;/p&gt;

&lt;p&gt;Caso vocês não saibam, os sites antes eram apenas uma página estática, algo como um pdf que você só é capaz de ler. Porém, é meio entediante e limita muito, imagina, você não poder escolher o vídeo que você vai ver, ou só poder ler aquele blog sem poder falar que ele não sabe escrever direito.&lt;/p&gt;

&lt;p&gt;Com isso Brendan Eich decidiu mudar isso, criando assim a linguagem que faria todo o conceito de site mudar para sempre. O Javascript, ele implementou formas do usuário poder interagir com o site, criando várias formas para se fazer isso, ignorando a linha temporal, agora irei mostrar para você leitor, quais são as possibilidades de implementação dessa linguagem em um site. Com Js você pode: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Criar interações entre o usuário, como? de várias formas, assim que ele digitar algo você pode ler aquilo e responder ele de alguma forma, seja, com ele logando ou não, com você mostrando o resultado de uma pesquisa.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fazer algo aparecer na tela quando ele clica em algo (sim, as propagandas que aparecem em qualquer canto possivelmente são com Js).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Armazenar o que o usuário digitou em uma variável. Assim podendo tratar ela, fazendo cálculos, podendo usar como login, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modificar toda a estrutura do site, textos, estilos, tudo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adicionar APIs, &lt;em&gt;mas o que são APIs?&lt;/em&gt;, veja as APIs como literalmente bibliotecas de código, com elas você pode buscar código que alguém ja escreveu e aplicar no seu site, algumas servem para adicionar informações, por exemplo, caso você queira saber a cotação do dólar e informar no seu site, uma API possivelmente vai poder fazer isso para você. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Fato curioso, todas as APIs são feitas por programadores como eu e você, dizem que uma boa forma de aprender Js é entender como fazer uma API, então futuramente haverá um post sobre isso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#onde-buscar-informa%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Onde buscar informações?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Tá tá, voce me disse tudo isso, mas deve ser dificil achar conteúdo disso&lt;/em&gt;, ai que você se engana, pois o criador da linguagem, fez um site chamado &lt;a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript"&gt;MDN mozilla&lt;/a&gt;, (&lt;em&gt;o mesmo criou o mozilla, uma vez inventor sempre inventor não é?&lt;/em&gt;) esse site contém a documentação da linguagem, como também tutoriais de como aprender ela, (também tem a documentação de outras linguagens e introduções as mesmas).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#primeiras-vari%C3%A1veis"&gt;
  &lt;/a&gt;
  Primeiras Variáveis
&lt;/h2&gt;

&lt;p&gt;Mas para não ficarmos só vendo informações e você poder ter um gostinho de como é a linguagem, iremos aprender a criar a primeira variável, (não se preocupe caso você não saiba onde programar Js, irei falar isso depois desse tópico).&lt;/p&gt;

&lt;p&gt;Parar criar uma variável se escrever da seguinte forma:&lt;br&gt;
"tipo de variável + o nome dela"&lt;/p&gt;

&lt;p&gt;Por exemplo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; var meuNumero;
 let meuNome;
 const meuTipoSanguíneo; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#como-e-onde-eu-programo-em-js"&gt;
  &lt;/a&gt;
  Como e onde eu programo em Js?
&lt;/h2&gt;

&lt;p&gt;Para ser sincero existem variás formas, até mesmo se você apertar f12 no seu teclado e digitar no console, você irá conseguir programar em Js. Porém,irei passar a forma mais fácil e simples de momento, alguma hora eu explico como faz para instalar os arquivos necessários para isso.&lt;/p&gt;

&lt;p&gt;A forma mais simples é programando em um site mesmo, como o &lt;a href="https://codepen.io"&gt;code pen&lt;/a&gt;, assim que você clicar em Start Coding, você será capaz de ver uma tela escrita Js, e lá você escreve as linhas de código em Js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exerc%C3%ADcios"&gt;
  &lt;/a&gt;
  Exercícios
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;que???? eu voltei pra escola?&lt;/em&gt;. Sim, a forma mais eficiente é praticar, então irei passar alguns exercícios para prática. Relaxa que é coisa simples.&lt;/p&gt;

&lt;p&gt;Exercício 1&lt;/p&gt;

&lt;p&gt;Crie variáveis para cada atributo seu, sejam físicos ou não. Como se você fosse um personagem de RPG, pode ser criativo.&lt;/p&gt;

&lt;p&gt;Exercício 2&lt;/p&gt;

&lt;p&gt;Tente encontrar a diferença entre let, const e var. &lt;/p&gt;

&lt;p&gt;Exercício 3&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#busque-saber-dos-tipos-de-vari%C3%A1veis-do-javascript"&gt;
  &lt;/a&gt;
  Busque saber dos tipos de variáveis do Javascript.
&lt;/h2&gt;

&lt;p&gt;E fim, viu, coisa simples. Caso eu lembre eu irei postar as respostas e soluções pra esses exercícios.&lt;/p&gt;

&lt;p&gt;Até um outro dia&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VQcaJIiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/vxdpsQNMFLT3RuMeYX/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQcaJIiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/vxdpsQNMFLT3RuMeYX/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>braziliandevs</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
