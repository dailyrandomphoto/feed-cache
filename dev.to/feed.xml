<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Integrate ESLint with your React project step by step (javascript)</title>
      <author>Brayan Arrieta</author>
      <pubDate>Tue, 18 May 2021 15:00:15 +0000</pubDate>
      <link>https://dev.to/brayanarrieta/integrate-eslint-with-your-react-project-step-by-step-javascript-50i7</link>
      <guid>https://dev.to/brayanarrieta/integrate-eslint-with-your-react-project-step-by-step-javascript-50i7</guid>
      <description>&lt;p&gt;First of all, we need to install ESLint&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i eslint --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install ESLint plugins&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx install-peerdeps --dev eslint-config-airbnb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: with a single command will install 6 plugins:¬†&lt;code&gt;eslint-config-airbnb&lt;/code&gt;,¬†&lt;code&gt;eslint-plugin-import&lt;/code&gt;,¬†&lt;code&gt;eslint-plugin-react&lt;/code&gt;,¬†&lt;code&gt;eslint-plugin-react-hooks&lt;/code&gt;, and¬†&lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;. You can also install these plugins individually.&lt;/p&gt;

&lt;p&gt;Install babel eslint&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i --save-dev babel-eslint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your "devDependencies" should look something similar to this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"devDependencies": {
    "babel-eslint": "^10.1.0",
    "eslint": "^7.2.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-react": "^7.20.6",
    "eslint-plugin-react-hooks": "^4.0.0"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create the file¬†&lt;code&gt;.eslintrc.json&lt;/code&gt;¬†at the root of the project. Paste below config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "env": {
        "browser": true,
        "commonjs": true,
        "es6": true,
    },
    "parser": "babel-eslint",
    "extends": [
        "eslint:recommended",
        "airbnb",
        "airbnb/hooks",
        "plugin:react/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:jsx-a11y/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 11,
        "sourceType": "module"
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "plugins": [
        "react",
        "react-hooks"
    ],
    "rules": {
        "react/react-in-jsx-scope": "off",
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [
                    ".js",
                    ".jsx"
                ]
            }
        ],
        "react/display-name": 1
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, install¬†&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint extension&lt;/a&gt;¬†for VSCode, After that need to reload the VSCode window once to get proper linting.*&lt;/p&gt;

&lt;p&gt;ESLint will automatically start detecting errors/warnings in¬†&lt;code&gt;.js&lt;/code&gt;¬†and¬†&lt;code&gt;.jsx&lt;/code&gt;¬†files. If that's not the case then either your project has no linting errors or ESLint is not properly set up. To test if linting works run eslint command in the terminal with folder path i.e.¬†&lt;code&gt;eslint src/**&lt;/code&gt;¬†and notice output.&lt;/p&gt;

&lt;p&gt;To disable the linting of some files/folders you can create a¬†&lt;code&gt;.eslintignore&lt;/code&gt;¬†at the root of the project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.eslintignore&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
dist
coverage
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, you can also add linting to¬†&lt;code&gt;scripts&lt;/code&gt;¬†in¬†&lt;code&gt;package.json&lt;/code&gt;¬†as a part of your pipeline process&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "lint": "eslint . --ext js,jsx",
    "lint:fix": "eslint . --ext js,jsx --fix"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me know in the comments recommendations or something else that can be added, I will update the post based on that thanks! üëç&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>eslint</category>
      <category>programming</category>
    </item>
    <item>
      <title>16 VS Code Shortcuts for Faster Coding</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Tue, 18 May 2021 14:46:26 +0000</pubDate>
      <link>https://dev.to/basecampxd/16-vs-code-shortcuts-for-faster-coding-4k5a</link>
      <guid>https://dev.to/basecampxd/16-vs-code-shortcuts-for-faster-coding-4k5a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Microsoft's VS code is one of the most popular text/code editors available on the internet. VS Code is an IDE(Integrated Development Environment), We can make it more powerful by using the extensions and it's very easy to customize. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s4LromC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tr39b0cn96i8og1859m.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s4LromC6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tr39b0cn96i8og1859m.gif" alt="Coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It comes with emmet pre-built which no other text editor does and it also allows us to tweak into its code so we can even modify its environment variables according to our preferences. It has a large collection of extensions which you can use for your requirement. &lt;/p&gt;

&lt;p&gt;Today we are going to look into shortcuts of VS code that will help you to code more effectively.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keyboard-shortcuts"&gt;
  &lt;/a&gt;
  Keyboard Shortcuts
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#1-command-palette"&gt;
  &lt;/a&gt;
  1. Command Palette
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+P&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Access all available commands based on your current context.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WxqEl6Er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pr3cpv6atedsg5pgfch3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WxqEl6Er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pr3cpv6atedsg5pgfch3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All of the commands are in the Command Palette with the associated key binding (if it exists). If you forget a keyboard shortcut, use the Command Palette to help you out.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#2-quick-open"&gt;
  &lt;/a&gt;
  2. Quick Open
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+P&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Quickly open files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FhA-nGZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nlen9uesslrdkc2iomh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhA-nGZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nlen9uesslrdkc2iomh.gif" alt="QuickOpen"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-errors-and-warnings"&gt;
  &lt;/a&gt;
  3. Errors and warnings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+M&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Quickly jump to errors and warnings in the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sayb9pza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/Errors_Warnings.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sayb9pza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/Errors_Warnings.gif" alt="Errors and warnings"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-change-language-mode"&gt;
  &lt;/a&gt;
  4. Change language mode
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+K M&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Persist the new language mode for that file type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kCM91BLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/change_syntax.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kCM91BLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/change_syntax.gif" alt="Errors and warnings"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-change-your-theme"&gt;
  &lt;/a&gt;
  5. Change your theme
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+K Ctrl+T&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You can install more themes from the VS Code extension Marketplace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LQ43jD8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/PreviewThemes.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQ43jD8q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/PreviewThemes.gif" alt="Change your theme"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-toggle-sidebar"&gt;
  &lt;/a&gt;
  6. Toggle Sidebar
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+B&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Show and hide the status bar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmBYZA7G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/toggle_side_bar.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmBYZA7G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/toggle_side_bar.gif" alt="Toggle Sidebar"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-zen-mod"&gt;
  &lt;/a&gt;
  7. Zen mod
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+K Z&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Enter distraction-free Zen mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S3-BsUtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/zen_mode.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S3-BsUtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/zen_mode.gif" alt="Zen mod"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-side-by-side-editing"&gt;
  &lt;/a&gt;
  8. Side by side editing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+\&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You can also drag and drop editors to create new editor groups and move editors between groups.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrQJLpNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/split_editor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrQJLpNB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/split_editor.gif" alt="Side by side editing"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-all-selection"&gt;
  &lt;/a&gt;
  9. All Selection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+L&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You can add additional cursors to all occurrences of the current selection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RMgKaCbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/add_cursor_current_selection.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RMgKaCbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/add_cursor_current_selection.gif" alt="All Selection"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-next-selection"&gt;
  &lt;/a&gt;
  10. Next Selection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+D&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;This only selects the next occurrence after the one you selected so you can add selections one by one.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j1NqeCfE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/add_cursor_current_selection_one_by_one.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j1NqeCfE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/add_cursor_current_selection_one_by_one.gif" alt="Next Selection"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#11-copy-line-up-down"&gt;
  &lt;/a&gt;
  11. Copy line up/ down
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Shift+Alt+Up&lt;/code&gt; or &lt;code&gt;Shift+Alt+Down&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Copy the whole line and paste it into the line above or below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSj9zge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/copy_line_down.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSj9zge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/copy_line_down.gif" alt="Copy line up/ down"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#12-move-line-up-and-down"&gt;
  &lt;/a&gt;
  12. Move line up and down
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Alt+Up&lt;/code&gt; or &lt;code&gt;Alt+Down&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Move the whole line above and below as required.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pB5tyF6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/move_line.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pB5tyF6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/move_line.gif" alt="Copy line up/ down"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#13-code-formatting"&gt;
  &lt;/a&gt;
  13. Code formatting
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Currently selected source code: &lt;code&gt;Ctrl+K Ctrl+F&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Whole document format: &lt;code&gt;Shift+Alt+F&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Format your untidy code to clean your code for more readability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6yIAWxaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/code_formatting.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yIAWxaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/code_formatting.gif" alt="Code formatting"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#14-open-markdown-preview"&gt;
  &lt;/a&gt;
  14. Open Markdown preview
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+Shift+V&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;See Markdown preview for markdown file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-olvgHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/markdown-preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-olvgHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/markdown-preview.png" alt="Open Markdown preview"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#15-side-by-side-markdown-edit-and-preview"&gt;
  &lt;/a&gt;
  15. Side by side Markdown edit and preview
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+K V&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The preview and editor will synchronize with your scrolling in either view.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V86OssOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/markdown-preview-side-by-side.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V86OssOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/markdown-preview-side-by-side.png" alt="Open Markdown preview"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#16-intellisense"&gt;
  &lt;/a&gt;
  16. IntelliSense
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Keyboard Shortcut: &lt;code&gt;Ctrl+Space&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You can view available methods, parameter hints, short documentation, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ts6UF_OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/intellisense.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ts6UF_OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/intellisense.gif" alt="IntelliSense"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  üîó Connect with me:
&lt;/h1&gt;

&lt;p&gt;Currently, on Twitter, I am posting about "How to write and grow blog?". If you want to write a more effective blog with tips, consider the follow button on Twitter.&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;With this completing 500 tweetsü•≥.&lt;br&gt;&lt;br&gt;Thank you to everyoneü§©.&lt;br&gt;&lt;br&gt;As helping more people, I am going to tweet about writing and growing blog especially technical, in the coming daysüî•.&lt;br&gt;&lt;br&gt;So if you haven't followed me, please considerü§ó.&lt;/p&gt;‚Äî Suraj Vishwakarma (&lt;a class="mentioned-user" href="https://dev.to/surajondev"&gt;@surajondev&lt;/a&gt;
) &lt;a href="https://twitter.com/surajondev/status/1394212368675000321?ref_src=twsrc%5Etfw"&gt;May 17, 2021&lt;/a&gt;
&lt;/blockquote&gt; 

&lt;p&gt;&lt;a href="https://twitter.com/surajondev"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/surajondev"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;I hope this post will help you write code effectively. Thank you for reading the post.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>productivity</category>
      <category>watercooler</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to create currency converter in javascript</title>
      <author>Stackfindover</author>
      <pubDate>Tue, 18 May 2021 14:42:06 +0000</pubDate>
      <link>https://dev.to/stackfindover/how-to-create-currency-converter-in-javascript-3h26</link>
      <guid>https://dev.to/stackfindover/how-to-create-currency-converter-in-javascript-3h26</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello, guys In this tutorial we will try to solve the mentioned query. and also we will learn how to create a currency converter in JavaScript&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-query"&gt;
  &lt;/a&gt;
  Common Query
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;How to make a currency converter&lt;/li&gt;
&lt;li&gt;How to use frankfurter free API&lt;/li&gt;
&lt;li&gt;How to create API based application&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#what-is-currency-converter"&gt;
  &lt;/a&gt;
  What is Currency Converter?
&lt;/h3&gt;

&lt;p&gt;A currency converter is a software, that is &lt;strong&gt;&lt;em&gt;designed to convert a currency into another&lt;/em&gt;&lt;/strong&gt; to check its corresponding value. They do so by connecting to a database of current currency exchange value.&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Exchange_rate"&gt;Click here to Know more&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#currency-converter-using-javascript-step-by-step-guide"&gt;
  &lt;/a&gt;
  Currency Converter Using JavaScript Step By Step Guide
&lt;/h3&gt;

&lt;p&gt;To make a currency converter in javascript we use frankfurter API this is an open-source, simple, and lightweight API for current and historical foreign exchange (forex) rates published by the European Central Bank.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyGfP9nn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zj854r4oaeo8uz6f2s04.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyGfP9nn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zj854r4oaeo8uz6f2s04.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.frankfurter.app/docs/"&gt;Read more about frankfurter API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we need to create two files &lt;strong&gt;index.html&lt;/strong&gt; and &lt;strong&gt;style.css&lt;/strong&gt; then we need to do code for it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step1"&gt;
  &lt;/a&gt;
  Step:#1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Add below code inside index.html&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;How to create currency converter&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"currency-row-outer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"currency-converter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Currency Converter&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"field grid-50-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"colmun col-left"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-input"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"00000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"colmun col-right"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"select"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"currency"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"currency"&lt;/span&gt; &lt;span class="na"&gt;onchange=&lt;/span&gt;&lt;span class="s"&gt;"updatevalue()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"field grid-50-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"colmun col-left"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-input"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"output"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"00000"&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"colmun col-right"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"select"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;select&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"currency"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"currency"&lt;/span&gt; &lt;span class="na"&gt;onchange=&lt;/span&gt;&lt;span class="s"&gt;"updatevalue()"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/select&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;


  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.currency&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;output&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.frankfurter.app/currencies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;


    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;option value="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/option&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;option value="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt; : &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/option&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;



    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updatevalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currency1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currency2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currency1&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;currency2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currency1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Choose Diffrent Currency&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currency1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currency2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api.frankfurter.app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;host&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/latest?amount=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;from=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currency1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;to=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currency2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
          &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step2"&gt;
  &lt;/a&gt;
  Step:#2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for &lt;strong&gt;style.css&lt;/strong&gt; which code I provide in the below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*Start Currency Converter*/&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'IBM Plex Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.currency-row-outer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.currency-converter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;480px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#363636&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.3em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#dbdbdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#00000057&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0.0625em&lt;/span&gt; &lt;span class="m"&gt;0.125em&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.field.grid-50-50&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.currency-converter&lt;/span&gt; &lt;span class="nc"&gt;.colmun&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="nc"&gt;.currency&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3273dc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.currency-converter&lt;/span&gt; &lt;span class="nc"&gt;.select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.currency-converter&lt;/span&gt; &lt;span class="nc"&gt;.select&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-45deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.525em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.525em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.125em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.4375em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.select&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3273dc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.select&lt;/span&gt;&lt;span class="nd"&gt;:hover::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#363636&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#currency-converter-in-javascript-video-output"&gt;
  &lt;/a&gt;
  Currency converter in javascript video output:
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IV23QBgC41U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-may-like-this-also"&gt;
  &lt;/a&gt;
  You may like this also
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.stackfindover.com/shortcut-keys-of-computer-a-to-z/"&gt;Shortcut Keys of Computer A to Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.stackfindover.com/how-to-publish-a-website-for-free/"&gt;How to publish a website for free&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Evolution of API and Microservice ecosystem: part 1</title>
      <author>Jayesh Bapu Ahire</author>
      <pubDate>Tue, 18 May 2021 14:30:04 +0000</pubDate>
      <link>https://dev.to/hypertrace/evolution-of-api-and-microservice-ecosystem-part-1-399a</link>
      <guid>https://dev.to/hypertrace/evolution-of-api-and-microservice-ecosystem-part-1-399a</guid>
      <description>&lt;p&gt;In this first installment in a series on the evolution of API and microservices ecosystem, we will learn about how microservices and APIs became industry standards and what are different benefits microservices offer. We will explore different challenges with this ecosystem and how to solve them in the second part of this series. &lt;/p&gt;

&lt;p&gt;Most of the tech giants including companies like Amazon, Netflix, started to build their systems using a monolithic architecture because back in the time it was much faster to set up a monolith and get the business moving. But over time as the product matures or fat growth happens, with growing systems the code gets more and more complicated. They all faced this problem and looked at microservices as a solution. One of the biggest benefits of microservices is that each microservice can be developed, scaled, and deployed independently. You can replace or upgrade any part of the system without affecting the whole system. &lt;/p&gt;

&lt;p&gt;But, &lt;em&gt;what is microservice architecture?&lt;/em&gt; &lt;a href="https://www.martinfowler.com/articles/microservices.html"&gt;As called out by James Lewis and Martin Fowler&lt;/a&gt;, The term "Microservice Architecture" has sprung up over the last few years to describe a particular way of designing software applications as suites of independently deployable services. While there is no precise definition of this architectural style, there are certain common characteristics around organization around business capability, automated deployment, intelligence in the endpoints, and decentralized control of languages and data. &lt;br&gt;
I hope it‚Äôs not that hard to guess but these microservices talk to each other via APIs and two of the most commonly used protocols are HTTP request-response with resource APIs and lightweight messaging. Although as I mentioned above, companies like Netflix and Amazon have been using microservices for quite a long time, many small organizations have also started adopting API first or microservice driven architectures recently, because &lt;a href="https://www.infoq.com/articles/web-apis-business-perspective/"&gt;APIs have become the heart of the global tech industry in the past decade.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rise-of-microservices"&gt;
  &lt;/a&gt;
  Rise of Microservices
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs dive more into the origins of APIs and Microservices as they share a common origin story. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rise of service-oriented architectures&lt;/li&gt;
&lt;li&gt;Rise of cloud computing and managed services&lt;/li&gt;
&lt;li&gt;Rise of decentralization movement&lt;/li&gt;
&lt;li&gt;Rise of Agile movement&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#rise-of-serviceoriented-architectures"&gt;
  &lt;/a&gt;
  Rise of service-oriented architectures
&lt;/h3&gt;

&lt;p&gt;As we all know, building distributed systems is hard and managing them is even harder. The rise of the web back in the days opened the doors to innovate the way we build distributed systems and that‚Äôs where Service based architecture came into the picture. SOA was defined as a style of multi-tier computing that helps organizations share logic and data among multiple applications and usage modes. [as defined by &lt;a href="https://www.gartner.com/en/documents/302868"&gt;Gartner&lt;/a&gt; ]&lt;/p&gt;

&lt;p&gt;Though a failed movement back in the time, SOA surely helped a lot in initiating microservice movements, and even organizations like Netflix and Amazon were calling their architectures SOAs before the microservice movement. Due to the centralized nature of ESB topology and some other reasons, SOAs increased complexity and introduced bottlenecks, and the costs of implementing an SOA infrastructure (based on the ESB, registry, and service platform template) were excessive.  &lt;/p&gt;

&lt;p&gt;Due to these problems, people started looking for better alternatives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rise-of-cloud-computing-and-managed-services"&gt;
  &lt;/a&gt;
  Rise of cloud computing and managed services
&lt;/h3&gt;

&lt;p&gt;The rise of RESTful Web APIs arose as a lighter-weight alternative to SOAP services. -- a style of interconnecting applications that had evolved organically on the Web --. The distributed nature of cloud infrastructure challenged the placement of the centralized ESB topology.&lt;br&gt;
Everyone started adopting microservices due to the benefits they provided and here we are today looking at complex modern architectures. Cloud computing helped in removing barriers for deployment and provided a variety of new use-cases for APIs. It worked out as a novel platform for deploying more granular API-fronted application components. Cloud services provided another reason to move towards more service-oriented and modular deployment architectures. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rise-of-decentralization-moment"&gt;
  &lt;/a&gt;
  Rise of decentralization moment
&lt;/h3&gt;

&lt;p&gt;As we discussed earlier, at one point in time, service-oriented computing became an increasingly popular paradigm for modeling and building distributed systems in open and heterogeneous environments. However, proposed service-oriented architectures are typically based on centralized components, such as service registries or service brokers, that introduce reliability, management, and performance issues. &lt;/p&gt;

&lt;p&gt;During this whole time, the capabilities and scale of distributed systems have increased. The trend towards decentralization in both the system itself as well as the supporting organization started to catch up and the decentralization moment started. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rise-of-agile-moment"&gt;
  &lt;/a&gt;
  Rise of Agile moment
&lt;/h3&gt;

&lt;p&gt;In his blog post titled ‚Äú&lt;a href="http://www.codingthearchitecture.com/2013/09/03/what_is_agile_software_architecture.html"&gt;Coding the Architecture&lt;/a&gt;‚Äù, &lt;a href="https://twitter.com/simonbrown"&gt;Simon Brown&lt;/a&gt; pointed out that agile architecture does not naturally emerge from agile development practices. Rather, it must be consciously sought. Note that his description of agile software architecture is a perfect match for microservice architecture. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we look at the characteristics of agile software architecture, we tend to think of something that is built using a collection of small, loosely coupled components/services that collaborate together to satisfy an end-goal. This style of architecture provides agility in a number of ways. Small, loosely coupled components/services can be built, modified, and tested in isolation, or even ripped out and replaced depending on how requirements change. This style of architecture also lends itself well to a very flexible and adaptable deployment model, since new components/services can be added and scaled if needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The agile software movement arose as a reaction to the same centralized approach to enterprise IT that hampered the SOA movement. Agile‚Äôs popularity and success in software development led to the CI/CD approach to software deployment, followed by the cultural philosophy of the DevOps movement. Between CI/CD, DevOps, agile development, and progressive delivery, the software delivery train also started speeding up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-microservices"&gt;
  &lt;/a&gt;
  Benefits of Microservices
&lt;/h2&gt;

&lt;p&gt;Now that we have gone through the reasons behind the rise of Microservices, Let‚Äôs try to understand what business value microservices provide. &lt;/p&gt;

&lt;p&gt;The main reason that drives the move to microservices in any organization is speed and agility at scale which helps in software delivery. Reducing cross-team coordination, building diverse language applications, flexible deployments, enhanced manageability are some of the additional perks that organizations with microservice architectures enjoy. &lt;/p&gt;

&lt;p&gt;Many of the benefits which come with Microservice architectures are mostly due to the API-first nature of microservices and here are a few of them: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Composability:&lt;/strong&gt; When services are published through an API, it is easier to use them in multiple business contexts to assist in various business processes&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testability:&lt;/strong&gt; When services are accessible over a network boundary, it is easier to isolate tests and exercise individual components of the system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scalability:&lt;/strong&gt; Each microservice can be scaled autonomously without disrupting the other microservices that comprise the application. When demand increases, you only need to upgrade or divert more resources to the microservice affected by the increasing demands. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Evolvability:&lt;/strong&gt; When services are exposed through an API, implementation details can be hidden from the consumer, making it easier to change components without impacting dependent parts of the system &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Comprehensibility:&lt;/strong&gt; When a complex system is broken down into modular APIs, it is easier to understand the overall business functionality of the system, which helps in both designing and maintaining the system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Automatability:&lt;/strong&gt; Along with the data plane API benefits above, control plane APIs allow automation in the deployment and management of microservices, thus increasing the velocity of software delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But as we know &lt;em&gt;with great power comes great responsibility&lt;/em&gt; and the same thing applies to microservices and API ecosystems as well. These complex systems bring a lot of challenges with them and we will discuss those challenges in the next part of this blog post. &lt;/p&gt;

&lt;p&gt;Until then, if your organization is using microservice architecture and exploring Observability solutions, feel free to check out our Open Source Observability platform &lt;a href="https://github.com/hypertrace/hypertrace"&gt;Hypertrace&lt;/a&gt;. If you are in transition and want to learn more about Observability or want to contribute to Hypertrace, &lt;a href="https://bit.ly/hypertrace-community-slack"&gt;join our slack community&lt;/a&gt; to interact with folks who have been through this transition or going through this transition. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.martinfowler.com/articles/microservices.html"&gt;https://www.martinfowler.com/articles/microservices.html&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/articles/web-apis-business-perspective/"&gt;https://www.infoq.com/articles/web-apis-business-perspective/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gartner.com/en/documents/302868"&gt;https://www.gartner.com/en/documents/302868&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoworld.com/article/3080611/learning-from-soa-5-lessons-for-the-microservices-era.html"&gt;https://www.infoworld.com/article/3080611/learning-from-soa-5-lessons-for-the-microservices-era.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.broadcom.com/doc/microsurfaces-the-role-of-apis-in-a-microservice-architecture"&gt;https://docs.broadcom.com/doc/microsurfaces-the-role-of-apis-in-a-microservice-architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thoughtworks.com/insights/blog/microservices-nutshell"&gt;https://www.thoughtworks.com/insights/blog/microservices-nutshell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://link.springer.com/article/10.1007/s12083-009-0062-6"&gt;https://link.springer.com/article/10.1007/s12083-009-0062-6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoworld.com/article/3075880/microservice-architecture-is-agile-software-architecture.html"&gt;https://www.infoworld.com/article/3075880/microservice-architecture-is-agile-software-architecture.html&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cloud</category>
      <category>architecture</category>
      <category>kubernetes</category>
      <category>agile</category>
    </item>
    <item>
      <title>Writing my first C# MVC Unit Test</title>
      <author>Seth A Burleson</author>
      <pubDate>Tue, 18 May 2021 14:29:12 +0000</pubDate>
      <link>https://dev.to/sbrevolution5/writing-my-first-c-mvc-unit-test-13ah</link>
      <guid>https://dev.to/sbrevolution5/writing-my-first-c-mvc-unit-test-13ah</guid>
      <description>&lt;p&gt;After much research and thought, I'm diving in today with a very basic C# unit test, just to get my feet wet with Test Driven Development.  The purpose of this test, is to see if the home index will return 2 blogs.  It should be very simple, and I honestly rarely expect this test to break, but you've got to start somewhere!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The setup.
&lt;/h1&gt;

&lt;p&gt;I've Installed the xUnit extension into VS2019, and I'm adding a new xUnit Test Project to my solution.  Since this is for my blog project, I'll name it BlogTests, and put it in my project folder.  This creates a sample test with nothing in it at the moment, but we will fix that shortly.   &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#autogenerated-tests"&gt;
  &lt;/a&gt;
  Auto-generated "Tests"
&lt;/h1&gt;

&lt;p&gt;One of the great things about VS2019 is that it can generate a "test" for you.  This test doesn't do anything, but it gives us a starting point.  Over in the main project's home controller, if we right click inside the index action (you can right click inside the overall class to make more than one test at once if needed) and go to "Create Unit tests" we get a lovely pop-up that gives us some options.  If its not already selected, make sure the Test Framework is xUnit.net 2.0, then select your test project, and &lt;code&gt;&amp;lt;New Test File&amp;gt;&lt;/code&gt; before you hit OK.  I'm having it assert failure for all tests right now, since there isn't anything going on just yet.  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mocking-the-database"&gt;
  &lt;/a&gt;
  Mocking the database
&lt;/h1&gt;

&lt;p&gt;With EFCore, we actually don't have to make a Mock database, we will instead use the local database for testing.   It was rather difficult to get the Mock database working with EFCore, and in my research it turned out to be unnecessary.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#writing-the-test-itself"&gt;
  &lt;/a&gt;
  Writing the test itself
&lt;/h1&gt;

&lt;p&gt;Once we have our Mock Database, we are ready to write the test.  Lets use a more descriptive name than "Index Test".  There are 3 parts considered standard to a test name:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The behavior being tested&lt;/li&gt;
&lt;li&gt;The constraints&lt;/li&gt;
&lt;li&gt;The expected behavior&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'm going to use "Index_ReturnsAViewResult_WithAPagedListOfFiveBlogs" as the name.  Its a mouthful, but if my test fails I will immediately know what failed.&lt;/p&gt;

&lt;p&gt;There are now 3 parts to our test: Arrange, Act, and Assert.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#arrange"&gt;
  &lt;/a&gt;
  Arrange
&lt;/h2&gt;

&lt;p&gt;This step involves putting the data in the correct spot, and performing any setup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var optionsBuilder = new DbContextOptionsBuilder&amp;lt;ApplicationDbContext&amp;gt;();
            optionsBuilder.UseNpgsql(Connection.GetConnectionString(_configuration));
            var _dbContext = new ApplicationDbContext(optionsBuilder.Options);

            var controller = new HomeController(null,_dbContext);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The optionsBuilder is used to configure options for the ApplicationDbContext, which then is passed to the controller.  I did not pass the controller a logger at this point, since I am not using the logger to test.  Your options builder should take the same arguments that are used in startup.cs to set up your database.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#act"&gt;
  &lt;/a&gt;
  Act.
&lt;/h2&gt;

&lt;p&gt;This part is very simple, just get a result from the controller&lt;br&gt;
&lt;code&gt;var result = await controller.Index(1); //passing page 1&lt;/code&gt;&lt;br&gt;
I'm passing a variable because my site is using X.PagedList to paginate (see &lt;a href="https://dev.to/sbrevolution5/3-steps-to-paging-in-asp-net-blog-part-3-371m"&gt;this post&lt;/a&gt;)&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#assert"&gt;
  &lt;/a&gt;
  Assert
&lt;/h2&gt;

&lt;p&gt;And here's the meat and potatoes, We're going to check that the type is ViewResult, and the model is based on an IPagedList.  Then finally, we ensure that the model only includes 5 items for this page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var viewResult = Assert.IsType&amp;lt;ViewResult&amp;gt;(result);
            var model = Assert.IsAssignableFrom&amp;lt;IPagedList&amp;lt;Blog&amp;gt;&amp;gt;(viewResult.Model);
            Assert.Equal(5, actual: model.Count());
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run a test, we use a series of "assert" statements.  If any of these fail, we will recieve a failure on a test.  This is where we're going to stop for now, but as a first experiment in testing, I'd call this a success.  &lt;/p&gt;

&lt;p&gt;My main struggle at the moment is coming up with the right kind of tests.  Unlike working with a very math based console app, I don't feel like I have much to test within the controllers.  &lt;/p&gt;

&lt;p&gt;What kinds of tests do you do with MVC apps? &lt;/p&gt;

</description>
      <category>testing</category>
      <category>csharp</category>
      <category>dotnet</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Keep your AWS Kubernetes costs in check with intelligent allocation</title>
      <author>CAST AI</author>
      <pubDate>Tue, 18 May 2021 14:25:24 +0000</pubDate>
      <link>https://dev.to/castai/keep-your-aws-kubernetes-costs-in-check-with-intelligent-allocation-2l8l</link>
      <guid>https://dev.to/castai/keep-your-aws-kubernetes-costs-in-check-with-intelligent-allocation-2l8l</guid>
      <description>&lt;p&gt;Traditional cost allocation and Kubernetes are like oil and water. Surely, containerized environments make a lot of things easier. But not this one.&lt;/p&gt;

&lt;p&gt;Luckily, there are a few things you can do to &lt;strong&gt;allocate AWS Kubernetes costs smarter&lt;/strong&gt; and keep them in check.&lt;/p&gt;

&lt;p&gt;Read on to find out what they are and finally hold the reins over your cloud expenses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What you‚Äôll find inside:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;You‚Äôre not the only one getting confused by Kubernetes costs, here‚Äôs why&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Calculating shared costs is a nightmare&lt;/li&gt;
&lt;li&gt;Containers are very dynamic&lt;/li&gt;
&lt;li&gt;Dealing with multiple cost centers is hard&lt;/li&gt;
&lt;li&gt;Autoscaling leads to more confusion&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Allocating AWS Kubernetes costs, the smart way&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Use container classes&lt;/li&gt;
&lt;li&gt;Break costs down for labeling and tagging&lt;/li&gt;
&lt;li&gt;Establish labeling and namespace standards&lt;/li&gt;
&lt;li&gt;Split and allocate shared costs&lt;/li&gt;
&lt;li&gt;Count in cluster costs beyond the core&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;How to apply all of this and win the cost allocation game&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#youre-not-the-only-one-getting-confused-by-kubernetes-costs-heres-why"&gt;
  &lt;/a&gt;
  You‚Äôre not the only one getting confused by Kubernetes costs, here‚Äôs why
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRFc50SK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5844rai8vp9m5zitdu79.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRFc50SK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5844rai8vp9m5zitdu79.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting the hang of &lt;a href="https://cast.ai/blog/kubernetes-cost-estimation-4-problems-and-how-to-solve-them/"&gt;Kubernetes cost estimation&lt;/a&gt;, allocation, and reporting is something every team mindful of its expenses aspires to. &lt;/p&gt;

&lt;p&gt;But why is it so hard? Here are 4 Kubernetes cost challenges we all know all too well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-calculating-shared-costs-is-a-nightmare"&gt;
  &lt;/a&gt;
  1. Calculating shared costs is a nightmare
&lt;/h3&gt;

&lt;p&gt;Kubernetes clusters are in essence shared services multiple teams run to hold multiple containers and apps. Once a team deploys a container, it uses some of the cluster‚Äôs resources ‚Äì so, you need to pay for each and every server instance that is part of your cluster. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This doesn‚Äôt sound so hard until you try making that work with, say, three teams working on ten unique applications. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which application or project uses the biggest chunk of your cluster resources? You can‚Äôt really tell, because all of these projects use multiple containers. &lt;/p&gt;

&lt;p&gt;Knowing how many resources an individual container uses from a specific server is next to impossible. And that‚Äôs what makes allocating Kubernetes costs so challenging.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-containers-are-very-dynamic"&gt;
  &lt;/a&gt;
  2. Containers are very dynamic
&lt;/h3&gt;

&lt;p&gt;A container‚Äôs lifespan lasts only &lt;a href="https://www.datadoghq.com/container-report/"&gt;one day&lt;/a&gt;. Compare that to how long your virtual machine lasts. It‚Äôs a speck in time.&lt;/p&gt;

&lt;p&gt;The dynamic character of your containerized environment makes calculating costs even more complex. You need to come up with a cost management system that can handle it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-dealing-with-multiple-cost-centers-is-hard"&gt;
  &lt;/a&gt;
  3. Dealing with multiple cost centers is hard
&lt;/h3&gt;

&lt;p&gt;It‚Äôs likely that not all development costs come from the DevOps budget and you have a number of cost centers running across your company. &lt;/p&gt;

&lt;p&gt;While your product team develops core applications, &lt;strong&gt;another team might launch a shadow IT project that consumes resources.&lt;/strong&gt; You need to consider this especially if your business has multiple digital services and each comes with its own teams and budgets. &lt;/p&gt;

&lt;p&gt;When multiple teams use one cluster, identifying which one is responsible for which part of the bill is a hard nut to crack. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-autoscaling-leads-to-more-confusion"&gt;
  &lt;/a&gt;
  4. Autoscaling leads to more confusion
&lt;/h3&gt;

&lt;p&gt;Teams often use the three built-in &lt;a href="https://cast.ai/blog/guide-to-kubernetes-autoscaling-for-cloud-cost-optimization/"&gt;Kubernetes autoscaling&lt;/a&gt; mechanisms that reduce the waste (and cost) of running clusters. But autoscaling has an impact on your cost calculations.&lt;/p&gt;

&lt;p&gt;For example, &lt;strong&gt;Vertical Pod Autoscaler (VPA)&lt;/strong&gt; automatically adjusts requests and limits configuration to eliminate overhead. It changes the number of requests on a container, increasing and reducing its resource allocation. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Horizontal Pod Autoscaler (HPA)&lt;/strong&gt; focuses on scaling out to get the best combo of CPU or RAM allocated to an instance. It changes the number of containers all the time. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-does-it-matter-heres-an-example-scenario"&gt;
  &lt;/a&gt;
  Why does it matter? Here‚Äôs an example scenario:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Imagine that you have three webserver containers running during the night. Everything works well. &lt;/li&gt;
&lt;li&gt;But there are some peak hours during the day ‚Äì so HPA scales from 3 to 50 containers. &lt;/li&gt;
&lt;li&gt;When lunchtime comes and demand is lower, it scales down. &lt;/li&gt;
&lt;li&gt;And then it brings the scale back up for the afternoon rush, only to settle at a low level as the day ends.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The number of containers and their sizes is very dynamic in this setup. This complicates the process of calculating and forecasting AWS Kubernetes costs even more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#allocating-aws-kubernetes-costs-the-smart-way"&gt;
  &lt;/a&gt;
  Allocating AWS Kubernetes costs, the smart way
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JFHtz_-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9w2nc8pxydbjnv2af6q.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JFHtz_-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9w2nc8pxydbjnv2af6q.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take a look at your &lt;a href="https://cast.ai/blog/cloud-bill-5-common-issues-and-how-to-deal-with-them/"&gt;cloud bill&lt;/a&gt;. You get charged for every instance that makes up a cluster where containers are deployed. You need to pay for that resource, even if you‚Äôre not using it. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To allocate the individual costs of a container running on a given cluster, you need to discover how much of the server the container ended up consuming.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then add the satellite AWS Kubernetes costs of a running cluster to that as well (from management nodes and software licensing to backups and disaster recovery). &lt;/p&gt;

&lt;p&gt;How to do it? Here are some best practices for allocating Kubernetes costs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-use-container-classes"&gt;
  &lt;/a&gt;
  1. Use container classes
&lt;/h3&gt;

&lt;p&gt;You can set different resource guarantees on scheduled containers in Kubernetes. They‚Äôre called Quality of Service (QoS) classes. Here‚Äôs a quick introduction: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Guaranteed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These pods are top priority and guaranteed to not get killed until the moment they exceed their limits. If limits and requests (not equal to 0) are set for all the resources across your containers and are equal, the pod is classified as guaranteed. &lt;/p&gt;

&lt;p&gt;Use this for critical service containers to make sure that a pod gets the vCPU and memory it needs at all times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Burstable&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;If your workload experiences spikes, it should have access to more resources when it needs them. This setup allows the pod to use more resources than requested at first ‚Äì as long as the capacity is available on the underlying instance. &lt;/p&gt;

&lt;p&gt;This type of allocation works like burstable instances AWS offers (T-series) ‚Äì they give you a base level of performance and allow the pod to burst when it requires more. &lt;/p&gt;

&lt;p&gt;This is much more cost-effective than investing in an instance large enough to cover the spikes but way too large for regular operation. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BestEffort&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These pods are the lowest priority and get killed first if your system runs out of memory. This allocation allows the pod to run while there‚Äôs excess capacity available and stops it when it‚Äôs not. It works like spot instances in AWS. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It‚Äôs a good idea to allocate a mix of pods that have different resource allocation guarantees into a server instance to increase its utilization. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, you can allocate a baseline of resources to guaranteed resource pods, add some burstable pods that use up to the remainder of resources, and best-effort pods that take advantage of any spare capacity. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40oSvMYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khsh54z9anhb40bf7bfk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40oSvMYY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khsh54z9anhb40bf7bfk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-break-costs-down-for-labeling-and-tagging"&gt;
  &lt;/a&gt;
  2. Break costs down for labeling and tagging
&lt;/h3&gt;

&lt;p&gt;Breaking costs into separate categories helps to make sense of them through labels and tagging. Here are a few categories that Kubernetes teams find useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Billing hierarchy&lt;/strong&gt; ‚Äì develop and align it with your cloud costs (for example, projects, folders, or organizations),&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resources&lt;/strong&gt; ‚Äì this part covers compute cores, GPU, TPU, RAM, load balancers, custom machines, network egress, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Namespaces&lt;/strong&gt; ‚Äì it‚Äôs a good practice to label specific and isolated containers,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Labels&lt;/strong&gt; ‚Äì come up with labels reflecting different cost centers, teams, application names, environments, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-establish-labeling-and-namespace-standards"&gt;
  &lt;/a&gt;
  3. Establish labeling and namespace standards
&lt;/h3&gt;

&lt;p&gt;Develop and implement a labeling and namespace strategy ‚Äì and stick to it when allocating cluster costs. That way, teams that use AWS can see which groups are driving costs in a given cluster. &lt;/p&gt;

&lt;p&gt;Consider the proportional resources consumed by every group and use your findings to allocate cluster costs to these groups. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs an example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs say that you have four namespaces in a cluster. Each of them consumes 25% of the cluster resources. One way to allocate costs would be taking 25% of the total cluster costs and allocating them to each namespace. &lt;/p&gt;

&lt;p&gt;Naturally, this is an example scenario ‚Äì don‚Äôt expect things to be so straightforward in the real world. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Before setting out to do that, establish how you‚Äôll be determining cluster resource utilization ‚Äì by CPU, memory, or a combination of these two? Are you going to look at requests or actual consumption? &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;If you go for actual usage,&lt;/strong&gt; each team will only pay for what it uses. But who will be covering the bill for idle time? How are you going to deal with overprovisioning? &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;If you allocate costs by resource requests,&lt;/strong&gt; you‚Äôll encourage teams to provision only what they need and allocate all the costs. But this might also lead teams to underestimate their requirements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-split-and-allocate-shared-costs"&gt;
  &lt;/a&gt;
  4. Split and allocate shared costs
&lt;/h3&gt;

&lt;p&gt;Companies have unique ways to split infrastructure costs. These methods often get inherited when they start using Kubernetes.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a set of best practices if you‚Äôre looking for another approach:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-define-what-shared-costs-are"&gt;
  &lt;/a&gt;
  a. Define what shared costs are
&lt;/h4&gt;

&lt;p&gt;This depends on the maturity and size of your company. You share the cloud bill at the organizational level but need to allocate it either to a centralized budget or different cost centers. Still, your shared costs will be charged within one account, so understanding which AWS Kubernetes costs should be shared is challenging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are a few examples of commonly shared costs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shared resources (network, storage like data lakes)&lt;/li&gt;
&lt;li&gt;Platform services (Kubernetes, logging)&lt;/li&gt;
&lt;li&gt;Enterprise-level support and discounts&lt;/li&gt;
&lt;li&gt;Licensing and third-party costs &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Take support charges as an example. They‚Äôre applied at the parent account level. While some businesses cover them with a central budget of the IT or cloud team, others go a step further and allocate this cost to customers like application owners or business units. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The rise of shared platforms where multiple teams use the same core resources complicates this ‚Äì like Kubernetes systems that run on shared clusters. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#b-split-your-shared-costs"&gt;
  &lt;/a&gt;
  b. Split your shared costs
&lt;/h4&gt;

&lt;p&gt;Tagging helps to do that accurately, and you can choose from several techniques:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proportional split ‚Äì based on the relative percentage of direct costs&lt;/li&gt;
&lt;li&gt;Even split ‚Äì where you split the total amount evenly across all targets&lt;/li&gt;
&lt;li&gt;Fixed proportion split ‚Äì based on a user-defined coefficient 
This is a bit abstract, so let‚Äôs show an example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine that you have several business units that consume a different portion of cloud resources:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGOtmx0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhxoyiwtwtfzflrmpxq8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGOtmx0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xhxoyiwtwtfzflrmpxq8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#you-get-a-15k-enterprise-support-charge-on-top-of-that-so-your-final-bill-is-115k-per-month"&gt;
  &lt;/a&gt;
  You get a $15k enterprise support charge on top of that, so your final bill is $115k per month.
&lt;/h4&gt;

&lt;p&gt;Here‚Äôs how this plays out in different splitting techniques.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#proportional-split"&gt;
  &lt;/a&gt;
  Proportional split
&lt;/h4&gt;

&lt;p&gt;In this model, you split the $15k enterprise support charge among your three business units based on the percentage of their spend in direct charges. So, the sales operations team that uses 50% of your bill will also be accountable for $7.5k on top of their bill. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0jo2Elx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uqxrgb7a8dloek7tnbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0jo2Elx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9uqxrgb7a8dloek7tnbv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#even-split"&gt;
  &lt;/a&gt;
  Even split
&lt;/h4&gt;

&lt;p&gt;This model is simpler, so you can often find it among smaller companies with fewer business units. In this scenario, the $15k enterprise support charge is shared evenly by all business units ‚Äì so $5k each.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3vcgFx9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc6fitb3eyujszv0pd5f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3vcgFx9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc6fitb3eyujszv0pd5f.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#fixed-proportion-split"&gt;
  &lt;/a&gt;
  Fixed proportion split
&lt;/h4&gt;

&lt;p&gt;When using this method, you set a fixed percentage for attributing shared costs based on past spend. The idea is to get a fair breakdown. So if you decide that the sales operations team‚Äôs shared cost allocation is 40%, then it will get $6k of the enterprise support fee allocated to it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ps1406bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wwrt2pjfjim4g9nwiv6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ps1406bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wwrt2pjfjim4g9nwiv6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-count-in-cluster-costs-beyond-the-core"&gt;
  &lt;/a&gt;
  5. Count in cluster costs beyond the core
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5v-8zJil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iv6h4mt1nsacmhojrfxy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5v-8zJil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iv6h4mt1nsacmhojrfxy.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
When allocating costs to cluster consumers, consider the satellite costs of operating this cluster like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Management and operational costs&lt;/strong&gt; ‚Äì these are charged by AWS for managing the cluster for you. For example, EKS charges $0.1 per hour per Kubernetes cluster ‚Äì this amounts to c. $74 per month. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Learn more here: &lt;a href="https://cast.ai/blog/aws-eks-vs-ecs-vs-fargate-where-to-manage-your-kubernetes/"&gt;AWS EKS vs. ECS vs. Fargate: Where to manage your Kubernetes?&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Storage&lt;/strong&gt; ‚Äì add the costs of storage consumed by the host OS on the nodes, and any backup or data retrieval storage that is used in operating a production cluster can be allocated back to the workloads running on the cluster. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Licensing&lt;/strong&gt; ‚Äì these costs might be included in your AWS bill, but if you use Bring Your Own License (BOYL), you need to allocate this cost from the external spend. Moreover, software packages running on the host OS might incur a license fee too. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Observability&lt;/strong&gt; ‚Äì these metrics and logs are transferred from the cluster to a service your teams use to monitor and visualize them. This cost might be incurred by AWS or a third-party SaaS solution. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Security&lt;/strong&gt; ‚Äì AWS offers a wealth of security features, but they come at an extra fee that needs to be allocated.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-apply-all-of-this-and-win-the-cost-allocation-game"&gt;
  &lt;/a&gt;
  How to apply all of this and win the cost allocation game
&lt;/h2&gt;

&lt;p&gt;Implementing all of these best practices at once is bound to overwhelm you. So start small and develop a process for allocating costs. Build an understanding of how these costs should be allocated in your company.&lt;/p&gt;

&lt;p&gt;Or get a solution that keeps your AWS Kubernetes costs at bay. Analyzing and allocating costs is so much easier if you have access to a detailed overview like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTnF-fJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxa8iuw6lrst2ih4vj83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTnF-fJU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lxa8iuw6lrst2ih4vj83.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs how to get started:&lt;/strong&gt; &lt;a href="https://cast.ai/eks-optimizer/"&gt;Analyze your cluster for free&lt;/a&gt; to see every single detail that increases your AWS bill.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>aws</category>
      <category>eks</category>
    </item>
    <item>
      <title>I created 3 New VSCode Themes!</title>
      <author>Rithik Samanthula</author>
      <pubDate>Tue, 18 May 2021 14:21:16 +0000</pubDate>
      <link>https://dev.to/code2rithik/i-created-3-new-vscode-themes-39ji</link>
      <guid>https://dev.to/code2rithik/i-created-3-new-vscode-themes-39ji</guid>
      <description>&lt;p&gt;Hey There!&lt;/p&gt;

&lt;p&gt;This is an exciting post because.....&lt;/p&gt;

&lt;p&gt;Drumroll please..ü•Åü•Å&lt;/p&gt;

&lt;p&gt;Well you obviously know by the title üòÇ.&lt;/p&gt;

&lt;p&gt;Anyways, I created 3 New (and free) VSCode themes to make your VSCode look better.&lt;/p&gt;

&lt;p&gt;A month ago I wrote a post on 8 Rad themes for VSCode.&lt;/p&gt;

&lt;p&gt;You can check it out here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/code2rithik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tEZ9q5q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--rDH0zdaa--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571318/4f34864f-834d-464e-a51a-e1e62aead649.gif" alt="code2rithik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code2rithik/8-rad-themes-for-visual-studio-code-57f5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;8 Rad Themes for Visual Studio Code&lt;/h2&gt;
      &lt;h3&gt;Rithik Samanthula „Éª Apr 10 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#theme&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#color&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aesthetic&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Anyways, are you ready to install it...&lt;/p&gt;

&lt;p&gt;It's on the marketplace!&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#1-neon-blue-drive"&gt;
  &lt;/a&gt;
  1. Neon Blue Drive
&lt;/h1&gt;

&lt;p&gt;An Awesome Neon Blue Theme Inspired by The Best Theme&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xWH2IeUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26uqwjpqamhhaj7zaop8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWH2IeUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26uqwjpqamhhaj7zaop8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=RithikDev.neon-blue-drive"&gt;Install&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#2-blazes-abyss"&gt;
  &lt;/a&gt;
  2. Blazes Abyss
&lt;/h1&gt;

&lt;p&gt;This is a theme based on the CodeSandbox Theme&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TdCoDjVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry9zpsrxt1qshlbetraa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TdCoDjVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry9zpsrxt1qshlbetraa.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=RithikDev.blazesabyss"&gt;Install&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#3-purple-star"&gt;
  &lt;/a&gt;
  3. Purple Star
&lt;/h1&gt;

&lt;p&gt;This is a nice purple theme with a radical theme&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMkf35Kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx7mqsogf2so2m2o50z2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMkf35Kj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xx7mqsogf2so2m2o50z2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=RithikDev.purple-star"&gt;Install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please do write reviews on the marketplace!&lt;/p&gt;




&lt;p&gt;Thank You for Reading and Remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All üë®üèª‚Äçüíª
&lt;/h1&gt;

</description>
      <category>vscode</category>
      <category>theme</category>
      <category>color</category>
    </item>
    <item>
      <title>Why you should have a code of conduct on GitHub </title>
      <author>Ash Freels</author>
      <pubDate>Tue, 18 May 2021 14:03:48 +0000</pubDate>
      <link>https://dev.to/ashfreels/why-you-should-have-a-code-of-conduct-on-github-41ob</link>
      <guid>https://dev.to/ashfreels/why-you-should-have-a-code-of-conduct-on-github-41ob</guid>
      <description>&lt;p&gt;I made the decision to add a code of conduct to my current and future repos on GitHub. Based on my personal experiences I made my choice when I asked these questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is the purpose of a code of conduct?&lt;/li&gt;
&lt;li&gt;How can I prevent negative behavior in the future?&lt;/li&gt;
&lt;li&gt;What enforcement will take place for rule violations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose of writing this article is to advocate creating a safe space and a welcoming environment in the open source community. As developers we should respect one another and this includes contributing to open source projects. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-few-bad-apples-make-it-bad-for-everyone"&gt;
  &lt;/a&gt;
  A few bad apples make it bad for everyone
&lt;/h2&gt;

&lt;p&gt;Any good open source project will have a detailed README.md and a CONTRIBUTING.md in the repo. It is important to create a positive environment for contributors. However, negative and toxic behavior can push contributors away from a project.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-commits-and-documentation-are-not-for-harassment"&gt;
  &lt;/a&gt;
  Git commits and documentation are not for harassment
&lt;/h2&gt;

&lt;p&gt;Commits and proper documentation are used to document changes in a project. The purpose is not to bully or harass individuals who made a mistake. This can deter contributors to contribute for another project. Examples of a toxic open source environment was calling out people's first name in the commits, putting down contributors, taking credit and not acknowledging  the work of others. I have been on the receiving end and the outcome was not pretty.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-code-of-conduct-is-needed"&gt;
  &lt;/a&gt;
  A code of conduct is needed
&lt;/h2&gt;

&lt;p&gt;If you want multiple contributors to your open source project having clear guidelines for contributors is essential. Adding a code of conduct on my part was to make my projects welcome to anyone who wants to contribute. You can choose to adopt a code of conduct that reflects your community standards.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Code of Conducts are meant to create an inclusive environment. Having one creates boundaries for open source projects and makes sure everyone follows the guidelines when contributing. Encouraging participation in the community and creating a harassment free environment makes contributors feel welcome. I would welcome any contributions to a project.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-code-of-conduct-to-your-project"&gt;Adding a code of conduct in GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://opensource.guide/code-of-conduct/#:~:text=as%20a%20maintainer-,Why%20do%20I%20need%20a%20code%20of%20conduct%3F,just%20your%20participants%2C%20but%20yourself."&gt;Your Code of Conduct&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stars.github.com/code-of-conduct/"&gt;Example of Code of Conduct&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>opensource</category>
      <category>sideprojects</category>
      <category>github</category>
    </item>
    <item>
      <title>As A Front-End Developer in 2021</title>
      <author>Danish Saleem</author>
      <pubDate>Tue, 18 May 2021 13:56:01 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/as-a-front-end-developer-in-2021-54k4</link>
      <guid>https://dev.to/mrdanishsaleem/as-a-front-end-developer-in-2021-54k4</guid>
      <description>&lt;p&gt;I've compiled a list of some things I think it will be useful to learn for front-end developers in 2021.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-the-basics"&gt;
  &lt;/a&gt;
  1. The Basics
&lt;/h3&gt;

&lt;p&gt;A good place to start is going back to the basic. When was the last time you wrote simple plain HTML, CSS &amp;amp; JavaScript?&lt;/p&gt;

&lt;p&gt;If it's been a while it might be time to revisit and make sure you're up to date with the latest standards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-libraries-frameworks"&gt;
  &lt;/a&gt;
  2. Libraries / Frameworks
&lt;/h3&gt;

&lt;p&gt;JavaScript frameworks / libraries, like &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;, and &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;, are very popular at the moment so it's a good idea to try out at least one of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-static-site-generators"&gt;
  &lt;/a&gt;
  3. Static Site Generators
&lt;/h3&gt;

&lt;p&gt;Static site generators are also quite popular and work well for smaller projects.&lt;/p&gt;

&lt;p&gt;There are a lot of static site generators out there but I would recommend you try out &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt;, &lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; or &lt;a href="https://www.11ty.dev/"&gt;11ty&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-progressive-web-apps"&gt;
  &lt;/a&gt;
  4. Progressive Web Apps
&lt;/h3&gt;

&lt;p&gt;PWA's have been around for a while but with more and more focus being put on website performance it's a good opportunity to learn something new &amp;amp; improve your projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-graphql"&gt;
  &lt;/a&gt;
  5. GraphQL
&lt;/h3&gt;

&lt;p&gt;If you're working with data then you should definitely give &lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt; a try. It also pairs very well with JavaScript frameworks and static site generators.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-automated-testing"&gt;
  &lt;/a&gt;
  6. Automated Testing
&lt;/h3&gt;

&lt;p&gt;All production code should have some automated tests, so if testing isn't your strong suite then it might be time to skill up. &lt;a href="https://jestjs.io/"&gt;Jest tests&lt;/a&gt; work well with JavaScript frameworks and if you're looking for some end-to-end tests try out &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; and &lt;a href="https://garris.github.io/BackstopJS/"&gt;Backstop&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any additional suggestions leave them in the comments and share what you will be learning this year.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Adding ESLint to an Angular Micro Frontend architecture</title>
      <author>Petar Gar≈æina</author>
      <pubDate>Tue, 18 May 2021 13:47:21 +0000</pubDate>
      <link>https://dev.to/pgarzina/adding-eslint-to-an-angular-micro-frontend-architecture-161g</link>
      <guid>https://dev.to/pgarzina/adding-eslint-to-an-angular-micro-frontend-architecture-161g</guid>
      <description>&lt;p&gt;Recently we moved our platform from a mono repo to a micro frontend architecture. One of the things we wanted to add was a base linter that is shared across our apps to ensure a more standardized code as both the platform and the number of micro applications expand.&lt;/p&gt;

&lt;p&gt;In this post I'll share the basic rundown of the things we had to do in order to get the linter up and running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-transition-from-tslint-to%C2%A0eslint"&gt;
  &lt;/a&gt;
  1. Transition from TSLint to¬†ESLint
&lt;/h2&gt;

&lt;p&gt;As noted in the ng lint &lt;a href="https://angular.io/cli/lint"&gt;Angular Docs&lt;/a&gt;, &lt;a href="https://palantir.github.io/tslint/"&gt;TSLint&lt;/a&gt; is being deprecated in favor of &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt;. The migration is rather straightforward and boils down to these two lines:&lt;/p&gt;

&lt;p&gt;installing the schematics&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng add @angular-eslint/schematics&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and running the converter&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng g @angular-eslint/schematics:convert-tslint-to-eslint&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For a more detailed migration guide, see this article: &lt;a href="https://dev.to/gsarciotto/migrating-and-configuring-eslint-with-angular-11-3fg1"&gt;https://dev.to/gsarciotto/migrating-and-configuring-eslint-with-angular-11-3fg1&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-add-superlinter-to-github%C2%A0actions"&gt;
  &lt;/a&gt;
  2. Add Super-Linter to GitHub¬†Actions
&lt;/h2&gt;

&lt;p&gt;Setting up &lt;a href="https://github.com/github/super-linter"&gt;Super-Linter&lt;/a&gt; was super easy, since we already had a workflows &lt;code&gt;test-pull-req.yml&lt;/code&gt; file that tests our build on each pull request. Adding the linter was merely adding another step to the process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Test And Lint Pull Request&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Lint Code Base&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;github/super-linter@v3&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;NODE_ENV&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;production&lt;/span&gt;
          &lt;span class="na"&gt;VALIDATE_ALL_CODEBASE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
          &lt;span class="na"&gt;DEFAULT_BRANCH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;LINTER_RULES_PATH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;
          &lt;span class="na"&gt;TYPESCRIPT_ES_CONFIG_FILE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.eslintrc.js&lt;/span&gt;
          &lt;span class="na"&gt;VALIDATE_TYPESCRIPT_ES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="nn"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Super-Linter &lt;a href="https://github.com/github/super-linter"&gt;docs&lt;/a&gt; are pretty self explanatory, the only additional thing we added here is the &lt;code&gt;NODE_ENV&lt;/code&gt; variable, that will be used a bit later. The &lt;code&gt;VALIDATE_ALL_CODEBASE&lt;/code&gt; variable came in nicely as the linter lints only files changed, so it makes adding new linter rules a bit more easier.&lt;/p&gt;

&lt;p&gt;At this point you are good to go, you have migrated to the new ESLint and your files are being linted on each Pull Request. Tap yourself on the back!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-share-and-extend-the-base-lint%C2%A0rules"&gt;
  &lt;/a&gt;
  3. Share and extend the base lint¬†rules
&lt;/h2&gt;

&lt;p&gt;Since we have around 10 applications, adding or changing a rule requires us to change it in each of the 10 applications; ain't nobody got time for that!&lt;/p&gt;

&lt;p&gt;When we switched to the micro frontend platform we started utilizing our own Angular library for some of the configs, components, pipes and services that we use around the platform. We also keep a part of our &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt;(‚ù§) config in our libraries &lt;code&gt;assets&lt;/code&gt; folder, so that was the obvious place to put our base lint config as well.&lt;/p&gt;

&lt;p&gt;One thing to note here is, to make your library include the &lt;code&gt;assets&lt;/code&gt; folder in the final &lt;code&gt;dist&lt;/code&gt; you have to explicitly tell it to.&lt;/p&gt;

&lt;p&gt;This happens in the libraries &lt;code&gt;ng-package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"../../dist/app-library"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"assets"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"./assets"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lib"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"entryFile"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src/public-api.ts"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now each application's &lt;code&gt;eslintrc.js&lt;/code&gt; can reference and extend the &lt;code&gt;base-eslint.js&lt;/code&gt; using the &lt;code&gt;extends&lt;/code&gt; property&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./node_modules/@cognism/app-library/assets/configs/linter/base-eslint.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;],&lt;/span&gt;
 &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-add-application-specific%C2%A0rules"&gt;
  &lt;/a&gt;
  4. Add application specific¬†rules
&lt;/h2&gt;

&lt;p&gt;This is how our most basic &lt;code&gt;eslintrc.js&lt;/code&gt; config looks like in one of our micro applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;extends&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./node_modules/@cognism/app-library/assets/configs/linter/base-eslint.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;],&lt;/span&gt;
 &lt;span class="na"&gt;overrides&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular-eslint/component-selector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;element&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app-nav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;kebab-case&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular-eslint/directive-selector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;attribute&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appNav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;camelCase&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, first we extend our &lt;code&gt;base-eslint.js&lt;/code&gt; rules and then we override it with our application specific rules. In this case we just want to have application specific prefixes for both components and directives.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-add-environment-dependent-rules"&gt;
  &lt;/a&gt;
  5. Add environment dependent rules
&lt;/h2&gt;

&lt;p&gt;The idea here was to enable different rule behaviors depending on the environment. For example the &lt;code&gt;console.log&lt;/code&gt;. We don't want the log statement committed to the main branch, but we also don't want to give out errors to developers while writing logs in their local environment.&lt;/p&gt;

&lt;p&gt;The easiest way to do it was by simply using a ternary operator inside the lint file. Note that your config file must be in¬†&lt;code&gt;.js&lt;/code&gt; format and not in the default¬†&lt;code&gt;.json&lt;/code&gt; format to be able to do this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
      &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@typescript-eslint/naming-convention&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;selector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;enumMember&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;format&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UPPER_CASE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular-eslint/no-empty-lifecycle-method&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;no-console&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NODE_ENV&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;production&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;warn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, this is where the &lt;code&gt;NODE_ENV&lt;/code&gt; kicks in which we defined in our GitHub Actions &lt;code&gt;test-pull-req.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;We did implement different environments this way, but are also aware that it might get messy with a lot of ternaries in different rules. If that comes to be the case, we ll just start using two files, eg. &lt;code&gt;eslintrc.js&lt;/code&gt; and &lt;code&gt;prod-eslintrc.js&lt;/code&gt; and the &lt;code&gt;test-pull-req.yml&lt;/code&gt; file will always point to &lt;code&gt;prod-eslintrc.js&lt;/code&gt; while in development we'll use &lt;code&gt;eslintrc.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-there-you-have-it"&gt;
  &lt;/a&gt;
  6. There you have it!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We used single-spa &lt;a href="https://single-spa.js.org/"&gt;https://single-spa.js.org/&lt;/a&gt; to move our monolith to the front-end microservices world.&lt;/li&gt;
&lt;li&gt;The Angular version used was v11.&lt;/li&gt;
&lt;li&gt;If you need any additional info feel free to reach out.&lt;/li&gt;
&lt;li&gt;Any comments and improvements are welcome.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Feel free to connect üëã&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/GarzinaPetar"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/pgarzina/"&gt;Instagram&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/petar-garzina/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>eslint</category>
      <category>microfrontend</category>
    </item>
    <item>
      <title>Jekyll - Turn your static files into static websites</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 18 May 2021 13:40:13 +0000</pubDate>
      <link>https://dev.to/adaendra/jekyll-turn-your-static-files-into-static-websites-2fbf</link>
      <guid>https://dev.to/adaendra/jekyll-turn-your-static-files-into-static-websites-2fbf</guid>
      <description>&lt;p&gt;Discovered recently, &lt;strong&gt;Jekyll&lt;/strong&gt; is a really cool tool that will easily help you create a blog or static website!&lt;/p&gt;

&lt;p&gt;As we can see in the &lt;a href="https://jekyllrb.com/showcase/"&gt;Jekyll showcase&lt;/a&gt;, we can find really cool websites like : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devices.netflix.com/en/"&gt;Netflix Devices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://worldstatisticsday.org/"&gt;UN World Statistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twitchcon.com/"&gt;TwitchCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lab.github.com/"&gt;GitHub on demand training&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9_jNBKlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6q7f7l5kox184pv1j8x.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9_jNBKlN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6q7f7l5kox184pv1j8x.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-advantages-of-jekyll"&gt;
  &lt;/a&gt;
  What are the advantages of Jekyll?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Markdown-based&lt;/li&gt;
&lt;li&gt;A lot of free themes are available&lt;/li&gt;
&lt;li&gt;You can easily use it with Github Pages to publish your site or blog for free!&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#why-jekyll-rather-all-the-other-tools-to-generate-a-site-from-markdown"&gt;
  &lt;/a&gt;
  Why Jekyll rather all the other tools to generate a site from markdown?
&lt;/h2&gt;

&lt;p&gt;Generally, the other tools which generates static websites from markdown are made for documentation purpose. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jekyll will allow you to create a blog.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So if you want to have a static website for your documentation, maybe Jekyll is not the best choice.&lt;/p&gt;




&lt;p&gt;About how to install it and how to use it, please go check the website of jekyll which contains all what you need.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jekyllrb.com/docs/installation/"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jekyllrb.com/docs/step-by-step/01-setup/"&gt;Tutorial to use Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://jekyllrb.com/"&gt;https://jekyllrb.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Jekyll themes: 

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jekyllthemes.io/free"&gt;https://jekyllthemes.io/free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jekyllthemes.org/"&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Video tutorial : &lt;a href="https://www.youtube.com/watch?v=T1itpPvFWHI"&gt;&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=T1itpPvFWHI"&gt;https://www.youtube.com/watch?v=T1itpPvFWHI&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you!&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Opensource Introduction to SQL eBook üí°</title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 18 May 2021 13:32:32 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/opensource-introduction-to-sql-ebook-4kf5</link>
      <guid>https://dev.to/bobbyiliev/opensource-introduction-to-sql-ebook-4kf5</guid>
      <description>&lt;p&gt;This is an open-source introduction to SQL guide that will help you learn the basics of SQL and start using relational databases for your SysOps, DevOps, and Dev projects. No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use SQL at some point in your career.&lt;/p&gt;

&lt;p&gt;The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of SQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-project"&gt;
  &lt;/a&gt;
  üìú GitHub Project
&lt;/h2&gt;

&lt;p&gt;If you enjoy the eBook, make sure to star it on &lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  üöÄ Download
&lt;/h2&gt;

&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql/raw/main/ebook/en/export/introduction-to-sql-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapters"&gt;
  &lt;/a&gt;
  üìò Chapters
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tables&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic Syntax&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SELECT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHERE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ORDER and GROUP BY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;INSERT&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JOIN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The MySQL dump command&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sponsors"&gt;
  &lt;/a&gt;
  üåü Sponsors
&lt;/h2&gt;

&lt;p&gt;This book is made possible thanks to these fantastic companies!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digitalocean"&gt;
  &lt;/a&gt;
  üíô DigitalOcean
&lt;/h3&gt;

&lt;p&gt;DigitalOcean is a cloud services platform delivering the simplicity developers love and businesses trust to run production applications at scale.&lt;/p&gt;

&lt;p&gt;It provides highly available, secure, and scalable compute, storage, and networking solutions that help developers build great software faster.&lt;/p&gt;

&lt;p&gt;Founded in 2012 with offices in New York and Cambridge, MA, DigitalOcean offers transparent and affordable pricing, an elegant user interface, and one of the largest libraries of open source resources available.&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.digitalocean.com"&gt;https://www.digitalocean.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/digitalocean"&gt;@digitalocean&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;p&gt;If you are new to DigitalOcean, you can get a free $100 credit and spin up your own servers via this referral link here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devdojo"&gt;
  &lt;/a&gt;
  üë©‚Äçüíª DevDojo
&lt;/h3&gt;

&lt;p&gt;The DevDojo is a resource to learn all things web development and web design. Learn on your lunch break or wake up and enjoy a cup of coffee with us to learn something new.&lt;/p&gt;

&lt;p&gt;Join this developer community, and we can all learn together, build together, and grow together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com?ref=bobbyiliev"&gt;Join DevDojo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.devdojo.com?ref=bobbyiliev"&gt;https://www.devdojo.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/thedevdojo"&gt;@thedevdojo&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mini-video-course"&gt;
  &lt;/a&gt;
  üìπ Mini Video Course
&lt;/h2&gt;

&lt;p&gt;I am planning on recording a mini video course soon based on the eBook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-the-author"&gt;
  &lt;/a&gt;
  üëã About the author
&lt;/h2&gt;

&lt;p&gt;My name is Bobby Iliev, and I have been working as a Linux DevOps Engineer since 2014. I am an avid Linux lover and supporter of the open-source movement philosophy. I am always doing that which I cannot do in order that I may learn how to do it, and I believe in sharing knowledge.&lt;/p&gt;

&lt;p&gt;I think it's essential always to keep professional and surround yourself with good people, work hard, and be nice to everyone. You have to perform at a consistently higher level than others. That's the mark of a true professional.&lt;/p&gt;

&lt;p&gt;For more information, please visit my blog at &lt;a href="https://bobbyiliev.com"&gt;https://bobbyiliev.com&lt;/a&gt;, follow me on Twitter &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCQWmdHTeAO0UvaNqve9udRw"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case that you want to support me you can Buy Me a Coffee here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bobbyiliev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kziPr3-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pdf-generation-tool"&gt;
  &lt;/a&gt;
  üî• PDF Generation Tool
&lt;/h2&gt;

&lt;p&gt;The project uses &lt;a href="https://github.com/themsaid/ibis/"&gt;Ibis&lt;/a&gt; developed by &lt;a href="https://github.com/themsaid"&gt;Mohamed Said&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ibis is a PHP tool that helps you write eBooks in markdown.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-cover"&gt;
  &lt;/a&gt;
  üé® Book Cover
&lt;/h2&gt;

&lt;p&gt;The cover for this ebook was created with &lt;a href="https://www.canva.com/join/determined-cork-learn"&gt;Canva.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you ever need to create a graphic, poster, invitation, logo, presentation ‚Äì or anything that looks good ‚Äî give Canva a go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-books"&gt;
  &lt;/a&gt;
  üìñ Other books
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  ü§≤ Contributing
&lt;/h2&gt;

&lt;p&gt;All contributions üçø are more than welcome! &lt;/p&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>webdev</category>
      <category>books</category>
    </item>
  </channel>
</rss>
